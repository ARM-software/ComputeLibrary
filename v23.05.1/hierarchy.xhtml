<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Class Hierarchy</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('hierarchy.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Class Hierarchy</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock">
<p><a href="inherits.xhtml">Go to the graphical class hierarchy</a></p>
This inheritance list is sorted roughly, but not completely, alphabetically:</div><div class="directory">
<div class="levels">[detail level <span onclick="javascript:toggleLevel(1);">1</span><span onclick="javascript:toggleLevel(2);">2</span><span onclick="javascript:toggleLevel(3);">3</span><span onclick="javascript:toggleLevel(4);">4</span><span onclick="javascript:toggleLevel(5);">5</span><span onclick="javascript:toggleLevel(6);">6</span>]</div><table class="directory">
<tr id="row_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml" target="_self">AbsoluteTolerance&lt; T &gt;</a></td><td class="desc">Class reprensenting an absolute tolerance value </td></tr>
<tr id="row_1_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml" target="_self">AbsoluteTolerance&lt; U &gt;</a></td><td class="desc"></td></tr>
<tr id="row_2_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_activation_descriptor.xhtml" target="_self">AclActivationDescriptor</a></td><td class="desc"></td></tr>
<tr id="row_3_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_allocator.xhtml" target="_self">AclAllocator</a></td><td class="desc"></td></tr>
<tr id="row_4_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_4_" class="arrow" onclick="toggleFolder('4_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_context__.xhtml" target="_self">AclContext_</a></td><td class="desc"></td></tr>
<tr id="row_4_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_4_0_" class="arrow" onclick="toggleFolder('4_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_context.xhtml" target="_self">IContext</a></td><td class="desc">Context interface </td></tr>
<tr id="row_4_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml" target="_self">CpuContext</a></td><td class="desc">CPU context implementation class </td></tr>
<tr id="row_4_0_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_context.xhtml" target="_self">ClContext</a></td><td class="desc">OpenCL context implementation class </td></tr>
<tr id="row_5_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_context_options.xhtml" target="_self">AclContextOptions</a></td><td class="desc"></td></tr>
<tr id="row_6_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_6_" class="arrow" onclick="toggleFolder('6_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_operator__.xhtml" target="_self">AclOperator_</a></td><td class="desc"></td></tr>
<tr id="row_6_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_operator.xhtml" target="_self">IOperator</a></td><td class="desc">Base class specifying the operator interface </td></tr>
<tr id="row_7_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_7_" class="arrow" onclick="toggleFolder('7_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_queue__.xhtml" target="_self">AclQueue_</a></td><td class="desc"></td></tr>
<tr id="row_7_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_7_0_" class="arrow" onclick="toggleFolder('7_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_queue.xhtml" target="_self">IQueue</a></td><td class="desc">Base class specifying the queue interface </td></tr>
<tr id="row_7_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_queue.xhtml" target="_self">CpuQueue</a></td><td class="desc">CPU queue implementation class </td></tr>
<tr id="row_7_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_queue.xhtml" target="_self">ClQueue</a></td><td class="desc">OpenCL queue implementation class </td></tr>
<tr id="row_8_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_queue_options.xhtml" target="_self">AclQueueOptions</a></td><td class="desc"></td></tr>
<tr id="row_9_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_9_" class="arrow" onclick="toggleFolder('9_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_tensor__.xhtml" target="_self">AclTensor_</a></td><td class="desc"></td></tr>
<tr id="row_9_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_9_0_" class="arrow" onclick="toggleFolder('9_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor_v2.xhtml" target="_self">ITensorV2</a></td><td class="desc">Base class specifying the tensor interface </td></tr>
<tr id="row_9_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_tensor.xhtml" target="_self">CpuTensor</a></td><td class="desc">CPU tensor implementation class </td></tr>
<tr id="row_9_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml" target="_self">ClTensor</a></td><td class="desc">OpenCL tensor implementation class </td></tr>
<tr id="row_10_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_tensor_descriptor.xhtml" target="_self">AclTensorDescriptor</a></td><td class="desc"></td></tr>
<tr id="row_11_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_11_" class="arrow" onclick="toggleFolder('11_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_tensor_pack__.xhtml" target="_self">AclTensorPack_</a></td><td class="desc"></td></tr>
<tr id="row_11_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_pack.xhtml" target="_self">TensorPack</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> packing service </td></tr>
<tr id="row_12_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_acl_version.xhtml" target="_self">AclVersion</a></td><td class="desc">Semantic versioning information </td></tr>
<tr id="row_13_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1_act_fp_impl_params.xhtml" target="_self">ActFpImplParams</a></td><td class="desc">Constant parameters needed by the activation implementation </td></tr>
<tr id="row_14_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_activation.xhtml" target="_self">Activation</a></td><td class="desc"></td></tr>
<tr id="row_15_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_activation_data_type_i_s_a_selector_data.xhtml" target="_self">ActivationDataTypeISASelectorData</a></td><td class="desc"></td></tr>
<tr id="row_16_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_activation_kernel_1_1_activation_kernel.xhtml" target="_self">CpuActivationKernel::ActivationKernel</a></td><td class="desc"></td></tr>
<tr id="row_17_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml" target="_self">ActivationLayerInfo</a></td><td class="desc">Activation Layer Information class </td></tr>
<tr id="row_18_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml" target="_self">CpuAddKernel::AddKernel</a></td><td class="desc"></td></tr>
<tr id="row_19_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_mul_add_kernel_1_1_add_mul_add_kernel.xhtml" target="_self">CpuAddMulAddKernel::AddMulAddKernel</a></td><td class="desc"></td></tr>
<tr id="row_20_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_allocator_wrapper.xhtml" target="_self">AllocatorWrapper</a></td><td class="desc">Default malloc allocator implementation </td></tr>
<tr id="row_21_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml" target="_self">ArgumentPack&lt; T &gt;</a></td><td class="desc">This is a generic class that packs the arguments of an operator </td></tr>
<tr id="row_22_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml" target="_self">ArgumentPack&lt; arm_compute::ITensorInfo &gt;</a></td><td class="desc"></td></tr>
<tr id="row_23_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml" target="_self">AsmGemmInfo</a></td><td class="desc"></td></tr>
<tr id="row_24_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_assets_library.xhtml" target="_self">AssetsLibrary</a></td><td class="desc">Factory class to create and fill tensors </td></tr>
<tr id="row_25_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml" target="_self">AuxMemoryInfo</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> information for tensors with <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">MemoryType::Auxiliary</a> </td></tr>
<tr id="row_26_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1detail_1_1_backend_registrar.xhtml" target="_self">BackendRegistrar&lt; T &gt;</a></td><td class="desc">Helper class to statically register a backend </td></tr>
<tr id="row_27_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_backend_registry.xhtml" target="_self">BackendRegistry</a></td><td class="desc">Registry holding all the supported backends </td></tr>
<tr id="row_28_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1barrier.xhtml" target="_self">barrier</a></td><td class="desc"></td></tr>
<tr id="row_29_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1bfloat16.xhtml" target="_self">bfloat16</a></td><td class="desc">Brain floating point representation class </td></tr>
<tr id="row_30_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_blob_info.xhtml" target="_self">BlobInfo</a></td><td class="desc">Meta-data information for each blob </td></tr>
<tr id="row_31_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_border_size.xhtml" target="_self">BorderSize</a></td><td class="desc">Container for 2D border size </td></tr>
<tr id="row_32_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_bounding_box_transform_info.xhtml" target="_self">BoundingBoxTransformInfo</a></td><td class="desc">Bounding Box Transform information class </td></tr>
<tr id="row_33_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_box_n_m_s_limit_info.xhtml" target="_self">BoxNMSLimitInfo</a></td><td class="desc">BoxWithNonMaximaSuppressionLimit Information class </td></tr>
<tr id="row_34_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1brelu.xhtml" target="_self">brelu&lt; T, S &gt;</a></td><td class="desc">Bounded RELU activation object </td></tr>
<tr id="row_35_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml" target="_self">CastAttributes</a></td><td class="desc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator </td></tr>
<tr id="row_36_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cast_data_type_i_s_a_selector_data.xhtml" target="_self">CastDataTypeISASelectorData</a></td><td class="desc"></td></tr>
<tr id="row_37_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel_1_1_cast_kernel.xhtml" target="_self">CpuCastKernel::CastKernel</a></td><td class="desc"></td></tr>
<tr id="row_38_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml" target="_self">CharPosition</a></td><td class="desc"></td></tr>
<tr id="row_39_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_clamp_attributes.xhtml" target="_self">ClampAttributes</a></td><td class="desc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator </td></tr>
<tr id="row_40_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml" target="_self">CLAuxTensorHandler</a></td><td class="desc"></td></tr>
<tr id="row_41_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml" target="_self">CLBuildOptions</a></td><td class="desc">Build options </td></tr>
<tr id="row_42_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml" target="_self">CLCompileContext</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml" title="CLCompileContext class.">CLCompileContext</a> class </td></tr>
<tr id="row_43_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_cast_settings.xhtml" target="_self">ClComponentCastSettings</a></td><td class="desc">Component specific settings </td></tr>
<tr id="row_44_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml" target="_self">ClComponentDepthwiseConv2dSettings</a></td><td class="desc">Component specific settings </td></tr>
<tr id="row_45_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings.xhtml" target="_self">ClComponentDirectConv2dSettings</a></td><td class="desc">Component specific settings </td></tr>
<tr id="row_46_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_l_device_options.xhtml" target="_self">CLDeviceOptions</a></td><td class="desc">OpenCL device options </td></tr>
<tr id="row_47_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_config_array.xhtml" target="_self">ClDirectConvConfigArray&lt; T &gt;</a></td><td class="desc">Basic container for the OpenCL direct convolution configuration functions </td></tr>
<tr id="row_48_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_kernel_configuration_factory.xhtml" target="_self">ClDirectConvKernelConfigurationFactory</a></td><td class="desc">ClDirectConvolution factory class </td></tr>
<tr id="row_49_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_config_array.xhtml" target="_self">ClDWCNativeConfigArray&lt; T &gt;</a></td><td class="desc">Basic container for the OpenCL depthwise convolution configuration functions </td></tr>
<tr id="row_50_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_kernel_configuration_factory.xhtml" target="_self">ClDWCNativeKernelConfigurationFactory</a></td><td class="desc"><a class="el" href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_kernel_configuration_factory.xhtml" title="ClDWCNativeKernelConfigurationFactory factory class.">ClDWCNativeKernelConfigurationFactory</a> factory class </td></tr>
<tr id="row_51_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_function_factory.xhtml" target="_self">CLFunctionFactory</a></td><td class="desc">Factory for generating OpenCL backend functions </td></tr>
<tr id="row_52_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_c_l_g_e_m_m_config_array.xhtml" target="_self">CLGEMMConfigArray&lt; T &gt;</a></td><td class="desc">Basic container for the OpenCL GEMM configuration functions </td></tr>
<tr id="row_53_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_heuristics_handle.xhtml" target="_self">CLGEMMHeuristicsHandle</a></td><td class="desc">Handle for loading and retrieving GEMM heuristics </td></tr>
<tr id="row_54_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_kernel_selection_factory.xhtml" target="_self">CLGEMMKernelSelectionFactory</a></td><td class="desc">CLGEMMKernelSelection factory class </td></tr>
<tr id="row_55_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_l_g_e_m_m_kernel_selection_params.xhtml" target="_self">CLGEMMKernelSelectionParams</a></td><td class="desc">OpenCL GEMM kernel selection parameters </td></tr>
<tr id="row_56_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_native_kernel_configuration_factory.xhtml" target="_self">ClGemmNativeKernelConfigurationFactory</a></td><td class="desc">CLGEMMNative factory class </td></tr>
<tr id="row_57_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_reshaped_kernel_configuration_factory.xhtml" target="_self">ClGemmReshapedKernelConfigurationFactory</a></td><td class="desc">CLGEMMReshaped factory class </td></tr>
<tr id="row_58_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_reshaped_only_rhs_kernel_configuration_factory.xhtml" target="_self">ClGemmReshapedOnlyRhsKernelConfigurationFactory</a></td><td class="desc">CLGEMMReshapedOnlyRHS factory class </td></tr>
<tr id="row_59_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_config_array.xhtml" target="_self">ClIndirectConvConfigArray&lt; T &gt;</a></td><td class="desc">Basic container for the OpenCL indirect convolution configuration functions </td></tr>
<tr id="row_60_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_kernel_configuration_factory.xhtml" target="_self">ClIndirectConvKernelConfigurationFactory</a></td><td class="desc">ClIndirectConvolution factory class </td></tr>
<tr id="row_61_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml" target="_self">ClKernelLibrary</a></td><td class="desc"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml" title="ClKernelLibrary contains all the OpenCL kernels that are used throughout the library.">ClKernelLibrary</a> contains all the OpenCL kernels that are used throughout the library </td></tr>
<tr id="row_62_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" target="_self">CLKernelLibrary</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" title="CLKernelLibrary class.">CLKernelLibrary</a> class </td></tr>
<tr id="row_63_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_config_array.xhtml" target="_self">ClMatMulNativeConfigArray&lt; T &gt;</a></td><td class="desc">Basic container for the OpenCL MatMul Native configuration functions </td></tr>
<tr id="row_64_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_kernel_configuration_factory.xhtml" target="_self">ClMatMulNativeKernelConfigurationFactory</a></td><td class="desc">ClMatMul configuration factory class </td></tr>
<tr id="row_65_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_node_validator.xhtml" target="_self">CLNodeValidator</a></td><td class="desc"></td></tr>
<tr id="row_66_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1opencl_1_1_cl_kernel_library_1_1_cl_program_info.xhtml" target="_self">ClKernelLibrary::ClProgramInfo</a></td><td class="desc">Structure to encapsulte program related information </td></tr>
<tr id="row_67_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_l_quantization.xhtml" target="_self">CLQuantization</a></td><td class="desc">OpenCL quantization data </td></tr>
<tr id="row_68_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" target="_self">CLScheduler</a></td><td class="desc">Provides global access to a CL context and command queue </td></tr>
<tr id="row_69_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml" target="_self">CLSymbols</a></td><td class="desc">Class for loading OpenCL symbols </td></tr>
<tr id="row_70_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_l_tuning_info.xhtml" target="_self">CLTuningInfo</a></td><td class="desc"></td></tr>
<tr id="row_71_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml" target="_self">CLTuningParams</a></td><td class="desc">&lt; OpenCL tuner parameters </td></tr>
<tr id="row_72_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml" target="_self">ClWorkloadRuntime</a></td><td class="desc">OpenCL runtime to run a workload </td></tr>
<tr id="row_73_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml" target="_self">CommandLineParser</a></td><td class="desc">Class to parse command line arguments </td></tr>
<tr id="row_74_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1common__promoted__signed__type.xhtml" target="_self">common_promoted_signed_type&lt; T &gt;</a></td><td class="desc">Find the signed promoted common type </td></tr>
<tr id="row_75_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1common__promoted__unsigned__type.xhtml" target="_self">common_promoted_unsigned_type&lt; T &gt;</a></td><td class="desc">Find the unsigned promoted common type </td></tr>
<tr id="row_76_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classgemm__tuner_1_1_common_gemm_example_options.xhtml" target="_self">CommonGemmExampleOptions</a></td><td class="desc">Common command line options used to configure the gemm examples </td></tr>
<tr id="row_77_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structgemm__tuner_1_1_common_gemm_example_params.xhtml" target="_self">CommonGemmExampleParams</a></td><td class="desc">Structure holding all the common gemm example parameters </td></tr>
<tr id="row_78_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml" target="_self">CommonGraphOptions</a></td><td class="desc">Common command line options used to configure the graph examples </td></tr>
<tr id="row_79_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml" target="_self">CommonGraphParams</a></td><td class="desc">Structure holding all the common graph parameters </td></tr>
<tr id="row_80_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_common_graph_validate_options.xhtml" target="_self">CommonGraphValidateOptions</a></td><td class="desc"><a class="el" href="classarm__compute_1_1utils_1_1_common_graph_validate_options.xhtml" title="CommonGraphValidateOptions command line options used to configure the graph examples.">CommonGraphValidateOptions</a> command line options used to configure the graph examples </td></tr>
<tr id="row_81_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml" target="_self">CommonOptions</a></td><td class="desc">Common command line options used to configure the framework </td></tr>
<tr id="row_82_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_82_" class="arrow" onclick="toggleFolder('82_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1utils_1_1_common_params.xhtml" target="_self">CommonParams</a></td><td class="desc">Structure holding all the graph <a class="el" href="classarm__compute_1_1utils_1_1_example.xhtml" title="Abstract Example class.">Example</a> parameters </td></tr>
<tr id="row_82_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1utils_1_1_example_params.xhtml" target="_self">ExampleParams</a></td><td class="desc">Structure holding all the graph <a class="el" href="classarm__compute_1_1utils_1_1_example.xhtml" title="Abstract Example class.">Example</a> parameters </td></tr>
<tr id="row_83_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml" target="_self">CommonQuery</a></td><td class="desc">A collection of adaptor functions that enable the auto selection between mlgo-based heuristics and default heuristics </td></tr>
<tr id="row_84_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare.xhtml" target="_self">compare&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_85_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare__base.xhtml" target="_self">compare_base&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_86_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_86_" class="arrow" onclick="toggleFolder('86_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare__base.xhtml" target="_self">compare_base&lt; AbsoluteTolerance&lt; U &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_86_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_absolute_tolerance_3_01_u_01_4_01_4.xhtml" target="_self">compare&lt; AbsoluteTolerance&lt; U &gt; &gt;</a></td><td class="desc">Compare values with an absolute tolerance </td></tr>
<tr id="row_87_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_87_" class="arrow" onclick="toggleFolder('87_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare__base.xhtml" target="_self">compare_base&lt; RelativeTolerance&lt; U &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_87_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_relative_tolerance_3_01_u_01_4_01_4.xhtml" target="_self">compare&lt; RelativeTolerance&lt; U &gt; &gt;</a></td><td class="desc">Compare values with a relative tolerance </td></tr>
<tr id="row_88_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml" target="_self">compare_dimension&lt; T &gt;</a></td><td class="desc">Function to compare two <a class="el" href="classarm__compute_1_1_dimensions.xhtml">Dimensions</a> objects and throw an error on mismatch </td></tr>
<tr id="row_89_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_compute_anchors_info.xhtml" target="_self">ComputeAnchorsInfo</a></td><td class="desc">ComputeAnchors information class </td></tr>
<tr id="row_90_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml" target="_self">ConcatLayerDescriptor</a></td><td class="desc">Concatenate layer descriptor </td></tr>
<tr id="row_91_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1_condition.xhtml" target="_self">Condition</a></td><td class="desc">A branch condition expression evaluating: feature op threshold </td></tr>
<tr id="row_92_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1_context_type.xhtml" target="_self">ContextType&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_93_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1_context_type_3_01_tensor_01_4.xhtml" target="_self">ContextType&lt; Tensor &gt;</a></td><td class="desc"></td></tr>
<tr id="row_94_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml" target="_self">Conv2dAttributes</a></td><td class="desc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator </td></tr>
<tr id="row_95_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_conv2d_info.xhtml" target="_self">Conv2dInfo</a></td><td class="desc">Descriptor used by the 2d Convolution function </td></tr>
<tr id="row_96_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_conv3d_info.xhtml" target="_self">Conv3dInfo</a></td><td class="desc">Descriptor used by the 3d Convolution function </td></tr>
<tr id="row_97_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_convolution_info.xhtml" target="_self">ConvolutionInfo</a></td><td class="desc"></td></tr>
<tr id="row_98_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_convolution_parameters.xhtml" target="_self">ConvolutionParameters</a></td><td class="desc"></td></tr>
<tr id="row_99_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1utils_1_1_convolution_params.xhtml" target="_self">ConvolutionParams</a></td><td class="desc">Structure holding all the Convolution layer graph parameters </td></tr>
<tr id="row_100_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1convolver.xhtml" target="_self">convolver&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_101_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_101_" class="arrow" onclick="toggleFolder('101_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_conv_post_op_info.xhtml" target="_self">ConvPostOpInfo</a></td><td class="desc">Convolution post operator info </td></tr>
<tr id="row_101_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_conv_post_op_info_activation.xhtml" target="_self">ConvPostOpInfoActivation</a></td><td class="desc"></td></tr>
<tr id="row_101_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_conv_post_op_info_eltwise_add.xhtml" target="_self">ConvPostOpInfoEltwiseAdd</a></td><td class="desc"></td></tr>
<tr id="row_102_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_coordinates2_d.xhtml" target="_self">Coordinates2D</a></td><td class="desc">2D Coordinates structure </td></tr>
<tr id="row_103_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml" target="_self">Coordinates2D</a></td><td class="desc">Coordinate type </td></tr>
<tr id="row_104_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_coordinates3_d.xhtml" target="_self">Coordinates3D</a></td><td class="desc">Coordinate type </td></tr>
<tr id="row_105_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_data_type_i_s_a_selector_data.xhtml" target="_self">CpuAddKernelDataTypeISASelectorData</a></td><td class="desc"></td></tr>
<tr id="row_106_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml" target="_self">CpuAuxTensorHandler</a></td><td class="desc"></td></tr>
<tr id="row_107_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1_cpu_capabilities.xhtml" target="_self">CpuCapabilities</a></td><td class="desc">Structure that encodes the CPU capabilities to be used </td></tr>
<tr id="row_108_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml" target="_self">CPUInfo</a></td><td class="desc"></td></tr>
<tr id="row_109_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml" target="_self">CpuInfo</a></td><td class="desc">Aggregate class that contains CPU related information </td></tr>
<tr id="row_110_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml" target="_self">CpuIsaInfo</a></td><td class="desc">CPU ISA (Instruction Set Architecture) information </td></tr>
<tr id="row_111_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_logits1_d_softmax_kernel.xhtml" target="_self">CpuLogits1DSoftmaxKernel&lt; IS_LOG &gt;</a></td><td class="desc"></td></tr>
<tr id="row_112_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_cpu_mat_mul_settings.xhtml" target="_self">CpuMatMulSettings</a></td><td class="desc">Settings for MatMul Cpu implementation </td></tr>
<tr id="row_113_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1misc_1_1_c_r_t_p.xhtml" target="_self">CRTP&lt; T, Type &gt;</a></td><td class="desc">Curiously recurring template pattern Interface </td></tr>
<tr id="row_114_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_114_" class="arrow" onclick="toggleFolder('114_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml" target="_self">Dataset</a></td><td class="desc">Abstract dataset base class </td></tr>
<tr id="row_114_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml" target="_self">CartesianProductDataset&lt; T, U &gt;</a></td><td class="desc">Implementation of a dataset representing all combinations of values of the input datasets </td></tr>
<tr id="row_114_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset.xhtml" target="_self">JoinDataset&lt; T, U &gt;</a></td><td class="desc">Implementation of a dataset representing the concatenation of the input datasets </td></tr>
<tr id="row_114_2_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_114_2_" class="arrow" onclick="toggleFolder('114_2_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml" target="_self">NamedDataset</a></td><td class="desc">Abstract implementation of a named dataset </td></tr>
<tr id="row_114_2_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; T &gt;</a></td><td class="desc">Implementation of a dataset created from a container </td></tr>
<tr id="row_114_2_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml" target="_self">InitializerListDataset&lt; T &gt;</a></td><td class="desc">Implementation of a dataset created from an initializer list </td></tr>
<tr id="row_114_2_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset.xhtml" target="_self">RangeDataset&lt; T &gt;</a></td><td class="desc">Implementation of a dataset created from a range of values </td></tr>
<tr id="row_114_2_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset.xhtml" target="_self">SingletonDataset&lt; T &gt;</a></td><td class="desc">Implementation of a dataset holding a single value </td></tr>
<tr id="row_114_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset.xhtml" target="_self">ZipDataset&lt; T, U &gt;</a></td><td class="desc">Implementation of a dataset representing pairs of values of the input datasets </td></tr>
<tr id="row_115_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_data_type_data_layout_i_s_a_selector_data.xhtml" target="_self">DataTypeDataLayoutISASelectorData</a></td><td class="desc"></td></tr>
<tr id="row_116_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_data_type_i_s_a_selector_data.xhtml" target="_self">DataTypeISASelectorData</a></td><td class="desc"></td></tr>
<tr id="row_117_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1descriptors_1_1_deconvolution_layer_descriptor.xhtml" target="_self">DeconvolutionLayerDescriptor</a></td><td class="desc">Deconvolution layer descriptor </td></tr>
<tr id="row_118_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1memory_1_1deep__unique__ptr.xhtml" target="_self">deep_unique_ptr&lt; Base &gt;</a></td><td class="desc">A deep-copying unique pointer that also supports polymorphic cloning behavior </td></tr>
<tr id="row_119_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_default_output_stage.xhtml" target="_self">DefaultOutputStage&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_120_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_default_output_stage_3_01int8__t_01_4.xhtml" target="_self">DefaultOutputStage&lt; int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_121_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_default_output_stage.xhtml" target="_self">DefaultOutputStage&lt; TInput &gt;</a></td><td class="desc"></td></tr>
<tr id="row_122_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_default_output_stage_3_01uint8__t_01_4.xhtml" target="_self">DefaultOutputStage&lt; uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_123_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_default_t_accum.xhtml" target="_self">DefaultTAccum&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_124_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_default_t_accum_3_01int8__t_01_4.xhtml" target="_self">DefaultTAccum&lt; int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_125_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_default_t_accum.xhtml" target="_self">DefaultTAccum&lt; TInput &gt;</a></td><td class="desc"></td></tr>
<tr id="row_126_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_default_t_accum_3_01uint8__t_01_4.xhtml" target="_self">DefaultTAccum&lt; uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_127_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml" target="_self">DependencyGraph</a></td><td class="desc">A multi-input (tensors), multi-output (tensors) acyclic directed graph Represented as a doubly-linked adjacency list with the differentiation between source and destination </td></tr>
<tr id="row_128_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_128_" class="arrow" onclick="toggleFolder('128_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>DepthwiseCommon</b></td><td class="desc"></td></tr>
<tr id="row_128_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_128_0_" class="arrow" onclick="toggleFolder('128_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml" target="_self">DepthfirstDriver&lt; TInput, TWeight, TOutput &gt;</a></td><td class="desc"></td></tr>
<tr id="row_128_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_common.xhtml" target="_self">DepthwiseDepthfirstCommon&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_128_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_planar.xhtml" target="_self">DepthwisePlanar&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_128_2_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_128_2_" class="arrow" onclick="toggleFolder('128_2_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml" target="_self">DepthfirstDriver&lt; TInput, TInput, TInput &gt;</a></td><td class="desc"></td></tr>
<tr id="row_128_2_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml" target="_self">DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_128_2_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_128_2_1_" class="arrow" onclick="toggleFolder('128_2_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_common.xhtml" target="_self">DepthwiseDepthfirstCommon&lt; TInput, TInput, TInput, typename DefaultTAccum&lt; TInput &gt;::Type, typename DefaultOutputStage&lt; TInput &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_128_2_1_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst.xhtml" target="_self">DepthwiseDepthfirst&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_128_2_1_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic.xhtml" target="_self">DepthwiseDepthfirstGeneric&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_129_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml" target="_self">DepthwiseConv2dAttributes</a></td><td class="desc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator </td></tr>
<tr id="row_130_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_depthwise_conv2d_native_data_type_i_s_a_selector_data.xhtml" target="_self">DepthwiseConv2dNativeDataTypeISASelectorData</a></td><td class="desc"></td></tr>
<tr id="row_131_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_depthwise_conv2d_native_kernel_1_1_depthwise_conv2d_native_kernel.xhtml" target="_self">CpuDepthwiseConv2dNativeKernel::DepthwiseConv2dNativeKernel</a></td><td class="desc"></td></tr>
<tr id="row_132_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_kernel_call.xhtml" target="_self">DepthwiseDepthfirstGenericKernelCall&lt; OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_133_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_kernel_call_3_01arm__gemm_1_1_requantize32_01_4.xhtml" target="_self">DepthwiseDepthfirstGenericKernelCall&lt; arm_gemm::Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_134_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_kernel_call_3_01_nothing_01_4.xhtml" target="_self">DepthwiseDepthfirstGenericKernelCall&lt; Nothing &gt;</a></td><td class="desc"></td></tr>
<tr id="row_135_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_depthwise_implementation.xhtml" target="_self">DepthwiseImplementation&lt; TInput, TWeight, TOutput, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_136_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_detection_output_layer_info.xhtml" target="_self">DetectionOutputLayerInfo</a></td><td class="desc">Detection Output layer info </td></tr>
<tr id="row_137_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_detection_post_process_layer_info.xhtml" target="_self">DetectionPostProcessLayerInfo</a></td><td class="desc">Detection Output layer info </td></tr>
<tr id="row_138_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_detection_window.xhtml" target="_self">DetectionWindow</a></td><td class="desc">Detection window struct </td></tr>
<tr id="row_139_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_detection_window.xhtml" target="_self">DetectionWindow</a></td><td class="desc">Detection window used for the object detection </td></tr>
<tr id="row_140_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml" target="_self">Window::Dimension</a></td><td class="desc">Describe one of the image's dimensions with a start, end and step </td></tr>
<tr id="row_141_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_dimensions.xhtml" target="_self">Dimensions&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_dimensions.xhtml" title="Dimensions with dimensionality.">Dimensions</a> with dimensionality </td></tr>
<tr id="row_142_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_142_" class="arrow" onclick="toggleFolder('142_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_dimensions.xhtml" target="_self">Dimensions&lt; int &gt;</a></td><td class="desc"></td></tr>
<tr id="row_142_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_coordinates.xhtml" target="_self">Coordinates</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item.">Coordinates</a> of an item </td></tr>
<tr id="row_143_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_143_" class="arrow" onclick="toggleFolder('143_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_dimensions.xhtml" target="_self">Dimensions&lt; size_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_143_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml" target="_self">TensorShape</a></td><td class="desc">Shape of a tensor </td></tr>
<tr id="row_144_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_144_" class="arrow" onclick="toggleFolder('144_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_dimensions.xhtml" target="_self">Dimensions&lt; uint32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_144_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_steps.xhtml" target="_self">Steps</a></td><td class="desc">Class to describe a number of elements in each dimension </td></tr>
<tr id="row_144_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_strides.xhtml" target="_self">Strides</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_strides.xhtml" title="Strides of an item in bytes.">Strides</a> of an item in bytes </td></tr>
<tr id="row_145_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv2d_kernel_1_1_direct_conv2d_kernel.xhtml" target="_self">CpuDirectConv2dKernel::DirectConv2dKernel</a></td><td class="desc"></td></tr>
<tr id="row_146_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv3d_kernel_1_1_direct_conv3d_kernel.xhtml" target="_self">CpuDirectConv3dKernel::DirectConv3dKernel</a></td><td class="desc"></td></tr>
<tr id="row_147_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml" target="_self">DirectConvComputeKernelInfo</a></td><td class="desc">Compute descriptor used by the direct convolution kernel </td></tr>
<tr id="row_148_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml" target="_self">DirectConvolutionLayerOutputStageKernelInfo</a></td><td class="desc">Descriptor used by the direct convolution layer output stage kernels </td></tr>
<tr id="row_149_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1dummy.xhtml" target="_self">dummy&lt; T, S &gt;</a></td><td class="desc">Dummy activation object </td></tr>
<tr id="row_150_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_d_w_c_compute_kernel_info.xhtml" target="_self">DWCComputeKernelInfo</a></td><td class="desc">Compute descriptor used by the depthwise convolution native kernel </td></tr>
<tr id="row_151_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_edge.xhtml" target="_self">Edge</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> <a class="el" href="classarm__compute_1_1graph_1_1_edge.xhtml" title="Graph Edge.">Edge</a> </td></tr>
<tr id="row_152_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml" target="_self">ElementwiseBinaryCommonAttributes</a></td><td class="desc"></td></tr>
<tr id="row_153_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_elementwise_data_type_i_s_a_selector_data.xhtml" target="_self">ElementwiseDataTypeISASelectorData</a></td><td class="desc"></td></tr>
<tr id="row_154_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_kernel_1_1_elementwise_kernel.xhtml" target="_self">CpuElementwiseKernel&lt; Derived &gt;::ElementwiseKernel</a></td><td class="desc"></td></tr>
<tr id="row_155_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_unary_kernel_1_1_elementwise_unary_kernel.xhtml" target="_self">CpuElementwiseUnaryKernel::ElementwiseUnaryKernel</a></td><td class="desc"></td></tr>
<tr id="row_156_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml" target="_self">EltwiseLayerDescriptor</a></td><td class="desc">Elementwise layer descriptor </td></tr>
<tr id="row_157_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1enable__bitwise__ops.xhtml" target="_self">enable_bitwise_ops&lt; T &gt;</a></td><td class="desc">Disable bitwise operations by default </td></tr>
<tr id="row_158_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1enable__bitwise__ops_3_01arm__compute_1_1_g_p_u_target_01_4.xhtml" target="_self">enable_bitwise_ops&lt; arm_compute::GPUTarget &gt;</a></td><td class="desc">Enable bitwise operations on GPUTarget enumerations </td></tr>
<tr id="row_159_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_example.xhtml" target="_self">Example</a></td><td class="desc">Abstract <a class="el" href="classarm__compute_1_1utils_1_1_example.xhtml" title="Abstract Example class.">Example</a> class </td></tr>
<tr id="row_160_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml" target="_self">ExecutionTask</a></td><td class="desc">Execution task </td></tr>
<tr id="row_161_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1_execution_workload.xhtml" target="_self">ExecutionWorkload</a></td><td class="desc">Execution workload </td></tr>
<tr id="row_162_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_162_" class="arrow" onclick="toggleFolder('162_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>false_type</b></td><td class="desc"></td></tr>
<tr id="row_162_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1is__container.xhtml" target="_self">is_container&lt; T &gt;</a></td><td class="desc">Base case </td></tr>
<tr id="row_163_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_f_f_t1_d_info.xhtml" target="_self">FFT1DInfo</a></td><td class="desc">Descriptor used by the FFT1D function </td></tr>
<tr id="row_164_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_f_f_t2_d_info.xhtml" target="_self">FFT2DInfo</a></td><td class="desc">Descriptor used by the FFT2D function </td></tr>
<tr id="row_165_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml" target="_self">FFTDigitReverseKernelInfo</a></td><td class="desc">Descriptor for FFT digit reverse kernels </td></tr>
<tr id="row_166_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml" target="_self">FFTRadixStageKernelInfo</a></td><td class="desc">Descriptor used by the FFT core kernels </td></tr>
<tr id="row_167_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml" target="_self">FFTScaleKernelInfo</a></td><td class="desc">Descriptor for FFT scale kernels </td></tr>
<tr id="row_168_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1io_1_1_file_handler.xhtml" target="_self">FileHandler</a></td><td class="desc">File Handling interface </td></tr>
<tr id="row_169_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_fixture.xhtml" target="_self">Fixture</a></td><td class="desc">Abstract fixture class </td></tr>
<tr id="row_170_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_floor_kernel_1_1_floor_kernel.xhtml" target="_self">CpuFloorKernel::FloorKernel</a></td><td class="desc"></td></tr>
<tr id="row_171_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml" target="_self">Framework</a></td><td class="desc">Main framework class </td></tr>
<tr id="row_172_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml" target="_self">FrameworkConfig</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml" title="Main framework class.">Framework</a> configuration structure </td></tr>
<tr id="row_173_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1utils_1_1_framework_params.xhtml" target="_self">FrameworkParams</a></td><td class="desc">Structure holding all the common graph parameters </td></tr>
<tr id="row_174_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_fully_connected_layer_info.xhtml" target="_self">FullyConnectedLayerInfo</a></td><td class="desc">Fully connected layer info </td></tr>
<tr id="row_175_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1utils_1_1_fully_connected_params.xhtml" target="_self">FullyConnectedParams</a></td><td class="desc">Structure holding all the fully_connected layer graph parameters </td></tr>
<tr id="row_176_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_gemm_args.xhtml" target="_self">GemmArgs</a></td><td class="desc"></td></tr>
<tr id="row_177_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml" target="_self">GEMMBenchmarkResultRecorder</a></td><td class="desc"></td></tr>
<tr id="row_178_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_gemm_config.xhtml" target="_self">GemmConfig</a></td><td class="desc"></td></tr>
<tr id="row_179_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_config_distribution.xhtml" target="_self">GEMMConfigDistribution</a></td><td class="desc"></td></tr>
<tr id="row_180_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_native.xhtml" target="_self">GEMMConfigNative</a></td><td class="desc">GEMM Configuration for Native kernel </td></tr>
<tr id="row_181_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped.xhtml" target="_self">GEMMConfigReshaped</a></td><td class="desc">GEMM Configuration for Reshaped kernel </td></tr>
<tr id="row_182_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_only_r_h_s.xhtml" target="_self">GEMMConfigReshapedOnlyRHS</a></td><td class="desc">GEMM Configuration for Reshaped Only RHS kernel </td></tr>
<tr id="row_183_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_g_e_m_m_config_result.xhtml" target="_self">GEMMConfigResult</a></td><td class="desc">Result of querying about GEMM config ( <a class="el" href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml">GEMMLHSMatrixInfo</a> and <a class="el" href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml">GEMMRHSMatrixInfo</a>) </td></tr>
<tr id="row_184_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml" target="_self">GemmImplementation&lt; Top, Tret, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_185_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_gemm_implementation_3_01_top_00_01_tret_00_01_nothing_01_4.xhtml" target="_self">GemmImplementation&lt; Top, Tret, Nothing &gt;</a></td><td class="desc"></td></tr>
<tr id="row_186_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml" target="_self">GEMMInfo</a></td><td class="desc">GEMM information class </td></tr>
<tr id="row_187_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml" target="_self">GEMMKernelInfo</a></td><td class="desc">Descriptor used by the GEMM kernels </td></tr>
<tr id="row_188_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml" target="_self">GEMMLHSMatrixInfo</a></td><td class="desc">GEMM LHS (Left Hand Side) matrix information </td></tr>
<tr id="row_189_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml" target="_self">GEMMLowpOutputStageInfo</a></td><td class="desc">GEMMLowp output stage info </td></tr>
<tr id="row_190_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml" target="_self">GEMMLowpReductionKernelInfo</a></td><td class="desc"></td></tr>
<tr id="row_191_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_matrix_addition_kernel_1_1_gemm_matrix_add_kernel.xhtml" target="_self">CpuGemmMatrixAdditionKernel::GemmMatrixAddKernel</a></td><td class="desc"></td></tr>
<tr id="row_192_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_matrix_multiply_kernel_1_1_gemm_matrix_mul_kernel.xhtml" target="_self">CpuGemmMatrixMultiplyKernel::GemmMatrixMulKernel</a></td><td class="desc"></td></tr>
<tr id="row_193_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml" target="_self">GEMMReshapeInfo</a></td><td class="desc">GEMM reshape information class </td></tr>
<tr id="row_194_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml" target="_self">GEMMRHSMatrixInfo</a></td><td class="desc">GEMM RHS (Right Hand Side) matrix information </td></tr>
<tr id="row_195_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml" target="_self">GEMMShape</a></td><td class="desc">GEMM Shape used for query </td></tr>
<tr id="row_196_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_g_e_m_m_type_result.xhtml" target="_self">GEMMTypeResult</a></td><td class="desc">Result of querying about GEMM type ( <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612a">CLGEMMKernelType</a>) </td></tr>
<tr id="row_197_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_generate_proposals_info.xhtml" target="_self">GenerateProposalsInfo</a></td><td class="desc">Generate Proposals Information class </td></tr>
<tr id="row_198_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_kernel_strategy.xhtml" target="_self">GenericDepthfirstKernelStrategy&lt; TInput, TWeight, TOutput, TAccum &gt;</a></td><td class="desc"></td></tr>
<tr id="row_199_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_generic_depthfirst_kernel_strategy_function_type.xhtml" target="_self">GenericDepthfirstKernelStrategyFunctionType&lt; TInput, TOutput, TAccum &gt;</a></td><td class="desc"></td></tr>
<tr id="row_200_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_generic_depthfirst_kernel_strategy_function_type_3_01_t_input_078319fdd1a8adfae8613a2c0dcd548f2.xhtml" target="_self">GenericDepthfirstKernelStrategyFunctionType&lt; TInput, TOutput, int32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_201_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml" target="_self">GenericDepthfirstMultiplierKernelStrategy&lt; TInput, TWeight, TOutput, TAccum &gt;</a></td><td class="desc"></td></tr>
<tr id="row_202_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml" target="_self">GenericDepthfirstMultiplierKernelStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_203_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_input_array_element.xhtml" target="_self">GenericInputArrayElement&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_204_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1get__tensor__info__t.xhtml" target="_self">get_tensor_info_t&lt; T &gt;</a></td><td class="desc">Get the info for a tensor, dummy struct </td></tr>
<tr id="row_205_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml" target="_self">get_tensor_info_t&lt; ITensorInfo * &gt;</a></td><td class="desc">Get the info for a tensor </td></tr>
<tr id="row_206_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_add.xhtml" target="_self">GpuAdd</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_207_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_cast.xhtml" target="_self">GpuCast</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_208_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_clamp.xhtml" target="_self">GpuClamp</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_209_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services.xhtml" target="_self">GpuComponentServices</a></td><td class="desc">Services that are used throughout the creation phase of workload code </td></tr>
<tr id="row_210_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml" target="_self">GpuConv2d</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_211_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml" target="_self">GpuDepthwiseConv2d</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_212_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml" target="_self">GpuElementwiseBinaryCommon</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_213_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument.xhtml" target="_self">GpuKernelArgument</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> argument information linked with its corresponding <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> </td></tr>
<tr id="row_214_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml" target="_self">GpuKernelArgumentInfo</a></td><td class="desc">Contain information required to set up a kernel argument at run time </td></tr>
<tr id="row_215_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_factory.xhtml" target="_self">GpuKernelComponentFactory</a></td><td class="desc">Factory class that creates new instances of <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml">IGpuKernelComponent</a> by assigning new component ids </td></tr>
<tr id="row_216_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml" target="_self">GpuKernelComponentGraph</a></td><td class="desc">A multi-input (tensors), multi-output (tensors) acyclic directed graph of gpu kernel components Its main purposes are: </td></tr>
<tr id="row_217_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml" target="_self">GpuKernelComponentGroup</a></td><td class="desc">A group of gpu kernel components to be fused together PRECONDITIONS: </td></tr>
<tr id="row_218_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml" target="_self">GpuKernelComponentStream</a></td><td class="desc">A linear sequence of component groups serialized from the <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> Each component group in the stream denotes a complete kernel that may consist of multiple components </td></tr>
<tr id="row_219_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml" target="_self">GpuKernelSourceCode</a></td><td class="desc">Container of kernel code to be compiled and run in a <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_unit_workload.xhtml">GpuUnitWorkload</a> </td></tr>
<tr id="row_220_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml" target="_self">GpuKernelVariableTable</a></td><td class="desc">A table of all the variables used in the kernel </td></tr>
<tr id="row_221_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_logical_kernel.xhtml" target="_self">GpuLogicalKernel</a></td><td class="desc">A wrapper-processor of a <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a> It adds the load (if any) and store components to the component group The <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_logical_kernel.xhtml">GpuLogicalKernel</a> represents a complete kernel, and can proceed to invoke any kernel writer to generate the full kernel code </td></tr>
<tr id="row_222_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_gpu_mat_mul_settings.xhtml" target="_self">GpuMatMulSettings</a></td><td class="desc">Settings for MatMul OpenCL implementation </td></tr>
<tr id="row_223_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_mul.xhtml" target="_self">GpuMul</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_224_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml" target="_self">GpuOperatorGroup</a></td><td class="desc">A linear sequence of operators to be fused in a workload For the time being, this class is only used for validating operator fusion INVARIANTS: </td></tr>
<tr id="row_225_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml" target="_self">GpuOutput</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_226_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_pool2d.xhtml" target="_self">GpuPool2d</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_227_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_pool2d_settings.xhtml" target="_self">GpuPool2dSettings</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> backend specific settings </td></tr>
<tr id="row_228_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_reshape.xhtml" target="_self">GpuReshape</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_229_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_resize.xhtml" target="_self">GpuResize</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_230_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sigmoid.xhtml" target="_self">GpuSigmoid</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_231_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_softmax.xhtml" target="_self">GpuSoftmax</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_232_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml" target="_self">GpuSub</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_233_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_tanh.xhtml" target="_self">GpuTanh</a></td><td class="desc"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface </td></tr>
<tr id="row_234_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_unit_workload.xhtml" target="_self">GpuUnitWorkload</a></td><td class="desc">The atomic unit in a Gpu workload </td></tr>
<tr id="row_235_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_argument.xhtml" target="_self">GpuWorkloadArgument</a></td><td class="desc">Describes all the info related to a kernel in order to: </td></tr>
<tr id="row_236_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml" target="_self">GpuWorkloadContext</a></td><td class="desc">Provide context necessary for the creation and configuration of a workload e.g </td></tr>
<tr id="row_237_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml" target="_self">GpuWorkloadSketch</a></td><td class="desc">A descriptor of a workload of operators </td></tr>
<tr id="row_238_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml" target="_self">GpuWorkloadSourceCode</a></td><td class="desc">Hold the generated kernel source code and other information required to compile and run the workload </td></tr>
<tr id="row_239_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" target="_self">Graph</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> class </td></tr>
<tr id="row_240_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml" target="_self">GraphBuilder</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> builder class </td></tr>
<tr id="row_241_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1_graph_config.xhtml" target="_self">GraphConfig</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> configuration structure </td></tr>
<tr id="row_242_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml" target="_self">GraphContext</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> context </td></tr>
<tr id="row_243_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_graph_edsr.xhtml" target="_self">GraphEdsr</a></td><td class="desc"></td></tr>
<tr id="row_244_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_graph_manager.xhtml" target="_self">GraphManager</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> manager class </td></tr>
<tr id="row_245_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1_header.xhtml" target="_self">Header</a></td><td class="desc"></td></tr>
<tr id="row_246_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml" target="_self">HeuristicTree</a></td><td class="desc">A binary decision tree based heuristic </td></tr>
<tr id="row_247_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_scheduler_1_1_hints.xhtml" target="_self">IScheduler::Hints</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> hints </td></tr>
<tr id="row_248_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_248_" class="arrow" onclick="toggleFolder('248_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml" target="_self">IAccessor</a></td><td class="desc">Common interface to provide information and access to tensor like structures </td></tr>
<tr id="row_248_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" target="_self">Accessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> objects </td></tr>
<tr id="row_248_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml" target="_self">CLAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> objects </td></tr>
<tr id="row_248_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" target="_self">SimpleTensor&lt; T &gt;</a></td><td class="desc">Simple tensor object that stores elements in a consecutive chunk of memory </td></tr>
<tr id="row_248_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml" target="_self">SimpleTensorAccessor&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor</a> objects </td></tr>
<tr id="row_248_4_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_248_4_" class="arrow" onclick="toggleFolder('248_4_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" target="_self">SimpleTensor&lt; uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_248_4_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_raw_tensor.xhtml" target="_self">RawTensor</a></td><td class="desc">Subclass of <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" title="Simple tensor object that stores elements in a consecutive chunk of memory.">SimpleTensor</a> using uint8_t as value type </td></tr>
<tr id="row_249_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_249_" class="arrow" onclick="toggleFolder('249_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_access_window.xhtml" target="_self">IAccessWindow</a></td><td class="desc">Interface describing methods to update access window and padding based on kernel parameters </td></tr>
<tr id="row_249_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml" target="_self">AccessWindowAutoPadding</a></td><td class="desc">Dummy access window </td></tr>
<tr id="row_249_1_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_249_1_" class="arrow" onclick="toggleFolder('249_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_rectangle.xhtml" target="_self">AccessWindowRectangle</a></td><td class="desc">Implementation of a rectangular access pattern </td></tr>
<tr id="row_249_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_horizontal.xhtml" target="_self">AccessWindowHorizontal</a></td><td class="desc">Implementation of a row access pattern </td></tr>
<tr id="row_249_1_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_transpose.xhtml" target="_self">AccessWindowTranspose</a></td><td class="desc">Implementation of a XY-transpose access pattern </td></tr>
<tr id="row_249_1_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_vertical.xhtml" target="_self">AccessWindowVertical</a></td><td class="desc">Implementation of a column access pattern </td></tr>
<tr id="row_249_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_static.xhtml" target="_self">AccessWindowStatic</a></td><td class="desc">Implementation of a static rectangular access pattern </td></tr>
<tr id="row_250_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_250_" class="arrow" onclick="toggleFolder('250_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_allocator.xhtml" target="_self">IAllocator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_allocator.xhtml" title="Default malloc allocator implementation.">Allocator</a> interface </td></tr>
<tr id="row_250_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_allocator.xhtml" target="_self">Allocator</a></td><td class="desc">Default malloc allocator implementation </td></tr>
<tr id="row_250_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_buffer_allocator.xhtml" target="_self">CLBufferAllocator</a></td><td class="desc">Default OpenCL cl buffer allocator implementation </td></tr>
<tr id="row_251_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_251_" class="arrow" onclick="toggleFolder('251_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_array.xhtml" target="_self">IArray&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_array.xhtml" title="Basic implementation of the IArray interface which allocates a static number of T values">Array</a> of type T </td></tr>
<tr id="row_251_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_array.xhtml" target="_self">Array&lt; T &gt;</a></td><td class="desc">Basic implementation of the <a class="el" href="classarm__compute_1_1_i_array.xhtml" title="Array of type T.">IArray</a> interface which allocates a static number of T values <br  />
 </td></tr>
<tr id="row_251_1_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_251_1_" class="arrow" onclick="toggleFolder('251_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_array.xhtml" target="_self">ICLArray&lt; T &gt;</a></td><td class="desc">Interface for OpenCL <a class="el" href="classarm__compute_1_1_array.xhtml" title="Basic implementation of the IArray interface which allocates a static number of T values">Array</a> </td></tr>
<tr id="row_251_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_array.xhtml" target="_self">CLArray&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_c_l_array.xhtml" title="CLArray implementation">CLArray</a> implementation <br  />
 </td></tr>
<tr id="row_252_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_252_" class="arrow" onclick="toggleFolder('252_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_array.xhtml" target="_self">IArray&lt; cl_float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_252_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_252_0_" class="arrow" onclick="toggleFolder('252_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_array.xhtml" target="_self">ICLArray&lt; cl_float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_252_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_array.xhtml" target="_self">CLArray&lt; cl_float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_253_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_253_" class="arrow" onclick="toggleFolder('253_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_array.xhtml" target="_self">IArray&lt; cl_int &gt;</a></td><td class="desc"></td></tr>
<tr id="row_253_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_253_0_" class="arrow" onclick="toggleFolder('253_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_array.xhtml" target="_self">ICLArray&lt; cl_int &gt;</a></td><td class="desc"></td></tr>
<tr id="row_253_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_array.xhtml" target="_self">CLArray&lt; cl_int &gt;</a></td><td class="desc"></td></tr>
<tr id="row_254_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_254_" class="arrow" onclick="toggleFolder('254_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_i_array_accessor.xhtml" target="_self">IArrayAccessor&lt; T &gt;</a></td><td class="desc">Common interface to provide information and access to array like structures </td></tr>
<tr id="row_254_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_array_accessor.xhtml" target="_self">ArrayAccessor&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_array_accessor.xhtml" title="ArrayAccessor implementation for Array objects.">ArrayAccessor</a> implementation for <a class="el" href="classarm__compute_1_1_array.xhtml">Array</a> objects </td></tr>
<tr id="row_254_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_array_accessor.xhtml" target="_self">CLArrayAccessor&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_c_l_array.xhtml">CLArray</a> objects </td></tr>
<tr id="row_255_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_asset_manager.xhtml" target="_self">IAssetManager</a></td><td class="desc">Asset manager interface </td></tr>
<tr id="row_256_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_256_" class="arrow" onclick="toggleFolder('256_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__direct__conv_1_1_i_cl_direct_conv_kernel_config.xhtml" target="_self">IClDirectConvKernelConfig</a></td><td class="desc">Basic interface for the Direct convolution kernel configuration </td></tr>
<tr id="row_256_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_default_config_bifrost.xhtml" target="_self">ClDirectConvDefaultConfigBifrost</a></td><td class="desc">Bifrost based OpenCL direct convolution configuration </td></tr>
<tr id="row_256_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_default_config_valhall.xhtml" target="_self">ClDirectConvDefaultConfigValhall</a></td><td class="desc">Valhall based OpenCL direct convolution configuration </td></tr>
<tr id="row_257_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_257_" class="arrow" onclick="toggleFolder('257_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__dwc_1_1_i_cl_d_w_c_native_kernel_config.xhtml" target="_self">IClDWCNativeKernelConfig</a></td><td class="desc">Basic interface for the depthwise convolution kernel configuration </td></tr>
<tr id="row_257_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_default_config_bifrost.xhtml" target="_self">ClDWCNativeDefaultConfigBifrost</a></td><td class="desc">Bifrost based OpenCL depthwise convolution configuration </td></tr>
<tr id="row_257_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_default_config_valhall.xhtml" target="_self">ClDWCNativeDefaultConfigValhall</a></td><td class="desc">Valhall based OpenCL depthwise convolution configuration </td></tr>
<tr id="row_258_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_258_" class="arrow" onclick="toggleFolder('258_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_i_cl_gemm_kernel_config.xhtml" target="_self">IClGemmKernelConfig</a></td><td class="desc">Basic interface for the GEMM kernel configuration </td></tr>
<tr id="row_258_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_native_bifrost.xhtml" target="_self">ClGemmDefaultConfigNativeBifrost</a></td><td class="desc">Bifrost based OpenCL GEMMNative configuration </td></tr>
<tr id="row_258_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_native_midgard.xhtml" target="_self">ClGemmDefaultConfigNativeMidgard</a></td><td class="desc">Midgard based OpenCL GEMMNative configuration </td></tr>
<tr id="row_258_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_native_valhall.xhtml" target="_self">ClGemmDefaultConfigNativeValhall</a></td><td class="desc">Valhall based OpenCL GEMMNative configuration </td></tr>
<tr id="row_258_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_reshaped_bifrost.xhtml" target="_self">ClGemmDefaultConfigReshapedBifrost</a></td><td class="desc">Bifrost based OpenCL GEMMReshaped configuration </td></tr>
<tr id="row_258_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_reshaped_rhs_only_bifrost.xhtml" target="_self">ClGemmDefaultConfigReshapedRhsOnlyBifrost</a></td><td class="desc">Bifrost based OpenCL GEMMReshapedOnlyRHS configuration </td></tr>
<tr id="row_258_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_reshaped_rhs_only_valhall.xhtml" target="_self">ClGemmDefaultConfigReshapedRhsOnlyValhall</a></td><td class="desc">Valhall based OpenCL GEMMReshapedOnlyRHS configuration </td></tr>
<tr id="row_258_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_reshaped_valhall.xhtml" target="_self">ClGemmDefaultConfigReshapedValhall</a></td><td class="desc">Valhall based OpenCL GEMMReshaped configuration </td></tr>
<tr id="row_259_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_259_" class="arrow" onclick="toggleFolder('259_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__gemm_1_1_i_c_l_g_e_m_m_kernel_selection.xhtml" target="_self">ICLGEMMKernelSelection</a></td><td class="desc">Basic interface for the GEMM kernel selection </td></tr>
<tr id="row_259_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_default_type_bifrost.xhtml" target="_self">CLGEMMDefaultTypeBifrost</a></td><td class="desc">Bifrost based OpenCL GEMMKernel selection </td></tr>
<tr id="row_259_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_default_type_midgard.xhtml" target="_self">CLGEMMDefaultTypeMidgard</a></td><td class="desc">Midgard based OpenCL GEMMKernel selection </td></tr>
<tr id="row_259_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_default_type_valhall.xhtml" target="_self">CLGEMMDefaultTypeValhall</a></td><td class="desc">Valhall based OpenCL GEMMKernel selection </td></tr>
<tr id="row_260_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_260_" class="arrow" onclick="toggleFolder('260_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__indirect__conv_1_1_i_cl_indirect_conv_kernel_config.xhtml" target="_self">IClIndirectConvKernelConfig</a></td><td class="desc">Basic interface for the indirect convolution kernel configuration </td></tr>
<tr id="row_260_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall.xhtml" target="_self">ClIndirectConvDefaultConfigValhall</a></td><td class="desc">Valhall based OpenCL indirect convolution configuration </td></tr>
<tr id="row_261_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_261_" class="arrow" onclick="toggleFolder('261_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__matmul_1_1_i_cl_mat_mul_native_kernel_config.xhtml" target="_self">IClMatMulNativeKernelConfig</a></td><td class="desc">Basic interface for the matmul native kernel configuration </td></tr>
<tr id="row_261_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_default_config_valhall.xhtml" target="_self">ClMatMulNativeDefaultConfigValhall</a></td><td class="desc">Valhall based OpenCL matmul configuration </td></tr>
<tr id="row_262_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml" target="_self">ICloneable&lt; T &gt;</a></td><td class="desc">Clonable Interface </td></tr>
<tr id="row_263_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_263_" class="arrow" onclick="toggleFolder('263_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml" target="_self">ICloneable&lt; ITensorInfo &gt;</a></td><td class="desc"></td></tr>
<tr id="row_263_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_263_0_" class="arrow" onclick="toggleFolder('263_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" target="_self">ITensorInfo</a></td><td class="desc">Store the tensor's metadata </td></tr>
<tr id="row_263_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml" target="_self">SubTensorInfo</a></td><td class="desc">Store the sub tensor's metadata </td></tr>
<tr id="row_263_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_info.xhtml" target="_self">TensorInfo</a></td><td class="desc">Store the tensor's metadata </td></tr>
<tr id="row_264_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_264_" class="arrow" onclick="toggleFolder('264_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml" target="_self">ICloneable&lt; TensorDescriptor &gt;</a></td><td class="desc"></td></tr>
<tr id="row_264_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml" target="_self">TensorDescriptor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> metadata class </td></tr>
<tr id="row_265_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_265_" class="arrow" onclick="toggleFolder('265_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_tuner.xhtml" target="_self">ICLTuner</a></td><td class="desc">Basic interface for tuning the OpenCL kernels </td></tr>
<tr id="row_265_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml" target="_self">CLTuner</a></td><td class="desc">Basic implementation of the OpenCL tuner interface </td></tr>
<tr id="row_266_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cl__tuner_1_1_i_c_l_tuning_parameters_list.xhtml" target="_self">ICLTuningParametersList</a></td><td class="desc">Interface for Tuning Parameters lists </td></tr>
<tr id="row_267_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_267_" class="arrow" onclick="toggleFolder('267_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_i_decorator.xhtml" target="_self">IDecorator</a></td><td class="desc">Log message decorator interface </td></tr>
<tr id="row_267_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_date_decorator.xhtml" target="_self">DateDecorator</a></td><td class="desc">Date Decorator </td></tr>
<tr id="row_267_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_log_level_decorator.xhtml" target="_self">LogLevelDecorator</a></td><td class="desc">Log Level Decorator </td></tr>
<tr id="row_267_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_string_decorator.xhtml" target="_self">StringDecorator</a></td><td class="desc">String Decorator </td></tr>
<tr id="row_267_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_thread_id_decorator.xhtml" target="_self">ThreadIdDecorator</a></td><td class="desc">Thread ID Decorator </td></tr>
<tr id="row_268_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_268_" class="arrow" onclick="toggleFolder('268_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_i_depthfirst_strategy.xhtml" target="_self">IDepthfirstStrategy</a></td><td class="desc"></td></tr>
<tr id="row_268_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_268_0_" class="arrow" onclick="toggleFolder('268_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped.xhtml" target="_self">DepthfirstStrategyUntyped</a></td><td class="desc"></td></tr>
<tr id="row_268_0_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_268_0_0_" class="arrow" onclick="toggleFolder('268_0_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_0_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml" target="_self">DepthwiseDepthfirstStrategyCommon&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_268_0_1_" class="arrow" onclick="toggleFolder('268_0_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; __fp16, __fp16, __fp16, __fp16, typename DefaultOutputStage&lt; __fp16 &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_1_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_268_0_1_0_" class="arrow" onclick="toggleFolder('268_0_1_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml" target="_self">DepthwiseDepthfirstStrategyCommon&lt; __fp16, __fp16, __fp16, __fp16, typename DefaultOutputStage&lt; __fp16 &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_1_0_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_268_0_1_0_0_" class="arrow" onclick="toggleFolder('268_0_1_0_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy.xhtml" target="_self">DepthwiseDepthfirstStrategy&lt; __fp16, __fp16, __fp16, __fp16 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_1_0_0_0_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp16__nhwc__3x3__s1__output2x2__mla__depthfirst.xhtml" target="_self">sme2_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_268_0_1_0_0_1_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp16__nhwc__3x3__s1__output3x3__mla__depthfirst.xhtml" target="_self">sme2_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_268_0_1_0_0_2_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp16__nhwc__3x3__s1__output4x4__mla__depthfirst.xhtml" target="_self">sme2_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_268_0_1_0_0_3_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp16__nhwc__3x3__s2__output2x2__mla__depthfirst.xhtml" target="_self">sme2_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_268_0_1_0_0_4_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp16__nhwc__5x5__s1__output2x2__mla__depthfirst.xhtml" target="_self">sme2_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_268_0_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_268_0_2_" class="arrow" onclick="toggleFolder('268_0_2_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; TInput, TInput, TInput, typename DefaultTAccum&lt; TInput &gt;::Type, typename DefaultOutputStage&lt; TInput &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_2_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_268_0_2_0_" class="arrow" onclick="toggleFolder('268_0_2_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml" target="_self">DepthwiseDepthfirstStrategyCommon&lt; TInput, TInput, TInput, typename DefaultTAccum&lt; TInput &gt;::Type, typename DefaultOutputStage&lt; TInput &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_2_0_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml" target="_self">GenericDepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_2_0_1_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_strategy.xhtml" target="_self">GenericDepthfirstStrategy&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_268_0_3_" class="arrow" onclick="toggleFolder('268_0_3_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_3_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_268_0_3_0_" class="arrow" onclick="toggleFolder('268_0_3_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml" target="_self">DepthwiseDepthfirstStrategyCommon&lt; TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_3_0_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml" target="_self">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_3_0_1_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml" target="_self">DepthwiseDepthfirstStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_268_0_4_" class="arrow" onclick="toggleFolder('268_0_4_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; TInput, TWeight, TOutput, TAccum, Nothing &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_4_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_268_0_4_0_" class="arrow" onclick="toggleFolder('268_0_4_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml" target="_self">DepthwiseDepthfirstStrategyCommon&lt; TInput, TWeight, TOutput, TAccum, Nothing &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_4_0_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml" target="_self">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, TAccum &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_268_0_5_" class="arrow" onclick="toggleFolder('268_0_5_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; TInput, TWeight, TOutput, TAccum, typename DefaultOutputStage&lt; TOutput &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_5_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_268_0_5_0_" class="arrow" onclick="toggleFolder('268_0_5_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml" target="_self">DepthwiseDepthfirstStrategyCommon&lt; TInput, TWeight, TOutput, TAccum, typename DefaultOutputStage&lt; TOutput &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_268_0_5_0_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy.xhtml" target="_self">DepthwiseDepthfirstStrategy&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_269_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_269_" class="arrow" onclick="toggleFolder('269_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_depthfirst_strategy.xhtml" target="_self">IDepthfirstStrategy</a></td><td class="desc"></td></tr>
<tr id="row_269_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; TInput, TOutput &gt;</a></td><td class="desc"></td></tr>
<tr id="row_269_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_generic_depthfirst_wrapper.xhtml" target="_self">GenericDepthfirstWrapper&lt; TInput, TOutput, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_269_2_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_269_2_" class="arrow" onclick="toggleFolder('269_2_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; __fp16, __fp16 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_269_2_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__fp16__nhwc__avg__3x3__s1__output2x2__depthfirst.xhtml" target="_self">sme_fp16_nhwc_avg_3x3_s1_output2x2_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_269_2_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__fp16__nhwc__max__2x2__s1__output2x2__depthfirst.xhtml" target="_self">sme_fp16_nhwc_max_2x2_s1_output2x2_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_269_3_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_269_3_" class="arrow" onclick="toggleFolder('269_3_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; float, float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_269_3_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1a64__fp32__nhwc__avg__3x3__s1__output2x2__depthfirst.xhtml" target="_self">a64_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_269_3_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1a64__fp32__nhwc__max__2x2__s1__output2x2__depthfirst.xhtml" target="_self">a64_fp32_nhwc_max_2x2_s1_output2x2_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_269_3_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__fp32__nhwc__avg__3x3__s1__output2x2__depthfirst.xhtml" target="_self">sme_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_269_3_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__fp32__nhwc__max__2x2__s1__output2x2__depthfirst.xhtml" target="_self">sme_fp32_nhwc_max_2x2_s1_output2x2_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_269_4_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_269_4_" class="arrow" onclick="toggleFolder('269_4_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; int8_t, int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_269_4_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1a64__s8__nhwc__max__2x2__s1__output2x2__depthfirst.xhtml" target="_self">a64_s8_nhwc_max_2x2_s1_output2x2_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_269_4_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__s8__nhwc__max__2x2__s1__output2x2__depthfirst.xhtml" target="_self">sme_s8_nhwc_max_2x2_s1_output2x2_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_269_5_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_269_5_" class="arrow" onclick="toggleFolder('269_5_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml" target="_self">DepthfirstStrategy&lt; uint8_t, uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_269_5_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1a64__u8__nhwc__max__2x2__s1__output2x2__depthfirst.xhtml" target="_self">a64_u8_nhwc_max_2x2_s1_output2x2_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_269_5_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__u8__nhwc__max__2x2__s1__output2x2__depthfirst.xhtml" target="_self">sme_u8_nhwc_max_2x2_s1_output2x2_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_270_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_270_" class="arrow" onclick="toggleFolder('270_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_device.xhtml" target="_self">IDevice</a></td><td class="desc">Interface for device object </td></tr>
<tr id="row_270_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_device.xhtml" target="_self">CLDevice</a></td><td class="desc">OpenCL device type class </td></tr>
<tr id="row_271_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_271_" class="arrow" onclick="toggleFolder('271_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml" target="_self">IDeviceBackend</a></td><td class="desc">Device backend interface </td></tr>
<tr id="row_271_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml" target="_self">CLDeviceBackend</a></td><td class="desc">OpenCL device backend </td></tr>
<tr id="row_271_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml" target="_self">NEDeviceBackend</a></td><td class="desc">CPU device backend </td></tr>
<tr id="row_272_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml" target="_self">CpuGemmAssemblyDispatch::IFallback</a></td><td class="desc"></td></tr>
<tr id="row_273_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_273_" class="arrow" onclick="toggleFolder('273_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_function.xhtml" target="_self">IFunction</a></td><td class="desc">Base class for all functions </td></tr>
<tr id="row_273_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_abs_layer.xhtml" target="_self">CLAbsLayer</a></td><td class="desc">Basic function to get the absolute value of an input tensor </td></tr>
<tr id="row_273_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" target="_self">CLActivationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_activation_kernel.xhtml">opencl::kernels::ClActivationKernel</a> </td></tr>
<tr id="row_273_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml" target="_self">CLArgMinMaxLayer</a></td><td class="desc">Function to calculate the index of the minimum or maximum values in a tensor based on an axis </td></tr>
<tr id="row_273_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml" target="_self">CLArithmeticAddition</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml">opencl::kernels::ClSaturatedArithmeticKernel</a> for addition </td></tr>
<tr id="row_273_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_division.xhtml" target="_self">CLArithmeticDivision</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml">opencl::kernels::ClSaturatedArithmeticKernel</a> for division </td></tr>
<tr id="row_273_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_subtraction.xhtml" target="_self">CLArithmeticSubtraction</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml">opencl::kernels::ClSaturatedArithmeticKernel</a> for subtraction </td></tr>
<tr id="row_273_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_batch_normalization_layer.xhtml" target="_self">CLBatchNormalizationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_normalization_layer_kernel.xhtml">CLNormalizationLayerKernel</a> and simulate a batch normalization layer </td></tr>
<tr id="row_273_7_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_batch_to_space_layer.xhtml" target="_self">CLBatchToSpaceLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_batch_to_space_layer_kernel.xhtml">CLBatchToSpaceLayerKernel</a> </td></tr>
<tr id="row_273_8_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_cast.xhtml" target="_self">CLCast</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_cast_kernel.xhtml">opencl::kernels::ClCastKernel</a> </td></tr>
<tr id="row_273_9_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_complex_pixel_wise_multiplication.xhtml" target="_self">CLComplexPixelWiseMultiplication</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1_cl_complex_mul.xhtml">opencl::ClComplexMul</a> </td></tr>
<tr id="row_273_10_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml" target="_self">CLConcatenateLayer</a></td><td class="desc">Basic function to execute concatenate tensors along a given axis </td></tr>
<tr id="row_273_11_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_conv3_d.xhtml" target="_self">CLConv3D</a></td><td class="desc">Basic function to compute the convolution3d layer </td></tr>
<tr id="row_273_12_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convert_fully_connected_weights.xhtml" target="_self">CLConvertFullyConnectedWeights</a></td><td class="desc">Basic function to run an <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_convert_fully_connected_weights_kernel.xhtml">opencl::kernels::ClConvertFullyConnectedWeightsKernel</a> </td></tr>
<tr id="row_273_13_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_layer.xhtml" target="_self">CLConvolutionLayer</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_273_14_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_copy.xhtml" target="_self">CLCopy</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_copy_kernel.xhtml">opencl::kernels::ClCopyKernel</a> </td></tr>
<tr id="row_273_15_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_crop.xhtml" target="_self">CLCrop</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_crop_kernel.xhtml">opencl::kernels::ClCropKernel</a> </td></tr>
<tr id="row_273_16_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml" target="_self">CLCropResize</a></td><td class="desc">Function to perform cropping and resizing </td></tr>
<tr id="row_273_17_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_deconvolution_layer.xhtml" target="_self">CLDeconvolutionLayer</a></td><td class="desc">Basic function to compute the deconvolution layer </td></tr>
<tr id="row_273_18_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_deconvolution_layer_upsample.xhtml" target="_self">CLDeconvolutionLayerUpsample</a></td><td class="desc">Basic function to execute deconvolution upsample on OpenCL </td></tr>
<tr id="row_273_19_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_convert_layer.xhtml" target="_self">CLDepthConvertLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_cast_kernel.xhtml">opencl::kernels::ClCastKernel</a> </td></tr>
<tr id="row_273_20_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer.xhtml" target="_self">CLDepthwiseConvolutionLayer</a></td><td class="desc">Function to execute a depthwise convolution </td></tr>
<tr id="row_273_21_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_dequantization_layer.xhtml" target="_self">CLDequantizationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1_cl_dequantize.xhtml">opencl::ClDequantize</a> that dequantizes an input tensor </td></tr>
<tr id="row_273_22_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_direct_convolution_layer.xhtml" target="_self">CLDirectConvolutionLayer</a></td><td class="desc">Basic function to execute direct convolution function: </td></tr>
<tr id="row_273_23_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_direct_deconvolution_layer.xhtml" target="_self">CLDirectDeconvolutionLayer</a></td><td class="desc">Function to run the deconvolution layer </td></tr>
<tr id="row_273_24_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_elementwise_max.xhtml" target="_self">CLElementwiseMax</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">opencl::kernels::ClArithmeticKernel</a> for max </td></tr>
<tr id="row_273_25_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_elementwise_min.xhtml" target="_self">CLElementwiseMin</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">opencl::kernels::ClArithmeticKernel</a> for min </td></tr>
<tr id="row_273_26_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_elementwise_power.xhtml" target="_self">CLElementwisePower</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">opencl::kernels::ClArithmeticKernel</a> for power </td></tr>
<tr id="row_273_27_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_elementwise_squared_diff.xhtml" target="_self">CLElementwiseSquaredDiff</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">opencl::kernels::ClArithmeticKernel</a> for squared difference </td></tr>
<tr id="row_273_28_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_exp_layer.xhtml" target="_self">CLExpLayer</a></td><td class="desc">Basic function to perform exponential on an input tensor </td></tr>
<tr id="row_273_29_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml" target="_self">CLFFT1D</a></td><td class="desc">Basic function to execute one dimensional FFT </td></tr>
<tr id="row_273_30_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_f_f_t2_d.xhtml" target="_self">CLFFT2D</a></td><td class="desc">Basic function to execute two dimensional FFT </td></tr>
<tr id="row_273_31_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_f_f_t_convolution_layer.xhtml" target="_self">CLFFTConvolutionLayer</a></td><td class="desc">Basic function to execute FFT-based convolution on OpenCL </td></tr>
<tr id="row_273_32_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fill.xhtml" target="_self">CLFill</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_fill_kernel.xhtml">opencl::kernels::ClFillKernel</a> </td></tr>
<tr id="row_273_33_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_flatten_layer.xhtml" target="_self">CLFlattenLayer</a></td><td class="desc">Basic function to execute flatten </td></tr>
<tr id="row_273_34_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_floor.xhtml" target="_self">CLFloor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_floor_kernel.xhtml">opencl::kernels::ClFloorKernel</a> </td></tr>
<tr id="row_273_35_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml" target="_self">CLFullyConnectedLayer</a></td><td class="desc">Basic function to compute a Fully Connected layer on OpenCL </td></tr>
<tr id="row_273_36_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fuse_batch_normalization.xhtml" target="_self">CLFuseBatchNormalization</a></td><td class="desc">Basic function to fuse the batch normalization node to a preceding convolution node </td></tr>
<tr id="row_273_37_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml" target="_self">CLGEMM</a></td><td class="desc">Basic function to execute GEMM on OpenCL </td></tr>
<tr id="row_273_38_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_convolution_layer.xhtml" target="_self">CLGEMMConvolutionLayer</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_273_39_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_deconvolution_layer.xhtml" target="_self">CLGEMMDeconvolutionLayer</a></td><td class="desc">Function to run the deconvolution layer through a call to GEMM </td></tr>
<tr id="row_273_40_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml" target="_self">CLGEMMLowpMatrixMultiplyCore</a></td><td class="desc">Basic function to execute GEMMLowpMatrixMultiplyCore on OpenCL </td></tr>
<tr id="row_273_41_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage.xhtml" target="_self">CLGEMMLowpOutputStage</a></td><td class="desc">Basic function to execute GEMMLowpQuantizeDown kernels on CL </td></tr>
<tr id="row_273_42_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_generate_proposals_layer.xhtml" target="_self">CLGenerateProposalsLayer</a></td><td class="desc">Basic function to generate proposals for a RPN (Region Proposal Network) </td></tr>
<tr id="row_273_43_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_indirect_convolution_layer.xhtml" target="_self">CLIndirectConvolutionLayer</a></td><td class="desc">Basic function to run the indirect convolution function </td></tr>
<tr id="row_273_44_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_instance_normalization_layer.xhtml" target="_self">CLInstanceNormalizationLayer</a></td><td class="desc">Basic function to perform a Instance normalization </td></tr>
<tr id="row_273_45_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l2_normalize_layer.xhtml" target="_self">CLL2NormalizeLayer</a></td><td class="desc">Basic function to perform a L2 normalization on a given axis </td></tr>
<tr id="row_273_46_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logical_and.xhtml" target="_self">CLLogicalAnd</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml">arm_compute::opencl::kernels::ClLogicalBinaryKernel</a> </td></tr>
<tr id="row_273_47_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logical_not.xhtml" target="_self">CLLogicalNot</a></td><td class="desc">Basic function to do logical NOT operation </td></tr>
<tr id="row_273_48_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logical_or.xhtml" target="_self">CLLogicalOr</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml">arm_compute::opencl::kernels::ClLogicalBinaryKernel</a> </td></tr>
<tr id="row_273_49_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_log_layer.xhtml" target="_self">CLLogLayer</a></td><td class="desc">Basic function to perform elementwise log on an input tensor </td></tr>
<tr id="row_273_50_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer.xhtml" target="_self">CLLSTMLayer</a></td><td class="desc">This function performs a single time step in a Long Short-Term <a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> (LSTM) layer </td></tr>
<tr id="row_273_51_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml" target="_self">CLLSTMLayerQuantized</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> </td></tr>
<tr id="row_273_52_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_mat_mul.xhtml" target="_self">CLMatMul</a></td><td class="desc">Basic function to execute MatMul (Matrix Multiplication) on OpenCL </td></tr>
<tr id="row_273_53_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_max_unpooling_layer.xhtml" target="_self">CLMaxUnpoolingLayer</a></td><td class="desc">Function to perform MaxUnpooling </td></tr>
<tr id="row_273_54_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_neg_layer.xhtml" target="_self">CLNegLayer</a></td><td class="desc">Basic function to negate an input tensor </td></tr>
<tr id="row_273_55_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_normalization_layer.xhtml" target="_self">CLNormalizationLayer</a></td><td class="desc">Basic function to compute a normalization layer </td></tr>
<tr id="row_273_56_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pad_layer.xhtml" target="_self">CLPadLayer</a></td><td class="desc">Basic function to pad a tensor </td></tr>
<tr id="row_273_57_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_permute.xhtml" target="_self">CLPermute</a></td><td class="desc">Basic function to execute an <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_permute_kernel.xhtml">opencl::kernels::ClPermuteKernel</a> </td></tr>
<tr id="row_273_58_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml" target="_self">CLPixelWiseMultiplication</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1_cl_mul.xhtml">opencl::ClMul</a> </td></tr>
<tr id="row_273_59_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pooling3d_layer.xhtml" target="_self">CLPooling3dLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1_cl_pool3d.xhtml">opencl::ClPool3d</a> </td></tr>
<tr id="row_273_60_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pooling_layer.xhtml" target="_self">CLPoolingLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1_cl_pool2d.xhtml">opencl::ClPool2d</a> </td></tr>
<tr id="row_273_61_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_p_relu_layer.xhtml" target="_self">CLPReluLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">opencl::kernels::ClArithmeticKernel</a> for PRELU </td></tr>
<tr id="row_273_62_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_q_l_s_t_m_layer.xhtml" target="_self">CLQLSTMLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_q_l_s_t_m_layer.xhtml">CLQLSTMLayer</a> </td></tr>
<tr id="row_273_63_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_quantization_layer.xhtml" target="_self">CLQuantizationLayer</a></td><td class="desc">Basic function to simulate a quantization layer </td></tr>
<tr id="row_273_64_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reduce_mean.xhtml" target="_self">CLReduceMean</a></td><td class="desc">Basic function to perform reduce operation </td></tr>
<tr id="row_273_65_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reduction_operation.xhtml" target="_self">CLReductionOperation</a></td><td class="desc">Perform reduction operation </td></tr>
<tr id="row_273_66_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reshape_layer.xhtml" target="_self">CLReshapeLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_reshape_kernel.xhtml">opencl::kernels::ClReshapeKernel</a> </td></tr>
<tr id="row_273_67_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_r_n_n_layer.xhtml" target="_self">CLRNNLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_r_n_n_layer.xhtml">CLRNNLayer</a> </td></tr>
<tr id="row_273_68_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_round_layer.xhtml" target="_self">CLRoundLayer</a></td><td class="desc">Basic function to get the round (to the nearest even) value of an input tensor </td></tr>
<tr id="row_273_69_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_rsqrt_layer.xhtml" target="_self">CLRsqrtLayer</a></td><td class="desc">Basic function to perform inverse square root on an input tensor </td></tr>
<tr id="row_273_70_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scale.xhtml" target="_self">CLScale</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1_cl_scale.xhtml">opencl::ClScale</a> </td></tr>
<tr id="row_273_71_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sin_layer.xhtml" target="_self">CLSinLayer</a></td><td class="desc">Basic function to calculate sine of an input tensor </td></tr>
<tr id="row_273_72_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_slice.xhtml" target="_self">CLSlice</a></td><td class="desc">Basic function to perform tensor slicing </td></tr>
<tr id="row_273_73_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_softmax_layer_generic.xhtml" target="_self">CLSoftmaxLayerGeneric&lt; IS_LOG &gt;</a></td><td class="desc">Basic function to compute a SoftmaxLayer </td></tr>
<tr id="row_273_74_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_space_to_batch_layer.xhtml" target="_self">CLSpaceToBatchLayer</a></td><td class="desc">Basic function to spatial divide a tensor </td></tr>
<tr id="row_273_75_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_space_to_depth_layer.xhtml" target="_self">CLSpaceToDepthLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_space_to_depth_layer_kernel.xhtml">CLSpaceToDepthLayerKernel</a> </td></tr>
<tr id="row_273_76_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_stack_layer.xhtml" target="_self">CLStackLayer</a></td><td class="desc">Basic function to stack tensors along an axis </td></tr>
<tr id="row_273_77_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_strided_slice.xhtml" target="_self">CLStridedSlice</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_strided_slice_kernel.xhtml">CLStridedSliceKernel</a> </td></tr>
<tr id="row_273_78_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_transpose.xhtml" target="_self">CLTranspose</a></td><td class="desc">Basic function to execute an <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_transpose_kernel.xhtml">opencl::kernels::ClTransposeKernel</a> </td></tr>
<tr id="row_273_79_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_unstack.xhtml" target="_self">CLUnstack</a></td><td class="desc">Basic function to unpack a rank-R tensor into rank-(R-1) tensors </td></tr>
<tr id="row_273_80_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_winograd_convolution_layer.xhtml" target="_self">CLWinogradConvolutionLayer</a></td><td class="desc">Basic function to execute Winograd-based convolution on OpenCL </td></tr>
<tr id="row_273_81_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_box_with_non_maxima_suppression_limit.xhtml" target="_self">CPPBoxWithNonMaximaSuppressionLimit</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_p_p_box_with_non_maxima_suppression_limit_kernel.xhtml">CPPBoxWithNonMaximaSuppressionLimitKernel</a> </td></tr>
<tr id="row_273_82_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_detection_output_layer.xhtml" target="_self">CPPDetectionOutputLayer</a></td><td class="desc">CPP Function to generate the detection output based on location and confidence predictions by doing non maximum suppression </td></tr>
<tr id="row_273_83_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_detection_post_process_layer.xhtml" target="_self">CPPDetectionPostProcessLayer</a></td><td class="desc">CPP Function to generate the detection output based on center size encoded boxes, class prediction and anchors by doing non maximum suppression </td></tr>
<tr id="row_273_84_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_split.xhtml" target="_self">CPPSplit&lt; SliceType, TensorInterfaceType &gt;</a></td><td class="desc">Basic function to split a tensor along a given axis </td></tr>
<tr id="row_273_85_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_fused_convolution_batch_normalization_function.xhtml" target="_self">FusedConvolutionBatchNormalizationFunction&lt; TargetInfo, FusedLayerTypes &gt;</a></td><td class="desc">Wrapper function to first apply {NE, CL}BatchNormalizationLayer on the weights and then run {NE, CL}ConvolutionLayer with the modified weights </td></tr>
<tr id="row_273_86_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_fused_convolution_batch_normalization_with_post_ops_function.xhtml" target="_self">FusedConvolutionBatchNormalizationWithPostOpsFunction&lt; TargetInfo, FusedLayerTypes &gt;</a></td><td class="desc">Wrapper function to first apply {NE, CL}BatchNormalizationLayer on the weights and then run {NE, CL}ConvolutionLayer with the modified weights </td></tr>
<tr id="row_273_87_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_fused_depthwise_convolution_batch_normalization_function.xhtml" target="_self">FusedDepthwiseConvolutionBatchNormalizationFunction&lt; TargetInfo, FusedLayerTypes &gt;</a></td><td class="desc">Wrapper function to first apply {NE, CL}BatchNormalizationLayer on the weights and then run {NE, CL}DepthwiseConvolutionLayer with the modified weights </td></tr>
<tr id="row_273_88_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_273_88_" class="arrow" onclick="toggleFolder('273_88_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml" target="_self">ICLSimpleFunction</a></td><td class="desc">Basic interface for functions which have a single OpenCL kernel </td></tr>
<tr id="row_273_88_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_and.xhtml" target="_self">CLBitwiseAnd</a></td><td class="desc">Basic function to perform bitwise AND by running <a class="el" href="classarm__compute_1_1_c_l_bitwise_kernel.xhtml">CLBitwiseKernel</a> </td></tr>
<tr id="row_273_88_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_not.xhtml" target="_self">CLBitwiseNot</a></td><td class="desc">Basic function to perform bitwise NOT by running <a class="el" href="classarm__compute_1_1_c_l_bitwise_kernel.xhtml">CLBitwiseKernel</a> </td></tr>
<tr id="row_273_88_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_or.xhtml" target="_self">CLBitwiseOr</a></td><td class="desc">Basic function to perform bitwise OR by running <a class="el" href="classarm__compute_1_1_c_l_bitwise_kernel.xhtml">CLBitwiseKernel</a> </td></tr>
<tr id="row_273_88_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_xor.xhtml" target="_self">CLBitwiseXor</a></td><td class="desc">Basic function to perform bitwise XOR by running <a class="el" href="classarm__compute_1_1_c_l_bitwise_kernel.xhtml">CLBitwiseKernel</a> </td></tr>
<tr id="row_273_88_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bounding_box_transform.xhtml" target="_self">CLBoundingBoxTransform</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_bounding_box_transform_kernel.xhtml">CLBoundingBoxTransformKernel</a> </td></tr>
<tr id="row_273_88_5_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_channel_shuffle_layer.xhtml" target="_self">CLChannelShuffleLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_channel_shuffle_layer_kernel.xhtml">CLChannelShuffleLayerKernel</a> </td></tr>
<tr id="row_273_88_6_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_comparison.xhtml" target="_self">CLComparison</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_comparison_kernel.xhtml">CLComparisonKernel</a> </td></tr>
<tr id="row_273_88_7_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_comparison_static.xhtml" target="_self">CLComparisonStatic&lt; COP &gt;</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_comparison_kernel.xhtml">CLComparisonKernel</a> </td></tr>
<tr id="row_273_88_8_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_to_space_layer.xhtml" target="_self">CLDepthToSpaceLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_depth_to_space_layer_kernel.xhtml">CLDepthToSpaceLayerKernel</a> </td></tr>
<tr id="row_273_88_9_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gather.xhtml" target="_self">CLGather</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_gather_kernel.xhtml">CLGatherKernel</a> </td></tr>
<tr id="row_273_88_10_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_mean_std_dev_normalization_layer.xhtml" target="_self">CLMeanStdDevNormalizationLayer</a></td><td class="desc">Basic function to execute mean and standard deviation normalization by calling <a class="el" href="classarm__compute_1_1_c_l_mean_std_dev_normalization_kernel.xhtml">CLMeanStdDevNormalizationKernel</a> </td></tr>
<tr id="row_273_88_11_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_normalize_planar_y_u_v_layer.xhtml" target="_self">CLNormalizePlanarYUVLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_normalize_planar_y_u_v_layer_kernel.xhtml">CLNormalizePlanarYUVLayerKernel</a> </td></tr>
<tr id="row_273_88_12_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_prior_box_layer.xhtml" target="_self">CLPriorBoxLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_prior_box_layer_kernel.xhtml">CLPriorBoxLayerKernel</a> </td></tr>
<tr id="row_273_88_13_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_range.xhtml" target="_self">CLRange</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_range_kernel.xhtml">CLRangeKernel</a> </td></tr>
<tr id="row_273_88_14_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reorg_layer.xhtml" target="_self">CLReorgLayer</a></td><td class="desc"></td></tr>
<tr id="row_273_88_15_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reverse.xhtml" target="_self">CLReverse</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_reverse_kernel.xhtml">CLReverseKernel</a> </td></tr>
<tr id="row_273_88_16_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_r_o_i_align_layer.xhtml" target="_self">CLROIAlignLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_r_o_i_align_layer_kernel.xhtml">CLROIAlignLayerKernel</a> </td></tr>
<tr id="row_273_88_17_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer.xhtml" target="_self">CLROIPoolingLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer_kernel.xhtml">CLROIPoolingLayerKernel</a> </td></tr>
<tr id="row_273_88_18_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_select.xhtml" target="_self">CLSelect</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_select.xhtml">CLSelect</a> </td></tr>
<tr id="row_273_88_19_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tile.xhtml" target="_self">CLTile</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_tile_kernel.xhtml">CLTileKernel</a> </td></tr>
<tr id="row_273_88_20_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_function.xhtml" target="_self">CLSynthetizeFunction&lt; K &gt;</a></td><td class="desc">This template synthetizes an <a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml" title="Basic interface for functions which have a single OpenCL kernel.">ICLSimpleFunction</a> which runs the given kernel K </td></tr>
<tr id="row_273_88_21_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_function_with_zero_constant_border.xhtml" target="_self">CLSynthetizeFunctionWithZeroConstantBorder&lt; K, bordersize &gt;</a></td><td class="desc">As above but this also setups a Zero border on the input tensor of the specified bordersize </td></tr>
<tr id="row_273_89_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_273_89_" class="arrow" onclick="toggleFolder('273_89_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_p_p_simple_function.xhtml" target="_self">ICPPSimpleFunction</a></td><td class="desc">Basic interface for functions which have a single CPP kernel </td></tr>
<tr id="row_273_89_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_non_maximum_suppression.xhtml" target="_self">CPPNonMaximumSuppression</a></td><td class="desc">CPP Function to perform non maximum suppression on the bounding boxes and scores </td></tr>
<tr id="row_273_89_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_permute.xhtml" target="_self">CPPPermute</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_p_p_permute_kernel.xhtml">CPPPermuteKernel</a> </td></tr>
<tr id="row_273_89_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_top_k_v.xhtml" target="_self">CPPTopKV</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_p_p_top_k_v_kernel.xhtml">CPPTopKVKernel</a> </td></tr>
<tr id="row_273_89_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_upsample.xhtml" target="_self">CPPUpsample</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_p_p_upsample.xhtml">CPPUpsample</a> </td></tr>
<tr id="row_273_90_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_273_90_" class="arrow" onclick="toggleFolder('273_90_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_simple_function.xhtml" target="_self">INESimpleFunction</a></td><td class="desc">Basic interface for functions which have a single CPU kernel </td></tr>
<tr id="row_273_90_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_border.xhtml" target="_self">NESynthetizeFunctionWithZeroConstantBorder&lt; K, bordersize &gt;</a></td><td class="desc">As above but this also setups a Zero border on the input tensor of the specified bordersize </td></tr>
<tr id="row_273_91_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_273_91_" class="arrow" onclick="toggleFolder('273_91_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml" target="_self">INESimpleFunctionNoBorder</a></td><td class="desc">Basic interface for functions which have a single CPU kernel and no border </td></tr>
<tr id="row_273_91_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_batch_to_space_layer.xhtml" target="_self">NEBatchToSpaceLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_batch_to_space_layer_kernel.xhtml">NEBatchToSpaceLayerKernel</a> </td></tr>
<tr id="row_273_91_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_and.xhtml" target="_self">NEBitwiseAnd</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_and_kernel.xhtml">NEBitwiseAndKernel</a> </td></tr>
<tr id="row_273_91_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_not.xhtml" target="_self">NEBitwiseNot</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_not_kernel.xhtml">NEBitwiseNotKernel</a> </td></tr>
<tr id="row_273_91_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_or.xhtml" target="_self">NEBitwiseOr</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_or_kernel.xhtml">NEBitwiseOrKernel</a> </td></tr>
<tr id="row_273_91_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_xor.xhtml" target="_self">NEBitwiseXor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_xor_kernel.xhtml">NEBitwiseXorKernel</a> </td></tr>
<tr id="row_273_91_5_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bounding_box_transform.xhtml" target="_self">NEBoundingBoxTransform</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bounding_box_transform_kernel.xhtml">NEBoundingBoxTransformKernel</a> </td></tr>
<tr id="row_273_91_6_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_channel_shuffle_layer.xhtml" target="_self">NEChannelShuffleLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_channel_shuffle_layer_kernel.xhtml">NEChannelShuffleLayerKernel</a> </td></tr>
<tr id="row_273_91_7_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_to_space_layer.xhtml" target="_self">NEDepthToSpaceLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_depth_to_space_layer_kernel.xhtml">NEDepthToSpaceLayerKernel</a> </td></tr>
<tr id="row_273_91_8_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gather.xhtml" target="_self">NEGather</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_gather_kernel.xhtml">NEGatherKernel</a> </td></tr>
<tr id="row_273_91_9_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_mean_std_dev_normalization_layer.xhtml" target="_self">NEMeanStdDevNormalizationLayer</a></td><td class="desc">Basic function to execute mean and standard deviation normalization by calling <a class="el" href="classarm__compute_1_1_n_e_mean_std_dev_normalization_kernel.xhtml">NEMeanStdDevNormalizationKernel</a> </td></tr>
<tr id="row_273_91_10_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_prior_box_layer.xhtml" target="_self">NEPriorBoxLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_prior_box_layer_kernel.xhtml">NEPriorBoxLayerKernel</a> </td></tr>
<tr id="row_273_91_11_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reorg_layer.xhtml" target="_self">NEReorgLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_reorg_layer_kernel.xhtml">NEReorgLayerKernel</a> </td></tr>
<tr id="row_273_91_12_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reverse.xhtml" target="_self">NEReverse</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_reverse_kernel.xhtml">NEReverseKernel</a> </td></tr>
<tr id="row_273_91_13_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_r_o_i_align_layer.xhtml" target="_self">NEROIAlignLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_r_o_i_align_layer_kernel.xhtml">NEROIAlignLayerKernel</a> </td></tr>
<tr id="row_273_91_14_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_select.xhtml" target="_self">NESelect</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_select.xhtml">NESelect</a> </td></tr>
<tr id="row_273_91_15_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_tile.xhtml" target="_self">NETile</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_tile_kernel.xhtml">NETileKernel</a> </td></tr>
<tr id="row_273_91_16_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function.xhtml" target="_self">NESynthetizeFunction&lt; K &gt;</a></td><td class="desc">This template synthetizes an <a class="el" href="classarm__compute_1_1_i_n_e_simple_function.xhtml" title="Basic interface for functions which have a single CPU kernel.">INESimpleFunction</a> which runs the given kernel K </td></tr>
<tr id="row_273_92_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml" target="_self">NEActivationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_activation_kernel.xhtml">cpu::kernels::CpuActivationKernel</a> </td></tr>
<tr id="row_273_93_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_add_mul_add.xhtml" target="_self">NEAddMulAdd</a></td><td class="desc">Function to compute Add+Mul+Add fused operation </td></tr>
<tr id="row_273_94_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arg_min_max_layer.xhtml" target="_self">NEArgMinMaxLayer</a></td><td class="desc">Function to calculate the index of the minimum or maximum values in a tensor based on an axis </td></tr>
<tr id="row_273_95_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml" target="_self">NEArithmeticAddition</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml">cpu::kernels::CpuAddKernel</a> </td></tr>
<tr id="row_273_96_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arithmetic_subtraction.xhtml" target="_self">NEArithmeticSubtraction</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_sub_kernel.xhtml">cpu::kernels::CpuSubKernel</a> </td></tr>
<tr id="row_273_97_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_batch_normalization_layer.xhtml" target="_self">NEBatchNormalizationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_normalization_layer_kernel.xhtml">NENormalizationLayerKernel</a> and simulate a batch normalization layer </td></tr>
<tr id="row_273_98_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_cast.xhtml" target="_self">NECast</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml">cpu::kernels::CpuCastKernel</a> </td></tr>
<tr id="row_273_99_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml" target="_self">NEComplexPixelWiseMultiplication</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_complex_mul.xhtml">cpu::CpuComplexMul</a> </td></tr>
<tr id="row_273_100_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_concatenate_layer.xhtml" target="_self">NEConcatenateLayer</a></td><td class="desc">Basic function to execute concatenate tensors along a given axis </td></tr>
<tr id="row_273_101_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_conv3_d.xhtml" target="_self">NEConv3D</a></td><td class="desc">Basic function to simulate a 3d convolution </td></tr>
<tr id="row_273_102_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convert_fully_connected_weights.xhtml" target="_self">NEConvertFullyConnectedWeights</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_convert_fully_connected_weights_kernel.xhtml">cpu::kernels::CpuConvertFullyConnectedWeightsKernel</a> </td></tr>
<tr id="row_273_103_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_layer.xhtml" target="_self">NEConvolutionLayer</a></td><td class="desc">Basic function to simulate a convolution layer </td></tr>
<tr id="row_273_104_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_copy.xhtml" target="_self">NECopy</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_copy_kernel.xhtml">cpu::kernels::CpuCopyKernel</a> </td></tr>
<tr id="row_273_105_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml" target="_self">NECropResize</a></td><td class="desc">Function to perform cropping and resizing </td></tr>
<tr id="row_273_106_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_deconvolution_layer.xhtml" target="_self">NEDeconvolutionLayer</a></td><td class="desc">Function to run the deconvolution layer </td></tr>
<tr id="row_273_107_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_convert_layer.xhtml" target="_self">NEDepthConvertLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml">cpu::kernels::CpuCastKernel</a> </td></tr>
<tr id="row_273_108_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml" target="_self">NEDepthwiseConvolutionLayer</a></td><td class="desc">Function to execute a depthwise convolution </td></tr>
<tr id="row_273_109_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_dequantization_layer.xhtml" target="_self">NEDequantizationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_dequantize.xhtml">cpu::CpuDequantize</a> that dequantizes an input tensor </td></tr>
<tr id="row_273_110_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_detection_post_process_layer.xhtml" target="_self">NEDetectionPostProcessLayer</a></td><td class="desc">NE Function to generate the detection output based on center size encoded boxes, class prediction and anchors by doing non maximum suppression </td></tr>
<tr id="row_273_111_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_direct_convolution_layer.xhtml" target="_self">NEDirectConvolutionLayer</a></td><td class="desc">Function to run the direct convolution </td></tr>
<tr id="row_273_112_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml" target="_self">NEElementwiseComparison</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_comparison_kernel.xhtml">cpu::kernels::CpuComparisonKernel</a> </td></tr>
<tr id="row_273_113_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml" target="_self">NEElementwiseComparisonStatic&lt; op &gt;</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_comparison_kernel.xhtml">cpu::kernels::CpuComparisonKernel</a> </td></tr>
<tr id="row_273_114_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_elementwise_division.xhtml" target="_self">NEElementwiseDivision</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml">cpu::kernels::CpuArithmeticKernel</a> for division </td></tr>
<tr id="row_273_115_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_elementwise_max.xhtml" target="_self">NEElementwiseMax</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml">cpu::kernels::CpuArithmeticKernel</a> for max </td></tr>
<tr id="row_273_116_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_elementwise_min.xhtml" target="_self">NEElementwiseMin</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml">cpu::kernels::CpuArithmeticKernel</a> for min </td></tr>
<tr id="row_273_117_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_elementwise_power.xhtml" target="_self">NEElementwisePower</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml">cpu::kernels::CpuArithmeticKernel</a> for power </td></tr>
<tr id="row_273_118_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml" target="_self">NEElementwiseSquaredDiff</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml">cpu::kernels::CpuArithmeticKernel</a> for squared difference </td></tr>
<tr id="row_273_119_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_elementwise_unary_layer.xhtml" target="_self">NEElementwiseUnaryLayer&lt; op &gt;</a></td><td class="desc">Basic function to perform unary elementwise operations </td></tr>
<tr id="row_273_120_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_f_f_t1_d.xhtml" target="_self">NEFFT1D</a></td><td class="desc">Basic function to execute one dimensional FFT </td></tr>
<tr id="row_273_121_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_f_f_t2_d.xhtml" target="_self">NEFFT2D</a></td><td class="desc">Basic function to execute two dimensional FFT </td></tr>
<tr id="row_273_122_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_f_f_t_convolution_layer.xhtml" target="_self">NEFFTConvolutionLayer</a></td><td class="desc">Basic function to execute FFT-based convolution on CPU </td></tr>
<tr id="row_273_123_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill.xhtml" target="_self">NEFill</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_fill_kernel.xhtml">cpu::kernels::CpuFillKernel</a> </td></tr>
<tr id="row_273_124_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill_border.xhtml" target="_self">NEFillBorder</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_fill_border_kernel.xhtml">NEFillBorderKernel</a> </td></tr>
<tr id="row_273_125_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_flatten_layer.xhtml" target="_self">NEFlattenLayer</a></td><td class="desc">Basic function to execute flatten layer kernel </td></tr>
<tr id="row_273_126_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_floor.xhtml" target="_self">NEFloor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_floor_kernel.xhtml">cpu::kernels::CpuFloorKernel</a> </td></tr>
<tr id="row_273_127_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fully_connected_layer.xhtml" target="_self">NEFullyConnectedLayer</a></td><td class="desc">Basic function to compute a Fully Connected layer </td></tr>
<tr id="row_273_128_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fuse_batch_normalization.xhtml" target="_self">NEFuseBatchNormalization</a></td><td class="desc">Basic function to fuse the batch normalization node to a preceding convolution node </td></tr>
<tr id="row_273_129_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m.xhtml" target="_self">NEGEMM</a></td><td class="desc">Basic function to execute GEMM </td></tr>
<tr id="row_273_130_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_conv2d.xhtml" target="_self">NEGEMMConv2d</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_273_131_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_convolution_layer.xhtml" target="_self">NEGEMMConvolutionLayer</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_273_132_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml" target="_self">NEGEMMLowpMatrixMultiplyCore</a></td><td class="desc">Function to run Gemm on quantized types </td></tr>
<tr id="row_273_133_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml" target="_self">NEGEMMLowpOutputStage</a></td><td class="desc">Basic function to execute GEMMLowpQuantizeDown kernels </td></tr>
<tr id="row_273_134_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_generate_proposals_layer.xhtml" target="_self">NEGenerateProposalsLayer</a></td><td class="desc">Basic function to generate proposals for a RPN (Region Proposal Network) </td></tr>
<tr id="row_273_135_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_instance_normalization_layer.xhtml" target="_self">NEInstanceNormalizationLayer</a></td><td class="desc">Basic function to perform a Instance normalization </td></tr>
<tr id="row_273_136_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_l2_normalize_layer.xhtml" target="_self">NEL2NormalizeLayer</a></td><td class="desc">Basic function to perform a L2 normalization on a given axis </td></tr>
<tr id="row_273_137_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_logical_and.xhtml" target="_self">NELogicalAnd</a></td><td class="desc">Basic function to perform logical AND </td></tr>
<tr id="row_273_138_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_logical_not.xhtml" target="_self">NELogicalNot</a></td><td class="desc">Basic function to perform logical NOT </td></tr>
<tr id="row_273_139_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_logical_or.xhtml" target="_self">NELogicalOr</a></td><td class="desc">Basic function to perform logical OR </td></tr>
<tr id="row_273_140_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_l_s_t_m_layer.xhtml" target="_self">NELSTMLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_l_s_t_m_layer.xhtml">NELSTMLayer</a> </td></tr>
<tr id="row_273_141_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml" target="_self">NELSTMLayerQuantized</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">NELSTMLayerQuantized</a> </td></tr>
<tr id="row_273_142_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_mat_mul.xhtml" target="_self">NEMatMul</a></td><td class="desc">Basic function to run the following operators: </td></tr>
<tr id="row_273_143_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_max_unpooling_layer.xhtml" target="_self">NEMaxUnpoolingLayer</a></td><td class="desc">Function to perform MaxUnpooling </td></tr>
<tr id="row_273_144_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_normalization_layer.xhtml" target="_self">NENormalizationLayer</a></td><td class="desc">Basic function to compute a normalization layer </td></tr>
<tr id="row_273_145_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pad_layer.xhtml" target="_self">NEPadLayer</a></td><td class="desc">Basic function to pad a tensor </td></tr>
<tr id="row_273_146_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_permute.xhtml" target="_self">NEPermute</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_permute_kernel.xhtml">cpu::kernels::CpuPermuteKernel</a> </td></tr>
<tr id="row_273_147_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml" target="_self">NEPixelWiseMultiplication</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_mul.xhtml">cpu::CpuMul</a> </td></tr>
<tr id="row_273_148_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pooling3d_layer.xhtml" target="_self">NEPooling3dLayer</a></td><td class="desc">Basic function to simulate a pooling 3d layer with the specified pooling operation </td></tr>
<tr id="row_273_149_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pooling_layer.xhtml" target="_self">NEPoolingLayer</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_273_150_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_p_relu_layer.xhtml" target="_self">NEPReluLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml">cpu::kernels::CpuArithmeticKernel</a> for PRELU </td></tr>
<tr id="row_273_151_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml" target="_self">NEQLSTMLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml">NEQLSTMLayer</a> </td></tr>
<tr id="row_273_152_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_quantization_layer.xhtml" target="_self">NEQuantizationLayer</a></td><td class="desc">Basic function to run a quantization layer using <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_quantize.xhtml">cpu::CpuQuantize</a> </td></tr>
<tr id="row_273_153_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_range.xhtml" target="_self">NERange</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_range_kernel.xhtml">NERangeKernel</a> </td></tr>
<tr id="row_273_154_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reduce_mean.xhtml" target="_self">NEReduceMean</a></td><td class="desc">Basic function to perform reduce operation </td></tr>
<tr id="row_273_155_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reduction_operation.xhtml" target="_self">NEReductionOperation</a></td><td class="desc">Basic function to simulate a reduction operation </td></tr>
<tr id="row_273_156_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reshape_layer.xhtml" target="_self">NEReshapeLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_reshape_kernel.xhtml">cpu::kernels::CpuReshapeKernel</a> </td></tr>
<tr id="row_273_157_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_r_n_n_layer.xhtml" target="_self">NERNNLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_r_n_n_layer.xhtml">NERNNLayer</a> </td></tr>
<tr id="row_273_158_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer.xhtml" target="_self">NEROIPoolingLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer_kernel.xhtml">NEROIPoolingLayerKernel</a> </td></tr>
<tr id="row_273_159_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_scale.xhtml" target="_self">NEScale</a></td><td class="desc">Basic function to compute Scale </td></tr>
<tr id="row_273_160_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_slice.xhtml" target="_self">NESlice</a></td><td class="desc">Basic function to perform tensor slicing </td></tr>
<tr id="row_273_161_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_softmax_layer_generic.xhtml" target="_self">NESoftmaxLayerGeneric&lt; IS_LOG &gt;</a></td><td class="desc">Basic function to compute a SoftmaxLayer and a Log SoftmaxLayer </td></tr>
<tr id="row_273_162_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_space_to_batch_layer.xhtml" target="_self">NESpaceToBatchLayer</a></td><td class="desc">Basic function to spatial divide a tensor </td></tr>
<tr id="row_273_163_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_space_to_depth_layer.xhtml" target="_self">NESpaceToDepthLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_space_to_depth_layer_kernel.xhtml">NESpaceToDepthLayerKernel</a> </td></tr>
<tr id="row_273_164_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_stack_layer.xhtml" target="_self">NEStackLayer</a></td><td class="desc">Basic function to stack tensors along an axis </td></tr>
<tr id="row_273_165_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_strided_slice.xhtml" target="_self">NEStridedSlice</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_strided_slice_kernel.xhtml">NEStridedSliceKernel</a> </td></tr>
<tr id="row_273_166_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_transpose.xhtml" target="_self">NETranspose</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_transpose_kernel.xhtml">cpu::kernels::CpuTransposeKernel</a> </td></tr>
<tr id="row_273_167_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_unstack.xhtml" target="_self">NEUnstack</a></td><td class="desc">Basic function to unpack a rank-R tensor into rank-(R-1) tensors </td></tr>
<tr id="row_273_168_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_winograd_convolution_layer.xhtml" target="_self">NEWinogradConvolutionLayer</a></td><td class="desc">Basic function to simulate a convolution layer </td></tr>
<tr id="row_273_169_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_function_init_output_with_zero_and_with_zero_constant_border.xhtml" target="_self">CLSynthetizeFunctionInitOutputWithZeroAndWithZeroConstantBorder&lt; K, bordersize &gt;</a></td><td class="desc">As above but this also initializes to zero the input tensor </td></tr>
<tr id="row_273_170_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_273_170_" class="arrow" onclick="toggleFolder('273_170_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_split.xhtml" target="_self">CPPSplit&lt; CLSlice, ICLTensor &gt;</a></td><td class="desc"></td></tr>
<tr id="row_273_170_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_split.xhtml" target="_self">CLSplit</a></td><td class="desc">Basic function to split a tensor along a given axis </td></tr>
<tr id="row_273_171_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_273_171_" class="arrow" onclick="toggleFolder('273_171_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_split.xhtml" target="_self">CPPSplit&lt; NESlice &gt;</a></td><td class="desc"></td></tr>
<tr id="row_273_171_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_split.xhtml" target="_self">NESplit</a></td><td class="desc">Basic function to split a tensor along a given axis </td></tr>
<tr id="row_274_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_274_" class="arrow" onclick="toggleFolder('274_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml" target="_self">IGemmCommon</a></td><td class="desc"></td></tr>
<tr id="row_274_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_274_0_" class="arrow" onclick="toggleFolder('274_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml" target="_self">GemmCommon&lt; To, Tr &gt;</a></td><td class="desc"></td></tr>
<tr id="row_274_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_gemm_hybrid.xhtml" target="_self">GemmHybrid&lt; strategy, To, Tr &gt;</a></td><td class="desc"></td></tr>
<tr id="row_274_0_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_gemm_hybrid_indirect.xhtml" target="_self">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;</a></td><td class="desc"></td></tr>
<tr id="row_274_0_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_gemm_hybrid_quantized.xhtml" target="_self">GemmHybridQuantized&lt; strategy, To, Tr &gt;</a></td><td class="desc"></td></tr>
<tr id="row_274_0_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_gemm_hybrid_quantized_inline.xhtml" target="_self">GemmHybridQuantizedInline&lt; strategy, To, Tr &gt;</a></td><td class="desc"></td></tr>
<tr id="row_274_0_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml" target="_self">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;</a></td><td class="desc"></td></tr>
<tr id="row_274_0_5_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_gemm_interleaved_pretransposed2d.xhtml" target="_self">GemmInterleavedPretransposed2d&lt; strategy, To, Tr &gt;</a></td><td class="desc"></td></tr>
<tr id="row_274_0_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_gemv_batched.xhtml" target="_self">GemvBatched&lt; To, Tr &gt;</a></td><td class="desc"></td></tr>
<tr id="row_274_0_7_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml" target="_self">GemvPretransposed&lt; strategy, To, Tr, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_274_0_8_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_quantize_wrapper.xhtml" target="_self">QuantizeWrapper&lt; To, Tr, Tgemm &gt;</a></td><td class="desc"></td></tr>
<tr id="row_274_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml" target="_self">GemmCommon&lt; TypeInput, TypeOutput &gt;</a></td><td class="desc"></td></tr>
<tr id="row_275_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy.xhtml" target="_self">IGenericDepthfirstStrategy&lt; TInput, TOutput, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_276_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_276_" class="arrow" onclick="toggleFolder('276_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy.xhtml" target="_self">IGenericDepthfirstStrategy&lt; __fp16, __fp16 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_276_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__fp16__nhwc__avg__generic__depthfirst.xhtml" target="_self">sme_fp16_nhwc_avg_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_276_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__fp16__nhwc__max__generic__depthfirst.xhtml" target="_self">sme_fp16_nhwc_max_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_277_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_277_" class="arrow" onclick="toggleFolder('277_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy.xhtml" target="_self">IGenericDepthfirstStrategy&lt; float, float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_277_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__fp32__nhwc__avg__generic__depthfirst.xhtml" target="_self">sme_fp32_nhwc_avg_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_277_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__fp32__nhwc__max__generic__depthfirst.xhtml" target="_self">sme_fp32_nhwc_max_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_278_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_278_" class="arrow" onclick="toggleFolder('278_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy.xhtml" target="_self">IGenericDepthfirstStrategy&lt; int8_t, int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_278_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__s8__nhwc__avg__generic__depthfirst.xhtml" target="_self">sme_s8_nhwc_avg_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_278_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__s8__nhwc__max__generic__depthfirst.xhtml" target="_self">sme_s8_nhwc_max_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_279_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_279_" class="arrow" onclick="toggleFolder('279_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy.xhtml" target="_self">IGenericDepthfirstStrategy&lt; int8_t, int8_t, Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_279_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__s8q__nhwc__avg__generic__depthfirst.xhtml" target="_self">sme_s8q_nhwc_avg_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_279_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__s8q__nhwc__max__generic__depthfirst.xhtml" target="_self">sme_s8q_nhwc_max_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_280_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_280_" class="arrow" onclick="toggleFolder('280_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy.xhtml" target="_self">IGenericDepthfirstStrategy&lt; T, T, Nothing &gt;</a></td><td class="desc"></td></tr>
<tr id="row_280_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1cpp__nhwc__1x1__stride__any__depthfirst.xhtml" target="_self">cpp_nhwc_1x1_stride_any_depthfirst&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_281_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy_3_01_t_input_00_01_t_output_00_01_nothing_01_4.xhtml" target="_self">IGenericDepthfirstStrategy&lt; TInput, TOutput, Nothing &gt;</a></td><td class="desc"></td></tr>
<tr id="row_282_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy_3_01_t_input_00_01_t_output_00_01_requantize32_01_4.xhtml" target="_self">IGenericDepthfirstStrategy&lt; TInput, TOutput, Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_283_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_283_" class="arrow" onclick="toggleFolder('283_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy.xhtml" target="_self">IGenericDepthfirstStrategy&lt; uint8_t, uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_283_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__u8__nhwc__avg__generic__depthfirst.xhtml" target="_self">sme_u8_nhwc_avg_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_283_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__u8__nhwc__max__generic__depthfirst.xhtml" target="_self">sme_u8_nhwc_max_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_284_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_284_" class="arrow" onclick="toggleFolder('284_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy.xhtml" target="_self">IGenericDepthfirstStrategy&lt; uint8_t, uint8_t, Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_284_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__u8q__nhwc__avg__generic__depthfirst.xhtml" target="_self">sme_u8q_nhwc_avg_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_284_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1sme__u8q__nhwc__max__generic__depthfirst.xhtml" target="_self">sme_u8q_nhwc_max_generic_depthfirst</a></td><td class="desc"></td></tr>
<tr id="row_285_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_285_" class="arrow" onclick="toggleFolder('285_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml" target="_self">IGpuKernelComponent</a></td><td class="desc">An abstract interface of a component </td></tr>
<tr id="row_285_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_activation.xhtml" target="_self">ClComponentActivation</a></td><td class="desc"></td></tr>
<tr id="row_285_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_cast.xhtml" target="_self">ClComponentCast</a></td><td class="desc"></td></tr>
<tr id="row_285_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d.xhtml" target="_self">ClComponentDepthwiseConv2d</a></td><td class="desc"></td></tr>
<tr id="row_285_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml" target="_self">ClComponentDirectConv2d</a></td><td class="desc"></td></tr>
<tr id="row_285_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_elementwise_binary.xhtml" target="_self">ClComponentElementwiseBinary</a></td><td class="desc"></td></tr>
<tr id="row_285_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_logits1_d_max_shift_exp_sum.xhtml" target="_self">ClComponentLogits1DMaxShiftExpSum</a></td><td class="desc">Component to calculate max-shifted exponentials and their sum </td></tr>
<tr id="row_285_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_logits1_d_norm.xhtml" target="_self">ClComponentLogits1DNorm</a></td><td class="desc">Component to calculate the final step of the Softmax Layer where each logit value is multiplied by the inverse of the sum of the logits </td></tr>
<tr id="row_285_7_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_pool2d.xhtml" target="_self">ClComponentPool2d</a></td><td class="desc"></td></tr>
<tr id="row_285_8_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_reshape.xhtml" target="_self">ClComponentReshape</a></td><td class="desc"></td></tr>
<tr id="row_285_9_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_resize.xhtml" target="_self">ClComponentResize</a></td><td class="desc"></td></tr>
<tr id="row_285_10_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_store.xhtml" target="_self">ClComponentStore</a></td><td class="desc"></td></tr>
<tr id="row_286_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_286_" class="arrow" onclick="toggleFolder('286_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml" target="_self">IGpuKernelWriter</a></td><td class="desc">An interface that can write a gpu kernel </td></tr>
<tr id="row_286_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml" target="_self">ClTemplateWriter</a></td><td class="desc">Use a templated-string-based method to write kernel code It stitches the component code templates together based on the valid fusion configuration </td></tr>
<tr id="row_287_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_287_" class="arrow" onclick="toggleFolder('287_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml" target="_self">IGpuTemplateComponentWriter</a></td><td class="desc">An interface used by <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml">ClTemplateWriter</a> to write source code for a kernel component </td></tr>
<tr id="row_287_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_activation.xhtml" target="_self">ClTemplateActivation</a></td><td class="desc"></td></tr>
<tr id="row_287_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml" target="_self">ClTemplateCast</a></td><td class="desc"></td></tr>
<tr id="row_287_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml" target="_self">ClTemplateDepthwiseConv2d</a></td><td class="desc"></td></tr>
<tr id="row_287_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml" target="_self">ClTemplateDirectConv2d</a></td><td class="desc"></td></tr>
<tr id="row_287_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml" target="_self">ClTemplateElementwiseBinary</a></td><td class="desc"></td></tr>
<tr id="row_287_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_logits1_d_max_shift_exp_sum.xhtml" target="_self">ClTemplateLogits1DMaxShiftExpSum</a></td><td class="desc"></td></tr>
<tr id="row_287_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_logits1_d_norm.xhtml" target="_self">ClTemplateLogits1DNorm</a></td><td class="desc"></td></tr>
<tr id="row_287_7_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_pool2d.xhtml" target="_self">ClTemplatePool2d</a></td><td class="desc"></td></tr>
<tr id="row_287_8_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_reshape.xhtml" target="_self">ClTemplateReshape</a></td><td class="desc"></td></tr>
<tr id="row_287_9_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_resize.xhtml" target="_self">ClTemplateResize</a></td><td class="desc"></td></tr>
<tr id="row_287_10_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_store.xhtml" target="_self">ClTemplateStore</a></td><td class="desc"></td></tr>
<tr id="row_288_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_288_" class="arrow" onclick="toggleFolder('288_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_graph_mutator.xhtml" target="_self">IGraphMutator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> mutator interface </td></tr>
<tr id="row_288_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_depth_concat_sub_tensor_mutator.xhtml" target="_self">DepthConcatSubTensorMutator</a></td><td class="desc">Mutation pass to optimize depth concatenation operations by using sub-tensors </td></tr>
<tr id="row_288_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_grouped_convolution_mutator.xhtml" target="_self">GroupedConvolutionMutator</a></td><td class="desc">Mutation pass to implement/optimize grouped convolutions </td></tr>
<tr id="row_288_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml" target="_self">InPlaceOperationMutator</a></td><td class="desc">Mutation pass to optimize operations that can be performed in-place </td></tr>
<tr id="row_288_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_node_execution_method_mutator.xhtml" target="_self">NodeExecutionMethodMutator</a></td><td class="desc">Mutation pass to fall-back to default execution method </td></tr>
<tr id="row_288_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_node_fusion_mutator.xhtml" target="_self">NodeFusionMutator</a></td><td class="desc">Mutation pass to fuss nodes </td></tr>
<tr id="row_288_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_split_layer_sub_tensor_mutator.xhtml" target="_self">SplitLayerSubTensorMutator</a></td><td class="desc">Mutation pass to optimize split operations by using sub-tensors </td></tr>
<tr id="row_288_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_synthetic_data_type_mutator.xhtml" target="_self">SyntheticDataTypeMutator</a></td><td class="desc">Mutation pass to create synthetic graphs of a given data type </td></tr>
<tr id="row_289_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_289_" class="arrow" onclick="toggleFolder('289_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_graph_printer.xhtml" target="_self">IGraphPrinter</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> printer interface </td></tr>
<tr id="row_289_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_printer.xhtml" target="_self">DotGraphPrinter</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> printer interface </td></tr>
<tr id="row_290_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_290_" class="arrow" onclick="toggleFolder('290_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_i_image_data_feeder.xhtml" target="_self">IImageDataFeeder</a></td><td class="desc"><a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> feeder interface </td></tr>
<tr id="row_290_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_file_image_feeder.xhtml" target="_self">FileImageFeeder</a></td><td class="desc">File <a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> feeder concrete implementation </td></tr>
<tr id="row_290_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_memory_image_feeder.xhtml" target="_self">MemoryImageFeeder</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> <a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> feeder concrete implementation </td></tr>
<tr id="row_291_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_291_" class="arrow" onclick="toggleFolder('291_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml" target="_self">IImageLoader</a></td><td class="desc"><a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> loader interface </td></tr>
<tr id="row_291_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_j_p_e_g_loader.xhtml" target="_self">JPEGLoader</a></td><td class="desc">Class to load the content of a JPEG file into an <a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> </td></tr>
<tr id="row_291_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_p_p_m_loader.xhtml" target="_self">PPMLoader</a></td><td class="desc">PPM <a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> loader concrete implementation </td></tr>
<tr id="row_292_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_292_" class="arrow" onclick="toggleFolder('292_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_kernel.xhtml" target="_self">IKernel</a></td><td class="desc">Common information for all the kernels </td></tr>
<tr id="row_292_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_292_0_" class="arrow" onclick="toggleFolder('292_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml" target="_self">ICLKernel</a></td><td class="desc">Common interface for all the OpenCL kernels </td></tr>
<tr id="row_292_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer_kernel.xhtml" target="_self">CLArgMinMaxLayerKernel</a></td><td class="desc">Interface for the reduction operation kernel </td></tr>
<tr id="row_292_0_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_batch_normalization_layer_kernel.xhtml" target="_self">CLBatchNormalizationLayerKernel</a></td><td class="desc">Interface for the BatchNormalization layer kernel </td></tr>
<tr id="row_292_0_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_batch_to_space_layer_kernel.xhtml" target="_self">CLBatchToSpaceLayerKernel</a></td><td class="desc">Interface for the batch to space kernel </td></tr>
<tr id="row_292_0_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_kernel.xhtml" target="_self">CLBitwiseKernel</a></td><td class="desc">Interface for the bitwise operation kernel </td></tr>
<tr id="row_292_0_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bounding_box_transform_kernel.xhtml" target="_self">CLBoundingBoxTransformKernel</a></td><td class="desc">Interface for the bounding box kernel </td></tr>
<tr id="row_292_0_5_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_channel_shuffle_layer_kernel.xhtml" target="_self">CLChannelShuffleLayerKernel</a></td><td class="desc">Interface for the channel shuffle kernel </td></tr>
<tr id="row_292_0_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_comparison_kernel.xhtml" target="_self">CLComparisonKernel</a></td><td class="desc">Interface for the comparison kernel </td></tr>
<tr id="row_292_0_7_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_compute_all_anchors_kernel.xhtml" target="_self">CLComputeAllAnchorsKernel</a></td><td class="desc">Interface for Compute All Anchors kernel </td></tr>
<tr id="row_292_0_8_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_compute_mean_variance.xhtml" target="_self">CLComputeMeanVariance</a></td><td class="desc">Interface for compute Mean and Variance per channel </td></tr>
<tr id="row_292_0_9_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_deconvolution_layer_upsample_kernel.xhtml" target="_self">CLDeconvolutionLayerUpsampleKernel</a></td><td class="desc">Interface for the Deconvolution layer kernel on OpenCL </td></tr>
<tr id="row_292_0_10_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_to_space_layer_kernel.xhtml" target="_self">CLDepthToSpaceLayerKernel</a></td><td class="desc">Interface for the depth to space kernel </td></tr>
<tr id="row_292_0_11_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer_native_kernel.xhtml" target="_self">CLDepthwiseConvolutionLayerNativeKernel</a></td><td class="desc">Interface for the kernel to run a MxN depthwise convolution </td></tr>
<tr id="row_292_0_12_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_f_f_t_digit_reverse_kernel.xhtml" target="_self">CLFFTDigitReverseKernel</a></td><td class="desc">Interface for the digit reverse operation kernel </td></tr>
<tr id="row_292_0_13_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_f_f_t_radix_stage_kernel.xhtml" target="_self">CLFFTRadixStageKernel</a></td><td class="desc">Interface for the FFT radix stage kernel </td></tr>
<tr id="row_292_0_14_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_f_f_t_scale_kernel.xhtml" target="_self">CLFFTScaleKernel</a></td><td class="desc">Interface for the inverse fft scale kernel </td></tr>
<tr id="row_292_0_15_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml" target="_self">CLFillBorderKernel</a></td><td class="desc">Interface for filling the border of a kernel </td></tr>
<tr id="row_292_0_16_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fuse_batch_normalization_kernel.xhtml" target="_self">CLFuseBatchNormalizationKernel</a></td><td class="desc">OpenCL kernel to fuse the batch normalization node to a preceding convolution node </td></tr>
<tr id="row_292_0_17_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gather_kernel.xhtml" target="_self">CLGatherKernel</a></td><td class="desc">Interface for the kernel to perform tensor reshaping </td></tr>
<tr id="row_292_0_18_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_instance_normalization_layer_kernel.xhtml" target="_self">CLInstanceNormalizationLayerKernel</a></td><td class="desc">Interface for performing an instance normalization </td></tr>
<tr id="row_292_0_19_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l2_normalize_layer_kernel.xhtml" target="_self">CLL2NormalizeLayerKernel</a></td><td class="desc">Interface for performing a L2 normalize on a given axis given the square sum of it in this axis </td></tr>
<tr id="row_292_0_20_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_max_unpooling_layer_kernel.xhtml" target="_self">CLMaxUnpoolingLayerKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_292_0_21_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_mean_std_dev_normalization_kernel.xhtml" target="_self">CLMeanStdDevNormalizationKernel</a></td><td class="desc">Interface for the kernel to normalize the input 2D tensor across the first dimension with respect to mean and standard deviation of the same dimension </td></tr>
<tr id="row_292_0_22_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_normalization_layer_kernel.xhtml" target="_self">CLNormalizationLayerKernel</a></td><td class="desc">Interface for the normalization layer kernel </td></tr>
<tr id="row_292_0_23_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_normalize_planar_y_u_v_layer_kernel.xhtml" target="_self">CLNormalizePlanarYUVLayerKernel</a></td><td class="desc">Interface for the NormalizePlanarYUV layer kernel </td></tr>
<tr id="row_292_0_24_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pad_layer_kernel.xhtml" target="_self">CLPadLayerKernel</a></td><td class="desc">Interface for the PadLayer function </td></tr>
<tr id="row_292_0_25_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_prior_box_layer_kernel.xhtml" target="_self">CLPriorBoxLayerKernel</a></td><td class="desc">Interface for the PriorBox layer kernel </td></tr>
<tr id="row_292_0_26_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_q_l_s_t_m_layer_normalization_kernel.xhtml" target="_self">CLQLSTMLayerNormalizationKernel</a></td><td class="desc">Interface for the kernel to do layer normalization </td></tr>
<tr id="row_292_0_27_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_range_kernel.xhtml" target="_self">CLRangeKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> class for Range </td></tr>
<tr id="row_292_0_28_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reduction_operation_kernel.xhtml" target="_self">CLReductionOperationKernel</a></td><td class="desc">Interface for the reduction operation kernel </td></tr>
<tr id="row_292_0_29_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reorg_layer_kernel.xhtml" target="_self">CLReorgLayerKernel</a></td><td class="desc">OpenCL kernel to perform a reorg layer </td></tr>
<tr id="row_292_0_30_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reverse_kernel.xhtml" target="_self">CLReverseKernel</a></td><td class="desc">Interface for the reverse kernel </td></tr>
<tr id="row_292_0_31_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_r_o_i_align_layer_kernel.xhtml" target="_self">CLROIAlignLayerKernel</a></td><td class="desc">Interface for the RoIAlign kernel </td></tr>
<tr id="row_292_0_32_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer_kernel.xhtml" target="_self">CLROIPoolingLayerKernel</a></td><td class="desc">Interface for the ROI pooling layer kernel </td></tr>
<tr id="row_292_0_33_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_select_kernel.xhtml" target="_self">CLSelectKernel</a></td><td class="desc">OpenCL interface for executing the select kernel </td></tr>
<tr id="row_292_0_34_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_space_to_batch_layer_kernel.xhtml" target="_self">CLSpaceToBatchLayerKernel</a></td><td class="desc">Interface for the space to batch kernel </td></tr>
<tr id="row_292_0_35_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_space_to_depth_layer_kernel.xhtml" target="_self">CLSpaceToDepthLayerKernel</a></td><td class="desc">Interface for the space to depth kernel </td></tr>
<tr id="row_292_0_36_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_stack_layer_kernel.xhtml" target="_self">CLStackLayerKernel</a></td><td class="desc">OpenCL kernel to stacks a rank-R tensor into one with rank-(R+1) along the axis dimension </td></tr>
<tr id="row_292_0_37_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_strided_slice_kernel.xhtml" target="_self">CLStridedSliceKernel</a></td><td class="desc">Interface for the kernel to perform tensor strided slicing </td></tr>
<tr id="row_292_0_38_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tile_kernel.xhtml" target="_self">CLTileKernel</a></td><td class="desc">OpenCL kernel to perform a Tile operation </td></tr>
<tr id="row_292_0_39_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime.xhtml" target="_self">ClKernelRuntime</a></td><td class="desc">OpenCL runtime to run a single kernel </td></tr>
<tr id="row_292_0_40_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_0_40_" class="arrow" onclick="toggleFolder('292_0_40_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple_kernel.xhtml" target="_self">ICLSimpleKernel</a></td><td class="desc">Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_292_0_40_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_deconvolution_reshape_output_kernel.xhtml" target="_self">CLDeconvolutionReshapeOutputKernel</a></td><td class="desc">Interface for the OpenCL kernel to be used for reshaping the tensor before returning the result of deconvolution </td></tr>
<tr id="row_292_0_40_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_292_0_40_1_" class="arrow" onclick="toggleFolder('292_0_40_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple2_d_kernel.xhtml" target="_self">ICLSimple2DKernel</a></td><td class="desc">Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_292_0_40_1_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple3_d_kernel.xhtml" target="_self">ICLSimple3DKernel</a></td><td class="desc">Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_292_0_41_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_activation_kernel.xhtml" target="_self">ClActivationKernel</a></td><td class="desc">Interface for the activation kernel </td></tr>
<tr id="row_292_0_42_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_batch_concatenate_kernel.xhtml" target="_self">ClBatchConcatenateKernel</a></td><td class="desc">Interface for the batch concatenate kernel </td></tr>
<tr id="row_292_0_43_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_cast_kernel.xhtml" target="_self">ClCastKernel</a></td><td class="desc">Casts a given tensor to a new type </td></tr>
<tr id="row_292_0_44_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_col2_im_kernel.xhtml" target="_self">ClCol2ImKernel</a></td><td class="desc">Interface for the col2im reshaping kernel </td></tr>
<tr id="row_292_0_45_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_complex_mul_kernel.xhtml" target="_self">ClComplexMulKernel</a></td><td class="desc">Interface for the complex pixelwise multiplication kernel </td></tr>
<tr id="row_292_0_46_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_convert_fully_connected_weights_kernel.xhtml" target="_self">ClConvertFullyConnectedWeightsKernel</a></td><td class="desc"></td></tr>
<tr id="row_292_0_47_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_copy_kernel.xhtml" target="_self">ClCopyKernel</a></td><td class="desc">OpenCL kernel to perform a copy between two tensors </td></tr>
<tr id="row_292_0_48_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_crop_kernel.xhtml" target="_self">ClCropKernel</a></td><td class="desc">OpenCL kernel to perform a copy between two tensors </td></tr>
<tr id="row_292_0_49_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_depth_concatenate_kernel.xhtml" target="_self">ClDepthConcatenateKernel</a></td><td class="desc">Interface for the depth concatenate kernel </td></tr>
<tr id="row_292_0_50_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_dequantize_kernel.xhtml" target="_self">ClDequantizeKernel</a></td><td class="desc">Interface for the dequantization layer kernel </td></tr>
<tr id="row_292_0_51_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_direct_conv2d_kernel.xhtml" target="_self">ClDirectConv2dKernel</a></td><td class="desc">Interface for the direct convolution kernel </td></tr>
<tr id="row_292_0_52_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_direct_conv3d_kernel.xhtml" target="_self">ClDirectConv3dKernel</a></td><td class="desc">Interface for the direct convolution 3d kernel </td></tr>
<tr id="row_292_0_53_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_0_53_" class="arrow" onclick="toggleFolder('292_0_53_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel.xhtml" target="_self">ClElementwiseKernel</a></td><td class="desc">Interface for an element-wise operation kernel </td></tr>
<tr id="row_292_0_53_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml" target="_self">ClArithmeticKernel</a></td><td class="desc"></td></tr>
<tr id="row_292_0_53_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml" target="_self">ClLogicalBinaryKernel</a></td><td class="desc"></td></tr>
<tr id="row_292_0_53_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml" target="_self">ClSaturatedArithmeticKernel</a></td><td class="desc">Addition operation </td></tr>
<tr id="row_292_0_54_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_element_wise_unary_kernel.xhtml" target="_self">ClElementWiseUnaryKernel</a></td><td class="desc">Interface for the elementwise unary operator </td></tr>
<tr id="row_292_0_55_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_fill_kernel.xhtml" target="_self">ClFillKernel</a></td><td class="desc">Interface for filling the planes of a tensor </td></tr>
<tr id="row_292_0_56_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_floor_kernel.xhtml" target="_self">ClFloorKernel</a></td><td class="desc">OpenCL kernel to perform a floor operation </td></tr>
<tr id="row_292_0_57_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_native_kernel.xhtml" target="_self">ClGemmLowpMatrixMultiplyNativeKernel</a></td><td class="desc">OpenCL kernel to multiply matrices with QASYMM8/QASYMM8_SIGNED data type </td></tr>
<tr id="row_292_0_58_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_kernel.xhtml" target="_self">ClGemmLowpMatrixMultiplyReshapedKernel</a></td><td class="desc">OpenCL kernel to multiply matrices when both the input matrices LHS (src0) and RHS (src1) have been reshaped </td></tr>
<tr id="row_292_0_59_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel.xhtml" target="_self">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel</a></td><td class="desc">OpenCL kernel to multiply matrices with QASYMM8 data type when only the input matrix RHS (src1) has been reshaped </td></tr>
<tr id="row_292_0_60_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel.xhtml" target="_self">ClGemmLowpMatrixMultiplyReshapedOnlyRhsMMULKernel</a></td><td class="desc">OpenCL kernel to multiply matrices with QASYMM8/QASYMM8_SIGNED data types when only the input matrix RHS (src1) has been reshaped using the MMUL instruction </td></tr>
<tr id="row_292_0_61_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_kernel.xhtml" target="_self">ClGemmLowpOffsetContributionKernel</a></td><td class="desc">OpenCL kernel used to add the offset contribution after the matrix multiplication </td></tr>
<tr id="row_292_0_62_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_output_stage_kernel.xhtml" target="_self">ClGemmLowpOffsetContributionOutputStageKernel</a></td><td class="desc">OpenCL kernel used to add the offset contribution after the matrix multiplication and perform the output stage </td></tr>
<tr id="row_292_0_63_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel.xhtml" target="_self">ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel</a></td><td class="desc">OpenCL kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8/QASYMM8_SIGNED/QSYMM16 </td></tr>
<tr id="row_292_0_64_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_quantize_down_int32_scale_by_float_kernel.xhtml" target="_self">ClGemmLowpQuantizeDownInt32ScaleByFloatKernel</a></td><td class="desc">OpenCL kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8/QASYMM8_SIGNED </td></tr>
<tr id="row_292_0_65_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_quantize_down_int32_scale_kernel.xhtml" target="_self">ClGemmLowpQuantizeDownInt32ScaleKernel</a></td><td class="desc">OpenCL kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8/QASYMM8_SIGNED </td></tr>
<tr id="row_292_0_66_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_native_kernel.xhtml" target="_self">ClGemmMatrixMultiplyNativeKernel</a></td><td class="desc">OpenCL kernel to multiply matrices when neither of the input matrices have been reshaped </td></tr>
<tr id="row_292_0_67_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_kernel.xhtml" target="_self">ClGemmMatrixMultiplyReshapedKernel</a></td><td class="desc">OpenCL kernel to multiply matrices when both the input matrices LHS (src0) and RHS (src1) have been reshaped </td></tr>
<tr id="row_292_0_68_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_only_rhs_kernel.xhtml" target="_self">ClGemmMatrixMultiplyReshapedOnlyRhsKernel</a></td><td class="desc">OpenCL kernel to multiply matrices when only the input matrix RHS (src1) has been reshaped </td></tr>
<tr id="row_292_0_69_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel.xhtml" target="_self">ClGemmMatrixMultiplyReshapedOnlyRhsMMULKernel</a></td><td class="desc">OpenCL kernel to multiply matrices using MMUL when only the input matrix RHS (src1) has been reshaped </td></tr>
<tr id="row_292_0_70_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_lhs_matrix_kernel.xhtml" target="_self">ClGemmReshapeLhsMatrixKernel</a></td><td class="desc">OpenCL kernel to reshape the LHS matrix when performing the matrix multiplication </td></tr>
<tr id="row_292_0_71_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_rhs_matrix_kernel.xhtml" target="_self">ClGemmReshapeRhsMatrixKernel</a></td><td class="desc">OpenCL kernel to reshape the RHS matrix when performing the matrix multiplication In particular, this kernel splits the src matrix in blocks of size K0xN0 and stores each one in the dst matrix unrolling the values </td></tr>
<tr id="row_292_0_72_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_height_concatenate_kernel.xhtml" target="_self">ClHeightConcatenateKernel</a></td><td class="desc">Interface for the height concatenate kernel </td></tr>
<tr id="row_292_0_73_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_im2_col_kernel.xhtml" target="_self">ClIm2ColKernel</a></td><td class="desc">Interface for the im2col reshape kernel </td></tr>
<tr id="row_292_0_74_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_indirect_conv2d_address_precalculation_kernel.xhtml" target="_self">ClIndirectConv2dAddressPrecalculationKernel</a></td><td class="desc">Interface for the direct convolution kernel </td></tr>
<tr id="row_292_0_75_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_indirect_conv2d_kernel.xhtml" target="_self">ClIndirectConv2dKernel</a></td><td class="desc">Interface for the indirect convolution kernel </td></tr>
<tr id="row_292_0_76_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logits1_d_max_shift_exp_sum_kernel.xhtml" target="_self">ClLogits1DMaxShiftExpSumKernel</a></td><td class="desc">Interface for max, shifting, exponentiating and summing the logits </td></tr>
<tr id="row_292_0_77_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logits1_d_norm_kernel.xhtml" target="_self">ClLogits1DNormKernel</a></td><td class="desc">Interface for calculating the final step of the Softmax Layer where each logit value is multiplied by the inverse of the sum of the logits </td></tr>
<tr id="row_292_0_78_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_lowp_native_kernel.xhtml" target="_self">ClMatMulLowpNativeKernel</a></td><td class="desc"></td></tr>
<tr id="row_292_0_79_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_native_kernel.xhtml" target="_self">ClMatMulNativeKernel</a></td><td class="desc"></td></tr>
<tr id="row_292_0_80_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mul_kernel.xhtml" target="_self">ClMulKernel</a></td><td class="desc">Interface for the pixelwise multiplication kernel </td></tr>
<tr id="row_292_0_81_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_permute_kernel.xhtml" target="_self">ClPermuteKernel</a></td><td class="desc">OpenCL kernel to perform tensor permutation </td></tr>
<tr id="row_292_0_82_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_pool2d_kernel.xhtml" target="_self">ClPool2dKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_292_0_83_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_pool3d_kernel.xhtml" target="_self">ClPool3dKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_292_0_84_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_quantize_kernel.xhtml" target="_self">ClQuantizeKernel</a></td><td class="desc">Interface for the quantization layer kernel </td></tr>
<tr id="row_292_0_85_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_reshape_kernel.xhtml" target="_self">ClReshapeKernel</a></td><td class="desc">Interface for the kernel to perform tensor reshaping </td></tr>
<tr id="row_292_0_86_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_scale_kernel.xhtml" target="_self">ClScaleKernel</a></td><td class="desc">Interface for the scale kernel </td></tr>
<tr id="row_292_0_87_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_transposed_convolution_kernel.xhtml" target="_self">ClTransposedConvolutionKernel</a></td><td class="desc">OpenCL kernel for transposed convolution </td></tr>
<tr id="row_292_0_88_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_transpose_kernel.xhtml" target="_self">ClTransposeKernel</a></td><td class="desc">OpenCL kernel to transpose a 2D tensor </td></tr>
<tr id="row_292_0_89_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_weights_reshape_kernel.xhtml" target="_self">ClWeightsReshapeKernel</a></td><td class="desc">OpenCL kernel to perform reshaping on the weights used by convolution and locally connected layer </td></tr>
<tr id="row_292_0_90_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_width_concatenate2_tensors_kernel.xhtml" target="_self">ClWidthConcatenate2TensorsKernel</a></td><td class="desc">Interface for the width concatenate kernel of 2 tensors </td></tr>
<tr id="row_292_0_91_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_width_concatenate4_tensors_kernel.xhtml" target="_self">ClWidthConcatenate4TensorsKernel</a></td><td class="desc">Interface for the width concatenate kernel of 4 tensors </td></tr>
<tr id="row_292_0_92_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_width_concatenate_kernel.xhtml" target="_self">ClWidthConcatenateKernel</a></td><td class="desc">Interface for the width concatenate kernel </td></tr>
<tr id="row_292_0_93_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_winograd_filter_transform_kernel.xhtml" target="_self">ClWinogradFilterTransformKernel</a></td><td class="desc">Interface for the Winograd filter transform kernel </td></tr>
<tr id="row_292_0_94_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_winograd_input_transform_kernel.xhtml" target="_self">ClWinogradInputTransformKernel</a></td><td class="desc">OpenCL kernel to perform Winograd input transform </td></tr>
<tr id="row_292_0_95_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_winograd_output_transform_kernel.xhtml" target="_self">ClWinogradOutputTransformKernel</a></td><td class="desc">Interface for the Winograd output transform kernel </td></tr>
<tr id="row_292_0_96_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_0_96_" class="arrow" onclick="toggleFolder('292_0_96_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_i_cl_gemm_lowp_reduction_kernel.xhtml" target="_self">IClGemmLowpReductionKernel</a></td><td class="desc">Common interface for all OpenCL reduction kernels </td></tr>
<tr id="row_292_0_96_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_a_reduction_kernel.xhtml" target="_self">ClGemmLowpMatrixAReductionKernel</a></td><td class="desc">OpenCL kernel used to compute the row-vectors of sums of all the entries in each row of Matrix A </td></tr>
<tr id="row_292_0_96_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_b_reduction_kernel.xhtml" target="_self">ClGemmLowpMatrixBReductionKernel</a></td><td class="desc">OpenCL kernel used to compute the row-vectors of sums of all the entries in each column of Matrix B </td></tr>
<tr id="row_292_1_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_292_1_" class="arrow" onclick="toggleFolder('292_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml" target="_self">ICPPKernel</a></td><td class="desc">Common interface for all kernels implemented in C++ </td></tr>
<tr id="row_292_1_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_box_with_non_maxima_suppression_limit_kernel.xhtml" target="_self">CPPBoxWithNonMaximaSuppressionLimitKernel</a></td><td class="desc">CPP kernel to perform computation of BoxWithNonMaximaSuppressionLimit </td></tr>
<tr id="row_292_1_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_non_maximum_suppression_kernel.xhtml" target="_self">CPPNonMaximumSuppressionKernel</a></td><td class="desc">CPP Function to perform non maximum suppression on the bounding boxes and scores </td></tr>
<tr id="row_292_1_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_permute_kernel.xhtml" target="_self">CPPPermuteKernel</a></td><td class="desc">CPP kernel to perform tensor permutation </td></tr>
<tr id="row_292_1_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_top_k_v_kernel.xhtml" target="_self">CPPTopKVKernel</a></td><td class="desc">CPP kernel to perform tensor TopKV operation </td></tr>
<tr id="row_292_1_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_upsample_kernel.xhtml" target="_self">CPPUpsampleKernel</a></td><td class="desc">CPP kernel to perform tensor upsample </td></tr>
<tr id="row_292_1_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_5_" class="arrow" onclick="toggleFolder('292_1_5_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; Derived &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_5_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_kernel.xhtml" target="_self">CpuElementwiseKernel&lt; Derived &gt;</a></td><td class="desc">Interface for an element-wise operation kernel </td></tr>
<tr id="row_292_1_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml" target="_self">CpuGemmAssemblyWrapperKernel&lt; TypeInput, TypeOutput &gt;</a></td><td class="desc">This class is a wrapper for the assembly kernels </td></tr>
<tr id="row_292_1_7_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1kernels_1_1_n_e_logical_kernel.xhtml" target="_self">NELogicalKernel</a></td><td class="desc">Interface for the kernel to perform logical operations between two tensors </td></tr>
<tr id="row_292_1_8_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_batch_normalization_layer_kernel.xhtml" target="_self">NEBatchNormalizationLayerKernel</a></td><td class="desc">Interface for the batch normalization layer kernel </td></tr>
<tr id="row_292_1_9_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_batch_to_space_layer_kernel.xhtml" target="_self">NEBatchToSpaceLayerKernel</a></td><td class="desc">Interface for the batch to space kernel </td></tr>
<tr id="row_292_1_10_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_and_kernel.xhtml" target="_self">NEBitwiseAndKernel</a></td><td class="desc">Interface for the kernel to perform bitwise AND between XY-planes of two tensors </td></tr>
<tr id="row_292_1_11_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_not_kernel.xhtml" target="_self">NEBitwiseNotKernel</a></td><td class="desc">Interface for the kernel to perform bitwise NOT operation </td></tr>
<tr id="row_292_1_12_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_or_kernel.xhtml" target="_self">NEBitwiseOrKernel</a></td><td class="desc">Interface for the kernel to perform bitwise inclusive OR between two tensors </td></tr>
<tr id="row_292_1_13_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_xor_kernel.xhtml" target="_self">NEBitwiseXorKernel</a></td><td class="desc">Interface for the kernel to perform bitwise exclusive OR (XOR) between two tensors </td></tr>
<tr id="row_292_1_14_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bounding_box_transform_kernel.xhtml" target="_self">NEBoundingBoxTransformKernel</a></td><td class="desc">Interface for the bounding box kernel </td></tr>
<tr id="row_292_1_15_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_channel_shuffle_layer_kernel.xhtml" target="_self">NEChannelShuffleLayerKernel</a></td><td class="desc">Interface for the channel shuffle kernel </td></tr>
<tr id="row_292_1_16_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_col2_im_kernel.xhtml" target="_self">NECol2ImKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to perform col2im reshaping </td></tr>
<tr id="row_292_1_17_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_compute_all_anchors_kernel.xhtml" target="_self">NEComputeAllAnchorsKernel</a></td><td class="desc">Interface for Compute All Anchors kernel </td></tr>
<tr id="row_292_1_18_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_crop_kernel.xhtml" target="_self">NECropKernel</a></td><td class="desc">Interface for the kernel to perform tensor cropping </td></tr>
<tr id="row_292_1_19_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_to_space_layer_kernel.xhtml" target="_self">NEDepthToSpaceLayerKernel</a></td><td class="desc">Interface for the depth to space kernel </td></tr>
<tr id="row_292_1_20_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_f_f_t_digit_reverse_kernel.xhtml" target="_self">NEFFTDigitReverseKernel</a></td><td class="desc">Interface for the digit reverse operation kernel </td></tr>
<tr id="row_292_1_21_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_f_f_t_radix_stage_kernel.xhtml" target="_self">NEFFTRadixStageKernel</a></td><td class="desc">Interface for the FFT kernel </td></tr>
<tr id="row_292_1_22_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_f_f_t_scale_kernel.xhtml" target="_self">NEFFTScaleKernel</a></td><td class="desc">Interface for the inverse fft scale kernel </td></tr>
<tr id="row_292_1_23_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill_border_kernel.xhtml" target="_self">NEFillBorderKernel</a></td><td class="desc">Interface for the kernel to fill borders </td></tr>
<tr id="row_292_1_24_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fuse_batch_normalization_kernel.xhtml" target="_self">NEFuseBatchNormalizationKernel</a></td><td class="desc">OpenNE kernel to fuse the batch normalization node to a preceding convolution node </td></tr>
<tr id="row_292_1_25_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gather_kernel.xhtml" target="_self">NEGatherKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to perform gather operation </td></tr>
<tr id="row_292_1_26_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_instance_normalization_layer_kernel.xhtml" target="_self">NEInstanceNormalizationLayerKernel</a></td><td class="desc">Interface for performing an instance normalization </td></tr>
<tr id="row_292_1_27_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_l2_normalize_layer_kernel.xhtml" target="_self">NEL2NormalizeLayerKernel</a></td><td class="desc">Interface for performing a L2 normalize on a given axis given the square sum of it in this axis </td></tr>
<tr id="row_292_1_28_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_mean_std_dev_normalization_kernel.xhtml" target="_self">NEMeanStdDevNormalizationKernel</a></td><td class="desc">Interface for the kernel to normalize the input 2D tensor across the first dimension with respect to mean and standard deviation of the same dimension </td></tr>
<tr id="row_292_1_29_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_normalization_layer_kernel.xhtml" target="_self">NENormalizationLayerKernel</a></td><td class="desc">Interface for the normalization layer kernel </td></tr>
<tr id="row_292_1_30_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pad_layer_kernel.xhtml" target="_self">NEPadLayerKernel</a></td><td class="desc">Basic kernel to pad the input tensor given padding information </td></tr>
<tr id="row_292_1_31_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_prior_box_layer_kernel.xhtml" target="_self">NEPriorBoxLayerKernel</a></td><td class="desc">Interface for the kernel to calculate prior boxes </td></tr>
<tr id="row_292_1_32_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml" target="_self">NEQLSTMLayerNormalizationKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to perform layer normalization for QLSTM </td></tr>
<tr id="row_292_1_33_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_range_kernel.xhtml" target="_self">NERangeKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> class for Range </td></tr>
<tr id="row_292_1_34_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml" target="_self">NEReductionOperationKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to perform a reduction operation </td></tr>
<tr id="row_292_1_35_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reorg_layer_kernel.xhtml" target="_self">NEReorgLayerKernel</a></td><td class="desc">Interface for the kernel to perform tensor re-organization </td></tr>
<tr id="row_292_1_36_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reverse_kernel.xhtml" target="_self">NEReverseKernel</a></td><td class="desc">Interface for the reverse layer kernel </td></tr>
<tr id="row_292_1_37_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_r_o_i_align_layer_kernel.xhtml" target="_self">NEROIAlignLayerKernel</a></td><td class="desc">Interface for the RoIAlign kernel </td></tr>
<tr id="row_292_1_38_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer_kernel.xhtml" target="_self">NEROIPoolingLayerKernel</a></td><td class="desc">Interface for the ROI pooling layer kernel </td></tr>
<tr id="row_292_1_39_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_select_kernel.xhtml" target="_self">NESelectKernel</a></td><td class="desc">Interface for the select kernel </td></tr>
<tr id="row_292_1_40_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_space_to_batch_layer_kernel.xhtml" target="_self">NESpaceToBatchLayerKernel</a></td><td class="desc">Interface for the space to batch kernel </td></tr>
<tr id="row_292_1_41_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_space_to_depth_layer_kernel.xhtml" target="_self">NESpaceToDepthLayerKernel</a></td><td class="desc">Interface for the space to depth kernel </td></tr>
<tr id="row_292_1_42_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_stack_layer_kernel.xhtml" target="_self">NEStackLayerKernel</a></td><td class="desc">Basic kernel to stack a rank-R tensor into one with rank-(R+1) along the axis dimension </td></tr>
<tr id="row_292_1_43_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_strided_slice_kernel.xhtml" target="_self">NEStridedSliceKernel</a></td><td class="desc">Interface for the kernel to perform tensor strided slicing </td></tr>
<tr id="row_292_1_44_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_tile_kernel.xhtml" target="_self">NETileKernel</a></td><td class="desc">Basic kernel to perform a tile operation </td></tr>
<tr id="row_292_1_45_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_45_" class="arrow" onclick="toggleFolder('292_1_45_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuActivationKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_45_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_activation_kernel.xhtml" target="_self">CpuActivationKernel</a></td><td class="desc">Interface for the activation kernel </td></tr>
<tr id="row_292_1_46_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_46_" class="arrow" onclick="toggleFolder('292_1_46_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuAddKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_46_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml" target="_self">CpuAddKernel</a></td><td class="desc">Interface for the kernel to perform addition between two tensors </td></tr>
<tr id="row_292_1_47_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_47_" class="arrow" onclick="toggleFolder('292_1_47_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuAddMulAddKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_47_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_mul_add_kernel.xhtml" target="_self">CpuAddMulAddKernel</a></td><td class="desc">Interface for the kernel to perform addition between two tensors </td></tr>
<tr id="row_292_1_48_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_48_" class="arrow" onclick="toggleFolder('292_1_48_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuArithmeticKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_48_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_292_1_48_0_" class="arrow" onclick="toggleFolder('292_1_48_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_kernel.xhtml" target="_self">CpuElementwiseKernel&lt; CpuArithmeticKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_48_0_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_292_1_48_0_0_" class="arrow" onclick="toggleFolder('292_1_48_0_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml" target="_self">CpuArithmeticKernel</a></td><td class="desc"></td></tr>
<tr id="row_292_1_48_0_0_0_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_division_kernel.xhtml" target="_self">CpuDivisionKernel</a></td><td class="desc"></td></tr>
<tr id="row_292_1_48_0_0_1_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_power_kernel.xhtml" target="_self">CpuPowerKernel</a></td><td class="desc"></td></tr>
<tr id="row_292_1_49_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_49_" class="arrow" onclick="toggleFolder('292_1_49_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuCastKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_49_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml" target="_self">CpuCastKernel</a></td><td class="desc">Casts a given tensor to a new type </td></tr>
<tr id="row_292_1_50_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_50_" class="arrow" onclick="toggleFolder('292_1_50_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuCol2ImKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_50_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_col2_im_kernel.xhtml" target="_self">CpuCol2ImKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to perform col2im reshaping </td></tr>
<tr id="row_292_1_51_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_51_" class="arrow" onclick="toggleFolder('292_1_51_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuComparisonKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_51_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_292_1_51_0_" class="arrow" onclick="toggleFolder('292_1_51_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_kernel.xhtml" target="_self">CpuElementwiseKernel&lt; CpuComparisonKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_51_0_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_comparison_kernel.xhtml" target="_self">CpuComparisonKernel</a></td><td class="desc"></td></tr>
<tr id="row_292_1_52_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_52_" class="arrow" onclick="toggleFolder('292_1_52_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuComplexMulKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_52_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_complex_mul_kernel.xhtml" target="_self">CpuComplexMulKernel</a></td><td class="desc">Interface for the complex pixelwise multiplication kernel </td></tr>
<tr id="row_292_1_53_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_53_" class="arrow" onclick="toggleFolder('292_1_53_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuConcatenateBatchKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_53_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_batch_kernel.xhtml" target="_self">CpuConcatenateBatchKernel</a></td><td class="desc">Interface for the batch concatenate kernel </td></tr>
<tr id="row_292_1_54_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_54_" class="arrow" onclick="toggleFolder('292_1_54_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuConcatenateDepthKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_54_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_depth_kernel.xhtml" target="_self">CpuConcatenateDepthKernel</a></td><td class="desc">Interface for the depth concatenate kernel </td></tr>
<tr id="row_292_1_55_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_55_" class="arrow" onclick="toggleFolder('292_1_55_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuConcatenateHeightKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_55_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_height_kernel.xhtml" target="_self">CpuConcatenateHeightKernel</a></td><td class="desc">Interface for the height concatenate kernel </td></tr>
<tr id="row_292_1_56_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_56_" class="arrow" onclick="toggleFolder('292_1_56_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuConcatenateWidthKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_56_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_width_kernel.xhtml" target="_self">CpuConcatenateWidthKernel</a></td><td class="desc">Interface for the width concatenate kernel </td></tr>
<tr id="row_292_1_57_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_57_" class="arrow" onclick="toggleFolder('292_1_57_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuConvertFullyConnectedWeightsKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_57_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_convert_fully_connected_weights_kernel.xhtml" target="_self">CpuConvertFullyConnectedWeightsKernel</a></td><td class="desc">Interface to convert the 2D Fully Connected weights from NCHW to NHWC or vice versa </td></tr>
<tr id="row_292_1_58_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_58_" class="arrow" onclick="toggleFolder('292_1_58_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuConvertQuantizedSignednessKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_58_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_convert_quantized_signedness_kernel.xhtml" target="_self">CpuConvertQuantizedSignednessKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to convert asymmetric signed to asymmetric signed and vice-versa </td></tr>
<tr id="row_292_1_59_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_59_" class="arrow" onclick="toggleFolder('292_1_59_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuCopyKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_59_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_copy_kernel.xhtml" target="_self">CpuCopyKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to perform a copy between two tensors </td></tr>
<tr id="row_292_1_60_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_60_" class="arrow" onclick="toggleFolder('292_1_60_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuDepthwiseConv2dAssemblyWrapperKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_60_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_depthwise_conv2d_assembly_wrapper_kernel.xhtml" target="_self">CpuDepthwiseConv2dAssemblyWrapperKernel</a></td><td class="desc">This class is a wrapper for the depthwise convolution assembly kernels </td></tr>
<tr id="row_292_1_61_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_61_" class="arrow" onclick="toggleFolder('292_1_61_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuDepthwiseConv2dNativeKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_61_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_depthwise_conv2d_native_kernel.xhtml" target="_self">CpuDepthwiseConv2dNativeKernel</a></td><td class="desc">Interface for the kernel to run a depthwise convolution native on a tensor </td></tr>
<tr id="row_292_1_62_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_62_" class="arrow" onclick="toggleFolder('292_1_62_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuDequantizeKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_62_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_dequantize_kernel.xhtml" target="_self">CpuDequantizeKernel</a></td><td class="desc">Interface for the dequantization layer kernel </td></tr>
<tr id="row_292_1_63_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_63_" class="arrow" onclick="toggleFolder('292_1_63_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuDirectConv2dKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_63_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv2d_kernel.xhtml" target="_self">CpuDirectConv2dKernel</a></td><td class="desc">Interface for the kernel to perform Direct Convolution Layer </td></tr>
<tr id="row_292_1_64_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_64_" class="arrow" onclick="toggleFolder('292_1_64_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuDirectConv2dOutputStageKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_64_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv2d_output_stage_kernel.xhtml" target="_self">CpuDirectConv2dOutputStageKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to accumulate the biases, if provided, or downscale in case of quantized input </td></tr>
<tr id="row_292_1_65_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_65_" class="arrow" onclick="toggleFolder('292_1_65_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuDirectConv3dKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_65_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv3d_kernel.xhtml" target="_self">CpuDirectConv3dKernel</a></td><td class="desc">Interface for the kernel to perform 3D Direct Convolution Layer </td></tr>
<tr id="row_292_1_66_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_66_" class="arrow" onclick="toggleFolder('292_1_66_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuElementwiseUnaryKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_66_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_unary_kernel.xhtml" target="_self">CpuElementwiseUnaryKernel</a></td><td class="desc">Interface for an element-wise unary operation kernel </td></tr>
<tr id="row_292_1_67_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_67_" class="arrow" onclick="toggleFolder('292_1_67_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuFillKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_67_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_fill_kernel.xhtml" target="_self">CpuFillKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> for filling a tensor with a given constant value </td></tr>
<tr id="row_292_1_68_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_68_" class="arrow" onclick="toggleFolder('292_1_68_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuFloorKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_68_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_floor_kernel.xhtml" target="_self">CpuFloorKernel</a></td><td class="desc">Cpu accelarated kernel to perform a floor operation </td></tr>
<tr id="row_292_1_69_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_69_" class="arrow" onclick="toggleFolder('292_1_69_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmInterleave4x4Kernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_69_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_interleave4x4_kernel.xhtml" target="_self">CpuGemmInterleave4x4Kernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to interleave the elements of a matrix </td></tr>
<tr id="row_292_1_70_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_70_" class="arrow" onclick="toggleFolder('292_1_70_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmLowpMatrixAReductionKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_70_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml" target="_self">CpuGemmLowpMatrixAReductionKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> used to compute the row-vectors of sums of all the entries in each row of Matrix A </td></tr>
<tr id="row_292_1_71_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_71_" class="arrow" onclick="toggleFolder('292_1_71_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmLowpMatrixBReductionKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_71_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_b_reduction_kernel.xhtml" target="_self">CpuGemmLowpMatrixBReductionKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> used to compute the row-vectors of sums of all the entries in each column of Matrix B </td></tr>
<tr id="row_292_1_72_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_72_" class="arrow" onclick="toggleFolder('292_1_72_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmLowpMatrixMultiplyKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_72_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_multiply_kernel.xhtml" target="_self">CpuGemmLowpMatrixMultiplyKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to multiply matrices </td></tr>
<tr id="row_292_1_73_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_73_" class="arrow" onclick="toggleFolder('292_1_73_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmLowpOffsetContributionKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_73_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_offset_contribution_kernel.xhtml" target="_self">CpuGemmLowpOffsetContributionKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> used to add the offset contribution after <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_multiply_kernel.xhtml">CpuGemmLowpMatrixMultiplyKernel</a> </td></tr>
<tr id="row_292_1_74_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_74_" class="arrow" onclick="toggleFolder('292_1_74_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmLowpOffsetContributionOutputStageKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_74_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_offset_contribution_output_stage_kernel.xhtml" target="_self">CpuGemmLowpOffsetContributionOutputStageKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> used to add the offset contribution and perform the output stage after <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_multiply_kernel.xhtml">CpuGemmLowpMatrixMultiplyKernel</a> </td></tr>
<tr id="row_292_1_75_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_75_" class="arrow" onclick="toggleFolder('292_1_75_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmLowpQuantizeDownInt32ScaleKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_75_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_scale_kernel.xhtml" target="_self">CpuGemmLowpQuantizeDownInt32ScaleKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8/QASYMM8_SIGNED </td></tr>
<tr id="row_292_1_76_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_76_" class="arrow" onclick="toggleFolder('292_1_76_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_76_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel.xhtml" target="_self">CpuGemmLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> used to quantize down the int32 accumulator values of GEMMLowp to QSYMM16 </td></tr>
<tr id="row_292_1_77_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_77_" class="arrow" onclick="toggleFolder('292_1_77_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_77_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel.xhtml" target="_self">CpuGemmLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8_SIGNED </td></tr>
<tr id="row_292_1_78_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_78_" class="arrow" onclick="toggleFolder('292_1_78_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_78_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel.xhtml" target="_self">CpuGemmLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8 </td></tr>
<tr id="row_292_1_79_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_79_" class="arrow" onclick="toggleFolder('292_1_79_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmMatrixAdditionKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_79_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_matrix_addition_kernel.xhtml" target="_self">CpuGemmMatrixAdditionKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to perform the in-place matrix addition between 2 matrices taking into account that the second matrix might be weighted by a scalar value beta: </td></tr>
<tr id="row_292_1_80_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_80_" class="arrow" onclick="toggleFolder('292_1_80_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmMatrixMultiplyKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_80_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_matrix_multiply_kernel.xhtml" target="_self">CpuGemmMatrixMultiplyKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_292_1_81_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_81_" class="arrow" onclick="toggleFolder('292_1_81_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuGemmTranspose1xWKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_81_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_transpose1x_w_kernel.xhtml" target="_self">CpuGemmTranspose1xWKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / element size of the tensor) </td></tr>
<tr id="row_292_1_82_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_82_" class="arrow" onclick="toggleFolder('292_1_82_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuIm2ColKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_82_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_im2_col_kernel.xhtml" target="_self">CpuIm2ColKernel</a></td><td class="desc">Interface for the im2col reshape kernel </td></tr>
<tr id="row_292_1_83_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_83_" class="arrow" onclick="toggleFolder('292_1_83_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuLogits1DMaxKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_83_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_logits1_d_max_kernel.xhtml" target="_self">CpuLogits1DMaxKernel</a></td><td class="desc">Interface for the identifying the max value of 1D Logits </td></tr>
<tr id="row_292_1_84_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_84_" class="arrow" onclick="toggleFolder('292_1_84_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuLogits1DSoftmaxKernel&lt; false &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_84_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_logits1_d_softmax_kernel.xhtml" target="_self">CpuLogits1DSoftmaxKernel&lt; IS_LOG &gt;</a></td><td class="desc">Interface for softmax computation for QASYMM8 with pre-computed max </td></tr>
<tr id="row_292_1_85_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_85_" class="arrow" onclick="toggleFolder('292_1_85_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuMaxUnpoolingLayerKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_85_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_max_unpooling_layer_kernel.xhtml" target="_self">CpuMaxUnpoolingLayerKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_292_1_86_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_86_" class="arrow" onclick="toggleFolder('292_1_86_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuMulKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_86_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_mul_kernel.xhtml" target="_self">CpuMulKernel</a></td><td class="desc">Interface for the kernel to perform multiplication between two tensors </td></tr>
<tr id="row_292_1_87_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_87_" class="arrow" onclick="toggleFolder('292_1_87_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuPermuteKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_87_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_permute_kernel.xhtml" target="_self">CpuPermuteKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to perform tensor permutation given a permutation vector </td></tr>
<tr id="row_292_1_88_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_88_" class="arrow" onclick="toggleFolder('292_1_88_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuPool2dAssemblyWrapperKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_88_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool2d_assembly_wrapper_kernel.xhtml" target="_self">CpuPool2dAssemblyWrapperKernel</a></td><td class="desc">This class is a wrapper for the assembly kernels </td></tr>
<tr id="row_292_1_89_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_89_" class="arrow" onclick="toggleFolder('292_1_89_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuPool2dKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_89_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool2d_kernel.xhtml" target="_self">CpuPool2dKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_292_1_90_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_90_" class="arrow" onclick="toggleFolder('292_1_90_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuPool3dKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_90_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool3d_kernel.xhtml" target="_self">CpuPool3dKernel</a></td><td class="desc">Interface for the kernel to perform Pooling 3D </td></tr>
<tr id="row_292_1_91_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_91_" class="arrow" onclick="toggleFolder('292_1_91_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuQuantizeKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_91_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_quantize_kernel.xhtml" target="_self">CpuQuantizeKernel</a></td><td class="desc">Interface for the quantization layer kernel </td></tr>
<tr id="row_292_1_92_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_92_" class="arrow" onclick="toggleFolder('292_1_92_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuReshapeKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_92_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_reshape_kernel.xhtml" target="_self">CpuReshapeKernel</a></td><td class="desc">Interface for the kernel to perform tensor reshaping </td></tr>
<tr id="row_292_1_93_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_93_" class="arrow" onclick="toggleFolder('292_1_93_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuScaleKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_93_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml" target="_self">CpuScaleKernel</a></td><td class="desc">Arm(R) Neon(TM) kernel to perform scaling on a tensor </td></tr>
<tr id="row_292_1_94_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_94_" class="arrow" onclick="toggleFolder('292_1_94_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuSubKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_94_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_sub_kernel.xhtml" target="_self">CpuSubKernel</a></td><td class="desc">Interface for the kernel to perform subtraction between two tensors </td></tr>
<tr id="row_292_1_95_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_95_" class="arrow" onclick="toggleFolder('292_1_95_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuTransposeKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_95_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_transpose_kernel.xhtml" target="_self">CpuTransposeKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> which transposes the elements of a matrix </td></tr>
<tr id="row_292_1_96_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_96_" class="arrow" onclick="toggleFolder('292_1_96_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuWeightsReshapeKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_96_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_weights_reshape_kernel.xhtml" target="_self">CpuWeightsReshapeKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to perform reshaping on the weights used by convolution and locally connected layer </td></tr>
<tr id="row_292_1_97_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_97_" class="arrow" onclick="toggleFolder('292_1_97_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuWinogradConv2dTransformInputKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_97_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml" target="_self">CpuWinogradConv2dTransformInputKernel</a></td><td class="desc"></td></tr>
<tr id="row_292_1_98_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_292_1_98_" class="arrow" onclick="toggleFolder('292_1_98_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml" target="_self">ICpuKernel&lt; CpuWinogradConv2dTransformOutputKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_292_1_98_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml" target="_self">CpuWinogradConv2dTransformOutputKernel</a></td><td class="desc"></td></tr>
<tr id="row_293_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_293_" class="arrow" onclick="toggleFolder('293_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml" target="_self">ILayer</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml" title="ILayer interface.">ILayer</a> interface </td></tr>
<tr id="row_293_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml" target="_self">ActivationLayer</a></td><td class="desc">Activation Layer </td></tr>
<tr id="row_293_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_arg_min_max_layer.xhtml" target="_self">ArgMinMaxLayer</a></td><td class="desc">ArgMinMax Layer </td></tr>
<tr id="row_293_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml" target="_self">BatchNormalizationLayer</a></td><td class="desc">Batchnormalization Layer </td></tr>
<tr id="row_293_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_bounding_box_transform_layer.xhtml" target="_self">BoundingBoxTransformLayer</a></td><td class="desc">Bounding Box Transform Layer </td></tr>
<tr id="row_293_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_channel_shuffle_layer.xhtml" target="_self">ChannelShuffleLayer</a></td><td class="desc">Channel Shuffle Layer </td></tr>
<tr id="row_293_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_concat_layer.xhtml" target="_self">ConcatLayer</a></td><td class="desc">Concat Layer </td></tr>
<tr id="row_293_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_constant_layer.xhtml" target="_self">ConstantLayer</a></td><td class="desc">Constant Layer </td></tr>
<tr id="row_293_7_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml" target="_self">ConvolutionLayer</a></td><td class="desc">Convolution Layer </td></tr>
<tr id="row_293_8_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_deconvolution_layer.xhtml" target="_self">DeconvolutionLayer</a></td><td class="desc">Deconvolution Layer </td></tr>
<tr id="row_293_9_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_depth_to_space_layer.xhtml" target="_self">DepthToSpaceLayer</a></td><td class="desc">DepthToSpace Layer </td></tr>
<tr id="row_293_10_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml" target="_self">DepthwiseConvolutionLayer</a></td><td class="desc">Depthwise Convolution Layer </td></tr>
<tr id="row_293_11_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_dequantization_layer.xhtml" target="_self">DequantizationLayer</a></td><td class="desc">Dequantization Layer </td></tr>
<tr id="row_293_12_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_detection_output_layer.xhtml" target="_self">DetectionOutputLayer</a></td><td class="desc">DetectionOutput Layer </td></tr>
<tr id="row_293_13_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_detection_post_process_layer.xhtml" target="_self">DetectionPostProcessLayer</a></td><td class="desc">DetectionOutputPostProcess Layer </td></tr>
<tr id="row_293_14_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_dummy_layer.xhtml" target="_self">DummyLayer</a></td><td class="desc">Dummy Layer </td></tr>
<tr id="row_293_15_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_eltwise_layer.xhtml" target="_self">EltwiseLayer</a></td><td class="desc"></td></tr>
<tr id="row_293_16_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml" target="_self">FlattenLayer</a></td><td class="desc">Flatten Layer </td></tr>
<tr id="row_293_17_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml" target="_self">FullyConnectedLayer</a></td><td class="desc">Fully Connected Layer </td></tr>
<tr id="row_293_18_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_generate_proposals_layer.xhtml" target="_self">GenerateProposalsLayer</a></td><td class="desc">Generate Proposals Layer </td></tr>
<tr id="row_293_19_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml" target="_self">InputLayer</a></td><td class="desc">Input Layer </td></tr>
<tr id="row_293_20_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_l2_normalize_layer.xhtml" target="_self">L2NormalizeLayer</a></td><td class="desc">L2 Normalize Layer </td></tr>
<tr id="row_293_21_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml" target="_self">NormalizationLayer</a></td><td class="desc">Normalization Layer </td></tr>
<tr id="row_293_22_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_normalize_planar_y_u_v_layer.xhtml" target="_self">NormalizePlanarYUVLayer</a></td><td class="desc">Normalize planar YUV Layer </td></tr>
<tr id="row_293_23_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml" target="_self">OutputLayer</a></td><td class="desc">Output Layer </td></tr>
<tr id="row_293_24_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_pad_layer.xhtml" target="_self">PadLayer</a></td><td class="desc">Pad Layer </td></tr>
<tr id="row_293_25_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_permute_layer.xhtml" target="_self">PermuteLayer</a></td><td class="desc">Permute Layer </td></tr>
<tr id="row_293_26_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml" target="_self">PoolingLayer</a></td><td class="desc">Pooling Layer </td></tr>
<tr id="row_293_27_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_p_relu_layer.xhtml" target="_self">PReluLayer</a></td><td class="desc">PRelu Layer </td></tr>
<tr id="row_293_28_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_print_layer.xhtml" target="_self">PrintLayer</a></td><td class="desc">Print Layer </td></tr>
<tr id="row_293_29_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_prior_box_layer.xhtml" target="_self">PriorBoxLayer</a></td><td class="desc">PriorBox Layer </td></tr>
<tr id="row_293_30_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_quantization_layer.xhtml" target="_self">QuantizationLayer</a></td><td class="desc">Quantization Layer </td></tr>
<tr id="row_293_31_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_reduction_layer.xhtml" target="_self">ReductionLayer</a></td><td class="desc">Reduction Layer </td></tr>
<tr id="row_293_32_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_reorg_layer.xhtml" target="_self">ReorgLayer</a></td><td class="desc">Reorg Layer </td></tr>
<tr id="row_293_33_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml" target="_self">ReshapeLayer</a></td><td class="desc">Reshape Layer </td></tr>
<tr id="row_293_34_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_resize_layer.xhtml" target="_self">ResizeLayer</a></td><td class="desc">Resize Layer </td></tr>
<tr id="row_293_35_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_r_o_i_align_layer.xhtml" target="_self">ROIAlignLayer</a></td><td class="desc">ROIAlign Layer </td></tr>
<tr id="row_293_36_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml" target="_self">ScaleLayer</a></td><td class="desc">Scale Layer </td></tr>
<tr id="row_293_37_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_slice_layer.xhtml" target="_self">SliceLayer</a></td><td class="desc">Slice Layer </td></tr>
<tr id="row_293_38_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml" target="_self">SoftmaxLayer</a></td><td class="desc">Softmax Layer </td></tr>
<tr id="row_293_39_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stack_layer.xhtml" target="_self">StackLayer</a></td><td class="desc">Stack Layer </td></tr>
<tr id="row_293_40_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_strided_slice_layer.xhtml" target="_self">StridedSliceLayer</a></td><td class="desc">StridedSlice Layer </td></tr>
<tr id="row_293_41_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_y_o_l_o_layer.xhtml" target="_self">YOLOLayer</a></td><td class="desc">YOLO Layer </td></tr>
<tr id="row_294_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_294_" class="arrow" onclick="toggleFolder('294_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml" target="_self">ILifetimeManager</a></td><td class="desc">Interface for managing the lifetime of objects </td></tr>
<tr id="row_294_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_294_0_" class="arrow" onclick="toggleFolder('294_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml" target="_self">ISimpleLifetimeManager</a></td><td class="desc">Abstract class of the simple lifetime manager interface </td></tr>
<tr id="row_294_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_blob_lifetime_manager.xhtml" target="_self">BlobLifetimeManager</a></td><td class="desc">Concrete class that tracks the lifetime of registered tensors and calculates the systems memory requirements in terms of blobs </td></tr>
<tr id="row_294_0_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_offset_lifetime_manager.xhtml" target="_self">OffsetLifetimeManager</a></td><td class="desc">Concrete class that tracks the lifetime of registered tensors and calculates the systems memory requirements in terms of a single blob and a list of offsets </td></tr>
<tr id="row_295_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_image.xhtml" target="_self">Image</a></td><td class="desc">Structure to hold <a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> information </td></tr>
<tr id="row_296_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_image_loader_factory.xhtml" target="_self">ImageLoaderFactory</a></td><td class="desc">Factory for generating appropriate image loader </td></tr>
<tr id="row_297_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_297_" class="arrow" onclick="toggleFolder('297_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory.xhtml" target="_self">IMemory</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> interface </td></tr>
<tr id="row_297_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_memory.xhtml" target="_self">CLMemory</a></td><td class="desc">OpenCL implementation of memory object </td></tr>
<tr id="row_297_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory.xhtml" target="_self">Memory</a></td><td class="desc">CPU implementation of memory object </td></tr>
<tr id="row_298_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_298_" class="arrow" onclick="toggleFolder('298_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml" target="_self">IMemoryGroup</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> group interface </td></tr>
<tr id="row_298_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory_group.xhtml" target="_self">MemoryGroup</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> group </td></tr>
<tr id="row_299_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_299_" class="arrow" onclick="toggleFolder('299_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_manageable.xhtml" target="_self">IMemoryManageable</a></td><td class="desc">Interface of an object than can be memory managed </td></tr>
<tr id="row_299_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml" target="_self">CLTensor</a></td><td class="desc">Basic implementation of the OpenCL tensor interface </td></tr>
<tr id="row_299_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor.xhtml" target="_self">Tensor</a></td><td class="desc">Basic implementation of the tensor interface </td></tr>
<tr id="row_300_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_300_" class="arrow" onclick="toggleFolder('300_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml" target="_self">IMemoryManager</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> manager interface to handle allocations of backing memory </td></tr>
<tr id="row_300_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml" target="_self">MemoryManagerOnDemand</a></td><td class="desc">On-demand memory manager </td></tr>
<tr id="row_301_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_301_" class="arrow" onclick="toggleFolder('301_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_pool.xhtml" target="_self">IMemoryPool</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> Pool Inteface </td></tr>
<tr id="row_301_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_blob_memory_pool.xhtml" target="_self">BlobMemoryPool</a></td><td class="desc">Blob memory pool </td></tr>
<tr id="row_301_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_offset_memory_pool.xhtml" target="_self">OffsetMemoryPool</a></td><td class="desc">Offset based memory pool </td></tr>
<tr id="row_302_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_302_" class="arrow" onclick="toggleFolder('302_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml" target="_self">IMemoryRegion</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> region interface </td></tr>
<tr id="row_302_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_302_0_" class="arrow" onclick="toggleFolder('302_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml" target="_self">ICLMemoryRegion</a></td><td class="desc">OpenCL memory region interface </td></tr>
<tr id="row_302_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml" target="_self">CLBufferMemoryRegion</a></td><td class="desc">OpenCL buffer memory region implementation </td></tr>
<tr id="row_302_0_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_302_0_1_" class="arrow" onclick="toggleFolder('302_0_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml" target="_self">ICLSVMMemoryRegion</a></td><td class="desc">OpenCL SVM memory region interface </td></tr>
<tr id="row_302_0_1_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml" target="_self">CLCoarseSVMMemoryRegion</a></td><td class="desc">OpenCL coarse-grain SVM memory region implementation </td></tr>
<tr id="row_302_0_1_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml" target="_self">CLFineSVMMemoryRegion</a></td><td class="desc">OpenCL fine-grain SVM memory region implementation </td></tr>
<tr id="row_302_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory_region.xhtml" target="_self">MemoryRegion</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> region CPU implementation </td></tr>
<tr id="row_303_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml" target="_self">GpuWorkloadSketch::Implementation</a></td><td class="desc">Internal implementation of <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> </td></tr>
<tr id="row_304_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_indirect_input_arg.xhtml" target="_self">IndirectInputArg&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_305_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_indirect_output_arg.xhtml" target="_self">IndirectOutputArg&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_306_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_306_" class="arrow" onclick="toggleFolder('306_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml" target="_self">INode</a></td><td class="desc">Node interface </td></tr>
<tr id="row_306_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml" target="_self">ActivationLayerNode</a></td><td class="desc">Activation Layer node </td></tr>
<tr id="row_306_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_arg_min_max_layer_node.xhtml" target="_self">ArgMinMaxLayerNode</a></td><td class="desc">Arg Min/Max Layer node </td></tr>
<tr id="row_306_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml" target="_self">BatchNormalizationLayerNode</a></td><td class="desc">Batch Normalization Layer node </td></tr>
<tr id="row_306_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_bounding_box_transform_layer_node.xhtml" target="_self">BoundingBoxTransformLayerNode</a></td><td class="desc">Bounding Box Transform Layer node </td></tr>
<tr id="row_306_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_channel_shuffle_layer_node.xhtml" target="_self">ChannelShuffleLayerNode</a></td><td class="desc">Channel Shuffle Layer node </td></tr>
<tr id="row_306_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml" target="_self">ConcatenateLayerNode</a></td><td class="desc">Concatenation Layer node </td></tr>
<tr id="row_306_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_const_node.xhtml" target="_self">ConstNode</a></td><td class="desc">Const node </td></tr>
<tr id="row_306_7_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml" target="_self">ConvolutionLayerNode</a></td><td class="desc">Convolution Layer node </td></tr>
<tr id="row_306_8_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml" target="_self">DeconvolutionLayerNode</a></td><td class="desc">Deconvolution Layer node </td></tr>
<tr id="row_306_9_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_depth_to_space_layer_node.xhtml" target="_self">DepthToSpaceLayerNode</a></td><td class="desc">DepthToSpace Layer node </td></tr>
<tr id="row_306_10_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml" target="_self">DepthwiseConvolutionLayerNode</a></td><td class="desc">Depthwise Convolution Layer node </td></tr>
<tr id="row_306_11_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml" target="_self">DequantizationLayerNode</a></td><td class="desc">Dequantize Layer node </td></tr>
<tr id="row_306_12_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml" target="_self">DetectionOutputLayerNode</a></td><td class="desc">DetectionOutput Layer node </td></tr>
<tr id="row_306_13_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml" target="_self">DetectionPostProcessLayerNode</a></td><td class="desc">DetectionPostProcess Layer node </td></tr>
<tr id="row_306_14_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_dummy_node.xhtml" target="_self">DummyNode</a></td><td class="desc">Dummy Layer node </td></tr>
<tr id="row_306_15_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml" target="_self">EltwiseLayerNode</a></td><td class="desc">Eltwise Layer node </td></tr>
<tr id="row_306_16_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer_node.xhtml" target="_self">FlattenLayerNode</a></td><td class="desc">Flatten Layer node </td></tr>
<tr id="row_306_17_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer_node.xhtml" target="_self">FullyConnectedLayerNode</a></td><td class="desc">Fully Connected Layer node </td></tr>
<tr id="row_306_18_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml" target="_self">FusedConvolutionBatchNormalizationNode</a></td><td class="desc">Batch Normalization node </td></tr>
<tr id="row_306_19_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_with_post_ops_node.xhtml" target="_self">FusedConvolutionBatchNormalizationWithPostOpsNode</a></td><td class="desc">Batch Normalization node </td></tr>
<tr id="row_306_20_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_with_post_op_node.xhtml" target="_self">FusedConvolutionWithPostOpNode</a></td><td class="desc">Convolution node </td></tr>
<tr id="row_306_21_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml" target="_self">FusedDepthwiseConvolutionBatchNormalizationNode</a></td><td class="desc">Fused Depthwise Convolution Batch Normalization node </td></tr>
<tr id="row_306_22_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_generate_proposals_layer_node.xhtml" target="_self">GenerateProposalsLayerNode</a></td><td class="desc">Generate Proposals Layer node </td></tr>
<tr id="row_306_23_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_input_node.xhtml" target="_self">InputNode</a></td><td class="desc">Input Layer node </td></tr>
<tr id="row_306_24_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_l2_normalize_layer_node.xhtml" target="_self">L2NormalizeLayerNode</a></td><td class="desc">L2Normalize Layer node </td></tr>
<tr id="row_306_25_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml" target="_self">NormalizationLayerNode</a></td><td class="desc">Normalization Layer node </td></tr>
<tr id="row_306_26_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_normalize_planar_y_u_v_layer_node.xhtml" target="_self">NormalizePlanarYUVLayerNode</a></td><td class="desc">Batch Normalization Layer node </td></tr>
<tr id="row_306_27_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_output_node.xhtml" target="_self">OutputNode</a></td><td class="desc">Output Layer node </td></tr>
<tr id="row_306_28_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_pad_layer_node.xhtml" target="_self">PadLayerNode</a></td><td class="desc">Pad Layer node </td></tr>
<tr id="row_306_29_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_permute_layer_node.xhtml" target="_self">PermuteLayerNode</a></td><td class="desc">Permute Layer node </td></tr>
<tr id="row_306_30_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml" target="_self">PoolingLayerNode</a></td><td class="desc">Pooling Layer node </td></tr>
<tr id="row_306_31_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_p_relu_layer_node.xhtml" target="_self">PReluLayerNode</a></td><td class="desc">PRelu Layer node </td></tr>
<tr id="row_306_32_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_print_layer_node.xhtml" target="_self">PrintLayerNode</a></td><td class="desc">Print Layer node </td></tr>
<tr id="row_306_33_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_prior_box_layer_node.xhtml" target="_self">PriorBoxLayerNode</a></td><td class="desc">PriorBox Layer node </td></tr>
<tr id="row_306_34_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_quantization_layer_node.xhtml" target="_self">QuantizationLayerNode</a></td><td class="desc">Quantization Layer node </td></tr>
<tr id="row_306_35_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_reduction_layer_node.xhtml" target="_self">ReductionLayerNode</a></td><td class="desc">Reduction Operation node </td></tr>
<tr id="row_306_36_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_reorg_layer_node.xhtml" target="_self">ReorgLayerNode</a></td><td class="desc">Reorg Layer node </td></tr>
<tr id="row_306_37_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml" target="_self">ReshapeLayerNode</a></td><td class="desc">Reshape Layer node </td></tr>
<tr id="row_306_38_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_resize_layer_node.xhtml" target="_self">ResizeLayerNode</a></td><td class="desc">Resize Layer node </td></tr>
<tr id="row_306_39_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_r_o_i_align_layer_node.xhtml" target="_self">ROIAlignLayerNode</a></td><td class="desc">ROI Align node </td></tr>
<tr id="row_306_40_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_slice_layer_node.xhtml" target="_self">SliceLayerNode</a></td><td class="desc">Slice Layer node </td></tr>
<tr id="row_306_41_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer_node.xhtml" target="_self">SoftmaxLayerNode</a></td><td class="desc">Softmax Layer node </td></tr>
<tr id="row_306_42_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml" target="_self">SplitLayerNode</a></td><td class="desc">Split Layer node </td></tr>
<tr id="row_306_43_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_stack_layer_node.xhtml" target="_self">StackLayerNode</a></td><td class="desc">Stack Layer node </td></tr>
<tr id="row_306_44_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_strided_slice_layer_node.xhtml" target="_self">StridedSliceLayerNode</a></td><td class="desc">Slice Layer node </td></tr>
<tr id="row_306_45_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node.xhtml" target="_self">UnaryEltwiseLayerNode</a></td><td class="desc">Unary Eltwise Layer node </td></tr>
<tr id="row_307_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_307_" class="arrow" onclick="toggleFolder('307_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml" target="_self">INodeVisitor</a></td><td class="desc">Node visitor interface </td></tr>
<tr id="row_307_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_307_0_" class="arrow" onclick="toggleFolder('307_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_default_node_visitor.xhtml" target="_self">DefaultNodeVisitor</a></td><td class="desc">Default visitor implementation </td></tr>
<tr id="row_307_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml" target="_self">DataLayerVisitor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> printer visitor </td></tr>
<tr id="row_307_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml" target="_self">DotGraphVisitor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> printer visitor </td></tr>
<tr id="row_308_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_input_array_element.xhtml" target="_self">InputArrayElement&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_309_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml" target="_self">InputPatchElement&lt; T, IsGeneric, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_310_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml" target="_self">InstanceNormalizationLayerKernelInfo</a></td><td class="desc"></td></tr>
<tr id="row_311_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_311_" class="arrow" onclick="toggleFolder('311_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" target="_self">Instrument</a></td><td class="desc">Interface for classes that can be used to measure performance </td></tr>
<tr id="row_311_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_mali_counter.xhtml" target="_self">MaliCounter</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance.">Instrument</a> implementation for mali hw counters </td></tr>
<tr id="row_311_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml" target="_self">OpenCLClock&lt; output_timestamps &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance.">Instrument</a> creating measurements based on the information returned by clGetEventProfilingInfo for each OpenCL kernel executed </td></tr>
<tr id="row_311_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_memory_usage.xhtml" target="_self">OpenCLMemoryUsage</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance.">Instrument</a> collecting memory usage information for OpenCL </td></tr>
<tr id="row_311_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_p_m_u_counter.xhtml" target="_self">PMUCounter</a></td><td class="desc">Implementation of an instrument to count CPU cycles </td></tr>
<tr id="row_311_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml" target="_self">SchedulerClock&lt; output_timestamps &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance.">Instrument</a> creating measurements based on the information returned by clGetEventProfilingInfo for each OpenCL kernel executed </td></tr>
<tr id="row_311_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml" target="_self">WallClock&lt; output_timestamps &gt;</a></td><td class="desc">Implementation of an instrument to measure elapsed wall-clock time in milliseconds </td></tr>
<tr id="row_312_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml" target="_self">InstrumentsInfo</a></td><td class="desc"></td></tr>
<tr id="row_313_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml" target="_self">InstrumentsStats</a></td><td class="desc">Generate common statistics for a set of measurements </td></tr>
<tr id="row_314_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1interleave__a64__s8q__3x3__dot.xhtml" target="_self">interleave_a64_s8q_3x3_dot</a></td><td class="desc"></td></tr>
<tr id="row_315_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1interleave__a64__u8q__3x3__dot.xhtml" target="_self">interleave_a64_u8q_3x3_dot</a></td><td class="desc"></td></tr>
<tr id="row_316_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_invoke.xhtml" target="_self">Invoke&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_317_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_invoke_3_01_t_input_00_01_t_weight_00_1463cc7f15aa576f94b74f6b8930f46d.xhtml" target="_self">Invoke&lt; TInput, TWeight, TOutput, TAccum, arm_gemm::Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_318_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1_invoker.xhtml" target="_self">Invoker&lt; TInput, TOutput, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_319_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1_invoker_3_01_t_input_00_01_t_output_00_01_nothing_01_4.xhtml" target="_self">Invoker&lt; TInput, TOutput, Nothing &gt;</a></td><td class="desc"></td></tr>
<tr id="row_320_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1_invoker_3_01_t_input_00_01_t_output_00_01_requantize32_01_4.xhtml" target="_self">Invoker&lt; TInput, TOutput, Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_321_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml" target="_self">IOFormatInfo</a></td><td class="desc">IO formatting information class </td></tr>
<tr id="row_322_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_322_" class="arrow" onclick="toggleFolder('322_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml" target="_self">IOperator</a></td><td class="desc">Base class for all async functions </td></tr>
<tr id="row_322_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_322_0_" class="arrow" onclick="toggleFolder('322_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml" target="_self">ICLOperator</a></td><td class="desc">Basic interface for functions which have a single async CL kernel </td></tr>
<tr id="row_322_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_c_l_logical_and.xhtml" target="_self">CLLogicalAnd</a></td><td class="desc"></td></tr>
<tr id="row_322_0_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_c_l_logical_or.xhtml" target="_self">CLLogicalOr</a></td><td class="desc"></td></tr>
<tr id="row_322_0_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_c_l_slice.xhtml" target="_self">CLSlice</a></td><td class="desc">Basic function to perform tensor slicing </td></tr>
<tr id="row_322_0_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_c_l_strided_slice.xhtml" target="_self">CLStridedSlice</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_strided_slice_kernel.xhtml">CLStridedSliceKernel</a> </td></tr>
<tr id="row_322_0_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_abs.xhtml" target="_self">ClAbs</a></td><td class="desc">Basic function to get the absolute value of an src tensor </td></tr>
<tr id="row_322_0_5_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_activation.xhtml" target="_self">ClActivation</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_activation_kernel.xhtml">kernels::ClActivationKernel</a> </td></tr>
<tr id="row_322_0_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_add.xhtml" target="_self">ClAdd</a></td><td class="desc">Basic function to run arithmetic addition </td></tr>
<tr id="row_322_0_7_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_cast.xhtml" target="_self">ClCast</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_cast_kernel.xhtml">kernels::ClCastKernel</a> </td></tr>
<tr id="row_322_0_8_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_complex_mul.xhtml" target="_self">ClComplexMul</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_complex_mul_kernel.xhtml">opencl::kernels::ClComplexMulKernel</a> </td></tr>
<tr id="row_322_0_9_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_concatenate.xhtml" target="_self">ClConcatenate</a></td><td class="desc">Basic function to execute concatenate tensors along a given axis </td></tr>
<tr id="row_322_0_10_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml" target="_self">ClConv2d</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_322_0_11_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_convert_fully_connected_weights.xhtml" target="_self">ClConvertFullyConnectedWeights</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_convert_fully_connected_weights_kernel.xhtml">kernels::ClConvertFullyConnectedWeightsKernel</a> </td></tr>
<tr id="row_322_0_12_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_copy.xhtml" target="_self">ClCopy</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_copy_kernel.xhtml">kernels::ClCopyKernel</a> </td></tr>
<tr id="row_322_0_13_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_crop.xhtml" target="_self">ClCrop</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_crop_kernel.xhtml">kernels::ClCropKernel</a> </td></tr>
<tr id="row_322_0_14_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_dequantize.xhtml" target="_self">ClDequantize</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_dequantize_kernel.xhtml">kernels::ClDequantizeKernel</a> that dequantizes an input tensor </td></tr>
<tr id="row_322_0_15_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml" target="_self">ClDirectConv2d</a></td><td class="desc">Basic function to simulate a directly convolution layer </td></tr>
<tr id="row_322_0_16_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_direct_conv3d.xhtml" target="_self">ClDirectConv3d</a></td><td class="desc">Basic function to simulate a directly convolution layer with 3 spatial dimensions </td></tr>
<tr id="row_322_0_17_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_elementwise_division.xhtml" target="_self">ClElementwiseDivision</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">opencl::kernels::ClArithmeticKernel</a> for division </td></tr>
<tr id="row_322_0_18_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_elementwise_max.xhtml" target="_self">ClElementwiseMax</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">opencl::kernels::ClArithmeticKernel</a> for max </td></tr>
<tr id="row_322_0_19_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_elementwise_min.xhtml" target="_self">ClElementwiseMin</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">opencl::kernels::ClArithmeticKernel</a> for min </td></tr>
<tr id="row_322_0_20_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_elementwise_power.xhtml" target="_self">ClElementwisePower</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">opencl::kernels::ClArithmeticKernel</a> for power </td></tr>
<tr id="row_322_0_21_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_elementwise_squared_diff.xhtml" target="_self">ClElementwiseSquaredDiff</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">opencl::kernels::ClArithmeticKernel</a> for squared difference </td></tr>
<tr id="row_322_0_22_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_exp.xhtml" target="_self">ClExp</a></td><td class="desc">Basic function to perform exponential on an src tensor </td></tr>
<tr id="row_322_0_23_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_fill.xhtml" target="_self">ClFill</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_fill_kernel.xhtml">kernels::ClFillKernel</a> </td></tr>
<tr id="row_322_0_24_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_flatten.xhtml" target="_self">ClFlatten</a></td><td class="desc">Basic function to flatten a given input </td></tr>
<tr id="row_322_0_25_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_floor.xhtml" target="_self">ClFloor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_floor_kernel.xhtml">kernels::ClFloorKernel</a> </td></tr>
<tr id="row_322_0_26_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml" target="_self">ClFullyConnected</a></td><td class="desc">Basic function to compute a Fully Connected layer on OpenCL </td></tr>
<tr id="row_322_0_27_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml" target="_self">ClGemm</a></td><td class="desc">Basic function to execute GEMM on OpenCL </td></tr>
<tr id="row_322_0_28_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml" target="_self">ClGemmConv2d</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_322_0_29_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml" target="_self">ClGemmLowpMatrixMultiplyCore</a></td><td class="desc">Basic function to execute GEMMLowpMatrixMultiplyCore on OpenCL </td></tr>
<tr id="row_322_0_30_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_output_stage.xhtml" target="_self">ClGemmLowpOutputStage</a></td><td class="desc">Basic function to execute GEMMLowpQuantizeDown kernels on CL </td></tr>
<tr id="row_322_0_31_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml" target="_self">ClIndirectConv2d</a></td><td class="desc">Basic function to execute indirect convolution on OpenCL </td></tr>
<tr id="row_322_0_32_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_log.xhtml" target="_self">ClLog</a></td><td class="desc">Basic function to perform elementwise log on an src tensor </td></tr>
<tr id="row_322_0_33_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_logical_not.xhtml" target="_self">ClLogicalNot</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_element_wise_unary_kernel.xhtml">kernels::ClElementWiseUnaryKernel</a> for NOT operation </td></tr>
<tr id="row_322_0_34_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_mat_mul.xhtml" target="_self">ClMatMul</a></td><td class="desc">Basic operator to execute BatchMatMul on OpenCL </td></tr>
<tr id="row_322_0_35_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_mul.xhtml" target="_self">ClMul</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mul_kernel.xhtml">opencl::kernels::ClMulKernel</a> </td></tr>
<tr id="row_322_0_36_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_neg.xhtml" target="_self">ClNeg</a></td><td class="desc">Basic function to negate an src tensor </td></tr>
<tr id="row_322_0_37_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_permute.xhtml" target="_self">ClPermute</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_permute_kernel.xhtml">kernels::ClPermuteKernel</a> </td></tr>
<tr id="row_322_0_38_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_pool2d.xhtml" target="_self">ClPool2d</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_322_0_39_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_pool3d.xhtml" target="_self">ClPool3d</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_322_0_40_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_p_relu.xhtml" target="_self">ClPRelu</a></td><td class="desc">Basic operator to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">arm_compute::opencl::kernels::ClArithmeticKernel</a> for PRELU </td></tr>
<tr id="row_322_0_41_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_quantize.xhtml" target="_self">ClQuantize</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_quantize_kernel.xhtml">kernels::ClQuantizeKernel</a> that dequantizes an input tensor </td></tr>
<tr id="row_322_0_42_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_reshape.xhtml" target="_self">ClReshape</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_reshape_kernel.xhtml">kernels::ClReshapeKernel</a> </td></tr>
<tr id="row_322_0_43_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_round.xhtml" target="_self">ClRound</a></td><td class="desc">Basic function to get the round (to the nearest even) value of an src tensor </td></tr>
<tr id="row_322_0_44_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_rsqrt.xhtml" target="_self">ClRsqrt</a></td><td class="desc">Basic function to perform inverse square root on an src tensor </td></tr>
<tr id="row_322_0_45_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_scale.xhtml" target="_self">ClScale</a></td><td class="desc">Basic function to simulate a scale layer </td></tr>
<tr id="row_322_0_46_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_sin.xhtml" target="_self">ClSin</a></td><td class="desc">Basic function to calculate sine of an src tensor </td></tr>
<tr id="row_322_0_47_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_softmax.xhtml" target="_self">ClSoftmax</a></td><td class="desc"></td></tr>
<tr id="row_322_0_48_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_sub.xhtml" target="_self">ClSub</a></td><td class="desc">Basic function to run arithmetic subtraction </td></tr>
<tr id="row_322_0_49_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_transpose.xhtml" target="_self">ClTranspose</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_transpose_kernel.xhtml">kernels::ClTransposeKernel</a> </td></tr>
<tr id="row_322_0_50_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_transposed_convolution.xhtml" target="_self">ClTransposedConvolution</a></td><td class="desc">Basic function to simulate a directly convolution layer </td></tr>
<tr id="row_322_0_51_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml" target="_self">ClWinogradConv2d</a></td><td class="desc">Basic function to execute Winograd-based convolution on OpenCL </td></tr>
<tr id="row_322_0_52_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" target="_self">CLSynthetizeOperator&lt; K &gt;</a></td><td class="desc">This template synthetizes a simple <a class="el" href="classarm__compute_1_1_i_operator.xhtml" title="Base class specifying the operator interface.">IOperator</a> which runs the given kernel K </td></tr>
<tr id="row_322_0_53_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator_init_output_with_zero_and_with_zero_constant_border.xhtml" target="_self">CLSynthetizeOperatorInitOutputWithZeroAndWithZeroConstantBorder&lt; K, bordersize &gt;</a></td><td class="desc">As above but this also initializes to zero the input tensor </td></tr>
<tr id="row_322_0_54_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_cl_synthetize_operator_with_border.xhtml" target="_self">ClSynthetizeOperatorWithBorder&lt; K &gt;</a></td><td class="desc">As above but this also setups a Zero border on the input tensor of the kernel's bordersize </td></tr>
<tr id="row_322_0_55_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" target="_self">CLSynthetizeOperator&lt; ClGemmLowpMatrixMultiplyReshapedKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_322_0_56_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" target="_self">CLSynthetizeOperator&lt; ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_322_0_57_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" target="_self">CLSynthetizeOperator&lt; ClGemmMatrixMultiplyNativeKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_322_0_58_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" target="_self">CLSynthetizeOperator&lt; ClGemmMatrixMultiplyReshapedKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_322_0_59_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" target="_self">CLSynthetizeOperator&lt; ClGemmMatrixMultiplyReshapedOnlyRhsKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_322_0_60_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" target="_self">CLSynthetizeOperator&lt; ClGemmReshapeLhsMatrixKernel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_322_1_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_322_1_" class="arrow" onclick="toggleFolder('322_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml" target="_self">INEOperator</a></td><td class="desc">Basic interface for functions which have a single async CPU kernel </td></tr>
<tr id="row_322_1_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_activation.xhtml" target="_self">CpuActivation</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_activation_kernel.xhtml">kernels::CpuActivationKernel</a> </td></tr>
<tr id="row_322_1_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_add.xhtml" target="_self">CpuAdd</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml">kernels::CpuAddKernel</a> </td></tr>
<tr id="row_322_1_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_add_mul_add.xhtml" target="_self">CpuAddMulAdd</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_mul_add_kernel.xhtml">kernels::CpuAddMulAddKernel</a> </td></tr>
<tr id="row_322_1_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_cast.xhtml" target="_self">CpuCast</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml">kernels::CpuCastKernel</a> </td></tr>
<tr id="row_322_1_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_complex_mul.xhtml" target="_self">CpuComplexMul</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_complex_mul_kernel.xhtml">kernels::CpuComplexMulKernel</a> </td></tr>
<tr id="row_322_1_5_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_concatenate.xhtml" target="_self">CpuConcatenate</a></td><td class="desc">Basic function to execute concatenate tensors along a given axis </td></tr>
<tr id="row_322_1_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml" target="_self">CpuConv2d</a></td><td class="desc">Basic function to simulate a convolution layer </td></tr>
<tr id="row_322_1_7_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_convert_fully_connected_weights.xhtml" target="_self">CpuConvertFullyConnectedWeights</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_convert_fully_connected_weights_kernel.xhtml">kernels::CpuConvertFullyConnectedWeightsKernel</a> </td></tr>
<tr id="row_322_1_8_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_copy.xhtml" target="_self">CpuCopy</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_copy_kernel.xhtml">kernels::CpuCopyKernel</a> </td></tr>
<tr id="row_322_1_9_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d.xhtml" target="_self">CpuDepthwiseConv2d</a></td><td class="desc">Function to execute a depthwise convolution </td></tr>
<tr id="row_322_1_10_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml" target="_self">CpuDepthwiseConv2dAssemblyDispatch</a></td><td class="desc">Depthwise convolution assembly kernel glue </td></tr>
<tr id="row_322_1_11_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_dequantize.xhtml" target="_self">CpuDequantize</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_dequantize_kernel.xhtml">kernels::CpuDequantizeKernel</a> that dequantizes an input tensor </td></tr>
<tr id="row_322_1_12_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_direct_conv2d.xhtml" target="_self">CpuDirectConv2d</a></td><td class="desc">Function to run the direct convolution </td></tr>
<tr id="row_322_1_13_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_direct_conv3d.xhtml" target="_self">CpuDirectConv3d</a></td><td class="desc">Function to run the direct convolution </td></tr>
<tr id="row_322_1_14_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_322_1_14_" class="arrow" onclick="toggleFolder('322_1_14_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_base.xhtml" target="_self">CpuElementwiseBase</a></td><td class="desc"></td></tr>
<tr id="row_322_1_14_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_arithmetic.xhtml" target="_self">CpuElementwiseArithmetic&lt; op &gt;</a></td><td class="desc">Class to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml">cpu::kernels::CpuArithmeticKernel</a> except for division and power </td></tr>
<tr id="row_322_1_14_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison.xhtml" target="_self">CpuElementwiseComparison</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_comparison_kernel.xhtml">cpu::kernels::CpuComparisonKernel</a> </td></tr>
<tr id="row_322_1_14_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison_static.xhtml" target="_self">CpuElementwiseComparisonStatic&lt; op &gt;</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_comparison_kernel.xhtml">cpu::kernels::CpuComparisonKernel</a> </td></tr>
<tr id="row_322_1_14_3_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_division.xhtml" target="_self">CpuElementwiseDivision</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml">cpu::kernels::CpuArithmeticKernel</a> for division </td></tr>
<tr id="row_322_1_14_4_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_power.xhtml" target="_self">CpuElementwisePower</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml">cpu::kernels::CpuArithmeticKernel</a> for power </td></tr>
<tr id="row_322_1_15_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_unary.xhtml" target="_self">CpuElementwiseUnary</a></td><td class="desc"></td></tr>
<tr id="row_322_1_16_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_fill.xhtml" target="_self">CpuFill</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_fill_kernel.xhtml">kernels::CpuFillKernel</a> </td></tr>
<tr id="row_322_1_17_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_flatten.xhtml" target="_self">CpuFlatten</a></td><td class="desc">Basic function to flatten a given input </td></tr>
<tr id="row_322_1_18_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_floor.xhtml" target="_self">CpuFloor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_floor_kernel.xhtml">kernels::CpuFloorKernel</a> </td></tr>
<tr id="row_322_1_19_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml" target="_self">CpuFullyConnected</a></td><td class="desc">Basic function to compute a Fully Connected layer </td></tr>
<tr id="row_322_1_20_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml" target="_self">CpuGemm</a></td><td class="desc">Basic function to execute GEMM </td></tr>
<tr id="row_322_1_21_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml" target="_self">CpuGemmAssemblyDispatch</a></td><td class="desc">Assembly kernel glue </td></tr>
<tr id="row_322_1_22_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml" target="_self">CpuGemmConv2d</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_322_1_23_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml" target="_self">CpuGemmDirectConv2d</a></td><td class="desc"></td></tr>
<tr id="row_322_1_24_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml" target="_self">CpuGemmLowpMatrixMultiplyCore</a></td><td class="desc">Basic function to execute GEMMLowpMatrixMultiplyCore </td></tr>
<tr id="row_322_1_25_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_output_stage.xhtml" target="_self">CpuGemmLowpOutputStage</a></td><td class="desc">Basic function to execute GEMMLowpQuantizeDown kernels </td></tr>
<tr id="row_322_1_26_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml" target="_self">CpuMatMul</a></td><td class="desc">Function to execute MatMul Operation </td></tr>
<tr id="row_322_1_27_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_max_unpooling.xhtml" target="_self">CpuMaxUnpooling</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_max_unpooling_layer_kernel.xhtml">kernels::CpuMaxUnpoolingLayerKernel</a> </td></tr>
<tr id="row_322_1_28_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_mul.xhtml" target="_self">CpuMul</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_mul_kernel.xhtml">kernels::CpuMulKernel</a> </td></tr>
<tr id="row_322_1_29_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_permute.xhtml" target="_self">CpuPermute</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_permute_kernel.xhtml">kernels::CpuPermuteKernel</a> </td></tr>
<tr id="row_322_1_30_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool2d.xhtml" target="_self">CpuPool2d</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_322_1_31_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool3d.xhtml" target="_self">CpuPool3d</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_322_1_32_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_quantize.xhtml" target="_self">CpuQuantize</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_quantize_kernel.xhtml">kernels::CpuQuantizeKernel</a> that dequantizes an input tensor </td></tr>
<tr id="row_322_1_33_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_reshape.xhtml" target="_self">CpuReshape</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_reshape_kernel.xhtml">kernels::CpuReshapeKernel</a> </td></tr>
<tr id="row_322_1_34_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_scale.xhtml" target="_self">CpuScale</a></td><td class="desc">Basic function to compute Scale </td></tr>
<tr id="row_322_1_35_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_softmax_generic.xhtml" target="_self">CpuSoftmaxGeneric&lt; IS_LOG &gt;</a></td><td class="desc">Basic function to compute a SoftmaxLayer and a Log SoftmaxLayer </td></tr>
<tr id="row_322_1_36_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_sub.xhtml" target="_self">CpuSub</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_sub_kernel.xhtml">kernels::CpuSubKernel</a> </td></tr>
<tr id="row_322_1_37_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_transpose.xhtml" target="_self">CpuTranspose</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_transpose_kernel.xhtml">kernels::CpuTransposeKernel</a> </td></tr>
<tr id="row_322_1_38_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml" target="_self">CpuWinogradConv2d</a></td><td class="desc"></td></tr>
<tr id="row_322_1_39_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_n_e_slice.xhtml" target="_self">NESlice</a></td><td class="desc">Basic function to perform tensor slicing </td></tr>
<tr id="row_322_1_40_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_n_e_strided_slice.xhtml" target="_self">NEStridedSlice</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_strided_slice_kernel.xhtml">NEStridedSliceKernel</a> </td></tr>
<tr id="row_322_1_41_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_kernel_border.xhtml" target="_self">NESynthetizeFunctionWithZeroConstantKernelBorder&lt; K &gt;</a></td><td class="desc">As above but this also setups a Zero border on the input tensor of the kernel's bordersize </td></tr>
<tr id="row_323_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_i_planar_strategy.xhtml" target="_self">IPlanarStrategy&lt; OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_324_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_324_" class="arrow" onclick="toggleFolder('324_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_i_planar_strategy.xhtml" target="_self">IPlanarStrategy&lt; typename DefaultOutputStage&lt; float &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_324_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_324_0_" class="arrow" onclick="toggleFolder('324_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_planar_strategy.xhtml" target="_self">PlanarStrategy&lt; float, float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_324_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32__planar__3x3__s1__4rows__mla__za.xhtml" target="_self">sme2_fp32_planar_3x3_s1_4rows_mla_za</a></td><td class="desc"></td></tr>
<tr id="row_324_0_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32__planar__3x3__s2__4rows__mla__za.xhtml" target="_self">sme2_fp32_planar_3x3_s2_4rows_mla_za</a></td><td class="desc"></td></tr>
<tr id="row_324_0_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32__planar__5x5__s1__4rows__mla__za.xhtml" target="_self">sme2_fp32_planar_5x5_s1_4rows_mla_za</a></td><td class="desc"></td></tr>
<tr id="row_324_0_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32__planar__5x5__s2__4rows__mla__za.xhtml" target="_self">sme2_fp32_planar_5x5_s2_4rows_mla_za</a></td><td class="desc"></td></tr>
<tr id="row_324_0_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32bf16fp32__planar__3x3__s1__4rows__dot__za.xhtml" target="_self">sme2_fp32bf16fp32_planar_3x3_s1_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_324_0_5_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32bf16fp32__planar__3x3__s2__4rows__dot__za.xhtml" target="_self">sme2_fp32bf16fp32_planar_3x3_s2_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_324_0_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32bf16fp32__planar__5x5__s1__4rows__dot__za.xhtml" target="_self">sme2_fp32bf16fp32_planar_5x5_s1_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_324_0_7_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32bf16fp32__planar__5x5__s2__4rows__dot__za.xhtml" target="_self">sme2_fp32bf16fp32_planar_5x5_s2_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_325_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_325_" class="arrow" onclick="toggleFolder('325_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_i_planar_strategy.xhtml" target="_self">IPlanarStrategy&lt; typename DefaultOutputStage&lt; int8_t &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_325_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_325_0_" class="arrow" onclick="toggleFolder('325_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_planar_strategy.xhtml" target="_self">PlanarStrategy&lt; int8_t, int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_325_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__s8q__planar__3x3__s1__4rows__dot__za.xhtml" target="_self">sme2_s8q_planar_3x3_s1_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_325_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__s8q__planar__3x3__s2__4rows__dot__za.xhtml" target="_self">sme2_s8q_planar_3x3_s2_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_325_0_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__s8q__planar__5x5__s1__4rows__dot__za.xhtml" target="_self">sme2_s8q_planar_5x5_s1_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_325_0_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__s8q__planar__5x5__s2__4rows__dot__za.xhtml" target="_self">sme2_s8q_planar_5x5_s2_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_326_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_326_" class="arrow" onclick="toggleFolder('326_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_i_planar_strategy.xhtml" target="_self">IPlanarStrategy&lt; typename DefaultOutputStage&lt; TInput &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_326_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_planar_strategy.xhtml" target="_self">PlanarStrategy&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_327_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_327_" class="arrow" onclick="toggleFolder('327_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_i_planar_strategy.xhtml" target="_self">IPlanarStrategy&lt; typename DefaultOutputStage&lt; uint8_t &gt;::Type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_327_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_327_0_" class="arrow" onclick="toggleFolder('327_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_planar_strategy.xhtml" target="_self">PlanarStrategy&lt; uint8_t, int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_327_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8s8u8q__planar__3x3__s1__4rows__dot__za.xhtml" target="_self">sme2_u8s8u8q_planar_3x3_s1_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_327_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8s8u8q__planar__3x3__s2__4rows__dot__za.xhtml" target="_self">sme2_u8s8u8q_planar_3x3_s2_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_327_0_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8s8u8q__planar__5x5__s1__4rows__dot__za.xhtml" target="_self">sme2_u8s8u8q_planar_5x5_s1_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_327_0_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8s8u8q__planar__5x5__s2__4rows__dot__za.xhtml" target="_self">sme2_u8s8u8q_planar_5x5_s2_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_327_1_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_327_1_" class="arrow" onclick="toggleFolder('327_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1_planar_strategy.xhtml" target="_self">PlanarStrategy&lt; uint8_t, uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_327_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8q__planar__3x3__s1__4rows__dot__za.xhtml" target="_self">sme2_u8q_planar_3x3_s1_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_327_1_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8q__planar__3x3__s2__4rows__dot__za.xhtml" target="_self">sme2_u8q_planar_3x3_s2_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_327_1_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8q__planar__5x5__s1__4rows__dot__za.xhtml" target="_self">sme2_u8q_planar_5x5_s1_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_327_1_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8q__planar__5x5__s2__4rows__dot__za.xhtml" target="_self">sme2_u8q_planar_5x5_s2_4rows_dot_za</a></td><td class="desc"></td></tr>
<tr id="row_328_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_328_" class="arrow" onclick="toggleFolder('328_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_pool_manager.xhtml" target="_self">IPoolManager</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> pool manager interface </td></tr>
<tr id="row_328_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pool_manager.xhtml" target="_self">PoolManager</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> pool manager </td></tr>
<tr id="row_329_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_329_" class="arrow" onclick="toggleFolder('329_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml" target="_self">IPostOp&lt; TensorRelatedT &gt;</a></td><td class="desc">An elementwise n-ary operation that can be appended to and fused with (at kernel-level) other operators It contains: </td></tr>
<tr id="row_329_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_act.xhtml" target="_self">PostOpAct&lt; TensorRelatedT &gt;</a></td><td class="desc">(EXPERIMENTAL_POST_OPS) Implementation of specific IPostOps </td></tr>
<tr id="row_329_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml" target="_self">PostOpEltwiseAdd&lt; TensorRelatedT &gt;</a></td><td class="desc"></td></tr>
<tr id="row_329_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_p_relu.xhtml" target="_self">PostOpEltwisePRelu&lt; TensorRelatedT &gt;</a></td><td class="desc"></td></tr>
<tr id="row_330_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_330_" class="arrow" onclick="toggleFolder('330_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_i_preprocessor.xhtml" target="_self">IPreprocessor</a></td><td class="desc">Preprocessor interface </td></tr>
<tr id="row_330_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_caffe_preproccessor.xhtml" target="_self">CaffePreproccessor</a></td><td class="desc">Caffe preproccessor </td></tr>
<tr id="row_330_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_t_f_preproccessor.xhtml" target="_self">TFPreproccessor</a></td><td class="desc">TF preproccessor </td></tr>
<tr id="row_331_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_331_" class="arrow" onclick="toggleFolder('331_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml" target="_self">IRuntimeContext</a></td><td class="desc">Context interface </td></tr>
<tr id="row_331_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_331_0_" class="arrow" onclick="toggleFolder('331_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_runtime_context.xhtml" target="_self">RuntimeContext</a></td><td class="desc">Runtime context </td></tr>
<tr id="row_331_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_runtime_context.xhtml" target="_self">CLRuntimeContext</a></td><td class="desc">Runtime context </td></tr>
<tr id="row_332_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_332_" class="arrow" onclick="toggleFolder('332_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>is_floating_point</b></td><td class="desc"></td></tr>
<tr id="row_332_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1is__floating__point.xhtml" target="_self">is_floating_point&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_332_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1utils_1_1traits_1_1is__floating__point.xhtml" target="_self">is_floating_point&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_333_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1is__sme.xhtml" target="_self">is_sme&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_334_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_334_" class="arrow" onclick="toggleFolder('334_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml" target="_self">IScheduler</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> interface to run kernels </td></tr>
<tr id="row_334_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml" target="_self">CPPScheduler</a></td><td class="desc">C++11 implementation of a pool of threads to automatically split a kernel's execution among several threads </td></tr>
<tr id="row_334_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_o_m_p_scheduler.xhtml" target="_self">OMPScheduler</a></td><td class="desc">Pool of threads to automatically split a kernel's execution among several threads </td></tr>
<tr id="row_334_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml" target="_self">SingleThreadScheduler</a></td><td class="desc">Pool of threads to automatically split a kernel's execution among several threads </td></tr>
<tr id="row_335_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_335_" class="arrow" onclick="toggleFolder('335_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml" target="_self">ISchedulerUser</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> user interface <br  />
 </td></tr>
<tr id="row_335_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_context_scheduler_user.xhtml" target="_self">ContextSchedulerUser</a></td><td class="desc"></td></tr>
<tr id="row_336_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_336_" class="arrow" onclick="toggleFolder('336_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml" target="_self">IStream</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml" title="Stream frontend class to construct simple graphs in a stream fashion.">Stream</a> interface </td></tr>
<tr id="row_336_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml" target="_self">Stream</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml" title="Stream frontend class to construct simple graphs in a stream fashion.">Stream</a> frontend class to construct simple graphs in a stream fashion </td></tr>
<tr id="row_336_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml" target="_self">SubStream</a></td><td class="desc">Sub stream class </td></tr>
<tr id="row_337_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_337_" class="arrow" onclick="toggleFolder('337_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor.xhtml" target="_self">ITensor</a></td><td class="desc">Interface for CPU tensor </td></tr>
<tr id="row_337_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_operator_tensor.xhtml" target="_self">OperatorTensor</a></td><td class="desc">Basic implementation of the tensor interface </td></tr>
<tr id="row_337_1_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_337_1_" class="arrow" onclick="toggleFolder('337_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml" target="_self">ICLTensor</a></td><td class="desc">Interface for OpenCL tensor </td></tr>
<tr id="row_337_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml" target="_self">CLSubTensor</a></td><td class="desc">Basic implementation of the OpenCL sub-tensor interface </td></tr>
<tr id="row_337_1_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml" target="_self">CLTensor</a></td><td class="desc">Basic implementation of the OpenCL tensor interface </td></tr>
<tr id="row_337_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_sub_tensor.xhtml" target="_self">SubTensor</a></td><td class="desc">Basic implementation of the sub-tensor interface </td></tr>
<tr id="row_337_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor.xhtml" target="_self">Tensor</a></td><td class="desc">Basic implementation of the tensor interface </td></tr>
<tr id="row_338_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_338_" class="arrow" onclick="toggleFolder('338_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml" target="_self">ITensorAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> accessor interface </td></tr>
<tr id="row_338_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_detection_output_accessor.xhtml" target="_self">DetectionOutputAccessor</a></td><td class="desc">Detection output accessor class </td></tr>
<tr id="row_338_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml" target="_self">DummyAccessor</a></td><td class="desc">Dummy accessor class </td></tr>
<tr id="row_338_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_image_accessor.xhtml" target="_self">ImageAccessor</a></td><td class="desc"><a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> accessor class </td></tr>
<tr id="row_338_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_num_py_accessor.xhtml" target="_self">NumPyAccessor</a></td><td class="desc">NumPy accessor class </td></tr>
<tr id="row_338_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_num_py_bin_loader.xhtml" target="_self">NumPyBinLoader</a></td><td class="desc">Numpy Binary loader class </td></tr>
<tr id="row_338_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_p_p_m_writer.xhtml" target="_self">PPMWriter</a></td><td class="desc">PPM writer class </td></tr>
<tr id="row_338_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_print_accessor.xhtml" target="_self">PrintAccessor</a></td><td class="desc">Print accessor class </td></tr>
<tr id="row_338_7_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_random_accessor.xhtml" target="_self">RandomAccessor</a></td><td class="desc">Random accessor class </td></tr>
<tr id="row_338_8_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_save_num_py_accessor.xhtml" target="_self">SaveNumPyAccessor</a></td><td class="desc">SaveNumPy accessor class </td></tr>
<tr id="row_338_9_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_top_n_predictions_accessor.xhtml" target="_self">TopNPredictionsAccessor</a></td><td class="desc">Result accessor class </td></tr>
<tr id="row_338_10_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_validation_input_accessor.xhtml" target="_self">ValidationInputAccessor</a></td><td class="desc">Input Accessor used for network validation </td></tr>
<tr id="row_338_11_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_validation_output_accessor.xhtml" target="_self">ValidationOutputAccessor</a></td><td class="desc">Output Accessor used for network validation </td></tr>
<tr id="row_338_12_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_verify_accessor.xhtml" target="_self">VerifyAccessor&lt; D &gt;</a></td><td class="desc">Graph example validation accessor class </td></tr>
<tr id="row_339_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_339_" class="arrow" onclick="toggleFolder('339_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml" target="_self">ITensorAllocator</a></td><td class="desc">Interface to allocate tensors </td></tr>
<tr id="row_339_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml" target="_self">CLTensorAllocator</a></td><td class="desc">Basic implementation of a CL memory tensor allocator </td></tr>
<tr id="row_339_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_allocator.xhtml" target="_self">TensorAllocator</a></td><td class="desc">Basic implementation of a CPU memory tensor allocator </td></tr>
<tr id="row_340_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_340_" class="arrow" onclick="toggleFolder('340_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml" target="_self">ITensorHandle</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> handle interface object </td></tr>
<tr id="row_340_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_sub_tensor_handle.xhtml" target="_self">CLSubTensorHandle</a></td><td class="desc">OpenCL Sub-Tensor handle interface object </td></tr>
<tr id="row_340_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml" target="_self">CLTensorHandle</a></td><td class="desc">OpenCL <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> handle interface object </td></tr>
<tr id="row_340_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_sub_tensor_handle.xhtml" target="_self">NESubTensorHandle</a></td><td class="desc">CPU Sub-Tensor handle interface object </td></tr>
<tr id="row_340_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_tensor_handle.xhtml" target="_self">NETensorHandle</a></td><td class="desc">CPU <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> handle interface object </td></tr>
<tr id="row_341_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml" target="_self">ITensorPack</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> packing service </td></tr>
<tr id="row_342_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_iterator.xhtml" target="_self">Iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element.">Iterator</a> updated by <a class="el" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a> for each window element </td></tr>
<tr id="row_343_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset_1_1iterator.xhtml" target="_self">ContainerDataset&lt; T &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element.">Iterator</a> for the dataset </td></tr>
<tr id="row_344_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml" target="_self">InitializerListDataset&lt; T &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element.">Iterator</a> for the dataset </td></tr>
<tr id="row_345_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml" target="_self">CartesianProductDataset&lt; T, U &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element.">Iterator</a> for the dataset </td></tr>
<tr id="row_346_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset_1_1iterator.xhtml" target="_self">JoinDataset&lt; T, U &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element.">Iterator</a> for the dataset </td></tr>
<tr id="row_347_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset_1_1iterator.xhtml" target="_self">RangeDataset&lt; T &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element.">Iterator</a> for the dataset </td></tr>
<tr id="row_348_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset_1_1iterator.xhtml" target="_self">SingletonDataset&lt; T &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element.">Iterator</a> for the dataset </td></tr>
<tr id="row_349_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset_1_1iterator.xhtml" target="_self">ZipDataset&lt; T, U &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element.">Iterator</a> for the dataset </td></tr>
<tr id="row_350_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_350_" class="arrow" onclick="toggleFolder('350_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_transform_weights.xhtml" target="_self">ITransformWeights</a></td><td class="desc">Weights tensor transform interface In order to identify the different reshape functions, each reshape function has to generate a unique id </td></tr>
<tr id="row_350_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1weights__transformations_1_1_c_l_convert_fully_connected_weights_managed.xhtml" target="_self">CLConvertFullyConnectedWeightsManaged</a></td><td class="desc">Basic function to manage <a class="el" href="classarm__compute_1_1_c_l_convert_fully_connected_weights.xhtml">CLConvertFullyConnectedWeights</a> </td></tr>
<tr id="row_350_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1weights__transformations_1_1_n_e_fully_connected_layer_reshape_weights_managed.xhtml" target="_self">NEFullyConnectedLayerReshapeWeightsManaged</a></td><td class="desc">Basic function to manage the reshape weights generated from <a class="el" href="classarm__compute_1_1_n_e_transpose.xhtml">NETranspose</a> </td></tr>
<tr id="row_351_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_weights_manager.xhtml" target="_self">IWeightsManager</a></td><td class="desc">Weights manager interface to handle weights transformations </td></tr>
<tr id="row_352_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_kernel.xhtml" target="_self">Kernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> class </td></tr>
<tr id="row_353_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_clock_1_1kernel__info.xhtml" target="_self">SchedulerClock&lt; output_timestamps &gt;::kernel_info</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> information </td></tr>
<tr id="row_354_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_kernel_description.xhtml" target="_self">KernelDescription</a></td><td class="desc"></td></tr>
<tr id="row_355_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties.xhtml" target="_self">KernelProperties</a></td><td class="desc">Properties common to all kernel component types </td></tr>
<tr id="row_356_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_keypoint.xhtml" target="_self">Keypoint</a></td><td class="desc"></td></tr>
<tr id="row_357_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1linear.xhtml" target="_self">linear&lt; T, S &gt;</a></td><td class="desc">Linear activation object </td></tr>
<tr id="row_358_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" target="_self">Logger</a></td><td class="desc"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" title="Logger class.">Logger</a> class </td></tr>
<tr id="row_359_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_logger_registry.xhtml" target="_self">LoggerRegistry</a></td><td class="desc">Registry class holding all the instantiated loggers </td></tr>
<tr id="row_360_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1logistic.xhtml" target="_self">logistic&lt; T, S &gt;</a></td><td class="desc">Logistic activation object </td></tr>
<tr id="row_361_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1logging_1_1_log_msg.xhtml" target="_self">LogMsg</a></td><td class="desc">Log message </td></tr>
<tr id="row_362_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_l_s_t_m_params.xhtml" target="_self">LSTMParams&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_363_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1lubrelu.xhtml" target="_self">lubrelu&lt; T, S &gt;</a></td><td class="desc">Lower-Upper Bounded RELU activation object </td></tr>
<tr id="row_364_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_mat_mul_info.xhtml" target="_self">MatMulInfo</a></td><td class="desc">Class for holding information related to matrix multiplication function </td></tr>
<tr id="row_365_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_mat_mul_kernel_info.xhtml" target="_self">MatMulKernelInfo</a></td><td class="desc"></td></tr>
<tr id="row_366_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_max_unpooling_layer_kernel_1_1_max_unpooling_kernel.xhtml" target="_self">CpuMaxUnpoolingLayerKernel::MaxUnpoolingKernel</a></td><td class="desc"></td></tr>
<tr id="row_367_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml" target="_self">Measurement</a></td><td class="desc">Generic measurement that stores values as either double or long long int </td></tr>
<tr id="row_368_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_memory_descriptor.xhtml" target="_self">MemoryDescriptor</a></td><td class="desc">Descriptor of a workload tensor memory </td></tr>
<tr id="row_369_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory_group_resource_scope.xhtml" target="_self">MemoryGroupResourceScope</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> group resources scope handling class </td></tr>
<tr id="row_370_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml" target="_self">MemoryInfo</a></td><td class="desc"></td></tr>
<tr id="row_371_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1_memory_manager_context.xhtml" target="_self">MemoryManagerContext</a></td><td class="desc">Contains structs required for memory management </td></tr>
<tr id="row_372_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_min_max_location_values.xhtml" target="_self">MinMaxLocationValues&lt; MinMaxType &gt;</a></td><td class="desc">Min and max values and locations </td></tr>
<tr id="row_373_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml" target="_self">MLGOHeuristics</a></td><td class="desc"><a class="el" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml" title="MLGOHeuristics for configuring GEMM kernels.">MLGOHeuristics</a> for configuring GEMM kernels </td></tr>
<tr id="row_374_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml" target="_self">MMappedFile</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> mapped file class </td></tr>
<tr id="row_375_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_n_d_range.xhtml" target="_self">NDRange&lt; D &gt;</a></td><td class="desc"></td></tr>
<tr id="row_376_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_n_d_range.xhtml" target="_self">NDRange&lt; 4 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_377_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_377_" class="arrow" onclick="toggleFolder('377_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_n_d_range.xhtml" target="_self">NDRange&lt; N &gt;</a></td><td class="desc"></td></tr>
<tr id="row_377_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_n_d_coordinate.xhtml" target="_self">NDCoordinate&lt; N &gt;</a></td><td class="desc"><a class="el" href="classarm__gemm_1_1_n_d_coordinate.xhtml" title="NDCoordinate builds upon a range, but specifies a starting position in addition to a size which it in...">NDCoordinate</a> builds upon a range, but specifies a starting position in addition to a size which it inherits from <a class="el" href="classarm__gemm_1_1_n_d_range.xhtml">NDRange</a> </td></tr>
<tr id="row_378_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_function_factory.xhtml" target="_self">NEFunctionFactory</a></td><td class="desc">Factory for generating CPU backend functions </td></tr>
<tr id="row_379_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_node_validator.xhtml" target="_self">NENodeValidator</a></td><td class="desc"></td></tr>
<tr id="row_380_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__bitvector.xhtml" target="_self">neon_bitvector&lt; T, BW &gt;</a></td><td class="desc">Create the appropriate SIMD vector given its type and size in terms of bits </td></tr>
<tr id="row_381_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml" target="_self">neon_vector&lt; T, S &gt;</a></td><td class="desc">Create the appropriate SIMD vector given its type and size in terms of elements </td></tr>
<tr id="row_382_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_382_" class="arrow" onclick="toggleFolder('382_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml" target="_self">HeuristicTree::Node</a></td><td class="desc"></td></tr>
<tr id="row_382_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml" target="_self">HeuristicTree::BranchNode</a></td><td class="desc"></td></tr>
<tr id="row_382_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml" target="_self">HeuristicTree::LeafNode&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_383_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml" target="_self">NodeIdxPair</a></td><td class="desc">NodeID-index struct </td></tr>
<tr id="row_384_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml" target="_self">NodeParams</a></td><td class="desc">Common node parameters </td></tr>
<tr id="row_385_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml" target="_self">NormalizationLayerInfo</a></td><td class="desc">Normalization Layer Information class </td></tr>
<tr id="row_386_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_nothing.xhtml" target="_self">Nothing</a></td><td class="desc"></td></tr>
<tr id="row_387_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_n_p_y_loader.xhtml" target="_self">NPYLoader</a></td><td class="desc">Numpy data loader </td></tr>
<tr id="row_388_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml" target="_self">ObjectBase&lt; T &gt;</a></td><td class="desc">Object base class for library objects </td></tr>
<tr id="row_389_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_389_" class="arrow" onclick="toggleFolder('389_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml" target="_self">ObjectBase&lt; AclContext_ &gt;</a></td><td class="desc"></td></tr>
<tr id="row_389_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1_context.xhtml" target="_self">Context</a></td><td class="desc"><a class="el" href="classacl_1_1_context.xhtml" title="Context class.">Context</a> class </td></tr>
<tr id="row_390_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_390_" class="arrow" onclick="toggleFolder('390_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml" target="_self">ObjectBase&lt; AclOperator_ &gt;</a></td><td class="desc"></td></tr>
<tr id="row_390_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_390_0_" class="arrow" onclick="toggleFolder('390_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1_operator.xhtml" target="_self">Operator</a></td><td class="desc"><a class="el" href="classacl_1_1_operator.xhtml" title="Operator class.">Operator</a> class </td></tr>
<tr id="row_390_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1_activation.xhtml" target="_self">Activation</a></td><td class="desc"></td></tr>
<tr id="row_391_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_391_" class="arrow" onclick="toggleFolder('391_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml" target="_self">ObjectBase&lt; AclQueue_ &gt;</a></td><td class="desc"></td></tr>
<tr id="row_391_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1_queue.xhtml" target="_self">Queue</a></td><td class="desc"><a class="el" href="classacl_1_1_queue.xhtml" title="Queue class.">Queue</a> class </td></tr>
<tr id="row_392_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_392_" class="arrow" onclick="toggleFolder('392_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml" target="_self">ObjectBase&lt; AclTensor_ &gt;</a></td><td class="desc"></td></tr>
<tr id="row_392_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1_tensor.xhtml" target="_self">Tensor</a></td><td class="desc"><a class="el" href="classacl_1_1_tensor.xhtml" title="Tensor class.">Tensor</a> class </td></tr>
<tr id="row_393_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_393_" class="arrow" onclick="toggleFolder('393_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml" target="_self">ObjectBase&lt; AclTensorPack_ &gt;</a></td><td class="desc"></td></tr>
<tr id="row_393_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1_tensor_pack.xhtml" target="_self">TensorPack</a></td><td class="desc"><a class="el" href="classacl_1_1_tensor.xhtml" title="Tensor class.">Tensor</a> pack class </td></tr>
<tr id="row_394_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structacl_1_1detail_1_1_object_deleter.xhtml" target="_self">ObjectDeleter&lt; T &gt;</a></td><td class="desc">Construct to handle destruction of objects </td></tr>
<tr id="row_395_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structacl_1_1detail_1_1_object_deleter_3_01_acl_context_01_4.xhtml" target="_self">ObjectDeleter&lt; AclContext &gt;</a></td><td class="desc"></td></tr>
<tr id="row_396_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structacl_1_1detail_1_1_object_deleter_3_01_acl_operator_01_4.xhtml" target="_self">ObjectDeleter&lt; AclOperator &gt;</a></td><td class="desc"></td></tr>
<tr id="row_397_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structacl_1_1detail_1_1_object_deleter_3_01_acl_queue_01_4.xhtml" target="_self">ObjectDeleter&lt; AclQueue &gt;</a></td><td class="desc"></td></tr>
<tr id="row_398_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structacl_1_1detail_1_1_object_deleter_3_01_acl_tensor_01_4.xhtml" target="_self">ObjectDeleter&lt; AclTensor &gt;</a></td><td class="desc"></td></tr>
<tr id="row_399_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structacl_1_1detail_1_1_object_deleter_3_01_acl_tensor_pack_01_4.xhtml" target="_self">ObjectDeleter&lt; AclTensorPack &gt;</a></td><td class="desc"></td></tr>
<tr id="row_400_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" target="_self">Operator</a></td><td class="desc">An operator for the sole purpose of validating fusion </td></tr>
<tr id="row_401_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_1_1_op_pack.xhtml" target="_self">DependencyGraph::OpPack</a></td><td class="desc">A pack of operator including its input and output tensors, used by traversing through the graph in topological order </td></tr>
<tr id="row_402_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_402_" class="arrow" onclick="toggleFolder('402_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_option.xhtml" target="_self">Option</a></td><td class="desc">Abstract base class for a command line option </td></tr>
<tr id="row_402_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_enum_list_option.xhtml" target="_self">EnumListOption&lt; T &gt;</a></td><td class="desc">Implementation of an option that accepts any number of values from a fixed set </td></tr>
<tr id="row_402_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_list_option.xhtml" target="_self">ListOption&lt; T &gt;</a></td><td class="desc">Implementation of an option that accepts any number of values </td></tr>
<tr id="row_402_2_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_402_2_" class="arrow" onclick="toggleFolder('402_2_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; T &gt;</a></td><td class="desc">Implementation of an option that accepts a single value </td></tr>
<tr id="row_402_2_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_enum_option.xhtml" target="_self">EnumOption&lt; T &gt;</a></td><td class="desc">Implementation of a simple option that accepts a value from a fixed set </td></tr>
<tr id="row_402_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_enum_list_option.xhtml" target="_self">EnumListOption&lt; InstrumentsDescription &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_4_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_402_4_" class="arrow" onclick="toggleFolder('402_4_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; arm_compute::CLTunerMode &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_4_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_enum_option.xhtml" target="_self">EnumOption&lt; arm_compute::CLTunerMode &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_5_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_402_5_" class="arrow" onclick="toggleFolder('402_5_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; arm_compute::DataLayout &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_5_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_enum_option.xhtml" target="_self">EnumOption&lt; arm_compute::DataLayout &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_6_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_402_6_" class="arrow" onclick="toggleFolder('402_6_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; arm_compute::DataType &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_6_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_enum_option.xhtml" target="_self">EnumOption&lt; arm_compute::DataType &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_7_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_402_7_" class="arrow" onclick="toggleFolder('402_7_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; arm_compute::graph::Target &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_7_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_enum_option.xhtml" target="_self">EnumOption&lt; arm_compute::graph::Target &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_8_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_402_8_" class="arrow" onclick="toggleFolder('402_8_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; bool &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_8_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_toggle_option.xhtml" target="_self">ToggleOption</a></td><td class="desc">Implementation of an option that can be either true or false </td></tr>
<tr id="row_402_9_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_10_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; int &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_11_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_402_11_" class="arrow" onclick="toggleFolder('402_11_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; LogFormat &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_11_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_enum_option.xhtml" target="_self">EnumOption&lt; LogFormat &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_12_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_402_12_" class="arrow" onclick="toggleFolder('402_12_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; LogLevel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_12_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_enum_option.xhtml" target="_self">EnumOption&lt; LogLevel &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_13_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; size_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_14_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; std::string &gt;</a></td><td class="desc"></td></tr>
<tr id="row_402_15_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; unsigned int &gt;</a></td><td class="desc"></td></tr>
<tr id="row_403_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structacl_1_1_queue_1_1_options.xhtml" target="_self">Queue::Options</a></td><td class="desc">&lt; <a class="el" href="classacl_1_1_queue.xhtml" title="Queue class.">Queue</a> options </td></tr>
<tr id="row_404_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structacl_1_1_context_1_1_options.xhtml" target="_self">Context::Options</a></td><td class="desc">&lt; <a class="el" href="classacl_1_1_context.xhtml" title="Context class.">Context</a> options </td></tr>
<tr id="row_405_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack_1_1_pack_element.xhtml" target="_self">ArgumentPack&lt; T &gt;::PackElement</a></td><td class="desc">A single argument element within the pack It contains either a const pointer or a non-const pointer to the Tensor-related type T, but never at the same time </td></tr>
<tr id="row_406_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_i_tensor_pack_1_1_pack_element.xhtml" target="_self">ITensorPack::PackElement</a></td><td class="desc"></td></tr>
<tr id="row_407_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml" target="_self">PackingArguments</a></td><td class="desc"></td></tr>
<tr id="row_408_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structacl_1_1_tensor_pack_1_1_pack_pair.xhtml" target="_self">TensorPack::PackPair</a></td><td class="desc">Pack pair construct </td></tr>
<tr id="row_409_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_padding2_d.xhtml" target="_self">Padding2D</a></td><td class="desc">Padding information for 2D operations like Conv2d </td></tr>
<tr id="row_410_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_padding3_d.xhtml" target="_self">Padding3D</a></td><td class="desc">Padding information for 3D operations like Conv3d </td></tr>
<tr id="row_411_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_padding_calculator.xhtml" target="_self">PaddingCalculator</a></td><td class="desc">Calculate required padding </td></tr>
<tr id="row_412_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml" target="_self">PadStrideInfo</a></td><td class="desc">Padding and stride information class </td></tr>
<tr id="row_413_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_parameters_library.xhtml" target="_self">ParametersLibrary</a></td><td class="desc">Class that contains all the global parameters used by the tests </td></tr>
<tr id="row_414_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_pass_manager.xhtml" target="_self">PassManager</a></td><td class="desc">Pass manager </td></tr>
<tr id="row_415_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_performance_parameters.xhtml" target="_self">PerformanceParameters</a></td><td class="desc"></td></tr>
<tr id="row_416_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pixel_value.xhtml" target="_self">PixelValue</a></td><td class="desc">Class describing the value of a pixel for any image format </td></tr>
<tr id="row_417_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_planar_kernel_type.xhtml" target="_self">PlanarKernelType&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_418_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_planar_kernel_type_3_01_t_input_00_01_t_weight_00_01_t_output_074bba6d85fd01387143cc0ca9a1d92fe.xhtml" target="_self">PlanarKernelType&lt; TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_419_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_planar_kernel_type_3_01_t_input_00_01_t_weight_00_01_t_output_00_01_t_accum_00_01_nothing_01_4.xhtml" target="_self">PlanarKernelType&lt; TInput, TWeight, TOutput, TAccum, Nothing &gt;</a></td><td class="desc"></td></tr>
<tr id="row_420_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_p_m_u.xhtml" target="_self">PMU</a></td><td class="desc">Class provides access to CPU hardware counters </td></tr>
<tr id="row_421_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_pool2d_attributes.xhtml" target="_self">Pool2dAttributes</a></td><td class="desc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator </td></tr>
<tr id="row_422_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_pool_data_type_i_s_a_selector_data.xhtml" target="_self">PoolDataTypeISASelectorData</a></td><td class="desc"></td></tr>
<tr id="row_423_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool3d_kernel_1_1_pooling3d_kernel.xhtml" target="_self">CpuPool3dKernel::Pooling3dKernel</a></td><td class="desc"></td></tr>
<tr id="row_424_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_pooling3d_layer_info.xhtml" target="_self">Pooling3dLayerInfo</a></td><td class="desc">Pooling Layer Information struct </td></tr>
<tr id="row_425_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_425_" class="arrow" onclick="toggleFolder('425_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>PoolingCommon</b></td><td class="desc"></td></tr>
<tr id="row_425_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_depthfirst_driver.xhtml" target="_self">DepthfirstDriver&lt; TInput, TOutput &gt;</a></td><td class="desc"></td></tr>
<tr id="row_425_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_pooling_depthfirst_cache_oblivious.xhtml" target="_self">PoolingDepthfirstCacheOblivious&lt; strategy &gt;</a></td><td class="desc"></td></tr>
<tr id="row_425_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_pooling_depthfirst_generic_quantized.xhtml" target="_self">PoolingDepthfirstGenericQuantized&lt; strategy &gt;</a></td><td class="desc"></td></tr>
<tr id="row_425_3_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_425_3_" class="arrow" onclick="toggleFolder('425_3_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_depthfirst_driver.xhtml" target="_self">DepthfirstDriver&lt; TInput, TInput &gt;</a></td><td class="desc"></td></tr>
<tr id="row_425_3_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_pooling_depthfirst.xhtml" target="_self">PoolingDepthfirst&lt; TInput, TOutput, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_425_3_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__conv_1_1pooling_1_1_pooling_depthfirst_generic.xhtml" target="_self">PoolingDepthfirstGeneric&lt; TInput, TOutput, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_426_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml" target="_self">PoolingImplementation&lt; TInput, TOutput, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_427_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool2d_kernel_1_1_pooling_kernel.xhtml" target="_self">CpuPool2dKernel::PoolingKernel</a></td><td class="desc"></td></tr>
<tr id="row_428_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_pooling_layer_info.xhtml" target="_self">PoolingLayerInfo</a></td><td class="desc">Pooling Layer Information struct </td></tr>
<tr id="row_429_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_c_l_kernel_utils.xhtml" target="_self">PostOpCLKernelUtils</a></td><td class="desc">Manage validation, building and configurations of PostOp CL kernels </td></tr>
<tr id="row_430_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml" target="_self">PostOpList&lt; TensorRelatedT &gt;</a></td><td class="desc">A sequence of PostOps that can be appended to the end of other operators </td></tr>
<tr id="row_431_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml" target="_self">PostOpList&lt; arm_compute::ITensorInfo * &gt;</a></td><td class="desc"></td></tr>
<tr id="row_432_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample.xhtml" target="_self">PrepareInputSample&lt; IsGeneric &gt;</a></td><td class="desc"></td></tr>
<tr id="row_433_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01false_01_4.xhtml" target="_self">PrepareInputSample&lt; false &gt;</a></td><td class="desc"></td></tr>
<tr id="row_434_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01true_01_4.xhtml" target="_self">PrepareInputSample&lt; true &gt;</a></td><td class="desc"></td></tr>
<tr id="row_435_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_435_" class="arrow" onclick="toggleFolder('435_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml" target="_self">Printer</a></td><td class="desc">Base printer class to be inherited by other printer classes </td></tr>
<tr id="row_435_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_file_printer.xhtml" target="_self">FilePrinter</a></td><td class="desc">File <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml" title="Base printer class to be inherited by other printer classes.">Printer</a> </td></tr>
<tr id="row_435_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_std_printer.xhtml" target="_self">StdPrinter</a></td><td class="desc">Std <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml" title="Base printer class to be inherited by other printer classes.">Printer</a> </td></tr>
<tr id="row_436_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_436_" class="arrow" onclick="toggleFolder('436_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml" target="_self">Printer</a></td><td class="desc">Abstract printer class used by the <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> to present output </td></tr>
<tr id="row_436_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml" target="_self">JSONPrinter</a></td><td class="desc">Implementation of a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> that produces JSON output </td></tr>
<tr id="row_436_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml" target="_self">PrettyPrinter</a></td><td class="desc">Implementation of a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> that produces human readable output </td></tr>
<tr id="row_437_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml" target="_self">PriorBoxLayerInfo</a></td><td class="desc">PriorBox layer info </td></tr>
<tr id="row_438_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml" target="_self">Profiler</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml" title="Profiler class to collect benchmark numbers.">Profiler</a> class to collect benchmark numbers </td></tr>
<tr id="row_439_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_program.xhtml" target="_self">Program</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_program.xhtml" title="Program class.">Program</a> class </td></tr>
<tr id="row_440_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml" target="_self">promote&lt; T &gt;</a></td><td class="desc">Promote a type </td></tr>
<tr id="row_441_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote.xhtml" target="_self">promote&lt; T &gt;</a></td><td class="desc">Promote a type </td></tr>
<tr id="row_442_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01float_01_4.xhtml" target="_self">promote&lt; float &gt;</a></td><td class="desc">Promote float to float </td></tr>
<tr id="row_443_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01float_01_4.xhtml" target="_self">promote&lt; float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_444_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01half_01_4.xhtml" target="_self">promote&lt; half &gt;</a></td><td class="desc"></td></tr>
<tr id="row_445_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01half_01_4.xhtml" target="_self">promote&lt; half &gt;</a></td><td class="desc">Promote half to half </td></tr>
<tr id="row_446_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int16__t_01_4.xhtml" target="_self">promote&lt; int16_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_447_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int16__t_01_4.xhtml" target="_self">promote&lt; int16_t &gt;</a></td><td class="desc">Promote int16_t to int32_t </td></tr>
<tr id="row_448_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int32__t_01_4.xhtml" target="_self">promote&lt; int32_t &gt;</a></td><td class="desc">Promote int32_t to int64_t </td></tr>
<tr id="row_449_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int32__t_01_4.xhtml" target="_self">promote&lt; int32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_450_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int8__t_01_4.xhtml" target="_self">promote&lt; int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_451_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int8__t_01_4.xhtml" target="_self">promote&lt; int8_t &gt;</a></td><td class="desc">Promote int8_t to int16_t </td></tr>
<tr id="row_452_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml" target="_self">promote&lt; uint16_t &gt;</a></td><td class="desc">Promote uint16_t to uint32_t </td></tr>
<tr id="row_453_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml" target="_self">promote&lt; uint16_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_454_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml" target="_self">promote&lt; uint32_t &gt;</a></td><td class="desc">Promote uint32_t to uint64_t </td></tr>
<tr id="row_455_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml" target="_self">promote&lt; uint32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_456_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml" target="_self">promote&lt; uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_457_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml" target="_self">promote&lt; uint8_t &gt;</a></td><td class="desc">Promote uint8_t to uint16_t </td></tr>
<tr id="row_458_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml" target="_self">Qasymm8QuantizationHelper&lt; QUANTIZED_TYPE &gt;</a></td><td class="desc"></td></tr>
<tr id="row_459_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_quantization_info.xhtml" target="_self">QuantizationInfo</a></td><td class="desc">Quantization information </td></tr>
<tr id="row_460_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1_query.xhtml" target="_self">Query</a></td><td class="desc"><a class="el" href="structarm__compute_1_1mlgo_1_1_query.xhtml" title="Query interface.">Query</a> interface </td></tr>
<tr id="row_461_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1random_1_1_ranged_uniform_distribution.xhtml" target="_self">RangedUniformDistribution&lt; T &gt;</a></td><td class="desc">Uniform distribution within a given number of sub-ranges </td></tr>
<tr id="row_462_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="unionarm__compute_1_1helpers_1_1float__ops_1_1_raw_float.xhtml" target="_self">RawFloat</a></td><td class="desc"></td></tr>
<tr id="row_463_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_rectangle.xhtml" target="_self">Rectangle</a></td><td class="desc"><a class="el" href="structarm__compute_1_1_rectangle.xhtml" title="Rectangle type.">Rectangle</a> type </td></tr>
<tr id="row_464_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml" target="_self">RelativeTolerance&lt; T &gt;</a></td><td class="desc">Class reprensenting a relative tolerance value </td></tr>
<tr id="row_465_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml" target="_self">RelativeTolerance&lt; U &gt;</a></td><td class="desc"></td></tr>
<tr id="row_466_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1relu.xhtml" target="_self">relu&lt; T, S &gt;</a></td><td class="desc">RELU activation object </td></tr>
<tr id="row_467_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__gemm_1_1_requantize32.xhtml" target="_self">Requantize32</a></td><td class="desc"></td></tr>
<tr id="row_468_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_reshape_attributes.xhtml" target="_self">ReshapeAttributes</a></td><td class="desc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator </td></tr>
<tr id="row_469_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml" target="_self">ResizeAttributes</a></td><td class="desc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator </td></tr>
<tr id="row_470_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1iterable_1_1reverse__iterable.xhtml" target="_self">reverse_iterable&lt; T &gt;</a></td><td class="desc">Reverse range iterable class </td></tr>
<tr id="row_471_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml" target="_self">ROIPoolingLayerInfo</a></td><td class="desc">ROI Pooling Layer Information class </td></tr>
<tr id="row_472_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_472_" class="arrow" onclick="toggleFolder('472_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>runtime_error</b></td><td class="desc"></td></tr>
<tr id="row_472_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_file_not_found.xhtml" target="_self">FileNotFound</a></td><td class="desc">Error class for when some external assets are missing </td></tr>
<tr id="row_472_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml" target="_self">TestError</a></td><td class="desc">Error class for failures during test execution </td></tr>
<tr id="row_473_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel_1_1_scale_kernel.xhtml" target="_self">CpuScaleKernel::ScaleKernel</a></td><td class="desc"></td></tr>
<tr id="row_474_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_scale_kernel_data_type_i_s_a_selector_data.xhtml" target="_self">ScaleKernelDataTypeISASelectorData</a></td><td class="desc"></td></tr>
<tr id="row_475_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_scale_kernel_info.xhtml" target="_self">ScaleKernelInfo</a></td><td class="desc"></td></tr>
<tr id="row_476_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_scheduler.xhtml" target="_self">Scheduler</a></td><td class="desc">Configurable scheduler which supports multiple multithreading APIs and choosing between different schedulers at runtime </td></tr>
<tr id="row_477_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_scheduler_factory.xhtml" target="_self">SchedulerFactory</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> Factory </td></tr>
<tr id="row_478_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_semaphore.xhtml" target="_self">Semaphore</a></td><td class="desc">Semamphore class </td></tr>
<tr id="row_479_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_size2_d.xhtml" target="_self">Size2D</a></td><td class="desc">Class for specifying the size of an image or rectangle </td></tr>
<tr id="row_480_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_size3_d.xhtml" target="_self">Size3D</a></td><td class="desc">Class for specifying the size of a 3D shape or object </td></tr>
<tr id="row_481_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_softmax_attributes.xhtml" target="_self">SoftmaxAttributes</a></td><td class="desc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator </td></tr>
<tr id="row_482_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_softmax_kernel_info.xhtml" target="_self">SoftmaxKernelInfo</a></td><td class="desc">Descriptor used by the softmax kernels </td></tr>
<tr id="row_483_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_logits1_d_softmax_kernel_1_1_softmax_logits1_d_kernel.xhtml" target="_self">CpuLogits1DSoftmaxKernel&lt; IS_LOG &gt;::SoftmaxLogits1DKernel</a></td><td class="desc"></td></tr>
<tr id="row_484_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_logits1_d_max_kernel_1_1_softmax_logits1_d_max_kernel.xhtml" target="_self">CpuLogits1DMaxKernel::SoftmaxLogits1DMaxKernel</a></td><td class="desc"></td></tr>
<tr id="row_485_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1square.xhtml" target="_self">square&lt; T, S &gt;</a></td><td class="desc">Square activation object </td></tr>
<tr id="row_486_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_status.xhtml" target="_self">Status</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class.">Status</a> class </td></tr>
<tr id="row_487_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_std_transforms_fixed.xhtml" target="_self">StdTransformsFixed&lt; TOperand, TResult, height, width, block, integrate_sums &gt;</a></td><td class="desc"></td></tr>
<tr id="row_488_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_std_transforms_s_m_e.xhtml" target="_self">StdTransformsSME&lt; TOperand, TResult, height_vectors, width_vectors, block, integrate_sums &gt;</a></td><td class="desc"></td></tr>
<tr id="row_489_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml" target="_self">StdTransformsSVE&lt; TOperand, TResult, height, width_vectors, block, mmla, integrate_sums &gt;</a></td><td class="desc"></td></tr>
<tr id="row_490_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml" target="_self">StrategyType&lt; IsGeneric, TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_491_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01false_00_01_t_input8633ae7ee5836c9610d7020e509234f1.xhtml" target="_self">StrategyType&lt; false, TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_492_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_a0f24e403e092ed08cc3d3280257460e.xhtml" target="_self">StrategyType&lt; true, TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_493_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_7baeeac6248d2dc629261e41fed0f86e.xhtml" target="_self">StrategyType&lt; true, TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a></td><td class="desc"></td></tr>
<tr id="row_494_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml" target="_self">StreamHints</a></td><td class="desc">Hints that can be passed to the stream to expose parameterization </td></tr>
<tr id="row_495_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_strided_slice_layer_info.xhtml" target="_self">StridedSliceLayerInfo</a></td><td class="desc"></td></tr>
<tr id="row_496_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_sub_kernel_1_1_sub_kernel.xhtml" target="_self">CpuSubKernel::SubKernel</a></td><td class="desc"></td></tr>
<tr id="row_497_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml" target="_self">TagVal</a></td><td class="desc">A tag value will substitute a tag in a string template during its instantiation </td></tr>
<tr id="row_498_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_task_executor.xhtml" target="_self">TaskExecutor</a></td><td class="desc">Task executor </td></tr>
<tr id="row_499_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" target="_self">Tensor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> object </td></tr>
<tr id="row_500_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_tensor3_d.xhtml" target="_self">Tensor3D</a></td><td class="desc">Structure to hold 3D tensor information </td></tr>
<tr id="row_501_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_tensor4_d.xhtml" target="_self">Tensor4D</a></td><td class="desc">Structure to hold 4D tensor information </td></tr>
<tr id="row_502_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_accessor.xhtml" target="_self">TensorAccessor&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> accessors to make it easier to interface with <a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a> </td></tr>
<tr id="row_503_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_tensor_cache.xhtml" target="_self">TensorCache</a></td><td class="desc">Stores <a class="el" href="classarm__compute_1_1test_1_1_raw_tensor.xhtml">RawTensor</a> categorised by the image they are created from including name, format and channel </td></tr>
<tr id="row_504_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classacl_1_1_tensor_descriptor.xhtml" target="_self">TensorDescriptor</a></td><td class="desc"><a class="el" href="classacl_1_1_tensor.xhtml" title="Tensor class.">Tensor</a> Descriptor class </td></tr>
<tr id="row_505_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml" target="_self">TensorParams</a></td><td class="desc">Structure holding all the input tensor graph parameters </td></tr>
<tr id="row_506_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1_tensor_spec.xhtml" target="_self">TensorSpec&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_507_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml" target="_self">TensorSpec&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_508_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml" target="_self">GpuKernelVariableTable::TensorVariable</a></td><td class="desc">A tensor variable whose main purposes are: </td></tr>
<tr id="row_509_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_509_" class="arrow" onclick="toggleFolder('509_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml" target="_self">TestCase</a></td><td class="desc">Abstract test case class </td></tr>
<tr id="row_509_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; T &gt;</a></td><td class="desc">Data test case class </td></tr>
<tr id="row_509_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(combine(combine(combine(combine(combine(datasets::SmallImageShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), interpolation_types), datasets::BorderModes()), datasets::SamplingPolicies()))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_510_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_510_" class="arrow" onclick="toggleFolder('510_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml" target="_self">TestCaseFactory</a></td><td class="desc">Abstract factory class to create test cases </td></tr>
<tr id="row_510_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml" target="_self">DataTestCaseFactory&lt; T, D &gt;</a></td><td class="desc">Implementation of a test case factory to create data test cases </td></tr>
<tr id="row_510_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory.xhtml" target="_self">SimpleTestCaseFactory&lt; T &gt;</a></td><td class="desc">Implementation of a test case factory to create non-data test cases </td></tr>
<tr id="row_511_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1detail_1_1_test_case_registrar.xhtml" target="_self">TestCaseRegistrar&lt; T &gt;</a></td><td class="desc">Helper class to statically register a test case </td></tr>
<tr id="row_512_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_filter.xhtml" target="_self">TestFilter</a></td><td class="desc">Test filter class </td></tr>
<tr id="row_513_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml" target="_self">TestInfo</a></td><td class="desc">Information about a test case </td></tr>
<tr id="row_514_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml" target="_self">TestResult</a></td><td class="desc">Class to store results of a test </td></tr>
<tr id="row_515_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1detail_1_1_test_suite_registrar.xhtml" target="_self">TestSuiteRegistrar</a></td><td class="desc">Helper class to statically begin and end a test suite </td></tr>
<tr id="row_516_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_thread_info.xhtml" target="_self">ThreadInfo</a></td><td class="desc">Information about executing thread and CPU </td></tr>
<tr id="row_517_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml" target="_self">Token</a></td><td class="desc"><a class="el" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml" title="Token.">Token</a> </td></tr>
<tr id="row_518_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml" target="_self">TokenStream</a></td><td class="desc">A stream of token </td></tr>
<tr id="row_519_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_transpose_interleave_common.xhtml" target="_self">TransposeInterleaveCommon&lt; IntBy, TIn, TOut &gt;</a></td><td class="desc"></td></tr>
<tr id="row_520_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_520_" class="arrow" onclick="toggleFolder('520_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>true_type</b></td><td class="desc"></td></tr>
<tr id="row_520_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1is__container_3_01std_1_1vector_3_01_v_00_01_a_01_4_01_4.xhtml" target="_self">is_container&lt; std::vector&lt; V, A &gt; &gt;</a></td><td class="desc"><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> is considered a container </td></tr>
<tr id="row_520_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1is__floating__point_3_01half_01_4.xhtml" target="_self">is_floating_point&lt; half &gt;</a></td><td class="desc"></td></tr>
<tr id="row_520_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1utils_1_1traits_1_1is__floating__point_3_01half_01_4.xhtml" target="_self">is_floating_point&lt; half &gt;</a></td><td class="desc"></td></tr>
<tr id="row_521_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1descriptors_1_1_unary_eltwise_layer_descriptor.xhtml" target="_self">UnaryEltwiseLayerDescriptor</a></td><td class="desc">Unary Elementwise layer descriptor </td></tr>
<tr id="row_522_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1uniform__real__distribution__16bit.xhtml" target="_self">uniform_real_distribution_16bit&lt; T &gt;</a></td><td class="desc">Specialized class to generate random non-zero FP16 values </td></tr>
<tr id="row_523_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_uniform_quantization_info.xhtml" target="_self">UniformQuantizationInfo</a></td><td class="desc">Quantization info when assuming per layer quantization </td></tr>
<tr id="row_524_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml" target="_self">UnitWorkloadStage</a></td><td class="desc">Describes when a unit workload is run </td></tr>
<tr id="row_525_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_525_" class="arrow" onclick="toggleFolder('525_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_validate_example.xhtml" target="_self">ValidateExample</a></td><td class="desc">Abstract <a class="el" href="classarm__compute_1_1utils_1_1_validate_example.xhtml" title="Abstract ValidateExample class.">ValidateExample</a> class </td></tr>
<tr id="row_525_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_graph_validate_example.xhtml" target="_self">GraphValidateExample&lt; LayerT, OptionsT, VerifyAccessorT &gt;</a></td><td class="desc"></td></tr>
<tr id="row_525_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_graph_validate_example.xhtml" target="_self">GraphValidateExample&lt; ConvolutionLayer, ConvolutionOptions, ConvolutionVerifyAccessor &gt;</a></td><td class="desc"></td></tr>
<tr id="row_525_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_graph_validate_example.xhtml" target="_self">GraphValidateExample&lt; DepthwiseConvolutionLayer, DepthConvolutionOptions, DepthConvolutionVerifyAccessor &gt;</a></td><td class="desc"></td></tr>
<tr id="row_525_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_graph_validate_example.xhtml" target="_self">GraphValidateExample&lt; FullyConnectedLayer, FullyConnectedOptions, FullyConnectedVerifyAccessor &gt;</a></td><td class="desc"></td></tr>
<tr id="row_526_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_valid_region.xhtml" target="_self">ValidRegion</a></td><td class="desc">Container for valid region of a window </td></tr>
<tr id="row_527_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml" target="_self">Measurement::Value</a></td><td class="desc"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml" title="Generic measurement that stores values as either double or long long int.">Measurement</a> value </td></tr>
<tr id="row_528_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_vector.xhtml" target="_self">Vector</a></td><td class="desc">Structure to hold <a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> information </td></tr>
<tr id="row_529_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml" target="_self">vector_128_tag</a></td><td class="desc">128-bit vector tag </td></tr>
<tr id="row_530_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml" target="_self">vector_64_tag</a></td><td class="desc">64-bit vector tag </td></tr>
<tr id="row_531_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1utils_1_1_verification_params.xhtml" target="_self">VerificationParams</a></td><td class="desc">Structure holding all the verification graph parameters </td></tr>
<tr id="row_532_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_weights_info.xhtml" target="_self">WeightsInfo</a></td><td class="desc">Convolution Layer Weights Information class </td></tr>
<tr id="row_533_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1graph_1_1_weights_manager_context.xhtml" target="_self">WeightsManagerContext</a></td><td class="desc">Contains structs required for weights management </td></tr>
<tr id="row_534_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_window.xhtml" target="_self">Window</a></td><td class="desc">Describe a multidimensional execution window </td></tr>
<tr id="row_535_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_window_iterator.xhtml" target="_self">WindowIterator&lt; L &gt;</a></td><td class="desc">Iterate over a portion of a <a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window.">Window</a> </td></tr>
<tr id="row_536_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_winograd_info.xhtml" target="_self">WinogradInfo</a></td><td class="desc">Winograd information </td></tr>
<tr id="row_537_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1pooling_1_1_working_space.xhtml" target="_self">WorkingSpace</a></td><td class="desc"></td></tr>
<tr id="row_538_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1_generic_input_array_element_1_1_workspace.xhtml" target="_self">GenericInputArrayElement&lt; T &gt;::Workspace</a></td><td class="desc"></td></tr>
<tr id="row_539_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml" target="_self">InputPatchElement&lt; T, IsGeneric, OutputStage &gt;::Workspace</a></td><td class="desc"></td></tr>
<tr id="row_540_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_input_array_element_1_1_workspace.xhtml" target="_self">InputArrayElement&lt; T &gt;::Workspace</a></td><td class="desc"></td></tr>
<tr id="row_541_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_workspace_data_element.xhtml" target="_self">WorkspaceDataElement&lt; TensorType &gt;</a></td><td class="desc"></td></tr>
<tr id="row_542_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_workspace_final_element.xhtml" target="_self">WorkspaceFinalElement&lt; TAccum, OutputStage, IsDot &gt;</a></td><td class="desc"></td></tr>
<tr id="row_543_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_workspace_final_element_3_01int32__t_01ccc8c041a687c4471c5aaa78ea74506.xhtml" target="_self">WorkspaceFinalElement&lt; int32_t, arm_gemm::Requantize32, false &gt;</a></td><td class="desc"></td></tr>
<tr id="row_544_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_544_" class="arrow" onclick="toggleFolder('544_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>NamedTuple</b></td><td class="desc"></td></tr>
<tr id="row_544_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml" target="_self">BenchmarkResult</a></td><td class="desc"></td></tr>
<tr id="row_544_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_param.xhtml" target="_self">GEMMParam</a></td><td class="desc"></td></tr>
<tr id="row_544_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_gemm_tuner_1_1_measurement.xhtml" target="_self">Measurement</a></td><td class="desc"></td></tr>
<tr id="row_544_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_gemm_tuner_1_1_native_g_e_m_m_config.xhtml" target="_self">NativeGEMMConfig</a></td><td class="desc"></td></tr>
<tr id="row_544_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_gemm_tuner_1_1_reshaped_g_e_m_m_config.xhtml" target="_self">ReshapedGEMMConfig</a></td><td class="desc"></td></tr>
<tr id="row_544_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_gemm_tuner_1_1_reshaped_only_r_h_s_g_e_m_m_config.xhtml" target="_self">ReshapedOnlyRHSGEMMConfig</a></td><td class="desc"></td></tr>
</table>
</div><!-- directory -->
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
