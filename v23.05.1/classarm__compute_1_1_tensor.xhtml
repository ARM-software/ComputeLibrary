<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Tensor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_tensor.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Tensor Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic implementation of the tensor interface.  
 <a href="classarm__compute_1_1_tensor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="runtime_2_tensor_8h_source.xhtml">Tensor.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for Tensor:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_tensor__coll__graph.svg" width="264" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1552d1c972f6aeb97c3506ac132b7cf6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_tensor.xhtml#a1552d1c972f6aeb97c3506ac132b7cf6">Tensor</a> (<a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:a1552d1c972f6aeb97c3506ac132b7cf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_tensor.xhtml#a1552d1c972f6aeb97c3506ac132b7cf6">More...</a><br /></td></tr>
<tr class="separator:a1552d1c972f6aeb97c3506ac132b7cf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae55ef806b29ad70cd952e2c1508715ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_tensor.xhtml#ae55ef806b29ad70cd952e2c1508715ae">~Tensor</a> ()=default</td></tr>
<tr class="memdesc:ae55ef806b29ad70cd952e2c1508715ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor: free the tensor's memory.  <a href="classarm__compute_1_1_tensor.xhtml#ae55ef806b29ad70cd952e2c1508715ae">More...</a><br /></td></tr>
<tr class="separator:ae55ef806b29ad70cd952e2c1508715ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05a9201bf0316d34ffc32a013ecc2e91"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_tensor.xhtml#a05a9201bf0316d34ffc32a013ecc2e91">Tensor</a> (<a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a05a9201bf0316d34ffc32a013ecc2e91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1_tensor.xhtml#a05a9201bf0316d34ffc32a013ecc2e91">More...</a><br /></td></tr>
<tr class="separator:a05a9201bf0316d34ffc32a013ecc2e91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a008f5e2a1c019e9b401753210a99ddfe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_tensor.xhtml#a008f5e2a1c019e9b401753210a99ddfe">operator=</a> (<a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a008f5e2a1c019e9b401753210a99ddfe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_tensor.xhtml#a008f5e2a1c019e9b401753210a99ddfe">More...</a><br /></td></tr>
<tr class="separator:a008f5e2a1c019e9b401753210a99ddfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbd0cf83a8e1b335a9bf405a8e5019fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_tensor_allocator.xhtml">TensorAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a> ()</td></tr>
<tr class="memdesc:adbd0cf83a8e1b335a9bf405a8e5019fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a pointer to the tensor's allocator.  <a href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">More...</a><br /></td></tr>
<tr class="separator:adbd0cf83a8e1b335a9bf405a8e5019fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47d74e4e51f9b1a636c4831bd747a97c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a> () const override</td></tr>
<tr class="memdesc:a47d74e4e51f9b1a636c4831bd747a97c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's metadata.  <a href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">More...</a><br /></td></tr>
<tr class="separator:a47d74e4e51f9b1a636c4831bd747a97c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8535070d127b492c6f2aeaf1ac2aae5b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_tensor.xhtml#a8535070d127b492c6f2aeaf1ac2aae5b">info</a> () override</td></tr>
<tr class="memdesc:a8535070d127b492c6f2aeaf1ac2aae5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's metadata.  <a href="classarm__compute_1_1_tensor.xhtml#a8535070d127b492c6f2aeaf1ac2aae5b">More...</a><br /></td></tr>
<tr class="separator:a8535070d127b492c6f2aeaf1ac2aae5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24954cca5108a24706441fd99a7fb04c"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a> () const override</td></tr>
<tr class="memdesc:a24954cca5108a24706441fd99a7fb04c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return a pointer to CPU memory.  <a href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">More...</a><br /></td></tr>
<tr class="separator:a24954cca5108a24706441fd99a7fb04c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad702fefc10e889efafeab8a514aee30b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_tensor.xhtml#ad702fefc10e889efafeab8a514aee30b">associate_memory_group</a> (<a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *memory_group) override</td></tr>
<tr class="memdesc:ad702fefc10e889efafeab8a514aee30b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Associates a memory managable object with the memory group that manages it.  <a href="classarm__compute_1_1_tensor.xhtml#ad702fefc10e889efafeab8a514aee30b">More...</a><br /></td></tr>
<tr class="separator:ad702fefc10e889efafeab8a514aee30b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_tensor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_tensor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a></td></tr>
<tr class="memitem:a4aa2df36743089ac6814d83e7d4b7ffc inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a4aa2df36743089ac6814d83e7d4b7ffc">~ITensor</a> ()=default</td></tr>
<tr class="memdesc:a4aa2df36743089ac6814d83e7d4b7ffc inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_tensor.xhtml#a4aa2df36743089ac6814d83e7d4b7ffc">More...</a><br /></td></tr>
<tr class="separator:a4aa2df36743089ac6814d83e7d4b7ffc inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbd73147d41e8a640bc299d12613c31e inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a> (const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;id) const</td></tr>
<tr class="memdesc:adbd73147d41e8a640bc299d12613c31e inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a pointer to the element at the passed coordinates.  <a href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">More...</a><br /></td></tr>
<tr class="separator:adbd73147d41e8a640bc299d12613c31e inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a774ad8d5f4837f3d7de1876d367c5b inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a4a774ad8d5f4837f3d7de1876d367c5b">copy_from</a> (const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> &amp;src)</td></tr>
<tr class="memdesc:a4a774ad8d5f4837f3d7de1876d367c5b inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy the content of another tensor.  <a href="classarm__compute_1_1_i_tensor.xhtml#a4a774ad8d5f4837f3d7de1876d367c5b">More...</a><br /></td></tr>
<tr class="separator:a4a774ad8d5f4837f3d7de1876d367c5b inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade74189c92e70baa2848986c10dbe7ef inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ade74189c92e70baa2848986c10dbe7ef">print</a> (std::ostream &amp;s, <a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a> io_fmt=<a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a>()) const</td></tr>
<tr class="memdesc:ade74189c92e70baa2848986c10dbe7ef inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print a tensor to a given stream using user defined formatting information.  <a href="classarm__compute_1_1_i_tensor.xhtml#ade74189c92e70baa2848986c10dbe7ef">More...</a><br /></td></tr>
<tr class="separator:ade74189c92e70baa2848986c10dbe7ef inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a209ea2ddfdfa80703799c92da8beb643 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">is_used</a> () const</td></tr>
<tr class="memdesc:a209ea2ddfdfa80703799c92da8beb643 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flags if the tensor is used or not.  <a href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">More...</a><br /></td></tr>
<tr class="separator:a209ea2ddfdfa80703799c92da8beb643 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bc00234de9adf8c99a21eb1d7d494c2 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a> () const</td></tr>
<tr class="memdesc:a9bc00234de9adf8c99a21eb1d7d494c2 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks a tensor as unused.  <a href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">More...</a><br /></td></tr>
<tr class="separator:a9bc00234de9adf8c99a21eb1d7d494c2 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bac1e8a45b7823cbd4f74fe44f8c602 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0bac1e8a45b7823cbd4f74fe44f8c602">mark_as_used</a> () const</td></tr>
<tr class="memdesc:a0bac1e8a45b7823cbd4f74fe44f8c602 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks a tensor as used.  <a href="classarm__compute_1_1_i_tensor.xhtml#a0bac1e8a45b7823cbd4f74fe44f8c602">More...</a><br /></td></tr>
<tr class="separator:a0bac1e8a45b7823cbd4f74fe44f8c602 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_memory_manageable"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_memory_manageable')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_memory_manageable.xhtml">IMemoryManageable</a></td></tr>
<tr class="memitem:added32d63012f1fe88309043bdf65059 inherit pub_methods_classarm__compute_1_1_i_memory_manageable"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_manageable.xhtml#added32d63012f1fe88309043bdf65059">~IMemoryManageable</a> ()=default</td></tr>
<tr class="memdesc:added32d63012f1fe88309043bdf65059 inherit pub_methods_classarm__compute_1_1_i_memory_manageable"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_memory_manageable.xhtml#added32d63012f1fe88309043bdf65059">More...</a><br /></td></tr>
<tr class="separator:added32d63012f1fe88309043bdf65059 inherit pub_methods_classarm__compute_1_1_i_memory_manageable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic implementation of the tensor interface. </p>

<p class="definition">Definition at line <a class="el" href="runtime_2_tensor_8h_source.xhtml#l00037">37</a> of file <a class="el" href="runtime_2_tensor_8h_source.xhtml">Tensor.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1552d1c972f6aeb97c3506ac132b7cf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1552d1c972f6aeb97c3506ac132b7cf6">&#9670;&nbsp;</a></span>Tensor() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *&#160;</td>
          <td class="paramname"><em>ctx</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>(Optional) Pointer to the runtime context. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    : _allocator(<span class="keyword">this</span>)</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae55ef806b29ad70cd952e2c1508715ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae55ef806b29ad70cd952e2c1508715ae">&#9670;&nbsp;</a></span>~Tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor: free the tensor's memory. </p>

</div>
</div>
<a id="a05a9201bf0316d34ffc32a013ecc2e91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05a9201bf0316d34ffc32a013ecc2e91">&#9670;&nbsp;</a></span>Tensor() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="adbd0cf83a8e1b335a9bf405a8e5019fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbd0cf83a8e1b335a9bf405a8e5019fa">&#9670;&nbsp;</a></span>allocator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_tensor_allocator.xhtml">TensorAllocator</a> * allocator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return a pointer to the tensor's allocator. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the tensor's allocator </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> &amp;_allocator;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_tensor_handle_8cpp_source.xhtml#l00041">NETensorHandle::allocate()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00135">CPPBoxWithNonMaximaSuppressionLimit::configure()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00218">CPPDetectionPostProcessLayer::configure()</a>, <a class="el" href="_n_e_f_f_t2_d_8cpp_source.xhtml#l00040">NEFFT2D::configure()</a>, <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00072">NERNNLayer::configure()</a>, <a class="el" href="_cpu_direct_conv2d_8cpp_source.xhtml#l00044">CpuDirectConv2d::configure()</a>, <a class="el" href="_n_e_l2_normalize_layer_8cpp_source.xhtml#l00045">NEL2NormalizeLayer::configure()</a>, <a class="el" href="_n_e_f_f_t1_d_8cpp_source.xhtml#l00044">NEFFT1D::configure()</a>, <a class="el" href="_cpu_direct_conv3d_8cpp_source.xhtml#l00043">CpuDirectConv3d::configure()</a>, <a class="el" href="_n_e_reduction_operation_8cpp_source.xhtml#l00105">NEReductionOperation::configure()</a>, <a class="el" href="_n_e_instance_normalization_layer_8cpp_source.xhtml#l00041">NEInstanceNormalizationLayer::configure()</a>, <a class="el" href="_n_e_detection_post_process_layer_8cpp_source.xhtml#l00042">NEDetectionPostProcessLayer::configure()</a>, <a class="el" href="_n_e_normalization_layer_8cpp_source.xhtml#l00044">NENormalizationLayer::configure()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00105">NEFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_generate_proposals_layer_8cpp_source.xhtml#l00071">NEGenerateProposalsLayer::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00060">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00057">NELSTMLayer::configure()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00170">NEDeconvolutionLayer::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_cpu_aux_tensor_handler_8h_source.xhtml#l00042">CpuAuxTensorHandler::CpuAuxTensorHandler()</a>, <a class="el" href="_n_e_tensor_handle_8cpp_source.xhtml#l00046">NETensorHandle::free()</a>, <a class="el" href="neon__gemm__qasymm8_8cpp_source.xhtml#l00095">main()</a>, <a class="el" href="_n_e_tensor_handle_8cpp_source.xhtml#l00035">NETensorHandle::NETensorHandle()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00185">NumPyAccessor::NumPyAccessor()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00350">NEFFTConvolutionLayer::prepare()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00256">NEDeconvolutionLayer::prepare()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00509">NELSTMLayerQuantized::prepare()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l01210">NEQLSTMLayer::prepare()</a>, <a class="el" href="_n_e_fully_connected_layer_8h_source.xhtml#l00051">NEFullyConnectedLayerReshapeWeightsManaged::release()</a>, <a class="el" href="_n_e_tensor_handle_8cpp_source.xhtml#l00068">NETensorHandle::release_if_unused()</a>, <a class="el" href="_n_e_fully_connected_layer_8h_source.xhtml#l00044">NEFullyConnectedLayerReshapeWeightsManaged::run()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00309">NEFFTConvolutionLayer::run()</a>, <a class="el" href="_cpu_gemm_conv2d_8cpp_source.xhtml#l00564">CpuGemmConv2d::run()</a>, and <a class="el" href="tests_2validation_2_n_e_o_n_2_u_n_i_t_2_tensor_allocator_8cpp_source.xhtml#l00052">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="ad702fefc10e889efafeab8a514aee30b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad702fefc10e889efafeab8a514aee30b">&#9670;&nbsp;</a></span>associate_memory_group()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void associate_memory_group </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *&#160;</td>
          <td class="paramname"><em>memory_group</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Associates a memory managable object with the memory group that manages it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">memory_group</td><td><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> group that manages the object. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_memory_manageable.xhtml#ace3160d9bb6fdcf5e9973baaaa1fef08">IMemoryManageable</a>.</p>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    _allocator.<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a34177e00ce3d627e8a6a9ca215aaddfb">set_associated_memory_group</a>(memory_group);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00165">TensorAllocator::set_associated_memory_group()</a>.</p>

</div>
</div>
<a id="a24954cca5108a24706441fd99a7fb04c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24954cca5108a24706441fd99a7fb04c">&#9670;&nbsp;</a></span>buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t * buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return a pointer to CPU memory. </p>
<dl class="section return"><dt>Returns</dt><dd>A CPU pointer to the beginning of the image's allocation. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">ITensor</a>.</p>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> _allocator.<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a344325f71f51323330de47f307ebecfd">data</a>();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00127">TensorAllocator::data()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_direct_conv2d_8cpp_source.xhtml#l00044">CpuDirectConv2d::configure()</a>, <a class="el" href="_cpu_direct_conv3d_8cpp_source.xhtml#l00043">CpuDirectConv3d::configure()</a>, <a class="el" href="_n_e_f_f_t1_d_8cpp_source.xhtml#l00044">NEFFT1D::configure()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00105">NEFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00170">NEDeconvolutionLayer::configure()</a>, <a class="el" href="neon__gemm__qasymm8_8cpp_source.xhtml#l00095">main()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l01210">NEQLSTMLayer::prepare()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00288">CPPDetectionPostProcessLayer::run()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00309">NEFFTConvolutionLayer::run()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00605">NELSTMLayer::run()</a>, and <a class="el" href="tests_2validation_2_n_e_o_n_2_u_n_i_t_2_tensor_allocator_8cpp_source.xhtml#l00052">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a47d74e4e51f9b1a636c4831bd747a97c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47d74e4e51f9b1a636c4831bd747a97c">&#9670;&nbsp;</a></span>info() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the tensor's metadata. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the tensor's metadata. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor</a>.</p>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">return</span> &amp;_allocator.<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af286b91f2f7596fb01ab790a1468a81a">info</a>();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_tensor_allocator_8cpp_source.xhtml#l00046">ITensorAllocator::info()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00211">NumPyAccessor::access_tensor()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00218">CPPDetectionPostProcessLayer::configure()</a>, <a class="el" href="_n_e_instance_normalization_layer_8cpp_source.xhtml#l00041">NEInstanceNormalizationLayer::configure()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00105">NEFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_generate_proposals_layer_8cpp_source.xhtml#l00071">NEGenerateProposalsLayer::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00060">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00057">NELSTMLayer::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_n_e_o_n_2_g_e_m_m_lowp_8cpp_source.xhtml#l00056">arm_compute::test::validation::DATA_TEST_CASE()</a>, <a class="el" href="neon__gemm__qasymm8_8cpp_source.xhtml#l00095">main()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l01210">NEQLSTMLayer::prepare()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00605">NELSTMLayer::run()</a>, and <a class="el" href="tests_2validation_2_n_e_o_n_2_u_n_i_t_2_tensor_allocator_8cpp_source.xhtml#l00052">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a8535070d127b492c6f2aeaf1ac2aae5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8535070d127b492c6f2aeaf1ac2aae5b">&#9670;&nbsp;</a></span>info() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the tensor's metadata. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the tensor's metadata. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a7e6b5e55a2914b1fb1966310e7733ac4">ITensor</a>.</p>

</div>
</div>
<a id="a008f5e2a1c019e9b401753210a99ddfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a008f5e2a1c019e9b401753210a99ddfe">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/<a class="el" href="runtime_2_tensor_8h_source.xhtml">Tensor.h</a></li>
<li>src/runtime/<a class="el" href="src_2runtime_2_tensor_8cpp_source.xhtml">Tensor.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_allocator_xhtml_af286b91f2f7596fb01ab790a1468a81a"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af286b91f2f7596fb01ab790a1468a81a">arm_compute::ITensorAllocator::info</a></div><div class="ttdeci">TensorInfo &amp; info()</div><div class="ttdoc">Return a reference to the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00046">ITensorAllocator.cpp:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_allocator_xhtml_a344325f71f51323330de47f307ebecfd"><div class="ttname"><a href="classarm__compute_1_1_tensor_allocator.xhtml#a344325f71f51323330de47f307ebecfd">arm_compute::TensorAllocator::data</a></div><div class="ttdeci">uint8_t * data() const</div><div class="ttdoc">Returns the pointer to the allocated data.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00127">TensorAllocator.cpp:127</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_allocator_xhtml_a34177e00ce3d627e8a6a9ca215aaddfb"><div class="ttname"><a href="classarm__compute_1_1_tensor_allocator.xhtml#a34177e00ce3d627e8a6a9ca215aaddfb">arm_compute::TensorAllocator::set_associated_memory_group</a></div><div class="ttdeci">void set_associated_memory_group(IMemoryGroup *associated_memory_group)</div><div class="ttdoc">Associates the tensor with a memory group.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00165">TensorAllocator.cpp:165</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:27 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
