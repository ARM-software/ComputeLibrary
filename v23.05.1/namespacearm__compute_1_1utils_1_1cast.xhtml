<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute::utils::cast Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespacearm__compute_1_1utils_1_1cast.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">arm_compute::utils::cast Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9eeb4390c7aab75d31ccc9ddc8d93975"><td class="memTemplParams" colspan="2">template&lt;typename Target , typename Source &gt; </td></tr>
<tr class="memitem:a9eeb4390c7aab75d31ccc9ddc8d93975"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a9eeb4390c7aab75d31ccc9ddc8d93975">polymorphic_cast</a> (Source *v)</td></tr>
<tr class="memdesc:a9eeb4390c7aab75d31ccc9ddc8d93975"><td class="mdescLeft">&#160;</td><td class="mdescRight">Polymorphic cast between two types.  <a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a9eeb4390c7aab75d31ccc9ddc8d93975">More...</a><br /></td></tr>
<tr class="separator:a9eeb4390c7aab75d31ccc9ddc8d93975"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5484e8b514faf2ab4235b2aa86375c0a"><td class="memTemplParams" colspan="2">template&lt;typename Target , typename Source &gt; </td></tr>
<tr class="memitem:a5484e8b514faf2ab4235b2aa86375c0a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a5484e8b514faf2ab4235b2aa86375c0a">polymorphic_downcast</a> (Source *v)</td></tr>
<tr class="memdesc:a5484e8b514faf2ab4235b2aa86375c0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Polymorphic down cast between two types.  <a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a5484e8b514faf2ab4235b2aa86375c0a">More...</a><br /></td></tr>
<tr class="separator:a5484e8b514faf2ab4235b2aa86375c0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5af5aa68b17a0ced5b456daf04912874"><td class="memTemplParams" colspan="2">template&lt;typename Target , typename Source , typename Deleter &gt; </td></tr>
<tr class="memitem:a5af5aa68b17a0ced5b456daf04912874"><td class="memTemplItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>, Deleter &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a5af5aa68b17a0ced5b456daf04912874">polymorphic_cast_unique_ptr</a> (std::unique_ptr&lt; Source, Deleter &gt; &amp;&amp;v)</td></tr>
<tr class="memdesc:a5af5aa68b17a0ced5b456daf04912874"><td class="mdescLeft">&#160;</td><td class="mdescRight">Polymorphic cast between two unique pointer types.  <a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a5af5aa68b17a0ced5b456daf04912874">More...</a><br /></td></tr>
<tr class="separator:a5af5aa68b17a0ced5b456daf04912874"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd83d8e5cd9cae9f9ce5e57dbaecb38e"><td class="memTemplParams" colspan="2">template&lt;typename Target , typename Source , typename Deleter &gt; </td></tr>
<tr class="memitem:acd83d8e5cd9cae9f9ce5e57dbaecb38e"><td class="memTemplItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>, Deleter &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#acd83d8e5cd9cae9f9ce5e57dbaecb38e">polymorphic_downcast_unique_ptr</a> (std::unique_ptr&lt; Source, Deleter &gt; &amp;&amp;v)</td></tr>
<tr class="memdesc:acd83d8e5cd9cae9f9ce5e57dbaecb38e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Polymorphic down cast between two unique pointer types.  <a href="namespacearm__compute_1_1utils_1_1cast.xhtml#acd83d8e5cd9cae9f9ce5e57dbaecb38e">More...</a><br /></td></tr>
<tr class="separator:acd83d8e5cd9cae9f9ce5e57dbaecb38e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff2fdac1ef048c4a668437d172fa6b1a"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U , typename std::enable_if&lt; std::is_same&lt; T, U &gt;::value, int &gt;::type  = 0&gt; </td></tr>
<tr class="memitem:aff2fdac1ef048c4a668437d172fa6b1a"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#aff2fdac1ef048c4a668437d172fa6b1a">saturate_cast</a> (<a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a> v)</td></tr>
<tr class="separator:aff2fdac1ef048c4a668437d172fa6b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a81cf6107131a3583e2b0b762cb9c2862"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a></td></tr>
<tr class="separator:a81cf6107131a3583e2b0b762cb9c2862"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a9eeb4390c7aab75d31ccc9ddc8d93975"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9eeb4390c7aab75d31ccc9ddc8d93975">&#9670;&nbsp;</a></span>polymorphic_cast()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> arm_compute::utils::cast::polymorphic_cast </td>
          <td>(</td>
          <td class="paramtype">Source *&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Polymorphic cast between two types. </p>
<dl class="section warning"><dt>Warning</dt><dd>Will throw an exception if cast cannot take place</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Target</td><td>Target to cast type </td></tr>
    <tr><td class="paramname">Source</td><td>Source from cast type</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Value to cast</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The casted value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cast_8h_source.xhtml#l00047">47</a> of file <a class="el" href="_cast_8h_source.xhtml">Cast.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span>(<span class="keyword">dynamic_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a><span class="keyword">&gt;</span>(v) == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="_error_8h.xhtml#ad5518fdae84a33ce6fbed540c6e89479">ARM_COMPUTE_THROW</a>(std::bad_cast());</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a><span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00480">ARM_COMPUTE_THROW</a>.</p>

</div>
</div>
<a id="a5af5aa68b17a0ced5b456daf04912874"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5af5aa68b17a0ced5b456daf04912874">&#9670;&nbsp;</a></span>polymorphic_cast_unique_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>, Deleter&gt; arm_compute::utils::cast::polymorphic_cast_unique_ptr </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; Source, Deleter &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Polymorphic cast between two unique pointer types. </p>
<dl class="section warning"><dt>Warning</dt><dd>Will throw an exception if cast cannot take place</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Target</td><td>Target to cast type </td></tr>
    <tr><td class="paramname">Source</td><td>Source from cast type </td></tr>
    <tr><td class="paramname">Deleter</td><td>Deleter function type</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Value to cast</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The casted value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cast_8h_source.xhtml#l00087">87</a> of file <a class="el" href="_cast_8h_source.xhtml">Cast.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">if</span>(<span class="keyword">dynamic_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> *<span class="keyword">&gt;</span>(v.get()) == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="_error_8h.xhtml#ad5518fdae84a33ce6fbed540c6e89479">ARM_COMPUTE_THROW</a>(std::bad_cast());</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">auto</span> r = <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> *<span class="keyword">&gt;</span>(v.release());</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> std::unique_ptr&lt;Target, Deleter&gt;(r, std::move(v.get_deleter()));</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00480">ARM_COMPUTE_THROW</a>.</p>

</div>
</div>
<a id="a5484e8b514faf2ab4235b2aa86375c0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5484e8b514faf2ab4235b2aa86375c0a">&#9670;&nbsp;</a></span>polymorphic_downcast()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> arm_compute::utils::cast::polymorphic_downcast </td>
          <td>(</td>
          <td class="paramtype">Source *&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Polymorphic down cast between two types. </p>
<dl class="section warning"><dt>Warning</dt><dd>Will assert if cannot take place</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Target</td><td>Target to cast type </td></tr>
    <tr><td class="paramname">Source</td><td>Source from cast type</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Value to cast</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The casted value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cast_8h_source.xhtml#l00068">68</a> of file <a class="el" href="_cast_8h_source.xhtml">Cast.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">dynamic_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a><span class="keyword">&gt;</span>(v) != <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a><span class="keyword">&gt;</span>(v));</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a><span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<a id="acd83d8e5cd9cae9f9ce5e57dbaecb38e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd83d8e5cd9cae9f9ce5e57dbaecb38e">&#9670;&nbsp;</a></span>polymorphic_downcast_unique_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>, Deleter&gt; arm_compute::utils::cast::polymorphic_downcast_unique_ptr </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; Source, Deleter &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Polymorphic down cast between two unique pointer types. </p>
<dl class="section warning"><dt>Warning</dt><dd>Will assert if cannot take place</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Target</td><td>Target to cast type </td></tr>
    <tr><td class="paramname">Source</td><td>Source from cast type </td></tr>
    <tr><td class="paramname">Deleter</td><td>Deleter function type</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Value to cast</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The casted value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cast_8h_source.xhtml#l00110">110</a> of file <a class="el" href="_cast_8h_source.xhtml">Cast.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">dynamic_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> *<span class="keyword">&gt;</span>(v.get()) != <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> *<span class="keyword">&gt;</span>(v.get()));</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">auto</span> r = <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> *<span class="keyword">&gt;</span>(v.release());</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> std::unique_ptr&lt;Target, Deleter&gt;(r, std::move(v.get_deleter()));</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<a id="aff2fdac1ef048c4a668437d172fa6b1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff2fdac1ef048c4a668437d172fa6b1a">&#9670;&nbsp;</a></span>saturate_cast()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T saturate_cast </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saturate_cast_8h_source.xhtml#l00043">43</a> of file <a class="el" href="_saturate_cast_8h_source.xhtml">SaturateCast.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> v;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a81cf6107131a3583e2b0b762cb9c2862"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81cf6107131a3583e2b0b762cb9c2862">&#9670;&nbsp;</a></span>U</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">U</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saturate_cast_8h_source.xhtml#l00064">64</a> of file <a class="el" href="_saturate_cast_8h_source.xhtml">SaturateCast.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_kernel_component_group_8cpp_source.xhtml#l00038">GpuKernelComponentGroup::add_component()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00329">arm_compute::test::validation::add_padding_x()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00353">arm_compute::test::validation::add_padding_y()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00671">arm_compute::adjust_odd_shape()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00218">CLComparisonKernel::border_size()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00211">TensorShape::broadcast_shape()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00698">arm_compute::calculate_subsampled_shape()</a>, <a class="el" href="_color_convert_helper_8h_source.xhtml#l00508">arm_compute::test::colorconvert_helper::detail::colorconvert_rgb_to_iyuv()</a>, <a class="el" href="_color_convert_helper_8h_source.xhtml#l00420">arm_compute::test::colorconvert_helper::detail::colorconvert_rgb_to_nv12()</a>, <a class="el" href="_color_convert_helper_8h_source.xhtml#l00596">arm_compute::test::colorconvert_helper::detail::colorconvert_rgb_to_yuv4()</a>, <a class="el" href="_c_l_2_convolution3_d_8cpp_source.xhtml#l00204">arm_compute::test::validation::combine()</a>, <a class="el" href="_concatenate_layer_8cpp_source.xhtml#l00116">arm_compute::test::validation::reference::concatenate_layer()</a>, <a class="el" href="_cl_transposed_convolution_kernel_8cpp_source.xhtml#l00097">ClTransposedConvolutionKernel::configure()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00393">CPPDetectionOutputLayer::configure()</a>, <a class="el" href="_cl_indirect_conv2d_kernel_8cpp_source.xhtml#l00117">ClIndirectConv2dKernel::configure()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00218">CPPDetectionPostProcessLayer::configure()</a>, <a class="el" href="_cl_direct_conv2d_kernel_8cpp_source.xhtml#l00152">ClDirectConv2dKernel::configure()</a>, <a class="el" href="_c_l_pad_layer_kernel_8cpp_source.xhtml#l00078">CLPadLayerKernel::configure()</a>, <a class="el" href="_fused_convolution_batch_normalization_function_8h_source.xhtml#l00072">FusedConvolutionBatchNormalizationFunction&lt; TargetInfo, FusedLayerTypes &gt;::configure()</a>, <a class="el" href="_cl_direct_conv3d_kernel_8cpp_source.xhtml#l00092">ClDirectConv3dKernel::configure()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00162">CpuWinogradConv2d::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00080">CLArgMinMaxLayerKernel::configure()</a>, <a class="el" href="_n_e_instance_normalization_layer_8cpp_source.xhtml#l00041">NEInstanceNormalizationLayer::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00072">CLDepthwiseConvolutionLayer::configure()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00105">NEFFTConvolutionLayer::configure()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00113">CLFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00170">NEDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00224">CLGEMMDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00121">CLDirectDeconvolutionLayer::configure()</a>, <a class="el" href="_cl_gemm_helpers_8cpp_source.xhtml#l00042">arm_compute::opencl::kernels::gemm::configure_lhs_rhs_info()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00396">arm_compute::test::validation::reference::conv2d_dft()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00464">arm_compute::graph::backends::detail::create_convolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00555">arm_compute::graph::backends::detail::create_fused_convolution_with_post_op()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00415">arm_compute::create_lws_hint_parallel_implementations()</a>, <a class="el" href="tests_2validation_2_u_n_i_t_2_tensor_info_8cpp_source.xhtml#l00044">arm_compute::test::validation::DATA_TEST_CASE()</a>, <a class="el" href="tests_2validation_2_u_n_i_t_2_utils_8cpp_source.xhtml#l00054">DATA_TEST_CASE()</a>, <a class="el" href="reference_2_deconvolution_layer_8cpp_source.xhtml#l00037">arm_compute::test::validation::reference::deconvolution_layer()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00370">arm_compute::test::validation::reference::dft_2d()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00364">arm_compute::error_on_mismatching_shapes()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00365">NPYLoader::fill_tensor()</a>, <a class="el" href="_assets_library_8h_source.xhtml#l00587">AssetsLibrary::fill_with_generator()</a>, <a class="el" href="_cl_mat_mul_native_helpers_8cpp_source.xhtml#l00070">arm_compute::cl_matmul::find_info()</a>, <a class="el" href="_cl_gemm_helpers_8cpp_source.xhtml#l00144">arm_compute::opencl::kernels::gemm::find_lhs_rhs_info()</a>, <a class="el" href="_c_l_2_col2_im_8cpp_source.xhtml#l00101">arm_compute::test::validation::FIXTURE_DATA_TEST_CASE()</a>, <a class="el" href="_c_l_2_depthwise_convolution_layer_native_8cpp_source.xhtml#l00380">arm_compute::test::validation::FIXTURE_DATA_TEST_CASE_NEW()</a>, <a class="el" href="_cpu_conv2d_8cpp_source.xhtml#l00123">CpuConv2d::get_convolution_method()</a>, <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00179">ClConv2d::get_convolution_method()</a>, <a class="el" href="_softmax_helpers_8cpp_source.xhtml#l00030">arm_compute::softmax_helpers::get_permutation_vector_from_softmax_axis()</a>, <a class="el" href="_cl_template_cast_8cpp_source.xhtml#l00203">ClTemplateCast::get_window()</a>, <a class="el" href="_cl_template_logits1_d_norm_8cpp_source.xhtml#l00173">ClTemplateLogits1DNorm::get_window()</a>, <a class="el" href="_cl_template_logits1_d_max_shift_exp_sum_8cpp_source.xhtml#l00268">ClTemplateLogits1DMaxShiftExpSum::get_window()</a>, <a class="el" href="_cl_template_reshape_8cpp_source.xhtml#l00156">ClTemplateReshape::get_window()</a>, <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00367">ClTemplateDepthwiseConv2d::get_window()</a>, <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00383">ClTemplateDirectConv2d::get_window()</a>, <a class="el" href="_cl_template_resize_8cpp_source.xhtml#l00263">ClTemplateResize::get_window()</a>, <a class="el" href="_cl_template_activation_8cpp_source.xhtml#l00177">ClTemplateActivation::get_window()</a>, <a class="el" href="_cl_template_pool2d_8cpp_source.xhtml#l00458">ClTemplatePool2d::get_window()</a>, <a class="el" href="_validation_8h_source.xhtml#l00308">compare&lt; AbsoluteTolerance&lt; U &gt; &gt;::operator bool()</a>, <a class="el" href="_validation_8h_source.xhtml#l00334">compare&lt; RelativeTolerance&lt; U &gt; &gt;::operator bool()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l00104">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_graph_utils_8h_source.xhtml#l00665">arm_compute::graph_utils::permute_shape()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01395">Pooling3dLayerInfo::Pooling3dLayerInfo()</a>, <a class="el" href="reference_2_pooling_layer_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::pooling_layer_internal()</a>, <a class="el" href="cpu_2kernels_2pool2d_2neon_2fp32_8cpp_source.xhtml#l00145">arm_compute::cpu::poolingMxN_fp32_neon_nhwc_kernel_indices()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00342">arm_compute::test::validation::reference::rdft_2d()</a>, <a class="el" href="_padding_calculator_8h_source.xhtml#l00146">PaddingCalculator::required_padding()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00354">arm_compute::test::validation::reference::ridft_2d()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00138">NEBatchToSpaceLayerKernel::run()</a>, <a class="el" href="validation_2reference_2_scale_8cpp_source.xhtml#l00040">arm_compute::test::validation::reference::scale_core()</a>, <a class="el" href="tests_2validation_2_u_n_i_t_2_sub_tensor_info_8cpp_source.xhtml#l00049">arm_compute::test::validation::TEST_CASE()</a>, <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00071">GpuOperatorGroup::try_add_operator()</a>, <a class="el" href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00156">CpuGemmDirectConv2d::validate()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00161">CLDepthwiseConvolutionLayer::validate()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00085">NEDeconvolutionLayer::validate()</a>, <a class="el" href="_validation_8h_source.xhtml#l00380">arm_compute::test::validation::validate()</a>, and <a class="el" href="_validation_8h_source.xhtml#l00460">arm_compute::test::validation::validate_wrap()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespaceacl_xhtml_a31488d29805a596498c0234ae392d35d"><div class="ttname"><a href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">acl::Target</a></div><div class="ttdeci">Target</div><div class="ttdoc">&lt; Target enum</div><div class="ttdef"><b>Definition:</b> <a href="_acl_8hpp_source.xhtml#l00293">Acl.hpp:293</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_ad5518fdae84a33ce6fbed540c6e89479"><div class="ttname"><a href="_error_8h.xhtml#ad5518fdae84a33ce6fbed540c6e89479">ARM_COMPUTE_THROW</a></div><div class="ttdeci">#define ARM_COMPUTE_THROW(ex)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00480">Error.h:480</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1utils.xhtml">utils</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml">cast</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:34 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
