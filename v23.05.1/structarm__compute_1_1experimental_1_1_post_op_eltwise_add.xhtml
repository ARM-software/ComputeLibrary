<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: PostOpEltwiseAdd&lt; TensorRelatedT &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">PostOpEltwiseAdd&lt; TensorRelatedT &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for PostOpEltwiseAdd&lt; TensorRelatedT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="structarm__compute_1_1experimental_1_1_post_op_eltwise_add__coll__graph.svg" width="214" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a455f540a8abc180eb65b071505feadcf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a455f540a8abc180eb65b071505feadcf">PostOpEltwiseAdd</a> (TensorRelatedT addend, int <a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#aecd69d50bbe66a2b4e8d08a0963fc2d4">prev_dst_pos</a>, <a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> policy)</td></tr>
<tr class="separator:a455f540a8abc180eb65b071505feadcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03eb9394b296e5ccda111a1e9b930104"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a03eb9394b296e5ccda111a1e9b930104">~PostOpEltwiseAdd</a> () override=default</td></tr>
<tr class="separator:a03eb9394b296e5ccda111a1e9b930104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b80c7d22cd9dbdbfc5d01801edea9cd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a0b80c7d22cd9dbdbfc5d01801edea9cd">PostOpEltwiseAdd</a> (const <a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a> &amp;)=default</td></tr>
<tr class="separator:a0b80c7d22cd9dbdbfc5d01801edea9cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dbcbdc1bfd93fb2c25a1a3bb83dca92"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a6dbcbdc1bfd93fb2c25a1a3bb83dca92">operator=</a> (const <a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a> &amp;)=default</td></tr>
<tr class="separator:a6dbcbdc1bfd93fb2c25a1a3bb83dca92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd593235e70c76e476fc92a28d3ad96a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#acd593235e70c76e476fc92a28d3ad96a">PostOpEltwiseAdd</a> (<a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a> &amp;&amp;)=default</td></tr>
<tr class="separator:acd593235e70c76e476fc92a28d3ad96a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1c5962a7ad4d3883287e4af5c07d750"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#ac1c5962a7ad4d3883287e4af5c07d750">operator=</a> (<a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a> &amp;&amp;)=default</td></tr>
<tr class="separator:ac1c5962a7ad4d3883287e4af5c07d750"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecd69d50bbe66a2b4e8d08a0963fc2d4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#aecd69d50bbe66a2b4e8d08a0963fc2d4">prev_dst_pos</a> () const override</td></tr>
<tr class="memdesc:aecd69d50bbe66a2b4e8d08a0963fc2d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">The position of previous op's dst in current op's argument list.  <a href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#aecd69d50bbe66a2b4e8d08a0963fc2d4">More...</a><br /></td></tr>
<tr class="separator:aecd69d50bbe66a2b4e8d08a0963fc2d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe3f4fb4f063604571dc8906dab9c520"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#a3411c74a9d92ff2e88330fce49a425ea">PostOpType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#abe3f4fb4f063604571dc8906dab9c520">type</a> () const override</td></tr>
<tr class="memdesc:abe3f4fb4f063604571dc8906dab9c520"><td class="mdescLeft">&#160;</td><td class="mdescRight">The <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml" title="An elementwise n-ary operation that can be appended to and fused with (at kernel-level) other operato...">IPostOp</a> type.  <a href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#abe3f4fb4f063604571dc8906dab9c520">More...</a><br /></td></tr>
<tr class="separator:abe3f4fb4f063604571dc8906dab9c520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a890bd4c3567d2b9268ce0a0396d2dea4"><td class="memItemLeft" align="right" valign="top">std::vector&lt; TensorRelatedT * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a890bd4c3567d2b9268ce0a0396d2dea4">arguments</a> () override</td></tr>
<tr class="memdesc:a890bd4c3567d2b9268ce0a0396d2dea4"><td class="mdescLeft">&#160;</td><td class="mdescRight">The argument tensors The order of the argument tensor is strictly preserved.  <a href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a890bd4c3567d2b9268ce0a0396d2dea4">More...</a><br /></td></tr>
<tr class="separator:a890bd4c3567d2b9268ce0a0396d2dea4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a379268971da504167565643f1fa6d91c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const TensorRelatedT * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a379268971da504167565643f1fa6d91c">arguments</a> () const override</td></tr>
<tr class="separator:a379268971da504167565643f1fa6d91c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96b6699a97fec64563d91cbc69209830"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml">IPostOp</a>&lt; TensorRelatedT &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a96b6699a97fec64563d91cbc69209830">clone</a> () const override</td></tr>
<tr class="memdesc:a96b6699a97fec64563d91cbc69209830"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clone method used in cases where PostOps are owned by unique_ptr.  <a href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a96b6699a97fec64563d91cbc69209830">More...</a><br /></td></tr>
<tr class="separator:a96b6699a97fec64563d91cbc69209830"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structarm__compute_1_1experimental_1_1_i_post_op"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_structarm__compute_1_1experimental_1_1_i_post_op')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml">IPostOp&lt; TensorRelatedT &gt;</a></td></tr>
<tr class="memitem:a250e7d345c2d50bcd57b6ec1154450d3 inherit pub_methods_structarm__compute_1_1experimental_1_1_i_post_op"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml#a250e7d345c2d50bcd57b6ec1154450d3">arity</a> () const</td></tr>
<tr class="memdesc:a250e7d345c2d50bcd57b6ec1154450d3 inherit pub_methods_structarm__compute_1_1experimental_1_1_i_post_op"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the arity of the post op.  <a href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml#a250e7d345c2d50bcd57b6ec1154450d3">More...</a><br /></td></tr>
<tr class="separator:a250e7d345c2d50bcd57b6ec1154450d3 inherit pub_methods_structarm__compute_1_1experimental_1_1_i_post_op"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad838b4b6a05386b4584895ff25709002 inherit pub_methods_structarm__compute_1_1experimental_1_1_i_post_op"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml#ad838b4b6a05386b4584895ff25709002">~IPostOp</a> ()</td></tr>
<tr class="separator:ad838b4b6a05386b4584895ff25709002 inherit pub_methods_structarm__compute_1_1experimental_1_1_i_post_op"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a40b0d043ac0727995db12e744cbab8c0"><td class="memItemLeft" align="right" valign="top">TensorRelatedT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a40b0d043ac0727995db12e744cbab8c0">_addend</a></td></tr>
<tr class="separator:a40b0d043ac0727995db12e744cbab8c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac472c5cac819ae81be1eef17cdfd56ac"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#ac472c5cac819ae81be1eef17cdfd56ac">_prev_dst_pos</a></td></tr>
<tr class="separator:ac472c5cac819ae81be1eef17cdfd56ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd11d6c13308bc9d251a448f94fd887e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#acd11d6c13308bc9d251a448f94fd887e">_policy</a></td></tr>
<tr class="separator:acd11d6c13308bc9d251a448f94fd887e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename TensorRelatedT&gt;<br />
struct arm_compute::experimental::PostOpEltwiseAdd&lt; TensorRelatedT &gt;</h3>


<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00080">80</a> of file <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a455f540a8abc180eb65b071505feadcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a455f540a8abc180eb65b071505feadcf">&#9670;&nbsp;</a></span>PostOpEltwiseAdd() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a> </td>
          <td>(</td>
          <td class="paramtype">TensorRelatedT&#160;</td>
          <td class="paramname"><em>addend</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>prev_dst_pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a>&#160;</td>
          <td class="paramname"><em>policy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00083">83</a> of file <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a40b0d043ac0727995db12e744cbab8c0">_addend</a>{ addend },</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;          <a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#ac472c5cac819ae81be1eef17cdfd56ac">_prev_dst_pos</a>{ <a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#aecd69d50bbe66a2b4e8d08a0963fc2d4">prev_dst_pos</a> },</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;          <a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#acd11d6c13308bc9d251a448f94fd887e">_policy</a>{ policy }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a03eb9394b296e5ccda111a1e9b930104"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03eb9394b296e5ccda111a1e9b930104">&#9670;&nbsp;</a></span>~PostOpEltwiseAdd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b80c7d22cd9dbdbfc5d01801edea9cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b80c7d22cd9dbdbfc5d01801edea9cd">&#9670;&nbsp;</a></span>PostOpEltwiseAdd() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a>&lt; TensorRelatedT &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acd593235e70c76e476fc92a28d3ad96a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd593235e70c76e476fc92a28d3ad96a">&#9670;&nbsp;</a></span>PostOpEltwiseAdd() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a>&lt; TensorRelatedT &gt; &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a379268971da504167565643f1fa6d91c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a379268971da504167565643f1fa6d91c">&#9670;&nbsp;</a></span>arguments() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;const TensorRelatedT *&gt; arguments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml#ab9056ce9cb9b416f109419a222741365">IPostOp&lt; TensorRelatedT &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00107">107</a> of file <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">return</span> { &amp;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a40b0d043ac0727995db12e744cbab8c0">_addend</a> };</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00115">PostOpEltwiseAdd&lt; TensorRelatedT &gt;::_addend</a>.</p>

</div>
</div>
<a id="a890bd4c3567d2b9268ce0a0396d2dea4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a890bd4c3567d2b9268ce0a0396d2dea4">&#9670;&nbsp;</a></span>arguments() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;TensorRelatedT *&gt; arguments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The argument tensors The order of the argument tensor is strictly preserved. </p>

<p>Implements <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml#accfebd7a33870b8d8ad63b5913ad9412">IPostOp&lt; TensorRelatedT &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00103">103</a> of file <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">return</span> { &amp;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a40b0d043ac0727995db12e744cbab8c0">_addend</a> };</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00115">PostOpEltwiseAdd&lt; TensorRelatedT &gt;::_addend</a>.</p>

</div>
</div>
<a id="a96b6699a97fec64563d91cbc69209830"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96b6699a97fec64563d91cbc69209830">&#9670;&nbsp;</a></span>clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml">IPostOp</a>&lt;TensorRelatedT&gt; &gt; clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clone method used in cases where PostOps are owned by unique_ptr. </p>
<dl class="section note"><dt>Note</dt><dd>: This performs a shallow copy of the TensorRelatedT if TensorRelatedT points to a resource </dd></dl>

<p>Implements <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml#a2c5c95c91f2bd85a36610883501662c5">IPostOp&lt; TensorRelatedT &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00111">111</a> of file <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;PostOpEltwiseAdd&lt;TensorRelatedT&gt;&gt;(*this);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6dbcbdc1bfd93fb2c25a1a3bb83dca92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dbcbdc1bfd93fb2c25a1a3bb83dca92">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a>&lt; TensorRelatedT &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac1c5962a7ad4d3883287e4af5c07d750"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1c5962a7ad4d3883287e4af5c07d750">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a>&lt; TensorRelatedT &gt; &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aecd69d50bbe66a2b4e8d08a0963fc2d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecd69d50bbe66a2b4e8d08a0963fc2d4">&#9670;&nbsp;</a></span>prev_dst_pos()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int prev_dst_pos </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The position of previous op's dst in current op's argument list. </p>

<p>Implements <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml#a4bbd4d392a079c87e431448252c2f2b6">IPostOp&lt; TensorRelatedT &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00095">95</a> of file <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#ac472c5cac819ae81be1eef17cdfd56ac">_prev_dst_pos</a>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00116">PostOpEltwiseAdd&lt; TensorRelatedT &gt;::_prev_dst_pos</a>.</p>

</div>
</div>
<a id="abe3f4fb4f063604571dc8906dab9c520"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe3f4fb4f063604571dc8906dab9c520">&#9670;&nbsp;</a></span>type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#a3411c74a9d92ff2e88330fce49a425ea">PostOpType</a> type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml" title="An elementwise n-ary operation that can be appended to and fused with (at kernel-level) other operato...">IPostOp</a> type. </p>

<p>Implements <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml#a030d8e278c7546f95b401c6b56c87fb9">IPostOp&lt; TensorRelatedT &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00099">99</a> of file <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a3411c74a9d92ff2e88330fce49a425eaa6416e8534b0dc047508a56ab36d45130">PostOpType::Eltwise_Add</a>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute_1_1experimental.xhtml#a3411c74a9d92ff2e88330fce49a425eaa6416e8534b0dc047508a56ab36d45130">arm_compute::experimental::Eltwise_Add</a>.</p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a40b0d043ac0727995db12e744cbab8c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40b0d043ac0727995db12e744cbab8c0">&#9670;&nbsp;</a></span>_addend</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TensorRelatedT _addend</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00115">115</a> of file <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00103">PostOpEltwiseAdd&lt; TensorRelatedT &gt;::arguments()</a>.</p>

</div>
</div>
<a id="acd11d6c13308bc9d251a448f94fd887e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd11d6c13308bc9d251a448f94fd887e">&#9670;&nbsp;</a></span>_policy</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> _policy</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00117">117</a> of file <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>.</p>

</div>
</div>
<a id="ac472c5cac819ae81be1eef17cdfd56ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac472c5cac819ae81be1eef17cdfd56ac">&#9670;&nbsp;</a></span>_prev_dst_pos</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int _prev_dst_pos</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00116">116</a> of file <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00095">PostOpEltwiseAdd&lt; TensorRelatedT &gt;::prev_dst_pos()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>arm_compute/core/experimental/<a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">PostOps.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1experimental_1_1_post_op_eltwise_add_xhtml_acd11d6c13308bc9d251a448f94fd887e"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#acd11d6c13308bc9d251a448f94fd887e">arm_compute::experimental::PostOpEltwiseAdd::_policy</a></div><div class="ttdeci">ConvertPolicy _policy</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00117">PostOps.h:117</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_a3411c74a9d92ff2e88330fce49a425eaa6416e8534b0dc047508a56ab36d45130"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#a3411c74a9d92ff2e88330fce49a425eaa6416e8534b0dc047508a56ab36d45130">arm_compute::experimental::PostOpType::Eltwise_Add</a></div><div class="ttdeci">@ Eltwise_Add</div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1_post_op_eltwise_add_xhtml_a40b0d043ac0727995db12e744cbab8c0"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#a40b0d043ac0727995db12e744cbab8c0">arm_compute::experimental::PostOpEltwiseAdd::_addend</a></div><div class="ttdeci">TensorRelatedT _addend</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00115">PostOps.h:115</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1_post_op_eltwise_add_xhtml_aecd69d50bbe66a2b4e8d08a0963fc2d4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#aecd69d50bbe66a2b4e8d08a0963fc2d4">arm_compute::experimental::PostOpEltwiseAdd::prev_dst_pos</a></div><div class="ttdeci">int prev_dst_pos() const override</div><div class="ttdoc">The position of previous op's dst in current op's argument list.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00095">PostOps.h:95</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1_post_op_eltwise_add_xhtml_ac472c5cac819ae81be1eef17cdfd56ac"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml#ac472c5cac819ae81be1eef17cdfd56ac">arm_compute::experimental::PostOpEltwiseAdd::_prev_dst_pos</a></div><div class="ttdeci">int _prev_dst_pos</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00116">PostOps.h:116</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">PostOpEltwiseAdd</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:29 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
