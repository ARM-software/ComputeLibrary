<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/graph/GraphBuilder.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_graph_builder_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GraphBuilder.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_graph_builder_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_GRAPH_GRAPH_BUILDER_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_GRAPH_GRAPH_BUILDER_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_accessor_8h.xhtml">arm_compute/graph/ITensorAccessor.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_layer_descriptors_8h.xhtml">arm_compute/graph/LayerDescriptors.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_types_8h.xhtml">arm_compute/graph/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>graph</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">// Forward declaration</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span>Graph;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/** Graph builder class</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> * Builds and compiles a graph</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml">   42</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml">GraphBuilder</a> final</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">    /** Adds a Const node to the graph</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">     * @param[in] g        Graph to add the node to</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     * @param[in] params   Common node parameters</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     * @param[in] desc     Tensor descriptor of the node</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     * @param[in] accessor (Optional) Accessor of the const node data</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#aa7b1756a674d54d96df4e02a31169082">add_const_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;desc, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> accessor = <span class="keyword">nullptr</span>);<span class="comment"></span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">    /** Adds an input layer node to the graph</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     * @param[in] g        Graph to add the node to</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     * @param[in] params   Common node parameters</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     * @param[in] desc     Tensor descriptor of the Tensor</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     * @param[in] accessor (Optional) Accessor of the input node data</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a60f996c5c698c7b9cbd82ee414b41d2e">add_input_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;desc, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> accessor = <span class="keyword">nullptr</span>);<span class="comment"></span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">    /** Adds an output layer node to the graph</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     * @param[in] g        Graph to add the node to</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * @param[in] params   Common node parameters</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     * @param[in] input    Input to the output node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     * @param[in] accessor (Optional) Accessor of the output node data</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a0db6223a8a4c44a263fbc5e9ec039e18">add_output_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> accessor = <span class="keyword">nullptr</span>);<span class="comment"></span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">    /** Adds an activation layer node to the graph</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     * @param[in] g              Graph to add the node to</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     * @param[in] params         Common node parameters</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     * @param[in] input          Input to the activation layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     * @param[in] act_info       Activation layer information</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     * @param[in] out_quant_info (Optional) Output quantization info</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a5cd4c7258f59e2c5d03ed8ae5849a650">add_activation_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;out_quant_info = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>());<span class="comment"></span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">    /** Adds an activation layer node to the graph</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     * @param[in] g              Graph to add the node to</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     * @param[in] params         Common node parameters</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     * @param[in] input          Input to the activation layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     * @param[in] op             Reduction Operation: min or max</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     * @param[in] axis           Axis to perform reduction operation across</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     * @param[in] out_data_type  (Optional) Output data type</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     * @param[in] out_quant_info (Optional) Output quantization info</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ac663bef61cee6df859e8a441a9fa9c0d">add_arg_min_max_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> axis,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                       <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>                out_data_type  = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a696b031073e74bf2cb98e5ef201d4aa3">DataType::UNKNOWN</a>,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;out_quant_info = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>());<span class="comment"></span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">    /** Adds a batch normalization layer node to the graph</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     * @param[in] g              Graph to add the node to</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * @param[in] params         Common node parameters</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     * @param[in] input          Input to the batch normalization layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     * @param[in] epsilon        Epsilon parameter</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @param[in] mean_accessor  Const Node ID that contains the mean values</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     * @param[in] var_accessor   Const Node ID that contains the variance values</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">     * @param[in] beta_accessor  Const Node ID that contains the beta values. Can be EmptyNodeID</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     * @param[in] gamma_accessor Const Node ID that contains the gamma values. Can be EmptyNodeID</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a09979aca2a60b08c6cdbe6aebb942e53">add_batch_normalization_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">epsilon</a>,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                               <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> mean_accessor = <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> var_accessor = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                               <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> beta_accessor = <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> gamma_accessor = <span class="keyword">nullptr</span>);<span class="comment"></span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">    /** Adds a bounding box transform layer node to the graph</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     * @param[in] input  Input to the bounding box transform layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * @param[in] deltas Deltas input to the bounding box transform layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     * @param[in] info   Bounding Box Transform information</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a9e02d090f0b711a7adf97367606e6857">add_bounding_box_transform_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> deltas, <a class="code" href="classarm__compute_1_1_bounding_box_transform_info.xhtml">BoundingBoxTransformInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);<span class="comment"></span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">    /** Adds an channel shuffle layer node to the graph</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     * @param[in] g          Graph to add the node to</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     * @param[in] params     Common node parameters</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     * @param[in] input      Input to the activation layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     * @param[in] num_groups Number of groups</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a19b8128b8e78988834c00c4e9cd97c3e">add_channel_shuffle_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2270b3e1d20651d2d8341c858c890830">num_groups</a>);<span class="comment"></span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">    /** Adds a convolution layer node to the graph</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     * @param[in] g                     Graph to add the node to</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     * @param[in] params                Common node parameters</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     * @param[in] input                 Input to the convolution layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     * @param[in] kernel_spatial_extend Spatial extend of convolution kernels</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     * @param[in] depth                 Number of convolution kernels</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     * @param[in] conv_info             Convolution layer information</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     * @param[in] num_groups            (Optional) Number of groups for a grouped convolution. Defaults to 1</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     * @param[in] method                (Optional) Convolution method to use</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     * @param[in] fast_math_hint        (Optional) Fast math hint</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     * @param[in] weights_accessor      (Optional) Accessor of the weights node data</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     * @param[in] bias_accessor         (Optional) Accessor of the bias node data</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     * @param[in] weights_quant_info    (Optional) Weights quantization info</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">     * @param[in] out_quant_info        (Optional) Output quantization info</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#afbb302ca2e2f509f976568ba0928c2ce">add_convolution_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>,</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                       <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> kernel_spatial_extend, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2270b3e1d20651d2d8341c858c890830">num_groups</a> = 1,</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                                       <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> method = <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">ConvolutionMethod::Default</a>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">FastMathHint</a> fast_math_hint = <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241">FastMathHint::Disabled</a>,</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                                       <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> weights_accessor = <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> bias_accessor = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;weights_quant_info = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;out_quant_info     = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>());<span class="comment"></span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">    /** Adds a deconvolution layer node to the graph</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">     * @param[in] g                     Graph to add the node to</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">     * @param[in] params                Common node parameters</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">     * @param[in] input                 Input to the convolution layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">     * @param[in] kernel_spatial_extend Spatial extend of convolution kernels</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">     * @param[in] depth                 Number of convolution kernels</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">     * @param[in] deconv_info           Convolution layer information</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">     * @param[in] weights_accessor      (Optional) Accessor of the weights node data</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">     * @param[in] bias_accessor         (Optional) Accessor of the bias node data</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a1735fd3d9b774a2c92ca1619886d2ede">add_deconvolution_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>,</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                         <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> kernel_spatial_extend, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> deconv_info,</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                         <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> weights_accessor = <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> bias_accessor = <span class="keyword">nullptr</span>);<span class="comment"></span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">    /** Adds a depth concatenate node to the graph</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">     * @param[in] g                 Graph to add the node to</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">     * @param[in] params            Common node parameters</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">     * @param[in] inputs            Inputs to the concatenate layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">     * @param[in] concat_descriptor Concatenation layer descriptor</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a667742f5b5d3574fb50c8180609efac4">add_concatenate_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <span class="keyword">const</span> std::vector&lt;NodeIdxPair&gt; &amp;inputs, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">descriptors::ConcatLayerDescriptor</a> &amp;concat_descriptor);<span class="comment"></span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">    /** Adds an depth to space layer node to the graph</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">     * @param[in] g           Graph to add the node to</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">     * @param[in] params      Common node parameters</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">     * @param[in] input       Input to the depth to space layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">     * @param[in] block_shape Block shape to reshape tensor with</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ae80e3bef3b70c6b443b7e42e68397a5c">add_depth_to_space_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, int32_t block_shape);<span class="comment"></span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">    /** Adds a depth-wise convolution layer node to the graph</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">     * @param[in] g                     Graph to add the node to</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">     * @param[in] params                Common node parameters</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">     * @param[in] input                 Input to the depthwise convolution layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">     * @param[in] kernel_spatial_extend Spatial extend of convolution kernels</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">     * @param[in] conv_info             Convolution layer information</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">     * @param[in] depth_multiplier      (Optional) Depth multiplier parameter.</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">     * @param[in] method                (Optional) Convolution method to use</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">     * @param[in] weights_accessor      (Optional) Accessor of the weights node data</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">     * @param[in] bias_accessor         (Optional) Accessor of the bias node data</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">     * @param[in] quant_info            (Optional) Weights quantization info</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">     * @param[in] out_quant_info        (Optional) Output quantization info</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a9c59d071c7e6c2574e1d5587ba50949c">add_depthwise_convolution_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>,</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                                                 <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> kernel_spatial_extend, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, <span class="keywordtype">int</span> depth_multiplier = 1,</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                                 <a class="code" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">DepthwiseConvolutionMethod</a> method    = <a class="code" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa7a1920d61156abc05a60135aefe8bc67">DepthwiseConvolutionMethod::Default</a>,</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                                                 <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> weights_accessor = <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> bias_accessor = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;quant_info = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;out_quant_info = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>());<span class="comment"></span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">    /** Adds an element-wise layer node to the graph</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">     * @param[in] g         Graph to add the node to</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">     * @param[in] params    Common node parameters</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">     * @param[in] input0    First input to the element-wise operation layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">     * @param[in] input1    Second input to the element-wise operation layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">     * @param[in] operation Element-wise operation to perform</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a193c384a821bc30573b13975eccbe58a">add_elementwise_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input0, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input1, <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4">EltwiseOperation</a> operation);<span class="comment"></span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">    /** Adds a dequantization node to the graph</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">     * @param[in] input  Input to the dequantization node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a50410fc54c8540887d600849043327d5">add_dequantization_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);<span class="comment"></span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">    /** Adds a detection output layer node to the graph</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">     * @param[in] g              Graph to add the node to</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">     * @param[in] params         Common node parameters</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">     * @param[in] input_loc      Location input to the detection output layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">     * @param[in] input_conf     Confidence input to the detection output layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">     * @param[in] input_priorbox PriorBox input to the detection output layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">     * @param[in] detect_info    Detection output layer parameters</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#aff2fa3e8e802bcefd6fdd5780aa096e1">add_detection_output_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input_loc, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input_conf, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input_priorbox, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_detection_output_layer_info.xhtml">DetectionOutputLayerInfo</a> &amp;detect_info);<span class="comment"></span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">    /** Adds a detection post process layer node to the graph</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">     * @param[in] g                      Graph to add the node to</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">     * @param[in] params                 Common node parameters</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">     * @param[in] input_box_encoding     Boxes input to the detection output layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">     * @param[in] input_class_prediction Class prediction input to the detection output layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">     * @param[in] detect_info            Detection output layer parameters</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">     * @param[in] anchors_accessor       (Optional) Const Node ID that contains the anchor values</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">     * @param[in] anchor_quant_info      (Optional) Anchor quantization info</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a17fe8b7f4dbd6cf0747ab9d328a56f88">add_detection_post_process_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input_box_encoding, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input_class_prediction,</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_detection_post_process_layer_info.xhtml">DetectionPostProcessLayerInfo</a> &amp;detect_info, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> anchors_accessor = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;anchor_quant_info = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>());<span class="comment"></span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">    /** Adds a Dummy node to the graph</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">     * @note this node if for debugging purposes. Just alters the shape of the graph pipeline as requested.</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">     * @param[in] input  Input to the dummy node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">     * @param[in] shape  Output shape</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a3484452057c88a68b9242816b50a0687">add_dummy_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>);<span class="comment"></span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">    /** Adds a flatten layer node to the graph</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">     * @param[in] input  Input to the flatten layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a639fab29a682a532ca20615210b366ad">add_flatten_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);<span class="comment"></span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">    /** Adds a fully connected layer node to the graph</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">     * @param[in] g              Graph to add the layer to</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">     * @param[in] params         Common node parameters</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">     * @param[in] input          Input to the fully connected layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">     * @param[in] num_outputs    Number of output neurons</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">     * @param[in] weights_nid    Node ID of the weights node data</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">     * @param[in] bias_nid       (Optional) Node ID of the bias node data. Defaults to EmptyNodeID</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">     * @param[in] fc_info        (Optional) Fully connected layer metadata</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">     * @param[in] out_quant_info (Optional) Output quantization info</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">     * @param[in] fast_math_hint (Optional) Fast math hint</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#af65d66a907a0cd5a01a2dc4bd93de984">add_fully_connected_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_outputs,</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                                            <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> weights_nid, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> bias_nid = <a class="code" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a>,</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a> fc_info        = <a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a>(),</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>       &amp;out_quant_info = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                                            <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">FastMathHint</a>                  fast_math_hint = <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241">FastMathHint::Disabled</a>);<span class="comment"></span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">    /** Adds a fully connected layer node to the graph</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">     * @param[in] g                  Graph to add the layer to</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">     * @param[in] params             Common node parameters</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">     * @param[in] input              Input to the fully connected layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">     * @param[in] num_outputs        Number of output neurons</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">     * @param[in] weights_accessor   (Optional) Accessor of the weights node data</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">     * @param[in] bias_accessor      (Optional) Accessor of the bias node data</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">     * @param[in] fc_info            (Optional) Fully connected layer metadata</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">     * @param[in] weights_quant_info (Optional) Weights quantization info</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">     * @param[in] out_quant_info     (Optional) Output quantization info</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">     * @param[in] fast_math_hint     (Optional) Fast math hint</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#af65d66a907a0cd5a01a2dc4bd93de984">add_fully_connected_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_outputs,</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                                            <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> weights_accessor = <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> bias_accessor = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a> fc_info            = <a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a>(),</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>       &amp;weights_quant_info = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>       &amp;out_quant_info     = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                                            <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">FastMathHint</a>                  fast_math_hint     = <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241">FastMathHint::Disabled</a>);<span class="comment"></span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">    /** Adds a generate proposals layer node to the graph</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">     * @param[in] g       Graph to add the layer to</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">     * @param[in] params  Common node parameters</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">     * @param[in] scores  Input scores to the generate proposals layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">     * @param[in] deltas  Input deltas to the generate proposals layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">     * @param[in] anchors Input anchors to the generate proposals layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">     * @param[in] info    Generate proposals operation information</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a8965f4ef424a3b9142706cfe50b7e6cf">add_generate_proposals_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> scores, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> deltas,</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                                              <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> anchors, <a class="code" href="classarm__compute_1_1_generate_proposals_info.xhtml">GenerateProposalsInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);<span class="comment"></span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">    /** Adds a L2 Normalize layer node to the graph</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">     * @param[in] g       Graph to add the node to</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">     * @param[in] params  Common node parameters</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">     * @param[in] input   Input to the normalization layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">     * @param[in] axis    Axis to perform normalization on</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">     * @param[in] epsilon Lower bound value for the normalization</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a6bf51d4ae4adaffc5511b756d27ae069">add_l2_normalize_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keywordtype">int</span> axis, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">epsilon</a>);<span class="comment"></span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">    /** Adds a normalization layer node to the graph</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">     * @param[in] g         Graph to add the node to</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">     * @param[in] params    Common node parameters</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">     * @param[in] input     Input to the normalization layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">     * @param[in] norm_info Normalization layer information</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a542464b49825a7f82b42909409405010">add_normalization_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a> norm_info);<span class="comment"></span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">    /** Adds a normalize planar YUV layer node to the graph</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">     * @param[in] g             Graph to add the node to</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">     * @param[in] params        Common node parameters</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">     * @param[in] input         Input to the normalize planar YUV layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">     * @param[in] mean_accessor Const Node ID that contains the mean values</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">     * @param[in] std_accessor  Const Node ID that contains the variance values</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a2bf294b4d12b6430e4e6b6ba8db8273b">add_normalize_planar_yuv_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>,</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                                                <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> mean_accessor = <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> std_accessor = <span class="keyword">nullptr</span>);<span class="comment"></span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">    /** Adds a pad layer node to the graph</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">     * @param[in] g         Graph to add the node to</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">     * @param[in] params    Common node parameters</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">     * @param[in] input     Input to the reshape layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">     * @param[in] paddings  The padding for each spatial dimension of the input tensor. The pair padding[i]</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">     *                      specifies the front and the end padding in the i-th dimension.</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">     * @param[in] pad_value Padding value to be used. Defaults to 0</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ac6ee8c6a5e3b98c697aacf55a251c986">add_pad_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ac1a1b012674e0f1de071a611391828ad">PaddingList</a> &amp;paddings, <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> pad_value = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>());<span class="comment"></span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">    /** Adds a permute layer node to the graph</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">     * @param[in] input  Input to the reshape layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">     * @param[in] perm   Permutation vector</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="comment">     * @param[in] layout (Optional) Data layout to assign to permuted tensor.</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">     *                    If UNKNOWN then the input&#39;s layout will be used.</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ad0a6a6580be03b445d9dcc64ced5e2ef">add_permute_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_strides.xhtml">PermutationVector</a> perm, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> layout = <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a696b031073e74bf2cb98e5ef201d4aa3">DataLayout::UNKNOWN</a>);<span class="comment"></span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">    /** Adds a pooling layer node to the graph</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">     * @param[in] g         Graph to add the node to</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">     * @param[in] params    Common node parameters</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">     * @param[in] input     Input to the pooling layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">     * @param[in] pool_info Pooling layer information</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ab52fa970654d32e0c0621cf718a6861f">add_pooling_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="structarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a> pool_info);<span class="comment"></span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">    /** Adds a prelu layer node to the graph</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">     * @param[in] input  Input to the PRelu node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">     * @param[in] alpha  Alpha input to the PRelu node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a613c0d9db4a80d400c8dc220648d337e">add_prelu_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> alpha);<span class="comment"></span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">    /** Adds a print layer node to the graph</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">     * @param[in] g           Graph to add the node to</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">     * @param[in] params      Common node parameters</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">     * @param[in] input       Input to the print layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">     * @param[in] stream      Output stream.</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">     * @param[in] format_info (Optional) Format info.</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">     * @param[in] transform   (Optional) Transformation function to be applied to the input tensor before printing.</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a69a669c24a8f0db98f3f980e161ab890">add_print_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, std::ostream &amp;stream, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a> &amp;format_info = <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a>(),</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                                 <span class="keyword">const</span> std::function&lt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *)&gt; transform = <span class="keyword">nullptr</span>);<span class="comment"></span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">    /** Adds a priorbox layer node to the graph</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">     * @param[in] g          Graph to add the node to</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">     * @param[in] params     Common node parameters</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">     * @param[in] input0     First input to the priorbox layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">     * @param[in] input1     Second input to the priorbox layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">     * @param[in] prior_info PriorBox parameters</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a6dc61dbaf7ce5612ac8d1566c1c222e3">add_priorbox_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input0, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml">PriorBoxLayerInfo</a> &amp;prior_info);<span class="comment"></span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">    /** Adds a quantization layer node to the graph</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">     * @param[in] g              Graph to add the node to</span></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="comment">     * @param[in] params         Common node parameters</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">     * @param[in] input          Input to the quantization layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="comment">     * @param[in] out_quant_info Output quantization info</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a44fe1be81ac7e5aadbc73f05bb95aae1">add_quantization_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;out_quant_info);<span class="comment"></span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">    /** Adds a reduction sum layer node to the graph</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">     * @param[in] g         Graph to add the node to</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">     * @param[in] params    Common node parameters</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">     * @param[in] input     Input to the reorg layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">     * @param[in] op        Reduction operation</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">     * @param[in] axis      Reduction axis</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">     * @param[in] keep_dims (Optional) Whether to keep the reduced dimension after the operation. Defaults to true.</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a3494a111bde4adf09b7bcb3648981e9f">add_reduction_operation_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op, <span class="keywordtype">int</span> axis, <span class="keywordtype">bool</span> keep_dims = <span class="keyword">true</span>);<span class="comment"></span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">    /** Adds a reorg layer node to the graph</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">     * @param[in] input  Input to the reorg layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">     * @param[in] stride Stride value to use for reorganizing the values in the output tensor.</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a9d0c83a96ca66565407885ff41214665">add_reorg_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keywordtype">int</span> stride);<span class="comment"></span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">    /** Adds a reshape layer node to the graph</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">     * @param[in] input  Input to the reshape layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="comment">     * @param[in] shape  Output reshaped shape</span></div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a96b9a9be8e6bc94f1a245d9625c5b596">add_reshape_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>);<span class="comment"></span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">    /** Adds a resize layer node to the graph</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment">     * @param[in] g            Graph to add the node to</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment">     * @param[in] params       Common node parameters</span></div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment">     * @param[in] input        Input to the reshape layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">     * @param[in] policy       Interpolation policy</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment">     * @param[in] width_scale  Width scaling factor</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment">     * @param[in] height_scale Height scaling factor</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a4e6a956431d508ac913a77cf1f9eaa69">add_resize_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a> policy, <span class="keywordtype">float</span> width_scale, <span class="keywordtype">float</span> height_scale);<span class="comment"></span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment">    /** Adds a ROI align layer node to the graph</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">     * @param[in] g         Graph to add the node to</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">     * @param[in] params    Common node parameters</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="comment">     * @param[in] input     Input to the reshape layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">     * @param[in] rois      Input containing the ROIs.</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment">     * @param[in] pool_info Contains pooling operation information described in @ref ROIPoolingLayerInfo.</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#aeeebbfe02ab3fe0320a82d6c3413eeeb">add_roi_align_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> rois, <a class="code" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml">ROIPoolingLayerInfo</a> pool_info);<span class="comment"></span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">    /** Adds a scale layer node to the graph</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment">     * This layer computes a product of the input with a scale (read from mul_accessor) and it applies an offset (read from add_accessor).</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment">     * output = input * mul_w + add_w</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="comment">     * @param[in] g            Graph to add the layer to</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment">     * @param[in] params       Common node parameters</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="comment">     * @param[in] input        Input to the fully connected layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment">     * @param[in] mul_accessor (Optional) Accessor of the mul node data</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment">     * @param[in] add_accessor (Optional) Accessor of the add node data</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a7396e101536756a6aaf05f043a6f0b13">add_scale_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> &amp;params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>,</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> mul_accessor = <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> add_accessor = <span class="keyword">nullptr</span>);<span class="comment"></span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment">    /** Adds a softmax node to the graph</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="comment">     * @param[in] input  Input to the softmax layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">     * @param[in] beta   Beta parameter</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#af06fa4df1027c97658c0c26570b2bdb5">add_softmax_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keywordtype">float</span> beta = 1.f);<span class="comment"></span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">    /** Adds a slice node to the graph</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment">     * @param[in] input  Input to the slice layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment">     * @param[in] starts The starts of the dimensions of the input tensor to be sliced. The length must be of rank(input).</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="comment">     * @param[in] ends   The ends of the dimensions of the input tensor to be sliced. The length must be of rank(input).</span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a819d4ebfd6c79e430f7dc0a5e5241203">add_slice_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;starts, <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;ends);<span class="comment"></span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment">    /** Adds a split node to the graph</span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="comment">     * @param[in] g          Graph to add the node to</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="comment">     * @param[in] params     Common node parameters</span></div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">     * @param[in] input      Input to the split layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment">     * @param[in] num_splits Number of different splits</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment">     * @param[in] axis       (Optional) Split axis. Defaults to 0</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a0df296d05af531f77715dfeaf27f48cd">add_split_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_splits, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> axis = 0);<span class="comment"></span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment">    /** Adds a stack layer node to the graph</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment">     * @param[in] g      Graph to add the node to</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment">     * @param[in] params Common node parameters</span></div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment">     * @param[in] inputs Inputs to the reorg layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="comment">     * @param[in] axis   Axis along which the input tensors have to be packed</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ae0a382c6800d4ebe51ba9ced8841e2b5">add_stack_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <span class="keyword">const</span> std::vector&lt;NodeIdxPair&gt; &amp;inputs, <span class="keywordtype">int</span> axis);<span class="comment"></span></div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment">    /** Adds a strided slice node to the graph</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="comment">     * @param[in] g       Graph to add the node to</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">     * @param[in] params  Common node parameters</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="comment">     * @param[in] input   Input to the strided slice layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment">     * @param[in] starts  The starts of the dimensions of the input tensor to be sliced. The length must be of rank(input).</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">     * @param[in] ends    The ends of the dimensions of the input tensor to be sliced. The length must be of rank(input).</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment">     * @param[in] strides The strides of the dimensions of the input tensor to be sliced. The length must be of rank(input).</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="comment">     * @param[in] info    Contains masks for the starts, ends and strides</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ab37711b90876e57bfcade525e3233c4d">add_strided_slice_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;starts, <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;ends, <a class="code" href="classarm__compute_1_1_coordinates.xhtml">BiStrides</a> &amp;strides, <a class="code" href="classarm__compute_1_1_strided_slice_layer_info.xhtml">StridedSliceLayerInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);<span class="comment"></span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment">    /** Adds a yolo layer to the graph</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">     * @param[in] g        Graph to add the node to</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment">     * @param[in] params   Common node parameters</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment">     * @param[in] input    Input to the yolo layer node as a NodeID-Index pair</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">     * @param[in] act_info Activation layer parameters</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment">     * @return Node ID of the created node, EmptyNodeID in case of error</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a0db084ff8c5adc5876cffecd617b9118">add_yolo_node</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>);</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;};</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;} <span class="comment">// namespace graph</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GRAPH_GRAPH_BUILDER_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1graph_1_1_node_params_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_node_params.xhtml">arm_compute::graph::NodeParams</a></div><div class="ttdoc">Common node parameters.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00270">Types.h:270</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">arm_compute::graph::ConvolutionMethod::Default</a></div><div class="ttdeci">@ Default</div><div class="ttdoc">Default approach using internal heuristics.</div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a5cd4c7258f59e2c5d03ed8ae5849a650"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a5cd4c7258f59e2c5d03ed8ae5849a650">arm_compute::graph::GraphBuilder::add_activation_node</a></div><div class="ttdeci">static NodeID add_activation_node(Graph &amp;g, NodeParams params, NodeIdxPair input, ActivationLayerInfo act_info, const QuantizationInfo &amp;out_quant_info=QuantizationInfo())</div><div class="ttdoc">Adds an activation layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00136">GraphBuilder.cpp:136</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a639fab29a682a532ca20615210b366ad"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a639fab29a682a532ca20615210b366ad">arm_compute::graph::GraphBuilder::add_flatten_node</a></div><div class="ttdeci">static NodeID add_flatten_node(Graph &amp;g, NodeParams params, NodeIdxPair input)</div><div class="ttdoc">Adds a flatten layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00463">GraphBuilder.cpp:463</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_ad0a6a6580be03b445d9dcc64ced5e2ef"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ad0a6a6580be03b445d9dcc64ced5e2ef">arm_compute::graph::GraphBuilder::add_permute_node</a></div><div class="ttdeci">static NodeID add_permute_node(Graph &amp;g, NodeParams params, NodeIdxPair input, PermutationVector perm, DataLayout layout=DataLayout::UNKNOWN)</div><div class="ttdoc">Adds a permute layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00596">GraphBuilder.cpp:596</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a9c59d071c7e6c2574e1d5587ba50949c"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a9c59d071c7e6c2574e1d5587ba50949c">arm_compute::graph::GraphBuilder::add_depthwise_convolution_node</a></div><div class="ttdeci">static NodeID add_depthwise_convolution_node(Graph &amp;g, NodeParams params, NodeIdxPair input, Size2D kernel_spatial_extend, PadStrideInfo conv_info, int depth_multiplier=1, DepthwiseConvolutionMethod method=DepthwiseConvolutionMethod::Default, ITensorAccessorUPtr weights_accessor=nullptr, ITensorAccessorUPtr bias_accessor=nullptr, const QuantizationInfo &amp;quant_info=QuantizationInfo(), const QuantizationInfo &amp;out_quant_info=QuantizationInfo())</div><div class="ttdoc">Adds a depth-wise convolution layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00332">GraphBuilder.cpp:332</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a0db084ff8c5adc5876cffecd617b9118"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a0db084ff8c5adc5876cffecd617b9118">arm_compute::graph::GraphBuilder::add_yolo_node</a></div><div class="ttdeci">static NodeID add_yolo_node(Graph &amp;g, NodeParams params, NodeIdxPair input, ActivationLayerInfo act_info)</div><div class="ttdoc">Adds a yolo layer to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00735">GraphBuilder.cpp:735</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00071">QuantizationInfo.h:71</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml">arm_compute::PixelValue</a></div><div class="ttdoc">Class describing the value of a pixel for any image format.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00034">PixelValue.h:34</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ac1a1b012674e0f1de071a611391828ad"><div class="ttname"><a href="namespacearm__compute.xhtml#ac1a1b012674e0f1de071a611391828ad">arm_compute::PaddingList</a></div><div class="ttdeci">std::vector&lt; PaddingInfo &gt; PaddingList</div><div class="ttdoc">List of padding information.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00455">Types.h:455</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00113">Types.h:113</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a44fe1be81ac7e5aadbc73f05bb95aae1"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a44fe1be81ac7e5aadbc73f05bb95aae1">arm_compute::graph::GraphBuilder::add_quantization_node</a></div><div class="ttdeci">static NodeID add_quantization_node(Graph &amp;g, NodeParams params, NodeIdxPair input, const QuantizationInfo &amp;out_quant_info)</div><div class="ttdoc">Adds a quantization layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00640">GraphBuilder.cpp:640</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a4e6a956431d508ac913a77cf1f9eaa69"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a4e6a956431d508ac913a77cf1f9eaa69">arm_compute::graph::GraphBuilder::add_resize_node</a></div><div class="ttdeci">static NodeID add_resize_node(Graph &amp;g, NodeParams params, NodeIdxPair input, InterpolationPolicy policy, float width_scale, float height_scale)</div><div class="ttdoc">Adds a resize layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00660">GraphBuilder.cpp:660</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a667742f5b5d3574fb50c8180609efac4"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a667742f5b5d3574fb50c8180609efac4">arm_compute::graph::GraphBuilder::add_concatenate_node</a></div><div class="ttdeci">static NodeID add_concatenate_node(Graph &amp;g, NodeParams params, const std::vector&lt; NodeIdxPair &gt; &amp;inputs, const descriptors::ConcatLayerDescriptor &amp;concat_descriptor)</div><div class="ttdoc">Adds a depth concatenate node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00327">GraphBuilder.cpp:327</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a60f996c5c698c7b9cbd82ee414b41d2e"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a60f996c5c698c7b9cbd82ee414b41d2e">arm_compute::graph::GraphBuilder::add_input_node</a></div><div class="ttdeci">static NodeID add_input_node(Graph &amp;g, NodeParams params, const TensorDescriptor &amp;desc, ITensorAccessorUPtr accessor=nullptr)</div><div class="ttdoc">Adds an input layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00116">GraphBuilder.cpp:116</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_afbb302ca2e2f509f976568ba0928c2ce"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#afbb302ca2e2f509f976568ba0928c2ce">arm_compute::graph::GraphBuilder::add_convolution_node</a></div><div class="ttdeci">static NodeID add_convolution_node(Graph &amp;g, NodeParams params, NodeIdxPair input, Size2D kernel_spatial_extend, unsigned int depth, PadStrideInfo conv_info, unsigned int num_groups=1, ConvolutionMethod method=ConvolutionMethod::Default, FastMathHint fast_math_hint=FastMathHint::Disabled, ITensorAccessorUPtr weights_accessor=nullptr, ITensorAccessorUPtr bias_accessor=nullptr, const QuantizationInfo &amp;weights_quant_info=QuantizationInfo(), const QuantizationInfo &amp;out_quant_info=QuantizationInfo())</div><div class="ttdoc">Adds a convolution layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00219">GraphBuilder.cpp:219</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a0df296d05af531f77715dfeaf27f48cd"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a0df296d05af531f77715dfeaf27f48cd">arm_compute::graph::GraphBuilder::add_split_node</a></div><div class="ttdeci">static NodeID add_split_node(Graph &amp;g, NodeParams params, NodeIdxPair input, unsigned int num_splits, unsigned int axis=0)</div><div class="ttdoc">Adds a split node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00720">GraphBuilder.cpp:720</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">arm_compute::InterpolationPolicy</a></div><div class="ttdeci">InterpolationPolicy</div><div class="ttdoc">Interpolation method.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00413">Types.h:413</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a09979aca2a60b08c6cdbe6aebb942e53"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a09979aca2a60b08c6cdbe6aebb942e53">arm_compute::graph::GraphBuilder::add_batch_normalization_node</a></div><div class="ttdeci">static NodeID add_batch_normalization_node(Graph &amp;g, NodeParams params, NodeIdxPair input, float epsilon, ITensorAccessorUPtr mean_accessor=nullptr, ITensorAccessorUPtr var_accessor=nullptr, ITensorAccessorUPtr beta_accessor=nullptr, ITensorAccessorUPtr gamma_accessor=nullptr)</div><div class="ttdoc">Adds a batch normalization layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00148">GraphBuilder.cpp:148</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_ae80e3bef3b70c6b443b7e42e68397a5c"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ae80e3bef3b70c6b443b7e42e68397a5c">arm_compute::graph::GraphBuilder::add_depth_to_space_node</a></div><div class="ttdeci">static NodeID add_depth_to_space_node(Graph &amp;g, NodeParams params, NodeIdxPair input, int32_t block_shape)</div><div class="ttdoc">Adds an depth to space layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00386">GraphBuilder.cpp:386</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_ae0a382c6800d4ebe51ba9ced8841e2b5"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ae0a382c6800d4ebe51ba9ced8841e2b5">arm_compute::graph::GraphBuilder::add_stack_node</a></div><div class="ttdeci">static NodeID add_stack_node(Graph &amp;g, NodeParams params, const std::vector&lt; NodeIdxPair &gt; &amp;inputs, int axis)</div><div class="ttdoc">Adds a stack layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00730">GraphBuilder.cpp:730</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45b"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">arm_compute::ReductionOperation</a></div><div class="ttdeci">ReductionOperation</div><div class="ttdoc">Available reduction operations.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00478">Types.h:478</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a613c0d9db4a80d400c8dc220648d337e"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a613c0d9db4a80d400c8dc220648d337e">arm_compute::graph::GraphBuilder::add_prelu_node</a></div><div class="ttdeci">static NodeID add_prelu_node(Graph &amp;g, NodeParams params, NodeIdxPair input, NodeIdxPair alpha)</div><div class="ttdoc">Adds a prelu layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00601">GraphBuilder.cpp:601</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_node_idx_pair_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">arm_compute::graph::NodeIdxPair</a></div><div class="ttdoc">NodeID-index struct.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00263">Types.h:263</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01659">Types.h:1659</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_strides_xhtml"><div class="ttname"><a href="classarm__compute_1_1_strides.xhtml">arm_compute::Strides</a></div><div class="ttdoc">Strides of an item in bytes.</div><div class="ttdef"><b>Definition:</b> <a href="_strides_8h_source.xhtml#l00038">Strides.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml">arm_compute::graph::GraphBuilder</a></div><div class="ttdoc">Graph builder class.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8h_source.xhtml#l00042">GraphBuilder.h:42</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1f8aca235c095df227e7444f6b237eb1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">arm_compute::test::validation::act_info</a></div><div class="ttdeci">act_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_fully_connected_layer_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_fully_connected_layer_info.xhtml">arm_compute::FullyConnectedLayerInfo</a></div><div class="ttdoc">Fully connected layer info.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01829">Types.h:1829</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a542464b49825a7f82b42909409405010"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a542464b49825a7f82b42909409405010">arm_compute::graph::GraphBuilder::add_normalization_node</a></div><div class="ttdeci">static NodeID add_normalization_node(Graph &amp;g, NodeParams params, NodeIdxPair input, NormalizationLayerInfo norm_info)</div><div class="ttdoc">Adds a normalization layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00560">GraphBuilder.cpp:560</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a8965f4ef424a3b9142706cfe50b7e6cf"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a8965f4ef424a3b9142706cfe50b7e6cf">arm_compute::graph::GraphBuilder::add_generate_proposals_node</a></div><div class="ttdeci">static NodeID add_generate_proposals_node(Graph &amp;g, NodeParams params, NodeIdxPair scores, NodeIdxPair deltas, NodeIdxPair anchors, GenerateProposalsInfo info)</div><div class="ttdoc">Adds a generate proposals layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00539">GraphBuilder.cpp:539</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
<div class="ttc" id="a_layer_descriptors_8h_xhtml"><div class="ttname"><a href="_layer_descriptors_8h.xhtml">LayerDescriptors.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a9d0c83a96ca66565407885ff41214665"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a9d0c83a96ca66565407885ff41214665">arm_compute::graph::GraphBuilder::add_reorg_node</a></div><div class="ttdeci">static NodeID add_reorg_node(Graph &amp;g, NodeParams params, NodeIdxPair input, int stride)</div><div class="ttdoc">Adds a reorg layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00650">GraphBuilder.cpp:650</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_aff2fa3e8e802bcefd6fdd5780aa096e1"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#aff2fa3e8e802bcefd6fdd5780aa096e1">arm_compute::graph::GraphBuilder::add_detection_output_node</a></div><div class="ttdeci">static NodeID add_detection_output_node(Graph &amp;g, NodeParams params, NodeIdxPair input_loc, NodeIdxPair input_conf, NodeIdxPair input_priorbox, const DetectionOutputLayerInfo &amp;detect_info)</div><div class="ttdoc">Adds a detection output layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00396">GraphBuilder.cpp:396</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">arm_compute::graph::descriptors::ConcatLayerDescriptor</a></div><div class="ttdoc">Concatenate layer descriptor.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_descriptors_8h_source.xhtml#l00037">LayerDescriptors.h:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_af65d66a907a0cd5a01a2dc4bd93de984"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#af65d66a907a0cd5a01a2dc4bd93de984">arm_compute::graph::GraphBuilder::add_fully_connected_layer</a></div><div class="ttdeci">static NodeID add_fully_connected_layer(Graph &amp;g, NodeParams params, NodeIdxPair input, unsigned int num_outputs, NodeID weights_nid, NodeID bias_nid=EmptyNodeID, const FullyConnectedLayerInfo fc_info=FullyConnectedLayerInfo(), const QuantizationInfo &amp;out_quant_info=QuantizationInfo(), FastMathHint fast_math_hint=FastMathHint::Disabled)</div><div class="ttdoc">Adds a fully connected layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00468">GraphBuilder.cpp:468</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a9e02d090f0b711a7adf97367606e6857"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a9e02d090f0b711a7adf97367606e6857">arm_compute::graph::GraphBuilder::add_bounding_box_transform_node</a></div><div class="ttdeci">static NodeID add_bounding_box_transform_node(Graph &amp;g, NodeParams params, NodeIdxPair input, NodeIdxPair deltas, BoundingBoxTransformInfo info)</div><div class="ttdoc">Adds a bounding box transform layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00200">GraphBuilder.cpp:200</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a3484452057c88a68b9242816b50a0687"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a3484452057c88a68b9242816b50a0687">arm_compute::graph::GraphBuilder::add_dummy_node</a></div><div class="ttdeci">static NodeID add_dummy_node(Graph &amp;g, NodeParams params, NodeIdxPair input, TensorShape shape)</div><div class="ttdoc">Adds a Dummy node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00443">GraphBuilder.cpp:443</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a96b9a9be8e6bc94f1a245d9625c5b596"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a96b9a9be8e6bc94f1a245d9625c5b596">arm_compute::graph::GraphBuilder::add_reshape_node</a></div><div class="ttdeci">static NodeID add_reshape_node(Graph &amp;g, NodeParams params, NodeIdxPair input, TensorShape shape)</div><div class="ttdoc">Adds a reshape layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00655">GraphBuilder.cpp:655</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_aeeebbfe02ab3fe0320a82d6c3413eeeb"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#aeeebbfe02ab3fe0320a82d6c3413eeeb">arm_compute::graph::GraphBuilder::add_roi_align_node</a></div><div class="ttdeci">static NodeID add_roi_align_node(Graph &amp;g, NodeParams params, NodeIdxPair input, NodeIdxPair rois, ROIPoolingLayerInfo pool_info)</div><div class="ttdoc">Adds a ROI align layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00666">GraphBuilder.cpp:666</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a6dc61dbaf7ce5612ac8d1566c1c222e3"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a6dc61dbaf7ce5612ac8d1566c1c222e3">arm_compute::graph::GraphBuilder::add_priorbox_node</a></div><div class="ttdeci">static NodeID add_priorbox_node(Graph &amp;g, NodeParams params, NodeIdxPair input0, NodeIdxPair input1, const PriorBoxLayerInfo &amp;prior_info)</div><div class="ttdoc">Adds a priorbox layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00625">GraphBuilder.cpp:625</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a819d4ebfd6c79e430f7dc0a5e5241203"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a819d4ebfd6c79e430f7dc0a5e5241203">arm_compute::graph::GraphBuilder::add_slice_node</a></div><div class="ttdeci">static NodeID add_slice_node(Graph &amp;g, NodeParams params, NodeIdxPair input, Coordinates &amp;starts, Coordinates &amp;ends)</div><div class="ttdoc">Adds a slice node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00715">GraphBuilder.cpp:715</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a1735fd3d9b774a2c92ca1619886d2ede"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a1735fd3d9b774a2c92ca1619886d2ede">arm_compute::graph::GraphBuilder::add_deconvolution_node</a></div><div class="ttdeci">static NodeID add_deconvolution_node(Graph &amp;g, NodeParams params, NodeIdxPair input, Size2D kernel_spatial_extend, unsigned int depth, PadStrideInfo deconv_info, ITensorAccessorUPtr weights_accessor=nullptr, ITensorAccessorUPtr bias_accessor=nullptr)</div><div class="ttdoc">Adds a deconvolution layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00276">GraphBuilder.cpp:276</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_pooling_layer_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_pooling_layer_info.xhtml">arm_compute::PoolingLayerInfo</a></div><div class="ttdoc">Pooling Layer Information struct.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01202">Types.h:1202</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a19b8128b8e78988834c00c4e9cd97c3e"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a19b8128b8e78988834c00c4e9cd97c3e">arm_compute::graph::GraphBuilder::add_channel_shuffle_node</a></div><div class="ttdeci">static NodeID add_channel_shuffle_node(Graph &amp;g, NodeParams params, NodeIdxPair input, unsigned int num_groups)</div><div class="ttdoc">Adds an channel shuffle layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00214">GraphBuilder.cpp:214</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_detection_output_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_detection_output_layer_info.xhtml">arm_compute::DetectionOutputLayerInfo</a></div><div class="ttdoc">Detection Output layer info.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00964">Types.h:964</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a193c384a821bc30573b13975eccbe58a"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a193c384a821bc30573b13975eccbe58a">arm_compute::graph::GraphBuilder::add_elementwise_node</a></div><div class="ttdeci">static NodeID add_elementwise_node(Graph &amp;g, NodeParams params, NodeIdxPair input0, NodeIdxPair input1, EltwiseOperation operation)</div><div class="ttdoc">Adds an element-wise layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00448">GraphBuilder.cpp:448</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_ac6ee8c6a5e3b98c697aacf55a251c986"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ac6ee8c6a5e3b98c697aacf55a251c986">arm_compute::graph::GraphBuilder::add_pad_node</a></div><div class="ttdeci">static NodeID add_pad_node(Graph &amp;g, NodeParams params, NodeIdxPair input, const PaddingList &amp;paddings, PixelValue pad_value=PixelValue())</div><div class="ttdoc">Adds a pad layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00591">GraphBuilder.cpp:591</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241">arm_compute::graph::FastMathHint::Disabled</a></div><div class="ttdeci">@ Disabled</div><div class="ttdoc">Fast math disabled for Convolution layer.</div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a50410fc54c8540887d600849043327d5"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a50410fc54c8540887d600849043327d5">arm_compute::graph::GraphBuilder::add_dequantization_node</a></div><div class="ttdeci">static NodeID add_dequantization_node(Graph &amp;g, NodeParams params, NodeIdxPair input)</div><div class="ttdoc">Adds a dequantization node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00391">GraphBuilder.cpp:391</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a41c3f59161734b8492782359f583b676"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">arm_compute::graph::ITensorAccessorUPtr</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorAccessor &gt; ITensorAccessorUPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_accessor_8h_source.xhtml#l00058">ITensorAccessor.h:58</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a69a669c24a8f0db98f3f980e161ab890"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a69a669c24a8f0db98f3f980e161ab890">arm_compute::graph::GraphBuilder::add_print_node</a></div><div class="ttdeci">static NodeID add_print_node(Graph &amp;g, NodeParams params, NodeIdxPair input, std::ostream &amp;stream, const IOFormatInfo &amp;format_info=IOFormatInfo(), const std::function&lt; ITensor *(ITensor *)&gt; transform=nullptr)</div><div class="ttdoc">Adds a print layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00620">GraphBuilder.cpp:620</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_prior_box_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml">arm_compute::PriorBoxLayerInfo</a></div><div class="ttdoc">PriorBox layer info.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00827">Types.h:827</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a7396e101536756a6aaf05f043a6f0b13"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a7396e101536756a6aaf05f043a6f0b13">arm_compute::graph::GraphBuilder::add_scale_layer</a></div><div class="ttdeci">static NodeID add_scale_layer(Graph &amp;g, const NodeParams &amp;params, NodeIdxPair input, ITensorAccessorUPtr mul_accessor=nullptr, ITensorAccessorUPtr add_accessor=nullptr)</div><div class="ttdoc">Adds a scale layer node to the graph This layer computes a product of the input with a scale (read fr...</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00680">GraphBuilder.cpp:680</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item.</div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a6bf51d4ae4adaffc5511b756d27ae069"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a6bf51d4ae4adaffc5511b756d27ae069">arm_compute::graph::GraphBuilder::add_l2_normalize_node</a></div><div class="ttdeci">static NodeID add_l2_normalize_node(Graph &amp;g, NodeParams params, NodeIdxPair input, int axis, float epsilon)</div><div class="ttdoc">Adds a L2 Normalize layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00555">GraphBuilder.cpp:555</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00671">Types.h:671</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_detection_post_process_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_detection_post_process_layer_info.xhtml">arm_compute::DetectionPostProcessLayerInfo</a></div><div class="ttdoc">Detection Output layer info.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01083">Types.h:1083</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_bounding_box_transform_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_bounding_box_transform_info.xhtml">arm_compute::BoundingBoxTransformInfo</a></div><div class="ttdoc">Bounding Box Transform information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01592">Types.h:1592</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a56952a8591a9d8481450ae707ae355e7"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">arm_compute::graph::NodeID</a></div><div class="ttdeci">unsigned int NodeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00069">Types.h:69</a></div></div>
<div class="ttc" id="aarm__compute_2graph_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_ac85a46f3ebd3ab09f576a994ac2dce11"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">arm_compute::graph::FastMathHint</a></div><div class="ttdeci">FastMathHint</div><div class="ttdoc">Enable or disable fast math for Convolution layer.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00143">Types.h:143</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a2270b3e1d20651d2d8341c858c890830"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a2270b3e1d20651d2d8341c858c890830">arm_compute::test::validation::num_groups</a></div><div class="ttdeci">const unsigned int num_groups</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00153">Im2Col.cpp:153</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a2bf294b4d12b6430e4e6b6ba8db8273b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a2bf294b4d12b6430e4e6b6ba8db8273b">arm_compute::graph::GraphBuilder::add_normalize_planar_yuv_node</a></div><div class="ttdeci">static NodeID add_normalize_planar_yuv_node(Graph &amp;g, NodeParams params, NodeIdxPair input, ITensorAccessorUPtr mean_accessor=nullptr, ITensorAccessorUPtr std_accessor=nullptr)</div><div class="ttdoc">Adds a normalize planar YUV layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00565">GraphBuilder.cpp:565</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517d"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">arm_compute::graph::ConvolutionMethod</a></div><div class="ttdeci">ConvolutionMethod</div><div class="ttdoc">Supported Convolution layer methods.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00126">Types.h:126</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_aa7b1756a674d54d96df4e02a31169082"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#aa7b1756a674d54d96df4e02a31169082">arm_compute::graph::GraphBuilder::add_const_node</a></div><div class="ttdeci">static NodeID add_const_node(Graph &amp;g, NodeParams params, const TensorDescriptor &amp;desc, ITensorAccessorUPtr accessor=nullptr)</div><div class="ttdoc">Adds a Const node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00108">GraphBuilder.cpp:108</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml">arm_compute::NormalizationLayerInfo</a></div><div class="ttdoc">Normalization Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01867">Types.h:1867</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_i_o_format_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml">arm_compute::IOFormatInfo</a></div><div class="ttdoc">IO formatting information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02660">Types.h:2660</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a00525ff582f16038a1d3819aa44a23a3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">const auto conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00407">ConvolutionLayer.cpp:407</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_tensor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">arm_compute::graph::TensorDescriptor</a></div><div class="ttdoc">Tensor metadata class.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00038">TensorDescriptor.h:38</a></div></div>
<div class="ttc" id="a_i_tensor_accessor_8h_xhtml"><div class="ttname"><a href="_i_tensor_accessor_8h.xhtml">ITensorAccessor.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_ac663bef61cee6df859e8a441a9fa9c0d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ac663bef61cee6df859e8a441a9fa9c0d">arm_compute::graph::GraphBuilder::add_arg_min_max_node</a></div><div class="ttdeci">static NodeID add_arg_min_max_node(Graph &amp;g, NodeParams params, NodeIdxPair input, ReductionOperation op, unsigned int axis, DataType out_data_type=DataType::UNKNOWN, const QuantizationInfo &amp;out_quant_info=QuantizationInfo())</div><div class="ttdoc">Adds an activation layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00142">GraphBuilder.cpp:142</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_strided_slice_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_strided_slice_layer_info.xhtml">arm_compute::StridedSliceLayerInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01946">Types.h:1946</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_ab52fa970654d32e0c0621cf718a6861f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ab52fa970654d32e0c0621cf718a6861f">arm_compute::graph::GraphBuilder::add_pooling_node</a></div><div class="ttdeci">static NodeID add_pooling_node(Graph &amp;g, NodeParams params, NodeIdxPair input, PoolingLayerInfo pool_info)</div><div class="ttdoc">Adds a pooling layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00615">GraphBuilder.cpp:615</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml">arm_compute::graph::Graph</a></div><div class="ttdoc">Graph class.</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_graph_8h_source.xhtml#l00053">Graph.h:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a3494a111bde4adf09b7bcb3648981e9f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a3494a111bde4adf09b7bcb3648981e9f">arm_compute::graph::GraphBuilder::add_reduction_operation_node</a></div><div class="ttdeci">static NodeID add_reduction_operation_node(Graph &amp;g, NodeParams params, NodeIdxPair input, ReductionOperation op, int axis, bool keep_dims=true)</div><div class="ttdoc">Adds a reduction sum layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00645">GraphBuilder.cpp:645</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_ab37711b90876e57bfcade525e3233c4d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ab37711b90876e57bfcade525e3233c4d">arm_compute::graph::GraphBuilder::add_strided_slice_node</a></div><div class="ttdeci">static NodeID add_strided_slice_node(Graph &amp;g, NodeParams params, NodeIdxPair input, Coordinates &amp;starts, Coordinates &amp;ends, BiStrides &amp;strides, StridedSliceLayerInfo info)</div><div class="ttdoc">Adds a strided slice node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00725">GraphBuilder.cpp:725</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a17fe8b7f4dbd6cf0747ab9d328a56f88"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a17fe8b7f4dbd6cf0747ab9d328a56f88">arm_compute::graph::GraphBuilder::add_detection_post_process_node</a></div><div class="ttdeci">static NodeID add_detection_post_process_node(Graph &amp;g, NodeParams params, NodeIdxPair input_box_encoding, NodeIdxPair input_class_prediction, const DetectionPostProcessLayerInfo &amp;detect_info, ITensorAccessorUPtr anchors_accessor=nullptr, const QuantizationInfo &amp;anchor_quant_info=QuantizationInfo())</div><div class="ttdoc">Adds a detection post process layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00413">GraphBuilder.cpp:413</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a696b031073e74bf2cb98e5ef201d4aa3">arm_compute::DataLayout::UNKNOWN</a></div><div class="ttdeci">@ UNKNOWN</div><div class="ttdoc">Unknown data layout.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a75ce9b1baad4303a53124d6f0795821f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">arm_compute::graph::DepthwiseConvolutionMethod</a></div><div class="ttdeci">DepthwiseConvolutionMethod</div><div class="ttdoc">Supported Depthwise Convolution layer methods.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00135">Types.h:135</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a75ce9b1baad4303a53124d6f0795821fa7a1920d61156abc05a60135aefe8bc67"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa7a1920d61156abc05a60135aefe8bc67">arm_compute::graph::DepthwiseConvolutionMethod::Default</a></div><div class="ttdeci">@ Default</div><div class="ttdoc">Default approach using internal heuristics.</div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_af06fa4df1027c97658c0c26570b2bdb5"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#af06fa4df1027c97658c0c26570b2bdb5">arm_compute::graph::GraphBuilder::add_softmax_node</a></div><div class="ttdeci">static NodeID add_softmax_node(Graph &amp;g, NodeParams params, NodeIdxPair input, float beta=1.f)</div><div class="ttdoc">Adds a softmax node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00710">GraphBuilder.cpp:710</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_aa12973876c037bddff8e9ece94aca0e4"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4">arm_compute::graph::EltwiseOperation</a></div><div class="ttdeci">EltwiseOperation</div><div class="ttdoc">Supported Element-wise operations.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00109">Types.h:109</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a696b031073e74bf2cb98e5ef201d4aa3">arm_compute::DataType::UNKNOWN</a></div><div class="ttdeci">@ UNKNOWN</div><div class="ttdoc">Unknown data type.</div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_builder_xhtml_a0db6223a8a4c44a263fbc5e9ec039e18"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a0db6223a8a4c44a263fbc5e9ec039e18">arm_compute::graph::GraphBuilder::add_output_node</a></div><div class="ttdeci">static NodeID add_output_node(Graph &amp;g, NodeParams params, NodeIdxPair input, ITensorAccessorUPtr accessor=nullptr)</div><div class="ttdoc">Adds an output layer node to the graph.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_builder_8cpp_source.xhtml#l00124">GraphBuilder.cpp:124</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_aad3f5296ec88b9d552c109b04b89ad9f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">arm_compute::graph::EmptyNodeID</a></div><div class="ttdeci">constexpr NodeID EmptyNodeID</div><div class="ttdoc">Constant EdgeID specifying an equivalent of null edge.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00076">Types.h:76</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_r_o_i_pooling_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml">arm_compute::ROIPoolingLayerInfo</a></div><div class="ttdoc">ROI Pooling Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01418">Types.h:1418</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_generate_proposals_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_generate_proposals_info.xhtml">arm_compute::GenerateProposalsInfo</a></div><div class="ttdoc">Generate Proposals Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01461">Types.h:1461</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1quantization_xhtml_a552dc3787d7ea1675f3e4e8993501d58"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">arm_compute::quantization::epsilon</a></div><div class="ttdeci">constexpr float epsilon</div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00038">AsymmHelpers.cpp:38</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_99ae3712d1eecd2a93fc4d38b59a99ba.xhtml">graph</a></li><li class="navelem"><a class="el" href="_graph_builder_8h.xhtml">GraphBuilder.h</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
