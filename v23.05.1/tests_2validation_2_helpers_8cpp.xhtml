<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/Helpers.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('tests_2validation_2_helpers_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Helpers.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="tests_2validation_2_helpers_8h_source.xhtml">tests/validation/Helpers.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &lt;algorithm&gt;</code><br />
<code>#include &lt;cmath&gt;</code><br />
</div>
<p><a href="tests_2validation_2_helpers_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a07000b60b919e8d30b8f1a6411a0fe7d"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a07000b60b919e8d30b8f1a6411a0fe7d"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; float &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a07000b60b919e8d30b8f1a6411a0fe7d">convert_from_asymmetric</a> (const SimpleTensor&lt; uint8_t &gt; &amp;src)</td></tr>
<tr class="separator:a07000b60b919e8d30b8f1a6411a0fe7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88c22d7519929fd10c9e6567be21a73a"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a88c22d7519929fd10c9e6567be21a73a"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; float &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a88c22d7519929fd10c9e6567be21a73a">convert_from_asymmetric</a> (const SimpleTensor&lt; int8_t &gt; &amp;src)</td></tr>
<tr class="separator:a88c22d7519929fd10c9e6567be21a73a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa89bc99110f99709c1ea6aca06920c59"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:aa89bc99110f99709c1ea6aca06920c59"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; float &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa89bc99110f99709c1ea6aca06920c59">convert_from_asymmetric</a> (const SimpleTensor&lt; uint16_t &gt; &amp;src)</td></tr>
<tr class="separator:aa89bc99110f99709c1ea6aca06920c59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34a5f9a42912e7e48ca4a2547d24ab35"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a34a5f9a42912e7e48ca4a2547d24ab35"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; uint8_t &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a34a5f9a42912e7e48ca4a2547d24ab35">convert_to_asymmetric</a> (const SimpleTensor&lt; float &gt; &amp;src, const QuantizationInfo &amp;quantization_info)</td></tr>
<tr class="separator:a34a5f9a42912e7e48ca4a2547d24ab35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef1e9673f1e6ab63fb71e3698884f0c4"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:aef1e9673f1e6ab63fb71e3698884f0c4"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; int16_t &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aef1e9673f1e6ab63fb71e3698884f0c4">convert_to_symmetric</a> (const SimpleTensor&lt; float &gt; &amp;src, const QuantizationInfo &amp;quantization_info)</td></tr>
<tr class="separator:aef1e9673f1e6ab63fb71e3698884f0c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07dd201dc80490616bfe2d3f02c34b88"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a07dd201dc80490616bfe2d3f02c34b88"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; float &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a07dd201dc80490616bfe2d3f02c34b88">convert_from_symmetric</a> (const SimpleTensor&lt; int16_t &gt; &amp;src)</td></tr>
<tr class="separator:a07dd201dc80490616bfe2d3f02c34b88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a683cf9b1a237f2d8326735a1c5e881ed"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a683cf9b1a237f2d8326735a1c5e881ed"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a683cf9b1a237f2d8326735a1c5e881ed">matrix_multiply</a> (const SimpleTensor&lt; T &gt; &amp;a, const SimpleTensor&lt; T &gt; &amp;b, SimpleTensor&lt; T &gt; &amp;out)</td></tr>
<tr class="memdesc:a683cf9b1a237f2d8326735a1c5e881ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Matrix multiply between 2 float simple tensors.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a683cf9b1a237f2d8326735a1c5e881ed">More...</a><br /></td></tr>
<tr class="separator:a683cf9b1a237f2d8326735a1c5e881ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67a7d3407f0ab92d1c80ccd0ea8908e0"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a67a7d3407f0ab92d1c80ccd0ea8908e0"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a67a7d3407f0ab92d1c80ccd0ea8908e0">transpose_matrix</a> (const SimpleTensor&lt; T &gt; &amp;in, SimpleTensor&lt; T &gt; &amp;out)</td></tr>
<tr class="memdesc:a67a7d3407f0ab92d1c80ccd0ea8908e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transpose matrix.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a67a7d3407f0ab92d1c80ccd0ea8908e0">More...</a><br /></td></tr>
<tr class="separator:a67a7d3407f0ab92d1c80ccd0ea8908e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9399f3f1910e0f236cd6f4613bd4397"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ab9399f3f1910e0f236cd6f4613bd4397"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab9399f3f1910e0f236cd6f4613bd4397">get_tile</a> (const SimpleTensor&lt; T &gt; &amp;in, SimpleTensor&lt; T &gt; &amp;tile, const Coordinates &amp;coord)</td></tr>
<tr class="memdesc:ab9399f3f1910e0f236cd6f4613bd4397"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a 2D tile from a tensor.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab9399f3f1910e0f236cd6f4613bd4397">More...</a><br /></td></tr>
<tr class="separator:ab9399f3f1910e0f236cd6f4613bd4397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1e0de8172e8e875f08d040d03b164a5"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:af1e0de8172e8e875f08d040d03b164a5"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af1e0de8172e8e875f08d040d03b164a5">zeros</a> (SimpleTensor&lt; T &gt; &amp;in, const Coordinates &amp;anchor, const TensorShape &amp;shape)</td></tr>
<tr class="memdesc:af1e0de8172e8e875f08d040d03b164a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill with zeros the input tensor in the area defined by anchor and shape.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#af1e0de8172e8e875f08d040d03b164a5">More...</a><br /></td></tr>
<tr class="separator:af1e0de8172e8e875f08d040d03b164a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55866d648f6da2a3aaf3965bd1685868"><td class="memItemLeft" align="right" valign="top">std::pair&lt; int, int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55866d648f6da2a3aaf3965bd1685868">get_quantized_bounds</a> (const QuantizationInfo &amp;quant_info, float min, float max)</td></tr>
<tr class="memdesc:a55866d648f6da2a3aaf3965bd1685868"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to compute quantized min and max bounds.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a55866d648f6da2a3aaf3965bd1685868">More...</a><br /></td></tr>
<tr class="separator:a55866d648f6da2a3aaf3965bd1685868"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f8bde11d609cd616779df8f1ad7a2ec"><td class="memItemLeft" align="right" valign="top">std::pair&lt; int, int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3f8bde11d609cd616779df8f1ad7a2ec">get_quantized_qasymm8_signed_bounds</a> (const QuantizationInfo &amp;quant_info, float min, float max)</td></tr>
<tr class="memdesc:a3f8bde11d609cd616779df8f1ad7a2ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to compute asymmetric quantized signed min and max bounds.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3f8bde11d609cd616779df8f1ad7a2ec">More...</a><br /></td></tr>
<tr class="separator:a3f8bde11d609cd616779df8f1ad7a2ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7075ff9f78b0d90bbe428f1406d669b"><td class="memItemLeft" align="right" valign="top">std::pair&lt; int, int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7075ff9f78b0d90bbe428f1406d669b">get_symm_quantized_per_channel_bounds</a> (const QuantizationInfo &amp;quant_info, float min, float max, size_t channel_id=0)</td></tr>
<tr class="memdesc:ae7075ff9f78b0d90bbe428f1406d669b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to compute symmetric quantized min and max bounds.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7075ff9f78b0d90bbe428f1406d669b">More...</a><br /></td></tr>
<tr class="separator:ae7075ff9f78b0d90bbe428f1406d669b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16c64fbc3051e1827aae916d6d26d280"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a16c64fbc3051e1827aae916d6d26d280">add_padding_x</a> (std::initializer_list&lt; ITensor * &gt; tensors, const DataLayout &amp;data_layout=DataLayout::NHWC, bool only_right_pad=false)</td></tr>
<tr class="memdesc:a16c64fbc3051e1827aae916d6d26d280"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add random padding along the X axis (between 1 and 16 columns per side) to all the input tensors.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a16c64fbc3051e1827aae916d6d26d280">More...</a><br /></td></tr>
<tr class="separator:a16c64fbc3051e1827aae916d6d26d280"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8a9442d04523985994ff83aebc5927d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa8a9442d04523985994ff83aebc5927d">add_padding_y</a> (std::initializer_list&lt; ITensor * &gt; tensors, const DataLayout &amp;data_layout=DataLayout::NHWC)</td></tr>
<tr class="memdesc:aa8a9442d04523985994ff83aebc5927d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add random padding along the Y axis (between 1 and 4 rows per side) to all the input tensors.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa8a9442d04523985994ff83aebc5927d">More...</a><br /></td></tr>
<tr class="separator:aa8a9442d04523985994ff83aebc5927d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e5f302ee65dc6a73f50f1597b72d0e5"><td class="memItemLeft" align="right" valign="top">QuantizationInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9e5f302ee65dc6a73f50f1597b72d0e5">calculate_mat_mul_dst_q_info</a> (const QuantizationInfo &amp;lhs_q_info, const QuantizationInfo &amp;rhs_q_info, int m, int n, int k, DataType data_type)</td></tr>
<tr class="memdesc:a9e5f302ee65dc6a73f50f1597b72d0e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">For MatMulLowp, given the Lhs/Rhs matrix quantization informations and the matrix multiplication dimensions, calculate a suitable output quantization for obtaining non-saturated outputs with high probability.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a9e5f302ee65dc6a73f50f1597b72d0e5">More...</a><br /></td></tr>
<tr class="separator:a9e5f302ee65dc6a73f50f1597b72d0e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7159671a452710595f7d01e69aef7a13"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7159671a452710595f7d01e69aef7a13">get_tile</a> (const SimpleTensor&lt; float &gt; &amp;in, SimpleTensor&lt; float &gt; &amp;roi, const Coordinates &amp;coord)</td></tr>
<tr class="separator:a7159671a452710595f7d01e69aef7a13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f24eb9f64c22d82f465dfe37aceb3f0"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0f24eb9f64c22d82f465dfe37aceb3f0">get_tile</a> (const SimpleTensor&lt; half &gt; &amp;in, SimpleTensor&lt; half &gt; &amp;roi, const Coordinates &amp;coord)</td></tr>
<tr class="separator:a0f24eb9f64c22d82f465dfe37aceb3f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab845254df9508ca05606545601bebb96"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab845254df9508ca05606545601bebb96">get_tile</a> (const SimpleTensor&lt; int &gt; &amp;in, SimpleTensor&lt; int &gt; &amp;roi, const Coordinates &amp;coord)</td></tr>
<tr class="separator:ab845254df9508ca05606545601bebb96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e68979a4a28002408d66ebed77b22cf"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2e68979a4a28002408d66ebed77b22cf">get_tile</a> (const SimpleTensor&lt; short &gt; &amp;in, SimpleTensor&lt; short &gt; &amp;roi, const Coordinates &amp;coord)</td></tr>
<tr class="separator:a2e68979a4a28002408d66ebed77b22cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3cb2c28c295494199dc2d805e26e7e2"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3cb2c28c295494199dc2d805e26e7e2">get_tile</a> (const SimpleTensor&lt; char &gt; &amp;in, SimpleTensor&lt; char &gt; &amp;roi, const Coordinates &amp;coord)</td></tr>
<tr class="separator:ad3cb2c28c295494199dc2d805e26e7e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab17c3c69a66d5ffed29f3aea46ef5d0d"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab17c3c69a66d5ffed29f3aea46ef5d0d">zeros</a> (SimpleTensor&lt; float &gt; &amp;in, const Coordinates &amp;anchor, const TensorShape &amp;shape)</td></tr>
<tr class="separator:ab17c3c69a66d5ffed29f3aea46ef5d0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a709829132891ed783e63a5bc57ff4f80"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a709829132891ed783e63a5bc57ff4f80">zeros</a> (SimpleTensor&lt; half &gt; &amp;in, const Coordinates &amp;anchor, const TensorShape &amp;shape)</td></tr>
<tr class="separator:a709829132891ed783e63a5bc57ff4f80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3504d3f18cbbb19ff4b1121e84dc413c"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3504d3f18cbbb19ff4b1121e84dc413c">transpose_matrix</a> (const SimpleTensor&lt; float &gt; &amp;in, SimpleTensor&lt; float &gt; &amp;out)</td></tr>
<tr class="separator:a3504d3f18cbbb19ff4b1121e84dc413c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a203237186c311cd8da9b7d1db55ae233"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a203237186c311cd8da9b7d1db55ae233">transpose_matrix</a> (const SimpleTensor&lt; half &gt; &amp;in, SimpleTensor&lt; half &gt; &amp;out)</td></tr>
<tr class="separator:a203237186c311cd8da9b7d1db55ae233"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0b43509ac50f9dc4ec5a8f1e5e1fde9"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab0b43509ac50f9dc4ec5a8f1e5e1fde9">transpose_matrix</a> (const SimpleTensor&lt; int &gt; &amp;in, SimpleTensor&lt; int &gt; &amp;out)</td></tr>
<tr class="separator:ab0b43509ac50f9dc4ec5a8f1e5e1fde9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68386c510af4857cad710ab1310ae204"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a68386c510af4857cad710ab1310ae204">transpose_matrix</a> (const SimpleTensor&lt; short &gt; &amp;in, SimpleTensor&lt; short &gt; &amp;out)</td></tr>
<tr class="separator:a68386c510af4857cad710ab1310ae204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ca66d53da04b889dcc34e650784ab9c"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0ca66d53da04b889dcc34e650784ab9c">transpose_matrix</a> (const SimpleTensor&lt; char &gt; &amp;in, SimpleTensor&lt; char &gt; &amp;out)</td></tr>
<tr class="separator:a0ca66d53da04b889dcc34e650784ab9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19548f1b324d9d569ab2bd369b2d83bc"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a19548f1b324d9d569ab2bd369b2d83bc">transpose_matrix</a> (const SimpleTensor&lt; int8_t &gt; &amp;in, SimpleTensor&lt; int8_t &gt; &amp;out)</td></tr>
<tr class="separator:a19548f1b324d9d569ab2bd369b2d83bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2f225b06ada526e8ebf1c15de9a8877"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa2f225b06ada526e8ebf1c15de9a8877">transpose_matrix</a> (const SimpleTensor&lt; uint8_t &gt; &amp;in, SimpleTensor&lt; uint8_t &gt; &amp;out)</td></tr>
<tr class="separator:aa2f225b06ada526e8ebf1c15de9a8877"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbc4dbbbef320e2c708b895d5a26194e"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acbc4dbbbef320e2c708b895d5a26194e">matrix_multiply</a> (const SimpleTensor&lt; float &gt; &amp;a, const SimpleTensor&lt; float &gt; &amp;b, SimpleTensor&lt; float &gt; &amp;out)</td></tr>
<tr class="separator:acbc4dbbbef320e2c708b895d5a26194e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac15bf271877edef9823306e4d1cb43f5"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac15bf271877edef9823306e4d1cb43f5">matrix_multiply</a> (const SimpleTensor&lt; half &gt; &amp;a, const SimpleTensor&lt; half &gt; &amp;b, SimpleTensor&lt; half &gt; &amp;out)</td></tr>
<tr class="separator:ac15bf271877edef9823306e4d1cb43f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="tests_2validation_2_helpers_8cpp.xhtml">Helpers.cpp</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:21 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
