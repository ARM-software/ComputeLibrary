<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClGemmConv2d Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClGemmConv2d Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to compute the convolution layer.  
 <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_cl_gemm_conv2d_8h_source.xhtml">ClGemmConv2d.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ClGemmConv2d:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d__coll__graph.svg" width="139" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac6af4420b8ec5eaac7e7f208d28bce14"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#ac6af4420b8ec5eaac7e7f208d28bce14">ClGemmConv2d</a> ()</td></tr>
<tr class="memdesc:ac6af4420b8ec5eaac7e7f208d28bce14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#ac6af4420b8ec5eaac7e7f208d28bce14">More...</a><br /></td></tr>
<tr class="separator:ac6af4420b8ec5eaac7e7f208d28bce14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa2a1f960c6938d9f5595c5135f9e672"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#afa2a1f960c6938d9f5595c5135f9e672">ClGemmConv2d</a> (const <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> &amp;)=delete</td></tr>
<tr class="memdesc:afa2a1f960c6938d9f5595c5135f9e672"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#afa2a1f960c6938d9f5595c5135f9e672">More...</a><br /></td></tr>
<tr class="separator:afa2a1f960c6938d9f5595c5135f9e672"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f08a4e475db730a705f47376bb7b7d3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a7f08a4e475db730a705f47376bb7b7d3">ClGemmConv2d</a> (<a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a7f08a4e475db730a705f47376bb7b7d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a7f08a4e475db730a705f47376bb7b7d3">More...</a><br /></td></tr>
<tr class="separator:a7f08a4e475db730a705f47376bb7b7d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b57c95f96237eb42570587efbcbb654"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a1b57c95f96237eb42570587efbcbb654">operator=</a> (const <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> &amp;)=delete</td></tr>
<tr class="memdesc:a1b57c95f96237eb42570587efbcbb654"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a1b57c95f96237eb42570587efbcbb654">More...</a><br /></td></tr>
<tr class="separator:a1b57c95f96237eb42570587efbcbb654"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68218f6483059e86fcdb138d393dd888"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a68218f6483059e86fcdb138d393dd888">operator=</a> (<a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a68218f6483059e86fcdb138d393dd888"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a68218f6483059e86fcdb138d393dd888">More...</a><br /></td></tr>
<tr class="separator:a68218f6483059e86fcdb138d393dd888"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa123be56eb6d9fe4416e2519d9fbb6ea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#aa123be56eb6d9fe4416e2519d9fbb6ea">~ClGemmConv2d</a> ()</td></tr>
<tr class="memdesc:aa123be56eb6d9fe4416e2519d9fbb6ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#aa123be56eb6d9fe4416e2519d9fbb6ea">More...</a><br /></td></tr>
<tr class="separator:aa123be56eb6d9fe4416e2519d9fbb6ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa22fbe196634480f5cbcde5fd221bcd0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#aa22fbe196634480f5cbcde5fd221bcd0">configure</a> (const <a class="el" href="namespacearm__compute_1_1opencl.xhtml#af2338d0e6431214214ef2b6bb9812131">ClCompileContext</a> &amp;compile_context, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, const <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> &amp;conv2d_info, const <a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> &amp;weights_info=<a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>())</td></tr>
<tr class="memdesc:aa22fbe196634480f5cbcde5fd221bcd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the input and output tensors.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#aa22fbe196634480f5cbcde5fd221bcd0">More...</a><br /></td></tr>
<tr class="separator:aa22fbe196634480f5cbcde5fd221bcd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684a54d1fb1634a348a585c6b5e76df0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">run</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) override</td></tr>
<tr class="memdesc:a684a54d1fb1634a348a585c6b5e76df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">More...</a><br /></td></tr>
<tr class="separator:a684a54d1fb1634a348a585c6b5e76df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;constants) override</td></tr>
<tr class="memdesc:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">More...</a><br /></td></tr>
<tr class="separator:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74ae0d6e96f38fecd38471431786b870"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">workspace</a> () const override</td></tr>
<tr class="memdesc:a74ae0d6e96f38fecd38471431786b870"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the memory requirements required by the workspace.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">More...</a><br /></td></tr>
<tr class="separator:a74ae0d6e96f38fecd38471431786b870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a></td></tr>
<tr class="memitem:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#ac4ed47b6e86464a36585094de41f1bc4">ICLOperator</a> (<a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#ac4ed47b6e86464a36585094de41f1bc4">More...</a><br /></td></tr>
<tr class="separator:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a219a51d9e81ee889a97cf4fdceb70dca">ICLOperator</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a219a51d9e81ee889a97cf4fdceb70dca">More...</a><br /></td></tr>
<tr class="separator:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a4f9ec2decc6780c6fd9b67f3e9ef9e77">ICLOperator</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a4f9ec2decc6780c6fd9b67f3e9ef9e77">More...</a><br /></td></tr>
<tr class="separator:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a3acfe6ff0d707c408bd2d8a111e2a7c4">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a3acfe6ff0d707c408bd2d8a111e2a7c4">More...</a><br /></td></tr>
<tr class="separator:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#af2f26be13d5bb74bf2ac7e8b3bd65b17">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#af2f26be13d5bb74bf2ac7e8b3bd65b17">More...</a><br /></td></tr>
<tr class="separator:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a></td></tr>
<tr class="memitem:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">~IOperator</a> ()=default</td></tr>
<tr class="memdesc:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">More...</a><br /></td></tr>
<tr class="separator:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a14e5abb1362cd11fa6407ae2aaddc8e9"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a14e5abb1362cd11fa6407ae2aaddc8e9">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, const <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> &amp;conv2d_info, const <a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> &amp;weights_info=<a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>())</td></tr>
<tr class="memdesc:a14e5abb1362cd11fa6407ae2aaddc8e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a14e5abb1362cd11fa6407ae2aaddc8e9">More...</a><br /></td></tr>
<tr class="separator:a14e5abb1362cd11fa6407ae2aaddc8e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to compute the convolution layer. </p>
<p>This function calls the following OpenCL kernels/functions:</p>
<ol type="1">
<li><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_im2_col_kernel.xhtml">opencl::kernels::ClIm2ColKernel</a></li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml">ClGemm</a> (if the data type is FP32 or FP16)</li>
<li><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml">CLGEMMLowpMatrixMultiplyCore</a> (if the data type is QASYMM8/QASYMM8_SIGNED)</li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_output_stage.xhtml">ClGemmLowpOutputStage</a> with QUANTIZE_DOWN_FIXEDPOINT type of quantization (if the data type is QASYMM8/QASYMM8_SIGNED)</li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_col2_im_kernel.xhtml">opencl::kernels::ClCol2ImKernel</a> (if NCHW data layout)</li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_activation_kernel.xhtml">opencl::kernels::ClActivationKernel</a> </li>
</ol>

<p class="definition">Definition at line <a class="el" href="_cl_gemm_conv2d_8h_source.xhtml#l00059">59</a> of file <a class="el" href="_cl_gemm_conv2d_8h_source.xhtml">ClGemmConv2d.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac6af4420b8ec5eaac7e7f208d28bce14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6af4420b8ec5eaac7e7f208d28bce14">&#9670;&nbsp;</a></span>ClGemmConv2d() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml">ClGemmConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    : _weights_reshape_kernel(<span class="keyword">nullptr</span>), _im2col_kernel(<span class="keyword">nullptr</span>), _mm_gemm(<span class="keyword">nullptr</span>), _mm_gemmlowp(<span class="keyword">nullptr</span>), _col2im_kernel(<span class="keyword">nullptr</span>), _activation_kernel(<span class="keyword">nullptr</span>), _im2col_output(), _weights_reshaped(),</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      _gemm_output(), _skip_im2col(<span class="keyword">false</span>), _skip_col2im(<span class="keyword">false</span>), _is_quantized(<span class="keyword">false</span>), _fuse_activation(<span class="keyword">true</span>), _append_bias(<span class="keyword">false</span>), _is_prepared(<span class="keyword">false</span>), _use_post_ops(<span class="keyword">false</span>), _aux_mem(AuxTensorIdx::Count)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="afa2a1f960c6938d9f5595c5135f9e672"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa2a1f960c6938d9f5595c5135f9e672">&#9670;&nbsp;</a></span>ClGemmConv2d() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a7f08a4e475db730a705f47376bb7b7d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f08a4e475db730a705f47376bb7b7d3">&#9670;&nbsp;</a></span>ClGemmConv2d() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move constructor. </p>

</div>
</div>
<a id="aa123be56eb6d9fe4416e2519d9fbb6ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa123be56eb6d9fe4416e2519d9fbb6ea">&#9670;&nbsp;</a></span>~ClGemmConv2d()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa22fbe196634480f5cbcde5fd221bcd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa22fbe196634480f5cbcde5fd221bcd0">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1opencl.xhtml#af2338d0e6431214214ef2b6bb9812131">ClCompileContext</a> &amp;&#160;</td>
          <td class="paramname"><em>compile_context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>conv2d_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights_info</em> = <code><a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the input and output tensors. </p>
<p>Valid data layouts:</p><ul>
<li>NHWC</li>
<li>NCHW</li>
</ul>
<p>Valid data type configurations: </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadLeft">src0 </th><th class="markdownTableHeadLeft">src1 </th><th class="markdownTableHeadLeft">src2 </th><th class="markdownTableHeadLeft">dst  </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">F16 </td><td class="markdownTableBodyLeft">F16 </td><td class="markdownTableBodyLeft">F16 </td><td class="markdownTableBodyLeft">F16  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">F32 </td><td class="markdownTableBodyLeft">F32 </td><td class="markdownTableBodyLeft">F32 </td><td class="markdownTableBodyLeft">F32  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QASYMM8  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">QSYMM8_PER_CHANNEL </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QASYMM8  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">QSYMM8_PER_CHANNEL </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED  </td></tr>
</table>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">compile_context</td><td>The compile context to be used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Source tensor info. 3 lower dimensions represent a single input [width, height, IFM], while every optional dimension from 4 and above represent a batch of inputs. Data types supported: QASYMM8/QASYMM8_SIGNED/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>Weights tensor info. Weights are 4D tensor with dimensions [kernel_x, kernel_y, IFM, OFM]. Data type supported: Same as <code>input</code> or QASYMM8/QSYMM8_PER_CHANNEL when <code>input</code> is QASYMM8 or QASYMM8_SIGNED/QSYMM8_PER_CHANNEL when <code>input</code> is QASYMM8_SIGNED. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">biases</td><td>Biases tensor info. Shared biases supported. Biases are 1D tensor with dimensions [OFM]. Data type supported: Should match <code>input</code> data type, except for input of quantized type where biases should be of S32 type. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst</td><td>Destination tensor info. 3 lower dimensions represent a single output [width, height, OFM], while the rest represent batch of outputs. Data types supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">conv2d_info</td><td>Contains convolution 2d info described in <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights_info</td><td>Specifies if the weights tensor has been reshaped with CLWeightsReshapeKernel. If this is not part of the fully connected layer the weights tensor has also been transposed with CLGEMMReshapeRHSMatrixKernel. Data type supported: Same as <code>input</code>. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">162</a> of file <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml">ClGemmConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a14e5abb1362cd11fa6407ae2aaddc8e9">ClGemmConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                                                      conv2d_info,</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                                      <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>));</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type();</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>   = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        idx_kernels = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a628bcf7e10fc1c2a984f379a1ec3393a">DataLayoutDimension::BATCHES</a>);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernel_width  = weights-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernel_height = weights-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_kernels   = weights-&gt;dimension(idx_kernels);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">const</span> UniformQuantizationInfo iq_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;quantization_info().uniform();</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">const</span> UniformQuantizationInfo oq_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;quantization_info().uniform();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    _is_prepared  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>.retain_internal_weights();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    _is_quantized = <a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type());</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    _skip_im2col  = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a> &amp;&amp; kernel_width == 1 &amp;&amp; kernel_height == 1 &amp;&amp; conv2d_info.conv_info.stride().first == 1 &amp;&amp; conv2d_info.conv_info.stride().second == 1);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    _skip_col2im  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="comment">// Only for quantize there are few cases where we cannot fuse the activation function in GEMM</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    _fuse_activation = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    _use_post_ops    = conv2d_info.post_ops.size() &gt; 0;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">const</span> ITensorInfo *gemm_input_to_use  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    ITensorInfo       *gemm_output_to_use = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">// Get parameters from conv_info</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> stride_x = 0;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> stride_y = 0;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    std::tie(stride_x, stride_y) = conv2d_info.conv_info.stride();</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="comment">// Get convolved dimensions</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> conv_w = 0;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> conv_h = 0;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    std::tie(conv_w, conv_h) = <a class="code" href="namespacearm__compute.xhtml#a138beaeb1260b90cb03bc3f761628724">scaled_dimensions</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>),</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                                 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>),</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                                 kernel_width,</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                                 kernel_height,</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                                 conv2d_info.conv_info,</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                                 conv2d_info.dilation);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> mat_weights_cols = num_kernels / conv2d_info.num_groups;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    ITensorInfo *biases_to_use = biases;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    _append_bias               = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    _weights_reshape_kernel = std::make_unique&lt;kernels::ClWeightsReshapeKernel&gt;();</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">if</span>(conv2d_info.num_groups != 1 &amp;&amp; biases != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="comment">// num_groups != 1 can only be for NCHW</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="comment">// Since it is missing an utility function to reshape the biases, we append the biases into the weights tensor</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        biases_to_use = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        _append_bias  = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        _weights_reshape_kernel-&gt;configure(compile_context, weights, biases, &amp;_weights_reshaped, conv2d_info.num_groups);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        _weights_reshape_kernel-&gt;configure(compile_context, weights, <span class="keyword">nullptr</span>, &amp;_weights_reshaped, conv2d_info.num_groups);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="comment">// Create tensor to store im2col reshaped inputs</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">if</span>(!_skip_im2col)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="comment">// Configure and tune im2col. im2col output shape is auto-initialized</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        _im2col_kernel = std::make_unique&lt;opencl::kernels::ClIm2ColKernel&gt;();</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="comment">// Set the GPU target for im2col</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        _im2col_kernel-&gt;set_target(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().target());</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        _im2col_kernel-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;_im2col_output, Size2D(kernel_width, kernel_height), conv2d_info.conv_info, _append_bias, conv2d_info.dilation, conv2d_info.num_groups);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="comment">// Set quantization info</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        _im2col_output.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a78839e7861ba8ffed52ca55da2745761">set_quantization_info</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;quantization_info());</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a6c2059df991a75abef4eb643510c9544">tune_kernel_static</a>(*_im2col_kernel);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="comment">// Update GEMM input</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        gemm_input_to_use = &amp;_im2col_output;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    }</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="comment">// Create GEMM output tensor</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">if</span>(!_skip_col2im)</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    {</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        TensorShape shape_gemm;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="comment">// If we cannot skip col2im it means we run im2col as well</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        shape_gemm = _im2col_output.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>();</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        shape_gemm.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#aea5d1efe37933e02913aec84db5b9d4b">set</a>(0, mat_weights_cols);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        shape_gemm.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#aea5d1efe37933e02913aec84db5b9d4b">set</a>(1, conv_w * conv_h);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        _gemm_output = TensorInfo(shape_gemm, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        _gemm_output.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a78839e7861ba8ffed52ca55da2745761">set_quantization_info</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;quantization_info()).<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#abb9481fe056b9749f9b4c08db101cc15">set_data_layout</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout());</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="comment">// Update GEMM output</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        gemm_output_to_use = &amp;_gemm_output;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    GEMMLowpOutputStageInfo gemmlowp_output_stage;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    gemmlowp_output_stage.type            = <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    gemmlowp_output_stage.gemmlowp_offset = 0;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="comment">// Configure output stage for quantized case</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordflow">if</span>(_is_quantized)</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    {</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>         output_quant_info        = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;total_size() == 0) ? iq_info : oq_info;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">bool</span>         is_quantized_per_channel = <a class="code" href="namespacearm__compute.xhtml#a84437d80241f6a31e1a07c231ee8e3ac">is_data_type_quantized_per_channel</a>(weights-&gt;data_type());</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_filters              = (is_quantized_per_channel) ? num_kernels : 1;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        gemmlowp_output_stage.is_quantized_per_channel = is_quantized_per_channel;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        gemmlowp_output_stage.gemmlowp_multipliers.resize(num_filters);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        gemmlowp_output_stage.gemmlowp_shifts.resize(num_filters);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <a class="code" href="namespacearm__compute_1_1quantization.xhtml#abeaefa3fdf7cf7c4ca6e2a69c4e7405b">quantization::compute_quantized_multipliers_and_shifts</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                                                               gemmlowp_output_stage.gemmlowp_multipliers.data(),</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                                                               gemmlowp_output_stage.gemmlowp_shifts.data());</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        gemmlowp_output_stage.gemmlowp_multiplier = gemmlowp_output_stage.gemmlowp_multipliers[0];</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        gemmlowp_output_stage.gemmlowp_shift      = gemmlowp_output_stage.gemmlowp_shifts[0];</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        PixelValue min_val{};</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        PixelValue max_val{};</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        std::tie(min_val, max_val) = <a class="code" href="namespacearm__compute.xhtml#ae69217acf0f0b5d4de030a09ad50a0bc">get_min_max</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;data_type());</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keyword">auto</span> min_activation = min_val.get&lt;int32_t&gt;();</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="keyword">auto</span> max_activation = max_val.get&lt;int32_t&gt;();</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keyword">const</span> std::set&lt;ActivationLayerInfo::ActivationFunction&gt; supported_acts = { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>,</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a>,</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                                                                 };</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; </div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keywordflow">if</span>(conv2d_info.act_info.enabled())</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        {</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <span class="keywordflow">if</span>(supported_acts.count(conv2d_info.act_info.activation()) != 0)</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            {</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                std::tie(min_activation, max_activation) = <a class="code" href="namespacearm__compute.xhtml#a28220c5eeb62bead54e759565423c8a0">get_quantized_activation_min_max</a>(conv2d_info.act_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, output_quant_info);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            {</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                _fuse_activation = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        }</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="comment">// Set the GEMMLowp output stage info</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        gemmlowp_output_stage.gemmlowp_offset    = output_quant_info.offset;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        gemmlowp_output_stage.gemmlowp_min_bound = min_activation;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        gemmlowp_output_stage.gemmlowp_max_bound = max_activation;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; </div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="comment">// Configure and tune GEMM</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="comment">// In case of NHWC, we need to run GEMM3D (gemm_3d_depth != 0) in order to avoid reshaping the output matrix</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> gemm_3d_depth = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>) ? conv_h : 0;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    configure_mm(compile_context, gemm_input_to_use, &amp;_weights_reshaped, biases_to_use, gemm_output_to_use, gemmlowp_output_stage, gemm_3d_depth, conv2d_info.act_info, conv2d_info.post_ops);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">if</span>(!_skip_col2im)</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(conv2d_info.post_ops.size() &gt; 0, <span class="stringliteral">&quot;ClGemmConv2d does not support post ops with col2im operation&quot;</span>); <span class="comment">// Post ops must be performed after every other op</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="comment">// Set the GPU target for col2im</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        _col2im_kernel = std::make_unique&lt;opencl::kernels::ClCol2ImKernel&gt;();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        _col2im_kernel-&gt;set_target(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().target());</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="comment">// Configure and tune Col2Im</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        _col2im_kernel-&gt;configure(compile_context, gemm_output_to_use, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, Size2D(conv_w, conv_h), conv2d_info.num_groups);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a6c2059df991a75abef4eb643510c9544">tune_kernel_static</a>(*_col2im_kernel.get());</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160; </div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>((<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>) != conv_w) || (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>) != conv_h),</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                             <span class="stringliteral">&quot;Output shape does not match the expected one&quot;</span>);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160; </div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="comment">// Disable running of activation kernel if post ops are used</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordflow">if</span>(!_fuse_activation &amp;&amp; !_use_post_ops)</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        _activation_kernel = std::make_unique&lt;opencl::kernels::ClActivationKernel&gt;();</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        _activation_kernel-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">nullptr</span>, conv2d_info.act_info);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    _aux_mem[Im2ColOutput]    = MemoryInfo(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(Im2ColOutput), MemoryLifetime::Temporary, _im2col_output.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    _aux_mem[WeightsReshaped] = MemoryInfo(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(WeightsReshaped), MemoryLifetime::Persistent, _weights_reshaped.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    _aux_mem[GemmOutput]      = MemoryInfo(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(GemmOutput), MemoryLifetime::Temporary, _gemm_output.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_function_descriptors_8h_source.xhtml#l00073">Conv2dInfo::act_info</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01699">ActivationLayerInfo::activation()</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a628bcf7e10fc1c2a984f379a1ec3393a">arm_compute::BATCHES</a>, <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::BOUNDED_RELU</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00216">arm_compute::quantization::compute_quantized_multipliers_and_shifts()</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00071">Conv2dInfo::conv_info</a>, <a class="el" href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00406">arm_compute::test::validation::data_layout</a>, <a class="el" href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">arm_compute::test::validation::data_type</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00072">Conv2dInfo::dilation</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01714">ActivationLayerInfo::enabled()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02314">GEMMLowpOutputStageInfo::gemmlowp_max_bound</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02313">GEMMLowpOutputStageInfo::gemmlowp_min_bound</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02311">GEMMLowpOutputStageInfo::gemmlowp_multiplier</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02315">GEMMLowpOutputStageInfo::gemmlowp_multipliers</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02310">GEMMLowpOutputStageInfo::gemmlowp_offset</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02312">GEMMLowpOutputStageInfo::gemmlowp_shift</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02316">GEMMLowpOutputStageInfo::gemmlowp_shifts</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00103">CLScheduler::get()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00203">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00564">arm_compute::get_min_max()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00558">arm_compute::get_quantized_activation_min_max()</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::HEIGHT</a>, <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00263">arm_compute::test::validation::idx_height</a>, <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00262">arm_compute::test::validation::idx_width</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01052">arm_compute::is_data_type_quantized_asymmetric()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01107">arm_compute::is_data_type_quantized_per_channel()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02318">GEMMLowpOutputStageInfo::is_quantized_per_channel</a>, <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::LU_BOUNDED_RELU</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::NHWC</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00075">Conv2dInfo::num_groups</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00076">Conv2dInfo::post_ops</a>, <a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::QUANTIZE_DOWN_FIXEDPOINT</a>, <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::RELU</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00429">arm_compute::scaled_dimensions()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00079">TensorShape::set()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#abb9481fe056b9749f9b4c08db101cc15">ITensorInfo::set_data_layout()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00380">TensorInfo::set_quantization_info()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00719">PadStrideInfo::stride()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00236">TensorInfo::tensor_shape()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00252">TensorInfo::total_size()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00082">CLScheduler::tune_kernel_static()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02309">GEMMLowpOutputStageInfo::type</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d::validate()</a>, <a class="el" href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">arm_compute::test::validation::weights_info</a>, and <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::WIDTH</a>.</p>

</div>
</div>
<a id="a68218f6483059e86fcdb138d393dd888"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68218f6483059e86fcdb138d393dd888">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move assignment operator. </p>

</div>
</div>
<a id="a1b57c95f96237eb42570587efbcbb654"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b57c95f96237eb42570587efbcbb654">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="aff8f5e4223fd2a3020c8b252c8982d3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff8f5e4223fd2a3020c8b252c8982d3a">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>constants</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepare the function for executing. </p>
<p>Any one off pre-processing step required by the function is handled here</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">constants</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> that contains the constants tensors.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Prepare stage might not need all the function's buffers' backing memory to be available in order to execute </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00615">615</a> of file <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml">ClGemmConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;{</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <span class="keywordflow">if</span>(!_is_prepared)</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    {</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        <span class="comment">// Run weights reshaping and mark original weights tensor as unused</span></div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        ICLTensor         *weights_reshaped_p = utils::cast::polymorphic_downcast&lt;ICLTensor *&gt;(tensors.get_tensor(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(WeightsReshaped)));</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        CLAuxTensorHandler weights_reshaped(_weights_reshaped, *weights_reshaped_p);</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        <span class="keyword">auto</span>               weights = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>);</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        ITensorPack        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> =</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        {</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, weights },</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, weights_reshaped.get() }</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        };</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160; </div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <span class="keywordflow">if</span>(_append_bias)</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        {</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> biases = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">TensorType::ACL_SRC_2</a>);</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785">TensorType::ACL_BIAS</a>, biases);</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        }</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_weights_reshape_kernel.get(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, weights_reshaped.get());</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160; </div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        <span class="comment">// Prepare GEMM</span></div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        _is_quantized ? _mm_gemmlowp-&gt;prepare(tensors) : _mm_gemm-&gt;prepare(tensors);</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        _is_prepared = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    }</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00074">arm_compute::ACL_BIAS</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">arm_compute::ACL_SRC_2</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00049">ITensorPack::add_const_tensor()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00211">CLScheduler::enqueue_op()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00103">CLScheduler::get()</a>, <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00094">CLAuxTensorHandler::get()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00054">ITensorPack::get_const_tensor()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00064">ITensorPack::get_tensor()</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>, and <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">arm_compute::test::validation::pack</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00542">ClGemmConv2d::run()</a>.</p>

</div>
</div>
<a id="a684a54d1fb1634a348a585c6b5e76df0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a684a54d1fb1634a348a585c6b5e76df0">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> that contains the tensors to operate on. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00542">542</a> of file <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml">ClGemmConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;{</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a>(tensors);</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160; </div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>                = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>);</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <span class="keyword">auto</span> biases             = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>);</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>                = tensors.get_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>);</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keyword">auto</span> gemm_input_to_use  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keyword">auto</span> gemm_output_to_use = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160; </div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    CLAuxTensorHandler im2col_output(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(Im2ColOutput), _im2col_output, tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    CLAuxTensorHandler gemm_output(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(GemmOutput), _gemm_output, tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    CLAuxTensorHandler weights_reshaped(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(WeightsReshaped), _weights_reshaped, tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160; </div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    <span class="comment">// Run im2col</span></div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keywordflow">if</span>(!_skip_im2col)</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    {</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        ITensorPack <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> =</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        {</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a> },</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, im2col_output.get() }</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        };</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_im2col_kernel, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        gemm_input_to_use = im2col_output.get();</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    }</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <span class="keywordflow">if</span>(!_skip_col2im)</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    {</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        gemm_output_to_use = gemm_output.get();</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    }</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    ITensorPack pack_mm = tensors;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    pack_mm.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, gemm_input_to_use);</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    pack_mm.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, weights_reshaped.get());</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="keywordflow">if</span>(!_append_bias)</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    {</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        pack_mm.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">TensorType::ACL_SRC_2</a>, biases);</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    }</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    pack_mm.add_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, gemm_output_to_use);</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="comment">// Runs ClGemm or ClGemmLowpMatrixMultiplyCore functions</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="keywordflow">if</span>(_is_quantized)</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    {</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        <span class="comment">// Run gemmlowp</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        _mm_gemmlowp-&gt;run(pack_mm);</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    }</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    {</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        <span class="comment">// Run gemm</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        _mm_gemm-&gt;run(pack_mm);</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    }</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160; </div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <span class="comment">// Reshape output matrix</span></div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    <span class="keywordflow">if</span>(!_skip_col2im)</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    {</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        ITensorPack <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> =</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        {</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, gemm_output_to_use },</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> }</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;        };</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_col2im_kernel.get(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    }</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160; </div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    <span class="comment">//Run Activation Layer if we cannot fuse in GEMM</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    <span class="comment">// Disable running of activation kernel if post ops are used</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <span class="keywordflow">if</span>(!_fuse_activation &amp;&amp; !_use_post_ops)</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    {</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        ITensorPack <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> =</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        {</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> },</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> }</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        };</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_activation_kernel.get(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    }</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">arm_compute::ACL_SRC_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">arm_compute::ACL_SRC_2</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00049">ITensorPack::add_const_tensor()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00039">ITensorPack::add_tensor()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00211">CLScheduler::enqueue_op()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00103">CLScheduler::get()</a>, <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00094">CLAuxTensorHandler::get()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00054">ITensorPack::get_const_tensor()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00064">ITensorPack::get_tensor()</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">arm_compute::test::validation::pack</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00615">ClGemmConv2d::prepare()</a>, and <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>.</p>

</div>
</div>
<a id="a14e5abb1362cd11fa6407ae2aaddc8e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14e5abb1362cd11fa6407ae2aaddc8e9">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>conv2d_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights_info</em> = <code><a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration. </p>
<p>Similar to <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5357bacf3b395353bef0acf15487b92b">ClGemmConvolution::configure()</a></p>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">349</a> of file <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml">ClGemmConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;{</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>.are_reshaped(), <span class="stringliteral">&quot;Weights already reshaped are not supported!&quot;</span>);</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_quantized_per_channel = <a class="code" href="namespacearm__compute.xhtml#a84437d80241f6a31e1a07c231ee8e3ac">is_data_type_quantized_per_channel</a>(weights-&gt;data_type());</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160; </div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keywordflow">if</span>(!is_quantized_per_channel)</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    {</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    }</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#abdb9168800c70e5e2c4c020a3b905738">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights);</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>((conv2d_info.num_groups != 1) &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout() != <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>), <span class="stringliteral">&quot;Grouping (num_groups != 1) with NHWC data layout is not supported&quot;</span>);</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>((conv2d_info.num_groups != 1) &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>), <span class="stringliteral">&quot;Grouping (num_groups != 1) is not supported with QASYMM8&quot;</span>);</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(((<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(2) / weights-&gt;dimension(2)) != conv2d_info.num_groups) &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout() == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>));</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout();</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type();</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>   = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        idx_channel = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>);</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        idx_kernels = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a628bcf7e10fc1c2a984f379a1ec3393a">DataLayoutDimension::BATCHES</a>);</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160; </div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernel_width  = weights-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>);</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernel_height = weights-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>);</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_kernels   = weights-&gt;dimension(idx_kernels);</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160; </div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    TensorInfo         im2col_reshaped_info{};</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    TensorInfo         info_gemm{};</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    TensorInfo         weights_reshaped_info{};</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keyword">const</span> ITensorInfo *gemm_input_to_use  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keyword">const</span> ITensorInfo *gemm_output_to_use = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="keyword">const</span> ITensorInfo *weights_to_use     = weights;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>         is_quantized       = <a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>         skip_im2col        = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a> &amp;&amp; kernel_width == 1 &amp;&amp; kernel_height == 1 &amp;&amp; conv2d_info.conv_info.stride().first == 1</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                                             &amp;&amp; conv2d_info.conv_info.stride().second == 1);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> skip_col2im     = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordtype">bool</span>       fuse_activation = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keywordtype">bool</span>       use_post_ops    = conv2d_info.post_ops.size() &gt; 0;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160; </div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>((weights-&gt;dimension(idx_channel) * conv2d_info.num_groups) != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_channel));</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(weights-&gt;num_dimensions() &gt; 4);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(!skip_im2col</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                                    &amp;&amp; conv2d_info.post_ops.size() &gt; 0,</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                                    <span class="stringliteral">&quot;ClGemmConv2d does not support post ops with col2im or im2col operation&quot;</span>); <span class="comment">// Post ops must be performed after every other op</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160; </div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="comment">// Validate biases</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keywordflow">if</span>(biases != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">if</span>(is_quantized)</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        {</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(biases, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, biases);</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        }</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(biases-&gt;dimension(0) != weights-&gt;dimension(idx_kernels));</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(biases-&gt;num_dimensions() &gt; 1);</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    }</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160; </div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keywordflow">if</span>(conv2d_info.act_info.enabled())</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    {</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(conv2d_info.act_info.b() &gt; conv2d_info.act_info.a());</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160; </div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="comment">// Get convolved dimensions</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> conv_w = 0;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> conv_h = 0;</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160; </div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    std::tie(conv_w, conv_h) = <a class="code" href="namespacearm__compute.xhtml#a138beaeb1260b90cb03bc3f761628724">scaled_dimensions</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>),</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                                 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>),</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                                 kernel_width,</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                                                 kernel_height,</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                                                 conv2d_info.conv_info,</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                                                 conv2d_info.dilation);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160; </div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> mat_weights_cols = num_kernels / conv2d_info.num_groups;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160; </div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keyword">const</span> ITensorInfo *biases_to_use = biases;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keywordtype">bool</span>               append_bias   = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160; </div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keywordflow">if</span>(conv2d_info.num_groups != 1 &amp;&amp; biases != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    {</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="comment">// num_groups != 1 can only be for NCHW</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        <span class="comment">// Since it is missing an utility function to reshape the biases, we append the biases into the weights tensor</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        biases_to_use         = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        append_bias           = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        weights_reshaped_info = TensorInfo(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a6365b505b5c1b98916425bc692b6ea49">compute_weights_reshaped_shape</a>(*weights, <span class="keyword">true</span>, conv2d_info.num_groups), 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    }</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    {</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        weights_reshaped_info = TensorInfo(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a6365b505b5c1b98916425bc692b6ea49">compute_weights_reshaped_shape</a>(*weights, <span class="keyword">false</span>, conv2d_info.num_groups), 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    }</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160; </div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    weights_to_use = &amp;weights_reshaped_info;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160; </div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keywordflow">if</span>(!skip_im2col)</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    {</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="keyword">const</span> Size2D kernel_dims(kernel_width, kernel_height);</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160; </div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        <span class="comment">// Output tensor auto initialization if not yet initialized</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        TensorShape expected_output_shape = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a48fe56af30a447d645f3f1b0b1e0dfba">compute_im2col_conv_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, kernel_dims, conv2d_info.conv_info, append_bias, conv2d_info.dilation, conv2d_info.num_groups == 1, conv2d_info.num_groups);</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160; </div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(im2col_reshaped_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;clone()-&gt;set_tensor_shape(expected_output_shape));</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160; </div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_im2_col_kernel.xhtml#a4e256965ba7798ffe1358469be661e5a">opencl::kernels::ClIm2ColKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;im2col_reshaped_info, kernel_dims, conv2d_info.conv_info, append_bias, conv2d_info.dilation, conv2d_info.num_groups));</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        gemm_input_to_use = &amp;im2col_reshaped_info;</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    }</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160; </div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <span class="comment">// Create GEMM output tensor</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keywordflow">if</span>(!skip_col2im)</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    {</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        TensorShape shape_gemm;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160; </div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        shape_gemm = gemm_input_to_use-&gt;tensor_shape();</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        shape_gemm.set(0, mat_weights_cols);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        shape_gemm.set(1, conv_w * conv_h);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160; </div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        info_gemm = TensorInfo(shape_gemm, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        info_gemm.set_quantization_info(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;quantization_info()).set_data_layout(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout());</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        gemm_output_to_use = &amp;info_gemm;</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    }</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160; </div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    GEMMLowpOutputStageInfo gemmlowp_output_stage;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    gemmlowp_output_stage.type                     = <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    gemmlowp_output_stage.gemmlowp_offset          = 0;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    gemmlowp_output_stage.is_quantized_per_channel = is_quantized_per_channel;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160; </div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="keywordflow">if</span>(is_quantized)</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    {</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo iq_info           = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;quantization_info().uniform();</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo oq_info           = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;quantization_info().uniform();</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>                    output_quant_info = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;total_size() == 0) ? iq_info : oq_info;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>            num_filters       = (is_quantized_per_channel) ? num_kernels : 1;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160; </div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        gemmlowp_output_stage.gemmlowp_multipliers.resize(num_filters);</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        gemmlowp_output_stage.gemmlowp_shifts.resize(num_filters);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <a class="code" href="namespacearm__compute_1_1quantization.xhtml#abeaefa3fdf7cf7c4ca6e2a69c4e7405b">quantization::compute_quantized_multipliers_and_shifts</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                                                               gemmlowp_output_stage.gemmlowp_multipliers.data(),</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                                                               gemmlowp_output_stage.gemmlowp_shifts.data());</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        gemmlowp_output_stage.gemmlowp_multiplier = gemmlowp_output_stage.gemmlowp_multipliers[0];</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        gemmlowp_output_stage.gemmlowp_shift      = gemmlowp_output_stage.gemmlowp_shifts[0];</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160; </div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="keywordtype">int</span> min_activation = 0;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordtype">int</span> max_activation = 0;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160; </div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <span class="keyword">const</span> std::set&lt;ActivationLayerInfo::ActivationFunction&gt; supported_acts = { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>,</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                                                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a>,</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                                                                                   <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                                                                                 };</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160; </div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        <span class="keywordflow">if</span>(conv2d_info.act_info.enabled())</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        {</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            <span class="keywordflow">if</span>(supported_acts.count(conv2d_info.act_info.activation()) != 0)</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            {</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                std::tie(min_activation, max_activation) = <a class="code" href="namespacearm__compute.xhtml#a28220c5eeb62bead54e759565423c8a0">get_quantized_activation_min_max</a>(conv2d_info.act_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, output_quant_info);</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            }</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            {</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                fuse_activation = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            }</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        }</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160; </div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="comment">// Set the GEMMLowp output stage info</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        gemmlowp_output_stage.gemmlowp_offset    = output_quant_info.offset;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        gemmlowp_output_stage.gemmlowp_min_bound = min_activation;</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        gemmlowp_output_stage.gemmlowp_max_bound = max_activation;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    }</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160; </div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <span class="comment">// In case of NHWC, we need to run GEMM3D (gemm_3d_depth != 0) in order to avoid reshaping the output matrix</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> gemm_3d_depth = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>) ? conv_h : 0;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160; </div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(gemm_input_to_use, weights_to_use, biases_to_use, gemm_output_to_use, gemmlowp_output_stage, gemm_3d_depth, skip_im2col, conv2d_info.act_info,</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                                            conv2d_info.post_ops));</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160; </div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="comment">// Validate Col2Im</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="keywordflow">if</span>(!skip_col2im)</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    {</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_col2_im_kernel.xhtml#a437d0d68989336215d7bf97a265de4bd">kernels::ClCol2ImKernel::validate</a>(gemm_output_to_use, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, Size2D(conv_w, conv_h), conv2d_info.num_groups));</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    }</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160; </div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="comment">// Validate Activation Layer</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <span class="comment">// Disable running (thus validation) of activation kernel if post ops are used</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="keywordflow">if</span>(!fuse_activation &amp;&amp; !use_post_ops)</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    {</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_activation_kernel.xhtml#ad1a122686d31c14e80f5686beee030fd">kernels::ClActivationKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">nullptr</span>, conv2d_info.act_info));</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    }</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160; </div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01704">ActivationLayerInfo::a()</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00073">Conv2dInfo::act_info</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01699">ActivationLayerInfo::activation()</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00296">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00788">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00490">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00541">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>, <a class="el" href="_error_8h_source.xhtml#l00244">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00204">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="_auto_configuration_8h_source.xhtml#l00042">arm_compute::auto_init_if_empty()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01709">ActivationLayerInfo::b()</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a628bcf7e10fc1c2a984f379a1ec3393a">arm_compute::BATCHES</a>, <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::BOUNDED_RELU</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::CHANNEL</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00524">arm_compute::misc::shape_calculator::compute_im2col_conv_shape()</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00216">arm_compute::quantization::compute_quantized_multipliers_and_shifts()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00150">arm_compute::misc::shape_calculator::compute_weights_reshaped_shape()</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00071">Conv2dInfo::conv_info</a>, <a class="el" href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00406">arm_compute::test::validation::data_layout</a>, <a class="el" href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">arm_compute::test::validation::data_type</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00072">Conv2dInfo::dilation</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01714">ActivationLayerInfo::enabled()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::F16</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02314">GEMMLowpOutputStageInfo::gemmlowp_max_bound</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02313">GEMMLowpOutputStageInfo::gemmlowp_min_bound</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02311">GEMMLowpOutputStageInfo::gemmlowp_multiplier</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02315">GEMMLowpOutputStageInfo::gemmlowp_multipliers</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02310">GEMMLowpOutputStageInfo::gemmlowp_offset</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02312">GEMMLowpOutputStageInfo::gemmlowp_shift</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02316">GEMMLowpOutputStageInfo::gemmlowp_shifts</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00203">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00558">arm_compute::get_quantized_activation_min_max()</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::HEIGHT</a>, <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00263">arm_compute::test::validation::idx_height</a>, <a class="el" href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00262">arm_compute::test::validation::idx_width</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01052">arm_compute::is_data_type_quantized_asymmetric()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01107">arm_compute::is_data_type_quantized_per_channel()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02318">GEMMLowpOutputStageInfo::is_quantized_per_channel</a>, <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::LU_BOUNDED_RELU</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::NCHW</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::NHWC</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">ITensorInfo::num_dimensions()</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00075">Conv2dInfo::num_groups</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00076">Conv2dInfo::post_ops</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::QASYMM8</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::QASYMM8_SIGNED</a>, <a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::QUANTIZE_DOWN_FIXEDPOINT</a>, <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::RELU</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00429">arm_compute::scaled_dimensions()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00079">TensorShape::set()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00719">PadStrideInfo::stride()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02309">GEMMLowpOutputStageInfo::type</a>, <a class="el" href="_cl_activation_kernel_8cpp_source.xhtml#l00223">ClActivationKernel::validate()</a>, <a class="el" href="_cl_col2_im_kernel_8cpp_source.xhtml#l00134">ClCol2ImKernel::validate()</a>, <a class="el" href="_cl_im2_col_kernel_8cpp_source.xhtml#l00355">ClIm2ColKernel::validate()</a>, <a class="el" href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">arm_compute::test::validation::weights_info</a>, and <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::WIDTH</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00131">ClConv2d::validate()</a>, and <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00117">CLGEMMConvolutionLayer::validate()</a>.</p>

</div>
</div>
<a id="a74ae0d6e96f38fecd38471431786b870"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74ae0d6e96f38fecd38471431786b870">&#9670;&nbsp;</a></span>workspace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> workspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the memory requirements required by the workspace. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aea714e0b46ed9e9d14440dbc0ece4013">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00642">642</a> of file <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml">ClGemmConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;{</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    <span class="keywordflow">return</span> _aux_mem;</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gpu/cl/operators/<a class="el" href="_cl_gemm_conv2d_8h_source.xhtml">ClGemmConv2d.h</a></li>
<li>src/gpu/cl/operators/<a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml">ClGemmConv2d.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdeci">@ NCHW</div><div class="ttdoc">Num samples, channels, height, width.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_abb9f749a8ea92dda58cc0881b1450158"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">arm_compute::test::validation::idx_height</a></div><div class="ttdeci">const int idx_height</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00263">Scale.cpp:263</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00113">Types.h:113</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdeci">@ CHANNEL</div><div class="ttdoc">channel</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdeci">@ NHWC</div><div class="ttdoc">Num samples, height, width, channels.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a7cb842ebfe255726066039853a4322f0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">arm_compute::test::validation::weights_info</a></div><div class="ttdeci">weights_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">BatchNormalizationLayer.cpp:165</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a138beaeb1260b90cb03bc3f761628724"><div class="ttname"><a href="namespacearm__compute.xhtml#a138beaeb1260b90cb03bc3f761628724">arm_compute::scaled_dimensions</a></div><div class="ttdeci">std::pair&lt; unsigned int, unsigned int &gt; scaled_dimensions(int width, int height, int kernel_width, int kernel_height, const PadStrideInfo &amp;pad_stride_info, const Size2D &amp;dilation=Size2D(1U, 1U))</div><div class="ttdoc">Returns expected width and height of output scaled tensor depending on dimensions rounding mode.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00429">Utils.cpp:429</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac354c23c8e4921ea8a8ad07e1a1d3fe5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">arm_compute::test::validation::idx_width</a></div><div class="ttdeci">const int idx_width</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00262">Scale.cpp:262</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a28220c5eeb62bead54e759565423c8a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a28220c5eeb62bead54e759565423c8a0">arm_compute::get_quantized_activation_min_max</a></div><div class="ttdeci">std::pair&lt; int32_t, int32_t &gt; get_quantized_activation_min_max(ActivationLayerInfo act_info, DataType data_type, UniformQuantizationInfo oq_info)</div><div class="ttdoc">Returns a pair of minimum and maximum values for a quantized activation.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00558">Utils.cpp:558</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_aa23dcee239e241566abce6dfceac704d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">arm_compute::ITensorPack::add_const_tensor</a></div><div class="ttdeci">void add_const_tensor(int id, const ITensor *tensor)</div><div class="ttdoc">Add const tensor to the pack.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00049">ITensorPack.cpp:49</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00541">Validate.h:541</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdeci">@ WIDTH</div><div class="ttdoc">width</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00788">Validate.h:788</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">arm_compute::ACL_SRC_2</a></div><div class="ttdeci">@ ACL_SRC_2</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">Types.h:47</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_acf5f12bbab64dd614bd8220c97fe484f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00406">ConvolutionLayer.cpp:406</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a48fe56af30a447d645f3f1b0b1e0dfba"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a48fe56af30a447d645f3f1b0b1e0dfba">arm_compute::misc::shape_calculator::compute_im2col_conv_shape</a></div><div class="ttdeci">TensorShape compute_im2col_conv_shape(const ITensorInfo *input, const Size2D &amp;kernel_dims, const PadStrideInfo &amp;conv_info, bool has_bias, const Size2D &amp;dilation, bool batch_size_on_z, unsigned int num_groups=1, unsigned int input_pad_right=0)</div><div class="ttdoc">Calculate the im2col output shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00524">ShapeCalculator.h:524</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">arm_compute::ActivationLayerInfo::ActivationFunction::RELU</a></div><div class="ttdeci">@ RELU</div><div class="ttdoc">Rectifier (  )</div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a78839e7861ba8ffed52ca55da2745761"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a78839e7861ba8ffed52ca55da2745761">arm_compute::TensorInfo::set_quantization_info</a></div><div class="ttdeci">ITensorInfo &amp; set_quantization_info(const QuantizationInfo &amp;quantization_info) override</div><div class="ttdoc">Set the quantization settings (scale and offset) of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_tensor_info_8cpp_source.xhtml#l00380">TensorInfo.cpp:380</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1quantization_xhtml_abeaefa3fdf7cf7c4ca6e2a69c4e7405b"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#abeaefa3fdf7cf7c4ca6e2a69c4e7405b">arm_compute::quantization::compute_quantized_multipliers_and_shifts</a></div><div class="ttdeci">void compute_quantized_multipliers_and_shifts(const ITensorInfo *input, const ITensorInfo *weights, const ITensorInfo *output, int32_t *output_multipliers_ptr, int32_t *output_shifts_ptr)</div><div class="ttdoc">Compute quantized per-channel multipliers and shifts.</div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00216">AsymmHelpers.cpp:216</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">arm_compute::ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a></div><div class="ttdeci">@ LU_BOUNDED_RELU</div><div class="ttdoc">Lower and Upper Bounded Rectifier (  )</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdeci">@ HEIGHT</div><div class="ttdoc">height</div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_af398466b602a02b42d8df19fb66a6c60"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">arm_compute::TensorInfo::total_size</a></div><div class="ttdeci">size_t total_size() const override</div><div class="ttdoc">Returns the total size of the tensor in bytes.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00252">TensorInfo.h:252</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdeci">@ ACL_DST</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a37c28ce239ce7092298245ce59694917"><div class="ttname"><a href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00042">AutoConfiguration.h:42</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdeci">@ QASYMM8_SIGNED</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a84437d80241f6a31e1a07c231ee8e3ac"><div class="ttname"><a href="namespacearm__compute.xhtml#a84437d80241f6a31e1a07c231ee8e3ac">arm_compute::is_data_type_quantized_per_channel</a></div><div class="ttdeci">bool is_data_type_quantized_per_channel(DataType dt)</div><div class="ttdoc">Check if a given data type is of per channel type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01107">Utils.h:1107</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_abdb9168800c70e5e2c4c020a3b905738"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#abdb9168800c70e5e2c4c020a3b905738">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00490">Validate.h:490</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a6c2059df991a75abef4eb643510c9544"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a6c2059df991a75abef4eb643510c9544">arm_compute::CLScheduler::tune_kernel_static</a></div><div class="ttdeci">void tune_kernel_static(ICLKernel &amp;kernel)</div><div class="ttdoc">Tunes OpenCL kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00082">CLScheduler.cpp:82</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_activation_kernel_xhtml_ad1a122686d31c14e80f5686beee030fd"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_activation_kernel.xhtml#ad1a122686d31c14e80f5686beee030fd">arm_compute::opencl::kernels::ClActivationKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dst, const ActivationLayerInfo &amp;act_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_activation_kernel_8cpp_source.xhtml#l00223">ClActivationKernel.cpp:223</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1e041dc03ff256dfc8b0bf5c5fe099e0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">arm_compute::test::validation::pack</a></div><div class="ttdeci">ITensorPack pack</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">Im2Col.cpp:188</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_im2_col_kernel_xhtml_a4e256965ba7798ffe1358469be661e5a"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_im2_col_kernel.xhtml#a4e256965ba7798ffe1358469be661e5a">arm_compute::opencl::kernels::ClIm2ColKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const Size2D &amp;kernel_dims, const PadStrideInfo &amp;conv_info, bool has_bias, const Size2D &amp;dilation=Size2D(1U, 1U), unsigned int num_groups=1)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00355">ClIm2ColKernel.cpp:355</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00103">CLScheduler.cpp:103</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">Cast.cpp:203</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_gemm_conv2d_xhtml_a14e5abb1362cd11fa6407ae2aaddc8e9"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a14e5abb1362cd11fa6407ae2aaddc8e9">arm_compute::opencl::ClGemmConv2d::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *output, const Conv2dInfo &amp;conv2d_info, const WeightsInfo &amp;weights_info=WeightsInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d.cpp:349</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00203">Helpers.inl:203</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a324d709e8fb5568ada56ba4999dfb2f1"><div class="ttname"><a href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">arm_compute::offset_int_vec</a></div><div class="ttdeci">int offset_int_vec(int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_memory_helpers_8h_source.xhtml#l00038">MemoryHelpers.h:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a6365b505b5c1b98916425bc692b6ea49"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a6365b505b5c1b98916425bc692b6ea49">arm_compute::misc::shape_calculator::compute_weights_reshaped_shape</a></div><div class="ttdeci">TensorShape compute_weights_reshaped_shape(const ITensorInfo &amp;weights, bool has_bias=false, unsigned int num_groups=1)</div><div class="ttdoc">Calculate the reshaped shape of the weights.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00150">ShapeCalculator.h:150</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785">arm_compute::ACL_BIAS</a></div><div class="ttdeci">@ ACL_BIAS</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00074">Types.h:74</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_col2_im_kernel_xhtml_a437d0d68989336215d7bf97a265de4bd"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_col2_im_kernel.xhtml#a437d0d68989336215d7bf97a265de4bd">arm_compute::opencl::kernels::ClCol2ImKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dst, const Size2D &amp;convolved_dims, unsigned int num_groups=1)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_col2_im_kernel_8cpp_source.xhtml#l00134">ClCol2ImKernel.cpp:134</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::DataType::S32</a></div><div class="ttdeci">@ S32</div><div class="ttdoc">signed 32-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01052">Utils.h:1052</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a5c0fc6f465cae029d60ffdfc7f3e99d9"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">arm_compute::CLScheduler::enqueue_op</a></div><div class="ttdeci">void enqueue_op(ICLKernel &amp;kernel, ITensorPack &amp;tensors, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00211">CLScheduler.cpp:211</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdeci">@ ACL_SRC</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a628bcf7e10fc1c2a984f379a1ec3393a"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a628bcf7e10fc1c2a984f379a1ec3393a">arm_compute::DataLayoutDimension::BATCHES</a></div><div class="ttdeci">@ BATCHES</div><div class="ttdoc">batches</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_abb9481fe056b9749f9b4c08db101cc15"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#abb9481fe056b9749f9b4c08db101cc15">arm_compute::ITensorInfo::set_data_layout</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_data_layout(const DataLayout &amp;data_layout)=0</div><div class="ttdoc">Set the data layout of the tensor.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae69217acf0f0b5d4de030a09ad50a0bc"><div class="ttname"><a href="namespacearm__compute.xhtml#ae69217acf0f0b5d4de030a09ad50a0bc">arm_compute::get_min_max</a></div><div class="ttdeci">std::tuple&lt; PixelValue, PixelValue &gt; get_min_max(DataType dt)</div><div class="ttdoc">Compute the mininum and maximum values a data type can take.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l00564">Utils.h:564</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_aea5d1efe37933e02913aec84db5b9d4b"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#aea5d1efe37933e02913aec84db5b9d4b">arm_compute::TensorShape::set</a></div><div class="ttdeci">TensorShape &amp; set(size_t dimension, size_t value, bool apply_dim_correction=true, bool increase_dim_unit=true)</div><div class="ttdoc">Accessor to set the value of one of the dimensions.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00079">TensorShape.h:79</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a></div><div class="ttdeci">@ QUANTIZE_DOWN_FIXEDPOINT</div><div class="ttdoc">Quantize using a fixed point multiplication.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">arm_compute::ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a></div><div class="ttdeci">@ BOUNDED_RELU</div><div class="ttdoc">Upper Bounded Rectifier (  )</div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a269b19ce3f357ac65f41f9951906e38e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">arm_compute::TensorInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const override</div><div class="ttdoc">Size for each dimension of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00236">TensorInfo.h:236</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_gemm_conv2d_xhtml_aff8f5e4223fd2a3020c8b252c8982d3a"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">arm_compute::opencl::ClGemmConv2d::prepare</a></div><div class="ttdeci">void prepare(ITensorPack &amp;constants) override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_conv2d_8cpp_source.xhtml#l00615">ClGemmConv2d.cpp:615</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1opencl.xhtml">opencl</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:30 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
