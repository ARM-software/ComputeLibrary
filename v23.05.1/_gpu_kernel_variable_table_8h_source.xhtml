<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/dynamic_fusion/sketch/gpu/template_writer/GpuKernelVariableTable.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_gpu_kernel_variable_table_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GpuKernelVariableTable.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_gpu_kernel_variable_table_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef SRC_DYNAMIC_FUSION_SKETCH_GPU_TEMPLATE_WRITER_GPUKERNELVARIABLETABLE</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define SRC_DYNAMIC_FUSION_SKETCH_GPU_TEMPLATE_WRITER_GPUKERNELVARIABLETABLE</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_info_8h.xhtml">arm_compute/core/ITensorInfo.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_argument_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuKernelArgument.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_acl_requires_8h.xhtml">support/AclRequires.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_string_support_8h.xhtml">support/StringSupport.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>experimental</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">class </span>GpuKernelComponentGroup;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/** A table of all the variables used in the kernel.</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> * Each kernel has exactly one variable table.</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">   47</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">    /** A tensor variable whose main purposes are:</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">     *  - Hold the newly assigned @ref GpuKernelArgumentInfo for the associated tensor info</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     *  - Hold the generated variable name for the associated tensor info</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">   54</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#aac6e5f5c5b4c7f8386a20bf24bd966cd">TensorVariable</a>()                       = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#aac6e5f5c5b4c7f8386a20bf24bd966cd">TensorVariable</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a> &amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a>       &amp;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#ad541d4c968e1ee1cd092beb80379b340">operator=</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a> &amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#a9c1782d34f95da40443edff65ccef1d6">   60</a></span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a>       <span class="keywordtype">id</span>{ <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a181af6ddf1729f06e92859babef277f0">ITensorInfo::invalid_tensor_id</a> };</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#ac047593b5705ef4a93109e4c7cf879f4">   61</a></span>&#160;        std::string           <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#ac047593b5705ef4a93109e4c7cf879f4">uniq_name</a>{ <span class="stringliteral">&quot;empty&quot;</span> }; <span class="comment">// Unique name, also the final variable name used in the built code</span></div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#a85714676984998b19aa785c9fc598fca">   62</a></span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml">GpuKernelArgumentInfo</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#a85714676984998b19aa785c9fc598fca">kernel_argument_info</a>{};</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">   63</a></span>&#160;        <span class="keywordtype">bool</span>                  <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">return</span> <span class="keywordtype">id</span> != <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a181af6ddf1729f06e92859babef277f0">ITensorInfo::invalid_tensor_id</a>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    };</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">   68</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">VariableList</a> = std::vector&lt;TensorVariable&gt;;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /** Declare a @ref TensorVariable for a corresponding tensor info.</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     * @param[in] comp_group    Component group the tensor belongs to</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * @param[in] tensor        Tensor info with which the new variable is associated</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     * @param[in] argument_info Kernel argument information</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     * @param[in] alias         Alias for the variable. Will be used as part of the variable name</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#a39a1f311bbee4cf716ef087922948138">declare_variable</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a> &amp;comp_group, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml">GpuKernelArgumentInfo</a> argument_info, <span class="keyword">const</span> std::string &amp;alias = <span class="stringliteral">&quot;unnamed&quot;</span>);<span class="comment"></span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">    /** Get the @ref TensorVariable associated with @p tensor</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     * @param[in] tensor Tensor info to be queried</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     * @return TensorVariable</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad748e7fc875fa3d925950afdebece20d">get_variable</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>) <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">    /** Get the @ref TensorVariable list associated with @p tensors</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     * @note Empty tensors are skipped</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     * @param[in] tensors List of tensor infos to be queried</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     * @return VariableList</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">VariableList</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#af9edf82d17da1ae5c6e94586a59ff1ec">get_variable_list</a>(<span class="keyword">const</span> std::vector&lt;const ITensorInfo *&gt; &amp;tensors) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    std::map&lt;ITensorInfo::Id, TensorVariable&gt; _vars{};</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;};</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">/** A tag value will substitute a tag in a string template during its instantiation */</span></div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml">  100</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml">TagVal</a></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">    /** Default constructor */</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#a6e79ff7571dab5064e2a44a43b23e351">TagVal</a>() = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">    /** Construct a @ref TagVal from a @ref GpuKernelVariableTable::TensorVariable */</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#a6e79ff7571dab5064e2a44a43b23e351">TagVal</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">GpuKernelVariableTable::TensorVariable</a> &amp;var);<span class="comment"></span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    /** Construct a @ref TagVal from an integral type */</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ARM_COMPUTE_REQUIRES_TA(std::is_<span class="keywordtype">int</span>egral&lt;T&gt;::value)&gt;</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#addc09ba64e0e45b912867a3cba9a60a8">  108</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#addc09ba64e0e45b912867a3cba9a60a8">TagVal</a>(T val)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#a5c33da5929c9f2f9ef8d006d2350e6ec">value</a>{ <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(val) }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">    /** Construct a @ref TagVal from a string */</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#a6e79ff7571dab5064e2a44a43b23e351">TagVal</a>(<span class="keyword">const</span> std::string &amp;val);<span class="comment"></span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">    /** Construct a @ref TagVal from a c-style string */</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#a6e79ff7571dab5064e2a44a43b23e351">TagVal</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *val);<span class="comment"></span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">    /** Construct a @ref TagVal from a @ref DataType */</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#a6e79ff7571dab5064e2a44a43b23e351">TagVal</a>(<span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);<span class="comment"></span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">    /** Get the value of the TagVal as a converted string */</span></div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#a5c33da5929c9f2f9ef8d006d2350e6ec">  119</a></span>&#160;    std::string <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#a5c33da5929c9f2f9ef8d006d2350e6ec">value</a>{};</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;};</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">/** A tag used in a string template is a placeholder string to be substituted by real values during template instantiation */</span></div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af037c70dc8c0318e30d3a5138776337e">  123</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af037c70dc8c0318e30d3a5138776337e">Tag</a> = std::string;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">/** Tag lookup table. It is used to instantiate a string template */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">  126</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> = std::unordered_map&lt;Tag, TagVal&gt;;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;} <span class="comment">// namespace experimental</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* SRC_DYNAMIC_FUSION_SKETCH_GPU_TEMPLATE_WRITER_GPUKERNELVARIABLETABLE */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::TensorVariable</a></div><div class="ttdoc">A tensor variable whose main purposes are:</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00054">GpuKernelVariableTable.h:54</a></div></div>
<div class="ttc" id="a_string_support_8h_xhtml"><div class="ttname"><a href="_string_support_8h.xhtml">StringSupport.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable_xhtml_aac6e5f5c5b4c7f8386a20bf24bd966cd"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#aac6e5f5c5b4c7f8386a20bf24bd966cd">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::TensorVariable::TensorVariable</a></div><div class="ttdeci">TensorVariable()=default</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml_ad245a484a63ea532ef7e19ca08f8b232"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::VariableList</a></div><div class="ttdeci">std::vector&lt; TensorVariable &gt; VariableList</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00068">GpuKernelVariableTable.h:68</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_afacfec8193ed701f3646c22bc2d35455"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">arm_compute::experimental::dynamic_fusion::TagLUT</a></div><div class="ttdeci">std::unordered_map&lt; Tag, TagVal &gt; TagLUT</div><div class="ttdoc">Tag lookup table.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00126">GpuKernelVariableTable.h:126</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val_xhtml_a5c33da5929c9f2f9ef8d006d2350e6ec"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#a5c33da5929c9f2f9ef8d006d2350e6ec">arm_compute::experimental::dynamic_fusion::TagVal::value</a></div><div class="ttdeci">std::string value</div><div class="ttdoc">Get the value of the TagVal as a converted string.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00119">GpuKernelVariableTable.h:119</a></div></div>
<div class="ttc" id="a_i_tensor_info_8h_xhtml"><div class="ttname"><a href="_i_tensor_info_8h.xhtml">ITensorInfo.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable_xhtml_a85714676984998b19aa785c9fc598fca"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#a85714676984998b19aa785c9fc598fca">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::TensorVariable::kernel_argument_info</a></div><div class="ttdeci">GpuKernelArgumentInfo kernel_argument_info</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00062">GpuKernelVariableTable.h:62</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml">arm_compute::experimental::dynamic_fusion::TagVal</a></div><div class="ttdoc">A tag value will substitute a tag in a string template during its instantiation.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00100">GpuKernelVariableTable.h:100</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_af037c70dc8c0318e30d3a5138776337e"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af037c70dc8c0318e30d3a5138776337e">arm_compute::experimental::dynamic_fusion::Tag</a></div><div class="ttdeci">std::string Tag</div><div class="ttdoc">A tag used in a string template is a placeholder string to be substituted by real values during templ...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00123">GpuKernelVariableTable.h:123</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a1fafaeb6e3ab8c0bc772532cc3fcff1a"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">arm_compute::ITensorInfo::Id</a></div><div class="ttdeci">int32_t Id</div><div class="ttdoc">An id that uniquely identifies an ITensorInfo within some domain (e.g.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00049">ITensorInfo.h:49</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable_xhtml_ac047593b5705ef4a93109e4c7cf879f4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#ac047593b5705ef4a93109e4c7cf879f4">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::TensorVariable::uniq_name</a></div><div class="ttdeci">std::string uniq_name</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00061">GpuKernelVariableTable.h:61</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo</a></div><div class="ttdoc">Contain information required to set up a kernel argument at run time.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_argument_8h_source.xhtml#l00037">GpuKernelArgument.h:37</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
<div class="ttc" id="a_gpu_kernel_argument_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_argument_8h.xhtml">GpuKernelArgument.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">Cast.cpp:203</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml_ad748e7fc875fa3d925950afdebece20d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad748e7fc875fa3d925950afdebece20d">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::get_variable</a></div><div class="ttdeci">TensorVariable get_variable(const ITensorInfo *tensor) const</div><div class="ttdoc">Get the TensorVariable associated with tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00073">GpuKernelVariableTable.cpp:73</a></div></div>
<div class="ttc" id="a_acl_requires_8h_xhtml"><div class="ttname"><a href="_acl_requires_8h.xhtml">AclRequires.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable_xhtml_ac3b745acece5fb22971e8888f1d5b4a6"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::TensorVariable::has_valid_id</a></div><div class="ttdeci">bool has_valid_id() const</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00063">GpuKernelVariableTable.h:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a181af6ddf1729f06e92859babef277f0"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a181af6ddf1729f06e92859babef277f0">arm_compute::ITensorInfo::invalid_tensor_id</a></div><div class="ttdeci">static constexpr Id invalid_tensor_id</div><div class="ttdoc">An invalid tensor id within a domain.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00051">ITensorInfo.h:51</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val_xhtml_addc09ba64e0e45b912867a3cba9a60a8"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#addc09ba64e0e45b912867a3cba9a60a8">arm_compute::experimental::dynamic_fusion::TagVal::TagVal</a></div><div class="ttdeci">TagVal(T val)</div><div class="ttdoc">Construct a TagVal from an integral type.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00108">GpuKernelVariableTable.h:108</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable_xhtml_ad541d4c968e1ee1cd092beb80379b340"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#ad541d4c968e1ee1cd092beb80379b340">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::TensorVariable::operator=</a></div><div class="ttdeci">TensorVariable &amp; operator=(const TensorVariable &amp;)=default</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGroup</a></div><div class="ttdoc">A group of gpu kernel components to be fused together PRECONDITIONS:</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_group_8h_source.xhtml#l00062">GpuKernelComponentGroup.h:62</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00043">ITensorInfo.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable</a></div><div class="ttdoc">A table of all the variables used in the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00047">GpuKernelVariableTable.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml_a39a1f311bbee4cf716ef087922948138"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#a39a1f311bbee4cf716ef087922948138">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::declare_variable</a></div><div class="ttdeci">void declare_variable(const GpuKernelComponentGroup &amp;comp_group, const ITensorInfo *tensor, GpuKernelArgumentInfo argument_info, const std::string &amp;alias=&quot;unnamed&quot;)</div><div class="ttdoc">Declare a TensorVariable for a corresponding tensor info.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00035">GpuKernelVariableTable.cpp:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml_af9edf82d17da1ae5c6e94586a59ff1ec"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#af9edf82d17da1ae5c6e94586a59ff1ec">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::get_variable_list</a></div><div class="ttdeci">VariableList get_variable_list(const std::vector&lt; const ITensorInfo * &gt; &amp;tensors) const</div><div class="ttdoc">Get the TensorVariable list associated with tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00079">GpuKernelVariableTable.cpp:79</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val_xhtml_a6e79ff7571dab5064e2a44a43b23e351"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml#a6e79ff7571dab5064e2a44a43b23e351">arm_compute::experimental::dynamic_fusion::TagVal::TagVal</a></div><div class="ttdeci">TagVal()=default</div><div class="ttdoc">Default constructor.</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_5ff8356557e4f59c6a20c3735e8d2267.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_729ca8b25cabcdcb8b11b571ea7b237a.xhtml">sketch</a></li><li class="navelem"><a class="el" href="dir_df94d166e0e6f49d063cb29fea25a88b.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_09aab6a206c9d3717fe22866ebbc9576.xhtml">template_writer</a></li><li class="navelem"><a class="el" href="_gpu_kernel_variable_table_8h.xhtml">GpuKernelVariableTable.h</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:15 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
