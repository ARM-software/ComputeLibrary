/*
 * Copyright (c) 2019 Arm Limited.
 *
 * SPDX-License-Identifier: MIT
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
#ifdef __ARM_FEATURE_SVE

#include <algorithm>


#include "../../asmlib.hpp"
#include "../../utils.hpp"

namespace arm_gemm {

void sve_smallK_hybrid_fp32_mla_1VLx4(const float *A, int lda, const float *B, float *C, int ldc, float beta, int M, int N, int K) {
    const long beta0 = (beta == 0.0f);

    const long loops_count = M / 4;
    const long oddrow_count = M % 4;
    const long ldab = lda * sizeof(float);
    const long ldcb = ldc * sizeof(float);
    const int K_stride = K;
    const long odd_depth = K % 4;
    const float *betaptr = &beta;

    for (int x0=0; x0<N; x0+=(get_vector_length<float>() * 1)) {
        const long width = std::min((unsigned long)N-x0, (get_vector_length<float>() * 1));
        long loops = loops_count;
        long oddrows = oddrow_count;
        long temp = 0;
        const float *b_ptr0 = B + (K_stride * x0);

        const float *a_ptr0 = A;

        float *c_ptr0 = C + x0;

        switch(K) {
            case 1:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0]]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0]]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 2:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0]]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0]]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 3:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0]]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0]]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 4:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 5:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x10]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p6/z, [%[a_ptr0], #0x10]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 6:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x10]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p6/z, [%[a_ptr0], #0x10]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 7:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x10]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p6/z, [%[a_ptr0], #0x10]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 8:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 9:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x20]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p6/z, [%[a_ptr0], #0x20]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 10:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x20]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p6/z, [%[a_ptr0], #0x20]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 11:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x20]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p6/z, [%[a_ptr0], #0x20]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 12:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 13:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x30]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p6/z, [%[a_ptr0], #0x30]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 14:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x30]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p6/z, [%[a_ptr0], #0x30]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 15:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "ld1w z18.s, p7/z, [%[b_ptr0], #-2, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x30]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z0.s[2]\n"
                    "fmla z29.s, z18.s, z1.s[2]\n"
                    "fmla z30.s, z18.s, z2.s[2]\n"
                    "fmla z31.s, z18.s, z3.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p6/z, [%[a_ptr0], #0x30]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z3.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 16:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "ld1w z18.s, p7/z, [%[b_ptr0], #-2, MUL VL]\n"
                    "ld1w z19.s, p7/z, [%[b_ptr0], #-1, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z0.s[2]\n"
                    "fmla z29.s, z18.s, z1.s[2]\n"
                    "fmla z30.s, z18.s, z2.s[2]\n"
                    "fmla z31.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z0.s[3]\n"
                    "fmla z29.s, z19.s, z1.s[3]\n"
                    "fmla z30.s, z19.s, z2.s[3]\n"
                    "fmla z31.s, z19.s, z3.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z3.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 17:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "ld1w z18.s, p7/z, [%[b_ptr0], #-2, MUL VL]\n"
                    "ld1w z19.s, p7/z, [%[b_ptr0], #-1, MUL VL]\n"
                    "ld1w z20.s, p7/z, [%[b_ptr0]]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z0.s[2]\n"
                    "fmla z29.s, z18.s, z1.s[2]\n"
                    "fmla z30.s, z18.s, z2.s[2]\n"
                    "fmla z31.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x40]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z19.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x40]\n"
                    "fmla z30.s, z19.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x40]\n"
                    "fmla z31.s, z19.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x40]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z20.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z20.s, z2.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "fmla z31.s, z20.s, z3.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x40]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z3.s[3]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 18:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "ld1w z18.s, p7/z, [%[b_ptr0], #-2, MUL VL]\n"
                    "ld1w z19.s, p7/z, [%[b_ptr0], #-1, MUL VL]\n"
                    "ld1w z20.s, p7/z, [%[b_ptr0]]\n"
                    "ld1w z21.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z0.s[2]\n"
                    "fmla z29.s, z18.s, z1.s[2]\n"
                    "fmla z30.s, z18.s, z2.s[2]\n"
                    "fmla z31.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x40]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z19.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x40]\n"
                    "fmla z30.s, z19.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x40]\n"
                    "fmla z31.s, z19.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x40]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z20.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z20.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z20.s, z3.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z29.s, z21.s, z1.s[1]\n"
                    "fmla z30.s, z21.s, z2.s[1]\n"
                    "fmla z31.s, z21.s, z3.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x40]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z3.s[3]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 19:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "ld1w z18.s, p7/z, [%[b_ptr0], #-2, MUL VL]\n"
                    "ld1w z19.s, p7/z, [%[b_ptr0], #-1, MUL VL]\n"
                    "ld1w z20.s, p7/z, [%[b_ptr0]]\n"
                    "ld1w z21.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "ld1w z22.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z0.s[2]\n"
                    "fmla z29.s, z18.s, z1.s[2]\n"
                    "fmla z30.s, z18.s, z2.s[2]\n"
                    "fmla z31.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x40]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z19.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x40]\n"
                    "fmla z30.s, z19.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x40]\n"
                    "fmla z31.s, z19.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x40]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z20.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z20.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z20.s, z3.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z29.s, z21.s, z1.s[1]\n"
                    "fmla z30.s, z21.s, z2.s[1]\n"
                    "fmla z31.s, z21.s, z3.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z29.s, z22.s, z1.s[2]\n"
                    "fmla z30.s, z22.s, z2.s[2]\n"
                    "fmla z31.s, z22.s, z3.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x40]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z3.s[3]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 20:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "ld1w z18.s, p7/z, [%[b_ptr0], #-2, MUL VL]\n"
                    "ld1w z19.s, p7/z, [%[b_ptr0], #-1, MUL VL]\n"
                    "ld1w z20.s, p7/z, [%[b_ptr0]]\n"
                    "ld1w z21.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "ld1w z22.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z23.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z0.s[2]\n"
                    "fmla z29.s, z18.s, z1.s[2]\n"
                    "fmla z30.s, z18.s, z2.s[2]\n"
                    "fmla z31.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x40]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z19.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x40]\n"
                    "fmla z30.s, z19.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x40]\n"
                    "fmla z31.s, z19.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x40]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z20.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z20.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z20.s, z3.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z29.s, z21.s, z1.s[1]\n"
                    "fmla z30.s, z21.s, z2.s[1]\n"
                    "fmla z31.s, z21.s, z3.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z29.s, z22.s, z1.s[2]\n"
                    "fmla z30.s, z22.s, z2.s[2]\n"
                    "fmla z31.s, z22.s, z3.s[2]\n"
                    "fmla z28.s, z23.s, z0.s[3]\n"
                    "fmla z29.s, z23.s, z1.s[3]\n"
                    "fmla z30.s, z23.s, z2.s[3]\n"
                    "fmla z31.s, z23.s, z3.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x40]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z3.s[3]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z28.s, z23.s, z0.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 21:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "ld1w z18.s, p7/z, [%[b_ptr0], #-2, MUL VL]\n"
                    "ld1w z19.s, p7/z, [%[b_ptr0], #-1, MUL VL]\n"
                    "ld1w z20.s, p7/z, [%[b_ptr0]]\n"
                    "ld1w z21.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "ld1w z22.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z23.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z24.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z0.s[2]\n"
                    "fmla z29.s, z18.s, z1.s[2]\n"
                    "fmla z30.s, z18.s, z2.s[2]\n"
                    "fmla z31.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x40]\n"
                    "fmla z29.s, z19.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x40]\n"
                    "fmla z30.s, z19.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x40]\n"
                    "fmla z31.s, z19.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x40]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z29.s, z20.s, z1.s[0]\n"
                    "fmla z30.s, z20.s, z2.s[0]\n"
                    "fmla z31.s, z20.s, z3.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z29.s, z21.s, z1.s[1]\n"
                    "fmla z30.s, z21.s, z2.s[1]\n"
                    "fmla z31.s, z21.s, z3.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z29.s, z22.s, z1.s[2]\n"
                    "fmla z30.s, z22.s, z2.s[2]\n"
                    "fmla z31.s, z22.s, z3.s[2]\n"
                    "fmla z28.s, z23.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x50]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z23.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x50]\n"
                    "fmla z30.s, z23.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x50]\n"
                    "fmla z31.s, z23.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x50]\n"
                    "fmla z28.s, z24.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z24.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z24.s, z2.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "fmla z31.s, z24.s, z3.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x40]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [%[a_ptr0], #0x50]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z3.s[3]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z28.s, z23.s, z0.s[3]\n"
                    "fmla z28.s, z24.s, z1.s[0]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 22:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "ld1w z18.s, p7/z, [%[b_ptr0], #-2, MUL VL]\n"
                    "ld1w z19.s, p7/z, [%[b_ptr0], #-1, MUL VL]\n"
                    "ld1w z20.s, p7/z, [%[b_ptr0]]\n"
                    "ld1w z21.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "ld1w z22.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z23.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z24.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z25.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z0.s[2]\n"
                    "fmla z29.s, z18.s, z1.s[2]\n"
                    "fmla z30.s, z18.s, z2.s[2]\n"
                    "fmla z31.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x40]\n"
                    "fmla z29.s, z19.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x40]\n"
                    "fmla z30.s, z19.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x40]\n"
                    "fmla z31.s, z19.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x40]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z29.s, z20.s, z1.s[0]\n"
                    "fmla z30.s, z20.s, z2.s[0]\n"
                    "fmla z31.s, z20.s, z3.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z29.s, z21.s, z1.s[1]\n"
                    "fmla z30.s, z21.s, z2.s[1]\n"
                    "fmla z31.s, z21.s, z3.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z29.s, z22.s, z1.s[2]\n"
                    "fmla z30.s, z22.s, z2.s[2]\n"
                    "fmla z31.s, z22.s, z3.s[2]\n"
                    "fmla z28.s, z23.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x50]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z23.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x50]\n"
                    "fmla z30.s, z23.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x50]\n"
                    "fmla z31.s, z23.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x50]\n"
                    "fmla z28.s, z24.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z24.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z24.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z24.s, z3.s[0]\n"
                    "fmla z28.s, z25.s, z0.s[1]\n"
                    "fmla z29.s, z25.s, z1.s[1]\n"
                    "fmla z30.s, z25.s, z2.s[1]\n"
                    "fmla z31.s, z25.s, z3.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x40]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [%[a_ptr0], #0x50]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z3.s[3]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z28.s, z23.s, z0.s[3]\n"
                    "fmla z28.s, z24.s, z1.s[0]\n"
                    "fmla z28.s, z25.s, z1.s[1]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            case 23:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "ld1w z18.s, p7/z, [%[b_ptr0], #-2, MUL VL]\n"
                    "ld1w z19.s, p7/z, [%[b_ptr0], #-1, MUL VL]\n"
                    "ld1w z20.s, p7/z, [%[b_ptr0]]\n"
                    "ld1w z21.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "ld1w z22.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z23.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z24.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z25.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z26.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z0.s[2]\n"
                    "fmla z29.s, z18.s, z1.s[2]\n"
                    "fmla z30.s, z18.s, z2.s[2]\n"
                    "fmla z31.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x40]\n"
                    "fmla z29.s, z19.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x40]\n"
                    "fmla z30.s, z19.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x40]\n"
                    "fmla z31.s, z19.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x40]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z29.s, z20.s, z1.s[0]\n"
                    "fmla z30.s, z20.s, z2.s[0]\n"
                    "fmla z31.s, z20.s, z3.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z29.s, z21.s, z1.s[1]\n"
                    "fmla z30.s, z21.s, z2.s[1]\n"
                    "fmla z31.s, z21.s, z3.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z29.s, z22.s, z1.s[2]\n"
                    "fmla z30.s, z22.s, z2.s[2]\n"
                    "fmla z31.s, z22.s, z3.s[2]\n"
                    "fmla z28.s, z23.s, z0.s[3]\n"
                    "ld1rqw z0.s, p6/z, [%[a_ptr0], #0x50]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z23.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [a_ptr1, #0x50]\n"
                    "fmla z30.s, z23.s, z2.s[3]\n"
                    "ld1rqw z2.s, p6/z, [a_ptr2, #0x50]\n"
                    "fmla z31.s, z23.s, z3.s[3]\n"
                    "ld1rqw z3.s, p6/z, [a_ptr3, #0x50]\n"
                    "fmla z28.s, z24.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z24.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z24.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z24.s, z3.s[0]\n"
                    "fmla z28.s, z25.s, z0.s[1]\n"
                    "fmla z29.s, z25.s, z1.s[1]\n"
                    "fmla z30.s, z25.s, z2.s[1]\n"
                    "fmla z31.s, z25.s, z3.s[1]\n"
                    "fmla z28.s, z26.s, z0.s[2]\n"
                    "fmla z29.s, z26.s, z1.s[2]\n"
                    "fmla z30.s, z26.s, z2.s[2]\n"
                    "fmla z31.s, z26.s, z3.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x40]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p6/z, [%[a_ptr0], #0x50]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z3.s[3]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z28.s, z23.s, z0.s[3]\n"
                    "fmla z28.s, z24.s, z1.s[0]\n"
                    "fmla z28.s, z25.s, z1.s[1]\n"
                    "fmla z28.s, z26.s, z1.s[2]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
            default:
            case 24:
                __asm __volatile (
                    "a_ptr1 .req X0\n"
                    "a_ptr2 .req X1\n"
                    "a_ptr3 .req X2\n"
                    "c_ptr1 .req X3\n"
                    "c_ptr2 .req X4\n"
                    "c_ptr3 .req X5\n"
                    "add a_ptr1, %[a_ptr0], %[lda]\n"
                    "add c_ptr1, %[c_ptr0], %[ldc]\n"
                    "whilelt p6.s, %[temp], %[odd_depth]\n"
                    "whilelt p0.s, %[temp], %[width]\n"
                    "ptrue p7.s\n"
                    "add a_ptr2, a_ptr1, %[lda]\n"
                    "add c_ptr2, c_ptr1, %[ldc]\n"
                    "ld1w z4.s, p7/z, [%[b_ptr0]]\n"
                    "add a_ptr3, a_ptr2, %[lda]\n"
                    "ld1w z5.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "add c_ptr3, c_ptr2, %[ldc]\n"
                    "ld1w z6.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z7.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z8.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z9.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z10.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z11.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "addvl %[b_ptr0], %[b_ptr0], #16\n"
                    "ld1w z12.s, p7/z, [%[b_ptr0], #-8, MUL VL]\n"
                    "ld1w z13.s, p7/z, [%[b_ptr0], #-7, MUL VL]\n"
                    "ld1w z14.s, p7/z, [%[b_ptr0], #-6, MUL VL]\n"
                    "ld1w z15.s, p7/z, [%[b_ptr0], #-5, MUL VL]\n"
                    "ld1w z16.s, p7/z, [%[b_ptr0], #-4, MUL VL]\n"
                    "ld1w z17.s, p7/z, [%[b_ptr0], #-3, MUL VL]\n"
                    "ld1w z18.s, p7/z, [%[b_ptr0], #-2, MUL VL]\n"
                    "ld1w z19.s, p7/z, [%[b_ptr0], #-1, MUL VL]\n"
                    "ld1w z20.s, p7/z, [%[b_ptr0]]\n"
                    "ld1w z21.s, p7/z, [%[b_ptr0], #1, MUL VL]\n"
                    "ld1w z22.s, p7/z, [%[b_ptr0], #2, MUL VL]\n"
                    "ld1w z23.s, p7/z, [%[b_ptr0], #3, MUL VL]\n"
                    "ld1w z24.s, p7/z, [%[b_ptr0], #4, MUL VL]\n"
                    "ld1w z25.s, p7/z, [%[b_ptr0], #5, MUL VL]\n"
                    "ld1w z26.s, p7/z, [%[b_ptr0], #6, MUL VL]\n"
                    "ld1w z27.s, p7/z, [%[b_ptr0], #7, MUL VL]\n"
                    "cbz %[loops], 1f\n"
                    "2:\n"
                    "cbz %[beta0], 3f\n"
                    "mov z28.s, #0\n"
                    "mov z29.s, #0\n"
                    "mov z30.s, #0\n"
                    "mov z31.s, #0\n"
                    "b 4f\n"
                    "3:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "ld1w z29.s, p0/z, [c_ptr1]\n"
                    "ld1w z30.s, p0/z, [c_ptr2]\n"
                    "ld1w z31.s, p0/z, [c_ptr3]\n"
                    "4:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[loops], %[loops], #0x1\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z29.s, z4.s, z1.s[0]\n"
                    "fmla z30.s, z4.s, z2.s[0]\n"
                    "fmla z31.s, z4.s, z3.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z29.s, z5.s, z1.s[1]\n"
                    "fmla z30.s, z5.s, z2.s[1]\n"
                    "fmla z31.s, z5.s, z3.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z29.s, z6.s, z1.s[2]\n"
                    "fmla z30.s, z6.s, z2.s[2]\n"
                    "fmla z31.s, z6.s, z3.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "fmla z29.s, z7.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x10]\n"
                    "fmla z30.s, z7.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x10]\n"
                    "fmla z31.s, z7.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x10]\n"
                    "fmla z28.s, z8.s, z0.s[0]\n"
                    "fmla z29.s, z8.s, z1.s[0]\n"
                    "fmla z30.s, z8.s, z2.s[0]\n"
                    "fmla z31.s, z8.s, z3.s[0]\n"
                    "fmla z28.s, z9.s, z0.s[1]\n"
                    "fmla z29.s, z9.s, z1.s[1]\n"
                    "fmla z30.s, z9.s, z2.s[1]\n"
                    "fmla z31.s, z9.s, z3.s[1]\n"
                    "fmla z28.s, z10.s, z0.s[2]\n"
                    "fmla z29.s, z10.s, z1.s[2]\n"
                    "fmla z30.s, z10.s, z2.s[2]\n"
                    "fmla z31.s, z10.s, z3.s[2]\n"
                    "fmla z28.s, z11.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "fmla z29.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x20]\n"
                    "fmla z30.s, z11.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x20]\n"
                    "fmla z31.s, z11.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x20]\n"
                    "fmla z28.s, z12.s, z0.s[0]\n"
                    "fmla z29.s, z12.s, z1.s[0]\n"
                    "fmla z30.s, z12.s, z2.s[0]\n"
                    "fmla z31.s, z12.s, z3.s[0]\n"
                    "fmla z28.s, z13.s, z0.s[1]\n"
                    "fmla z29.s, z13.s, z1.s[1]\n"
                    "fmla z30.s, z13.s, z2.s[1]\n"
                    "fmla z31.s, z13.s, z3.s[1]\n"
                    "fmla z28.s, z14.s, z0.s[2]\n"
                    "fmla z29.s, z14.s, z1.s[2]\n"
                    "fmla z30.s, z14.s, z2.s[2]\n"
                    "fmla z31.s, z14.s, z3.s[2]\n"
                    "fmla z28.s, z15.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z29.s, z15.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x30]\n"
                    "fmla z30.s, z15.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x30]\n"
                    "fmla z31.s, z15.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x30]\n"
                    "fmla z28.s, z16.s, z0.s[0]\n"
                    "fmla z29.s, z16.s, z1.s[0]\n"
                    "fmla z30.s, z16.s, z2.s[0]\n"
                    "fmla z31.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z0.s[1]\n"
                    "fmla z29.s, z17.s, z1.s[1]\n"
                    "fmla z30.s, z17.s, z2.s[1]\n"
                    "fmla z31.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z0.s[2]\n"
                    "fmla z29.s, z18.s, z1.s[2]\n"
                    "fmla z30.s, z18.s, z2.s[2]\n"
                    "fmla z31.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x40]\n"
                    "fmla z29.s, z19.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x40]\n"
                    "fmla z30.s, z19.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x40]\n"
                    "fmla z31.s, z19.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x40]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z29.s, z20.s, z1.s[0]\n"
                    "fmla z30.s, z20.s, z2.s[0]\n"
                    "fmla z31.s, z20.s, z3.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z29.s, z21.s, z1.s[1]\n"
                    "fmla z30.s, z21.s, z2.s[1]\n"
                    "fmla z31.s, z21.s, z3.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z29.s, z22.s, z1.s[2]\n"
                    "fmla z30.s, z22.s, z2.s[2]\n"
                    "fmla z31.s, z22.s, z3.s[2]\n"
                    "fmla z28.s, z23.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x50]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda], LSL #2\n"
                    "fmla z29.s, z23.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [a_ptr1, #0x50]\n"
                    "fmla z30.s, z23.s, z2.s[3]\n"
                    "ld1rqw z2.s, p7/z, [a_ptr2, #0x50]\n"
                    "fmla z31.s, z23.s, z3.s[3]\n"
                    "ld1rqw z3.s, p7/z, [a_ptr3, #0x50]\n"
                    "fmla z28.s, z24.s, z0.s[0]\n"
                    "add a_ptr1, a_ptr1, %[lda], LSL #2\n"
                    "fmla z29.s, z24.s, z1.s[0]\n"
                    "add a_ptr2, a_ptr2, %[lda], LSL #2\n"
                    "fmla z30.s, z24.s, z2.s[0]\n"
                    "add a_ptr3, a_ptr3, %[lda], LSL #2\n"
                    "fmla z31.s, z24.s, z3.s[0]\n"
                    "fmla z28.s, z25.s, z0.s[1]\n"
                    "fmla z29.s, z25.s, z1.s[1]\n"
                    "fmla z30.s, z25.s, z2.s[1]\n"
                    "fmla z31.s, z25.s, z3.s[1]\n"
                    "fmla z28.s, z26.s, z0.s[2]\n"
                    "fmla z29.s, z26.s, z1.s[2]\n"
                    "fmla z30.s, z26.s, z2.s[2]\n"
                    "fmla z31.s, z26.s, z3.s[2]\n"
                    "fmla z28.s, z27.s, z0.s[3]\n"
                    "fmla z29.s, z27.s, z1.s[3]\n"
                    "fmla z30.s, z27.s, z2.s[3]\n"
                    "fmla z31.s, z27.s, z3.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc], LSL #2\n"
                    "st1w z29.s, p0, [c_ptr1]\n"
                    "add c_ptr1, c_ptr1, %[ldc], LSL #2\n"
                    "st1w z30.s, p0, [c_ptr2]\n"
                    "add c_ptr2, c_ptr2, %[ldc], LSL #2\n"
                    "st1w z31.s, p0, [c_ptr3]\n"
                    "add c_ptr3, c_ptr3, %[ldc], LSL #2\n"
                    "b.ne 2b\n"
                    "1:\n"
                    "cbz %[oddrows], 5f\n"
                    "6:\n"
                    "cbz %[beta0], 7f\n"
                    "mov z28.s, #0\n"
                    "b 8f\n"
                    "7:\n"
                    "ld1w z28.s, p0/z, [%[c_ptr0]]\n"
                    "8:\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0]]\n"
                    "subs %[oddrows], %[oddrows], #0x1\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x10]\n"
                    "ld1rqw z2.s, p7/z, [%[a_ptr0], #0x20]\n"
                    "ld1rqw z3.s, p7/z, [%[a_ptr0], #0x30]\n"
                    "fmla z28.s, z4.s, z0.s[0]\n"
                    "fmla z28.s, z5.s, z0.s[1]\n"
                    "fmla z28.s, z6.s, z0.s[2]\n"
                    "fmla z28.s, z7.s, z0.s[3]\n"
                    "ld1rqw z0.s, p7/z, [%[a_ptr0], #0x40]\n"
                    "fmla z28.s, z8.s, z1.s[0]\n"
                    "fmla z28.s, z9.s, z1.s[1]\n"
                    "fmla z28.s, z10.s, z1.s[2]\n"
                    "fmla z28.s, z11.s, z1.s[3]\n"
                    "ld1rqw z1.s, p7/z, [%[a_ptr0], #0x50]\n"
                    "add %[a_ptr0], %[a_ptr0], %[lda]\n"
                    "fmla z28.s, z12.s, z2.s[0]\n"
                    "fmla z28.s, z13.s, z2.s[1]\n"
                    "fmla z28.s, z14.s, z2.s[2]\n"
                    "fmla z28.s, z15.s, z2.s[3]\n"
                    "fmla z28.s, z16.s, z3.s[0]\n"
                    "fmla z28.s, z17.s, z3.s[1]\n"
                    "fmla z28.s, z18.s, z3.s[2]\n"
                    "fmla z28.s, z19.s, z3.s[3]\n"
                    "fmla z28.s, z20.s, z0.s[0]\n"
                    "fmla z28.s, z21.s, z0.s[1]\n"
                    "fmla z28.s, z22.s, z0.s[2]\n"
                    "fmla z28.s, z23.s, z0.s[3]\n"
                    "fmla z28.s, z24.s, z1.s[0]\n"
                    "fmla z28.s, z25.s, z1.s[1]\n"
                    "fmla z28.s, z26.s, z1.s[2]\n"
                    "fmla z28.s, z27.s, z1.s[3]\n"
                    "st1w z28.s, p0, [%[c_ptr0]]\n"
                    "add %[c_ptr0], %[c_ptr0], %[ldc]\n"
                    "b.ne 6b\n"
                    "5:\n"
                    ".unreq a_ptr1\n"
                    ".unreq a_ptr2\n"
                    ".unreq a_ptr3\n"
                    ".unreq c_ptr1\n"
                    ".unreq c_ptr2\n"
                    ".unreq c_ptr3\n"
                    : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (loops), [temp] "+r" (temp), [oddrows] "+r" (oddrows)
                    : [betaptr] "r" (betaptr), [width] "r" (width), [beta0] "r" (beta0), [odd_depth] "r" (odd_depth), [lda] "r" (ldab), [ldc] "r" (ldcb)
                    : "x0", "x1", "x2", "x3", "x4", "x5", "z0", "z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z19", "z20", "z21", "z22", "z23", "z24", "z25", "z26", "z27", "z28", "z29", "z30", "z31", "cc", "memory"
                );
                break;
        }
    }
}

} // namespace arm_gemm

#endif // __ARM_FEATURE_SVE
