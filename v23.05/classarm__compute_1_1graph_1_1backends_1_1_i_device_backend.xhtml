<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IDeviceBackend Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IDeviceBackend Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Device backend interface.  
 <a href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_device_backend_8h_source.xhtml">IDeviceBackend.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac111996fd9affe37e5322ce1bcf2f497"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#ac111996fd9affe37e5322ce1bcf2f497">~IDeviceBackend</a> ()=default</td></tr>
<tr class="memdesc:ac111996fd9affe37e5322ce1bcf2f497"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual Destructor.  <a href="#ac111996fd9affe37e5322ce1bcf2f497">More...</a><br /></td></tr>
<tr class="separator:ac111996fd9affe37e5322ce1bcf2f497"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06c1cd9b4e00e6c00365bfeab0ff7785"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a06c1cd9b4e00e6c00365bfeab0ff7785">initialize_backend</a> ()=0</td></tr>
<tr class="memdesc:a06c1cd9b4e00e6c00365bfeab0ff7785"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the backend.  <a href="#a06c1cd9b4e00e6c00365bfeab0ff7785">More...</a><br /></td></tr>
<tr class="separator:a06c1cd9b4e00e6c00365bfeab0ff7785"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad172b9815229e40cd25ad1c401d2a0e4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#ad172b9815229e40cd25ad1c401d2a0e4">setup_backend_context</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;ctx)=0</td></tr>
<tr class="memdesc:ad172b9815229e40cd25ad1c401d2a0e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setups the given graph context.  <a href="#ad172b9815229e40cd25ad1c401d2a0e4">More...</a><br /></td></tr>
<tr class="separator:ad172b9815229e40cd25ad1c401d2a0e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a449129d5832bab24106f9f67583dc8a1"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a449129d5832bab24106f9f67583dc8a1">release_backend_context</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;ctx)=0</td></tr>
<tr class="memdesc:a449129d5832bab24106f9f67583dc8a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release the backend specific resources associated to a given graph context.  <a href="#a449129d5832bab24106f9f67583dc8a1">More...</a><br /></td></tr>
<tr class="separator:a449129d5832bab24106f9f67583dc8a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba671d383a01749f55e49d5750646c05"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#aba671d383a01749f55e49d5750646c05">is_backend_supported</a> ()=0</td></tr>
<tr class="memdesc:aba671d383a01749f55e49d5750646c05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if an instantiated backend is actually supported.  <a href="#aba671d383a01749f55e49d5750646c05">More...</a><br /></td></tr>
<tr class="separator:aba671d383a01749f55e49d5750646c05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac37337ce735ea0bc448d31f719392993"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#ac37337ce735ea0bc448d31f719392993">backend_allocator</a> ()=0</td></tr>
<tr class="memdesc:ac37337ce735ea0bc448d31f719392993"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a backend memory allocator.  <a href="#ac37337ce735ea0bc448d31f719392993">More...</a><br /></td></tr>
<tr class="separator:ac37337ce735ea0bc448d31f719392993"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f46e4fef818b4114b3d09c799944046"><td class="memItemLeft" align="right" valign="top">virtual std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a0f46e4fef818b4114b3d09c799944046">create_tensor</a> (const <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)=0</td></tr>
<tr class="memdesc:a0f46e4fef818b4114b3d09c799944046"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a backend <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a>.  <a href="#a0f46e4fef818b4114b3d09c799944046">More...</a><br /></td></tr>
<tr class="separator:a0f46e4fef818b4114b3d09c799944046"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8e71170f6e62ea5e6fefab95380a01b"><td class="memItemLeft" align="right" valign="top">virtual std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#af8e71170f6e62ea5e6fefab95380a01b">create_subtensor</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> *parent, <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> shape, <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> coords, bool extend_parent)=0</td></tr>
<tr class="memdesc:af8e71170f6e62ea5e6fefab95380a01b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a backend Sub-Tensor.  <a href="#af8e71170f6e62ea5e6fefab95380a01b">More...</a><br /></td></tr>
<tr class="separator:af8e71170f6e62ea5e6fefab95380a01b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af989fb4cdd6783b776e6b3feceb9fdcb"><td class="memItemLeft" align="right" valign="top">virtual std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#af989fb4cdd6783b776e6b3feceb9fdcb">configure_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;node, <a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;ctx)=0</td></tr>
<tr class="memdesc:af989fb4cdd6783b776e6b3feceb9fdcb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure a backend Node.  <a href="#af989fb4cdd6783b776e6b3feceb9fdcb">More...</a><br /></td></tr>
<tr class="separator:af989fb4cdd6783b776e6b3feceb9fdcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad722cd593bc5300108c8837ce5c980"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a2ad722cd593bc5300108c8837ce5c980">validate_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;node)=0</td></tr>
<tr class="memdesc:a2ad722cd593bc5300108c8837ce5c980"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate a node.  <a href="#a2ad722cd593bc5300108c8837ce5c980">More...</a><br /></td></tr>
<tr class="separator:a2ad722cd593bc5300108c8837ce5c980"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa42b584f7715675c47b7ecb70d494e9c"><td class="memItemLeft" align="right" valign="top">virtual std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">arm_compute::IMemoryManager</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#aa42b584f7715675c47b7ecb70d494e9c">create_memory_manager</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206e">MemoryManagerAffinity</a> affinity)=0</td></tr>
<tr class="memdesc:aa42b584f7715675c47b7ecb70d494e9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a backend memory manager given its affinity.  <a href="#aa42b584f7715675c47b7ecb70d494e9c">More...</a><br /></td></tr>
<tr class="separator:aa42b584f7715675c47b7ecb70d494e9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e70bd2e99ee6a4afd3bcc915bc9c4f7"><td class="memItemLeft" align="right" valign="top">virtual std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_weights_manager.xhtml">arm_compute::IWeightsManager</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a8e70bd2e99ee6a4afd3bcc915bc9c4f7">create_weights_manager</a> ()=0</td></tr>
<tr class="memdesc:a8e70bd2e99ee6a4afd3bcc915bc9c4f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a backend weights manager.  <a href="#a8e70bd2e99ee6a4afd3bcc915bc9c4f7">More...</a><br /></td></tr>
<tr class="separator:a8e70bd2e99ee6a4afd3bcc915bc9c4f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67120e76996aaa08d407cc4a00d89f1c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a67120e76996aaa08d407cc4a00d89f1c">sync</a> ()=0</td></tr>
<tr class="memdesc:a67120e76996aaa08d407cc4a00d89f1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Synchronize kernels execution on the backend.  <a href="#a67120e76996aaa08d407cc4a00d89f1c">More...</a><br /></td></tr>
<tr class="separator:a67120e76996aaa08d407cc4a00d89f1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Device backend interface. </p>

<p class="definition">Definition at line <a class="el" href="_i_device_backend_8h_source.xhtml#l00048">48</a> of file <a class="el" href="_i_device_backend_8h_source.xhtml">IDeviceBackend.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac111996fd9affe37e5322ce1bcf2f497"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac111996fd9affe37e5322ce1bcf2f497">&#9670;&nbsp;</a></span>~IDeviceBackend()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml">IDeviceBackend</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac37337ce735ea0bc448d31f719392993"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac37337ce735ea0bc448d31f719392993">&#9670;&nbsp;</a></span>backend_allocator()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a>* backend_allocator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a backend memory allocator. </p>
<dl class="section return"><dt>Returns</dt><dd>Backend memory allocator </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ae6b65acad7e828cac1385f7efd5e1ac3">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#ae6b65acad7e828cac1385f7efd5e1ac3">NEDeviceBackend</a>.</p>

</div>
</div>
<a id="af989fb4cdd6783b776e6b3feceb9fdcb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af989fb4cdd6783b776e6b3feceb9fdcb">&#9670;&nbsp;</a></span>configure_node()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a>&gt; configure_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configure a backend Node. </p>
<dl class="section note"><dt>Note</dt><dd>This creates an appropriate configured backend function for the given node</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td>The node we want to configure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>Context to use</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Backend execution function </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ad47ca77f85641c7e74f75986a28682e6">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#ad47ca77f85641c7e74f75986a28682e6">NEDeviceBackend</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00133">arm_compute::graph::detail::configure_all_nodes()</a>.</p>

</div>
</div>
<a id="aa42b584f7715675c47b7ecb70d494e9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa42b584f7715675c47b7ecb70d494e9c">&#9670;&nbsp;</a></span>create_memory_manager()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::shared_ptr&lt;<a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">arm_compute::IMemoryManager</a>&gt; create_memory_manager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206e">MemoryManagerAffinity</a>&#160;</td>
          <td class="paramname"><em>affinity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a backend memory manager given its affinity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">affinity</td><td><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> Manager affinity</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> manager </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ad02dea2a998dcd64725620b72022ba56">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#ad02dea2a998dcd64725620b72022ba56">NEDeviceBackend</a>.</p>

</div>
</div>
<a id="af8e71170f6e62ea5e6fefab95380a01b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8e71170f6e62ea5e6fefab95380a01b">&#9670;&nbsp;</a></span>create_subtensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a>&gt; create_subtensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td>
          <td class="paramname"><em>shape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>&#160;</td>
          <td class="paramname"><em>coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>extend_parent</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a backend Sub-Tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">parent</td><td>Parent sub-tensor handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shape</td><td>Shape of the sub-tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">coords</td><td>Starting coordinates of the sub-tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">extend_parent</td><td>Extends parent shape if true</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Backend sub-tensor handle </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ae799bfb412ee884ddaec1111d65a5709">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#ae799bfb412ee884ddaec1111d65a5709">NEDeviceBackend</a>.</p>

<p class="reference">Referenced by <a class="el" href="_depth_concat_sub_tensor_mutator_8cpp_source.xhtml#l00050">DepthConcatSubTensorMutator::mutate()</a>, and <a class="el" href="_split_layer_sub_tensor_mutator_8cpp_source.xhtml#l00050">SplitLayerSubTensorMutator::mutate()</a>.</p>

</div>
</div>
<a id="a0f46e4fef818b4114b3d09c799944046"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f46e4fef818b4114b3d09c799944046">&#9670;&nbsp;</a></span>create_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a>&gt; create_tensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a backend <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td>The tensor we want to create a backend tensor for</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Backend tensor handle </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a5100fa4901700c5ce71b142e4b1b8d14">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#a5100fa4901700c5ce71b142e4b1b8d14">NEDeviceBackend</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00056">arm_compute::graph::detail::configure_all_tensors()</a>, and <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00217">arm_compute::graph::configure_tensor()</a>.</p>

</div>
</div>
<a id="a8e70bd2e99ee6a4afd3bcc915bc9c4f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e70bd2e99ee6a4afd3bcc915bc9c4f7">&#9670;&nbsp;</a></span>create_weights_manager()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::shared_ptr&lt;<a class="el" href="classarm__compute_1_1_i_weights_manager.xhtml">arm_compute::IWeightsManager</a>&gt; create_weights_manager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a backend weights manager. </p>
<dl class="section return"><dt>Returns</dt><dd>Weights manager </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#afae4c74f4a8efc83d76cf56e661f3ebc">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#afae4c74f4a8efc83d76cf56e661f3ebc">NEDeviceBackend</a>.</p>

</div>
</div>
<a id="a06c1cd9b4e00e6c00365bfeab0ff7785"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06c1cd9b4e00e6c00365bfeab0ff7785">&#9670;&nbsp;</a></span>initialize_backend()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void initialize_backend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes the backend. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#aa3f63e23c21fa7f4049c49338ec9d9a8">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#aa3f63e23c21fa7f4049c49338ec9d9a8">NEDeviceBackend</a>.</p>

</div>
</div>
<a id="aba671d383a01749f55e49d5750646c05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba671d383a01749f55e49d5750646c05">&#9670;&nbsp;</a></span>is_backend_supported()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool is_backend_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if an instantiated backend is actually supported. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the backend is supported else false </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a96a97b6b97a89e6940f8853d1dcbf213">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#a96a97b6b97a89e6940f8853d1dcbf213">NEDeviceBackend</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_registry_8cpp_source.xhtml#l00051">BackendRegistry::get_backend()</a>, and <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00034">arm_compute::graph::is_target_supported()</a>.</p>

</div>
</div>
<a id="a449129d5832bab24106f9f67583dc8a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a449129d5832bab24106f9f67583dc8a1">&#9670;&nbsp;</a></span>release_backend_context()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void release_backend_context </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Release the backend specific resources associated to a given graph context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">ctx</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> context </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#aa24d3f58d6e9c1d8c171d25defcdfb54">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#aa24d3f58d6e9c1d8c171d25defcdfb54">NEDeviceBackend</a>.</p>

</div>
</div>
<a id="ad172b9815229e40cd25ad1c401d2a0e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad172b9815229e40cd25ad1c401d2a0e4">&#9670;&nbsp;</a></span>setup_backend_context()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void setup_backend_context </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Setups the given graph context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">ctx</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> context </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a7b1a687adb038e7e989e5d33b26651dc">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#a7b1a687adb038e7e989e5d33b26651dc">NEDeviceBackend</a>.</p>

<p class="reference">Referenced by <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00130">arm_compute::graph::setup_requested_backend_context()</a>.</p>

</div>
</div>
<a id="a67120e76996aaa08d407cc4a00d89f1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67120e76996aaa08d407cc4a00d89f1c">&#9670;&nbsp;</a></span>sync()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void sync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Synchronize kernels execution on the backend. </p>
<p>On GPU, this results in a blocking call waiting for all kernels to be completed. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a71dadfded87f1b0d1820dbe51966686c">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#a71dadfded87f1b0d1820dbe51966686c">NEDeviceBackend</a>.</p>

</div>
</div>
<a id="a2ad722cd593bc5300108c8837ce5c980"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ad722cd593bc5300108c8837ce5c980">&#9670;&nbsp;</a></span>validate_node()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Validate a node. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td>The node we want to validate</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An error status </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#af8c9f941cc0efcdc112ac8534a204dd0">CLDeviceBackend</a>, and <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml#af8c9f941cc0efcdc112ac8534a204dd0">NEDeviceBackend</a>.</p>

<p class="reference">Referenced by <a class="el" href="_grouped_convolution_mutator_8cpp_source.xhtml#l00113">GroupedConvolutionMutator::mutate()</a>, and <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00039">arm_compute::graph::detail::validate_all_nodes()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/graph/<a class="el" href="_i_device_backend_8h_source.xhtml">IDeviceBackend.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">backends</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml">IDeviceBackend</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:42 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
