<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/arm_gemm/quantize_wrapper.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('quantize__wrapper_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">quantize_wrapper.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="quantize__wrapper_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2021 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__gemm_8hpp.xhtml">arm_gemm.hpp</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="barrier_8hpp.xhtml">barrier.hpp</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="gemm__implementation_8hpp.xhtml">gemm_implementation.hpp</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="quantized_8hpp.xhtml">quantized.hpp</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__gemm.xhtml">arm_gemm</a> {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/* Quantized wrapper - do an integer GEMM and wrap around the quantization. */</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> To, <span class="keyword">typename</span> Tr, <span class="keyword">typename</span> Tgemm&gt;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml">   38</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml">QuantizeWrapper</a> : <span class="keyword">public</span> <a class="code" href="classarm__gemm_1_1_gemm_common.xhtml">GemmCommon</a>&lt;To, Tr&gt; {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon&lt;To, Tgemm&gt;</a>  _subgemm = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    int32_t                     *_row_sums = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    int32_t                     *_col_sums = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a>                 _params;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a>                     _args;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="classarm__gemm_1_1barrier.xhtml">barrier</a>                      _barrier;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordtype">void</span> *working_space = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">bool</span>  arrays_set = <span class="keyword">false</span>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">/* We need a subgemm which outputs the 32-bit intermediates - how much space is needed for that? */</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">size_t</span> subgemm_output_size()<span class="keyword"> const </span>{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">return</span> (_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#aca00029952f2150554138015af1ac1ce">_nbatches</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a> * <span class="keyword">sizeof</span>(int32_t));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">size_t</span> col_sum_size()<span class="keyword"> const </span>{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">return</span> (_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a> * <span class="keyword">sizeof</span>(int32_t));</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">size_t</span> row_sum_size()<span class="keyword"> const </span>{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">return</span> (_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#aca00029952f2150554138015af1ac1ce">_nbatches</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a> * <span class="keyword">sizeof</span>(int32_t));</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">/* Local working space: We need space for the subgemm output (above) and</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * the row sums.  */</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">size_t</span> local_working_size()<span class="keyword"> const </span>{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">return</span> subgemm_output_size() + row_sum_size();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">void</span> set_child_arrays() {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">if</span> (working_space == <span class="keyword">nullptr</span> || arrays_set == <span class="keyword">false</span>)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="comment">/* Use the first part of our working space for the subgemm result, pass the operand details straight through. */</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        _subgemm-&gt;set_arrays(this-&gt;_Aptr, this-&gt;_lda, this-&gt;_A_batch_stride, this-&gt;_A_multi_stride,</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                             this-&gt;_Bptr, this-&gt;_ldb,                        this-&gt;_B_multi_stride,</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                             reinterpret_cast&lt;Tgemm *&gt;(working_space), _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>, (_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a>), (_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#aca00029952f2150554138015af1ac1ce">_nbatches</a>),</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                             <span class="keyword">nullptr</span>, 0);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">void</span> col_sums_pretransposed(<span class="keyword">const</span> To *B, <span class="keyword">const</span> <span class="keywordtype">int</span> ldb, <span class="keyword">const</span> <span class="keywordtype">int</span> B_multi_stride) {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi=0; multi&lt;_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a>; multi++) {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <a class="code" href="namespacearm__gemm.xhtml#a0f7c3bb1a6bbcb34dc0988ef61510c38">compute_col_sums</a>(_params, _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>, _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>, B + (multi * B_multi_stride), ldb, _col_sums + (multi * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>), _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>, multi, 0);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">void</span> requantize_runtime(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> threadid) {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> first_row = (threadid * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a>) / _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a7636397d7134827d6c8368ac5580c7da">_maxthreads</a>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> last_row = ((threadid+1) * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a>) / _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a7636397d7134827d6c8368ac5580c7da">_maxthreads</a>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0886942393a3ba0dfefaa7516b159784">for</a> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi=0; multi&lt;_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a>; multi++) {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a>=0; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a>&lt;_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#aca00029952f2150554138015af1ac1ce">_nbatches</a>; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a>++) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <span class="comment">/* Compute row sums now */</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <a class="code" href="namespacearm__gemm.xhtml#a283c57cffc3c8e60d00b41f10e4b7476">compute_row_sums</a>(_params, _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>, (last_row - first_row), this-&gt;_Aptr + (multi * this-&gt;_A_multi_stride) + (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> * this-&gt;_A_batch_stride) + (first_row * this-&gt;_lda),</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                           this-&gt;_lda, _row_sums + (multi * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#aca00029952f2150554138015af1ac1ce">_nbatches</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a>) + (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a>) + first_row);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                <span class="comment">// If we don&#39;t care about negative values, call the version of this function that doesn&#39;t correct before shifting.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="comment">// &#39;c_offset&#39; represents zero, so if the lowest possible quantized output value is the same or more than that we will not output negative numbers.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <a class="code" href="namespacearm__gemm.xhtml#a5ef9b17d8d1641178b4327a376312282">requantize_block_32</a>(_params, _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>, (last_row - first_row),</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                    reinterpret_cast&lt;Tgemm *&gt;(working_space) + (multi * (_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#aca00029952f2150554138015af1ac1ce">_nbatches</a>)) + (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> * (_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>)) + (first_row * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>),</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                    _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>,</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                    this-&gt;_Cptr + (multi * this-&gt;_C_multi_stride) + (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> * this-&gt;_C_batch_stride) + (first_row * this-&gt;_ldc), this-&gt;_ldc,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                    _row_sums + (multi * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#aca00029952f2150554138015af1ac1ce">_nbatches</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a>) + (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a>) + first_row,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                    _col_sums + (multi * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>), 0);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a6977a84e4e509fa3bcd39662cfb03d9a">QuantizeWrapper</a>(<span class="keyword">const</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml">QuantizeWrapper</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml">QuantizeWrapper</a> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a28bd31903c4d1bb219e1d226d6694cca">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml">QuantizeWrapper</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a8bf38de8dffa2ee89dc39ca7a5113a2f">  112</a></span>&#160;    <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a8bf38de8dffa2ee89dc39ca7a5113a2f">QuantizeWrapper</a>(<span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;qp) : _params(qp), _args(args), _barrier(args._maxthreads) {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> newargs = <a class="code" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a>(args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#abb02a9fd23c6187807ad015022708985">_ci</a>, args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">_Msize</a>, args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>, args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>, args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a2ab0ad50d3c2b2be030026132b00add6">_Ksections</a>, args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#aca00029952f2150554138015af1ac1ce">_nbatches</a>, args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a>, args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ab6f473669f97dc471c5dd2945da5f2da">_indirect_input</a>, <a class="code" href="structarm__gemm_1_1_activation.xhtml">Activation</a>(), args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a7636397d7134827d6c8368ac5580c7da">_maxthreads</a>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        _subgemm = gemm&lt;To, Tgemm&gt;(newargs);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">if</span> (_subgemm == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#ab0e2eeafea4c7ab024171643146b2452">  121</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#ab0e2eeafea4c7ab024171643146b2452">set_arrays</a>(<span class="keyword">const</span> To *A, <span class="keyword">const</span> <span class="keywordtype">int</span> lda, <span class="keyword">const</span> <span class="keywordtype">int</span> A_batch_stride, <span class="keyword">const</span> <span class="keywordtype">int</span> A_multi_stride,</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    <span class="keyword">const</span> To *B, <span class="keyword">const</span> <span class="keywordtype">int</span> ldb, <span class="keyword">const</span> <span class="keywordtype">int</span> B_multi_stride,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                          Tr *C, <span class="keyword">const</span> <span class="keywordtype">int</span> ldc, <span class="keyword">const</span> <span class="keywordtype">int</span> C_batch_stride, <span class="keyword">const</span> <span class="keywordtype">int</span> C_multi_stride,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                    <span class="keyword">const</span> Tr *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <span class="keyword">const</span> <span class="keywordtype">int</span> bias_multi_stride)<span class="keyword"> override </span>{</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <a class="code" href="classarm__gemm_1_1_gemm_common.xhtml#af6a736f1b9e80d533bd557d0fb5748bb">GemmCommon&lt;To, Tr&gt;::set_arrays</a>(A, lda, A_batch_stride, A_multi_stride, B, ldb, B_multi_stride, C, ldc, C_batch_stride, C_multi_stride, bias, bias_multi_stride);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        arrays_set = <span class="keyword">true</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        set_child_arrays();</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a8f983ca114ef72d25515a8651ea1d0e7">  131</a></span>&#160;    <a class="code" href="classarm__gemm_1_1_n_d_range.xhtml">ndrange_t</a> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a8f983ca114ef72d25515a8651ea1d0e7">get_window_size</a>()<span class="keyword"> const override </span>{</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">return</span> { _subgemm-&gt;get_window_size() };</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a468e9c50d4decc2ba86f9bd393ba27d6">  135</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a468e9c50d4decc2ba86f9bd393ba27d6">set_nthreads</a>(<span class="keywordtype">int</span> nthreads)<span class="keyword"> override </span>{</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        _subgemm-&gt;set_nthreads(nthreads);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        _barrier.<a class="code" href="classarm__gemm_1_1barrier.xhtml#ad74688f775864e33d4b751cc1317beec">set_nthreads</a>(nthreads);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a7636397d7134827d6c8368ac5580c7da">_maxthreads</a> = nthreads;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a18e9a188320dd783a61cb41ff6ba357c">  141</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a18e9a188320dd783a61cb41ff6ba357c">execute</a>(<span class="keyword">const</span> <a class="code" href="classarm__gemm_1_1_n_d_coordinate.xhtml">ndcoord_t</a> &amp;work_range, <span class="keyword">const</span> <a class="code" href="classarm__gemm_1_1_n_d_coordinate.xhtml">ndcoord_t</a> &amp;thread_locator, <span class="keywordtype">int</span> threadid)<span class="keyword"> override </span>{</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        _subgemm-&gt;execute(work_range, thread_locator, threadid);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        _barrier.<a class="code" href="classarm__gemm_1_1barrier.xhtml#ab3a1638fb79fab8886ce5aaccf9d4f7e">arrive_and_wait</a>();</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        requantize_runtime(threadid);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#abf5a58f6feffeae31f48b750cba9303d">  149</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#abf5a58f6feffeae31f48b750cba9303d">get_working_size</a>()<span class="keyword"> const override </span>{</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">return</span> _subgemm-&gt;get_working_size() + local_working_size();</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="comment">// Space arrangement:</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">// ptr</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="comment">// V</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">// | subgemm output | row_sums | subgemm working space |</span></div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a458c339803f238b70020c3d933e9f766">  158</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a458c339803f238b70020c3d933e9f766">set_working_space</a>(<span class="keywordtype">void</span> *space)<span class="keyword"> override </span>{</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        uintptr_t space_int = <span class="keyword">reinterpret_cast&lt;</span>uintptr_t<span class="keyword">&gt;</span>(space);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        working_space = space;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        _subgemm-&gt;set_working_space(reinterpret_cast&lt;void *&gt;(space_int + local_working_size()));</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        _row_sums = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(space_int + subgemm_output_size());</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        set_child_arrays();</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#ac5dec5063a75604fdc60555f15577b94">  169</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#ac5dec5063a75604fdc60555f15577b94">B_is_pretransposed</a>()<span class="keyword"> const override </span>{</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="comment">/* We clear this flag if the subgemm isn&#39;t pretransposed, so just return its value */</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> _subgemm-&gt;B_is_pretransposed();</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#aa7cfff39cbb2be65cd40042a75e5ae1c">  174</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#aa7cfff39cbb2be65cd40042a75e5ae1c">B_pretranspose_required</a>()<span class="keyword"> const override </span>{</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordflow">return</span> _subgemm-&gt;B_pretranspose_required();</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#ae9fc7380e533c43a1d91e48a7578e412">  178</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#ae9fc7380e533c43a1d91e48a7578e412">get_B_pretransposed_array_size</a>()<span class="keyword"> const override </span>{</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">return</span> _subgemm-&gt;get_B_pretransposed_array_size() + col_sum_size();</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    }</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a0ae716040d875abeeba60aa4a6b73363">  182</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a0ae716040d875abeeba60aa4a6b73363">requantize_bias</a>(<span class="keywordtype">void</span> *in_buffer, <span class="keyword">const</span> To *B, <span class="keyword">const</span> <span class="keywordtype">int</span> ldb, <span class="keyword">const</span> <span class="keywordtype">int</span> B_multi_stride)<span class="keyword"> override </span>{</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        _col_sums = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(in_buffer);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        col_sums_pretransposed(B, ldb, B_multi_stride);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    }</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a28341e4e1158f3446a8dfa13c9f5c6f0">  187</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a28341e4e1158f3446a8dfa13c9f5c6f0">pretranspose_B_array</a>(<span class="keywordtype">void</span> *buffer, <span class="keyword">const</span> To *B, <span class="keyword">const</span> <span class="keywordtype">int</span> ldb, <span class="keyword">const</span> <span class="keywordtype">int</span> B_multi_stride)<span class="keyword"> override </span>{</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        uintptr_t buffer_int = <span class="keyword">reinterpret_cast&lt;</span>uintptr_t<span class="keyword">&gt;</span>(buffer);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        _subgemm-&gt;pretranspose_B_array(reinterpret_cast&lt;void *&gt;(buffer_int + col_sum_size()), B, ldb, B_multi_stride);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a0ae716040d875abeeba60aa4a6b73363">requantize_bias</a>(buffer, B, ldb, B_multi_stride);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a27df64c6276eb144594c5d37d1110b20">  194</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a27df64c6276eb144594c5d37d1110b20">set_pretransposed_B_data</a>(<span class="keywordtype">void</span> *buffer)<span class="keyword"> override </span>{</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        uintptr_t buffer_int = <span class="keyword">reinterpret_cast&lt;</span>uintptr_t<span class="keyword">&gt;</span>(buffer);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        _subgemm-&gt;set_pretransposed_B_data(reinterpret_cast&lt;void *&gt;(buffer_int + col_sum_size()));</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        _col_sums = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(buffer);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    }</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a4f282c5814fcd207308c4737a1fc567b">  200</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a4f282c5814fcd207308c4737a1fc567b">set_quantized_bias</a>(<span class="keyword">const</span> int32_t *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <span class="keywordtype">size_t</span> bias_multi_stride)<span class="keyword"> override </span>{</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        _params.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a> = <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        _params.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#afac6d7d779e04e999149dcf095734294">bias_multi_stride</a> = bias_multi_stride;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a7cde60064c88a363415fc0639d09cc3e">  205</a></span>&#160;    <a class="code" href="structarm__gemm_1_1_gemm_config.xhtml">GemmConfig</a> <a class="code" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a7cde60064c88a363415fc0639d09cc3e">get_config</a>()<span class="keyword"> override </span>{</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <a class="code" href="structarm__gemm_1_1_gemm_config.xhtml">GemmConfig</a> c = _subgemm-&gt;get_config();</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        std::string <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> = <span class="stringliteral">&quot;quantize_wrapper[&quot;</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        n.append(c.<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#a61e0e449fd7e8647d521cafd4f1d55a3">filter</a>);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        n.append(<span class="stringliteral">&quot;]&quot;</span>);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        c.<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#a1ade5ed8fc2bd356dfe390ad634ca9e6">method</a> = <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a6f8fa91fb3559df940f3d213360185b1">GemmMethod::QUANTIZE_WRAPPER</a>;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        c.<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#a61e0e449fd7e8647d521cafd4f1d55a3">filter</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">return</span> c;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    }</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;};</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;} <span class="comment">// namespace arm_gemm</span></div><div class="ttc" id="namespacearm__gemm_xhtml_a283c57cffc3c8e60d00b41f10e4b7476"><div class="ttname"><a href="namespacearm__gemm.xhtml#a283c57cffc3c8e60d00b41f10e4b7476">arm_gemm::compute_row_sums</a></div><div class="ttdeci">void compute_row_sums(const Requantize32 &amp;qp, unsigned int width, unsigned int height, const T *input, unsigned int in_stride, int32_t *row_bias)</div></div>
<div class="ttc" id="structarm__gemm_1_1_requantize32_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">arm_gemm::Requantize32::bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00172">arm_gemm.hpp:172</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a458c339803f238b70020c3d933e9f766"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a458c339803f238b70020c3d933e9f766">arm_gemm::QuantizeWrapper::set_working_space</a></div><div class="ttdeci">void set_working_space(void *space) override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00158">quantize_wrapper.hpp:158</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a4f282c5814fcd207308c4737a1fc567b"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a4f282c5814fcd207308c4737a1fc567b">arm_gemm::QuantizeWrapper::set_quantized_bias</a></div><div class="ttdeci">void set_quantized_bias(const int32_t *bias, size_t bias_multi_stride) override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00200">quantize_wrapper.hpp:200</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml">arm_gemm::QuantizeWrapper</a></div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00038">quantize_wrapper.hpp:38</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_abb02a9fd23c6187807ad015022708985"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#abb02a9fd23c6187807ad015022708985">arm_gemm::GemmArgs::_ci</a></div><div class="ttdeci">const CPUInfo * _ci</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00145">arm_gemm.hpp:145</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a468e9c50d4decc2ba86f9bd393ba27d6"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a468e9c50d4decc2ba86f9bd393ba27d6">arm_gemm::QuantizeWrapper::set_nthreads</a></div><div class="ttdeci">void set_nthreads(int nthreads) override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00135">quantize_wrapper.hpp:135</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_a967adad6c21766e82315265eccfd0ca5"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">arm_gemm::GemmArgs::_nmulti</a></div><div class="ttdeci">unsigned int _nmulti</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00151">arm_gemm.hpp:151</a></div></div>
<div class="ttc" id="gemm__implementation_8hpp_xhtml"><div class="ttname"><a href="gemm__implementation_8hpp.xhtml">gemm_implementation.hpp</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_ac5c8d64b5f5a1c32846af7e260c56f04"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">arm_gemm::GemmArgs::_Nsize</a></div><div class="ttdeci">unsigned int _Nsize</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00147">arm_gemm.hpp:147</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a27df64c6276eb144594c5d37d1110b20"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a27df64c6276eb144594c5d37d1110b20">arm_gemm::QuantizeWrapper::set_pretransposed_B_data</a></div><div class="ttdeci">void set_pretransposed_B_data(void *buffer) override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00194">quantize_wrapper.hpp:194</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_a7636397d7134827d6c8368ac5580c7da"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#a7636397d7134827d6c8368ac5580c7da">arm_gemm::GemmArgs::_maxthreads</a></div><div class="ttdeci">int _maxthreads</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00154">arm_gemm.hpp:154</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a28bd31903c4d1bb219e1d226d6694cca"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a28bd31903c4d1bb219e1d226d6694cca">arm_gemm::QuantizeWrapper::operator=</a></div><div class="ttdeci">QuantizeWrapper operator=(const QuantizeWrapper &amp;)=delete</div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_abf5a58f6feffeae31f48b750cba9303d"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#abf5a58f6feffeae31f48b750cba9303d">arm_gemm::QuantizeWrapper::get_working_size</a></div><div class="ttdeci">size_t get_working_size() const override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00149">quantize_wrapper.hpp:149</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a7cde60064c88a363415fc0639d09cc3e"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a7cde60064c88a363415fc0639d09cc3e">arm_gemm::QuantizeWrapper::get_config</a></div><div class="ttdeci">GemmConfig get_config() override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00205">quantize_wrapper.hpp:205</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a0ae716040d875abeeba60aa4a6b73363"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a0ae716040d875abeeba60aa4a6b73363">arm_gemm::QuantizeWrapper::requantize_bias</a></div><div class="ttdeci">void requantize_bias(void *in_buffer, const To *B, const int ldb, const int B_multi_stride) override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00182">quantize_wrapper.hpp:182</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a8f983ca114ef72d25515a8651ea1d0e7"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a8f983ca114ef72d25515a8651ea1d0e7">arm_gemm::QuantizeWrapper::get_window_size</a></div><div class="ttdeci">ndrange_t get_window_size() const override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00131">quantize_wrapper.hpp:131</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a0886942393a3ba0dfefaa7516b159784"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a0886942393a3ba0dfefaa7516b159784">arm_compute::test::validation::for</a></div><div class="ttdeci">for(size_t k=0;k&lt; _target.size();++k)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_unstack_8cpp_source.xhtml#l00091">Unstack.cpp:91</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a28341e4e1158f3446a8dfa13c9f5c6f0"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a28341e4e1158f3446a8dfa13c9f5c6f0">arm_gemm::QuantizeWrapper::pretranspose_B_array</a></div><div class="ttdeci">void pretranspose_B_array(void *buffer, const To *B, const int ldb, const int B_multi_stride) override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00187">quantize_wrapper.hpp:187</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml"><div class="ttname"><a href="namespacearm__gemm.xhtml">arm_gemm</a></div><div class="ttdef"><b>Definition:</b> <a href="barrier_8hpp_source.xhtml#l00030">barrier.hpp:30</a></div></div>
<div class="ttc" id="arm__gemm_8hpp_xhtml"><div class="ttname"><a href="arm__gemm_8hpp.xhtml">arm_gemm.hpp</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_config_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_gemm_config.xhtml">arm_gemm::GemmConfig</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00106">arm_gemm.hpp:106</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml">arm_gemm::GemmArgs</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00142">arm_gemm.hpp:142</a></div></div>
<div class="ttc" id="classarm__gemm_1_1barrier_xhtml_ab3a1638fb79fab8886ce5aaccf9d4f7e"><div class="ttname"><a href="classarm__gemm_1_1barrier.xhtml#ab3a1638fb79fab8886ce5aaccf9d4f7e">arm_gemm::barrier::arrive_and_wait</a></div><div class="ttdeci">void arrive_and_wait()</div><div class="ttdef"><b>Definition:</b> <a href="barrier_8hpp_source.xhtml#l00047">barrier.hpp:47</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_config_xhtml_a1ade5ed8fc2bd356dfe390ad634ca9e6"><div class="ttname"><a href="structarm__gemm_1_1_gemm_config.xhtml#a1ade5ed8fc2bd356dfe390ad634ca9e6">arm_gemm::GemmConfig::method</a></div><div class="ttdeci">GemmMethod method</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00108">arm_gemm.hpp:108</a></div></div>
<div class="ttc" id="classarm__gemm_1_1barrier_xhtml_ad74688f775864e33d4b751cc1317beec"><div class="ttname"><a href="classarm__gemm_1_1barrier.xhtml#ad74688f775864e33d4b751cc1317beec">arm_gemm::barrier::set_nthreads</a></div><div class="ttdeci">void set_nthreads(unsigned int nthreads)</div><div class="ttdef"><b>Definition:</b> <a href="barrier_8hpp_source.xhtml#l00043">barrier.hpp:43</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemm_common_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_gemm_common.xhtml">arm_gemm::GemmCommon</a></div><div class="ttdef"><b>Definition:</b> <a href="gemm__common_8hpp_source.xhtml#l00169">gemm_common.hpp:169</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_a85b38740fa6151d6e5fcfc48e8008d47"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#a85b38740fa6151d6e5fcfc48e8008d47">arm_gemm::GemmArgs::_Msize</a></div><div class="ttdeci">unsigned int _Msize</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00146">arm_gemm.hpp:146</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a6977a84e4e509fa3bcd39662cfb03d9a"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a6977a84e4e509fa3bcd39662cfb03d9a">arm_gemm::QuantizeWrapper::QuantizeWrapper</a></div><div class="ttdeci">QuantizeWrapper(const QuantizeWrapper &amp;)=delete</div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a5ef9b17d8d1641178b4327a376312282"><div class="ttname"><a href="namespacearm__gemm.xhtml#a5ef9b17d8d1641178b4327a376312282">arm_gemm::requantize_block_32</a></div><div class="ttdeci">void requantize_block_32(const Requantize32 &amp;qp, unsigned int width, unsigned int height, const Tin *input, unsigned int in_stride, Tout *output, unsigned int out_stride, const int32_t *row_bias, const int32_t *col_bias, unsigned int start_col)</div></div>
<div class="ttc" id="classarm__gemm_1_1_gemm_common_xhtml_af6a736f1b9e80d533bd557d0fb5748bb"><div class="ttname"><a href="classarm__gemm_1_1_gemm_common.xhtml#af6a736f1b9e80d533bd557d0fb5748bb">arm_gemm::GemmCommon::set_arrays</a></div><div class="ttdeci">virtual void set_arrays(const To *A, const int lda, const int A_batch_stride, const int A_multi_stride, const To *B, const int ldb, const int B_multi_stride, Tr *C, const int ldc, const int C_batch_stride, const int C_multi_stride, const Tr *bias, const int bias_multi_stride)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__common_8hpp_source.xhtml#l00189">gemm_common.hpp:189</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a9f0bb435c603f4c166c9528fefe58fb0"><div class="ttname"><a href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">arm_gemm::UniqueGemmCommon</a></div><div class="ttdeci">std::unique_ptr&lt; GemmCommon&lt; Top, Tret &gt; &gt; UniqueGemmCommon</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00216">arm_gemm.hpp:216</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_ab0e2eeafea4c7ab024171643146b2452"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#ab0e2eeafea4c7ab024171643146b2452">arm_gemm::QuantizeWrapper::set_arrays</a></div><div class="ttdeci">void set_arrays(const To *A, const int lda, const int A_batch_stride, const int A_multi_stride, const To *B, const int ldb, const int B_multi_stride, Tr *C, const int ldc, const int C_batch_stride, const int C_multi_stride, const Tr *bias, const int bias_multi_stride) override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00121">quantize_wrapper.hpp:121</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_ae9fc7380e533c43a1d91e48a7578e412"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#ae9fc7380e533c43a1d91e48a7578e412">arm_gemm::QuantizeWrapper::get_B_pretransposed_array_size</a></div><div class="ttdeci">size_t get_B_pretransposed_array_size() const override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00178">quantize_wrapper.hpp:178</a></div></div>
<div class="ttc" id="barrier_8hpp_xhtml"><div class="ttname"><a href="barrier_8hpp.xhtml">barrier.hpp</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a59c0fe7170dec3dfc80b80a33fc48955"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">arm_compute::test::validation::batch</a></div><div class="ttdeci">const unsigned int batch</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00362">GEMMMatrixMultiplyNative.cpp:362</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_n_d_coordinate_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_n_d_coordinate.xhtml">arm_gemm::NDCoordinate</a></div><div class="ttdoc">NDCoordinate builds upon a range, but specifies a starting position in addition to a size which it in...</div><div class="ttdef"><b>Definition:</b> <a href="ndrange_8hpp_source.xhtml#l00151">ndrange.hpp:151</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_requantize32_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00169">arm_gemm.hpp:169</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a0f7c3bb1a6bbcb34dc0988ef61510c38"><div class="ttname"><a href="namespacearm__gemm.xhtml#a0f7c3bb1a6bbcb34dc0988ef61510c38">arm_gemm::compute_col_sums</a></div><div class="ttdeci">void compute_col_sums(const Requantize32 &amp;qp, unsigned int width, unsigned int height, const T *input, unsigned int in_stride, int32_t *col_bias, unsigned int depth, unsigned int multi, unsigned int first_col)</div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_a2ab0ad50d3c2b2be030026132b00add6"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#a2ab0ad50d3c2b2be030026132b00add6">arm_gemm::GemmArgs::_Ksections</a></div><div class="ttdeci">unsigned int _Ksections</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00149">arm_gemm.hpp:149</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_requantize32_xhtml_afac6d7d779e04e999149dcf095734294"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#afac6d7d779e04e999149dcf095734294">arm_gemm::Requantize32::bias_multi_stride</a></div><div class="ttdeci">size_t bias_multi_stride</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00173">arm_gemm.hpp:173</a></div></div>
<div class="ttc" id="quantized_8hpp_xhtml"><div class="ttname"><a href="quantized_8hpp.xhtml">quantized.hpp</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_config_xhtml_a61e0e449fd7e8647d521cafd4f1d55a3"><div class="ttname"><a href="structarm__gemm_1_1_gemm_config.xhtml#a61e0e449fd7e8647d521cafd4f1d55a3">arm_gemm::GemmConfig::filter</a></div><div class="ttdeci">std::string filter</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00109">arm_gemm.hpp:109</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a6f8fa91fb3559df940f3d213360185b1"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a6f8fa91fb3559df940f3d213360185b1">arm_gemm::GemmMethod::QUANTIZE_WRAPPER</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_n_d_range_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_n_d_range.xhtml">arm_gemm::NDRange</a></div><div class="ttdef"><b>Definition:</b> <a href="ndrange_8hpp_source.xhtml#l00034">ndrange.hpp:34</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_aa7cfff39cbb2be65cd40042a75e5ae1c"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#aa7cfff39cbb2be65cd40042a75e5ae1c">arm_gemm::QuantizeWrapper::B_pretranspose_required</a></div><div class="ttdeci">bool B_pretranspose_required() const override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00174">quantize_wrapper.hpp:174</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_adb59e12af95e4ab605ffc3e12b41de58"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">arm_gemm::GemmArgs::_Ksize</a></div><div class="ttdeci">unsigned int _Ksize</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00148">arm_gemm.hpp:148</a></div></div>
<div class="ttc" id="classarm__gemm_1_1barrier_xhtml"><div class="ttname"><a href="classarm__gemm_1_1barrier.xhtml">arm_gemm::barrier</a></div><div class="ttdef"><b>Definition:</b> <a href="barrier_8hpp_source.xhtml#l00032">barrier.hpp:32</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_ac5dec5063a75604fdc60555f15577b94"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#ac5dec5063a75604fdc60555f15577b94">arm_gemm::QuantizeWrapper::B_is_pretransposed</a></div><div class="ttdeci">bool B_is_pretransposed() const override</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00169">quantize_wrapper.hpp:169</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_aca00029952f2150554138015af1ac1ce"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#aca00029952f2150554138015af1ac1ce">arm_gemm::GemmArgs::_nbatches</a></div><div class="ttdeci">unsigned int _nbatches</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00150">arm_gemm.hpp:150</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_ab6f473669f97dc471c5dd2945da5f2da"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#ab6f473669f97dc471c5dd2945da5f2da">arm_gemm::GemmArgs::_indirect_input</a></div><div class="ttdeci">bool _indirect_input</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00152">arm_gemm.hpp:152</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a18e9a188320dd783a61cb41ff6ba357c"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a18e9a188320dd783a61cb41ff6ba357c">arm_gemm::QuantizeWrapper::execute</a></div><div class="ttdeci">void execute(const ndcoord_t &amp;work_range, const ndcoord_t &amp;thread_locator, int threadid) override</div><div class="ttdoc">Main execute member fucntion. </div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00141">quantize_wrapper.hpp:141</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_activation_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_activation.xhtml">arm_gemm::Activation</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00123">arm_gemm.hpp:123</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00292">working_space.hpp:292</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_quantize_wrapper_xhtml_a8bf38de8dffa2ee89dc39ca7a5113a2f"><div class="ttname"><a href="classarm__gemm_1_1_quantize_wrapper.xhtml#a8bf38de8dffa2ee89dc39ca7a5113a2f">arm_gemm::QuantizeWrapper::QuantizeWrapper</a></div><div class="ttdeci">QuantizeWrapper(const GemmArgs &amp;args, const Requantize32 &amp;qp)</div><div class="ttdef"><b>Definition:</b> <a href="quantize__wrapper_8hpp_source.xhtml#l00112">quantize_wrapper.hpp:112</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_9847dd9cb7a28e46201717fa7336cf62.xhtml">arm_gemm</a></li><li class="navelem"><a class="el" href="quantize__wrapper_8hpp.xhtml">quantize_wrapper.hpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:27 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
