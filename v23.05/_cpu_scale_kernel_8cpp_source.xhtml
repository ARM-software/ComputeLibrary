<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/kernels/CpuScaleKernel.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cpu_scale_kernel_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CpuScaleKernel.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cpu_scale_kernel_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_scale_kernel_8h.xhtml">src/cpu/kernels/CpuScaleKernel.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_helpers_8h.xhtml">arm_compute/core/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_8h.xhtml">arm_compute/core/Window.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2common_2_registrars_8h.xhtml">src/core/common/Registrars.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_scale_helpers_8h.xhtml">src/core/helpers/ScaleHelpers.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_helpers_8h.xhtml">src/core/helpers/WindowHelpers.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="cpu_2kernels_2scale_2neon_2list_8h.xhtml">src/cpu/kernels/scale/neon/list.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="cpu_2kernels_2scale_2sve_2list_8h.xhtml">src/cpu/kernels/scale/sve/list.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="support_2_rounding_8h.xhtml">support/Rounding.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;arm_neon.h&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>cpu</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>kernels</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> std::vector&lt;CpuScaleKernel::ScaleKernel&gt; available_kernels =</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="stringliteral">&quot;sve_fp16_scale&quot;</span>,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a> &amp;&amp; data.isa.sve &amp;&amp; data.isa.fp16 &amp;&amp; data.interpolation_policy != <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        },</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a3d722cea84e48f36574c432bd9c118f0">REGISTER_FP16_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a433a50d9bda93287b0e904adb3209b1a">arm_compute::cpu::fp16_sve_scale</a>)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    },</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="stringliteral">&quot;sve_fp32_scale&quot;</span>,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a> &amp;&amp; data.isa.sve &amp;&amp; data.interpolation_policy != <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        },</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a70b11b257400488c81ab0998adcc59f1">REGISTER_FP32_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#ab68fd045b9a5083bb30745437cbb603a">arm_compute::cpu::fp32_sve_scale</a>)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    },</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="stringliteral">&quot;sve_qu8_scale&quot;</span>,</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a> &amp;&amp; data.isa.sve &amp;&amp; data.interpolation_policy != <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        },</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a903be60f833cefbdb13462c3b380d967">REGISTER_QASYMM8_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#ab8225bb56462d5dc53bcd91a7ab7e427">arm_compute::cpu::qasymm8_sve_scale</a>)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    },</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="stringliteral">&quot;sve_qs8_scale&quot;</span>,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a> &amp;&amp; data.isa.sve &amp;&amp; data.interpolation_policy != <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        },</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#ab84bffc7fa662116691c737df96be89e">REGISTER_QASYMM8_SIGNED_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a4dfe2c548a30336abb7be2dca919a71d">arm_compute::cpu::qasymm8_signed_sve_scale</a>)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    },</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="stringliteral">&quot;sve_u8_scale&quot;</span>,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a> &amp;&amp; data.isa.sve &amp;&amp; data.interpolation_policy != <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        },</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a9b78428ad2200c4f79c153a00ec8ceb9">REGISTER_INTEGER_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a11bc1d142af115f27986158afcd94360">arm_compute::cpu::u8_sve_scale</a>)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    },</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="stringliteral">&quot;sve_s16_scale&quot;</span>,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a> &amp;&amp; data.isa.sve &amp;&amp; data.interpolation_policy != <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        },</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a9b78428ad2200c4f79c153a00ec8ceb9">REGISTER_INTEGER_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a4e667bbff11c6a32d56b10f0e9626438">arm_compute::cpu::s16_sve_scale</a>)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    },</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="stringliteral">&quot;neon_fp16_scale&quot;</span>,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a> &amp;&amp; data.isa.fp16; },</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a26fa1b6549066348f60eabe7c9bb53df">REGISTER_FP16_NEON</a>(arm_compute::cpu::common_neon_scale&lt;float16_t&gt;)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    },</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="stringliteral">&quot;neon_fp32_scale&quot;</span>,</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>; },</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a682bd642e8e78633d42922f0158858c1">REGISTER_FP32_NEON</a>(arm_compute::cpu::common_neon_scale&lt;float&gt;)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    },</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="stringliteral">&quot;neon_qu8_scale&quot;</span>,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>; },</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#acfa632794dcd2aaa48882f9804f191b7">REGISTER_QASYMM8_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a594fa7dfda56b0775950658f6937af9c">arm_compute::cpu::qasymm8_neon_scale</a>)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    },</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="stringliteral">&quot;neon_qs8_scale&quot;</span>,</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>; },</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a84a833348dea51fac4320f7f65eb6f57">REGISTER_QASYMM8_SIGNED_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a5afa676c133f2bd00b896680e5176cd4">arm_compute::cpu::qasymm8_signed_neon_scale</a>)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    },</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    {</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="stringliteral">&quot;neon_u8_scale&quot;</span>,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>; },</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a1041dbd279355812f5c04a21ea0b0a31">REGISTER_INTEGER_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a9f0a2858d9233ec0443a1d1f2b3ca07c">arm_compute::cpu::u8_neon_scale</a>)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    },</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="stringliteral">&quot;neon_s8_scale&quot;</span>,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">DataType::S8</a>; },</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a1041dbd279355812f5c04a21ea0b0a31">REGISTER_INTEGER_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a503eae482390645cffa1439822fa864a">arm_compute::cpu::s8_neon_scale</a>)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    },</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="stringliteral">&quot;neon_s16_scale&quot;</span>,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        [](<span class="keyword">const</span> ScaleKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>; },</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a1041dbd279355812f5c04a21ea0b0a31">REGISTER_INTEGER_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#ae2aa72fde3eb94fa8822a4bb84e8d468">arm_compute::cpu::s16_neon_scale</a>)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    },</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;};</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;Status <a class="code" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">validate_arguments</a>(<span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> ITensorInfo *dx, <span class="keyword">const</span> ITensorInfo *dy,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                          <span class="keyword">const</span> ITensorInfo *offsets, ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">const</span> ScaleKernelInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> *uk = <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml#a1c57e942b23eab1974697c3378bee0d8">CpuScaleKernel::get_implementation</a>(ScaleKernelDataTypeISASelectorData{ src-&gt;data_type(), <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">CPUInfo::get</a>().<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">get_isa</a>(), info.interpolation_policy });</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(uk == <span class="keyword">nullptr</span> || uk-&gt;ukernel == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(dst);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(src, dst);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(dst == src);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(info.sampling_policy != <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">SamplingPolicy::CENTER</a> &amp;&amp; info.sampling_policy != <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">SamplingPolicy::TOP_LEFT</a>);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(info.constant_border_value);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(info.use_padding, <span class="stringliteral">&quot;Padding is not supported&quot;</span>);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>   = info.data_layout == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3">DataLayout::UNKNOWN</a> ? src-&gt;data_layout() : info.data_layout;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>       width_index   = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(data_layout, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>       height_index  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(data_layout, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>       output_width  = dst-&gt;dimension(width_index);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>       output_height = dst-&gt;dimension(height_index);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(output_width == 0);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(output_height == 0);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>((src-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">DataType::S8</a>) &amp;&amp; (data_layout != <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a> || info.interpolation_policy != <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                                                       || info.border_mode != <a class="code" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a4ef59320fbe90fe47d40f1f71e4c5daa">BorderMode::REPLICATE</a>));</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">if</span>(info.interpolation_policy == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">InterpolationPolicy::NEAREST_NEIGHBOR</a> &amp;&amp; offsets != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(offsets, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">if</span>(info.interpolation_policy == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a> &amp;&amp; offsets != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(offsets, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">if</span>(dx != <span class="keyword">nullptr</span> &amp;&amp; dy != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(dx, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(dy, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(info.align_corners &amp;&amp; !<a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#ae89e1815d3845f647832dd3b88b8b015">scale_utils::is_align_corners_allowed_sampling_policy</a>(info.sampling_policy));</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">if</span>(info.interpolation_policy == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">InterpolationPolicy::AREA</a>)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    {</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(data_layout != <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(src, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#a869f39a9ca814d812f88c4742527142f">  185</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#a869f39a9ca814d812f88c4742527142f">CpuScaleKernel::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dx, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dy, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *offsets,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                               <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml">ScaleKernelInfo</a> &amp;info)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(dx, dy, offsets);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(src, dst);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="comment">// Perform validation step</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">validate_arguments</a>(src,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                                  dx,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                                  dy,</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                                  offsets,</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                                  dst,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                                  info));</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> *uk = <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml#a1c57e942b23eab1974697c3378bee0d8">CpuScaleKernel::get_implementation</a>(<a class="code" href="structarm__compute_1_1cpu_1_1kernels_1_1_scale_kernel_data_type_i_s_a_selector_data.xhtml">ScaleKernelDataTypeISASelectorData</a>{ src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>(), <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">CPUInfo::get</a>().<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">get_isa</a>(), info.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#a61b93996076d0e0da8bf19cc3aa95bd7">interpolation_policy</a> });</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(uk);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    _run_method = uk-&gt;ukernel;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    _name       = std::string(<span class="stringliteral">&quot;CpuScaleKernel&quot;</span>).append(<span class="stringliteral">&quot;/&quot;</span>).append(uk-&gt;name).append(<span class="stringliteral">&quot;_&quot;</span>).append(<a class="code" href="namespacearm__compute.xhtml#a3e4a3ad379526db61e1ebf469b455f83">string_from_interpolation_policy</a>(info.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#a61b93996076d0e0da8bf19cc3aa95bd7">interpolation_policy</a>));</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="comment">// Get data layout and width/height indices</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    _data_layout         = info.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#a317508a148d55ca7e093b9447c3366e7">data_layout</a> == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3">DataLayout::UNKNOWN</a> ? src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>() : info.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#a317508a148d55ca7e093b9447c3366e7">data_layout</a>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_data_layout, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a> = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_data_layout, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    _policy                = info.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#a61b93996076d0e0da8bf19cc3aa95bd7">interpolation_policy</a>;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    _border_mode           = info.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#a4be1f403a4bbb154a31380bff58d62e8">border_mode</a>;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    _constant_border_value = info.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#a852252ba70ed420df2bd4975afac8e23">constant_border_value</a>;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    _align_corners         = info.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#ae4b9452a8d98cec5e781396d27006c73">align_corners</a>;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordflow">if</span>(info.<a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml#ad348fa445d9af395a4803fbc7a16eaa3">sampling_policy</a> == <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">SamplingPolicy::CENTER</a>)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        _sampling_offset = 0.5f;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    }</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="comment">// Compute the ratio between source width/height and destination width/height</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> wr = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_width), dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_width), _align_corners);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> hr = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_height), dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_height), _align_corners);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="comment">// Area interpolation behaves as Nearest Neighbour in case of up-sampling</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    _policy = (_policy == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">InterpolationPolicy::AREA</a> &amp;&amp; wr &lt;= 1.f &amp;&amp; hr &lt;= 1.f) ? <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">InterpolationPolicy::NEAREST_NEIGHBOR</a> : _policy;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">if</span>(_border_mode == <a class="code" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a0db45d2a4141101bdfe48e3314cfbca3">BorderMode::UNDEFINED</a>)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        _border_mode           = <a class="code" href="namespacearm__compute.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92">BorderMode::CONSTANT</a>;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        _constant_border_value = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>();</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    }</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">#ifdef ENABLE_NCHW_KERNELS</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="comment">// Configure scale function to run</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordflow">if</span>(_data_layout == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        std::string function_to_call(<span class="stringliteral">&quot;scale_&quot;</span>);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        function_to_call += <a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()) + <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        function_to_call += <a class="code" href="namespacearm__compute.xhtml#a56b9e25c2e8731ca5488e7b3ccd66f58">string_from_data_layout</a>(_data_layout) + <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        function_to_call += <a class="code" href="namespacearm__compute.xhtml#a3e4a3ad379526db61e1ebf469b455f83">string_from_interpolation_policy</a>(_policy);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keyword">static</span> std::map&lt;std::string, ScaleFunctionPtr&gt; map_function =</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            { <span class="stringliteral">&quot;scale_U8_NCHW_AREA_CONSTANT&quot;</span>, &amp;CpuScaleKernel::scale_area_nchw_u8 },</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            { <span class="stringliteral">&quot;scale_U8_NCHW_BILINEAR&quot;</span>, &amp;CpuScaleKernel::scale_bilinear_nchw&lt;uint8_t&gt; },</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            { <span class="stringliteral">&quot;scale_U8_NCHW_NEAREST_NEIGHBOUR&quot;</span>, &amp;CpuScaleKernel::scale_nearest_nchw&lt;uint8_t&gt; },</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            { <span class="stringliteral">&quot;scale_QASYMM8_NCHW_BILINEAR&quot;</span>, &amp;CpuScaleKernel::scale_bilinear_qasymm&lt;uint8_t&gt; },</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            { <span class="stringliteral">&quot;scale_QASYMM8_NCHW_NEAREST_NEIGHBOUR&quot;</span>, &amp;CpuScaleKernel::scale_nearest_nchw&lt;uint8_t&gt; },</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            { <span class="stringliteral">&quot;scale_QASYMM8_SIGNED_NCHW_BILINEAR&quot;</span>, &amp;CpuScaleKernel::scale_bilinear_qasymm&lt;int8_t&gt; },</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            { <span class="stringliteral">&quot;scale_QASYMM8_SIGNED_NCHW_NEAREST_NEIGHBOUR&quot;</span>, &amp;CpuScaleKernel::scale_nearest_nchw&lt;int8_t&gt; },</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            { <span class="stringliteral">&quot;scale_S16_NCHW_BILINEAR&quot;</span>, &amp;CpuScaleKernel::scale_bilinear_nchw&lt;int16_t&gt; },</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            { <span class="stringliteral">&quot;scale_S16_NCHW_NEAREST_NEIGHBOUR&quot;</span>, &amp;CpuScaleKernel::scale_nearest_nchw&lt;int16_t&gt; },</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            { <span class="stringliteral">&quot;scale_F16_NCHW_BILINEAR&quot;</span>, &amp;CpuScaleKernel::scale_bilinear_nchw&lt;float16_t&gt; },</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            { <span class="stringliteral">&quot;scale_F16_NCHW_NEAREST_NEIGHBOUR&quot;</span>, &amp;CpuScaleKernel::scale_nearest_nchw&lt;float16_t&gt; },</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            { <span class="stringliteral">&quot;scale_F32_NCHW_BILINEAR&quot;</span>, &amp;CpuScaleKernel::scale_bilinear_nchw&lt;float&gt; },</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            { <span class="stringliteral">&quot;scale_F32_NCHW_NEAREST_NEIGHBOUR&quot;</span>, &amp;CpuScaleKernel::scale_nearest_nchw&lt;float&gt; },</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        };</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keyword">auto</span> it = map_function.find(function_to_call);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keywordflow">if</span>(it != map_function.end())</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        {</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            _func = it-&gt;second;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        }</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    }</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor">#endif // ENABLE_NCHW_KERNELS</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="comment">// Configure window</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(*dst, <a class="code" href="classarm__compute_1_1_steps.xhtml">Steps</a>());</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    ICpuKernel::configure(win);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;}</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="preprocessor">#ifdef ENABLE_NCHW_KERNELS</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordtype">void</span> CpuScaleKernel::scale_nearest_nchw(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *src, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dst, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dx, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dy, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *offsets, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;{</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(dx, dy);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> in_stride_x = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) + src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a>().<a class="code" href="structarm__compute_1_1_border_size.xhtml#a05374b750b0fc472c34ee61e6f028bba">left</a> + src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a>().<a class="code" href="structarm__compute_1_1_border_size.xhtml#a78b0fed184c642b78f32fd34b228a5f9">right</a>;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="comment">// Compute the ratio between source height and destination height</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> hr = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1), dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1), _align_corners);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="comment">// Don&#39;t increment in X and Y direction for the input tensor</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="comment">// A pointer to the start of this plane is needed as base for the precomputed offsets</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_in(window);</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    win_in.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    win_in.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="comment">// Set offsets window</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_off;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    win_off.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, window[<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>]);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    win_off.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, window[<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>]);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> d = <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>; d &lt; offsets-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>(); ++d)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        win_off.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(d, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    }</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="comment">// Create iterators</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> src_i(src, win_in);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> dst_i(dst, window);</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> offsets_i(offsets, win_off);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(window, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    {</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> offsets_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(offsets_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>());</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> in_yi       = <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(_align_corners ? <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#aeecc6e8935077dc93cc5079fe98d3adc">utils::rounding::round_half_away_from_zero</a>((<span class="keywordtype">id</span>.y() + _sampling_offset) * hr) : std::floor((</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                                                          <span class="keywordtype">id</span>.y() + _sampling_offset)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                                                      * hr));</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keyword">const</span> int32_t offset_row            = in_yi * in_stride_x;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(dst_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()) = *(reinterpret_cast&lt;const T *&gt;(src_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()) + offsets_ptr[0] + offset_row);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    },</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    src_i, offsets_i, dst_i);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;}</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keywordtype">void</span> <a class="code" href="nchw_2scale_8cl.xhtml#a42131df7a754ea279bea023c2e18b077">CpuScaleKernel::scale_bilinear_nchw</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *src, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dst, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dx, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dy, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *offsets, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;{</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="comment">// Compute the ratio between source height and destination height</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> hr = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1), dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1), _align_corners);</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>     win_off;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    win_off.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>());</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    win_off.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, window.<a class="code" href="classarm__compute_1_1_window.xhtml#a1b522b073f3ca32d24eb4e03495ef8a6">y</a>());</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="comment">// Don&#39;t increment in X and Y direction for the input tensor</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="comment">// A pointer to the start of this plane is needed as base for the precomputed offsets</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_in(window);</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    win_in.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    win_in.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> d = <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>; d &lt; offsets-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>(); ++d)</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    {</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        win_off.set(d, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    }</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> src_i(src, win_in);</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> dst_i(dst, window);</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> offsets_i(offsets, win_off);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> dx_i(dx, win_off);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> dy_i(dy, win_off);</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keyword">const</span> int32_t in_dim_w    = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0);</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="keyword">const</span> int32_t in_dim_h    = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1);</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keyword">const</span> int32_t in_stride_w = in_dim_w + src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a>().<a class="code" href="structarm__compute_1_1_border_size.xhtml#a05374b750b0fc472c34ee61e6f028bba">left</a> + src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a>().<a class="code" href="structarm__compute_1_1_border_size.xhtml#a78b0fed184c642b78f32fd34b228a5f9">right</a>;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keywordflow">if</span>(_border_mode == <a class="code" href="namespacearm__compute.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92">BorderMode::CONSTANT</a>)</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    {</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keyword">using</span> ConstType = <span class="keyword">typename</span> std::conditional&lt;std::is_same&lt;T, float16_t&gt;::value, <a class="code" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a>, T&gt;<a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">::type</a>;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <span class="keyword">using</span> ConstType = T;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keyword">const</span> T const_border_value = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(_constant_border_value.<a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a66c4c1f8b1962d71162d7ac0b3ef65bc">get</a>&lt;ConstType&gt;());</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(window, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keyword">const</span> int32_t index_h       = std::floor((<span class="keywordtype">id</span>.y() + _sampling_offset) * hr - _sampling_offset);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span>    index_w       = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(offsets_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()));</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span>    dx_val        = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(dx_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()));</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span>    dy_val        = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(dy_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()));</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span>    pixel_row_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T *<span class="keyword">&gt;</span>(src_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>());</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a00 = (0 &lt;= index_w &amp;&amp; index_w &lt; in_dim_w &amp;&amp; 0 &lt;= index_h &amp;&amp; index_h &lt; in_dim_h) ? (*(pixel_row_ptr + index_w + index_h * in_stride_w)) : const_border_value;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a01 = (-1 &lt;= index_w &amp;&amp; index_w &lt; in_dim_w - 1 &amp;&amp; 0 &lt;= index_h &amp;&amp; index_h &lt; in_dim_h) ? (*(pixel_row_ptr + index_w + 1 + index_h * in_stride_w)) : const_border_value;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a10 = (0 &lt;= index_w &amp;&amp; index_w &lt; in_dim_w &amp;&amp; -1 &lt;= index_h</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                              &amp;&amp; index_h &lt; in_dim_h - 1) ?</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                             (*(pixel_row_ptr + index_w + index_h * in_stride_w + in_stride_w)) :</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                             const_border_value;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a11 = (-1 &lt;= index_w &amp;&amp; index_w &lt; in_dim_w - 1 &amp;&amp; -1 &lt;= index_h</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                              &amp;&amp; index_h &lt; in_dim_h - 1) ?</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                             (*(pixel_row_ptr + index_w + 1 + index_h * in_stride_w + in_stride_w)) :</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                             const_border_value;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(dst_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()) = static_cast&lt;T&gt;(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#aeb969d3b0e5ceb8597c39b708f0df6e8">scale_helpers::delta_bilinear</a>(a00, a01, a10, a11, dx_val, dy_val));</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        },</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        src_i, offsets_i, dx_i, dy_i, dst_i);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    }</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(_border_mode == <a class="code" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a4ef59320fbe90fe47d40f1f71e4c5daa">BorderMode::REPLICATE</a>)</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    {</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(window, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        {</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">int</span>  index_h       = std::floor((<span class="keywordtype">id</span>.y() + _sampling_offset) * hr - _sampling_offset);</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> index_w       = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(offsets_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()));</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> dx_val        = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(dx_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()));</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> dy_val        = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(dy_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()));</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> pixel_row_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T *<span class="keyword">&gt;</span>(src_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>());</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            <span class="keyword">auto</span> clamped_x  = utility::clamp&lt;int&gt;(index_w, 0, in_dim_w - 1);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keyword">auto</span> clamped_x1 = utility::clamp&lt;int&gt;(index_w + 1, 0, in_dim_w - 1);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keyword">auto</span> clamped_y  = utility::clamp&lt;int&gt;(index_h, 0, in_dim_h - 1);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            <span class="keyword">auto</span> clamped_y1 = utility::clamp&lt;int&gt;(index_h + 1, 0, in_dim_h - 1);</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a00 = *(pixel_row_ptr + clamped_x + clamped_y * in_stride_w);</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a01 = *(pixel_row_ptr + clamped_x1 + clamped_y * in_stride_w);</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a10 = *(pixel_row_ptr + clamped_x + clamped_y1 * in_stride_w);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a11 = *(pixel_row_ptr + clamped_x1 + clamped_y1 * in_stride_w);</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(dst_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()) = static_cast&lt;T&gt;(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#aeb969d3b0e5ceb8597c39b708f0df6e8">scale_helpers::delta_bilinear</a>(a00, a01, a10, a11, dx_val, dy_val));</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        },</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        src_i, offsets_i, dx_i, dy_i, dst_i);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    }</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    {</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not implemented&quot;</span>);</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    }</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;}</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="keywordtype">void</span> CpuScaleKernel::scale_area_nchw_u8(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *src, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dst, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dx, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dy, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *offsets, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;{</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(dx, dy, offsets);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keyword">using namespace </span>scale_helpers;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aadf5c9cff86327b96d88d04649d9715e">ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(src, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="comment">// Don&#39;t increment in width/height/channels for the input tensor</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="comment">// A pointer to the start of this plane is needed as base for the precomputed offsets</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_in(window);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    win_in.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    win_in.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    win_in.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> src_i(src, win_in);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> dst_i(dst, window);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>   wr        = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0), dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0), _align_corners);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>   hr        = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1), dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1), _align_corners);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>         = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0);</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>   h         = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1);</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> in_stride = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[1];</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(window, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    {</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> in_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint8_t *<span class="keyword">&gt;</span>(src_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>());</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        uint8x8_t tmp0 = vdup_n_u8(0);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        tmp0           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x(), <span class="keywordtype">id</span>.y()), tmp0, 0);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        tmp0           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 1, <span class="keywordtype">id</span>.y()), tmp0, 1);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        tmp0           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 2, <span class="keywordtype">id</span>.y()), tmp0, 2);</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        tmp0           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 3, <span class="keywordtype">id</span>.y()), tmp0, 3);</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        tmp0           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 4, <span class="keywordtype">id</span>.y()), tmp0, 4);</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        tmp0           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 5, <span class="keywordtype">id</span>.y()), tmp0, 5);</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        tmp0           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 6, <span class="keywordtype">id</span>.y()), tmp0, 6);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        tmp0           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 7, <span class="keywordtype">id</span>.y()), tmp0, 7);</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        uint8x8_t tmp1 = vdup_n_u8(0);</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        tmp1           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 8, <span class="keywordtype">id</span>.y()), tmp1, 0);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        tmp1           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 9, <span class="keywordtype">id</span>.y()), tmp1, 1);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        tmp1           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 10, <span class="keywordtype">id</span>.y()), tmp1, 2);</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        tmp1           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 11, <span class="keywordtype">id</span>.y()), tmp1, 3);</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        tmp1           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 12, <span class="keywordtype">id</span>.y()), tmp1, 4);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        tmp1           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 13, <span class="keywordtype">id</span>.y()), tmp1, 5);</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        tmp1           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 14, <span class="keywordtype">id</span>.y()), tmp1, 6);</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        tmp1           = vset_lane_u8(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">pixel_area_c1u8_clamp</a>(in_ptr, in_stride, w, h, wr, hr, <span class="keywordtype">id</span>.x() + 15, <span class="keywordtype">id</span>.y()), tmp1, 7);</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        vst1q_u8(dst_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>(), vcombine_u8(tmp0, tmp1));</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    },</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    src_i, dst_i);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;}</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="keywordtype">void</span> CpuScaleKernel::scale_bilinear_qasymm(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *src, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dst, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dx, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *dy, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *offsets, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;{</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <span class="comment">// Get data layout and width/height indices</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_data_layout, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a> = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_data_layout, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="comment">// Compute the ratio between source height and destination height</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> hr = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_height), dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_height), _align_corners);</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>     win_off;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    win_off.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    win_off.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="comment">// Don&#39;t increment in X and Y direction for the input tensor</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <span class="comment">// A pointer to the start of this plane is needed as base for the precomputed offsets</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_in(window);</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    win_in.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(idx_width, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    win_in.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(idx_height, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> d = <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>; d &lt; offsets-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>(); ++d)</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    {</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        win_off.set(d, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    }</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> src_i(src, win_in);</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> dst_i(dst, window);</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="keyword">const</span> int32_t in_dim_w = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_width);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <span class="keyword">const</span> int32_t in_dim_h = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_height);</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keyword">const</span> int32_t stride_w = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">idx_width</a>];</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keyword">const</span> int32_t stride_h = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">idx_height</a>];</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> iq_info = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> oq_info = dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">if</span>(_border_mode == <a class="code" href="namespacearm__compute.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92">BorderMode::CONSTANT</a>)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    {</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keyword">using</span> ConstType = <span class="keyword">typename</span> std::conditional&lt;std::is_same&lt;T, float16_t&gt;::value, <a class="code" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a>, T&gt;<a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">::type</a>;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        <span class="keyword">using</span> ConstType = T;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="keyword">const</span> T const_border_value = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(_constant_border_value.get&lt;ConstType&gt;());</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(window, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        {</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            <span class="keyword">const</span> int32_t index_h       = std::floor((<span class="keywordtype">id</span>[idx_height] + _sampling_offset) * hr - _sampling_offset);</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            <span class="keyword">const</span> int32_t index_w       = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(offsets-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a>(<a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>(<span class="keywordtype">id</span>[idx_width], <span class="keywordtype">id</span>[idx_height]))));</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span>    dx_val        = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(dx-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a>(<a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>(<span class="keywordtype">id</span>[idx_width], <span class="keywordtype">id</span>[idx_height]))));</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span>    dy_val        = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(dy-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a>(<a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>(<span class="keywordtype">id</span>[idx_width], <span class="keywordtype">id</span>[idx_height]))));</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span>    pixel_row_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T *<span class="keyword">&gt;</span>(src_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>());</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a00 = (0 &lt;= index_w &amp;&amp; index_w &lt; in_dim_w &amp;&amp; 0 &lt;= index_h &amp;&amp; index_h &lt; in_dim_h) ?</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                             (*(pixel_row_ptr + index_w * stride_w + index_h * stride_h)) :</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                             const_border_value;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a01 = (-1 &lt;= index_w &amp;&amp; index_w &lt; in_dim_w - 1 &amp;&amp; 0 &lt;= index_h &amp;&amp; index_h &lt; in_dim_h) ?</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                             (*(pixel_row_ptr + (index_w + 1) * stride_w + index_h * stride_h)) :</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                             const_border_value;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a10 = (0 &lt;= index_w &amp;&amp; index_w &lt; in_dim_w &amp;&amp; -1 &lt;= index_h &amp;&amp; index_h &lt; in_dim_h - 1) ?</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                             (*(pixel_row_ptr + index_w * stride_w + (index_h + 1) * stride_h)) :</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                             const_border_value;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a11 = (-1 &lt;= index_w &amp;&amp; index_w &lt; in_dim_w - 1 &amp;&amp; -1 &lt;= index_h &amp;&amp; index_h &lt; in_dim_h - 1) ?</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                             (*(pixel_row_ptr + (index_w + 1) * stride_w + (index_h + 1) * stride_h)) :</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                             const_border_value;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">float</span> inp00                   = <a class="code" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463">Qasymm8QuantizationHelper&lt;T&gt;::dequantize</a>(a00, iq_info);</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">float</span> inp01                   = <a class="code" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463">Qasymm8QuantizationHelper&lt;T&gt;::dequantize</a>(a01, iq_info);</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">float</span> inp10                   = <a class="code" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463">Qasymm8QuantizationHelper&lt;T&gt;::dequantize</a>(a10, iq_info);</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">float</span> inp11                   = <a class="code" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463">Qasymm8QuantizationHelper&lt;T&gt;::dequantize</a>(a11, iq_info);</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;            *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(dst_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()) = <a class="code" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml">Qasymm8QuantizationHelper&lt;T&gt;::quantize</a>(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#aeb969d3b0e5ceb8597c39b708f0df6e8">scale_helpers::delta_bilinear</a>(inp00, inp01, inp10, inp11, dx_val, dy_val), oq_info);</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        },</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        src_i, dst_i);</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    }</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(_border_mode == <a class="code" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a4ef59320fbe90fe47d40f1f71e4c5daa">BorderMode::REPLICATE</a>)</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    {</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(window, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        {</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">int</span>     index_h       = std::floor((<span class="keywordtype">id</span>[idx_height] + _sampling_offset) * hr - _sampling_offset);</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            <span class="keyword">const</span> int32_t index_w       = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(offsets-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a>(<a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>(<span class="keywordtype">id</span>[idx_width], <span class="keywordtype">id</span>[idx_height]))));</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span>    dx_val        = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(dx-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a>(<a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>(<span class="keywordtype">id</span>[idx_width], <span class="keywordtype">id</span>[idx_height]))));</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span>    dy_val        = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(dy-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a>(<a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>(<span class="keywordtype">id</span>[idx_width], <span class="keywordtype">id</span>[idx_height]))));</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span>    pixel_row_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T *<span class="keyword">&gt;</span>(src_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>());</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;            <span class="keyword">auto</span> clamped_w  = utility::clamp&lt;int&gt;(index_w, 0, in_dim_w - 1);</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            <span class="keyword">auto</span> clamped_w1 = utility::clamp&lt;int&gt;(index_w + 1, 0, in_dim_w - 1);</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;            <span class="keyword">auto</span> clamped_h  = utility::clamp&lt;int&gt;(index_h, 0, in_dim_h - 1);</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;            <span class="keyword">auto</span> clamped_h1 = utility::clamp&lt;int&gt;(index_h + 1, 0, in_dim_h - 1);</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a00 = *(pixel_row_ptr + clamped_w * stride_w + clamped_h * stride_h);</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a01 = *(pixel_row_ptr + clamped_w1 * stride_w + clamped_h * stride_h);</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a10 = *(pixel_row_ptr + clamped_w * stride_w + clamped_h1 * stride_h);</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> a11 = *(pixel_row_ptr + clamped_w1 * stride_w + clamped_h1 * stride_h);</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">float</span> inp00                   = <a class="code" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463">Qasymm8QuantizationHelper&lt;T&gt;::dequantize</a>(a00, iq_info);</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">float</span> inp01                   = <a class="code" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463">Qasymm8QuantizationHelper&lt;T&gt;::dequantize</a>(a01, iq_info);</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">float</span> inp10                   = <a class="code" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463">Qasymm8QuantizationHelper&lt;T&gt;::dequantize</a>(a10, iq_info);</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">float</span> inp11                   = <a class="code" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463">Qasymm8QuantizationHelper&lt;T&gt;::dequantize</a>(a11, iq_info);</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(dst_i.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()) = <a class="code" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml">Qasymm8QuantizationHelper&lt;T&gt;::quantize</a>(<a class="code" href="namespacearm__compute_1_1scale__helpers.xhtml#aeb969d3b0e5ceb8597c39b708f0df6e8">scale_helpers::delta_bilinear</a>(inp00, inp01, inp10, inp11, dx_val, dy_val), oq_info);</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        },</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        src_i, dst_i);</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    }</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    {</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not implemented&quot;</span>);</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    }</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;}</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="preprocessor">#endif // ENABLE_NCHW_KERNELS</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#aa4037ddfcb45e5deab40342caf695347">  569</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#aa4037ddfcb45e5deab40342caf695347">CpuScaleKernel::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dx, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dy,</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *offsets, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_scale_kernel_info.xhtml">ScaleKernelInfo</a> &amp;info)</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;{</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">validate_arguments</a>(input, dx, dy, offsets, output, info));</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;}</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">  576</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">CpuScaleKernel::run_op</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;info)</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;{</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(info);</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">ICpuKernel::window</a>(), window);</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_func == <span class="keyword">nullptr</span> &amp;&amp; _data_layout == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>);</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_run_method == <span class="keyword">nullptr</span> &amp;&amp; _data_layout == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> src     = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>);</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="keyword">auto</span>       dst     = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>);</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> dx      = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a9be6b6e34915d1ad0cbe68911a25459a">TensorType::ACL_INT_0</a>);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> dy      = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a634a498326dcb5b1f977bc1653f64a70">TensorType::ACL_INT_1</a>);</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> offsets = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828acc3b8583b5cb467f016926384c85295a">TensorType::ACL_INT_2</a>);</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    <span class="keywordflow">if</span>(_data_layout == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    {</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        (this-&gt;*_func)(src, dst, dx, dy, offsets, window);</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    }</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    {</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        _run_method(src, dst, offsets, dx, dy, _policy, _border_mode, _constant_border_value, _sampling_offset, _align_corners, window);</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    }</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;}</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#aef1a10d4d6422ca58d53d8414d5954bd">  600</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#aef1a10d4d6422ca58d53d8414d5954bd">CpuScaleKernel::name</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    <span class="keywordflow">return</span> _name.c_str();</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;}</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#a60635868b27d1da91e5b4e04a784a37f">  605</a></span>&#160;<span class="keyword">const</span> std::vector&lt;CpuScaleKernel::ScaleKernel&gt; &amp;<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#a60635868b27d1da91e5b4e04a784a37f">CpuScaleKernel::get_available_kernels</a>()</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;{</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordflow">return</span> available_kernels;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;}</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;} <span class="comment">// namespace kernels</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;} <span class="comment">// namespace cpu</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_a4be1f403a4bbb154a31380bff58d62e8"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#a4be1f403a4bbb154a31380bff58d62e8">arm_compute::ScaleKernelInfo::border_mode</a></div><div class="ttdeci">BorderMode border_mode</div><div class="ttdoc">Border mode policy. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00219">KernelDescriptors.h:219</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a1f4e725b8e1ea36b30e09dc08ae6961d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">arm_compute::ITensorInfo::num_dimensions</a></div><div class="ttdeci">virtual size_t num_dimensions() const =0</div><div class="ttdoc">The number of dimensions of the tensor (rank) </div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml">arm_compute::PixelValue</a></div><div class="ttdoc">Class describing the value of a pixel for any image format. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00034">PixelValue.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00028">WindowHelpers.cpp:28</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac354c23c8e4921ea8a8ad07e1a1d3fe5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac354c23c8e4921ea8a8ad07e1a1d3fe5">arm_compute::test::validation::idx_width</a></div><div class="ttdeci">const int idx_width</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00264">Scale.cpp:264</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1a367830ae09bf6138df822888ec1d71"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">arm_compute::test::validation::w</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; w</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00156">DFT.cpp:156</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a503eae482390645cffa1439822fa864a"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a503eae482390645cffa1439822fa864a">arm_compute::cpu::s8_neon_scale</a></div><div class="ttdeci">void s8_neon_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="scale_2neon_2integer_8cpp_source.xhtml#l00631">integer.cpp:631</a></div></div>
<div class="ttc" id="_window_helpers_8h_xhtml"><div class="ttname"><a href="_window_helpers_8h.xhtml">WindowHelpers.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on. </div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_adbd73147d41e8a640bc299d12613c31e"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">arm_compute::ITensor::ptr_to_element</a></div><div class="ttdeci">uint8_t * ptr_to_element(const Coordinates &amp;id) const</div><div class="ttdoc">Return a pointer to the element at the passed coordinates. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00063">ITensor.h:63</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acf5f12bbab64dd614bd8220c97fe484f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00406">ConvolutionLayer.cpp:406</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_i_cpu_kernel_xhtml_a1c57e942b23eab1974697c3378bee0d8"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml#a1c57e942b23eab1974697c3378bee0d8">arm_compute::cpu::ICpuKernel&lt; CpuScaleKernel &gt;::get_implementation</a></div><div class="ttdeci">static const auto * get_implementation(const SelectorType &amp;selector, KernelSelectionType selection_type=KernelSelectionType::Supported)</div><div class="ttdoc">Micro-kernel selector. </div><div class="ttdef"><b>Definition:</b> <a href="_i_cpu_kernel_8h_source.xhtml#l00053">ICpuKernel.h:53</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_a61b93996076d0e0da8bf19cc3aa95bd7"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#a61b93996076d0e0da8bf19cc3aa95bd7">arm_compute::ScaleKernelInfo::interpolation_policy</a></div><div class="ttdeci">InterpolationPolicy interpolation_policy</div><div class="ttdoc">Interpolation type to use. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00218">KernelDescriptors.h:218</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a26fa1b6549066348f60eabe7c9bb53df"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a26fa1b6549066348f60eabe7c9bb53df">REGISTER_FP16_NEON</a></div><div class="ttdeci">#define REGISTER_FP16_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00048">Registrars.h:48</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension. </div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel_xhtml_a883429dd6cf828bfdd64b255afc458da"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">arm_compute::cpu::kernels::CpuScaleKernel::run_op</a></div><div class="ttdeci">void run_op(ITensorPack &amp;tensors, const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_scale_kernel_8cpp_source.xhtml#l00576">CpuScaleKernel.cpp:576</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a4dfe2c548a30336abb7be2dca919a71d"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a4dfe2c548a30336abb7be2dca919a71d">arm_compute::cpu::qasymm8_signed_sve_scale</a></div><div class="ttdeci">void qasymm8_signed_sve_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="scale_2sve_2qasymm8__signed_8cpp_source.xhtml#l00089">qasymm8_signed.cpp:89</a></div></div>
<div class="ttc" id="structarm__compute_1_1cpu_1_1kernels_1_1_scale_kernel_data_type_i_s_a_selector_data_xhtml"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1kernels_1_1_scale_kernel_data_type_i_s_a_selector_data.xhtml">arm_compute::cpu::kernels::ScaleKernelDataTypeISASelectorData</a></div><div class="ttdef"><b>Definition:</b> <a href="_cpu_kernel_selection_types_8h_source.xhtml#l00094">CpuKernelSelectionTypes.h:94</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_ab8225bb56462d5dc53bcd91a7ab7e427"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#ab8225bb56462d5dc53bcd91a7ab7e427">arm_compute::cpu::qasymm8_sve_scale</a></div><div class="ttdeci">void qasymm8_sve_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="scale_2sve_2qasymm8_8cpp_source.xhtml#l00089">qasymm8.cpp:89</a></div></div>
<div class="ttc" id="_scale_helpers_8h_xhtml"><div class="ttname"><a href="_scale_helpers_8h.xhtml">ScaleHelpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::Format::U8</a></div><div class="ttdoc">1 channel, 1 U8 per channel </div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a682bd642e8e78633d42922f0158858c1"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a682bd642e8e78633d42922f0158858c1">REGISTER_FP32_NEON</a></div><div class="ttdeci">#define REGISTER_FP32_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00074">Registrars.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a66c4c1f8b1962d71162d7ac0b3ef65bc"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a66c4c1f8b1962d71162d7ac0b3ef65bc">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(uint8_t &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a U8. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00244">PixelValue.h:244</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor. </div></div>
<div class="ttc" id="_window_8h_xhtml"><div class="ttname"><a href="_window_8h.xhtml">Window.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a73e2825fd61d349c5ca2f5313e3c8ea1"><div class="ttname"><a href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">arm_compute::half</a></div><div class="ttdeci">half_float::half half</div><div class="ttdoc">16-bit floating point type </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00048">Types.h:48</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a70b11b257400488c81ab0998adcc59f1"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a70b11b257400488c81ab0998adcc59f1">REGISTER_FP32_SVE</a></div><div class="ttdeci">#define REGISTER_FP32_SVE(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00075">Registrars.h:75</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdoc">height </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">arm_compute::InterpolationPolicy::BILINEAR</a></div><div class="ttdoc">Output values are defined by bilinear interpolation between the pixels. </div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a903be60f833cefbdb13462c3b380d967"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a903be60f833cefbdb13462c3b380d967">REGISTER_QASYMM8_SVE</a></div><div class="ttdeci">#define REGISTER_QASYMM8_SVE(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00118">Registrars.h:118</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a84a833348dea51fac4320f7f65eb6f57"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a84a833348dea51fac4320f7f65eb6f57">REGISTER_QASYMM8_SIGNED_NEON</a></div><div class="ttdeci">#define REGISTER_QASYMM8_SIGNED_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00096">Registrars.h:96</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_ae4b9452a8d98cec5e781396d27006c73"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#ae4b9452a8d98cec5e781396d27006c73">arm_compute::ScaleKernelInfo::align_corners</a></div><div class="ttdeci">bool align_corners</div><div class="ttdoc">Align corners of input and output. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00223">KernelDescriptors.h:223</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00043">ITensorInfo.h:43</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a433a50d9bda93287b0e904adb3209b1a"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a433a50d9bda93287b0e904adb3209b1a">arm_compute::cpu::fp16_sve_scale</a></div><div class="ttdeci">void fp16_sve_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml">arm_compute::UniformQuantizationInfo</a></div><div class="ttdoc">Quantization info when assuming per layer quantization. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00044">QuantizationInfo.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image&amp;#39;s dimensions with a start, end and step. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00079">Window.h:79</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_aeecc6e8935077dc93cc5079fe98d3adc"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#aeecc6e8935077dc93cc5079fe98d3adc">arm_compute::utils::rounding::round_half_away_from_zero</a></div><div class="ttdeci">T round_half_away_from_zero(T value)</div><div class="ttdoc">Round floating-point value with half value rounding away from zero. </div><div class="ttdef"><b>Definition:</b> <a href="support_2_rounding_8h_source.xhtml#l00106">Rounding.h:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">arm_compute::InterpolationPolicy::NEAREST_NEIGHBOR</a></div><div class="ttdoc">Output values are defined to match the source pixel whose center is nearest to the sample position...</div></div>
<div class="ttc" id="structarm__compute_1_1_qasymm8_quantization_helper_xhtml"><div class="ttname"><a href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml">arm_compute::Qasymm8QuantizationHelper</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00212">QuantizationInfo.h:212</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_1_1kernels_xhtml_acf9ea6633274730cd08b8b8fab3a6fe6"><div class="ttname"><a href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">arm_compute::cpu::kernels::validate_arguments</a></div><div class="ttdeci">Status validate_arguments(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *dst, const PadStrideInfo &amp;conv_info)</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_direct_conv2d_kernel_8cpp_source.xhtml#l00060">CpuDirectConv2dKernel.cpp:60</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="gemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00261">gemm_interleaved.hpp:261</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="nchw_2scale_8cl_xhtml_a42131df7a754ea279bea023c2e18b077"><div class="ttname"><a href="nchw_2scale_8cl.xhtml#a42131df7a754ea279bea023c2e18b077">scale_bilinear_nchw</a></div><div class="ttdeci">__kernel void scale_bilinear_nchw(__global uchar *in_ptr, uint in_stride_x, uint in_step_x, uint in_stride_y, uint in_step_y, uint in_offset_first_element_in_bytes, __global uchar *out_ptr, uint out_stride_x, uint out_step_x, uint out_stride_y, uint out_step_y, uint out_offset_first_element_in_bytes)</div><div class="ttdoc">Performs an affine transformation on an image interpolating with the BILINEAR method. </div><div class="ttdef"><b>Definition:</b> <a href="nchw_2scale_8cl_source.xhtml#l00158">scale.cl:158</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::Format::F16</a></div><div class="ttdoc">1 channel, 1 F16 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">arm_compute::SamplingPolicy::CENTER</a></div><div class="ttdoc">Samples are taken at pixel center. </div></div>
<div class="ttc" id="namespacearm__compute_1_1scale__utils_xhtml_ae89e1815d3845f647832dd3b88b8b015"><div class="ttname"><a href="namespacearm__compute_1_1scale__utils.xhtml#ae89e1815d3845f647832dd3b88b8b015">arm_compute::scale_utils::is_align_corners_allowed_sampling_policy</a></div><div class="ttdeci">bool is_align_corners_allowed_sampling_policy(SamplingPolicy sampling_policy)</div><div class="ttdoc">Returns if aligned corners are allowed for the given sampling policy. </div><div class="ttdef"><b>Definition:</b> <a href="_scale_utils_8h_source.xhtml#l00049">ScaleUtils.h:49</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a1041dbd279355812f5c04a21ea0b0a31"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a1041dbd279355812f5c04a21ea0b0a31">REGISTER_INTEGER_NEON</a></div><div class="ttdeci">#define REGISTER_INTEGER_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00171">Registrars.h:171</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_ab84bffc7fa662116691c737df96be89e"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#ab84bffc7fa662116691c737df96be89e">REGISTER_QASYMM8_SIGNED_SVE</a></div><div class="ttdeci">#define REGISTER_QASYMM8_SIGNED_SVE(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00097">Registrars.h:97</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml_a000c70e9839ed364ab7343de880a4d35"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">arm_compute::ITensorPack::get_const_tensor</a></div><div class="ttdeci">const ITensor * get_const_tensor(int id) const</div><div class="ttdoc">Get constant tensor of a given id. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00054">ITensorPack.cpp:54</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a11bc1d142af115f27986158afcd94360"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a11bc1d142af115f27986158afcd94360">arm_compute::cpu::u8_sve_scale</a></div><div class="ttdeci">void u8_sve_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="scale_2sve_2integer_8cpp_source.xhtml#l00132">integer.cpp:132</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a142b55a483cadf4e1068a1a09a55e8e9"><div class="ttname"><a href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">arm_compute::string_from_data_type</a></div><div class="ttdeci">const std::string &amp; string_from_data_type(DataType dt)</div><div class="ttdoc">Convert a data type identity into a string. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00135">Utils.cpp:135</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_acfa632794dcd2aaa48882f9804f191b7"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#acfa632794dcd2aaa48882f9804f191b7">REGISTER_QASYMM8_NEON</a></div><div class="ttdeci">#define REGISTER_QASYMM8_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00117">Registrars.h:117</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_ad348fa445d9af395a4803fbc7a16eaa3"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#ad348fa445d9af395a4803fbc7a16eaa3">arm_compute::ScaleKernelInfo::sampling_policy</a></div><div class="ttdeci">SamplingPolicy sampling_policy</div><div class="ttdoc">Sampling policy used by the interpolation. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00221">KernelDescriptors.h:221</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_abb9f749a8ea92dda58cc0881b1450158"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#abb9f749a8ea92dda58cc0881b1450158">arm_compute::test::validation::idx_height</a></div><div class="ttdeci">const int idx_height</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00265">Scale.cpp:265</a></div></div>
<div class="ttc" id="cpu_2kernels_2scale_2neon_2list_8h_xhtml"><div class="ttname"><a href="cpu_2kernels_2scale_2neon_2list_8h.xhtml">list.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned </div></div>
<div class="ttc" id="classarm__compute_1_1_steps_xhtml"><div class="ttname"><a href="classarm__compute_1_1_steps.xhtml">arm_compute::Steps</a></div><div class="ttdoc">Class to describe a number of elements in each dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_steps_8h_source.xhtml#l00040">Steps.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1scale__helpers_xhtml_a5381913903c50de7cbb7ebcb18ca4847"><div class="ttname"><a href="namespacearm__compute_1_1scale__helpers.xhtml#a5381913903c50de7cbb7ebcb18ca4847">arm_compute::scale_helpers::pixel_area_c1u8_clamp</a></div><div class="ttdeci">uint8_t pixel_area_c1u8_clamp(const uint8_t *first_pixel_ptr, size_t stride, size_t width, size_t height, float wr, float hr, int x, int y)</div><div class="ttdoc">Return the pixel at (x,y) using area interpolation by clamping when out of borders. </div><div class="ttdef"><b>Definition:</b> <a href="_scale_helpers_8h_source.xhtml#l00126">ScaleHelpers.h:126</a></div></div>
<div class="ttc" id="cpu_2kernels_2scale_2sve_2list_8h_xhtml"><div class="ttname"><a href="cpu_2kernels_2scale_2sve_2list_8h.xhtml">list.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item. </div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a5afa676c133f2bd00b896680e5176cd4"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a5afa676c133f2bd00b896680e5176cd4">arm_compute::cpu::qasymm8_signed_neon_scale</a></div><div class="ttdeci">void qasymm8_signed_neon_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="scale_2neon_2qasymm8__signed_8cpp_source.xhtml#l00309">qasymm8_signed.cpp:309</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3e4a3ad379526db61e1ebf469b455f83"><div class="ttname"><a href="namespacearm__compute.xhtml#a3e4a3ad379526db61e1ebf469b455f83">arm_compute::string_from_interpolation_policy</a></div><div class="ttdeci">const std::string &amp; string_from_interpolation_policy(InterpolationPolicy policy)</div><div class="ttdoc">Translates a given interpolation policy to a string. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00189">Utils.cpp:189</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml_a706fc156bcd4c45441bcaad05884b57d"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">arm_compute::QuantizationInfo::uniform</a></div><div class="ttdeci">UniformQuantizationInfo uniform() const</div><div class="ttdoc">Return per layer quantization info. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00150">QuantizationInfo.h:150</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml">Registrars.h</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a9b78428ad2200c4f79c153a00ec8ceb9"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a9b78428ad2200c4f79c153a00ec8ceb9">REGISTER_INTEGER_SVE</a></div><div class="ttdeci">#define REGISTER_INTEGER_SVE(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00172">Registrars.h:172</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">arm_compute::SamplingPolicy::TOP_LEFT</a></div><div class="ttdoc">Samples are taken at pixel top left corner. </div></div>
<div class="ttc" id="classarm__compute_1_1_iterator_xhtml_ab260e292b1df3944bc1d55a9b2301e41"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">arm_compute::Iterator::ptr</a></div><div class="ttdeci">constexpr uint8_t * ptr() const</div><div class="ttdoc">Return a pointer to the current pixel. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00149">Helpers.inl:149</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="support_2_rounding_8h_xhtml"><div class="ttname"><a href="support_2_rounding_8h.xhtml">Rounding.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a4e667bbff11c6a32d56b10f0e9626438"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a4e667bbff11c6a32d56b10f0e9626438">arm_compute::cpu::s16_sve_scale</a></div><div class="ttdeci">void s16_sve_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="scale_2sve_2integer_8cpp_source.xhtml#l00147">integer.cpp:147</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00049">Window.inl:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a07b929c34ad1dc823d8315876aa403ce"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">arm_compute::ITensorInfo::padding</a></div><div class="ttdeci">virtual PaddingSize padding() const =0</div><div class="ttdoc">Padding of tensor. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828acc3b8583b5cb467f016926384c85295a"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828acc3b8583b5cb467f016926384c85295a">arm_compute::ACL_INT_2</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00065">Types.h:65</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a634a498326dcb5b1f977bc1653f64a70"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a634a498326dcb5b1f977bc1653f64a70">arm_compute::ACL_INT_1</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00064">Types.h:64</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a05374b750b0fc472c34ee61e6f028bba"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a05374b750b0fc472c34ee61e6f028bba">arm_compute::BorderSize::left</a></div><div class="ttdeci">unsigned int left</div><div class="ttdoc">left of the border </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00395">Types.h:395</a></div></div>
<div class="ttc" id="_cpu_scale_kernel_8h_xhtml"><div class="ttname"><a href="_cpu_scale_kernel_8h.xhtml">CpuScaleKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a3f3e1a3200223e6a304a533b1016e749"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">arm_compute::ITensorInfo::quantization_info</a></div><div class="ttdeci">virtual QuantizationInfo quantization_info() const =0</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor. </div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a78b0fed184c642b78f32fd34b228a5f9"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a78b0fed184c642b78f32fd34b228a5f9">arm_compute::BorderSize::right</a></div><div class="ttdeci">unsigned int right</div><div class="ttdoc">right of the border </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00393">Types.h:393</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00915">Validate.h:915</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">arm_compute::Format::S16</a></div><div class="ttdoc">1 channel, 1 S16 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">arm_compute::InterpolationPolicy::AREA</a></div><div class="ttdoc">Output values are determined by averaging the source pixels whose areas fall under the area of the de...</div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a9f0a2858d9233ec0443a1d1f2b3ca07c"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a9f0a2858d9233ec0443a1d1f2b3ca07c">arm_compute::cpu::u8_neon_scale</a></div><div class="ttdeci">void u8_neon_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="scale_2neon_2integer_8cpp_source.xhtml#l00645">integer.cpp:645</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdoc">Num samples, channels, height, width. </div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_aadf5c9cff86327b96d88d04649d9715e"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aadf5c9cff86327b96d88d04649d9715e">ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00786">Validate.h:786</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a9be6b6e34915d1ad0cbe68911a25459a"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a9be6b6e34915d1ad0cbe68911a25459a">arm_compute::ACL_INT_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00063">Types.h:63</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3">arm_compute::GPUTarget::UNKNOWN</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml_a341a4c8a24d190d39504656989573d91"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">arm_compute::ITensorPack::get_tensor</a></div><div class="ttdeci">ITensor * get_tensor(int id)</div><div class="ttdoc">Get tensor of a given id from the pac. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00064">ITensorPack.cpp:64</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml">arm_compute::ScaleKernelInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00189">KernelDescriptors.h:189</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a56b9e25c2e8731ca5488e7b3ccd66f58"><div class="ttname"><a href="namespacearm__compute.xhtml#a56b9e25c2e8731ca5488e7b3ccd66f58">arm_compute::string_from_data_layout</a></div><div class="ttdeci">const std::string &amp; string_from_data_layout(DataLayout dl)</div><div class="ttdoc">Convert a data layout identity into a string. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00123">Utils.cpp:123</a></div></div>
<div class="ttc" id="structarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU. </div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00180">CPPTypes.h:180</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a3d722cea84e48f36574c432bd9c118f0"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a3d722cea84e48f36574c432bd9c118f0">REGISTER_FP16_SVE</a></div><div class="ttdeci">#define REGISTER_FP16_SVE(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00049">Registrars.h:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92"><div class="ttname"><a href="namespacearm__compute.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92">arm_compute::PaddingMode::CONSTANT</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a15a05537a472ee742404821851529327a0db45d2a4141101bdfe48e3314cfbca3"><div class="ttname"><a href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a0db45d2a4141101bdfe48e3314cfbca3">arm_compute::BorderMode::UNDEFINED</a></div><div class="ttdoc">Borders are left undefined. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00203">Helpers.inl:203</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a15a05537a472ee742404821851529327a4ef59320fbe90fe47d40f1f71e4c5daa"><div class="ttname"><a href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a4ef59320fbe90fe47d40f1f71e4c5daa">arm_compute::BorderMode::REPLICATE</a></div><div class="ttdoc">Pixels outside the image are assumed to have the same value as the closest image pixel. </div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00541">Validate.h:541</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels. </div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a1b522b073f3ca32d24eb4e03495ef8a6"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a1b522b073f3ca32d24eb4e03495ef8a6">arm_compute::Window::y</a></div><div class="ttdeci">constexpr const Dimension &amp; y() const</div><div class="ttdoc">Alias to access the second dimension of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00168">Window.h:168</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00788">Validate.h:788</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_ae2aa72fde3eb94fa8822a4bb84e8d468"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#ae2aa72fde3eb94fa8822a4bb84e8d468">arm_compute::cpu::s16_neon_scale</a></div><div class="ttdeci">void s16_neon_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="scale_2neon_2integer_8cpp_source.xhtml#l00659">integer.cpp:659</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel_xhtml_a869f39a9ca814d812f88c4742527142f"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#a869f39a9ca814d812f88c4742527142f">arm_compute::cpu::kernels::CpuScaleKernel::configure</a></div><div class="ttdeci">void configure(const ITensorInfo *src, const ITensorInfo *dx, const ITensorInfo *dy, const ITensorInfo *offsets, ITensorInfo *dst, const ScaleKernelInfo &amp;info)</div><div class="ttdoc">Initialise the kernel&amp;#39;s inputs, output and interpolation policy. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_scale_kernel_8cpp_source.xhtml#l00185">CpuScaleKernel.cpp:185</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel_xhtml_aa4037ddfcb45e5deab40342caf695347"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#aa4037ddfcb45e5deab40342caf695347">arm_compute::cpu::kernels::CpuScaleKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dx, const ITensorInfo *dy, const ITensorInfo *offsets, ITensorInfo *dst, const ScaleKernelInfo &amp;info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_scale_kernel_8cpp_source.xhtml#l00569">CpuScaleKernel.cpp:569</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="structarm__compute_1_1_qasymm8_quantization_helper_xhtml_a912f8a4d002b2f74c071627a99469463"><div class="ttname"><a href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463">arm_compute::Qasymm8QuantizationHelper::dequantize</a></div><div class="ttdeci">static float dequantize(QUANTIZED_TYPE value, const UniformQuantizationInfo &amp;qinfo)</div><div class="ttdoc">Dequantize a value given a 8-bit asymmetric quantization scheme. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00275">QuantizationInfo.h:275</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width </div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_a852252ba70ed420df2bd4975afac8e23"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#a852252ba70ed420df2bd4975afac8e23">arm_compute::ScaleKernelInfo::constant_border_value</a></div><div class="ttdeci">PixelValue constant_border_value</div><div class="ttdoc">Constant value to use for constant border mode policy. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00220">KernelDescriptors.h:220</a></div></div>
<div class="ttc" id="arm__compute_2core_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00077">Helpers.inl:77</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1scale__utils_xhtml_a8c25b29542a5312b947f72e5ea5c825b"><div class="ttname"><a href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">arm_compute::scale_utils::calculate_resize_ratio</a></div><div class="ttdeci">float calculate_resize_ratio(size_t input_size, size_t output_size, bool align_corners=false)</div><div class="ttdoc">Returns resize ratio between input and output with consideration of aligned corners. </div><div class="ttdef"><b>Definition:</b> <a href="_scale_utils_8cpp_source.xhtml#l00031">ScaleUtils.cpp:31</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a6b14f175bf5281f57b561e2d4e4b1f1f"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">arm_compute::ITensorInfo::strides_in_bytes</a></div><div class="ttdeci">virtual const Strides &amp; strides_in_bytes() const =0</div><div class="ttdoc">The strides in bytes for accessing each dimension of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_c_p_u_info_xhtml_a2a42a2a0b91dce5401678766c088dfa7"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">arm_compute::CPUInfo::get</a></div><div class="ttdeci">static CPUInfo &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00040">CPPTypes.cpp:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel_xhtml_a60635868b27d1da91e5b4e04a784a37f"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#a60635868b27d1da91e5b4e04a784a37f">arm_compute::cpu::kernels::CpuScaleKernel::get_available_kernels</a></div><div class="ttdeci">static const std::vector&lt; ScaleKernel &gt; &amp; get_available_kernels()</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_scale_kernel_8cpp_source.xhtml#l00605">CpuScaleKernel.cpp:605</a></div></div>
<div class="ttc" id="structarm__compute_1_1_scale_kernel_info_xhtml_a317508a148d55ca7e093b9447c3366e7"><div class="ttname"><a href="structarm__compute_1_1_scale_kernel_info.xhtml#a317508a148d55ca7e093b9447c3366e7">arm_compute::ScaleKernelInfo::data_layout</a></div><div class="ttdeci">DataLayout data_layout</div><div class="ttdoc">Data layout to use. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00224">KernelDescriptors.h:224</a></div></div>
<div class="ttc" id="classarm__compute_1_1_iterator_xhtml"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml">arm_compute::Iterator</a></div><div class="ttdoc">Iterator updated by execute_window_loop for each window element. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00046">Helpers.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1scale__helpers_xhtml_aeb969d3b0e5ceb8597c39b708f0df6e8"><div class="ttname"><a href="namespacearm__compute_1_1scale__helpers.xhtml#aeb969d3b0e5ceb8597c39b708f0df6e8">arm_compute::scale_helpers::delta_bilinear</a></div><div class="ttdeci">float delta_bilinear(float a00, float a01, float a10, float a11, float dx_val, float dy_val)</div><div class="ttdoc">Computes bilinear interpolation using the top-left, top-right, bottom-left, bottom-right pixels and t...</div><div class="ttdef"><b>Definition:</b> <a href="_scale_helpers_8h_source.xhtml#l00186">ScaleHelpers.h:186</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition] </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00113">Types.h:113</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel_xhtml_aef1a10d4d6422ca58d53d8414d5954bd"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml#aef1a10d4d6422ca58d53d8414d5954bd">arm_compute::cpu::kernels::CpuScaleKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_scale_kernel_8cpp_source.xhtml#l00600">CpuScaleKernel.cpp:600</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">arm_compute::DataType::S8</a></div><div class="ttdoc">signed 8-bit number </div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_ab68fd045b9a5083bb30745437cbb603a"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#ab68fd045b9a5083bb30745437cbb603a">arm_compute::cpu::fp32_sve_scale</a></div><div class="ttdeci">void fp32_sve_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="cpu_2kernels_2scale_2sve_2fp32_8cpp_source.xhtml#l00089">fp32.cpp:89</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a594fa7dfda56b0775950658f6937af9c"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a594fa7dfda56b0775950658f6937af9c">arm_compute::cpu::qasymm8_neon_scale</a></div><div class="ttdeci">void qasymm8_neon_scale(const ITensor *src, ITensor *dst, const ITensor *offsets, const ITensor *dx, const ITensor *dy, InterpolationPolicy policy, BorderMode border_mode, PixelValue constant_border_value, float sampling_offset, bool align_corners, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="scale_2neon_2qasymm8_8cpp_source.xhtml#l00310">qasymm8.cpp:310</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00201">Validate.h:201</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_p_u_info_xhtml_ad7d3ca5154cbb01b5c5a24df54efd348"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">arm_compute::CPUInfo::get_isa</a></div><div class="ttdeci">cpuinfo::CpuIsaInfo get_isa() const</div><div class="ttdoc">Gets the current cpu&amp;#39;s ISA information. </div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00124">CPPTypes.cpp:124</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a367b5090ab432bc7de2c32369e087ab1"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">arm_compute::ITensorInfo::data_layout</a></div><div class="ttdeci">virtual DataLayout data_layout() const =0</div><div class="ttdoc">Get the data layout of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a273fd2ecdd45169b2f702f01a7e5e382"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const</div><div class="ttdoc">Alias to access the first dimension of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00159">Window.h:159</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_1de7bcbbdec2bf3559cb3c688662d4f5.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_cpu_scale_kernel_8cpp.xhtml">CpuScaleKernel.cpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:28 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
