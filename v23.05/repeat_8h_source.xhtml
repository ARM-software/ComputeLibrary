<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/repeat.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('repeat_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">repeat.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="repeat_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2020 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_REPEAT_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_REPEAT_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">/** Macros that help in loop unrolling */</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">//Repeat macros with 3 param, excluding the implicit ID param</span></div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a1dd0718c2bf5d454acd7a02b64577591">   31</a></span>&#160;<span class="preprocessor">#define REPEAT_3_1(P_X, P_A, P_B, P_C) P_X##_DEF(0, P_A, P_B, P_C)</span></div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a738d75550700d9ce743f0fac5738ee15">   32</a></span>&#160;<span class="preprocessor">#define REPEAT_3_2(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">    P_X##_DEF(1, P_A, P_B, P_C);       \</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">    REPEAT_3_1(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a686ae0b0906446146df62c8d4a2ea937">   35</a></span>&#160;<span class="preprocessor">#define REPEAT_3_3(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">    P_X##_DEF(2, P_A, P_B, P_C);       \</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">    REPEAT_3_2(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a9048833a93a05dd92f01b7e86bd62f09">   38</a></span>&#160;<span class="preprocessor">#define REPEAT_3_4(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">    P_X##_DEF(3, P_A, P_B, P_C);       \</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">    REPEAT_3_3(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ac02a49c611c786dedf7cb89b030f7900">   41</a></span>&#160;<span class="preprocessor">#define REPEAT_3_5(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">    P_X##_DEF(4, P_A, P_B, P_C);       \</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">    REPEAT_3_4(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a7a766ef9faa1ca344a84413e2eb1b9af">   44</a></span>&#160;<span class="preprocessor">#define REPEAT_3_6(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">    P_X##_DEF(5, P_A, P_B, P_C);       \</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">    REPEAT_3_5(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a364708cdd26aa3540ddbf93741283798">   47</a></span>&#160;<span class="preprocessor">#define REPEAT_3_7(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">    P_X##_DEF(6, P_A, P_B, P_C);       \</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">    REPEAT_3_6(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a3aca8cd3e6bb0f24b67c698ac39e2671">   50</a></span>&#160;<span class="preprocessor">#define REPEAT_3_8(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">    P_X##_DEF(7, P_A, P_B, P_C);       \</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">    REPEAT_3_7(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ac1feec4d1bc359eb8973eef7a2c964ce">   53</a></span>&#160;<span class="preprocessor">#define REPEAT_3_9(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">    P_X##_DEF(8, P_A, P_B, P_C);       \</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">    REPEAT_3_8(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a25dcf84375f5bef322aba053e054986d">   56</a></span>&#160;<span class="preprocessor">#define REPEAT_3_10(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">    P_X##_DEF(9, P_A, P_B, P_C);        \</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">    REPEAT_3_9(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#aab44d0a9187edad7e53d5e29f4fd65ee">   59</a></span>&#160;<span class="preprocessor">#define REPEAT_3_11(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">    P_X##_DEF(A, P_A, P_B, P_C);        \</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">    REPEAT_3_10(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#acbc305a55f5e189820a108d226d0c84b">   62</a></span>&#160;<span class="preprocessor">#define REPEAT_3_12(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">    P_X##_DEF(B, P_A, P_B, P_C);        \</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">    REPEAT_3_11(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#aea114bd5a1233b321466234ff0875bc3">   65</a></span>&#160;<span class="preprocessor">#define REPEAT_3_13(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">    P_X##_DEF(C, P_A, P_B, P_C);        \</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">    REPEAT_3_12(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a20676acc95474bc47de256419f05ca69">   68</a></span>&#160;<span class="preprocessor">#define REPEAT_3_14(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">    P_X##_DEF(D, P_A, P_B, P_C);        \</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">    REPEAT_3_13(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#affa3fc076d4917193cd8d0642def145d">   71</a></span>&#160;<span class="preprocessor">#define REPEAT_3_15(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">    P_X##_DEF(E, P_A, P_B, P_C);        \</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">    REPEAT_3_14(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ac5cc783b0133f545a6534e251a20b642">   74</a></span>&#160;<span class="preprocessor">#define REPEAT_3_16(P_X, P_A, P_B, P_C) \</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">    P_X##_DEF(F, P_A, P_B, P_C);        \</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">    REPEAT_3_15(P_X, P_A, P_B, P_C)</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a7719fb3da3410b3c7326f54e9f1a0908">   78</a></span>&#160;<span class="preprocessor">#define REPEAT_DEF_3_N(P_NUM, P_OP, P_A, P_B, P_C) REPEAT_3_##P_NUM(P_OP, P_A, P_B, P_C) //One level of indirection to ensure order of expansion does not affect preprocessing P_NUM</span></div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ad84b38198b8d17b0507243d16efd72d8">   79</a></span>&#160;<span class="preprocessor">#define REPEAT_3_N(P_NUM, P_OP, P_A, P_B, P_C) REPEAT_DEF_3_N(P_NUM, P_OP, P_A, P_B, P_C)</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">// Repeat macros with 4 param, excluding the implicit ID param</span></div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ab4efecb8facb7e289c1bf82a53f09e75">   82</a></span>&#160;<span class="preprocessor">#define REPEAT_4_1(P_X, P_A, P_B, P_C, P_D) P_X##_DEF(0, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a9328fdf8a9bc239bf12d3612c91214d0">   83</a></span>&#160;<span class="preprocessor">#define REPEAT_4_2(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">    P_X##_DEF(1, P_A, P_B, P_C, P_D);       \</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">    REPEAT_4_1(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#abd0b1ccb257d3936ebcd6406accfab87">   86</a></span>&#160;<span class="preprocessor">#define REPEAT_4_3(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">    P_X##_DEF(2, P_A, P_B, P_C, P_D);       \</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">    REPEAT_4_2(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ac282224e2682526e61d81cd6771b54af">   89</a></span>&#160;<span class="preprocessor">#define REPEAT_4_4(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">    P_X##_DEF(3, P_A, P_B, P_C, P_D);       \</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">    REPEAT_4_3(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a5f884ff1b6eeb1dd3ae1e8fe0a7f1223">   92</a></span>&#160;<span class="preprocessor">#define REPEAT_4_5(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">    P_X##_DEF(4, P_A, P_B, P_C, P_D);       \</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor">    REPEAT_4_4(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ac75e1ebf6486b2c14eb15f3fdb05d25b">   95</a></span>&#160;<span class="preprocessor">#define REPEAT_4_6(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor">    P_X##_DEF(5, P_A, P_B, P_C, P_D);       \</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor">    REPEAT_4_5(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a35c3b3f281071e8f935327d2de4a1ca2">   98</a></span>&#160;<span class="preprocessor">#define REPEAT_4_7(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">    P_X##_DEF(6, P_A, P_B, P_C, P_D);       \</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">    REPEAT_4_6(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a47e7993bc9e9ce3251374444746a23ca">  101</a></span>&#160;<span class="preprocessor">#define REPEAT_4_8(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">    P_X##_DEF(7, P_A, P_B, P_C, P_D);       \</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">    REPEAT_4_7(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a6e1a4221e451b75ebf922f3a02d89538">  104</a></span>&#160;<span class="preprocessor">#define REPEAT_4_9(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">    P_X##_DEF(8, P_A, P_B, P_C, P_D);       \</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">    REPEAT_4_8(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ab777bf9f784fedb7f1e26b7abda67c43">  107</a></span>&#160;<span class="preprocessor">#define REPEAT_4_10(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">    P_X##_DEF(9, P_A, P_B, P_C, P_D);        \</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">    REPEAT_4_9(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ad1b5d8457b26cb98a59b9e0238ac2834">  110</a></span>&#160;<span class="preprocessor">#define REPEAT_4_11(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">    P_X##_DEF(A, P_A, P_B, P_C, P_D);        \</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">    REPEAT_4_10(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a89e1ef59c576f631bcd1f51b2cb9e454">  113</a></span>&#160;<span class="preprocessor">#define REPEAT_4_12(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">    P_X##_DEF(B, P_A, P_B, P_C, P_D);        \</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">    REPEAT_4_11(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a7007670273528d917552650c17d22f3c">  116</a></span>&#160;<span class="preprocessor">#define REPEAT_4_13(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">    P_X##_DEF(C, P_A, P_B, P_C, P_D);        \</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">    REPEAT_4_12(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a77a804ea7d135f71ae4cc8c0eab79c7d">  119</a></span>&#160;<span class="preprocessor">#define REPEAT_4_14(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor">    P_X##_DEF(D, P_A, P_B, P_C, P_D);        \</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">    REPEAT_4_13(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a0f7f9238d553415a6b47892d01990ee5">  122</a></span>&#160;<span class="preprocessor">#define REPEAT_4_15(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">    P_X##_DEF(E, P_A, P_B, P_C, P_D);        \</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor">    REPEAT_4_14(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a029897fb6ebc6b2b96632060924250de">  125</a></span>&#160;<span class="preprocessor">#define REPEAT_4_16(P_X, P_A, P_B, P_C, P_D) \</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor">    P_X##_DEF(F, P_A, P_B, P_C, P_D);        \</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">    REPEAT_4_15(P_X, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a4a37d500dcfef3cb9fb86d19ee7947d5">  129</a></span>&#160;<span class="preprocessor">#define REPEAT_DEF_4_N(P_NUM, P_OP, P_A, P_B, P_C, P_D) REPEAT_4_##P_NUM(P_OP, P_A, P_B, P_C, P_D) //One level of indirection to ensure order of expansion does not affect preprocessing P_NUM</span></div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#afe64d8df83f1689a38b8dcb99746fb7f">  130</a></span>&#160;<span class="preprocessor">#define REPEAT_4_N(P_NUM, P_OP, P_A, P_B, P_C, P_D) REPEAT_DEF_4_N(P_NUM, P_OP, P_A, P_B, P_C, P_D)</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">// Macro for initializing N variables. Generates N statements that defines VAR##N = RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a88950092f54faf75d508703c229018e5">  133</a></span>&#160;<span class="preprocessor">#define VAR_INIT_TO_CONST_DEF(ID, TYPE, VAR, VAL) TYPE VAR##ID = VAL</span></div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a4a61a8df72f9bc1b1dcc4cc4ec6ac3b9">  134</a></span>&#160;<span class="preprocessor">#define REPEAT_VAR_INIT_TO_CONST(N, TYPE, VAR, VAL) REPEAT_3_N(N, VAR_INIT_TO_CONST, TYPE, VAR, VAL)</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">// Macro for initializing N variables by converting the data type. Generates N statements that defines VAR##N = RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a6e4e5d96052c2c2632eca7547c7cf1a5">  137</a></span>&#160;<span class="preprocessor">#define VAR_INIT_CONVERT_DEF(ID, TYPE_OUT, VAR_IN, VAR_OUT) TYPE_OUT VAR_OUT##ID = CONVERT(VAR_IN##ID, TYPE_OUT)</span></div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ad158a4337b01d9e95c8b953780c40fc8">  138</a></span>&#160;<span class="preprocessor">#define REPEAT_VAR_INIT_CONVERT(N, TYPE_OUT, VAR_IN, VAR_OUT) REPEAT_3_N(N, VAR_INIT_CONVERT, TYPE_OUT, VAR_IN, VAR_OUT)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">// Macro for initializing N variables by converting the data type with saturation. Generates N statements that defines VAR##N = RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#aed23eda8067c091a9e44158c9da74b82">  141</a></span>&#160;<span class="preprocessor">#define VAR_INIT_CONVERT_SAT_DEF(ID, TYPE_OUT, VAR_IN, VAR_OUT) TYPE_OUT VAR_OUT##ID = CONVERT_SAT(VAR_IN##ID, TYPE_OUT)</span></div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a14853d375c486c36ccec84906086ffb9">  142</a></span>&#160;<span class="preprocessor">#define REPEAT_VAR_INIT_CONVERT_SAT(N, TYPE_OUT, VAR_IN, VAR_OUT) REPEAT_3_N(N, VAR_INIT_CONVERT_SAT, TYPE_OUT, VAR_IN, VAR_OUT)</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">// Macro for adding a constant to N variables. Generates N statements that defines VAR##N =RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a461b23ab668a1efa7a50aac447d2bbcf">  145</a></span>&#160;<span class="preprocessor">#define ADD_CONST_TO_VAR_DEF(ID, TYPE, VAR, VAL) VAR##ID += (TYPE)VAL</span></div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a567d26b128e2a92d05e039d1bb2c6c44">  146</a></span>&#160;<span class="preprocessor">#define REPEAT_ADD_CONST_TO_VAR(N, TYPE, VAR, VAL) REPEAT_3_N(N, ADD_CONST_TO_VAR, TYPE, VAR, VAL)</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">// Macro for multiplying N variables (VAR_B) by a constant (VAL) and adding to other N variables (VAR_A). Generates N statements that defines VAR_A##N =RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a7e8e64b0ce4440786059b63459106467">  149</a></span>&#160;<span class="preprocessor">#define MLA_VAR_WITH_CONST_VEC_DEF(ID, VAR_A, VAR_B, VAL) VAR_A##ID += VAR_B##ID * VAL</span></div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a4ba765f40937a33eb88a93ec07805d13">  150</a></span>&#160;<span class="preprocessor">#define REPEAT_MLA_VAR_WITH_CONST_VEC(N, VAR_A, VAR_B, VAL) REPEAT_3_N(N, MLA_VAR_WITH_CONST_VEC, VAR_A, VAR_B, VAL)</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">// Macro for adding a vector to N-variables. Generates N statements that defines VAR##N =RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#af1decaa16d7f9534df70a0f019b42325">  153</a></span>&#160;<span class="preprocessor">#define ADD_VECTOR_TO_VAR_DEF(ID, TYPE, VAR, VEC) VAR##ID += VEC</span></div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#abec16491515d1b18f1736a42d9d670a9">  154</a></span>&#160;<span class="preprocessor">#define REPEAT_ADD_VECTOR_TO_VAR(N, VAR, VEC) REPEAT_3_N(N, ADD_VECTOR_TO_VAR, &quot;&quot;, VAR, VEC)</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">// Macro for adding a two N-variables. Generates N statements that defines VAR##N =RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ae85eed540e872566015a8e9e97d3a20a">  157</a></span>&#160;<span class="preprocessor">#define ADD_TWO_VARS_DEF(ID, TYPE, VAR_A, VAR_B) VAR_A##ID += VAR_B##ID</span></div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a071c70a1828740cdc4fcd3970d71186c">  158</a></span>&#160;<span class="preprocessor">#define REPEAT_ADD_TWO_VARS(N, VAR_A, VAR_B) REPEAT_3_N(N, ADD_TWO_VARS, &quot;&quot;, VAR_A, VAR_B)</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">// Macro for performing Max between a constant and N variables. Generates N statements that defines VAR##N =RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#aaf9269a2c1dc702afb0cac9afb4932d1">  161</a></span>&#160;<span class="preprocessor">#define MAX_CONST_VAR_DEF(ID, TYPE, VAR, VAL) VAR##ID = max(VAR##ID, (TYPE)VAL)</span></div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a614dc42173d8f8d663e047bd505a5d19">  162</a></span>&#160;<span class="preprocessor">#define REPEAT_MAX_CONST_VAR(N, TYPE, VAR, VAL) REPEAT_3_N(N, MAX_CONST_VAR, TYPE, VAR, VAL)</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">// Macro for performing Min between a constant and N variables. Generates N statements that defines VAR##N =RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ac059d94be1a167be33c57fa3af805821">  165</a></span>&#160;<span class="preprocessor">#define MIN_CONST_VAR_DEF(ID, TYPE, VAR, VAL) VAR##ID = min(VAR##ID, (TYPE)VAL)</span></div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#ab0332760ad462abec0e4303dcd32495e">  166</a></span>&#160;<span class="preprocessor">#define REPEAT_MIN_CONST_VAR(N, TYPE, VAR, VAL) REPEAT_3_N(N, MIN_CONST_VAR, TYPE, VAR, VAL)</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">// Macro for performing ASYMM_MULT_BY_QUANT_MULTIPLIER_GREATER_THAN_ONE to N variables. Generates N statements that defines VAR##N =RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#aeff3f18cb6846bb133898e045db11328">  169</a></span>&#160;<span class="preprocessor">#define ASYMM_MULT_BY_QUANT_MULTIPLIER_GREATER_THAN_ONE_DEF(ID, SIZE, VAR, RES_MUL, RES_SHIFT) VAR##ID = ASYMM_MULT_BY_QUANT_MULTIPLIER_GREATER_THAN_ONE(VAR##ID, RES_MUL, RES_SHIFT, SIZE)</span></div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a76baa8fe324b6dd78d32adb1fb857f00">  170</a></span>&#160;<span class="preprocessor">#define REPEAT_ASYMM_MULT_BY_QUANT_MULTIPLIER_GREATER_THAN_ONE(N, SIZE, VAR, RES_MUL, RES_SHIFT) REPEAT_4_N(N, ASYMM_MULT_BY_QUANT_MULTIPLIER_GREATER_THAN_ONE, SIZE, VAR, RES_MUL, RES_SHIFT)</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">// Macro for performing ASYMM_MULT_BY_QUANT_MULTIPLIER_LESS_THAN_ONE to N variables. Generates N statements that defines VAR##N =RHS_ACCESSOR_DEF(...)</span></div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a79fbdce4b397306c9652d4dc381dca1d">  173</a></span>&#160;<span class="preprocessor">#define ASYMM_MULT_BY_QUANT_MULTIPLIER_LESS_THAN_ONE_DEF(ID, SIZE, VAR, RES_MUL, RES_SHIFT) VAR##ID = ASYMM_MULT_BY_QUANT_MULTIPLIER_LESS_THAN_ONE(VAR##ID, RES_MUL, RES_SHIFT, SIZE)</span></div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a992028e2bf83f7aada735a6e3a3cb542">  174</a></span>&#160;<span class="preprocessor">#define REPEAT_ASYMM_MULT_BY_QUANT_MULTIPLIER_LESS_THAN_ONE(N, SIZE, VAR, RES_MUL, RES_SHIFT) REPEAT_4_N(N, ASYMM_MULT_BY_QUANT_MULTIPLIER_LESS_THAN_ONE, SIZE, VAR, RES_MUL, RES_SHIFT)</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">// Macro for performing per-channel ASYMM_MULT_BY_QUANT_MULTIPLIER to N variables.</span></div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a5bdcd28b44d826355de2869ff723ee44">  177</a></span>&#160;<span class="preprocessor">#define ASYMM_MULT_BY_QUANT_MULTIPLIER_PER_CHANNEL_DEF(ID, SIZE, VAR, RES_MUL, RES_SHIFT)                     \</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor">    ({                                                                                                        \</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="preprocessor">        VEC_DATA_TYPE(int, N0)                                                                                \</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">        VAR##ID_shift_lt0 = ASYMM_MULT_BY_QUANT_MULTIPLIER_GREATER_THAN_ONE(VAR##ID, RES_MUL, RES_SHIFT, N0); \</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">        VEC_DATA_TYPE(int, N0)                                                                                \</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">        VAR##ID_shift_gt0 = ASYMM_MULT_BY_QUANT_MULTIPLIER_LESS_THAN_ONE(VAR##ID, RES_MUL, RES_SHIFT, N0);    \</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">        VAR##ID           = select(VAR##ID_shift_lt0, VAR##ID_shift_gt0, RES_SHIFT &gt;= 0);                     \</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">    })</span></div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="repeat_8h.xhtml#a076b987fd03cf2444626a9ee0f149ca1">  185</a></span>&#160;<span class="preprocessor">#define REPEAT_ASYMM_MULT_BY_QUANT_MULTIPLIER_PER_CHANNEL(N, SIZE, VAR, RES_MUL, RES_SHIFT) REPEAT_4_N(N, ASYMM_MULT_BY_QUANT_MULTIPLIER_PER_CHANNEL, SIZE, VAR, RES_MUL, RES_SHIFT)</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor">#endif // ARM_COMPUTE_REPEAT_H</span></div><div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="repeat_8h.xhtml">repeat.h</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:25 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
