<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: scripts/caffe_mnist_image_extractor.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('caffe__mnist__image__extractor_8py_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">caffe_mnist_image_extractor.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="caffe__mnist__image__extractor_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml">    1</a></span>&#160;<span class="comment">#!/usr/bin/env python</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">&quot;&quot;&quot;Extracts mnist image data from the Caffe data files and stores them in numpy arrays</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">Usage</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">    python caffe_mnist_image_extractor.py -d path_to_caffe_data_directory -o desired_output_path</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="stringliteral">Saves the first 10 images extracted as input10.npy, the first 100 images as input100.npy, and the</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="stringliteral">corresponding labels to labels100.txt.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="stringliteral">Tested with Caffe 1.0 on Python 2.7</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">import</span> argparse</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">import</span> os</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">import</span> struct</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">from</span> array <span class="keyword">import</span> array</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keywordflow">if</span> __name__ == <span class="stringliteral">&quot;__main__&quot;</span>:</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="comment"># Parse arguments</span></div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#a90eee7a4677ca8b1ed116364a24367f9">   20</a></span>&#160;    parser = argparse.ArgumentParser(<span class="stringliteral">&#39;Extract Caffe mnist image data&#39;</span>)</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">   21</a></span>&#160;    parser.add_argument(<span class="stringliteral">&#39;-d&#39;</span>, dest=<span class="stringliteral">&#39;dataDir&#39;</span>, type=str, required=<span class="keyword">True</span>, help=<span class="stringliteral">&#39;Path to Caffe data directory&#39;</span>)</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#affb1327b18bf08a379d19eef89cf1ed1">   22</a></span>&#160;    parser.add_argument(<span class="stringliteral">&#39;-o&#39;</span>, dest=<span class="stringliteral">&#39;outDir&#39;</span>, type=str, default=<span class="stringliteral">&#39;.&#39;</span>, help=<span class="stringliteral">&#39;Output directory (default = current directory)&#39;</span>)</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#a8187411843a6284ffb964ef3fb9fcab3">   23</a></span>&#160;    args = parser.parse_args()</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#af1c9c30ec87a025cf61dd09f605c6d97">   25</a></span>&#160;    images_filename = os.path.join(args.dataDir, <span class="stringliteral">&#39;mnist/t10k-images-idx3-ubyte&#39;</span>)</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#ac53f751a8f7e6bc6d051549b09a94a89">   26</a></span>&#160;    labels_filename = os.path.join(args.dataDir, <span class="stringliteral">&#39;mnist/t10k-labels-idx1-ubyte&#39;</span>)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#a194a587948eebf6e05b837be3332aba3">   28</a></span>&#160;    images_file = open(images_filename, <span class="stringliteral">&#39;rb&#39;</span>)</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#aa1867d9496cea2a6bdcac409cb1f4da3">   29</a></span>&#160;    labels_file = open(labels_filename, <span class="stringliteral">&#39;rb&#39;</span>)</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#a74742cb5c8e2ac354a60cb73383d8176">   30</a></span>&#160;    images_magic, images_size, rows, cols = struct.unpack(<span class="stringliteral">&#39;&gt;IIII&#39;</span>, images_file.read(16))</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#a6479ee214170a68e282ea575a36cf034">   31</a></span>&#160;    labels_magic, labels_size = struct.unpack(<span class="stringliteral">&#39;&gt;II&#39;</span>, labels_file.read(8))</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#a51dcdeb45e5f187043150dc943c52faf">   32</a></span>&#160;    images = array(<span class="stringliteral">&#39;B&#39;</span>, images_file.read())</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#abc325fc13d4194905c1786e24ee447f0">   33</a></span>&#160;    labels = array(<span class="stringliteral">&#39;b&#39;</span>, labels_file.read())</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#ae7e60fec7878b2b9024b5bf8a35d5b6d">   35</a></span>&#160;    input10_path   = os.path.join(args.outDir, <span class="stringliteral">&#39;input10.npy&#39;</span>)</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#a7726b57c0e7ebeef050136ac6ad02219">   36</a></span>&#160;    input100_path  = os.path.join(args.outDir, <span class="stringliteral">&#39;input100.npy&#39;</span>)</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#a0d2575f9e78b10a9dd77a59c8ba0b087">   37</a></span>&#160;    labels100_path = os.path.join(args.outDir, <span class="stringliteral">&#39;labels100.npy&#39;</span>)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#af53b3677a92b75a1fb3c53ccc06e9e6b">   39</a></span>&#160;    outputs_10  = np.zeros(( 10, 28, 28, 1), dtype=np.float32)</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#ab1cb5adcbbc09ceb21384ce90fa24154">   40</a></span>&#160;    outputs_100 = np.zeros((100, 28, 28, 1), dtype=np.float32)</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#aa4f35326bc594cc7adc4d760938f0186">   41</a></span>&#160;    labels_output = open(labels100_path, <span class="stringliteral">&#39;w&#39;</span>)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">for</span> i <span class="keywordflow">in</span> xrange(100):</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">   43</a></span>&#160;        image = np.array(images[i * rows * cols : (i + 1) * rows * cols]).reshape((rows, cols)) / 256.0</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        outputs_100[i, :, :, 0] = image</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">if</span> i &lt; 10:</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            outputs_10[i, :, :, 0] = image</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">if</span> i == 10:</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            np.save(input10_path, np.transpose(outputs_10, (0, 3, 1, 2)))</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">print</span> <span class="stringliteral">&quot;Wrote&quot;</span>, input10_path</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        labels_output.write(<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(labels[i]) + <span class="stringliteral">&#39;\n&#39;</span>)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    labels_output.close()</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">print</span> <span class="stringliteral">&quot;Wrote&quot;</span>, labels100_path</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    np.save(input100_path, np.transpose(outputs_100, (0, 3, 1, 2)))</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">print</span> <span class="stringliteral">&quot;Wrote&quot;</span>, input100_path</div><div class="ttc" id="namespacecaffe__mnist__image__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_mnist_image_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__mnist__image__extractor_8py_source.xhtml#l00021">caffe_mnist_image_extractor.py:21</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_53e6fa9553ac22a5646d2a2b2d7b97a1.xhtml">scripts</a></li><li class="navelem"><a class="el" href="caffe__mnist__image__extractor_8py.xhtml">caffe_mnist_image_extractor.py</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:24 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
