<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: DotGraphVisitor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">DotGraphVisitor Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> printer visitor.  
 <a href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_dot_graph_printer_8h_source.xhtml">DotGraphPrinter.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for DotGraphVisitor:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1graph_1_1_dot_graph_visitor__coll__graph.svg" width="158" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aba079420016162d60cc142401885db44"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#aba079420016162d60cc142401885db44">DotGraphVisitor</a> ()=default</td></tr>
<tr class="memdesc:aba079420016162d60cc142401885db44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#aba079420016162d60cc142401885db44">More...</a><br /></td></tr>
<tr class="separator:aba079420016162d60cc142401885db44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae455892b8843f8bd868bbb7ba3359d1d"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#ae455892b8843f8bd868bbb7ba3359d1d">info</a> () const</td></tr>
<tr class="memdesc:ae455892b8843f8bd868bbb7ba3359d1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the output information of the last visited node.  <a href="#ae455892b8843f8bd868bbb7ba3359d1d">More...</a><br /></td></tr>
<tr class="separator:ae455892b8843f8bd868bbb7ba3359d1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a758cad84d59383224e908a0448c0e400"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a> &amp;n) override</td></tr>
<tr class="memdesc:a758cad84d59383224e908a0448c0e400"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml" title="Activation Layer node. ">ActivationLayerNode</a>.  <a href="#a758cad84d59383224e908a0448c0e400">More...</a><br /></td></tr>
<tr class="separator:a758cad84d59383224e908a0448c0e400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6a61733b0daa30060b2d643a59882f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#ae6a61733b0daa30060b2d643a59882f9">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml">BatchNormalizationLayerNode</a> &amp;n) override</td></tr>
<tr class="memdesc:ae6a61733b0daa30060b2d643a59882f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml" title="Batch Normalization Layer node. ">BatchNormalizationLayerNode</a>.  <a href="#ae6a61733b0daa30060b2d643a59882f9">More...</a><br /></td></tr>
<tr class="separator:ae6a61733b0daa30060b2d643a59882f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c10d2f76900c79976b527d3fd94492a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a5c10d2f76900c79976b527d3fd94492a">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">ConcatenateLayerNode</a> &amp;n) override</td></tr>
<tr class="memdesc:a5c10d2f76900c79976b527d3fd94492a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml" title="Concatenation Layer node. ">ConcatenateLayerNode</a>.  <a href="#a5c10d2f76900c79976b527d3fd94492a">More...</a><br /></td></tr>
<tr class="separator:a5c10d2f76900c79976b527d3fd94492a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f9ccf9586c79250a79c85fb562cc2f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a9f9ccf9586c79250a79c85fb562cc2f5">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">ConvolutionLayerNode</a> &amp;n) override</td></tr>
<tr class="memdesc:a9f9ccf9586c79250a79c85fb562cc2f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml" title="Convolution Layer node. ">ConvolutionLayerNode</a>.  <a href="#a9f9ccf9586c79250a79c85fb562cc2f5">More...</a><br /></td></tr>
<tr class="separator:a9f9ccf9586c79250a79c85fb562cc2f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed4fc061f50c81e08328eeead9f6ca3c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#aed4fc061f50c81e08328eeead9f6ca3c">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">DepthwiseConvolutionLayerNode</a> &amp;n) override</td></tr>
<tr class="memdesc:aed4fc061f50c81e08328eeead9f6ca3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml" title="Depthwise Convolution Layer node. ">DepthwiseConvolutionLayerNode</a>.  <a href="#aed4fc061f50c81e08328eeead9f6ca3c">More...</a><br /></td></tr>
<tr class="separator:aed4fc061f50c81e08328eeead9f6ca3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e48e66ec69d2ae228f73f6a7fc8aab6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a1e48e66ec69d2ae228f73f6a7fc8aab6">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a> &amp;n) override</td></tr>
<tr class="memdesc:a1e48e66ec69d2ae228f73f6a7fc8aab6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml" title="Eltwise Layer node. ">EltwiseLayerNode</a>.  <a href="#a1e48e66ec69d2ae228f73f6a7fc8aab6">More...</a><br /></td></tr>
<tr class="separator:a1e48e66ec69d2ae228f73f6a7fc8aab6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e3f67935e124ab096533434b188d66b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a8e3f67935e124ab096533434b188d66b">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml">FusedConvolutionBatchNormalizationNode</a> &amp;n) override</td></tr>
<tr class="memdesc:a8e3f67935e124ab096533434b188d66b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml" title="Batch Normalization node. ">FusedConvolutionBatchNormalizationNode</a>.  <a href="#a8e3f67935e124ab096533434b188d66b">More...</a><br /></td></tr>
<tr class="separator:a8e3f67935e124ab096533434b188d66b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1e673366798d3b6bd8dbb5053e33831"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#ab1e673366798d3b6bd8dbb5053e33831">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_with_post_ops_node.xhtml">FusedConvolutionBatchNormalizationWithPostOpsNode</a> &amp;n) override</td></tr>
<tr class="memdesc:ab1e673366798d3b6bd8dbb5053e33831"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_with_post_ops_node.xhtml" title="Batch Normalization node. ">FusedConvolutionBatchNormalizationWithPostOpsNode</a>.  <a href="#ab1e673366798d3b6bd8dbb5053e33831">More...</a><br /></td></tr>
<tr class="separator:ab1e673366798d3b6bd8dbb5053e33831"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adecad5b7fe66fe7331a55242bc0f63d8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#adecad5b7fe66fe7331a55242bc0f63d8">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_with_post_op_node.xhtml">FusedConvolutionWithPostOpNode</a> &amp;n) override</td></tr>
<tr class="memdesc:adecad5b7fe66fe7331a55242bc0f63d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_with_post_op_node.xhtml" title="Convolution node. ">FusedConvolutionWithPostOpNode</a>.  <a href="#adecad5b7fe66fe7331a55242bc0f63d8">More...</a><br /></td></tr>
<tr class="separator:adecad5b7fe66fe7331a55242bc0f63d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a955a9cfeee8b1105851ada5c27f1189c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a955a9cfeee8b1105851ada5c27f1189c">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml">FusedDepthwiseConvolutionBatchNormalizationNode</a> &amp;n) override</td></tr>
<tr class="memdesc:a955a9cfeee8b1105851ada5c27f1189c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml" title="Fused Depthwise Convolution Batch Normalization node. ">FusedDepthwiseConvolutionBatchNormalizationNode</a>.  <a href="#a955a9cfeee8b1105851ada5c27f1189c">More...</a><br /></td></tr>
<tr class="separator:a955a9cfeee8b1105851ada5c27f1189c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac5b1d0d521f3e24c6eb1b0ca3bc8016"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#aac5b1d0d521f3e24c6eb1b0ca3bc8016">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml">NormalizationLayerNode</a> &amp;n) override</td></tr>
<tr class="memdesc:aac5b1d0d521f3e24c6eb1b0ca3bc8016"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml" title="Normalization Layer node. ">NormalizationLayerNode</a>.  <a href="#aac5b1d0d521f3e24c6eb1b0ca3bc8016">More...</a><br /></td></tr>
<tr class="separator:aac5b1d0d521f3e24c6eb1b0ca3bc8016"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aa6abdf5e8362bc489cd55509f4f317"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a9aa6abdf5e8362bc489cd55509f4f317">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml">PoolingLayerNode</a> &amp;n) override</td></tr>
<tr class="memdesc:a9aa6abdf5e8362bc489cd55509f4f317"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml" title="Pooling Layer node. ">PoolingLayerNode</a>.  <a href="#a9aa6abdf5e8362bc489cd55509f4f317">More...</a><br /></td></tr>
<tr class="separator:a9aa6abdf5e8362bc489cd55509f4f317"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ae346d50c25d5008291185396e5c54e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a7ae346d50c25d5008291185396e5c54e">default_visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;n) override</td></tr>
<tr class="memdesc:a7ae346d50c25d5008291185396e5c54e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to be overloaded by the client and implement default behavior for the non-overloaded visitors.  <a href="#a7ae346d50c25d5008291185396e5c54e">More...</a><br /></td></tr>
<tr class="separator:a7ae346d50c25d5008291185396e5c54e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1graph_1_1_default_node_visitor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1graph_1_1_default_node_visitor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1graph_1_1_default_node_visitor.xhtml">DefaultNodeVisitor</a></td></tr>
<tr class="memitem:a2038c0d9b4fcd76227f60e2e9292aaf2 inherit pub_methods_classarm__compute_1_1graph_1_1_default_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_default_node_visitor.xhtml#a2038c0d9b4fcd76227f60e2e9292aaf2">~DefaultNodeVisitor</a> ()=default</td></tr>
<tr class="memdesc:a2038c0d9b4fcd76227f60e2e9292aaf2 inherit pub_methods_classarm__compute_1_1graph_1_1_default_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1graph_1_1_default_node_visitor.xhtml#a2038c0d9b4fcd76227f60e2e9292aaf2">More...</a><br /></td></tr>
<tr class="separator:a2038c0d9b4fcd76227f60e2e9292aaf2 inherit pub_methods_classarm__compute_1_1graph_1_1_default_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml">INodeVisitor</a></td></tr>
<tr class="memitem:a193ed05e630dec2d64802dd5ce1a60ab inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a193ed05e630dec2d64802dd5ce1a60ab">~INodeVisitor</a> ()=default</td></tr>
<tr class="memdesc:a193ed05e630dec2d64802dd5ce1a60ab inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a193ed05e630dec2d64802dd5ce1a60ab">More...</a><br /></td></tr>
<tr class="separator:a193ed05e630dec2d64802dd5ce1a60ab inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2dbe7c232e1d5d1a9d0621c3bb483a0 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#af2dbe7c232e1d5d1a9d0621c3bb483a0">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;n)=0</td></tr>
<tr class="memdesc:af2dbe7c232e1d5d1a9d0621c3bb483a0 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml" title="Node interface. ">INode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#af2dbe7c232e1d5d1a9d0621c3bb483a0">More...</a><br /></td></tr>
<tr class="separator:af2dbe7c232e1d5d1a9d0621c3bb483a0 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dca296fbf52dcc2c58a0664998e68de inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a9dca296fbf52dcc2c58a0664998e68de">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:a9dca296fbf52dcc2c58a0664998e68de inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_const_node.xhtml" title="Const node. ">ConstNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a9dca296fbf52dcc2c58a0664998e68de">More...</a><br /></td></tr>
<tr class="separator:a9dca296fbf52dcc2c58a0664998e68de inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0806f63df03f2f9b34177bcf8ce439bd inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a0806f63df03f2f9b34177bcf8ce439bd">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml">DequantizationLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:a0806f63df03f2f9b34177bcf8ce439bd inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml" title="Dequantize Layer node. ">DequantizationLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a0806f63df03f2f9b34177bcf8ce439bd">More...</a><br /></td></tr>
<tr class="separator:a0806f63df03f2f9b34177bcf8ce439bd inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a372f8556dcb66d7cda58db4a5f331e1f inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a372f8556dcb66d7cda58db4a5f331e1f">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml">DetectionOutputLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:a372f8556dcb66d7cda58db4a5f331e1f inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml" title="DetectionOutput Layer node. ">DetectionOutputLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a372f8556dcb66d7cda58db4a5f331e1f">More...</a><br /></td></tr>
<tr class="separator:a372f8556dcb66d7cda58db4a5f331e1f inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed9a139dded6f97aae3005bf3e33ff8c inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#aed9a139dded6f97aae3005bf3e33ff8c">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml">DetectionPostProcessLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:aed9a139dded6f97aae3005bf3e33ff8c inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml" title="DetectionPostProcess Layer node. ">DetectionPostProcessLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#aed9a139dded6f97aae3005bf3e33ff8c">More...</a><br /></td></tr>
<tr class="separator:aed9a139dded6f97aae3005bf3e33ff8c inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae090e4537101ef27e04ff80b0e165939 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#ae090e4537101ef27e04ff80b0e165939">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer_node.xhtml">FlattenLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:ae090e4537101ef27e04ff80b0e165939 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer_node.xhtml" title="Flatten Layer node. ">FlattenLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#ae090e4537101ef27e04ff80b0e165939">More...</a><br /></td></tr>
<tr class="separator:ae090e4537101ef27e04ff80b0e165939 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af16210fc560909e8c7b27e3f20f8daa6 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#af16210fc560909e8c7b27e3f20f8daa6">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer_node.xhtml">FullyConnectedLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:af16210fc560909e8c7b27e3f20f8daa6 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer_node.xhtml" title="Fully Connected Layer node. ">FullyConnectedLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#af16210fc560909e8c7b27e3f20f8daa6">More...</a><br /></td></tr>
<tr class="separator:af16210fc560909e8c7b27e3f20f8daa6 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1265b49ac3e299a4025cd29987476d3 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#ad1265b49ac3e299a4025cd29987476d3">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_input_node.xhtml">InputNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:ad1265b49ac3e299a4025cd29987476d3 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_input_node.xhtml" title="Input Layer node. ">InputNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#ad1265b49ac3e299a4025cd29987476d3">More...</a><br /></td></tr>
<tr class="separator:ad1265b49ac3e299a4025cd29987476d3 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab87ed681a6ea37686aec7cd27b887527 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#ab87ed681a6ea37686aec7cd27b887527">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_output_node.xhtml">OutputNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:ab87ed681a6ea37686aec7cd27b887527 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_output_node.xhtml" title="Output Layer node. ">OutputNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#ab87ed681a6ea37686aec7cd27b887527">More...</a><br /></td></tr>
<tr class="separator:ab87ed681a6ea37686aec7cd27b887527 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af394f8b2857e0272182ba95275cc8994 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#af394f8b2857e0272182ba95275cc8994">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_permute_layer_node.xhtml">PermuteLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:af394f8b2857e0272182ba95275cc8994 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_permute_layer_node.xhtml" title="Permute Layer node. ">PermuteLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#af394f8b2857e0272182ba95275cc8994">More...</a><br /></td></tr>
<tr class="separator:af394f8b2857e0272182ba95275cc8994 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2e388c55cc85a69e0ec2b1c1f1e69c8 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#ae2e388c55cc85a69e0ec2b1c1f1e69c8">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_p_relu_layer_node.xhtml">PReluLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:ae2e388c55cc85a69e0ec2b1c1f1e69c8 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit PreluLayerNode.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#ae2e388c55cc85a69e0ec2b1c1f1e69c8">More...</a><br /></td></tr>
<tr class="separator:ae2e388c55cc85a69e0ec2b1c1f1e69c8 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebeba4de3895195dd20b29e788fd45d1 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#aebeba4de3895195dd20b29e788fd45d1">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_print_layer_node.xhtml">PrintLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:aebeba4de3895195dd20b29e788fd45d1 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_print_layer_node.xhtml" title="Print Layer node. ">PrintLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#aebeba4de3895195dd20b29e788fd45d1">More...</a><br /></td></tr>
<tr class="separator:aebeba4de3895195dd20b29e788fd45d1 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a7d79aed59ab72f3cedcfabf1f7884b inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a6a7d79aed59ab72f3cedcfabf1f7884b">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_prior_box_layer_node.xhtml">PriorBoxLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:a6a7d79aed59ab72f3cedcfabf1f7884b inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_prior_box_layer_node.xhtml" title="PriorBox Layer node. ">PriorBoxLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a6a7d79aed59ab72f3cedcfabf1f7884b">More...</a><br /></td></tr>
<tr class="separator:a6a7d79aed59ab72f3cedcfabf1f7884b inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bb65dc2aefb5ac38c0ddc043ad1098b inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a3bb65dc2aefb5ac38c0ddc043ad1098b">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_quantization_layer_node.xhtml">QuantizationLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:a3bb65dc2aefb5ac38c0ddc043ad1098b inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_quantization_layer_node.xhtml" title="Quantization Layer node. ">QuantizationLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a3bb65dc2aefb5ac38c0ddc043ad1098b">More...</a><br /></td></tr>
<tr class="separator:a3bb65dc2aefb5ac38c0ddc043ad1098b inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ab3d1a5fedf335e979356b1236af8a9 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a3ab3d1a5fedf335e979356b1236af8a9">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml">ReshapeLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:a3ab3d1a5fedf335e979356b1236af8a9 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml" title="Reshape Layer node. ">ReshapeLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a3ab3d1a5fedf335e979356b1236af8a9">More...</a><br /></td></tr>
<tr class="separator:a3ab3d1a5fedf335e979356b1236af8a9 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35761aee870b4c937facc4c7f29fd39c inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a35761aee870b4c937facc4c7f29fd39c">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer_node.xhtml">SoftmaxLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:a35761aee870b4c937facc4c7f29fd39c inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer_node.xhtml" title="Softmax Layer node. ">SoftmaxLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a35761aee870b4c937facc4c7f29fd39c">More...</a><br /></td></tr>
<tr class="separator:a35761aee870b4c937facc4c7f29fd39c inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a879921d1e54b9711d71a8d2938516d11 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a879921d1e54b9711d71a8d2938516d11">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml">SplitLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:a879921d1e54b9711d71a8d2938516d11 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml" title="Split Layer node. ">SplitLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a879921d1e54b9711d71a8d2938516d11">More...</a><br /></td></tr>
<tr class="separator:a879921d1e54b9711d71a8d2938516d11 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67b4effc98b71f8fac734f194ae4ef38 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a67b4effc98b71f8fac734f194ae4ef38">visit</a> (<a class="el" href="classarm__compute_1_1graph_1_1_stack_layer_node.xhtml">StackLayerNode</a> &amp;n)=0</td></tr>
<tr class="memdesc:a67b4effc98b71f8fac734f194ae4ef38 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visit <a class="el" href="classarm__compute_1_1graph_1_1_stack_layer_node.xhtml" title="Stack Layer node. ">StackLayerNode</a>.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a67b4effc98b71f8fac734f194ae4ef38">More...</a><br /></td></tr>
<tr class="separator:a67b4effc98b71f8fac734f194ae4ef38 inherit pub_methods_classarm__compute_1_1graph_1_1_i_node_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> printer visitor. </p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8h_source.xhtml#l00038">38</a> of file <a class="el" href="_dot_graph_printer_8h_source.xhtml">DotGraphPrinter.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aba079420016162d60cc142401885db44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba079420016162d60cc142401885db44">&#9670;&nbsp;</a></span>DotGraphVisitor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml">DotGraphVisitor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a7ae346d50c25d5008291185396e5c54e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ae346d50c25d5008291185396e5c54e">&#9670;&nbsp;</a></span>default_visit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void default_visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function to be overloaded by the client and implement default behavior for the non-overloaded visitors. </p>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_default_node_visitor.xhtml#a5f7336fecd376c56e48449a647a6d552">DefaultNodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00130">130</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>.</p>
<div class="fragment"><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    _info.clear();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae455892b8843f8bd868bbb7ba3359d1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae455892b8843f8bd868bbb7ba3359d1d">&#9670;&nbsp;</a></span>info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::string &amp; info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the output information of the last visited node. </p>
<dl class="section return"><dt>Returns</dt><dd>Information of the last visited node </dd></dl>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00136">136</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;{</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">return</span> _info;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a758cad84d59383224e908a0448c0e400"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a758cad84d59383224e908a0448c0e400">&#9670;&nbsp;</a></span>visit() <span class="overload">[1/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml" title="Activation Layer node. ">ActivationLayerNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a0a1deb26be8ff3f1282f6cbb84a134db">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01699">ActivationLayerInfo::activation()</a>, <a class="el" href="_activation_layer_node_8cpp_source.xhtml#l00040">ActivationLayerNode::activation_info()</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    ss &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.activation_info().activation();</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae6a61733b0daa30060b2d643a59882f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6a61733b0daa30060b2d643a59882f9">&#9670;&nbsp;</a></span>visit() <span class="overload">[2/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml">BatchNormalizationLayerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml" title="Batch Normalization Layer node. ">BatchNormalizationLayerNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a367df83f95d6bd0092f21ea26c11afca">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01699">ActivationLayerInfo::activation()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01714">ActivationLayerInfo::enabled()</a>, <a class="el" href="_batch_normalization_layer_node_8cpp_source.xhtml#l00046">BatchNormalizationLayerNode::fused_activation()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l00088">arm_compute::to_string()</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    ss &lt;&lt; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.fused_activation().enabled() ? <a class="code" href="namespacearm__compute.xhtml#a1d8c24abe3cf6edd704d126d1d2a5420">to_string</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.fused_activation().activation()) : <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1d8c24abe3cf6edd704d126d1d2a5420"><div class="ttname"><a href="namespacearm__compute.xhtml#a1d8c24abe3cf6edd704d126d1d2a5420">arm_compute::to_string</a></div><div class="ttdeci">std::string to_string(const T &amp;val)</div><div class="ttdoc">Fallback method: try to use std::to_string: </div><div class="ttdef"><b>Definition:</b> <a href="utils_2_type_printer_8h_source.xhtml#l00088">TypePrinter.h:88</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5c10d2f76900c79976b527d3fd94492a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c10d2f76900c79976b527d3fd94492a">&#9670;&nbsp;</a></span>visit() <span class="overload">[3/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">ConcatenateLayerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml" title="Concatenation Layer node. ">ConcatenateLayerNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a77b8f48b045bafdb2f73855edf5fe163">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00054">ConcatenateLayerNode::concatenation_axis()</a>, <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00049">ConcatenateLayerNode::is_enabled()</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;Enabled: &quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.is_enabled();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    ss &lt;&lt; R<span class="stringliteral">&quot;( \n )&quot;;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">    ss &lt;&lt; </span><span class="stringliteral">&quot;Axis: &quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.concatenation_axis();</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9f9ccf9586c79250a79c85fb562cc2f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f9ccf9586c79250a79c85fb562cc2f5">&#9670;&nbsp;</a></span>visit() <span class="overload">[4/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">ConvolutionLayerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml" title="Convolution Layer node. ">ConvolutionLayerNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a1621b973252298e5cefe802320955c40">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="_convolution_layer_node_8cpp_source.xhtml#l00051">ConvolutionLayerNode::convolution_method()</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    ss &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.convolution_method();</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aed4fc061f50c81e08328eeead9f6ca3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed4fc061f50c81e08328eeead9f6ca3c">&#9670;&nbsp;</a></span>visit() <span class="overload">[5/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">DepthwiseConvolutionLayerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml" title="Depthwise Convolution Layer node. ">DepthwiseConvolutionLayerNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a6b39c0c7a4b6470717ce846e797a19d9">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00066">66</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00053">DepthwiseConvolutionLayerNode::depthwise_convolution_method()</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    ss &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.depthwise_convolution_method();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1e48e66ec69d2ae228f73f6a7fc8aab6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e48e66ec69d2ae228f73f6a7fc8aab6">&#9670;&nbsp;</a></span>visit() <span class="overload">[6/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml" title="Eltwise Layer node. ">EltwiseLayerNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a3a831d8fbe701e51eba638465496244f">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00073">73</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00041">EltwiseLayerNode::eltwise_operation()</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    ss &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.eltwise_operation();</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8e3f67935e124ab096533434b188d66b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e3f67935e124ab096533434b188d66b">&#9670;&nbsp;</a></span>visit() <span class="overload">[7/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml">FusedConvolutionBatchNormalizationNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml" title="Batch Normalization node. ">FusedConvolutionBatchNormalizationNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#aa70b89b65105016bdf36fc92e8767559">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00080">80</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;FusedConvolutionBatchNormalizationNode&quot;</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab1e673366798d3b6bd8dbb5053e33831"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1e673366798d3b6bd8dbb5053e33831">&#9670;&nbsp;</a></span>visit() <span class="overload">[8/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_with_post_ops_node.xhtml">FusedConvolutionBatchNormalizationWithPostOpsNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_with_post_ops_node.xhtml" title="Batch Normalization node. ">FusedConvolutionBatchNormalizationWithPostOpsNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a8b3ff992fe3fccd5d76140bcd2228cba">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;FusedConvolutionBatchNormalizationWithPostOpsNode&quot;</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adecad5b7fe66fe7331a55242bc0f63d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adecad5b7fe66fe7331a55242bc0f63d8">&#9670;&nbsp;</a></span>visit() <span class="overload">[9/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_with_post_op_node.xhtml">FusedConvolutionWithPostOpNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_with_post_op_node.xhtml" title="Convolution node. ">FusedConvolutionWithPostOpNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a437b9fd32e872cdd362b6c11a0cef6b7">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;FusedConvolutionWithPostOpNode&quot;</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a955a9cfeee8b1105851ada5c27f1189c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a955a9cfeee8b1105851ada5c27f1189c">&#9670;&nbsp;</a></span>visit() <span class="overload">[10/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml">FusedDepthwiseConvolutionBatchNormalizationNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml" title="Fused Depthwise Convolution Batch Normalization node. ">FusedDepthwiseConvolutionBatchNormalizationNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#adc0f5cd32061366d541779496ea6fdbc">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00104">104</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;FusedDepthwiseConvolutionBatchNormalizationNode&quot;</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aac5b1d0d521f3e24c6eb1b0ca3bc8016"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac5b1d0d521f3e24c6eb1b0ca3bc8016">&#9670;&nbsp;</a></span>visit() <span class="overload">[11/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml">NormalizationLayerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml" title="Normalization Layer node. ">NormalizationLayerNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a698f59bea216132157f6fb4469e926ba">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00112">112</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="_normalization_layer_node_8cpp_source.xhtml#l00041">NormalizationLayerNode::normalization_info()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>, and <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01885">NormalizationLayerInfo::type()</a>.</p>
<div class="fragment"><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    ss &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.normalization_info().type();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    _info = ss.str();</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9aa6abdf5e8362bc489cd55509f4f317"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9aa6abdf5e8362bc489cd55509f4f317">&#9670;&nbsp;</a></span>visit() <span class="overload">[12/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void visit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml">PoolingLayerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Visit <a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml" title="Pooling Layer node. ">PoolingLayerNode</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Node to visit. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#a0f23f0b02ad93c75535890e51c0b3905">INodeVisitor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00119">119</a> of file <a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01306">PoolingLayerInfo::pad_stride_info</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01304">PoolingLayerInfo::pool_size</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01303">PoolingLayerInfo::pool_type</a>, <a class="el" href="_pooling_layer_node_8cpp_source.xhtml#l00042">PoolingLayerNode::pooling_info()</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    ss &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.pooling_info().pool_type;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    ss &lt;&lt; R<span class="stringliteral">&quot;( \n )&quot;;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="stringliteral">    ss &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.pooling_info().pool_size;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral">    ss &lt;&lt; R</span><span class="stringliteral">&quot;( \n )&quot;;</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">    ss &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>.pooling_info().pad_stride_info;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">    _info = ss.str();</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">}</span></div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/graph/printers/<a class="el" href="_dot_graph_printer_8h_source.xhtml">DotGraphPrinter.h</a></li>
<li>src/graph/printers/<a class="el" href="_dot_graph_printer_8cpp_source.xhtml">DotGraphPrinter.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml">DotGraphVisitor</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:41 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
