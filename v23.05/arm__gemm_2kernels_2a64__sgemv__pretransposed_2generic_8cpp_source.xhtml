<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/arm_gemm/kernels/a64_sgemv_pretransposed/generic.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('arm__gemm_2kernels_2a64__sgemv__pretransposed_2generic_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">generic.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="arm__gemm_2kernels_2a64__sgemv__pretransposed_2generic_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2018 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef __aarch64__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;arm_neon.h&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;../../asmlib.hpp&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;../../utils.hpp&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__gemm.xhtml">arm_gemm</a> {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">void</span> a64_sgemv_pretransposed(<span class="keyword">const</span> <span class="keywordtype">float</span> *A, <span class="keywordtype">int</span> lda, <span class="keyword">const</span> <span class="keywordtype">float</span> *X, <span class="keywordtype">float</span> *Y, <span class="keywordtype">float</span> beta, <span class="keywordtype">int</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a68dc0bf731afd0463b8e8cc4ed81c0f8">M</a>, <span class="keywordtype">int</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> beta0 = (beta==0.0f);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> beta1 = (beta==1.0f);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> x=0; x&lt;<a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>; x+=32) {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordtype">float</span> *y_ptr = Y + x;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="comment">// How many elements are we processing in this loop?</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordtype">int</span> l = std::min(N - x, 32);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keyword">register</span> float32x4_t r0 <span class="keyword">asm</span>(<span class="stringliteral">&quot;v24&quot;</span>);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keyword">register</span> float32x4_t r1 <span class="keyword">asm</span>(<span class="stringliteral">&quot;v25&quot;</span>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keyword">register</span> float32x4_t r2 <span class="keyword">asm</span>(<span class="stringliteral">&quot;v26&quot;</span>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keyword">register</span> float32x4_t r3 <span class="keyword">asm</span>(<span class="stringliteral">&quot;v27&quot;</span>);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keyword">register</span> float32x4_t r4 <span class="keyword">asm</span>(<span class="stringliteral">&quot;v28&quot;</span>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keyword">register</span> float32x4_t r5 <span class="keyword">asm</span>(<span class="stringliteral">&quot;v29&quot;</span>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keyword">register</span> float32x4_t r6 <span class="keyword">asm</span>(<span class="stringliteral">&quot;v30&quot;</span>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keyword">register</span> float32x4_t r7 <span class="keyword">asm</span>(<span class="stringliteral">&quot;v31&quot;</span>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keyword">register</span> float32x4_t x0  <span class="keyword">asm</span>(<span class="stringliteral">&quot;v0&quot;</span>);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keyword">register</span> float32x4_t x0a <span class="keyword">asm</span>(<span class="stringliteral">&quot;v1&quot;</span>);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> *x_ptr = X;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> *a_ptr = A + ((x/32) * lda);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">if</span> (beta0) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            r0=r1=r2=r3=r4=r5=r6=r7=vdupq_n_f32(0.0f);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="keywordflow">if</span> (l==32) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="comment">// Fastest path - load all 8 vectors</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                r0 = vld1q_f32(y_ptr);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                r1 = vld1q_f32(y_ptr + 4);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                r2 = vld1q_f32(y_ptr + 8);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                r3 = vld1q_f32(y_ptr + 12);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                r4 = vld1q_f32(y_ptr + 16);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                r5 = vld1q_f32(y_ptr + 20);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                r6 = vld1q_f32(y_ptr + 24);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                r7 = vld1q_f32(y_ptr + 28);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <span class="comment">// Slow case - leftovers.  Note that we don&#39;t care about</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                <span class="comment">// out-of-range vectors and lanes as we will throw them away at</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <span class="comment">// the end.</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                <span class="keywordtype">int</span> vecs=l/4; <span class="comment">// How many leftover vectors?</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                <span class="keywordtype">int</span> oddbits=l%4; <span class="comment">// And how many odd single values?</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">if</span> (oddbits) {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    <span class="comment">// Load the outstanding odd values into a vector first</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    float32x4_t oddvec = vdupq_n_f32(0.0f); <span class="comment">// This does not really need to be initialized, but the compiler has a hard time with that.</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                    <span class="keywordtype">float</span> *oddbase = y_ptr + l - oddbits;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                    <span class="keywordflow">switch</span> (oddbits) {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                        <span class="keywordflow">case</span> 3:</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                            oddvec = vld1q_lane_f32(oddbase + 2, oddvec, 2);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                            <span class="comment">// fall through</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                        <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                            oddvec = vld1q_lane_f32(oddbase + 1, oddvec, 1);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                            <span class="comment">// fall through</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                        <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                            oddvec = vld1q_lane_f32(oddbase, oddvec, 0);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                            <a class="code" href="utils_8hpp.xhtml#aa468b37bb9d2901433139d01b79036b0">UNREACHABLE</a>(<span class="stringliteral">&quot;Impossible case in switch.&quot;</span>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                    <span class="comment">// Now load the whole vectors, putting the oddments in when we run out.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                    <span class="keywordflow">do</span> {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                        <span class="keywordflow">if</span> (vecs==0) { r0 = oddvec; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                        r0 = vld1q_f32(y_ptr);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { r1 = oddvec; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                        r1 = vld1q_f32(y_ptr + 4);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { r2 = oddvec; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        r2 = vld1q_f32(y_ptr + 8);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { r3 = oddvec; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                        r3 = vld1q_f32(y_ptr + 12);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { r4 = oddvec; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                        r4 = vld1q_f32(y_ptr + 16);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { r5 = oddvec; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                        r5 = vld1q_f32(y_ptr + 20);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { r6 = oddvec; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                        r6 = vld1q_f32(y_ptr + 24);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                        r7 = oddvec;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                    } <span class="keywordflow">while</span> (0);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                    <span class="comment">// Slightly less slow path - just load the whole vectors</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                    <span class="keywordflow">do</span> {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                        <span class="comment">// It can&#39;t be the case that oddbits==0 AND vecs==0 or we wouldn&#39;t be here.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                        <span class="keywordflow">if</span> (vecs==0) { <a class="code" href="utils_8hpp.xhtml#aa468b37bb9d2901433139d01b79036b0">UNREACHABLE</a>(<span class="stringliteral">&quot;Impossible lack of work to do&quot;</span>); }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                        r0 = vld1q_f32(y_ptr);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                        r1 = vld1q_f32(y_ptr + 4);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                        r2 = vld1q_f32(y_ptr + 8);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                        r3 = vld1q_f32(y_ptr + 12);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                        r4 = vld1q_f32(y_ptr + 16);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                        r5 = vld1q_f32(y_ptr + 20);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                        <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                        r6 = vld1q_f32(y_ptr + 24);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                    } <span class="keywordflow">while</span> (0);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">if</span> (!beta1) {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keyword">const</span> float32x4_t vb = vdupq_n_f32(beta);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                r0 = vmulq_f32(r0, vb);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                r1 = vmulq_f32(r1, vb);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                r2 = vmulq_f32(r2, vb);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                r3 = vmulq_f32(r3, vb);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                r4 = vmulq_f32(r4, vb);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                r5 = vmulq_f32(r5, vb);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                r6 = vmulq_f32(r6, vb);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                r7 = vmulq_f32(r7, vb);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            }</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">if</span> (M&gt;=8) {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a> = (M/8)-1;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            x0 = vld1q_f32(x_ptr);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            __asm __volatile (</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <span class="stringliteral">&quot;ldr    q2, [%[a_ptr], #0]\n&quot;</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                <span class="stringliteral">&quot;ldr    q3, [%[a_ptr], #16]\n&quot;</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                <span class="stringliteral">&quot;ldr    q4, [%[a_ptr], #32]\n&quot;</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                <span class="stringliteral">&quot;ldr    q5, [%[a_ptr], #48]\n&quot;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                <span class="stringliteral">&quot;ldr    q6, [%[a_ptr], #64]\n&quot;</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                <span class="stringliteral">&quot;ldr    q7, [%[a_ptr], #80]\n&quot;</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <span class="stringliteral">&quot;ldr    q8, [%[a_ptr], #96]\n&quot;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <span class="stringliteral">&quot;ldr    q9, [%[a_ptr], #112]\n&quot;</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                <span class="stringliteral">&quot;ldr    q10, [%[a_ptr], #128]\n&quot;</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                <span class="stringliteral">&quot;ldr    q11, [%[a_ptr], #144]\n&quot;</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="stringliteral">&quot;ldr    q12, [%[a_ptr], #160]\n&quot;</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="stringliteral">&quot;ldr    q13, [%[a_ptr], #176]\n&quot;</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="stringliteral">&quot;ldr    q14, [%[a_ptr], #192]\n&quot;</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                <span class="stringliteral">&quot;ldr    q15, [%[a_ptr], #208]\n&quot;</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <span class="stringliteral">&quot;ldr    q16, [%[a_ptr], #224]\n&quot;</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="stringliteral">&quot;ldr    q17, [%[a_ptr], #240]\n&quot;</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                <span class="stringliteral">&quot;ldr    q18, [%[a_ptr], #256]\n&quot;</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="stringliteral">&quot;ldr    q19, [%[a_ptr], #272]\n&quot;</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                <span class="stringliteral">&quot;ldr    q20, [%[a_ptr], #288]\n&quot;</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                <span class="stringliteral">&quot;ldr    q21, [%[a_ptr], #304]\n&quot;</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                <span class="stringliteral">&quot;ldr    q22, [%[a_ptr], #320]\n&quot;</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="stringliteral">&quot;ldr    q23, [%[a_ptr], #336]\n&quot;</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #384]&quot;</span>)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #448]&quot;</span>)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #512]&quot;</span>)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #576]&quot;</span>)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #640]&quot;</span>)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #704]&quot;</span>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #768]&quot;</span>)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #832]&quot;</span>)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #896]&quot;</span>)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #960]&quot;</span>)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1024]&quot;</span>)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1088]&quot;</span>)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1152]&quot;</span>)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1216]&quot;</span>)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1280]&quot;</span>)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1344]&quot;</span>)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1408]&quot;</span>)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1472]&quot;</span>)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1536]&quot;</span>)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1600]&quot;</span>)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1664]&quot;</span>)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1728]&quot;</span>)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1792]&quot;</span>)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1856]&quot;</span>)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1920]&quot;</span>)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1984]&quot;</span>)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                <span class="stringliteral">&quot;add    %[a_ptr], %[a_ptr], #352\n&quot;</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                <span class="stringliteral">&quot;cbz    %w[k], 2f\n&quot;</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                <span class="stringliteral">&quot;1:\n&quot;</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="comment">// Unroll 0</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v2.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                <span class="stringliteral">&quot;ldr    %q[x0a], [%[x_ptr], #16]\n&quot;</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v3.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                <span class="stringliteral">&quot;ldr    q3, [%[a_ptr], #0]\n&quot;</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <span class="stringliteral">&quot;subs   %w[k], %w[k], #1\n&quot;</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v4.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                <span class="stringliteral">&quot;ldr    q4, [%[a_ptr], #16]\n&quot;</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v5.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                <span class="stringliteral">&quot;ldr    q5, [%[a_ptr], #32]\n&quot;</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                <span class="stringliteral">&quot;add    %[x_ptr], %[x_ptr], #32\n&quot;</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1664]&quot;</span>)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v6.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                <span class="stringliteral">&quot;ldr    q6, [%[a_ptr], #48]\n&quot;</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v7.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <span class="stringliteral">&quot;ldr    q7, [%[a_ptr], #64]\n&quot;</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v8.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <span class="stringliteral">&quot;ldr    q8, [%[a_ptr], #80]\n&quot;</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v9.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                <span class="stringliteral">&quot;ldr    q9, [%[a_ptr], #96]\n&quot;</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1728]&quot;</span>)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="comment">// Unroll 1</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v10.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                <span class="stringliteral">&quot;ldr    q10, [%[a_ptr], #112]\n&quot;</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v11.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                <span class="stringliteral">&quot;ldr    q11, [%[a_ptr], #128]\n&quot;</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v12.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                <span class="stringliteral">&quot;ldr    q12, [%[a_ptr], #144]\n&quot;</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v13.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                <span class="stringliteral">&quot;ldr    q13, [%[a_ptr], #160]\n&quot;</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1792]&quot;</span>)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v14.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                <span class="stringliteral">&quot;ldr    q14, [%[a_ptr], #176]\n&quot;</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v15.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                <span class="stringliteral">&quot;ldr    q15, [%[a_ptr], #192]\n&quot;</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v16.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                <span class="stringliteral">&quot;ldr    q16, [%[a_ptr], #208]\n&quot;</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v17.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                <span class="stringliteral">&quot;ldr    q17, [%[a_ptr], #224]\n&quot;</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1856]&quot;</span>)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="comment">// Unroll 2</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v18.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="stringliteral">&quot;ldr    q18, [%[a_ptr], #240]\n&quot;</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v19.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="stringliteral">&quot;ldr    q19, [%[a_ptr], #256]\n&quot;</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v20.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                <span class="stringliteral">&quot;ldr    q20, [%[a_ptr], #272]\n&quot;</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v21.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                <span class="stringliteral">&quot;ldr    q21, [%[a_ptr], #288]\n&quot;</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1920]&quot;</span>)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v22.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                <span class="stringliteral">&quot;ldr    q22, [%[a_ptr], #304]\n&quot;</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v23.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                <span class="stringliteral">&quot;ldr    q23, [%[a_ptr], #320]\n&quot;</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v3.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="stringliteral">&quot;ldr    q2, [%[a_ptr], #336]\n&quot;</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="stringliteral">&quot;ldr    q3, [%[a_ptr], #352]\n&quot;</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v4.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                <span class="stringliteral">&quot;ldr    q4, [%[a_ptr], #368]\n&quot;</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1984]&quot;</span>)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                <span class="comment">// Unroll 3</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v5.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                <span class="stringliteral">&quot;ldr    q5, [%[a_ptr], #384]\n&quot;</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v6.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                <span class="stringliteral">&quot;ldr    q6, [%[a_ptr], #400]\n&quot;</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v7.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                <span class="stringliteral">&quot;ldr    q7, [%[a_ptr], #416]\n&quot;</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v8.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #2048]&quot;</span>)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                <span class="stringliteral">&quot;ldr    q8, [%[a_ptr], #432]\n&quot;</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v9.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                <span class="stringliteral">&quot;ldr    q9, [%[a_ptr], #448]\n&quot;</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v10.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                <span class="stringliteral">&quot;ldr    q10, [%[a_ptr], #464]\n&quot;</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v11.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                <span class="stringliteral">&quot;ldr    q11, [%[a_ptr], #480]\n&quot;</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v12.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                <span class="stringliteral">&quot;ldr    q12, [%[a_ptr], #496]\n&quot;</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #2112]&quot;</span>)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                <span class="comment">// Unroll 4</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v13.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                <span class="stringliteral">&quot;ldr    %q[x0], [%[x_ptr]]\n&quot;</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v14.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                <span class="stringliteral">&quot;ldr    q14, [%[a_ptr], #512]\n&quot;</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v15.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                <span class="stringliteral">&quot;ldr    q15, [%[a_ptr], #528]\n&quot;</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v16.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #2176]&quot;</span>)</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                <span class="stringliteral">&quot;ldr    q16, [%[a_ptr], #544]\n&quot;</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v17.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                <span class="stringliteral">&quot;ldr    q17, [%[a_ptr], #560]\n&quot;</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v18.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                <span class="stringliteral">&quot;ldr    q18, [%[a_ptr], #576]\n&quot;</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v19.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                <span class="stringliteral">&quot;ldr    q19, [%[a_ptr], #592]\n&quot;</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v20.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                <span class="stringliteral">&quot;ldr    q20, [%[a_ptr], #608]\n&quot;</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #2240]&quot;</span>)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="comment">// Unroll 5</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v21.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                <span class="stringliteral">&quot;ldr    q21, [%[a_ptr], #624]\n&quot;</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v22.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                <span class="stringliteral">&quot;ldr    q22, [%[a_ptr], #640]\n&quot;</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v23.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                <span class="stringliteral">&quot;ldr    q23, [%[a_ptr], #656]\n&quot;</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v2.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                <span class="stringliteral">&quot;ldr    q2, [%[a_ptr], #672]\n&quot;</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #2304]&quot;</span>)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v3.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                <span class="stringliteral">&quot;ldr    q3, [%[a_ptr], #688]\n&quot;</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v4.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                <span class="stringliteral">&quot;ldr    q4, [%[a_ptr], #704]\n&quot;</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v5.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                <span class="stringliteral">&quot;ldr    q5, [%[a_ptr], #720]\n&quot;</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v6.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                <span class="stringliteral">&quot;ldr    q6, [%[a_ptr], #736]\n&quot;</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #2368]&quot;</span>)</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                <span class="comment">// Unroll 6</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v7.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                <span class="stringliteral">&quot;ldr    q7, [%[a_ptr], #752]\n&quot;</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v8.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                <span class="stringliteral">&quot;ldr    q8, [%[a_ptr], #768]\n&quot;</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v9.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                <span class="stringliteral">&quot;ldr    q9, [%[a_ptr], #784]\n&quot;</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v10.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                <span class="stringliteral">&quot;ldr    q10, [%[a_ptr], #800]\n&quot;</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #2432]&quot;</span>)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v11.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                <span class="stringliteral">&quot;ldr    q11, [%[a_ptr], #816]\n&quot;</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v12.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                <span class="stringliteral">&quot;ldr    q12, [%[a_ptr], #832]\n&quot;</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v14.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                <span class="stringliteral">&quot;ldr    q13, [%[a_ptr], #848]\n&quot;</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                <span class="stringliteral">&quot;ldr    q14, [%[a_ptr], #864]\n&quot;</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v15.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <span class="stringliteral">&quot;ldr    q15, [%[a_ptr], #880]\n&quot;</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #2496]&quot;</span>)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                <span class="comment">// Unroll 7</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v16.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                <span class="stringliteral">&quot;ldr    q16, [%[a_ptr], #896]\n&quot;</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v17.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                <span class="stringliteral">&quot;ldr    q17, [%[a_ptr], #912]\n&quot;</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v18.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="stringliteral">&quot;ldr    q18, [%[a_ptr], #928]\n&quot;</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v19.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #2560]&quot;</span>)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                <span class="stringliteral">&quot;ldr    q19, [%[a_ptr], #944]\n&quot;</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v20.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                <span class="stringliteral">&quot;ldr    q20, [%[a_ptr], #960]\n&quot;</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v21.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                <span class="stringliteral">&quot;ldr    q21, [%[a_ptr], #976]\n&quot;</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                <span class="stringliteral">&quot;add    %[a_ptr], %[a_ptr], #1024\n&quot;</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v22.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                <span class="stringliteral">&quot;ldr    q22, [%[a_ptr], #-32]\n&quot;</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v23.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                <span class="stringliteral">&quot;ldr    q23, [%[a_ptr], #-16]\n&quot;</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                <a class="code" href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a>(<span class="stringliteral">&quot;[%[a_ptr], #1600]&quot;</span>)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                <span class="stringliteral">&quot;bne    1b\n&quot;</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                <span class="comment">// Detached final iteration</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                <span class="stringliteral">&quot;2:\n&quot;</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                <span class="comment">// Unroll 0</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v2.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                <span class="stringliteral">&quot;ldr    %q[x0a], [%[x_ptr], #16]\n&quot;</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v3.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                <span class="stringliteral">&quot;ldr    q3, [%[a_ptr], #0]\n&quot;</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                <span class="stringliteral">&quot;subs   %w[k], %w[k], #1\n&quot;</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v4.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                <span class="stringliteral">&quot;ldr    q4, [%[a_ptr], #16]\n&quot;</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v5.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                <span class="stringliteral">&quot;ldr    q5, [%[a_ptr], #32]\n&quot;</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                <span class="stringliteral">&quot;add    %[x_ptr], %[x_ptr], #32\n&quot;</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v6.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                <span class="stringliteral">&quot;ldr    q6, [%[a_ptr], #48]\n&quot;</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v7.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                <span class="stringliteral">&quot;ldr    q7, [%[a_ptr], #64]\n&quot;</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v8.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                <span class="stringliteral">&quot;ldr    q8, [%[a_ptr], #80]\n&quot;</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v9.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                <span class="stringliteral">&quot;ldr    q9, [%[a_ptr], #96]\n&quot;</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                <span class="comment">// Unroll 1</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v10.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                <span class="stringliteral">&quot;ldr    q10, [%[a_ptr], #112]\n&quot;</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v11.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                <span class="stringliteral">&quot;ldr    q11, [%[a_ptr], #128]\n&quot;</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v12.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                <span class="stringliteral">&quot;ldr    q12, [%[a_ptr], #144]\n&quot;</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v13.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                <span class="stringliteral">&quot;ldr    q13, [%[a_ptr], #160]\n&quot;</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v14.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                <span class="stringliteral">&quot;ldr    q14, [%[a_ptr], #176]\n&quot;</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v15.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                <span class="stringliteral">&quot;ldr    q15, [%[a_ptr], #192]\n&quot;</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v16.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                <span class="stringliteral">&quot;ldr    q16, [%[a_ptr], #208]\n&quot;</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v17.4s, %[x0].s[1]\n&quot;</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                <span class="stringliteral">&quot;ldr    q17, [%[a_ptr], #224]\n&quot;</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                <span class="comment">// Unroll 2</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v18.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                <span class="stringliteral">&quot;ldr    q18, [%[a_ptr], #240]\n&quot;</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v19.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                <span class="stringliteral">&quot;ldr    q19, [%[a_ptr], #256]\n&quot;</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v20.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                <span class="stringliteral">&quot;ldr    q20, [%[a_ptr], #272]\n&quot;</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v21.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                <span class="stringliteral">&quot;ldr    q21, [%[a_ptr], #288]\n&quot;</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v22.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                <span class="stringliteral">&quot;ldr    q22, [%[a_ptr], #304]\n&quot;</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v23.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                <span class="stringliteral">&quot;ldr    q23, [%[a_ptr], #320]\n&quot;</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v3.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                <span class="stringliteral">&quot;ldr    q2, [%[a_ptr], #336]\n&quot;</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                <span class="stringliteral">&quot;ldr    q3, [%[a_ptr], #352]\n&quot;</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v4.4s, %[x0].s[2]\n&quot;</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                <span class="stringliteral">&quot;ldr    q4, [%[a_ptr], #368]\n&quot;</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                <span class="comment">// Unroll 3</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v5.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                <span class="stringliteral">&quot;ldr    q5, [%[a_ptr], #384]\n&quot;</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v6.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                <span class="stringliteral">&quot;ldr    q6, [%[a_ptr], #400]\n&quot;</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v7.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                <span class="stringliteral">&quot;ldr    q7, [%[a_ptr], #416]\n&quot;</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v8.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                <span class="stringliteral">&quot;ldr    q8, [%[a_ptr], #432]\n&quot;</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v9.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                <span class="stringliteral">&quot;ldr    q9, [%[a_ptr], #448]\n&quot;</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v10.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                <span class="stringliteral">&quot;ldr    q10, [%[a_ptr], #464]\n&quot;</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v11.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                <span class="stringliteral">&quot;ldr    q11, [%[a_ptr], #480]\n&quot;</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v12.4s, %[x0].s[3]\n&quot;</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                <span class="stringliteral">&quot;ldr    q12, [%[a_ptr], #496]\n&quot;</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                <span class="comment">// Unroll 4</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v13.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v14.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                <span class="stringliteral">&quot;ldr    q14, [%[a_ptr], #512]\n&quot;</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v15.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                <span class="stringliteral">&quot;ldr    q15, [%[a_ptr], #528]\n&quot;</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v16.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                <span class="stringliteral">&quot;ldr    q16, [%[a_ptr], #544]\n&quot;</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v17.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                <span class="stringliteral">&quot;ldr    q17, [%[a_ptr], #560]\n&quot;</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v18.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                <span class="stringliteral">&quot;ldr    q18, [%[a_ptr], #576]\n&quot;</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v19.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                <span class="stringliteral">&quot;ldr    q19, [%[a_ptr], #592]\n&quot;</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v20.4s, %[x0a].s[0]\n&quot;</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                <span class="stringliteral">&quot;ldr    q20, [%[a_ptr], #608]\n&quot;</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                <span class="comment">// Unroll 5</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v21.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                <span class="stringliteral">&quot;ldr    q21, [%[a_ptr], #624]\n&quot;</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v22.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                <span class="stringliteral">&quot;ldr    q22, [%[a_ptr], #640]\n&quot;</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v23.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                <span class="stringliteral">&quot;ldr    q23, [%[a_ptr], #656]\n&quot;</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v2.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                <span class="stringliteral">&quot;add    %[a_ptr], %[a_ptr], #672\n&quot;</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v3.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v4.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v5.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v6.4s, %[x0a].s[1]\n&quot;</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                <span class="comment">// Unroll 6</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v7.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v8.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v9.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v10.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v11.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v12.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v14.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v15.4s, %[x0a].s[2]\n&quot;</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                <span class="comment">// Unroll 7</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v16.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v17.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v18.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v19.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v20.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v21.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v22.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v23.4s, %[x0a].s[3]\n&quot;</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            :</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;              [a_ptr] <span class="stringliteral">&quot;+r&quot;</span> (a_ptr), [x_ptr] <span class="stringliteral">&quot;+r&quot;</span> (x_ptr),</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;              [x0] <span class="stringliteral">&quot;+w&quot;</span> (x0), [x0a] <span class="stringliteral">&quot;+w&quot;</span> (x0a), [k] <span class="stringliteral">&quot;+r&quot;</span> (k),</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;              [r0] <span class="stringliteral">&quot;+w&quot;</span> (r0), [r1] <span class="stringliteral">&quot;+w&quot;</span> (r1), [r2] <span class="stringliteral">&quot;+w&quot;</span> (r2), [r3] <span class="stringliteral">&quot;+w&quot;</span> (r3),</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;              [r4] <span class="stringliteral">&quot;+w&quot;</span> (r4), [r5] <span class="stringliteral">&quot;+w&quot;</span> (r5), [r6] <span class="stringliteral">&quot;+w&quot;</span> (r6), [r7] <span class="stringliteral">&quot;+w&quot;</span> (r7)</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            :</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            : <span class="stringliteral">&quot;v2&quot;</span>, <span class="stringliteral">&quot;v3&quot;</span>, <span class="stringliteral">&quot;v4&quot;</span>, <span class="stringliteral">&quot;v5&quot;</span>, <span class="stringliteral">&quot;v6&quot;</span>, <span class="stringliteral">&quot;v7&quot;</span>, <span class="stringliteral">&quot;v8&quot;</span>, <span class="stringliteral">&quot;v9&quot;</span>, <span class="stringliteral">&quot;v10&quot;</span>, <span class="stringliteral">&quot;v11&quot;</span>, <span class="stringliteral">&quot;v12&quot;</span>, <span class="stringliteral">&quot;v13&quot;</span>, <span class="stringliteral">&quot;v14&quot;</span>,</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;              <span class="stringliteral">&quot;v15&quot;</span>, <span class="stringliteral">&quot;v16&quot;</span>, <span class="stringliteral">&quot;v17&quot;</span>, <span class="stringliteral">&quot;v18&quot;</span>, <span class="stringliteral">&quot;v19&quot;</span>, <span class="stringliteral">&quot;v20&quot;</span>, <span class="stringliteral">&quot;v21&quot;</span>, <span class="stringliteral">&quot;v22&quot;</span>, <span class="stringliteral">&quot;v23&quot;</span>, <span class="stringliteral">&quot;x20&quot;</span>, <span class="stringliteral">&quot;x21&quot;</span>, <span class="stringliteral">&quot;cc&quot;</span>, <span class="stringliteral">&quot;memory&quot;</span>);</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        }</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <span class="comment">// Deal with ragged M</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        <span class="keywordflow">if</span> (M % 8) {</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="keywordtype">int</span> l=(M%8)-1;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            __asm __volatile (</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                <span class="stringliteral">&quot;ldr    q2, [%[a_ptr], #0]\n&quot;</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                <span class="stringliteral">&quot;ldr    q3, [%[a_ptr], #16]\n&quot;</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                <span class="stringliteral">&quot;ldr    q4, [%[a_ptr], #32]\n&quot;</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                <span class="stringliteral">&quot;ldr    q5, [%[a_ptr], #48]\n&quot;</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                <span class="stringliteral">&quot;ldr    q6, [%[a_ptr], #64]\n&quot;</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                <span class="stringliteral">&quot;ldr    q7, [%[a_ptr], #80]\n&quot;</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                <span class="stringliteral">&quot;ldr    q8, [%[a_ptr], #96]\n&quot;</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                <span class="stringliteral">&quot;ldr    q9, [%[a_ptr], #112]\n&quot;</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                <span class="stringliteral">&quot;ldr    %s[x0], [%[x_ptr]]\n&quot;</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                <span class="stringliteral">&quot;add    %[a_ptr], %[a_ptr], #128\n&quot;</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                <span class="stringliteral">&quot;add    %[x_ptr], %[x_ptr], #4\n&quot;</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                <span class="stringliteral">&quot;cbz    %w[l], 2f\n&quot;</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                <span class="stringliteral">&quot;1:\n&quot;</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v2.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                <span class="stringliteral">&quot;ldr    q2, [%[a_ptr], #0]\n&quot;</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                <span class="stringliteral">&quot;subs   %w[l], %w[l], #1\n&quot;</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v3.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                <span class="stringliteral">&quot;ldr    q3, [%[a_ptr], #16]\n&quot;</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v4.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                <span class="stringliteral">&quot;ldr    q4, [%[a_ptr], #32]\n&quot;</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v5.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                <span class="stringliteral">&quot;ldr    q5, [%[a_ptr], #48]\n&quot;</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v6.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                <span class="stringliteral">&quot;ldr    q6, [%[a_ptr], #64]\n&quot;</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v7.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                <span class="stringliteral">&quot;ldr    q7, [%[a_ptr], #80]\n&quot;</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v8.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                <span class="stringliteral">&quot;ldr    q8, [%[a_ptr], #96]\n&quot;</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v9.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                <span class="stringliteral">&quot;ldr    q9, [%[a_ptr], #112]\n&quot;</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                <span class="stringliteral">&quot;ldr    %s[x0], [%[x_ptr]]\n&quot;</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                <span class="stringliteral">&quot;add    %[a_ptr], %[a_ptr], #128\n&quot;</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                <span class="stringliteral">&quot;add    %[x_ptr], %[x_ptr], #4\n&quot;</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                <span class="stringliteral">&quot;bne    1b\n&quot;</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                <span class="stringliteral">&quot;2:\n&quot;</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                <span class="stringliteral">&quot;fmla   %[r0].4s, v2.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                <span class="stringliteral">&quot;fmla   %[r1].4s, v3.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                <span class="stringliteral">&quot;fmla   %[r2].4s, v4.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                <span class="stringliteral">&quot;fmla   %[r3].4s, v5.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                <span class="stringliteral">&quot;fmla   %[r4].4s, v6.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                <span class="stringliteral">&quot;fmla   %[r5].4s, v7.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                <span class="stringliteral">&quot;fmla   %[r6].4s, v8.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                <span class="stringliteral">&quot;fmla   %[r7].4s, v9.4s, %[x0].s[0]\n&quot;</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            :</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;              [a_ptr] <span class="stringliteral">&quot;+r&quot;</span> (a_ptr), [x_ptr] <span class="stringliteral">&quot;+r&quot;</span> (x_ptr),</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;              [x0] <span class="stringliteral">&quot;+w&quot;</span> (x0), [l] <span class="stringliteral">&quot;+r&quot;</span> (l),</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;              [r0] <span class="stringliteral">&quot;+w&quot;</span> (r0), [r1] <span class="stringliteral">&quot;+w&quot;</span> (r1), [r2] <span class="stringliteral">&quot;+w&quot;</span> (r2), [r3] <span class="stringliteral">&quot;+w&quot;</span> (r3),</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;              [r4] <span class="stringliteral">&quot;+w&quot;</span> (r4), [r5] <span class="stringliteral">&quot;+w&quot;</span> (r5), [r6] <span class="stringliteral">&quot;+w&quot;</span> (r6), [r7] <span class="stringliteral">&quot;+w&quot;</span> (r7)</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            :</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            : <span class="stringliteral">&quot;v2&quot;</span>, <span class="stringliteral">&quot;v3&quot;</span>, <span class="stringliteral">&quot;v4&quot;</span>, <span class="stringliteral">&quot;v5&quot;</span>, <span class="stringliteral">&quot;v6&quot;</span>, <span class="stringliteral">&quot;v7&quot;</span>, <span class="stringliteral">&quot;v8&quot;</span>, <span class="stringliteral">&quot;v9&quot;</span>, <span class="stringliteral">&quot;cc&quot;</span>, <span class="stringliteral">&quot;memory&quot;</span>);</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        }</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        <span class="keywordflow">if</span> (l==32) {</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            <span class="comment">// Fast path</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            vst1q_f32(y_ptr, r0);</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            vst1q_f32(y_ptr + 4, r1);</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            vst1q_f32(y_ptr + 8, r2);</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            vst1q_f32(y_ptr + 12, r3);</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            vst1q_f32(y_ptr + 16, r4);</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            vst1q_f32(y_ptr + 20, r5);</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            vst1q_f32(y_ptr + 24, r6);</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;            vst1q_f32(y_ptr + 28, r7);</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            <span class="keywordtype">int</span> vecs=l/4;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;            <span class="keywordtype">int</span> oddbits=l%4;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;            <span class="keywordflow">if</span> (oddbits) {</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                <span class="comment">// As above - slowest path deals with vectors plus odd bits</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                float32x4_t oddvec;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                <span class="keywordflow">do</span> {</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                    <span class="keywordflow">if</span> (vecs==0) { oddvec=r0; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                    vst1q_f32(y_ptr, r0);</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { oddvec=r1; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                    vst1q_f32(y_ptr + 4, r1);</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { oddvec=r2; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                    vst1q_f32(y_ptr + 8, r2);</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { oddvec=r3; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                    vst1q_f32(y_ptr + 12, r3);</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { oddvec=r4; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                    vst1q_f32(y_ptr + 16, r4);</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { oddvec=r5; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                    vst1q_f32(y_ptr + 20, r5);</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { oddvec=r6; <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                    vst1q_f32(y_ptr + 24, r6);</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                    oddvec=r7;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                } <span class="keywordflow">while</span> (0);</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;                <span class="keywordtype">float</span> *oddbase = y_ptr + l - oddbits;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                <span class="keywordflow">switch</span>(oddbits) {</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                    <span class="keywordflow">case</span> 3:</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                        vst1q_lane_f32(oddbase + 2, oddvec, 2);</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                        <span class="comment">// fall through</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                        vst1q_lane_f32(oddbase + 1, oddvec, 1);</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                        <span class="comment">// fall through</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                        vst1q_lane_f32(oddbase, oddvec, 0);</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                        <span class="comment">// oddbits must be 1, 2 or 3.</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                        <a class="code" href="utils_8hpp.xhtml#aa468b37bb9d2901433139d01b79036b0">UNREACHABLE</a>(<span class="stringliteral">&quot;Impossible case in switch.&quot;</span>);</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                }</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                <span class="comment">// As above - medium path deals with vectors only</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                <span class="keywordflow">do</span> {</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                    <span class="keywordflow">if</span> (vecs==0) { <a class="code" href="utils_8hpp.xhtml#aa468b37bb9d2901433139d01b79036b0">UNREACHABLE</a>(<span class="stringliteral">&quot;vecs and oddbits can&#39;t both be 0&quot;</span>); }</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                    vst1q_f32(y_ptr, r0);</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;                    vst1q_f32(y_ptr + 4, r1);</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                    vst1q_f32(y_ptr + 8, r2);</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                    vst1q_f32(y_ptr + 12, r3);</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                    vst1q_f32(y_ptr + 16, r4);</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;                    vst1q_f32(y_ptr + 20, r5);</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                    <span class="keywordflow">if</span> (--vecs==0) { <span class="keywordflow">break</span>; }</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                    vst1q_f32(y_ptr + 24, r6);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                } <span class="keywordflow">while</span> (0);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;            }</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        }</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    }</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;}</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;} <span class="comment">// namespace arm_gemm</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="preprocessor">#endif // aarch64</span></div><div class="ttc" id="_cpu_gemm_assembly_dispatch_8cpp_xhtml_a68dc0bf731afd0463b8e8cc4ed81c0f8"><div class="ttname"><a href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a68dc0bf731afd0463b8e8cc4ed81c0f8">M</a></div><div class="ttdeci">unsigned int M</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00095">CpuGemmAssemblyDispatch.cpp:95</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml"><div class="ttname"><a href="namespacearm__gemm.xhtml">arm_gemm</a></div><div class="ttdef"><b>Definition:</b> <a href="barrier_8hpp_source.xhtml#l00030">barrier.hpp:30</a></div></div>
<div class="ttc" id="asmlib_8hpp_xhtml_aaca0205a239e6ef80e4e2788837579e8"><div class="ttname"><a href="asmlib_8hpp.xhtml#aaca0205a239e6ef80e4e2788837579e8">ASM_PREFETCH</a></div><div class="ttdeci">#define ASM_PREFETCH(address)</div><div class="ttdef"><b>Definition:</b> <a href="asmlib_8hpp_source.xhtml#l00045">asmlib.hpp:45</a></div></div>
<div class="ttc" id="_cpu_gemm_assembly_dispatch_8cpp_xhtml_ae8b170dcb376fe60270f4675f84e4477"><div class="ttname"><a href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a></div><div class="ttdeci">unsigned int N</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00096">CpuGemmAssemblyDispatch.cpp:96</a></div></div>
<div class="ttc" id="utils_8hpp_xhtml_aa468b37bb9d2901433139d01b79036b0"><div class="ttname"><a href="utils_8hpp.xhtml#aa468b37bb9d2901433139d01b79036b0">UNREACHABLE</a></div><div class="ttdeci">#define UNREACHABLE(why)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00034">utils.hpp:34</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a73aa59d7b088082ec257a1c65edbf1d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">arm_compute::test::validation::k</a></div><div class="ttdeci">const unsigned int k</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">GEMMMatrixMultiplyNative.cpp:361</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_9847dd9cb7a28e46201717fa7336cf62.xhtml">arm_gemm</a></li><li class="navelem"><a class="el" href="dir_1bfffff844e6b15c54f06f69450095a2.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_d572f5ab553531078ae679e168ef5ab5.xhtml">a64_sgemv_pretransposed</a></li><li class="navelem"><a class="el" href="arm__gemm_2kernels_2a64__sgemv__pretransposed_2generic_8cpp.xhtml">generic.cpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:26 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
