{
  "common": [
    "src/common/cpuinfo/CpuInfo.cpp",
    "src/common/cpuinfo/CpuModel.cpp",
    "src/common/cpuinfo/CpuIsaInfo.cpp",
    "src/common/utils/LegacySupport.cpp",
    "src/common/AllocatorWrapper.cpp",
    "src/common/ITensorV2.cpp",
    "src/common/TensorPack.cpp",
    "src/common/IOperator.cpp",
    "src/core/AccessWindowAutoPadding.cpp",
    "src/core/AccessWindowStatic.cpp",
    "src/core/AccessWindowTranspose.cpp",
    "src/core/Error.cpp",
    "src/core/GPUTarget.cpp",
    "src/core/Helpers.cpp",
    "src/core/IAccessWindow.cpp",
    "src/core/IKernel.cpp",
    "src/core/ITensor.cpp",
    "src/core/ITensorPack.cpp",
    "src/core/Rounding.cpp",
    "src/core/Size2D.cpp",
    "src/core/SubTensorInfo.cpp",
    "src/core/TensorInfo.cpp",
    "src/core/Utils.cpp",
    "src/core/Validate.cpp",
    "src/core/Version.cpp",
    "src/core/helpers/SoftmaxHelpers.cpp",
    "src/core/helpers/WindowHelpers.cpp",
    "src/core/utils/ActivationFunctionUtils.cpp",
    "src/core/utils/AssemblyUtils.cpp",
    "src/core/utils/DataTypeUtils.cpp",
    "src/core/utils/DataLayoutUtils.cpp",
    "src/core/utils/InterpolationPolicyUtils.cpp",
    "src/core/utils/FormatUtils.cpp",
    "src/core/utils/ScaleUtils.cpp",
    "src/core/utils/StringUtils.cpp",
    "src/core/utils/helpers/fft.cpp",
    "src/core/utils/helpers/tensor_transform.cpp",
    "src/core/utils/io/FileHandler.cpp",
    "src/core/utils/misc/MMappedFile.cpp",
    "src/core/utils/quantization/AsymmHelpers.cpp",
    "src/core/CPP/CPPTypes.cpp",
    "src/core/CPP/kernels/CPPBoxWithNonMaximaSuppressionLimitKernel.cpp",
    "src/core/CPP/kernels/CPPNonMaximumSuppressionKernel.cpp",
    "src/core/CPP/kernels/CPPPermuteKernel.cpp",
    "src/core/CPP/kernels/CPPTopKVKernel.cpp",
    "src/core/CPP/kernels/CPPUpsampleKernel.cpp",
    "src/runtime/Allocator.cpp",
    "src/runtime/BlobLifetimeManager.cpp",
    "src/runtime/BlobMemoryPool.cpp",
    "src/runtime/ISimpleLifetimeManager.cpp",
    "src/runtime/ITensorAllocator.cpp",
    "src/runtime/IWeightsManager.cpp",
    "src/runtime/IScheduler.cpp",
    "src/runtime/Memory.cpp",
    "src/runtime/MemoryManagerOnDemand.cpp",
    "src/runtime/OffsetLifetimeManager.cpp",
    "src/runtime/OffsetMemoryPool.cpp",
    "src/runtime/OperatorTensor.cpp",
    "src/runtime/PoolManager.cpp",
    "src/runtime/RuntimeContext.cpp",
    "src/runtime/Scheduler.cpp",
    "src/runtime/SchedulerFactory.cpp",
    "src/runtime/SchedulerUtils.cpp",
    "src/runtime/SubTensor.cpp",
    "src/runtime/Tensor.cpp",
    "src/runtime/TensorAllocator.cpp",
    "src/runtime/Utils.cpp",
    "src/runtime/CPP/ICPPSimpleFunction.cpp",
    "src/runtime/CPP/functions/CPPBoxWithNonMaximaSuppressionLimit.cpp",
    "src/runtime/CPP/functions/CPPDetectionOutputLayer.cpp",
    "src/runtime/CPP/functions/CPPDetectionPostProcessLayer.cpp",
    "src/runtime/CPP/functions/CPPNonMaximumSuppression.cpp",
    "src/runtime/CPP/functions/CPPPermute.cpp",
    "src/runtime/CPP/functions/CPPTopKV.cpp",
    "src/runtime/CPP/functions/CPPUpsample.cpp"
  ],
  "logging": [
    "src/core/utils/logging/FilePrinter.cpp",
    "src/core/utils/logging/Helpers.cpp",
    "src/core/utils/logging/Logger.cpp",
    "src/core/utils/logging/LoggerRegistry.cpp"
  ],
  "scheduler": {
    "single": [ "src/runtime/CPP/SingleThreadScheduler.cpp" ],
    "threads": [ "src/runtime/CPP/CPPScheduler.cpp" ],
    "omp": [ "src/runtime/OMP/OMPScheduler.cpp"]
  },
  "c_api": {
    "common": [
      "src/c/AclContext.cpp",
      "src/c/AclOperator.cpp",
      "src/c/AclQueue.cpp",
      "src/c/AclTensor.cpp",
      "src/c/AclTensorPack.cpp",
      "src/c/AclVersion.cpp"
    ],
    "cpu": [
    ],
    "gpu": [
      "src/c/cl/AclOpenClExt.cpp"
    ],
    "operators":
    [
      "src/c/operators/AclActivation.cpp"
    ]
  },
  "high_priority": [
    "Activation",
    "DepthwiseConv2d",
    "Conv2d",
    "Permute",
    "Pool2d",
    "Reshape",
    "MatMul"
  ],
  "gpu": {
    "common": [
      "src/core/CL/CLCompileContext.cpp",
      "src/core/CL/DefaultLWSHeuristics.cpp",
      "src/core/CL/CLHelpers.cpp",
      "src/core/CL/CLKernelLibrary.cpp",
      "src/core/CL/CLUtils.cpp",
      "src/core/CL/ICLKernel.cpp",
      "src/core/CL/ICLSimple2DKernel.cpp",
      "src/core/CL/ICLSimple3DKernel.cpp",
      "src/core/CL/ICLSimpleKernel.cpp",
      "src/core/CL/ICLTensor.cpp",
      "src/core/CL/OpenCL.cpp",
      "src/gpu/cl/ClContext.cpp",
      "src/gpu/cl/ClKernelLibrary.cpp",
      "src/gpu/cl/ClQueue.cpp",
      "src/gpu/cl/ClTensor.cpp",
      "src/core/CL/kernels/CLFillBorderKernel.cpp",
      "src/runtime/CL/CLBufferAllocator.cpp",
      "src/runtime/CL/CLGEMMHeuristicsHandle.cpp",
      "src/runtime/CL/CLHelpers.cpp",
      "src/runtime/CL/CLMemory.cpp",
      "src/runtime/CL/CLMemoryRegion.cpp",
      "src/runtime/CL/CLOperator.cpp",
      "src/runtime/CL/CLRuntimeContext.cpp",
      "src/runtime/CL/CLScheduler.cpp",
      "src/runtime/CL/CLSubTensor.cpp",
      "src/runtime/CL/CLTensor.cpp",
      "src/runtime/CL/CLTensorAllocator.cpp",
      "src/runtime/CL/CLTuner.cpp",
      "src/runtime/CL/ICLSimpleFunction.cpp",
      "src/runtime/CL/Utils.cpp",
      "src/runtime/CL/mlgo/HeuristicTree.cpp",
      "src/runtime/CL/mlgo/MLGOHeuristics.cpp",
      "src/runtime/CL/mlgo/MLGOParser.cpp",
      "src/runtime/CL/mlgo/Utils.cpp",
      "src/runtime/CL/tuners/CLTuningParametersList.cpp"
    ],
    "operators": {
    "Activation":{
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClActivationKernel.cpp",
          "src/gpu/cl/operators/ClActivation.cpp",
          "src/runtime/CL/functions/CLActivationLayer.cpp"
        ]
      }
    },
    "ArgMinMax": {
      "deps": [ "Reshape" ],
      "files": {
        "common": [
          "src/core/CL/kernels/CLArgMinMaxLayerKernel.cpp",
          "src/runtime/CL/functions/CLArgMinMaxLayer.cpp"
        ]
      }
    },
    "Add": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClElementwiseKernel.cpp",
          "src/gpu/cl/operators/ClAdd.cpp"
        ]
      }
    },
    "BatchNormalization": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLBatchNormalizationLayerKernel.cpp",
          "src/core/CL/kernels/CLFuseBatchNormalizationKernel.cpp",
          "src/runtime/CL/functions/CLBatchNormalizationLayer.cpp",
          "src/runtime/CL/functions/CLFuseBatchNormalization.cpp"
        ]
      }
    },
    "BatchToSpace": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLBatchToSpaceLayerKernel.cpp",
          "src/runtime/CL/functions/CLBatchToSpaceLayer.cpp"
         ]
      }
    },
    "Bitwise": {
      "files": {
        "common": [ "src/core/CL/kernels/CLBitwiseKernel.cpp" ]
      }
    },
    "BitwiseAnd": {
      "deps": [ "Bitwise" ],
      "files": {
        "common": [ "src/runtime/CL/functions/CLBitwiseAnd.cpp" ]
      }
    },
    "BitwiseNot": {
      "deps": [ "Bitwise" ],
      "files": {
        "common": [ "src/runtime/CL/functions/CLBitwiseNot.cpp" ]
      }
    },
    "BitwiseOr": {
      "deps": [ "Bitwise" ],
      "files": {
        "common": [ "src/runtime/CL/functions/CLBitwiseOr.cpp" ]
      }
    },
    "BitwiseXor": {
      "deps": [ "Bitwise" ],
      "files": {
        "common": [ "src/runtime/CL/functions/CLBitwiseXor.cpp" ]
      }
    },
    "BoundingBoxTransform": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLBoundingBoxTransformKernel.cpp",
          "src/runtime/CL/functions/CLBoundingBoxTransform.cpp"
        ]
      }
    },
    "Cast": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClCastKernel.cpp",
          "src/gpu/cl/operators/ClCast.cpp",
          "src/runtime/CL/functions/CLCast.cpp"
        ]
      }
    },
    "ChannelShuffle": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLChannelShuffleLayerKernel.cpp",
          "src/runtime/CL/functions/CLChannelShuffleLayer.cpp"
        ]
      }
    },
    "Comparison":  {
      "files": {
        "common": [
          "src/core/CL/kernels/CLComparisonKernel.cpp",
          "src/runtime/CL/functions/CLComparison.cpp"
        ]
      }
    },
    "Concatenate": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClBatchConcatenateKernel.cpp",
          "src/gpu/cl/kernels/ClDepthConcatenateKernel.cpp",
          "src/gpu/cl/kernels/ClHeightConcatenateKernel.cpp",
          "src/gpu/cl/kernels/ClWidthConcatenate2TensorsKernel.cpp",
          "src/gpu/cl/kernels/ClWidthConcatenate4TensorsKernel.cpp",
          "src/gpu/cl/kernels/ClWidthConcatenateKernel.cpp",
          "src/gpu/cl/operators/ClConcatenate.cpp",
          "src/runtime/CL/functions/CLConcatenateLayer.cpp"
        ]
      }
    },
    "Conv2d": {
      "deps": [
        "Activation",
        "ElementwiseBinary",
        "FFT2D",
        "Gemm",
        "Mul",
        "Pad",
        "Permute",
        "Reduction",
        "Reshape",
        "Reverse",
        "Slice"
      ],
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClDirectConv2dKernel.cpp",
          "src/gpu/cl/kernels/ClWinogradFilterTransformKernel.cpp",
          "src/gpu/cl/kernels/ClWinogradInputTransformKernel.cpp",
          "src/gpu/cl/kernels/ClWinogradOutputTransformKernel.cpp",
          "src/gpu/cl/kernels/ClIm2ColKernel.cpp",
          "src/gpu/cl/kernels/ClIndirectConv2dKernel.cpp",
          "src/gpu/cl/kernels/ClIndirectConv2dAddressPrecalculationKernel.cpp",
          "src/gpu/cl/kernels/ClCol2ImKernel.cpp",
          "src/gpu/cl/operators/ClConv2d.cpp",
          "src/gpu/cl/operators/ClDirectConv2d.cpp",
          "src/gpu/cl/operators/ClGemmConv2d.cpp",
          "src/gpu/cl/operators/ClIndirectConv2d.cpp",
          "src/gpu/cl/operators/ClWinogradConv2d.cpp",
          "src/gpu/cl/kernels/ClWeightsReshapeKernel.cpp",
          "src/runtime/CL/functions/CLConvolutionLayer.cpp",
          "src/runtime/CL/functions/CLDirectConvolutionLayer.cpp",
          "src/runtime/CL/functions/CLFFTConvolutionLayer.cpp",
          "src/runtime/CL/functions/CLGEMMConvolutionLayer.cpp",
          "src/runtime/CL/functions/CLIndirectConvolutionLayer.cpp",
          "src/runtime/CL/functions/CLWinogradConvolutionLayer.cpp"
        ]
      }
    },
    "Conv3d": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClDirectConv3dKernel.cpp",
          "src/gpu/cl/operators/ClDirectConv3d.cpp",
          "src/runtime/CL/functions/CLConv3D.cpp"
        ]
      }
    },
    "Copy": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClCopyKernel.cpp",
          "src/gpu/cl/operators/ClCopy.cpp",
          "src/runtime/CL/functions/CLCopy.cpp"
        ]
      }
    },
    "CropResize": {
      "deps": [ "Copy", "Fill", "Scale" ],
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClCropKernel.cpp",
          "src/gpu/cl/operators/ClCrop.cpp",
          "src/runtime/CL/functions/CLCrop.cpp",
          "src/runtime/CL/functions/CLCropResize.cpp"
        ]
      }
    },
    "Deconv2d": {
      "deps": [ "Conv2d", "Reverse", "Transpose"],
      "files": {
        "common": [
          "src/core/CL/kernels/CLDeconvolutionLayerUpsampleKernel.cpp",
          "src/core/CL/kernels/CLDeconvolutionReshapeOutputKernel.cpp",
          "src/gpu/cl/kernels/ClTransposedConvolutionKernel.cpp",
          "src/gpu/cl/operators/ClTransposedConvolution.cpp",
          "src/runtime/CL/functions/CLDeconvolutionLayer.cpp",
          "src/runtime/CL/functions/CLDeconvolutionLayerUpsample.cpp",
          "src/runtime/CL/functions/CLDirectDeconvolutionLayer.cpp",
          "src/runtime/CL/functions/CLGEMMDeconvolutionLayer.cpp"
        ]
      }
    },
    "DepthConvert": {
      "deps": [ "Cast"],
      "files": {
        "common": [ "src/runtime/CL/functions/CLDepthConvertLayer.cpp" ]
      }
    },
    "DepthToSpace": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLDepthToSpaceLayerKernel.cpp",
          "src/runtime/CL/functions/CLDepthToSpaceLayer.cpp"
        ]
      }
    },
    "DepthwiseConv2d": {
      "deps": [ "Permute" ],
      "files": {
        "common": [
          "src/core/CL/kernels/CLDepthwiseConvolutionLayerNativeKernel.cpp",
          "src/runtime/CL/functions/CLDepthwiseConvolutionLayer.cpp"
        ]
      }
    },
    "Dequantize": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClDequantizeKernel.cpp",
          "src/gpu/cl/operators/ClDequantize.cpp",
          "src/runtime/CL/functions/CLDequantizationLayer.cpp"
        ]
      }
    },
    "ElementwiseBinary": {
      "deps": ["Add", "Sub"],
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClElementwiseKernel.cpp",
          "src/gpu/cl/operators/ClElementwiseOperations.cpp",
          "src/runtime/CL/functions/CLElementwiseOperations.cpp"
        ]
      }
    },
    "ElementwiseUnary":{
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClElementwiseUnaryKernel.cpp",
          "src/gpu/cl/operators/ClElementwiseUnary.cpp",
          "src/runtime/CL/functions/CLElementwiseUnaryLayer.cpp"
        ]
      }
    },
    "FFT1D": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLFFTDigitReverseKernel.cpp",
          "src/core/CL/kernels/CLFFTRadixStageKernel.cpp",
          "src/core/CL/kernels/CLFFTScaleKernel.cpp",
          "src/runtime/CL/functions/CLFFT1D.cpp"
        ]
      }
    },
    "FFT2D": {
      "deps": [ "FFT1D" ],
      "files": {
        "common": [ "src/runtime/CL/functions/CLFFT2D.cpp" ]
      }
    },
    "Fill": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClFillKernel.cpp",
          "src/gpu/cl/operators/ClFill.cpp",
          "src/runtime/CL/functions/CLFill.cpp"
        ]
      }
    },
    "Flatten": {
      "files": {
        "common": [
          "src/gpu/cl/operators/ClFlatten.cpp",
          "src/runtime/CL/functions/CLFlattenLayer.cpp"
        ]
      }
    },
    "Floor": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClFloorKernel.cpp",
          "src/gpu/cl/operators/ClFloor.cpp",
          "src/runtime/CL/functions/CLFloor.cpp"
        ]
      }
    },
    "FullyConnected": {
      "deps": [ "Flatten", "Gemm", "Transpose"],
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClConvertFullyConnectedWeightsKernel.cpp",
          "src/gpu/cl/operators/ClConvertFullyConnectedWeights.cpp",
          "src/gpu/cl/operators/ClFullyConnected.cpp",
          "src/runtime/CL/functions/CLConvertFullyConnectedWeights.cpp",
          "src/runtime/CL/functions/CLFullyConnectedLayer.cpp"
        ]
      }
    },
    "Gather": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLGatherKernel.cpp",
          "src/runtime/CL/functions/CLGather.cpp"]
      }
    },
    "Gemm": {
      "deps": [ "Cast" ],
      "files": {
        "common": [
          "src/gpu/cl/kernels/gemm/ClGemmHelpers.cpp",
          "src/gpu/cl/kernels/gemm/native/ClGemmDefaultConfigNativeBifrost.cpp",
          "src/gpu/cl/kernels/gemm/native/ClGemmDefaultConfigNativeMidgard.cpp",
          "src/gpu/cl/kernels/gemm/native/ClGemmDefaultConfigNativeValhall.cpp",
          "src/gpu/cl/kernels/gemm/reshaped/ClGemmDefaultConfigReshapedBifrost.cpp",
          "src/gpu/cl/kernels/gemm/reshaped/ClGemmDefaultConfigReshapedValhall.cpp",
          "src/gpu/cl/kernels/gemm/reshaped_only_rhs/ClGemmDefaultConfigReshapedRhsOnlyBifrost.cpp",
          "src/gpu/cl/kernels/gemm/reshaped_only_rhs/ClGemmDefaultConfigReshapedRhsOnlyValhall.cpp",
          "src/gpu/cl/kernels/ClGemmLowpMatrixMultiplyNativeKernel.cpp",
          "src/gpu/cl/kernels/ClGemmLowpMatrixMultiplyReshapedKernel.cpp",
          "src/gpu/cl/kernels/ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel.cpp",
          "src/gpu/cl/kernels/ClGemmLowpMatrixMultiplyReshapedOnlyRhsMMULKernel.cpp",
          "src/gpu/cl/kernels/ClGemmLowpOffsetContributionKernel.cpp",
          "src/gpu/cl/kernels/ClGemmLowpOffsetContributionOutputStageKernel.cpp",
          "src/gpu/cl/kernels/ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel.cpp",
          "src/gpu/cl/kernels/ClGemmLowpQuantizeDownInt32ScaleByFloatKernel.cpp",
          "src/gpu/cl/kernels/ClGemmLowpQuantizeDownInt32ScaleKernel.cpp",
          "src/gpu/cl/kernels/ClGemmMatrixMultiplyNativeKernel.cpp",
          "src/gpu/cl/kernels/ClGemmMatrixMultiplyReshapedOnlyRhsMMULKernel.cpp",
          "src/gpu/cl/kernels/ClGemmMatrixMultiplyReshapedKernel.cpp",
          "src/gpu/cl/kernels/ClGemmMatrixMultiplyReshapedOnlyRhsKernel.cpp",
          "src/gpu/cl/kernels/ClGemmReshapeLhsMatrixKernel.cpp",
          "src/gpu/cl/kernels/ClGemmReshapeRhsMatrixKernel.cpp",
          "src/gpu/cl/kernels/ClGemmLowpReductionKernel.cpp",
          "src/gpu/cl/operators/ClGemm.cpp",
          "src/gpu/cl/operators/ClGemmLowpMatrixMultiplyCore.cpp",
          "src/gpu/cl/operators/ClGemmLowpOutputStage.cpp",
          "src/runtime/CL/gemm/CLGEMMDefaultTypeBifrost.cpp",
          "src/runtime/CL/gemm/CLGEMMDefaultTypeMidgard.cpp",
          "src/runtime/CL/gemm/CLGEMMDefaultTypeValhall.cpp",
          "src/runtime/CL/gemm_auto_heuristics/CLGEMMAutoHeuristics.cpp",
          "src/runtime/CL/functions/CLGEMM.cpp",
          "src/runtime/CL/functions/CLGEMMLowpMatrixMultiplyCore.cpp",
          "src/runtime/CL/functions/CLGEMMLowpOutputStage.cpp",
          "src/runtime/heuristics/direct_conv/ClDirectConvDefaultConfigBifrost.cpp",
          "src/runtime/heuristics/direct_conv/ClDirectConvDefaultConfigValhall.cpp",
          "src/runtime/heuristics/dwc_native/ClDWCNativeDefaultConfigBifrost.cpp",
          "src/runtime/heuristics/dwc_native/ClDWCNativeDefaultConfigValhall.cpp",
          "src/runtime/heuristics/dwc_native/ClDWCNativeHeuristicsHelpers.cpp",
          "src/runtime/heuristics/indirect_conv/ClIndirectConvDefaultConfigValhall.cpp"
        ]
      }
    },
    "MatMul": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClMatMulLowpNativeKernel.cpp",
          "src/gpu/cl/kernels/ClMatMulNativeKernel.cpp",
          "src/gpu/cl/kernels/ClMatMulNativeMMULKernel.cpp",
          "src/gpu/cl/operators/ClMatMul.cpp",
          "src/runtime/CL/functions/CLMatMul.cpp",
          "src/runtime/heuristics/matmul_native/ClMatMulNativeDefaultConfigValhall.cpp",
          "src/runtime/heuristics/matmul_native/ClMatMulNativeHelpers.cpp"
        ]
      }
    },
    "GenerateProposals": {
      "deps": [ "BoundingBoxTransform", "Dequantize", "Pad", "Permute", "Quantize", "Reshape" ],
      "files": {
        "common": [
          "src/core/CL/kernels/CLGenerateProposalsLayerKernel.cpp",
          "src/runtime/CL/functions/CLGenerateProposalsLayer.cpp"
        ]
      }
    },
    "InstanceNormalize": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLInstanceNormalizationLayerKernel.cpp",
          "src/runtime/CL/functions/CLInstanceNormalizationLayer.cpp"
        ]
      }
    },
    "L2Normalize": {
      "deps": [ "Reduction" ],
      "files": {
        "common": [
          "src/core/CL/kernels/CLL2NormalizeLayerKernel.cpp",
          "src/runtime/CL/functions/CLL2NormalizeLayer.cpp"
        ]
      }
    },
    "Logical": {
      "files": {
        "common": [
          "src/gpu/cl/operators/ClLogicalNot.cpp",
          "src/runtime/CL/functions/CLLogicalAnd.cpp",
          "src/runtime/CL/functions/CLLogicalNot.cpp",
          "src/runtime/CL/functions/CLLogicalOr.cpp"
        ]
      }
    },
    "LSTM": {
      "deps": [
        "Activation",
        "Concatenate",
        "Copy",
        "Dequantize",
        "ElementwiseBinary",
        "Fill",
        "FullyConnected",
        "Gemm",
        "MeanStdDevNormalize",
        "Mul",
        "Quantize",
        "Slice",
        "Transpose"
      ],
      "files": {
        "common": [
          "src/core/CL/kernels/CLQLSTMLayerNormalizationKernel.cpp",
          "src/runtime/CL/functions/CLQLSTMLayer.cpp",
          "src/runtime/CL/functions/CLLSTMLayer.cpp",
          "src/runtime/CL/functions/CLLSTMLayerQuantized.cpp"
        ]
      }
    },
    "MaxUnpool2d": {
      "deps": [ "Fill" ],
      "files": {
        "common": [
          "src/core/CL/kernels/CLMaxUnpoolingLayerKernel.cpp",
          "src/runtime/CL/functions/CLMaxUnpoolingLayer.cpp"
        ]
      }
    },
    "MeanStdDevNormalize": {
      "deps": [ "Reduction" ],
      "files": {
        "common": [
          "src/core/CL/kernels/CLMeanStdDevNormalizationKernel.cpp",
          "src/runtime/CL/functions/CLMeanStdDevNormalizationLayer.cpp",
          "src/runtime/CL/functions/CLReduceMean.cpp"
        ]
      }
    },
    "Mul": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClMulKernel.cpp",
          "src/gpu/cl/operators/ClMul.cpp",
          "src/runtime/CL/functions/CLPixelWiseMultiplication.cpp"
        ]
      }
    },
    "Normalize": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLNormalizationLayerKernel.cpp",
          "src/runtime/CL/functions/CLNormalizationLayer.cpp"
        ]
      }
    },
    "Pad": {
      "deps": [ "Copy" ],
      "files": {
        "common": [
          "src/core/CL/kernels/CLPadLayerKernel.cpp",
          "src/runtime/CL/functions/CLPadLayer.cpp"
        ]
      }
    },
    "Permute": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClPermuteKernel.cpp",
          "src/gpu/cl/operators/ClPermute.cpp",
          "src/runtime/CL/functions/CLPermute.cpp"
        ]
      }
    },
    "Pool2d": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClPool2dKernel.cpp",
          "src/gpu/cl/operators/ClPool2d.cpp",
          "src/runtime/CL/functions/CLPoolingLayer.cpp"
        ]
      }
    },
    "Pool3d": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClPool3dKernel.cpp",
          "src/gpu/cl/operators/ClPool3d.cpp",
          "src/runtime/CL/functions/CLPooling3dLayer.cpp"
        ]
      }
    },
    "PRelu": {
      "deps": [ "ElementwiseBinary" ],
      "files": {
        "common": [
          "src/gpu/cl/operators/ClPRelu.cpp",
          "src/runtime/CL/functions/CLPReluLayer.cpp"
        ]
      }
    },
    "PriorBox": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLPriorBoxLayerKernel.cpp",
          "src/runtime/CL/functions/CLPriorBoxLayer.cpp"
        ]
      }
    },
    "Quantize": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClQuantizeKernel.cpp",
          "src/gpu/cl/operators/ClQuantize.cpp",
          "src/runtime/CL/functions/CLQuantizationLayer.cpp"
        ]
      }
    },
    "Range": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLRangeKernel.cpp",
          "src/runtime/CL/functions/CLRange.cpp"
        ]
      }
    },
    "Reduction": {
      "deps": [ "Reshape" ],
      "files": {
        "common": [
          "src/core/CL/kernels/CLReductionOperationKernel.cpp",
          "src/runtime/CL/functions/CLReductionOperation.cpp"
        ]
      }
    },
    "Reorg": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLReorgLayerKernel.cpp",
          "src/runtime/CL/functions/CLReorgLayer.cpp"
        ]
      }
    },
    "Reshape": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClReshapeKernel.cpp",
          "src/gpu/cl/operators/ClReshape.cpp",
          "src/runtime/CL/functions/CLReshapeLayer.cpp"
        ]
      }
    },
    "Reverse": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLReverseKernel.cpp",
          "src/runtime/CL/functions/CLReverse.cpp"
        ]
      }
    },
    "RNN": {
      "deps": [ "Activation", "Cast", "ElementwiseBinary", "FullyConnected", "Gemm"],
      "files": {
        "common": [ "src/runtime/CL/functions/CLRNNLayer.cpp" ]
      }
    },
    "ROIAlign": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLROIAlignLayerKernel.cpp",
          "src/runtime/CL/functions/CLROIAlignLayer.cpp"
        ]
      }
    },
    "ROIPool2d": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLROIPoolingLayerKernel.cpp",
          "src/runtime/CL/functions/CLROIPoolingLayer.cpp"
        ]
      }
    },
    "Scale": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClScaleKernel.cpp",
          "src/gpu/cl/operators/ClScale.cpp",
          "src/runtime/CL/functions/CLScale.cpp"
        ]
      }
    },
    "Select": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLSelectKernel.cpp",
          "src/runtime/CL/functions/CLSelect.cpp"
        ]
      }
    },
    "Slice": {
      "deps": [ "StridedSlice" ],
      "files": {
        "common": [ "src/runtime/CL/functions/CLSlice.cpp" ]
      }
    },
    "Softmax": {
      "deps": [ "Permute" ],
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClSoftmaxKernel.cpp",
          "src/gpu/cl/operators/ClSoftmax.cpp",
          "src/runtime/CL/functions/CLSoftmaxLayer.cpp"
        ]
      }
    },
    "SpaceToBatch": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLSpaceToBatchLayerKernel.cpp",
          "src/runtime/CL/functions/CLSpaceToBatchLayer.cpp"
        ]
      }
    },
    "SpaceToDepth": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLSpaceToDepthLayerKernel.cpp",
          "src/runtime/CL/functions/CLSpaceToDepthLayer.cpp"
        ]
      }
    },
    "Split": {
      "deps": [ "StridedSlice" ],
      "files": {
        "common": [ "src/runtime/CL/functions/CLSplit.cpp" ]
      }
    },
    "Stack": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLStackLayerKernel.cpp",
          "src/runtime/CL/functions/CLStackLayer.cpp"
        ]
      }
    },
    "StridedSlice": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLStridedSliceKernel.cpp",
          "src/runtime/CL/functions/CLStridedSlice.cpp"
        ]
      }
    },
    "Sub": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClElementwiseKernel.cpp",
          "src/gpu/cl/operators/ClSub.cpp"
        ]
      }
    },
    "Tile": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLTileKernel.cpp",
          "src/runtime/CL/functions/CLTile.cpp"
        ]
      }
    },
    "Transpose": {
      "files": {
        "common": [
          "src/gpu/cl/kernels/ClTransposeKernel.cpp",
          "src/gpu/cl/operators/ClTranspose.cpp",
          "src/runtime/CL/functions/CLTranspose.cpp"
        ]
      }
    },
    "Unstack": {
      "deps": [ "StridedSlice" ],
      "files": {
        "common": [ "src/runtime/CL/functions/CLUnstack.cpp" ]
      }
    },
    "YUVNormalize": {
      "files": {
        "common": [
          "src/core/CL/kernels/CLNormalizePlanarYUVLayerKernel.cpp",
          "src/runtime/CL/functions/CLNormalizePlanarYUVLayer.cpp"
        ]
      }
    }
  }
},
  "cpu": {
    "common": [
      "src/cpu/CpuContext.cpp",
      "src/cpu/CpuQueue.cpp",
      "src/cpu/CpuTensor.cpp",
      "src/core/NEON/kernels/NEFillBorderKernel.cpp",
      "src/runtime/NEON/INEOperator.cpp",
      "src/runtime/NEON/INESimpleFunction.cpp",
      "src/runtime/NEON/INESimpleFunctionNoBorder.cpp"
    ],
    "operators": {
      "Activation": {
        "deps": [ "LUT" ],
        "files": {
          "common": [
            "src/cpu/operators/CpuActivation.cpp",
            "src/cpu/kernels/CpuActivationKernel.cpp",
            "src/runtime/NEON/functions/NEActivationLayer.cpp"
          ],
          "neon": {
            "fp16": [ "src/cpu/kernels/activation/generic/neon/fp16.cpp" ],
            "fp32": [ "src/cpu/kernels/activation/generic/neon/fp32.cpp" ],
            "qasymm8": [
              "src/cpu/kernels/activation/generic/neon/qasymm8.cpp",
              "src/cpu/kernels/activation/generic/neon/lut.cpp"
            ],
            "qasymm8_signed": [
              "src/cpu/kernels/activation/generic/neon/qasymm8_signed.cpp",
              "src/cpu/kernels/activation/generic/neon/lut.cpp"
            ],
            "qsymm16": [ "src/cpu/kernels/activation/generic/neon/qsymm16.cpp" ]
          },
          "sve": {
            "fp16": [ "src/cpu/kernels/activation/generic/sve/fp16.cpp" ],
            "fp32": [ "src/cpu/kernels/activation/generic/sve/fp32.cpp" ]
          },
          "sve2":{
            "qasymm8": [
              "src/cpu/kernels/activation/generic/sve2/qasymm8.cpp",
              "src/cpu/kernels/activation/generic/sve2/lut.cpp"
            ],
            "qasymm8_signed": [ "src/cpu/kernels/activation/generic/sve2/qasymm8_signed.cpp" ],
            "qsymm16": [ "src/cpu/kernels/activation/generic/sve2/qsymm16.cpp" ]
          }
        }
      },
      "ArgMinMax": {
        "deps": [ "Reduction" ],
        "files": {
          "common": [ "src/runtime/NEON/functions/NEArgMinMaxLayer.cpp" ]
        }
      },
      "Add": {
        "files": {
          "common": [
            "src/cpu/operators/CpuAdd.cpp",
            "src/cpu/kernels/CpuAddKernel.cpp",
            "src/runtime/NEON/functions/NEArithmeticAddition.cpp"
          ],
          "neon": {
            "common": ["src/cpu/kernels/add/generic/neon/impl.cpp"],
            "fp32":["src/cpu/kernels/add/generic/neon/fp32.cpp"],
            "fp16":["src/cpu/kernels/add/generic/neon/fp16.cpp"],
            "integer":["src/cpu/kernels/add/generic/neon/integer.cpp"],
            "qasymm8": ["src/cpu/kernels/add/generic/neon/qasymm8.cpp"],
            "qasymm8_signed": ["src/cpu/kernels/add/generic/neon/qasymm8_signed.cpp"],
            "qsymm16": ["src/cpu/kernels/add/generic/neon/qsymm16.cpp"]
          },
          "sve": {
            "common": [ "src/cpu/kernels/add/generic/sve/impl.cpp" ],
            "integer":["src/cpu/kernels/add/generic/sve/integer.cpp"],
            "fp32":["src/cpu/kernels/add/generic/sve/fp32.cpp"],
            "fp16":["src/cpu/kernels/add/generic/sve/fp16.cpp"]
          },
          "sve2": {
            "qasymm8": [ "src/cpu/kernels/add/generic/sve2/qasymm8.cpp" ],
            "qasymm8_signed": [ "src/cpu/kernels/add/generic/sve2/qasymm8_signed.cpp" ],
            "qsymm16": [ "src/cpu/kernels/add/generic/sve2/qsymm16.cpp" ]
          }
        }
      },
      "AddMulAdd": {
        "files": {
          "common": [
            "src/cpu/operators/CpuAddMulAdd.cpp",
            "src/cpu/kernels/CpuAddMulAddKernel.cpp",
            "src/runtime/NEON/functions/NEAddMulAdd.cpp"
          ],
          "neon": {
            "fp32":["src/cpu/kernels/addmuladd/generic/neon/fp32.cpp"],
            "fp16":["src/cpu/kernels/addmuladd/generic/neon/fp16.cpp"],
            "qasymm8": ["src/cpu/kernels/addmuladd/generic/neon/qasymm8.cpp"],
            "qasymm8_signed": ["src/cpu/kernels/addmuladd/generic/neon/qasymm8_signed.cpp"]
          }
        }
      },
      "BatchNormalize": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEBatchNormalizationLayerKernel.cpp",
            "src/core/NEON/kernels/NEFuseBatchNormalizationKernel.cpp",
            "src/runtime/NEON/functions/NEBatchNormalizationLayer.cpp",
            "src/runtime/NEON/functions/NEFuseBatchNormalization.cpp"
          ],
          "neon": {
            "common": [
              "src/cpu/kernels/fuse_batch_normalization/generic/impl.cpp",
              "src/cpu/kernels/fuse_batch_normalization/nchw/all.cpp",
              "src/cpu/kernels/fuse_batch_normalization/nhwc/neon/impl.cpp"
            ],
            "fp16": [
              "src/cpu/kernels/fuse_batch_normalization/generic/fp16.cpp",
              "src/core/NEON/kernels/batchnormalization/impl/NEON/fp16.cpp",
              "src/cpu/kernels/fuse_batch_normalization/nhwc/neon/fp16.cpp"
            ],
            "fp32": [
              "src/cpu/kernels/fuse_batch_normalization/generic/fp32.cpp",
              "src/core/NEON/kernels/batchnormalization/impl/NEON/fp32.cpp",
              "src/cpu/kernels/fuse_batch_normalization/nhwc/neon/fp32.cpp"
            ]
          },
          "sve": {
            "fp16": [ "src/core/NEON/kernels/batchnormalization/impl/SVE/fp16.cpp" ],
            "fp32": [ "src/core/NEON/kernels/batchnormalization/impl/SVE/fp32.cpp" ]
          }
        }
      },
      "BatchToSpace": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEBatchToSpaceLayerKernel.cpp",
            "src/runtime/NEON/functions/NEBatchToSpaceLayer.cpp"
          ]
        }
      },
      "BitwiseAnd": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEBitwiseAndKernel.cpp",
            "src/runtime/NEON/functions/NEBitwiseAnd.cpp"
          ]
        }
      },
      "BitwiseNot": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEBitwiseNotKernel.cpp",
            "src/runtime/NEON/functions/NEBitwiseNot.cpp"
          ]
        }
      },
      "BitwiseOr": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEBitwiseOrKernel.cpp",
            "src/runtime/NEON/functions/NEBitwiseOr.cpp"
          ]
        }
      },
      "BitwiseXor": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEBitwiseXorKernel.cpp",
            "src/runtime/NEON/functions/NEBitwiseXor.cpp"
          ]
        }
      },
      "BoundingBoxTransform": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEBoundingBoxTransformKernel.cpp",
            "src/runtime/NEON/functions/NEBoundingBoxTransform.cpp"
          ],
          "neon":{
            "common":["src/cpu/kernels/boundingboxtransform/generic/neon/impl.cpp"],
            "fp32":["src/cpu/kernels/boundingboxtransform/generic/neon/fp32.cpp"],
            "fp16":["src/cpu/kernels/boundingboxtransform/generic/neon/fp16.cpp"],
            "qsymm16":["src/cpu/kernels/boundingboxtransform/generic/neon/qsymm16.cpp"]
          }
        }
      },
      "Cast": {
        "files": {
          "common": [
            "src/cpu/operators/CpuCast.cpp",
            "src/cpu/kernels/CpuCastKernel.cpp",
            "src/runtime/NEON/functions/NECast.cpp",
            "src/cpu/kernels/cast/generic/neon/bfloat16.cpp"
          ],
          "neon":{
            "fp16":["src/cpu/kernels/cast/generic/neon/fp16.cpp"]
          }
        }
      },
      "ChannelShuffle": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEChannelShuffleLayerKernel.cpp",
            "src/runtime/NEON/functions/NEChannelShuffleLayer.cpp"
          ]
        }
      },
      "Concatenate": {
        "files": {
          "common": [
            "src/cpu/operators/CpuConcatenate.cpp",
            "src/cpu/kernels/CpuConcatenateWidthKernel.cpp",
            "src/cpu/kernels/CpuConcatenateBatchKernel.cpp",
            "src/cpu/kernels/CpuConcatenateDepthKernel.cpp",
            "src/cpu/kernels/CpuConcatenateHeightKernel.cpp",
            "src/runtime/NEON/functions/NEConcatenateLayer.cpp"
          ]
        }
      },
      "Conv2d": {
        "deps": [
          "Activation",
          "ElementwiseBinary",
          "FFT2D",
          "Gemm",
          "Mul",
          "Pad",
          "Permute",
          "Reshape",
          "Reverse",
          "Slice"
        ],
        "files": {
          "common": [
            "src/cpu/operators/CpuConv2d.cpp",
            "src/cpu/operators/CpuDirectConv2d.cpp",
            "src/cpu/operators/CpuGemmDirectConv2d.cpp",
            "src/cpu/operators/CpuGemmConv2d.cpp",
            "src/cpu/operators/CpuWinogradConv2d.cpp",
            "src/cpu/operators/internal/CpuGemmAssemblyDispatch.cpp",
            "src/cpu/kernels/CpuDirectConv2dKernel.cpp",
            "src/cpu/kernels/CpuDirectConv2dOutputStageKernel.cpp",
            "src/cpu/kernels/CpuWinogradConv2dKernel.cpp",
            "src/cpu/kernels/CpuCol2ImKernel.cpp",
            "src/cpu/kernels/CpuIm2ColKernel.cpp",
            "src/cpu/kernels/CpuWeightsReshapeKernel.cpp",
            "src/runtime/NEON/functions/NEConvolutionLayer.cpp",
            "src/runtime/NEON/functions/NEDirectConvolutionLayer.cpp",
            "src/runtime/NEON/functions/NEFFTConvolutionLayer.cpp",
            "src/runtime/NEON/functions/NEGEMMConv2d.cpp",
            "src/runtime/NEON/functions/NEGEMMConvolutionLayer.cpp",
            "src/runtime/NEON/functions/NEWinogradConvolutionLayer.cpp"
          ],
          "neon": {
            "common": [
              "src/core/NEON/kernels/convolution/common/padding.cpp",
              "src/core/NEON/kernels/convolution/common/qasymm8.cpp",
              "src/core/NEON/kernels/convolution/common/qsymm8.cpp",
              "src/core/NEON/kernels/convolution/common/utils.cpp",
              "src/core/NEON/kernels/convolution/winograd/input_transforms_fp16.cpp",
              "src/core/NEON/kernels/convolution/winograd/input_transforms_fp32.cpp",
              "src/core/NEON/kernels/convolution/winograd/output_transforms_fp16.cpp",
              "src/core/NEON/kernels/convolution/winograd/output_transforms_fp32.cpp",
              "src/core/NEON/kernels/convolution/winograd/weight_transforms_fp16.cpp",
              "src/core/NEON/kernels/convolution/winograd/weight_transforms_fp32.cpp",
              "src/core/NEON/kernels/convolution/winograd/winograd_fp16.cpp",
              "src/core/NEON/kernels/convolution/winograd/winograd_fp32.cpp",
              "src/core/NEON/kernels/convolution/winograd/input_transforms/a64_fp16_6x6.cpp",
              "src/core/NEON/kernels/convolution/winograd/input_transforms/a64_fp32_6x6.cpp",
              "src/core/NEON/kernels/convolution/winograd/input_transforms/arm_fp32_1x8.cpp",
              "src/core/NEON/kernels/convolution/winograd/input_transforms/arm_fp32_4x4.cpp",
              "src/core/NEON/kernels/convolution/winograd/input_transforms/arm_fp32_6x6.cpp",
              "src/core/NEON/kernels/convolution/winograd/output_transforms/a64_fp16_4x4_3x3.cpp",
              "src/core/NEON/kernels/convolution/winograd/output_transforms/arm_fp32_1x2_1x7.cpp",
              "src/core/NEON/kernels/convolution/winograd/output_transforms/arm_fp32_1x4_1x5.cpp",
              "src/core/NEON/kernels/convolution/winograd/output_transforms/arm_fp32_1x6_1x3.cpp",
              "src/core/NEON/kernels/convolution/winograd/output_transforms/arm_fp32_2x2_3x3.cpp",
              "src/core/NEON/kernels/convolution/winograd/output_transforms/arm_fp32_2x2_5x5.cpp",
              "src/core/NEON/kernels/convolution/winograd/output_transforms/arm_fp32_4x4_3x3.cpp",
              "src/core/NEON/kernels/convolution/winograd/weight_transforms/a64_fp16_4x4_3x3.cpp",
              "src/core/NEON/kernels/convolution/winograd/weight_transforms/arm_fp32_2x2_3x3.cpp",
              "src/core/NEON/kernels/convolution/winograd/weight_transforms/arm_fp32_2x2_5x5.cpp",
              "src/core/NEON/kernels/convolution/winograd/weight_transforms/arm_fp32_4x4_3x3.cpp",
              "src/core/NEON/kernels/convolution/winograd/weight_transforms/cpp_fp32_1x2_1x7.cpp",
              "src/core/NEON/kernels/convolution/winograd/weight_transforms/cpp_fp32_1x4_1x5.cpp",
              "src/core/NEON/kernels/convolution/winograd/weight_transforms/cpp_fp32_1x6_1x3.cpp",
              "src/cpu/kernels/directconv2d/nhwc/neon/impl.cpp",
              "src/cpu/kernels/directconv2d/nchw/all.cpp"
            ],
            "fp32": [
              "src/cpu/kernels/directconv2d/nhwc/neon/fp32.cpp"
            ]
          },
          "sve": {
            "common": [
              "src/core/NEON/kernels/convolution/winograd/input_transforms/sve_fp32_6x6.cpp",
              "src/core/NEON/kernels/convolution/winograd/input_transforms/sme_fp32_mla_6x6.cpp",
              "src/core/NEON/kernels/convolution/winograd/output_transforms/sme_fp32_mopa_4x4_3x3.cpp"
            ]
          }
        }
      },
      "Copy": {
        "files": {
          "common": [
            "src/cpu/operators/CpuCopy.cpp",
            "src/cpu/kernels/CpuCopyKernel.cpp",
            "src/runtime/NEON/functions/NECopy.cpp"
          ]
        }
      },
      "CropResize": {
        "deps": [ "Scale" ],
        "files": {
          "common": [
            "src/core/NEON/kernels/NECropKernel.cpp",
            "src/runtime/NEON/functions/NECropResize.cpp"
          ],
          "neon": {
            "common":  [ "src/cpu/kernels/crop/generic/neon/impl.cpp" ],
            "fp32":    [ "src/cpu/kernels/crop/generic/neon/fp32.cpp" ],
            "fp16":    [ "src/cpu/kernels/crop/generic/neon/fp16.cpp" ],
            "integer": [ "src/cpu/kernels/crop/generic/neon/integer.cpp"   ]
          }
        }
      },
      "Deconv2d": {
        "deps": [ "Conv2d", "Reverse", "Transpose"],
        "files": {
          "common": [
            "src/runtime/NEON/functions/NEDeconvolutionLayer.cpp"
          ]
        }
      },
      "DepthConvert": {
        "deps": [ "Cast"],
        "files": {
          "common": [
            "src/runtime/NEON/functions/NEDepthConvertLayer.cpp"
          ]
        }
      },
      "DepthToSpace": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEDepthToSpaceLayerKernel.cpp",
            "src/runtime/NEON/functions/NEDepthToSpaceLayer.cpp"
          ]
        }
      },
      "DepthwiseConv2d": {
        "deps": [ "Activation", "Permute" ],
        "files": {
          "common": [
            "src/cpu/operators/CpuDepthwiseConv2d.cpp",
            "src/cpu/operators/CpuDepthwiseConv2dAssemblyDispatch.cpp",
            "src/cpu/kernels/CpuDepthwiseConv2dNativeKernel.cpp",
            "src/cpu/kernels/internal/CpuDepthwiseConv2dAssemblyWrapperKernel.cpp",
            "src/runtime/NEON/functions/NEDepthwiseConvolutionLayer.cpp"
          ],
          "neon": {
            "common": [
              "src/core/NEON/kernels/convolution/common/padding.cpp",
              "src/core/NEON/kernels/convolution/common/qasymm8.cpp",
              "src/core/NEON/kernels/convolution/common/qsymm8.cpp",
              "src/core/NEON/kernels/convolution/common/utils.cpp",
              "src/core/NEON/kernels/arm_conv/addressing.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/depthwise_common.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/depthwise_strategies_common.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/depthwise_u8q.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/depthwise_u8s8u8q.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/depthwise_s8q.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/depthwise_fp32.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_packed_to_nhwc_3x3_s2_with_multiplier_output3x3_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_packed_to_nhwc_5x5_s1_with_multiplier_output2x4_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_packed_to_nhwc_3x3_s2_with_multiplier_output2x4_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_packed_to_nhwc_5x5_s1_with_multiplier_output4x2_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_packed_to_nhwc_3x3_s2_with_multiplier_output2x4_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_packed_to_nhwc_5x5_s1_with_multiplier_output4x2_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8s8u8q_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/depthwise_fp16.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_generic_output9_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_generic_output9_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_nhwc_generic_output9_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8qs_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_nhwc_generic_output9_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8s8u8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8s8u8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8s8u8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8s8u8q_nhwc_generic_output9_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8qa_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8qa_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8qa_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/interleaves/a64_s8q_3x3_dot.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/interleaves/a64_u8q_3x3_dot.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/interleaves/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/interleaves/generic_quantized_dot_product.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/premultiply.cpp",
              "src/cpu/kernels/depthwiseconv2d/generic/neon/impl.cpp"
              ],
              "fp16":["src/cpu/kernels/depthwiseconv2d/generic/neon/fp16.cpp"],
              "fp32":["src/cpu/kernels/depthwiseconv2d/generic/neon/fp32.cpp"],
              "qasymm8":["src/cpu/kernels/depthwiseconv2d/generic/neon/qasymm8.cpp"],
              "qasymm8_signed":["src/cpu/kernels/depthwiseconv2d/generic/neon/qasymm8_signed.cpp"]
          },
          "sve": {
            "common": [
              "src/core/NEON/kernels/arm_conv/depthwise/interleaves/sve_s8q_3x3_dot.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/interleaves/sve_u8q_3x3_dot.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_generic_output9_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_packed_to_nhwc_3x3_s2_with_multiplier_output3x3_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_packed_to_nhwc_5x5_s1_with_multiplier_output2x4_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_packed_to_nhwc_3x3_s2_with_multiplier_output2x4_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_packed_to_nhwc_5x5_s1_with_multiplier_output4x2_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8qs_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_packed_to_nhwc_3x3_s2_with_multiplier_output2x4_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_packed_to_nhwc_5x5_s1_with_multiplier_output4x2_dot_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8s8u8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8s8u8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8s8u8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_direct.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_indirect.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_planar_3x3_s1_4rows_mla_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_planar_3x3_s2_4rows_mla_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_planar_5x5_s1_4rows_mla_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32_planar_5x5_s2_4rows_mla_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32bf16fp32_planar_3x3_s1_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32bf16fp32_planar_3x3_s2_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32bf16fp32_planar_5x5_s1_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_fp32bf16fp32_planar_5x5_s2_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_s8q_planar_3x3_s1_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_s8q_planar_3x3_s2_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_s8q_planar_5x5_s1_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_s8q_planar_5x5_s2_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_u8q_planar_3x3_s1_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_u8q_planar_3x3_s2_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_u8q_planar_5x5_s1_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_u8q_planar_5x5_s2_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_u8s8u8q_planar_3x3_s1_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_u8s8u8q_planar_3x3_s2_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_u8s8u8q_planar_5x5_s1_4rows_dot_za/generic.cpp",
              "src/core/NEON/kernels/arm_conv/depthwise/kernels/sme2_u8s8u8q_planar_5x5_s2_4rows_dot_za/generic.cpp"
            ]
          }
        }
      },
      "Dequantize": {
        "files": {
          "common": [
            "src/cpu/operators/CpuDequantize.cpp",
            "src/cpu/kernels/CpuDequantizeKernel.cpp",
            "src/runtime/NEON/functions/NEDequantizationLayer.cpp"
          ]
        }
      },
      "DetectionPostProcess": {
        "deps": [ "Dequantize" ],
        "files": {
          "common" : [ "src/runtime/NEON/functions/NEDetectionPostProcessLayer.cpp" ]
        }
      },
      "Conv3d": {
        "deps": [
          "Activation"
        ],
        "files": {
          "common": [
            "src/cpu/operators/CpuDirectConv3d.cpp",
            "src/cpu/kernels/CpuDirectConv3dKernel.cpp",
            "src/runtime/NEON/functions/NEConv3D.cpp"
          ]
        }
      },
      "ElementwiseBinary": {
        "files": {
          "common": [
            "src/cpu/operators/CpuElementwise.cpp",
            "src/cpu/kernels/CpuElementwiseKernel.cpp",
            "src/runtime/NEON/functions/NEElementwiseOperations.cpp"
          ],
          "neon":{
            "fp32": ["src/cpu/kernels/elementwise_binary/generic/neon/fp32.cpp"],
            "fp16": ["src/cpu/kernels/elementwise_binary/generic/neon/fp16.cpp"],
            "integer": ["src/cpu/kernels/elementwise_binary/generic/neon/integer.cpp"],
            "qasymm8": ["src/cpu/kernels/elementwise_binary/generic/neon/qasymm8.cpp"],
            "qasymm8_signed": ["src/cpu/kernels/elementwise_binary/generic/neon/qasymm8_signed.cpp"]
          },
          "sve": {
            "common": ["src/cpu/kernels/elementwise_binary/generic/sve/impl.cpp" ],
            "integer": ["src/cpu/kernels/elementwise_binary/generic/sve/integer.cpp"],
            "fp32": ["src/cpu/kernels/elementwise_binary/generic/sve/fp32.cpp"],
            "fp16": ["src/cpu/kernels/elementwise_binary/generic/sve/fp16.cpp"]

          },
          "sve2":{
            "qasymm8": ["src/cpu/kernels/elementwise_binary/generic/sve2/qasymm8.cpp"],
            "qasymm8_signed": ["src/cpu/kernels/elementwise_binary/generic/sve2/qasymm8_signed.cpp"]
          }
        }
      },
      "ElementwiseUnary":{
        "deps": [ "LUT" ],
        "files": {
          "common": [
            "src/cpu/operators/CpuElementwiseUnary.cpp",
            "src/cpu/kernels/CpuElementwiseUnaryKernel.cpp",
            "src/runtime/NEON/functions/NEElementwiseUnaryLayer.cpp"
          ],
          "neon": {
            "common":["src/cpu/kernels/elementwise_unary/generic/neon/impl.cpp"],
            "integer": ["src/cpu/kernels/elementwise_unary/generic/neon/integer.cpp"],
            "fp32": ["src/cpu/kernels/elementwise_unary/generic/neon/fp32.cpp"],
            "fp16": ["src/cpu/kernels/elementwise_unary/generic/neon/fp16.cpp"],
            "qasymm8": [
              "src/cpu/kernels/elementwise_unary/generic/neon/q8.cpp",
              "src/cpu/kernels/elementwise_unary/generic/neon/qasymm8.cpp"
            ],
            "qasymm8_signed": [
              "src/cpu/kernels/elementwise_unary/generic/neon/q8.cpp",
              "src/cpu/kernels/elementwise_unary/generic/neon/qasymm8_signed.cpp"
            ]
          },
          "sve": {
            "common": ["src/cpu/kernels/elementwise_unary/generic/sve/impl.cpp" ],
            "integer": ["src/cpu/kernels/elementwise_unary/generic/sve/integer.cpp"],
            "fp32": ["src/cpu/kernels/elementwise_unary/generic/sve/fp32.cpp"],
            "fp16": ["src/cpu/kernels/elementwise_unary/generic/sve/fp16.cpp"]
          },
          "sve2": {
            "qasymm8": ["src/cpu/kernels/elementwise_unary/generic/sve2/q8.cpp"],
            "qasymm8_signed": ["src/cpu/kernels/elementwise_unary/generic/sve2/q8.cpp"]
          }
        }
      },
      "FFT1D": {
        "deps": [ "Reduction" ],
        "files": {
          "common": [
            "src/core/NEON/kernels/NEFFTDigitReverseKernel.cpp",
            "src/core/NEON/kernels/NEFFTRadixStageKernel.cpp",
            "src/core/NEON/kernels/NEFFTScaleKernel.cpp",
            "src/runtime/NEON/functions/NEFFT1D.cpp"
          ]
        }
      },
      "FFT2D": {
        "deps": [ "FFT1D" ],
        "files": {
          "common": [
            "src/runtime/NEON/functions/NEFFT2D.cpp"
          ]
        }
      },
      "Fill": {
        "files": {
          "common": [
            "src/cpu/operators/CpuFill.cpp",
            "src/cpu/kernels/CpuFillKernel.cpp",
            "src/runtime/NEON/functions/NEFill.cpp"
          ]
        }
      },
      "Flatten": {
        "deps: ": [ "Reshape" ],
        "files": {
          "common": [
            "src/cpu/operators/CpuFlatten.cpp",
            "src/runtime/NEON/functions/NEFlattenLayer.cpp"
          ]
        }
      },
      "Floor": {
        "files": {
          "common": [
            "src/cpu/operators/CpuFloor.cpp",
            "src/cpu/kernels/CpuFloorKernel.cpp",
            "src/runtime/NEON/functions/NEFloor.cpp"
          ],
          "neon": {
            "fp32": [ "src/cpu/kernels/floor/neon/fp32.cpp" ],
            "fp16": [ "src/cpu/kernels/floor/neon/fp16.cpp" ]
          }
        }
      },
      "FullyConnected": {
        "deps": [ "Flatten", "Gemm", "Transpose"],
        "files": {
          "common": [
            "src/cpu/kernels/CpuConvertFullyConnectedWeightsKernel.cpp",
            "src/cpu/operators/CpuConvertFullyConnectedWeights.cpp",
            "src/cpu/operators/CpuFullyConnected.cpp",
            "src/runtime/NEON/functions/NEConvertFullyConnectedWeights.cpp",
            "src/runtime/NEON/functions/NEFullyConnectedLayer.cpp"
          ]
        }
      },
      "Gather": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEGatherKernel.cpp",
            "src/runtime/NEON/functions/NEGather.cpp"
          ]
        }
      },
      "Gemm": {
        "deps": [ "Quantize", "Add"],
          "files": {
          "common": [
            "src/cpu/kernels/CpuConvertQuantizedSignednessKernel.cpp",
            "src/cpu/kernels/CpuGemmMatrixAdditionKernel.cpp",
            "src/cpu/kernels/CpuGemmMatrixMultiplyKernel.cpp",
            "src/cpu/kernels/CpuGemmTranspose1xWKernel.cpp",
            "src/cpu/kernels/CpuGemmInterleave4x4Kernel.cpp",
            "src/cpu/kernels/CpuGemmLowpQuantizeDownInt32ScaleKernel.cpp",
            "src/cpu/kernels/CpuGemmLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel.cpp",
            "src/cpu/kernels/CpuGemmLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel.cpp",
            "src/cpu/kernels/CpuGemmLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel.cpp",
            "src/cpu/kernels/CpuGemmLowpMatrixMultiplyKernel.cpp",
            "src/cpu/kernels/CpuGemmLowpMatrixReductionKernel.cpp",
            "src/cpu/kernels/CpuGemmLowpOffsetContributionOutputStageKernel.cpp",
            "src/cpu/kernels/CpuGemmLowpOffsetContributionKernel.cpp",
            "src/cpu/operators/CpuGemm.cpp",
            "src/cpu/operators/CpuGemmLowpOutputStage.cpp",
            "src/cpu/operators/CpuGemmLowpMatrixMultiplyCore.cpp",
            "src/runtime/NEON/functions/NEGEMM.cpp",
            "src/runtime/NEON/functions/NEGEMMLowpMatrixMultiplyCore.cpp",
            "src/runtime/NEON/functions/NEGEMMLowpOutputStage.cpp"
          ],
          "neon": {
            "common": [
              "src/core/NEON/kernels/arm_gemm/gemm_bf16.cpp",
              "src/core/NEON/kernels/arm_gemm/gemm_fp16.cpp",
              "src/core/NEON/kernels/arm_gemm/gemm_fp32.cpp",
              "src/core/NEON/kernels/arm_gemm/gemm_int16.cpp",
              "src/core/NEON/kernels/arm_gemm/gemm_int8.cpp",
              "src/core/NEON/kernels/arm_gemm/gemm_qint8.cpp",
              "src/core/NEON/kernels/arm_gemm/gemm_quint8.cpp",
              "src/core/NEON/kernels/arm_gemm/gemm_uint16.cpp",
              "src/core/NEON/kernels/arm_gemm/gemm_uint8.cpp",
              "src/core/NEON/kernels/arm_gemm/interleave_indirect.cpp",
              "src/core/NEON/kernels/arm_gemm/mergeresults-fp16.cpp",
              "src/core/NEON/kernels/arm_gemm/mergeresults.cpp",
              "src/core/NEON/kernels/arm_gemm/misc.cpp",
              "src/core/NEON/kernels/arm_gemm/quantized.cpp",
              "src/core/NEON/kernels/arm_gemm/rowsum_indirect_s8.cpp",
              "src/core/NEON/kernels/arm_gemm/rowsum_indirect_u8.cpp",
              "src/core/NEON/kernels/arm_gemm/transform.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_s16_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_s8_4x4/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_s8_8x12/a55r1.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_s8_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_s8_8x12/x1.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_u16_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_u8_4x4/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_u8_8x12/a55r1.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_u8_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_u8_8x12/x1.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hgemm_8x24/a55r1.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hgemm_8x24/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hgemm_8x24/x1.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_bf16fp32_dot_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_bf16fp32_mmla_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp16_mla_6x32/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp16_mla_6x32/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_4x24/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_4x24/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_6x16/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_8x4/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_8x4/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32bf16fp32_mmla_4x24/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32bf16fp32_mmla_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qa_dot_4x16/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qa_dot_4x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qa_mmla_4x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qs_dot_6x16/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qs_dot_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qs_mmla_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8s32_dot_6x16/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8s32_dot_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8s32_mmla_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8qa_dot_4x16/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8qa_dot_4x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8qa_mmla_4x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8u32_dot_6x16/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8u32_dot_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8u32_mmla_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_bf16fp32_dot_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_bf16fp32_dot_8x12/x1.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_bf16fp32_mmla_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_bf16fp32_mmla_8x12/a510.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_s8s32_mmla_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_s8s32_mmla_8x12/a510.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_u8u32_mmla_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_u8u32_mmla_8x12/a510.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x12/a53.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x12/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x12/a55r1.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x12/x1.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x6/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_fp32_mla_6x4/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_fp32_mla_8x4/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_s8s32_dot_6x4/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_s8s32_dot_6x4/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_s8s32_dot_8x4/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_s8s32_dot_8x4/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_u8u32_dot_6x4/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_u8u32_dot_6x4/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_u8u32_dot_8x4/a55.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_u8u32_dot_8x4/generic.cpp",
              "src/cpu/kernels/gemm_matrix_mul/generic/neon/impl.cpp",
              "src/cpu/kernels/gemm_matrix_add/generic/neon/impl.cpp"
            ],
            "fp32":["src/cpu/kernels/gemm_matrix_mul/generic/neon/fp32.cpp",
                    "src/cpu/kernels/gemm_matrix_add/generic/neon/fp32.cpp"],
            "fp16":["src/cpu/kernels/gemm_matrix_mul/generic/neon/fp16.cpp",
                    "src/cpu/kernels/gemm_matrix_add/generic/neon/fp16.cpp"],
            "estate32": [
              "src/core/NEON/kernels/arm_gemm/kernels/a32_sgemm_8x6/a53.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a32_sgemm_8x6/a55r1.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a32_sgemm_8x6/generic.cpp"
            ],
            "estate64": [
              "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemv_pretransposed/generic.cpp"
            ],
            "fixed_format_kernels": [
              "src/core/NEON/kernels/arm_gemm/kernels/a64_ffhybrid_bf16fp32_mmla_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_ffhybrid_fp16_mla_6x32/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_ffhybrid_fp32_mla_6x16/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_ffhybrid_fp32bf16fp32_mmla_4x24/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_ffinterleaved_bf16fp32_dot_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_ffinterleaved_bf16fp32_mmla_8x12/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_ffinterleaved_fp16_mla_8x24/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/a64_ffinterleaved_fp32_mla_8x12/generic.cpp"
            ]
          },
          "sve": {
            "common": [
              "src/core/NEON/kernels/arm_gemm/interleave_indirect-sve.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_gemv_bf16fp32_dot_16VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_gemv_fp32_mla_16VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_gemv_fp32bf16fp32_dot_16VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_gemv_s8qa_dot_16VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_gemv_u8qa_dot_16VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_bf16fp32_mopa_1VLx4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_bf16fp32_mopa_2VLx2VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_bf16fp32_mopa_4VLx1VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_fp16fp32fp16_mopa_1VLx4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_fp16fp32fp16_mopa_2VLx2VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_fp16fp32fp16_mopa_4VLx1VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_fp32_mopa_1VLx4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_fp32_mopa_2VLx2VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_fp32_mopa_4VLx1VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_s8q_mopa_1VLx4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_s8q_mopa_2VLx2VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_s8q_mopa_4VLx1VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_s8s32_mopa_1VLx4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_s8s32_mopa_2VLx2VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_s8s32_mopa_4VLx1VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_u8q_mopa_1VLx4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_u8q_mopa_2VLx2VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sme2_interleaved_nomerge_u8q_mopa_4VLx1VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_bf16fp32_dot_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_bf16fp32_mmla_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp16_mla_6x4VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp16_mla_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32_mla_6x4VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32_mla_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32_mla_8x1VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32_mla_8x1VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32bf16fp32_mmla_4x6VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32bf16fp32_mmla_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8qa_dot_4x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8qa_mmla_4x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8qs_dot_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8qs_mmla_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8s32_dot_6x4VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8s32_dot_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8s32_mmla_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_u8qa_dot_4x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_u8qa_mmla_4x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_u8u32_dot_6x4VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_u8u32_dot_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_u8u32_mmla_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_bf16fp32_dot_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_bf16fp32_mmla_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_fp16_mla_8x3VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_fp16_mla_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_fp32_mla_8x3VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_fp32_mla_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_fp32_mmla_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_s8s32_dot_8x3VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_s8s32_dot_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_s8s32_mmla_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_u8u32_dot_8x3VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_u8u32_dot_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_u8u32_mmla_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/mergeresults-sve.cpp",
              "src/core/NEON/kernels/arm_gemm/transform-sve.cpp",
              "src/core/NEON/kernels/arm_gemm/misc-sve.cpp"
            ],
            "fixed_format_kernels": [
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffhybrid_bf16fp32_mmla_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffhybrid_fp16_mla_6x4VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffhybrid_fp16_mla_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffhybrid_fp32_mla_6x4VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffhybrid_fp32_mla_6x4VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffhybrid_fp32bf16fp32_mmla_4x6VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffinterleaved_bf16fp32_mmla_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffinterleaved_fp16_mla_8x3VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffinterleaved_fp16_mla_8x3VL/generic.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffinterleaved_fp32_mla_8x3VL/a64fx.cpp",
              "src/core/NEON/kernels/arm_gemm/kernels/sve_ffinterleaved_fp32_mla_8x3VL/generic.cpp"
	    ]
          }
        }
      },
      "GenerateProposals": {
        "deps": [ "BoundingBoxTransform", "Dequantize", "Pad", "Permute", "Quantize", "Reshape" ],
        "files": {
          "common": [
            "src/core/NEON/kernels/NEGenerateProposalsLayerKernel.cpp",
            "src/runtime/NEON/functions/NEGenerateProposalsLayer.cpp"
          ],
          "neon":{
            "common":["src/cpu/kernels/genproposals/generic/neon/impl.cpp"],
            "fp16":["src/cpu/kernels/genproposals/generic/neon/fp16.cpp"],
            "fp32":["src/cpu/kernels/genproposals/generic/neon/fp32.cpp"],
            "qsymm16":["src/cpu/kernels/genproposals/generic/neon/qsymm16.cpp"]
          }
        }
      },
      "InstanceNormalize": {
        "deps": [ "Permute", "Reduction" ],
        "files": {
          "common": [
            "src/core/NEON/kernels/NEInstanceNormalizationLayerKernel.cpp",
            "src/runtime/NEON/functions/NEInstanceNormalizationLayer.cpp"
          ],
          "neon":{
            "common":["src/cpu/kernels/instancenorm/generic/neon/impl.cpp"],
            "fp16":["src/cpu/kernels/instancenorm/generic/neon/fp16.cpp"],
            "fp32":["src/cpu/kernels/instancenorm/generic/neon/fp32.cpp"]
          }
        }
      },
      "L2Normalize": {
        "deps": [ "Reduction" ],
        "files": {
          "common": [
            "src/core/NEON/kernels/NEL2NormalizeLayerKernel.cpp",
            "src/runtime/NEON/functions/NEL2NormalizeLayer.cpp"
          ],
          "neon":{
            "common":["src/cpu/kernels/l2normlayer/generic/neon/impl.cpp"],
            "fp32":["src/cpu/kernels/l2normlayer/generic/neon/fp32.cpp"],
            "fp16":["src/cpu/kernels/l2normlayer/generic/neon/fp16.cpp"]
          }
        }
      },
      "Logical": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NELogicalKernel.cpp",
            "src/runtime/NEON/functions/NELogical.cpp"
          ]
        }
      },
      "LUT": {
        "files": {
          "common": [],
          "neon":{
            "qasymm8": ["src/cpu/kernels/lut/generic/neon/u8.cpp"],
            "qasymm8_signed": ["src/cpu/kernels/lut/generic/neon/u8.cpp"]
          },
          "sve2": {
            "qasymm8": ["src/cpu/kernels/lut/generic/sve2/u8.cpp"],
            "qasymm8_signed": ["src/cpu/kernels/lut/generic/sve2/u8.cpp"]
          }
        }
      },
      "LSTM": {
        "deps": [
          "Activation",
          "Concatenate",
          "Copy",
          "Dequantize",
          "ElementwiseBinary",
          "Fill",
          "FullyConnected",
          "Gemm",
          "MeanStdDevNormalize",
          "Mul",
          "Quantize",
          "Slice",
          "Transpose"
        ],
        "files": {
          "common": [
            "src/core/NEON/kernels/NEQLSTMLayerNormalizationKernel.cpp",
            "src/runtime/NEON/functions/NELSTMLayer.cpp",
            "src/runtime/NEON/functions/NELSTMLayerQuantized.cpp",
            "src/runtime/NEON/functions/NEQLSTMLayer.cpp"
          ]
        }
      },
      "MaxUnpool2d": {
        "deps": [ "Fill" ],
        "files": {
          "common": [
            "src/cpu/kernels/CpuMaxUnpoolingLayerKernel.cpp",
            "src/runtime/NEON/functions/NEMaxUnpoolingLayer.cpp",
            "src/cpu/operators/CpuMaxUnpooling.cpp"
          ],
          "neon":{
            "fp32":["src/cpu/kernels/maxunpool/generic/neon/fp32.cpp"],
            "fp16":["src/cpu/kernels/maxunpool/generic/neon/fp16.cpp"],
            "qasymm8":["src/cpu/kernels/maxunpool/generic/neon/qasymm8.cpp"],
            "qasymm8_signed":[ "src/cpu/kernels/maxunpool/generic/neon/qasymm8_signed.cpp"],
            "common":["src/cpu/kernels/maxunpool/generic/neon/impl.cpp"]
          }
        }
      },
      "Mean": {
        "deps" : [ "Reduction" ],
        "files": {
          "common": [ "src/runtime/NEON/functions/NEReduceMean.cpp" ]
        }
      },
      "MeanStdDevNormalize": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEMeanStdDevNormalizationKernel.cpp",
            "src/runtime/NEON/functions/NEMeanStdDevNormalizationLayer.cpp"
          ],
        "neon":{
          "common":["src/cpu/kernels/meanstddevnorm/generic/neon/impl.cpp"],
          "fp32":["src/cpu/kernels/meanstddevnorm/generic/neon/fp32.cpp"],
          "fp16":["src/cpu/kernels/meanstddevnorm/generic/neon/fp16.cpp"],
          "qasymm8":["src/cpu/kernels/meanstddevnorm/generic/neon/qasymm8.cpp"]
        }
        }
      },
      "MatMul" : {
        "deps": [ "Transpose" ],
        "files": {
          "common": [
            "src/cpu/operators/CpuMatMul.cpp",
            "src/runtime/NEON/functions/NEMatMul.cpp"
          ]
        }
      },
      "Mul": {
        "files": {
          "common": [
            "src/cpu/operators/CpuMul.cpp",
            "src/cpu/kernels/CpuMulKernel.cpp",
            "src/runtime/NEON/functions/NEPixelWiseMultiplication.cpp"
          ]
        }
      },
      "Normalize": {
        "deps": [ "Mul" ],
        "files": {
          "common": [
            "src/core/NEON/kernels/NENormalizationLayerKernel.cpp",
            "src/runtime/NEON/functions/NENormalizationLayer.cpp"
          ]
        }
      },
      "Pad": {
        "deps": [ "Concatenate", "Copy", "StridedSlice" ],
        "files": {
          "common": [
            "src/core/NEON/kernels/NEPadLayerKernel.cpp",
            "src/runtime/NEON/functions/NEPadLayer.cpp"
          ]
        }
      },
      "Permute": {
        "files": {
          "common": [
            "src/cpu/operators/CpuPermute.cpp",
            "src/cpu/kernels/CpuPermuteKernel.cpp",
            "src/runtime/NEON/functions/NEPermute.cpp"
          ]
        }
      },
      "Pool2d": {
        "files": {
          "common": [
            "src/cpu/operators/CpuPool2d.cpp",
            "src/cpu/kernels/CpuPool2dKernel.cpp",
            "src/cpu/kernels/internal/CpuPool2dAssemblyWrapperKernel.cpp",
            "src/runtime/NEON/functions/NEPoolingLayer.cpp"
          ],
          "neon": {
            "common": [
              "src/core/NEON/kernels/arm_conv/pooling/kernels/cpp_nhwc_1x1_stride_any_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/pooling_fp16.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/pooling_fp32.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/pooling_s8.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/pooling_s8q.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/pooling_u8.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/pooling_u8q.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp16_nhwc_avg_3x3_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp16_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp16_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp16_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp32_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp32_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp32_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_s8_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_s8_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_s8_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_s8q_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_s8q_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_u8_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_u8_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_u8_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_u8q_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_u8q_nhwc_max_generic_depthfirst/generic.cpp"
            ],
            "nchw": [ "src/cpu/kernels/pool2d/neon/nchw/all.cpp" ],
            "fp16": [ "src/cpu/kernels/pool2d/neon/fp16.cpp" ],
            "fp32": [ "src/cpu/kernels/pool2d/neon/fp32.cpp" ],
            "qasymm8":[ "src/cpu/kernels/pool2d/neon/qasymm8.cpp" ],
            "qasymm8_signed":["src/cpu/kernels/pool2d/neon/qasymm8_signed.cpp"]
          },
          "sve": {
            "common": [
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp16_nhwc_avg_3x3_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp16_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp16_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp16_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp32_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp32_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp32_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_s8_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_s8_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_s8_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_s8q_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_s8q_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_u8_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_u8_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_u8_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_u8q_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_u8q_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_fp16_nhwc_avg_3x3_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_fp16_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_fp16_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_fp16_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_fp32_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_fp32_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_fp32_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_s8_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_s8_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_s8_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_s8q_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_s8q_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_u8_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_u8_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_u8_nhwc_max_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_u8q_nhwc_avg_generic_depthfirst/generic.cpp",
              "src/core/NEON/kernels/arm_conv/pooling/kernels/sme_u8q_nhwc_max_generic_depthfirst/generic.cpp"
            ]
          }
        }
      },
      "Pool3d": {
        "files": {
          "common": [
            "src/cpu/operators/CpuPool3d.cpp",
            "src/cpu/kernels/CpuPool3dKernel.cpp",
            "src/runtime/NEON/functions/NEPooling3dLayer.cpp"
          ],
          "neon": {
            "common":         [ "src/cpu/kernels/pool3d/neon/impl.cpp" ],
            "fp16":           [ "src/cpu/kernels/pool3d/neon/fp16.cpp" ],
            "fp32":           [ "src/cpu/kernels/pool3d/neon/fp32.cpp" ],
            "qasymm8":        [ "src/cpu/kernels/pool3d/neon/qasymm8.cpp" ],
            "qasymm8_signed": [ "src/cpu/kernels/pool3d/neon/qasymm8_signed.cpp" ]
          }
        }
      },
      "PRelu": {
        "deps": [ "ElementwiseBinary" ],
        "files": {
          "common": [
            "src/runtime/NEON/functions/NEPReluLayer.cpp"
          ]
        }
      },
      "PriorBox": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEPriorBoxLayerKernel.cpp",
            "src/runtime/NEON/functions/NEPriorBoxLayer.cpp"
          ]
        }
      },
      "Quantize": {
        "files": {
          "common": [
            "src/cpu/operators/CpuQuantize.cpp",
            "src/cpu/kernels/CpuQuantizeKernel.cpp",
            "src/runtime/NEON/functions/NEQuantizationLayer.cpp"
          ]
        }
      },
      "Range": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NERangeKernel.cpp",
            "src/runtime/NEON/functions/NERange.cpp"
          ],
          "neon": {
            "common":  [ "src/cpu/kernels/range/generic/neon/impl.cpp" ],
            "fp32":    [ "src/cpu/kernels/range/generic/neon/fp32.cpp" ],
            "fp16":    [ "src/cpu/kernels/range/generic/neon/fp16.cpp" ],
            "integer": [ "src/cpu/kernels/range/generic/neon/integer.cpp"   ]
          }
        }
      },
      "Reduction":{
        "deps": [ "Reshape" ],
        "files": {
          "common": [
            "src/core/NEON/kernels/NEReductionOperationKernel.cpp",
            "src/runtime/NEON/functions/NEReductionOperation.cpp"
          ]
        }
      },
      "Reorg": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEReorgLayerKernel.cpp",
            "src/runtime/NEON/functions/NEReorgLayer.cpp"
          ]
        }
      },
      "Reshape": {
        "files": {
          "common": [
            "src/cpu/operators/CpuReshape.cpp",
            "src/cpu/kernels/CpuReshapeKernel.cpp",
            "src/runtime/NEON/functions/NEReshapeLayer.cpp"
          ]
        }
      },
      "Reorder": {
        "files": {
          "common": [
            "src/runtime/NEON/functions/NEReorderLayer.cpp",
            "src/core/NEON/kernels/NEReorderKernel.cpp"
          ]
        }
      },
      "Reverse": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEReverseKernel.cpp",
            "src/runtime/NEON/functions/NEReverse.cpp"
          ]
        }
      },
      "RNN": {
        "deps": [ "Activation", "Add", "FullyConnected", "Gemm"],
        "files": {
          "common": [ "src/runtime/NEON/functions/NERNNLayer.cpp" ]
        }
      },
      "ROIAlign": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEROIAlignLayerKernel.cpp",
            "src/runtime/NEON/functions/NEROIAlignLayer.cpp"
          ],
          "neon":{
            "common":["src/cpu/kernels/roialign/generic/neon/impl.cpp"],
            "fp32":["src/cpu/kernels/roialign/generic/neon/fp32.cpp"],
            "fp16":["src/cpu/kernels/roialign/generic/neon/fp16.cpp"],
            "qasymm8":["src/cpu/kernels/roialign/generic/neon/qasymm8.cpp"],
            "qasymm8_signed":["src/cpu/kernels/roialign/generic/neon/qasymm8_signed.cpp"]
          }
        }
      },
      "ROIPool2d": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEROIPoolingLayerKernel.cpp",
            "src/runtime/NEON/functions/NEROIPoolingLayer.cpp"
          ]
        }
      },
      "Scale": {
        "files": {
          "common": [
            "src/cpu/operators/CpuScale.cpp",
            "src/cpu/kernels/CpuScaleKernel.cpp",
            "src/runtime/NEON/functions/NEScale.cpp"
          ],
          "sve": {
            "fp16": [ "src/cpu/kernels/scale/sve/fp16.cpp" ],
            "fp32": [ "src/cpu/kernels/scale/sve/fp32.cpp" ],
            "integer": [ "src/cpu/kernels/scale/sve/integer.cpp" ],
            "qasymm8": [ "src/cpu/kernels/scale/sve/qasymm8.cpp" ],
            "qasymm8_signed": [ "src/cpu/kernels/scale/sve/qasymm8_signed.cpp" ]
          },
          "neon": {
            "fp16": [ "src/cpu/kernels/scale/neon/fp16.cpp" ],
            "integer": [ "src/cpu/kernels/scale/neon/integer.cpp" ],
            "qasymm8": [ "src/cpu/kernels/scale/neon/qasymm8.cpp", "src/cpu/kernels/scale/neon/integer.cpp" ],
            "qasymm8_signed": [ "src/cpu/kernels/scale/neon/qasymm8_signed.cpp", "src/cpu/kernels/scale/neon/integer.cpp" ]
          }
        }
      },
      "Select": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NESelectKernel.cpp",
            "src/runtime/NEON/functions/NESelect.cpp"
          ],
          "neon": {
            "common": [ "src/cpu/kernels/select/generic/neon/impl.cpp" ],
            "fp32": [ "src/cpu/kernels/select/generic/neon/fp32.cpp" ],
            "fp16": [ "src/cpu/kernels/select/generic/neon/fp16.cpp" ],
            "integer": [ "src/cpu/kernels/select/generic/neon/integer.cpp"  ]
          }
        }
      },
      "Slice": {
        "deps": [ "StridedSlice" ],
        "files": {
          "common": [ "src/runtime/NEON/functions/NESlice.cpp" ]
        }
      },
      "Softmax": {
        "deps": [
          "Permute"
        ],
        "files": {
          "common": [
            "src/cpu/operators/CpuSoftmax.cpp",
            "src/cpu/kernels/CpuSoftmaxKernel.cpp",
            "src/runtime/NEON/functions/NESoftmaxLayer.cpp"
          ],
          "neon":{
            "common":["src/cpu/kernels/softmax/generic/neon/impl.cpp"],
            "fp32": ["src/cpu/kernels/softmax/generic/neon/fp32.cpp"],
            "fp16": ["src/cpu/kernels/softmax/generic/neon/fp16.cpp"],
            "qasymm8":[ "src/cpu/kernels/softmax/generic/neon/qasymm8.cpp"],
            "qasymm8_signed":["src/cpu/kernels/softmax/generic/neon/qasymm8_signed.cpp"]
          },
          "sve": {
            "common": [ "src/cpu/kernels/softmax/generic/sve/impl.cpp" ],
            "fp32": ["src/cpu/kernels/softmax/generic/sve/fp32.cpp"],
            "fp16": ["src/cpu/kernels/softmax/generic/sve/fp16.cpp"],
            "qasymm8": ["src/cpu/kernels/softmax/generic/sve/qasymm8.cpp" ],
            "qasymm8_signed": ["src/cpu/kernels/softmax/generic/sve/qasymm8_signed.cpp"]
          },
          "sve2":{
            "common" :["src/cpu/kernels/softmax/generic/sve2/impl.cpp"],
            "qasymm8":[ "src/cpu/kernels/softmax/generic/sve2/qasymm8.cpp"],
            "qasymm8_signed":["src/cpu/kernels/softmax/generic/sve2/qasymm8_signed.cpp"]
          }
        }
      },
      "SpaceToBatch": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NESpaceToBatchLayerKernel.cpp",
            "src/runtime/NEON/functions/NESpaceToBatchLayer.cpp"
          ]
        }
      },
      "SpaceToDepth": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NESpaceToDepthLayerKernel.cpp",
            "src/runtime/NEON/functions/NESpaceToDepthLayer.cpp"
          ]
        }
      },
      "Split": {
        "deps": [ "StridedSlice" ],
        "files": {
          "common": [
            "src/runtime/NEON/functions/NESplit.cpp"
          ]
        }
      },
      "Stack": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEStackLayerKernel.cpp",
            "src/runtime/NEON/functions/NEStackLayer.cpp"
          ]
        }
      },
      "StridedSlice": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NEStridedSliceKernel.cpp",
            "src/runtime/NEON/functions/NEStridedSlice.cpp"
          ]
        }
      },
      "Sub": {
        "files": {
          "common": [
            "src/cpu/operators/CpuSub.cpp",
            "src/cpu/kernels/CpuSubKernel.cpp",
            "src/runtime/NEON/functions/NEArithmeticSubtraction.cpp",
            "src/cpu/kernels/sub/neon/qasymm8.cpp",
            "src/cpu/kernels/sub/neon/qasymm8_signed.cpp",
            "src/cpu/kernels/sub/neon/qsymm16.cpp"
          ]
        }
      },
      "Tile": {
        "files": {
          "common": [
            "src/core/NEON/kernels/NETileKernel.cpp",
            "src/runtime/NEON/functions/NETile.cpp"
          ]
        }
      },
      "Transpose": {
        "files": {
          "common": [
            "src/cpu/kernels/CpuTransposeKernel.cpp",
            "src/cpu/operators/CpuTranspose.cpp",
            "src/runtime/NEON/functions/NETranspose.cpp"
          ]
        }
      },
      "Unstack": {
        "deps": [ "StridedSlice" ],
        "files": {
          "common": [ "src/runtime/NEON/functions/NEUnstack.cpp" ]
        }
      }
    }
  },
  "experimental": {
    "dynamic_fusion": {
      "common": [
        "src/dynamic_fusion/runtime/gpu/cl/ClKernelRuntime.cpp",
        "src/dynamic_fusion/runtime/gpu/cl/ClWorkloadRuntime.cpp",
        "src/dynamic_fusion/sketch/attributes/CastAttributes.cpp",
        "src/dynamic_fusion/sketch/attributes/ClampAttributes.cpp",
        "src/dynamic_fusion/sketch/attributes/Conv2dAttributes.cpp",
        "src/dynamic_fusion/sketch/attributes/DepthwiseConv2dAttributes.cpp",
        "src/dynamic_fusion/sketch/attributes/Pool2dAttributes.cpp",
        "src/dynamic_fusion/sketch/attributes/ResizeAttributes.cpp",
        "src/dynamic_fusion/sketch/attributes/SoftmaxAttributes.cpp",
        "src/dynamic_fusion/sketch/attributes/ReshapeAttributes.cpp",
        "src/dynamic_fusion/sketch/gpu/GpuKernelArgument.cpp",
        "src/dynamic_fusion/sketch/gpu/GpuKernelComponentGraph.cpp",
        "src/dynamic_fusion/sketch/gpu/GpuKernelComponentGroup.cpp",
        "src/dynamic_fusion/sketch/gpu/GpuKernelComponentStream.cpp",
        "src/dynamic_fusion/sketch/gpu/GpuLogicalKernel.cpp",
        "src/dynamic_fusion/sketch/gpu/GpuOperatorGroup.cpp",
        "src/dynamic_fusion/sketch/gpu/GpuWorkloadContext.cpp",
        "src/dynamic_fusion/sketch/gpu/GpuWorkloadSketch.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentActivation.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentCast.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentDepthwiseConv2d.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentDirectConv2d.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentPool2d.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentElementwiseBinary.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentLogits1DMaxShiftExpSum.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentLogits1DNorm.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentReshape.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentResize.cpp",
        "src/dynamic_fusion/sketch/gpu/components/cl/ClComponentStore.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuAdd.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuCast.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuClamp.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuConv2d.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuDepthwiseConv2d.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuMul.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuReshape.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuPool2d.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuOutput.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuResize.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuSigmoid.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuSoftmax.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuSub.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/GpuTanh.cpp",
        "src/dynamic_fusion/sketch/gpu/operators/internal/GpuElementwiseBinaryCommon.cpp"
      ],
      "template_writer": [
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateActivation.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateCast.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateDepthwiseConv2d.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateDirectConv2d.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplatePool2d.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateElementwiseBinary.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateLogits1DMaxShiftExpSum.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateLogits1DNorm.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateReshape.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateResize.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateStore.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateWriter.cpp",
        "src/dynamic_fusion/sketch/gpu/template_writer/GpuKernelVariableTable.cpp"
      ],
      "ckw_driver": [
        "src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwComponentArgument.cpp",
        "src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwDriver.cpp",
        "src/dynamic_fusion/sketch/gpu/ckw_driver/components/GpuCkwActivation.cpp",
        "src/dynamic_fusion/sketch/gpu/ckw_driver/components/GpuCkwCast.cpp",
        "src/dynamic_fusion/sketch/gpu/ckw_driver/components/GpuCkwDirectConv2d.cpp",
        "src/dynamic_fusion/sketch/gpu/ckw_driver/components/GpuCkwElementwiseBinary.cpp",
        "src/dynamic_fusion/sketch/gpu/ckw_driver/components/GpuCkwStore.cpp",
        "src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwKernelWriter.cpp",
        "src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwScopedKernelWriter.cpp",
        "src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwVariableTable.cpp",
        "src/dynamic_fusion/runtime/gpu/cl/ckw_driver/GpuCkwKernelArgumentsHelpers.cpp"
      ]
    }
  }
}
