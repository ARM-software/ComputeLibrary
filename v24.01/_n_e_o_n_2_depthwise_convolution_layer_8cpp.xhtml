<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/NEON/DepthwiseConvolutionLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_o_n_2_depthwise_convolution_layer_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">DepthwiseConvolutionLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_shape_calculator_8h_source.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_depthwise_convolution_layer_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEDepthwiseConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="runtime_2_tensor_8h_source.xhtml">arm_compute/runtime/Tensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tensor_allocator_8h_source.xhtml">arm_compute/runtime/TensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_accessor_8h_source.xhtml">tests/NEON/Accessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/DepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/DilatedDepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/DepthwiseConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_n_e_o_n_2_depthwise_convolution_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a7dc2a897706e1f2567436cd05c17f2ce"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a7dc2a897706e1f2567436cd05c17f2ce"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7dc2a897706e1f2567436cd05c17f2ce">NEDepthwiseConvolutionLayerFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; Tensor, Accessor, NEDepthwiseConvolutionLayer, T &gt;</td></tr>
<tr class="separator:a7dc2a897706e1f2567436cd05c17f2ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac01cd26bc039610598a04ab8d869cc26"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac01cd26bc039610598a04ab8d869cc26"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac01cd26bc039610598a04ab8d869cc26">NEDepthwiseConvolutionLayerMixedDataLayoutFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; Tensor, Accessor, NEDepthwiseConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:ac01cd26bc039610598a04ab8d869cc26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a157e626fc043875a5f4572980d84b9b9"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a157e626fc043875a5f4572980d84b9b9"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a157e626fc043875a5f4572980d84b9b9">NEDepthwiseConvolutionLayerVariableWeightsFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; Tensor, Accessor, NEDepthwiseConvolutionLayer, T, false, false, true &gt;</td></tr>
<tr class="separator:a157e626fc043875a5f4572980d84b9b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2a97a56844f6b38b69db27458c05dca"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ad2a97a56844f6b38b69db27458c05dca"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad2a97a56844f6b38b69db27458c05dca">NEDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture</a> = DepthwiseConvolutionLayerValidationQuantizedFixture&lt; Tensor, Accessor, NEDepthwiseConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:ad2a97a56844f6b38b69db27458c05dca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ee31694413d517bac1c0ae3ca81add5"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5ee31694413d517bac1c0ae3ca81add5">NEDepthwiseConvolutionLayerQuantizedSymmetricPerChannelFixture</a> = DepthwiseConvolutionLayerValidationQuantizedPerChannelFixture&lt; Tensor, Accessor, NEDepthwiseConvolutionLayer, uint8_t, int8_t &gt;</td></tr>
<tr class="separator:a5ee31694413d517bac1c0ae3ca81add5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae9fef82673fc833e93cda8e7f0b09b01"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae9fef82673fc833e93cda8e7f0b09b01">DATA_TEST_CASE</a> (Validate3x3, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), })), make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), })), make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(4, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), make(&quot;DepthMultiplier&quot;, { 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, })), make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(25U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), })), make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)</td></tr>
<tr class="separator:ae9fef82673fc833e93cda8e7f0b09b01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e63bf71befbbf7014ea28e332fba9a7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8e63bf71befbbf7014ea28e332fba9a7">DATA_TEST_CASE</a> (ValidateGeneric, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), }), make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), })), make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), })), make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), })), make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 1, 2, 2, })), make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(25U, 1U), Size2D(0U, 1U), })), make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false})), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)</td></tr>
<tr class="separator:a8e63bf71befbbf7014ea28e332fba9a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac38977c65e5c8ecaaae7b38d4556f1c1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac38977c65e5c8ecaaae7b38d4556f1c1">FIXTURE_DATA_TEST_CASE_NEW</a> (RunActivations, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(make(&quot;In&quot;, TensorShape(33U, 27U, 11U, 3U)), make(&quot;Weights&quot;, Size2D(3U, 4U)), make(&quot;Info&quot;, PadStrideInfo(1, 2, 0, 1)), make(&quot;Dilation&quot;, Size2D(2U, 2U)), make(&quot;DepthMultiplier&quot;, { 5 }), make(&quot;DataType&quot;, DataType::F32), make(&quot;DataLayout&quot;, { DataLayout::NHWC, DataLayout::NCHW }), ActivationFunctionsDatasetNightly))</td></tr>
<tr class="separator:ac38977c65e5c8ecaaae7b38d4556f1c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bd09d1051b82106e319e0f416fe9208"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7bd09d1051b82106e319e0f416fe9208">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a7bd09d1051b82106e319e0f416fe9208"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1771cb4ef1fd0b6fdc7c7f40d37d8436"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1771cb4ef1fd0b6fdc7c7f40d37d8436">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout, NEDepthwiseConvolutionLayerMixedDataLayoutFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), make(&quot;DepthMultiplier&quot;, { 2 })), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a1771cb4ef1fd0b6fdc7c7f40d37d8436"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5d130c9609993c870698fcdde983340"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae5d130c9609993c870698fcdde983340">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:ae5d130c9609993c870698fcdde983340"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ff3ab901d9e8a63b263a6dcbbad651c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8ff3ab901d9e8a63b263a6dcbbad651c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a8ff3ab901d9e8a63b263a6dcbbad651c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67440e7055f977cff74392ade5988a1e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a67440e7055f977cff74392ade5988a1e">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:a67440e7055f977cff74392ade5988a1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adad079a07c24589ab8ab9be85c8722f5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adad079a07c24589ab8ab9be85c8722f5">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:adad079a07c24589ab8ab9be85c8722f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49db164bf9ff6f3afcb10dd6001f3c7a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a49db164bf9ff6f3afcb10dd6001f3c7a">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:a49db164bf9ff6f3afcb10dd6001f3c7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a929d77070c7ce544aef41927690e0684"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a929d77070c7ce544aef41927690e0684">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a929d77070c7ce544aef41927690e0684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19c86a8682d98559885b5501c3507982"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a19c86a8682d98559885b5501c3507982">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:a19c86a8682d98559885b5501c3507982"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0dea791f834ad9a5bd7a99afbe5cb74"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af0dea791f834ad9a5bd7a99afbe5cb74">combine</a> (combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:af0dea791f834ad9a5bd7a99afbe5cb74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad64a5fb1b5b8f1901f657fac8adf81a3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad64a5fb1b5b8f1901f657fac8adf81a3">FIXTURE_DATA_TEST_CASE_NEW</a> (RunVariableWeightsSmall3x3, NEDepthwiseConvolutionLayerVariableWeightsFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ad64a5fb1b5b8f1901f657fac8adf81a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4ba8374b5cad56085450567772324fb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae4ba8374b5cad56085450567772324fb">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout3x3, NEDepthwiseConvolutionLayerMixedDataLayoutFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:ae4ba8374b5cad56085450567772324fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeacc2c3d4fea0e7ca64e10230afd7aa7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeacc2c3d4fea0e7ca64e10230afd7aa7">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall5x5, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset5x5(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aeacc2c3d4fea0e7ca64e10230afd7aa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed0bb01d17d6ccc28016115fd11d0d00"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aed0bb01d17d6ccc28016115fd11d0d00">FIXTURE_DATA_TEST_CASE_NEW</a> (RunVariableWeightsSmall5x5, NEDepthwiseConvolutionLayerVariableWeightsFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset5x5(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aed0bb01d17d6ccc28016115fd11d0d00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5d8bd6dcd2a19edebc684f51798f635"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa5d8bd6dcd2a19edebc684f51798f635">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge3x3, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:aa5d8bd6dcd2a19edebc684f51798f635"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5542de31385d77f2b8cd77ca670157cd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5542de31385d77f2b8cd77ca670157cd">FIXTURE_DATA_TEST_CASE_NEW</a> (RunVariableWeightsLarge3x3, NEDepthwiseConvolutionLayerVariableWeightsFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:a5542de31385d77f2b8cd77ca670157cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae609df675c5e890f6c84e43901614346"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae609df675c5e890f6c84e43901614346">FIXTURE_DATA_TEST_CASE_NEW</a> (RunActivations, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(make(&quot;In&quot;, TensorShape(33U, 27U, 11U, 3U)), make(&quot;Weights&quot;, Size2D(3U, 4U)), make(&quot;Info&quot;, PadStrideInfo(1, 2, 0, 1)), make(&quot;Dilation&quot;, Size2D(2U, 2U)), make(&quot;DepthMultiplier&quot;, { 5 }), make(&quot;DataType&quot;, DataType::QASYMM8), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10) }), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.05f, 4) }), make(&quot;DataLayout&quot;, { DataLayout::NHWC, DataLayout::NCHW }), ActivationFunctionsQuantizedDataset))</td></tr>
<tr class="separator:ae609df675c5e890f6c84e43901614346"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22e52e544bacb5465237ed280e7a6741"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a22e52e544bacb5465237ed280e7a6741">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a22e52e544bacb5465237ed280e7a6741"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af71c7ac81921c8e44263fad0819ff757"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af71c7ac81921c8e44263fad0819ff757">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout, NEDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), make(&quot;DepthMultiplier&quot;, { 2 })), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:af71c7ac81921c8e44263fad0819ff757"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d48486c0cda15e1adc61bda44a885c7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9d48486c0cda15e1adc61bda44a885c7">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.8f, 1) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a9d48486c0cda15e1adc61bda44a885c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af056d5f8c71d45335016b5770bcebc47"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af056d5f8c71d45335016b5770bcebc47">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.9f, 11) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:af056d5f8c71d45335016b5770bcebc47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba9fe71ccb4169d8a66e12987f5d1ba5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aba9fe71ccb4169d8a66e12987f5d1ba5">combine</a> (combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aba9fe71ccb4169d8a66e12987f5d1ba5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bb717fc7014ec2412348baa4b4d1879"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0bb717fc7014ec2412348baa4b4d1879">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:a0bb717fc7014ec2412348baa4b4d1879"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80368570c09d68a349545d96cc79876a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a80368570c09d68a349545d96cc79876a">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.7f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a80368570c09d68a349545d96cc79876a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba020070c2aa4d53c9e1ef7e90e55263"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aba020070c2aa4d53c9e1ef7e90e55263">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:aba020070c2aa4d53c9e1ef7e90e55263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2e21757ecc17b4bb8767308baeff932"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad2e21757ecc17b4bb8767308baeff932">combine</a> (combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ad2e21757ecc17b4bb8767308baeff932"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1470ff62a2f5f132b75c44e408731653"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1470ff62a2f5f132b75c44e408731653">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout3x3, NEDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a1470ff62a2f5f132b75c44e408731653"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af88a0d8292c5eba34e796a15ece91a5c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af88a0d8292c5eba34e796a15ece91a5c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall5x5, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset5x5(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:af88a0d8292c5eba34e796a15ece91a5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a395705b43ab7555409f4e203394204e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a395705b43ab7555409f4e203394204e0">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge3x3, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:a395705b43ab7555409f4e203394204e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1d098a563873845f735e57290b7fd17"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af1d098a563873845f735e57290b7fd17">combine</a> (make(&quot;In&quot;, TensorShape(33U, 27U, 11U, 3U)), make(&quot;Weights&quot;, Size2D(3U, 4U)), make(&quot;Info&quot;, PadStrideInfo(1, 2, 0, 1)), make(&quot;Dilation&quot;, Size2D(2U, 2U)), make(&quot;DepthMultiplier&quot;, { 5 }), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10) }), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.05f, 4) }), make(&quot;DataLayout&quot;, { DataLayout::NHWC, DataLayout::NCHW }), ActivationFunctionsQuantizedDataset))</td></tr>
<tr class="separator:af1d098a563873845f735e57290b7fd17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e250eecf826777acdaa8f7397acd59a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4e250eecf826777acdaa8f7397acd59a">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a4e250eecf826777acdaa8f7397acd59a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b57518ddeb786d3548053d623fbd080"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0b57518ddeb786d3548053d623fbd080">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.8f, 1) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a0b57518ddeb786d3548053d623fbd080"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5deb735bdb2c86bb5b096435b0a3328e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5deb735bdb2c86bb5b096435b0a3328e">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.9f, 11) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:a5deb735bdb2c86bb5b096435b0a3328e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a403fe4a583b698ded4ebc3ab6573c883"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a403fe4a583b698ded4ebc3ab6573c883">combine</a> (combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a403fe4a583b698ded4ebc3ab6573c883"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf9d3bc3e42983a398db7d1acd1ff440"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf9d3bc3e42983a398db7d1acd1ff440">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:adf9d3bc3e42983a398db7d1acd1ff440"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd5180a8193030180fd377f0ac0fa923"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abd5180a8193030180fd377f0ac0fa923">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.7f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:abd5180a8193030180fd377f0ac0fa923"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed8201916a1702bc77940b4ba2bea985"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aed8201916a1702bc77940b4ba2bea985">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:aed8201916a1702bc77940b4ba2bea985"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac844380f1931de350477e104b3fb4660"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac844380f1931de350477e104b3fb4660">combine</a> (combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac844380f1931de350477e104b3fb4660"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83218f2c84c91a9be02976536627d26c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a83218f2c84c91a9be02976536627d26c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall5x5, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset5x5(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a83218f2c84c91a9be02976536627d26c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4350797267953f5633ced320c47cd8f2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4350797267953f5633ced320c47cd8f2">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge3x3, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:a4350797267953f5633ced320c47cd8f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31928fbbb35f4b5fc4cc5f7750e42309"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a31928fbbb35f4b5fc4cc5f7750e42309">combine</a> (make(&quot;In&quot;, TensorShape(33U, 27U, 11U, 3U)), make(&quot;Weights&quot;, Size2D(3U, 4U)), make(&quot;Info&quot;, PadStrideInfo(1, 2, 0, 1)), make(&quot;Dilation&quot;, Size2D(2U, 2U)), make(&quot;DepthMultiplier&quot;, { 5 }), make(&quot;InputDataType&quot;, DataType::QASYMM8), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10) }), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.05f, 4) }), make(&quot;DataLayout&quot;, { DataLayout::NHWC, DataLayout::NCHW }), ActivationFunctionsQuantizedDataset))</td></tr>
<tr class="separator:a31928fbbb35f4b5fc4cc5f7750e42309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff275fcf039944eeb028905900c44e77"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aff275fcf039944eeb028905900c44e77">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedSymmetricPerChannelFixture, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), make(&quot;InputDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aff275fcf039944eeb028905900c44e77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2944b0047895453371f44779cacb212"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2944b0047895453371f44779cacb212">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedSymmetricPerChannelFixture, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), make(&quot;InputDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac2944b0047895453371f44779cacb212"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ee3a2f35d9d9487dab22daeabdb028f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ee3a2f35d9d9487dab22daeabdb028f">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedSymmetricPerChannelFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), make(&quot;InputDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:a1ee3a2f35d9d9487dab22daeabdb028f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a709ca5671202623995fc3300b9da1e37"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a709ca5671202623995fc3300b9da1e37">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;InputDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a709ca5671202623995fc3300b9da1e37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2273e8f0b49333a330474ca04ea452b4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2273e8f0b49333a330474ca04ea452b4">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge3x3, NEDepthwiseConvolutionLayerQuantizedSymmetricPerChannelFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeOptimizedDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, 1)), make(&quot;InputDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), input_qinfo_dataset), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })))</td></tr>
<tr class="separator:a2273e8f0b49333a330474ca04ea452b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a71cdcf2657dadcfac775042af10298d6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a71cdcf2657dadcfac775042af10298d6">NEDepthwiseConvolutionLayerFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a71cdcf2657dadcfac775042af10298d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2299eb4352ff65c991df6171a4afa4a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa2299eb4352ff65c991df6171a4afa4a">NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:aa2299eb4352ff65c991df6171a4afa4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00496e548e7ad3c3ec71109b9dc8a0f3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00496e548e7ad3c3ec71109b9dc8a0f3">NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;</a></td></tr>
<tr class="separator:a00496e548e7ad3c3ec71109b9dc8a0f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_0538a82dae0483a21d0f1e9d7e0a45c6.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_o_n_2_depthwise_convolution_layer_8cpp.xhtml">DepthwiseConvolutionLayer.cpp</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:20:07 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
