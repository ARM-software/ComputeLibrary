<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/CL/OpenCL.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_open_c_l_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">OpenCL.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_open_c_l_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ACL_ARM_COMPUTE_CORE_CL_OPENCL_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ACL_ARM_COMPUTE_CORE_CL_OPENCL_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">/* Configure the Khronos C++ wrapper to target OpenCL 1.2: */</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_NO_EXCEPTIONS</span></div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="_open_c_l_8h.xhtml#ae7c96c1469662004d842704e2ff076fb">   32</a></span>&#160;<span class="preprocessor">#define CL_HPP_ENABLE_EXCEPTIONS</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#endif // ARM_COMPUTE_NO_EXCEPTIONS</span></div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="_open_c_l_8h.xhtml#a5990dea19d4ccb046a3d81b311457add">   34</a></span>&#160;<span class="preprocessor">#define CL_TARGET_OPENCL_VERSION      300</span></div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="_open_c_l_8h.xhtml#a37ea07405ca286c1570612b42d43b345">   35</a></span>&#160;<span class="preprocessor">#define CL_HPP_TARGET_OPENCL_VERSION  110</span></div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="_open_c_l_8h.xhtml#a2053025c576bcf48e249dd20e884a560">   36</a></span>&#160;<span class="preprocessor">#define CL_HPP_MINIMUM_OPENCL_VERSION 110</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#pragma GCC diagnostic push</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#pragma GCC diagnostic ignored &quot;-Weffc++&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#pragma GCC diagnostic ignored &quot;-Wignored-qualifiers&quot;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#pragma GCC diagnostic ignored &quot;-Wunused-parameter&quot;</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#if defined(__GNUG__) &amp;&amp; __GNUG__ &gt;= 8</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#pragma GCC diagnostic ignored &quot;-Wcatch-value&quot;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#endif                   // defined(__GNUG__) &amp;&amp; __GNUG__ &gt;= 8</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &lt;CL/opencl.hpp&gt;</span> <span class="comment">// include new hpp header instead of cl2.hpp</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#pragma GCC diagnostic pop</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacecl.xhtml">cl</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> NDRange Range_128_1 = NDRange(128, 1);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;} <span class="comment">// namespace cl</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">/** Check if OpenCL is available.</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> * @return True if OpenCL is available.</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">opencl_is_available</a>();</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">/** Class for loading OpenCL symbols. */</span></div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml">   61</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml">CLSymbols</a> final</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">    /** Default Constructor */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#a971c6dd013977aa4e08d1dba7608f18b">CLSymbols</a>() noexcept(<span class="keyword">false</span>);<span class="comment"></span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">    /** Load OpenCL symbols from handle</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * @param[in] handle Handle to load symbols from</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#a2e0acc4ac5f76aae0e86ccea551e85ca">load_symbols</a>(<span class="keywordtype">void</span> *handle);<span class="comment"></span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /** Get the static instance of CLSymbols.</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     * @return The static instance of CLSymbols.</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml">CLSymbols</a> &amp;<a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#ac3d2ed16df8334b183d76d8a82dbf70f">get</a>();<span class="comment"></span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">    /** This method attempts to load the OpenCL symbols from the first available library from the provided OpenCL libraries.</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     * @param[in] libraries_filenames Vector containing the filenames of the libraries to be loaded.</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     * @param[in] use_loader          Use symbol loader function loadOpenCLPointer.</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     * @return True if loading the library is successful. False if all the provided libraries could not be loaded.</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#abe4a1505aebd2ee667800f5e38414cd5">load</a>(<span class="keyword">const</span> std::vector&lt;std::string&gt; &amp;libraries_filenames, <span class="keywordtype">bool</span> use_loader = <span class="keyword">false</span>);<span class="comment"></span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">    /** Load symbols from any of the default OpenCL library names.</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     *  If all the default libraries could not be loaded, this method will print a warning message and return false.</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     * @return True if loading any library is successful.</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#a7d9b5b93ad5e6018700fa36de6e1e279">load_default</a>();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">   91</a></span>&#160;<span class="preprocessor">#define DECLARE_FUNCTION_PTR(func_name) std::function&lt;decltype(func_name)&gt; func_name##_ptr = nullptr</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a14a1465f79e3703561c9ee0723276603">   93</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#abdcf0f1bbd28eb23c756f32e005e3846">clCreateContext</a>);</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#af60dbcf4d37ee4dd2c34cfbf08e64671">   94</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a298a4a3082936de672185fe3cc9b992b">clCreateContextFromType</a>);</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a9edd71637c165f39e1913b22bdafcd67">   95</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ac9707377cc9420fd03b16d76e831513a">clCreateCommandQueue</a>);</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a75d6cb60b6d853a80a32aec236470883">   96</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a2b2912c16aeb279ce55dc9c30968b906">clCreateCommandQueueWithProperties</a>);</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#ac3b351139d8ac903bfa75463903ef002">   97</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a4bd1918b00ed6da1c8ed84bf4251f963">clGetContextInfo</a>);</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#ad35af0d314615874e570540e9853668c">   98</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ab17c2125daccf219d5ead2be2491e36e">clBuildProgram</a>);</div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#ab5c1d962dbe252b8d6a9a3414557d194">   99</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a0152f4b089c26f22f032162d0b7a0d21">clEnqueueNDRangeKernel</a>);</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a021f5850b98ba79d84067e762b84aa52">  100</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a3945f28bb1b23afb00a87801136271e9">clSetKernelArg</a>);</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a49d82b362ebf160e65d162d6c9de31b1">  101</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a9533331a57797c4c4c4187900ff9ae51">clReleaseKernel</a>);</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a62fb6450bf1c30cca66d6547348eee3c">  102</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ae2ab434699c41d87099b48a774db0b9d">clCreateProgramWithSource</a>);</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a301b84af701238b357de87434d0327a9">  103</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#af9a973de9b75e338812149043568dc20">clCreateBuffer</a>);</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a70f0c6b172261cc89e5d90239a8b70d0">  104</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a617b60a00661fe3a03749b6b9913d006">clRetainKernel</a>);</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a02aff28f848c48e02fababe120a0df36">  105</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a372df0ff626cb294bc21a8d75aef7240">clCreateKernel</a>);</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a38787d16b9a4ccb79f11c9e807b31f39">  106</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a9f71d4d10e82daea5e3dd62089dab424">clGetProgramInfo</a>);</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#ac88fa83ac520504fa6792d8c1e5296b6">  107</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#acb9d0f5ac60336c8dac9a37e51f3cf47">clFlush</a>);</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a31fd3504c695582b52ee2426dc71c1d7">  108</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ac78e93d371eecbe98f00bdf965c98ed6">clFinish</a>);</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a0462afdc2906b59dd0a860c84c8f3d8a">  109</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ae32b736b7255a0549acfe221f83a3197">clReleaseProgram</a>);</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a7d3ddaa28e01b8d4aeef8a5a3ae05f16">  110</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#abea285cf4c4715cd284f275725cd1508">clRetainContext</a>);</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a2263b6ca759bdfed0a0727d2b68db916">  111</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a1425fcfd615cc990cdf8c311d520ad10">clCreateProgramWithBinary</a>);</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a2cc4ea7d2743d398a26055f062052762">  112</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#abd209590ef4b1c99e256180ad77faecf">clReleaseCommandQueue</a>);</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#abd0ba6c593ff83cb0c3d0e1b746f068a">  113</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a9039d2fa3d129a08baa1c49abf2f07fb">clEnqueueMapBuffer</a>);</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#aa9752599bfd3a28d9c34cfb59c8feaf3">  114</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#aa0cc01b2f6b15bbab28eb38d6f29f184">clRetainProgram</a>);</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a34391377f3991f0a88631cf1b05e3c8b">  115</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a42eb427f73ef3e670fb570734341fd49">clGetProgramBuildInfo</a>);</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a114ecc5c7e99f380a84d33f32038dc27">  116</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a0c6565be16b3326d2ccdab5339e0f7bf">clEnqueueReadBuffer</a>);</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a3085f45d872eda6b1adf8557fd4915b9">  117</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a8301eaffd71b5aeae60dc9e3afdf8c9b">clEnqueueWriteBuffer</a>);</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a8f72204edecff30764f23d06c4e4ae20">  118</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a41eb8d025116f85cf2175e51c98d9fb6">clReleaseEvent</a>);</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#aff1103110d2ad3e5fc2a8e0a746059b3">  119</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a424af1d00f0ad1421da1bc0c2ccc9abe">clReleaseContext</a>);</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a3777a685e4430d6dcdddd73531cc3cc3">  120</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ae342be07c62cae5d870ff5796a599e75">clRetainCommandQueue</a>);</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#aab857577e126a171222277703b724639">  121</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#af1ca0be4c120041eda74a4f1fc36c4a0">clEnqueueUnmapMemObject</a>);</div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#ab7b31e7922544d4a6325320f08ad2474">  122</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a2c88e252bef66c05807260b013a725de">clRetainMemObject</a>);</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a9385d6637f840d613d72f35a389d1c64">  123</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#aaa80bcf581a6eb2848468677b3f3cbd1">clReleaseMemObject</a>);</div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#ab6c28e45955ab8420512342ed6fa6934">  124</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a677990334379f5f91619bfc43af63c4a">clGetDeviceInfo</a>);</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a73ac5a70dfe6076f17a0b16d3a021daa">  125</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ad61ef286586c4d20b47cc51a32839de1">clGetDeviceIDs</a>);</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a1e85643ad6d7c35515d0e97b9b88e945">  126</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a56cdb4214e0b6d66392cd0670f89e27d">clGetMemObjectInfo</a>);</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a96cfa134e391cec1fa131849b9dc6648">  127</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a434f9e0998ebb096bf09a0a6abdd5938">clRetainEvent</a>);</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a1f02bfc0684bc35eaa24e1357c9a1400">  128</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#af4dc7264b57c52f10781d5e7d7bbed66">clGetPlatformInfo</a>);</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#aa794227c46c954c6e6684d21af618b00">  129</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a16acb36fde338eaff889484b213c953d">clGetPlatformIDs</a>);</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#aa5bc2c92a538b212960c02f9cb480afe">  130</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#acb69a828a88a01250d4765d9ac36637f">clGetKernelWorkGroupInfo</a>);</div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a8709746b1a7fc8ac57ce61349332e866">  131</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ad3379de4b5bac534f2e0197d0e53393b">clGetCommandQueueInfo</a>);</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a7b9fe21a9872e746fa811b916e4dd9bf">  132</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#af547e92d5365c4a7cc5609814618289e">clGetKernelInfo</a>);</div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#aad5f68729eb6cc674fce0fd950c5b765">  133</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a1203915fa89fa2ad0914bc8b83e1af81">clGetEventProfilingInfo</a>);</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#abf58c6d99585520b40a396a890caa9ee">  134</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a3f3b491b813e283ae79a756cb7ae84bd">clSVMAlloc</a>);</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#adbd557acca5bc0f92a1a7f8ebc26e9ed">  135</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a1412ab782ad4055d71dc9c5a7c4c11e4">clSVMFree</a>);</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#ae4a0c63c4f06c8d80788da461812bf4c">  136</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a66cc3ae002a3eb6b7c70291ba3eac1b5">clEnqueueSVMMap</a>);</div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#ab30bda3641f8d1a73126884a9fd66a89">  137</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#af15c1cf404e8af8057e176c967080fd4">clEnqueueSVMUnmap</a>);</div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a527fd99779c605a2203158219f18e95f">  138</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a43d9a36e38a16e503e0bbdc7b2f81f12">clEnqueueMarker</a>);</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a8fd1b20db02f6fb96562ddff20134a53">  139</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ab01da83b3a9fcd7a69dda12cc721c8f8">clWaitForEvents</a>);</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a38dcfd5a3b3a0f7ab8e1f20e8d2fd01c">  140</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#aa31e96a1fb21520f2e391b4f7f46f5a9">clCreateImage</a>);</div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#aad5fe0dac5f86adfdda65fcbc2fa7e92">  141</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#aaf342694786e1e468c55431205f36ced">clSetKernelExecInfo</a>);</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#aec13c31839836cb6a0536bebc759f00f">  142</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ad33ef1ed0329715a73c83c42f5fd8dcf">clGetExtensionFunctionAddressForPlatform</a>);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="comment">// Command buffer and mutable dispatch command buffer extensions</span></div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a67abaab41731ded5b40fa9904f8b8933">  145</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ae4091b6ac9dd4388f5b95f320a0c85a8">clCreateCommandBufferKHR</a>);</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#ace23e12e64ef551a85b0d0553e2c1999">  146</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a945aa317a51cafa77b806560d1e0663e">clRetainCommandBufferKHR</a>);</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#adb27fb628c843d3ccbcfbfeabd37149f">  147</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ad92270fbfad08428c9ed518170a8a74a">clReleaseCommandBufferKHR</a>);</div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a02f03aac7764b7a3c00575742ff08ca5">  148</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a2eda66fd1833633bdc55e29686b7d454">clFinalizeCommandBufferKHR</a>);</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a5ebd8ce67e380ed10aac0d1bf885b70b">  149</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#aabca83598a7d2f2db7aaa2d4b1cbd1a7">clEnqueueCommandBufferKHR</a>);</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a8c3bde47b40a28f4c4a5224eb1eb28e4">  150</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#acdc4200f6df3ab658adb5b2b4c22f6ac">clCommandNDRangeKernelKHR</a>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#a01ce159b1c9b568493a1bd4f98cd51eb">  152</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a1384e99dd308097bc7a2edb202eb91a2">clUpdateMutableCommandsKHR</a>);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="comment">// Third-party extensions</span></div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_symbols.xhtml#ac85382870c183f26f792e183ee80e38c">  155</a></span>&#160;    <a class="code" href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a6ece3384ff9496363d68aeb376041aaf">clImportMemoryARM</a>);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor">#undef DECLARE_FUNCTION_PTR</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    std::pair&lt;bool, bool&gt; _loaded;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;};</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="preprocessor">#endif // ACL_ARM_COMPUTE_CORE_CL_OPENCL_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a9f71d4d10e82daea5e3dd62089dab424"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a9f71d4d10e82daea5e3dd62089dab424">clGetProgramInfo</a></div><div class="ttdeci">cl_int clGetProgramInfo(cl_program program, cl_program_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00781">OpenCL.cpp:781</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ae4091b6ac9dd4388f5b95f320a0c85a8"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ae4091b6ac9dd4388f5b95f320a0c85a8">clCreateCommandBufferKHR</a></div><div class="ttdeci">cl_command_buffer_khr clCreateCommandBufferKHR(cl_uint num_queues, const cl_command_queue *queues, const cl_command_buffer_properties_khr *properties, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01103">OpenCL.cpp:1103</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml_ac3d2ed16df8334b183d76d8a82dbf70f"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml#ac3d2ed16df8334b183d76d8a82dbf70f">arm_compute::CLSymbols::get</a></div><div class="ttdeci">static CLSymbols &amp; get()</div><div class="ttdoc">Get the static instance of CLSymbols.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00043">OpenCL.cpp:43</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_acdc4200f6df3ab658adb5b2b4c22f6ac"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#acdc4200f6df3ab658adb5b2b4c22f6ac">clCommandNDRangeKernelKHR</a></div><div class="ttdeci">cl_int clCommandNDRangeKernelKHR(cl_command_buffer_khr command_buffer, cl_command_queue command_queue, const cl_ndrange_kernel_command_properties_khr *properties, cl_kernel kernel, cl_uint work_dim, const size_t *global_work_offset, const size_t *global_work_size, const size_t *local_work_size, cl_uint num_sync_points_in_wait_list, const cl_sync_point_khr *sync_point_wait_list, cl_sync_point_khr *sync_point, cl_mutable_command_khr *mutable_handle)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01191">OpenCL.cpp:1191</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5f49decb4b0a74d5361686ab45db8961"><div class="ttname"><a href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">arm_compute::opencl_is_available</a></div><div class="ttdeci">bool opencl_is_available()</div><div class="ttdoc">Check if OpenCL is available.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00232">OpenCL.cpp:232</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a298a4a3082936de672185fe3cc9b992b"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a298a4a3082936de672185fe3cc9b992b">clCreateContextFromType</a></div><div class="ttdeci">cl_context clCreateContextFromType(const cl_context_properties *properties, cl_device_type device_type, void(*pfn_notify)(const char *, const void *, size_t, void *), void *user_data, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00418">OpenCL.cpp:418</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_acb9d0f5ac60336c8dac9a37e51f3cf47"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#acb9d0f5ac60336c8dac9a37e51f3cf47">clFlush</a></div><div class="ttdeci">cl_int clFlush(cl_command_queue command_queue)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00753">OpenCL.cpp:753</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ae2ab434699c41d87099b48a774db0b9d"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ae2ab434699c41d87099b48a774db0b9d">clCreateProgramWithSource</a></div><div class="ttdeci">cl_program clCreateProgramWithSource(cl_context context, cl_uint count, const char **strings, const size_t *lengths, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00849">OpenCL.cpp:849</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_abea285cf4c4715cd284f275725cd1508"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#abea285cf4c4715cd284f275725cd1508">clRetainContext</a></div><div class="ttdeci">cl_int clRetainContext(cl_context context)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00725">OpenCL.cpp:725</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a66cc3ae002a3eb6b7c70291ba3eac1b5"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a66cc3ae002a3eb6b7c70291ba3eac1b5">clEnqueueSVMMap</a></div><div class="ttdeci">cl_int clEnqueueSVMMap(cl_command_queue command_queue, cl_bool blocking_map, cl_map_flags flags, void *svm_ptr, size_t size, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00284">OpenCL.cpp:284</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad61ef286586c4d20b47cc51a32839de1"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad61ef286586c4d20b47cc51a32839de1">clGetDeviceIDs</a></div><div class="ttdeci">cl_int clGetDeviceIDs(cl_platform_id platform, cl_device_type device_type, cl_uint num_entries, cl_device_id *devices, cl_uint *num_devices)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00882">OpenCL.cpp:882</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aa0cc01b2f6b15bbab28eb38d6f29f184"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aa0cc01b2f6b15bbab28eb38d6f29f184">clRetainProgram</a></div><div class="ttdeci">cl_int clRetainProgram(cl_program program)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00645">OpenCL.cpp:645</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1412ab782ad4055d71dc9c5a7c4c11e4"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1412ab782ad4055d71dc9c5a7c4c11e4">clSVMFree</a></div><div class="ttdeci">void clSVMFree(cl_context context, void *svm_pointer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00337">OpenCL.cpp:337</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a41eb8d025116f85cf2175e51c98d9fb6"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a41eb8d025116f85cf2175e51c98d9fb6">clReleaseEvent</a></div><div class="ttdeci">cl_int clReleaseEvent(cl_event event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00566">OpenCL.cpp:566</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a617b60a00661fe3a03749b6b9913d006"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a617b60a00661fe3a03749b6b9913d006">clRetainKernel</a></div><div class="ttdeci">cl_int clRetainKernel(cl_kernel kernel)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00817">OpenCL.cpp:817</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ae32b736b7255a0549acfe221f83a3197"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ae32b736b7255a0549acfe221f83a3197">clReleaseProgram</a></div><div class="ttdeci">cl_int clReleaseProgram(cl_program program)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00739">OpenCL.cpp:739</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a0152f4b089c26f22f032162d0b7a0d21"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a0152f4b089c26f22f032162d0b7a0d21">clEnqueueNDRangeKernel</a></div><div class="ttdeci">cl_int clEnqueueNDRangeKernel(cl_command_queue command_queue, cl_kernel kernel, cl_uint work_dim, const size_t *global_work_offset, const size_t *global_work_size, const size_t *local_work_size, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00455">OpenCL.cpp:455</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ab17c2125daccf219d5ead2be2491e36e"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ab17c2125daccf219d5ead2be2491e36e">clBuildProgram</a></div><div class="ttdeci">cl_int clBuildProgram(cl_program program, cl_uint num_devices, const cl_device_id *device_list, const char *options, void(CL_CALLBACK *pfn_notify)(cl_program program, void *user_data), void *user_data)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00436">OpenCL.cpp:436</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad3379de4b5bac534f2e0197d0e53393b"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad3379de4b5bac534f2e0197d0e53393b">clGetCommandQueueInfo</a></div><div class="ttdeci">cl_int clGetCommandQueueInfo(cl_command_queue command_queue, cl_command_queue_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00998">OpenCL.cpp:998</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a8301eaffd71b5aeae60dc9e3afdf8c9b"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a8301eaffd71b5aeae60dc9e3afdf8c9b">clEnqueueWriteBuffer</a></div><div class="ttdeci">cl_int clEnqueueWriteBuffer(cl_command_queue command_queue, cl_mem buffer, cl_bool blocking_write, size_t offset, size_t size, const void *ptr, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00580">OpenCL.cpp:580</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_abdcf0f1bbd28eb23c756f32e005e3846"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#abdcf0f1bbd28eb23c756f32e005e3846">clCreateContext</a></div><div class="ttdeci">cl_context clCreateContext(const cl_context_properties *properties, cl_uint num_devices, const cl_device_id *devices, void(*pfn_notify)(const char *, const void *, size_t, void *), void *user_data, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00399">OpenCL.cpp:399</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml_abe4a1505aebd2ee667800f5e38414cd5"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml#abe4a1505aebd2ee667800f5e38414cd5">arm_compute::CLSymbols::load</a></div><div class="ttdeci">bool load(const std::vector&lt; std::string &gt; &amp;libraries_filenames, bool use_loader=false)</div><div class="ttdoc">This method attempts to load the OpenCL symbols from the first available library from the provided Op...</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00092">OpenCL.cpp:92</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a9039d2fa3d129a08baa1c49abf2f07fb"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a9039d2fa3d129a08baa1c49abf2f07fb">clEnqueueMapBuffer</a></div><div class="ttdeci">void * clEnqueueMapBuffer(cl_command_queue command_queue, cl_mem buffer, cl_bool blocking_map, cl_map_flags map_flags, size_t offset, size_t size, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00659">OpenCL.cpp:659</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad92270fbfad08428c9ed518170a8a74a"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad92270fbfad08428c9ed518170a8a74a">clReleaseCommandBufferKHR</a></div><div class="ttdeci">cl_int clReleaseCommandBufferKHR(cl_command_buffer_khr command_buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01156">OpenCL.cpp:1156</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ab01da83b3a9fcd7a69dda12cc721c8f8"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ab01da83b3a9fcd7a69dda12cc721c8f8">clWaitForEvents</a></div><div class="ttdeci">cl_int clWaitForEvents(cl_uint num_events, const cl_event *event_list)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00270">OpenCL.cpp:270</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af9a973de9b75e338812149043568dc20"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af9a973de9b75e338812149043568dc20">clCreateBuffer</a></div><div class="ttdeci">cl_mem clCreateBuffer(cl_context context, cl_mem_flags flags, size_t size, void *host_ptr, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00831">OpenCL.cpp:831</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1203915fa89fa2ad0914bc8b83e1af81"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1203915fa89fa2ad0914bc8b83e1af81">clGetEventProfilingInfo</a></div><div class="ttdeci">cl_int clGetEventProfilingInfo(cl_event event, cl_profiling_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01034">OpenCL.cpp:1034</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_abd209590ef4b1c99e256180ad77faecf"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#abd209590ef4b1c99e256180ad77faecf">clReleaseCommandQueue</a></div><div class="ttdeci">cl_int clReleaseCommandQueue(cl_command_queue command_queue)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00687">OpenCL.cpp:687</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aaa80bcf581a6eb2848468677b3f3cbd1"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aaa80bcf581a6eb2848468677b3f3cbd1">clReleaseMemObject</a></div><div class="ttdeci">cl_int clReleaseMemObject(cl_mem memobj)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00506">OpenCL.cpp:506</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ac78e93d371eecbe98f00bdf965c98ed6"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ac78e93d371eecbe98f00bdf965c98ed6">clFinish</a></div><div class="ttdeci">cl_int clFinish(cl_command_queue command_queue)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00767">OpenCL.cpp:767</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a56cdb4214e0b6d66392cd0670f89e27d"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a56cdb4214e0b6d66392cd0670f89e27d">clGetMemObjectInfo</a></div><div class="ttdeci">cl_int clGetMemObjectInfo(cl_mem memobj, cl_mem_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00918">OpenCL.cpp:918</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml_a971c6dd013977aa4e08d1dba7608f18b"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml#a971c6dd013977aa4e08d1dba7608f18b">arm_compute::CLSymbols::CLSymbols</a></div><div class="ttdeci">CLSymbols() noexcept(false)</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00039">OpenCL.cpp:39</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af15c1cf404e8af8057e176c967080fd4"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af15c1cf404e8af8057e176c967080fd4">clEnqueueSVMUnmap</a></div><div class="ttdeci">cl_int clEnqueueSVMUnmap(cl_command_queue command_queue, void *svm_ptr, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00305">OpenCL.cpp:305</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a6ece3384ff9496363d68aeb376041aaf"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a6ece3384ff9496363d68aeb376041aaf">clImportMemoryARM</a></div><div class="ttdeci">cl_mem clImportMemoryARM(cl_context context, cl_mem_flags flags, const cl_import_properties_arm *properties, void *memory, size_t size, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01234">OpenCL.cpp:1234</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a16acb36fde338eaff889484b213c953d"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a16acb36fde338eaff889484b213c953d">clGetPlatformIDs</a></div><div class="ttdeci">cl_int clGetPlatformIDs(cl_uint num_entries, cl_platform_id *platforms, cl_uint *num_platforms)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00965">OpenCL.cpp:965</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a3f3b491b813e283ae79a756cb7ae84bd"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a3f3b491b813e283ae79a756cb7ae84bd">clSVMAlloc</a></div><div class="ttdeci">void * clSVMAlloc(cl_context context, cl_svm_mem_flags_arm flags, size_t size, cl_uint alignment)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00323">OpenCL.cpp:323</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ae342be07c62cae5d870ff5796a599e75"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ae342be07c62cae5d870ff5796a599e75">clRetainCommandQueue</a></div><div class="ttdeci">cl_int clRetainCommandQueue(cl_command_queue command_queue)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00539">OpenCL.cpp:539</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a4bd1918b00ed6da1c8ed84bf4251f963"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a4bd1918b00ed6da1c8ed84bf4251f963">clGetContextInfo</a></div><div class="ttdeci">cl_int clGetContextInfo(cl_context context, cl_context_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00347">OpenCL.cpp:347</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a42eb427f73ef3e670fb570734341fd49"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a42eb427f73ef3e670fb570734341fd49">clGetProgramBuildInfo</a></div><div class="ttdeci">cl_int clGetProgramBuildInfo(cl_program program, cl_device_id device, cl_program_build_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00626">OpenCL.cpp:626</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1384e99dd308097bc7a2edb202eb91a2"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1384e99dd308097bc7a2edb202eb91a2">clUpdateMutableCommandsKHR</a></div><div class="ttdeci">cl_int clUpdateMutableCommandsKHR(cl_command_buffer_khr command_buffer, const cl_mutable_base_config_khr *mutable_config)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01218">OpenCL.cpp:1218</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml_a7d9b5b93ad5e6018700fa36de6e1e279"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml#a7d9b5b93ad5e6018700fa36de6e1e279">arm_compute::CLSymbols::load_default</a></div><div class="ttdeci">bool load_default()</div><div class="ttdoc">Load symbols from any of the default OpenCL library names.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00049">OpenCL.cpp:49</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a372df0ff626cb294bc21a8d75aef7240"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a372df0ff626cb294bc21a8d75aef7240">clCreateKernel</a></div><div class="ttdeci">cl_kernel clCreateKernel(cl_program program, const char *kernel_name, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00799">OpenCL.cpp:799</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af547e92d5365c4a7cc5609814618289e"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af547e92d5365c4a7cc5609814618289e">clGetKernelInfo</a></div><div class="ttdeci">cl_int clGetKernelInfo(cl_kernel kernel, cl_kernel_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01016">OpenCL.cpp:1016</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a2eda66fd1833633bdc55e29686b7d454"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a2eda66fd1833633bdc55e29686b7d454">clFinalizeCommandBufferKHR</a></div><div class="ttdeci">cl_int clFinalizeCommandBufferKHR(cl_command_buffer_khr command_buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01126">OpenCL.cpp:1126</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aa31e96a1fb21520f2e391b4f7f46f5a9"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aa31e96a1fb21520f2e391b4f7f46f5a9">clCreateImage</a></div><div class="ttdeci">cl_mem clCreateImage(cl_context context, cl_mem_flags flags, const cl_image_format *image_format, const cl_image_desc *image_desc, void *host_ptr, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01052">OpenCL.cpp:1052</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af4dc7264b57c52f10781d5e7d7bbed66"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af4dc7264b57c52f10781d5e7d7bbed66">clGetPlatformInfo</a></div><div class="ttdeci">cl_int clGetPlatformInfo(cl_platform_id platform, cl_platform_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00947">OpenCL.cpp:947</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a424af1d00f0ad1421da1bc0c2ccc9abe"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a424af1d00f0ad1421da1bc0c2ccc9abe">clReleaseContext</a></div><div class="ttdeci">cl_int clReleaseContext(cl_context context)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00553">OpenCL.cpp:553</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1425fcfd615cc990cdf8c311d520ad10"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1425fcfd615cc990cdf8c311d520ad10">clCreateProgramWithBinary</a></div><div class="ttdeci">cl_program clCreateProgramWithBinary(cl_context context, cl_uint num_devices, const cl_device_id *device_list, const size_t *lengths, const unsigned char **binaries, cl_int *binary_status, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00701">OpenCL.cpp:701</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml">arm_compute::CLSymbols</a></div><div class="ttdoc">Class for loading OpenCL symbols.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8h_source.xhtml#l00061">OpenCL.h:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aabca83598a7d2f2db7aaa2d4b1cbd1a7"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aabca83598a7d2f2db7aaa2d4b1cbd1a7">clEnqueueCommandBufferKHR</a></div><div class="ttdeci">cl_int clEnqueueCommandBufferKHR(cl_uint num_queues, cl_command_queue *queues, cl_command_buffer_khr command_buffer, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01171">OpenCL.cpp:1171</a></div></div>
<div class="ttc" id="a_open_c_l_8h_xhtml_af6e65f36e2be6bd9a1cac10ba6e82f7c"><div class="ttname"><a href="_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c">DECLARE_FUNCTION_PTR</a></div><div class="ttdeci">#define DECLARE_FUNCTION_PTR(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8h_source.xhtml#l00091">OpenCL.h:91</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml_a2e0acc4ac5f76aae0e86ccea551e85ca"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml#a2e0acc4ac5f76aae0e86ccea551e85ca">arm_compute::CLSymbols::load_symbols</a></div><div class="ttdeci">void load_symbols(void *handle)</div><div class="ttdoc">Load OpenCL symbols from handle.</div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a945aa317a51cafa77b806560d1e0663e"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a945aa317a51cafa77b806560d1e0663e">clRetainCommandBufferKHR</a></div><div class="ttdeci">cl_int clRetainCommandBufferKHR(cl_command_buffer_khr command_buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01141">OpenCL.cpp:1141</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af1ca0be4c120041eda74a4f1fc36c4a0"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af1ca0be4c120041eda74a4f1fc36c4a0">clEnqueueUnmapMemObject</a></div><div class="ttdeci">cl_int clEnqueueUnmapMemObject(cl_command_queue command_queue, cl_mem memobj, void *mapped_ptr, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00520">OpenCL.cpp:520</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aaf342694786e1e468c55431205f36ced"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aaf342694786e1e468c55431205f36ced">clSetKernelExecInfo</a></div><div class="ttdeci">cl_int clSetKernelExecInfo(cl_kernel kernel, cl_kernel_exec_info param_name, size_t param_value_size, const void *param_value)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01076">OpenCL.cpp:1076</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a2b2912c16aeb279ce55dc9c30968b906"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a2b2912c16aeb279ce55dc9c30968b906">clCreateCommandQueueWithProperties</a></div><div class="ttdeci">cl_command_queue clCreateCommandQueueWithProperties(cl_context context, cl_device_id device, const cl_queue_properties *properties, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00382">OpenCL.cpp:382</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a2c88e252bef66c05807260b013a725de"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a2c88e252bef66c05807260b013a725de">clRetainMemObject</a></div><div class="ttdeci">cl_int clRetainMemObject(cl_mem memobj)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00492">OpenCL.cpp:492</a></div></div>
<div class="ttc" id="anamespacecl_xhtml"><div class="ttname"><a href="namespacecl.xhtml">cl</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8h_source.xhtml#l00032">ICLTensor.h:32</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a0c6565be16b3326d2ccdab5339e0f7bf"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a0c6565be16b3326d2ccdab5339e0f7bf">clEnqueueReadBuffer</a></div><div class="ttdeci">cl_int clEnqueueReadBuffer(cl_command_queue command_queue, cl_mem buffer, cl_bool blocking_read, size_t offset, size_t size, void *ptr, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00603">OpenCL.cpp:603</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a3945f28bb1b23afb00a87801136271e9"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a3945f28bb1b23afb00a87801136271e9">clSetKernelArg</a></div><div class="ttdeci">cl_int clSetKernelArg(cl_kernel kernel, cl_uint arg_index, size_t arg_size, const void *arg_value)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00478">OpenCL.cpp:478</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a434f9e0998ebb096bf09a0a6abdd5938"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a434f9e0998ebb096bf09a0a6abdd5938">clRetainEvent</a></div><div class="ttdeci">cl_int clRetainEvent(cl_event event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00933">OpenCL.cpp:933</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ac9707377cc9420fd03b16d76e831513a"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ac9707377cc9420fd03b16d76e831513a">clCreateCommandQueue</a></div><div class="ttdeci">cl_command_queue clCreateCommandQueue(cl_context context, cl_device_id device, cl_command_queue_properties properties, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00365">OpenCL.cpp:365</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a677990334379f5f91619bfc43af63c4a"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a677990334379f5f91619bfc43af63c4a">clGetDeviceInfo</a></div><div class="ttdeci">cl_int clGetDeviceInfo(cl_device_id device, cl_device_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00900">OpenCL.cpp:900</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a43d9a36e38a16e503e0bbdc7b2f81f12"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a43d9a36e38a16e503e0bbdc7b2f81f12">clEnqueueMarker</a></div><div class="ttdeci">cl_int clEnqueueMarker(cl_command_queue command_queue, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00256">OpenCL.cpp:256</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_acb69a828a88a01250d4765d9ac36637f"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#acb69a828a88a01250d4765d9ac36637f">clGetKernelWorkGroupInfo</a></div><div class="ttdeci">cl_int clGetKernelWorkGroupInfo(cl_kernel kernel, cl_device_id device, cl_kernel_work_group_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00979">OpenCL.cpp:979</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a9533331a57797c4c4c4187900ff9ae51"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a9533331a57797c4c4c4187900ff9ae51">clReleaseKernel</a></div><div class="ttdeci">cl_int clReleaseKernel(cl_kernel kernel)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00868">OpenCL.cpp:868</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad33ef1ed0329715a73c83c42f5fd8dcf"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad33ef1ed0329715a73c83c42f5fd8dcf">clGetExtensionFunctionAddressForPlatform</a></div><div class="ttdeci">void * clGetExtensionFunctionAddressForPlatform(cl_platform_id platform, const char *funcname)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01090">OpenCL.cpp:1090</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_1633709b037eda5b8477677909f78129.xhtml">CL</a></li><li class="navelem"><a class="el" href="_open_c_l_8h.xhtml">OpenCL.h</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:19:53 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
