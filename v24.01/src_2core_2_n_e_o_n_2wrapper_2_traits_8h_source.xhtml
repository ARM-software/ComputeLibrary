<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/wrapper/traits.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">traits.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ACL_SRC_CORE_NEON_WRAPPER_TRAITS_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ACL_SRC_CORE_NEON_WRAPPER_TRAITS_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_core_types_8h.xhtml">arm_compute/core/CoreTypes.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#if defined(__ARM_FEATURE_FP16_VECTOR_ARITHMETIC)</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_types_8h.xhtml">src/cpu/CpuTypes.h</a>&quot;</span> <span class="comment">// required for float16_t</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#endif                        // defined(__ARM_FEATURE_FP16_VECTOR_ARITHMETIC)</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;arm_neon.h&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#if defined(ARM_COMPUTE_ENABLE_SVE) &amp;&amp; defined(__ARM_FEATURE_SVE)</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;arm_sve.h&gt;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(ARM_COMPUTE_ENABLE_SVE) &amp;&amp; defined(__ARM_FEATURE_SVE) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace </span>wrapper</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">   46</a></span>&#160;<span class="keyword">namespace </span>traits</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">// *INDENT-OFF*</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">// clang-format off</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">/** 64-bit vector tag */</span></div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">   52</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">vector_64_tag</a> {};<span class="comment"></span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">/** 128-bit vector tag */</span></div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">   54</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">vector_128_tag</a> {};</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">/** Create the appropriate SIMD vector given its type and size in terms of elements */</span></div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">   57</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> S&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">neon_vector</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">// Specializations</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SKIP_THIS</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">neon_vector</a>&lt;uint8_t, 8&gt;{ <span class="keyword">using</span> scalar_type = uint8_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint8x8_t; <span class="keyword">using</span> tag_type = <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">vector_64_tag</a>; };</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">neon_vector</a>&lt;int8_t, 8&gt;{ <span class="keyword">using</span> scalar_type = int8_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int8x8_t; <span class="keyword">using</span> tag_type = <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">vector_64_tag</a>; };</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;uint8_t, 16&gt;{ <span class="keyword">using</span> scalar_type = uint8_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint8x16_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;int8_t, 16&gt;{ <span class="keyword">using</span> scalar_type = int8_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int8x16_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;uint16_t, 4&gt;{ <span class="keyword">using</span> scalar_type = uint16_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint16x4_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;int16_t, 4&gt;{ <span class="keyword">using</span> scalar_type = int16_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int16x4_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;uint16_t, 8&gt;{ <span class="keyword">using</span> scalar_type = uint16_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint16x8_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;uint16_t, 16&gt;{ <span class="keyword">using</span> scalar_type = uint16_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint16x8x2_t; };</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;int16_t, 8&gt;{ <span class="keyword">using</span> scalar_type = int16_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int16x8_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;int16_t, 16&gt;{ <span class="keyword">using</span> scalar_type = int16_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int16x8x2_t; };</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;uint32_t, 2&gt;{ <span class="keyword">using</span> scalar_type = uint32_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint32x2_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;int32_t, 2&gt;{ <span class="keyword">using</span> scalar_type = int32_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int32x2_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;uint32_t, 4&gt;{ <span class="keyword">using</span> scalar_type = uint32_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint32x4_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;int32_t, 4&gt;{ <span class="keyword">using</span> scalar_type = int32_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int32x4_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;uint64_t, 1&gt;{ <span class="keyword">using</span> scalar_type = uint64_t;<span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint64x1_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;int64_t, 1&gt;{ <span class="keyword">using</span> scalar_type = int64_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int64x1_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;uint64_t, 2&gt;{ <span class="keyword">using</span> scalar_type = uint64_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint64x2_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;int64_t, 2&gt;{ <span class="keyword">using</span> scalar_type = int64_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int64x2_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;float_t, 2&gt;{ <span class="keyword">using</span> scalar_type = float_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = float32x2_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;float_t, 4&gt;{ <span class="keyword">using</span> scalar_type = float_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = float32x4_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;float16_t, 4&gt;{ <span class="keyword">using</span> scalar_type = float16_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = float16x4_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_vector&lt;float16_t, 8&gt;{ <span class="keyword">using</span> scalar_type = float16_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = float16x8_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">#endif // __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* DOXYGEN_SKIP_THIS */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">/**  Helper type template to get the type of a neon vector */</span></div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#a20782de3fa029b3c94a67c493f7cb6b9">   89</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> S&gt; <span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#a20782de3fa029b3c94a67c493f7cb6b9">neon_vector_t</a> = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">neon_vector&lt;T, S&gt;::type</a>;<span class="comment"></span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">/**  Helper type template to get the tag type of a neon vector */</span></div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#a793232f2606e7e2737fc313777ad3498">   91</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> S&gt; <span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#a793232f2606e7e2737fc313777ad3498">neon_vector_tag_t</a> = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">neon_vector&lt;T, S&gt;::tag_type</a>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">/** Vector bit-width enum class */</span></div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">   94</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;{</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">W64</a>,  <span class="comment">/**&lt; 64-bit width */</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65">W128</a>, <span class="comment">/**&lt; 128-bit width */</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;};</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">/** Create the appropriate SIMD vector given its type and size in terms of bits */</span></div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__bitvector.xhtml">  101</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, BitW<span class="keywordtype">id</span>th BW&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__bitvector.xhtml">neon_bitvector</a>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">// Specializations</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SKIP_THIS</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__bitvector.xhtml">neon_bitvector</a>&lt;uint8_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">W64</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint8x8_t; <span class="keyword">using</span> tag_type = <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">vector_64_tag</a>; };</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__bitvector.xhtml">neon_bitvector</a>&lt;int8_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">W64</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int8x8_t; <span class="keyword">using</span> tag_type = <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">vector_64_tag</a>; };</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;uint8_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::W128&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint8x16_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;int8_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::W128&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int8x16_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;uint16_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::W64&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint16x4_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;int16_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">W64</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int16x4_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;uint16_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65">W128</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint16x8_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;int16_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65">W128</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int16x8_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;uint32_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">W64</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint32x2_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;int32_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">W64</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int32x2_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;uint32_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65">W128</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint32x4_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;int32_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65">W128</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int32x4_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;uint64_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">W64</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint64x1_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;int64_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">W64</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int64x1_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;uint64_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65">W128</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = uint64x2_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;int64_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65">W128</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = int64x2_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;float_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">W64</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = float32x2_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;float_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65">W128</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = float32x4_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;float16_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">W64</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = float16x4_t; <span class="keyword">using</span> tag_type = vector_64_tag; };</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>neon_bitvector&lt;float16_t, <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">BitWidth</a>::<a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65">W128</a>&gt;{ <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = float16x8_t; <span class="keyword">using</span> tag_type = vector_128_tag; };</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#endif // __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">#if defined(ARM_COMPUTE_ENABLE_SVE) &amp;&amp; defined(__ARM_FEATURE_SVE)</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">/** Create the appropriate SVE vector given its type */</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="keyword">struct </span>sve_vector;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>sve_vector&lt;uint8_t&gt;{ <span class="keyword">using</span> scalar_type = uint8_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = svuint8_t; };</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span>sve_vector&lt;int8_t&gt;{ <span class="keyword">using</span> scalar_type = int8_t; <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = svint8_t; };</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(ARM_COMPUTE_ENABLE_SVE) &amp;&amp; defined(__ARM_FEATURE_SVE) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* DOXYGEN_SKIP_THIS */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">/**  Helper type template to get the type of a neon vector */</span></div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ad302081ac4baa4f94e7628d84421052c">  139</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, BitW<span class="keywordtype">id</span>th BW&gt; <span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ad302081ac4baa4f94e7628d84421052c">neon_bitvector_t</a> = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__bitvector.xhtml">neon_bitvector&lt;T, BW&gt;::type</a>;<span class="comment"></span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">/**  Helper type template to get the tag type of a neon vector */</span></div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#acf6b3be295be8dbd7897536bcd7561a3">  141</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, BitW<span class="keywordtype">id</span>th BW&gt; <span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#acf6b3be295be8dbd7897536bcd7561a3">neon_bitvector_tag_t</a> = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__bitvector.xhtml">neon_bitvector&lt;T, BW&gt;::tag_type</a>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">/** Promote a type */</span></div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">  144</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote</a> { };</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml#a3085ed9ad7c9b1c88dcec24108730e54">  145</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote</a>&lt;uint8_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml#a3085ed9ad7c9b1c88dcec24108730e54">type</a> = uint16_t; };</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int8__t_01_4.xhtml#a8812bf779dca54354aa6ad00cef14a73">  146</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote</a>&lt;int8_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int8__t_01_4.xhtml#a8812bf779dca54354aa6ad00cef14a73">type</a> = int16_t; };</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml#a43022da9f622deba3284b748a6885e23">  147</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote</a>&lt;uint16_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml#a43022da9f622deba3284b748a6885e23">type</a> = uint32_t; };</div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int16__t_01_4.xhtml#a4f14ffc6d6f6ca92afb1baf996fc9305">  148</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote</a>&lt;int16_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int16__t_01_4.xhtml#a4f14ffc6d6f6ca92afb1baf996fc9305">type</a> = int32_t; };</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml#a9659bbcc7fc016eda242219021c7980b">  149</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote</a>&lt;uint32_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml#a9659bbcc7fc016eda242219021c7980b">type</a> = uint64_t; };</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int32__t_01_4.xhtml#a70ca3d636283d6713220cd8af5fc07b3">  150</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote</a>&lt;int32_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int32__t_01_4.xhtml#a70ca3d636283d6713220cd8af5fc07b3">type</a> = int64_t; };</div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01float_01_4.xhtml#a05cacf975133703fccd67d8b60ed9ae0">  151</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote</a>&lt;float&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01float_01_4.xhtml#a05cacf975133703fccd67d8b60ed9ae0">type</a> = float; };</div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01half_01_4.xhtml#a871173f31fa2a65afb444d262bc1aadb">  152</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote</a>&lt;<a class="code" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a>&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01half_01_4.xhtml#a871173f31fa2a65afb444d262bc1aadb">type</a> = <a class="code" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a>; };</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">/** Get promoted type */</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ac20ca549fa27b2eed44367745055a233">  156</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ac20ca549fa27b2eed44367745055a233">promote_t</a> = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote&lt;T&gt;::type</a>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">// clang-format on</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">// *INDENT-ON*</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;} <span class="comment">// namespace traits</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;} <span class="comment">// namespace wrapper</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="preprocessor">#endif // ACL_SRC_CORE_NEON_WRAPPER_TRAITS_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int32__t_01_4_xhtml_a70ca3d636283d6713220cd8af5fc07b3"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int32__t_01_4.xhtml#a70ca3d636283d6713220cd8af5fc07b3">arm_compute::wrapper::traits::promote&lt; int32_t &gt;::type</a></div><div class="ttdeci">int64_t type</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00150">traits.h:150</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint16__t_01_4_xhtml_a43022da9f622deba3284b748a6885e23"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml#a43022da9f622deba3284b748a6885e23">arm_compute::wrapper::traits::promote&lt; uint16_t &gt;::type</a></div><div class="ttdeci">uint32_t type</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00147">traits.h:147</a></div></div>
<div class="ttc" id="agemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00261">gemm_interleaved.hpp:261</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1promote_3_01float_01_4_xhtml_a05cacf975133703fccd67d8b60ed9ae0"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01float_01_4.xhtml#a05cacf975133703fccd67d8b60ed9ae0">arm_compute::wrapper::traits::promote&lt; float &gt;::type</a></div><div class="ttdeci">float type</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00151">traits.h:151</a></div></div>
<div class="ttc" id="a_cpu_types_8h_xhtml"><div class="ttname"><a href="_cpu_types_8h.xhtml">CpuTypes.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1neon__vector_xhtml"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">arm_compute::wrapper::traits::neon_vector</a></div><div class="ttdoc">Create the appropriate SIMD vector given its type and size in terms of elements.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00057">traits.h:57</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1neon__bitvector_xhtml"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1neon__bitvector.xhtml">arm_compute::wrapper::traits::neon_bitvector</a></div><div class="ttdoc">Create the appropriate SIMD vector given its type and size in terms of bits.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00101">traits.h:101</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a73e2825fd61d349c5ca2f5313e3c8ea1"><div class="ttname"><a href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">arm_compute::half</a></div><div class="ttdeci">half_float::half half</div><div class="ttdoc">16-bit floating point type</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00036">CoreTypes.h:36</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int16__t_01_4_xhtml_a4f14ffc6d6f6ca92afb1baf996fc9305"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int16__t_01_4.xhtml#a4f14ffc6d6f6ca92afb1baf996fc9305">arm_compute::wrapper::traits::promote&lt; int16_t &gt;::type</a></div><div class="ttdeci">int32_t type</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00148">traits.h:148</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_1_1traits_xhtml_ad302081ac4baa4f94e7628d84421052c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ad302081ac4baa4f94e7628d84421052c">arm_compute::wrapper::traits::neon_bitvector_t</a></div><div class="ttdeci">typename neon_bitvector&lt; T, BW &gt;::type neon_bitvector_t</div><div class="ttdoc">Helper type template to get the type of a neon vector.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00139">traits.h:139</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_1_1traits_xhtml_aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba5d0626c5e2f6aee458121df2a9960a65">arm_compute::wrapper::traits::BitWidth::W128</a></div><div class="ttdeci">@ W128</div><div class="ttdoc">128-bit width</div></div>
<div class="ttc" id="a_core_types_8h_xhtml"><div class="ttname"><a href="_core_types_8h.xhtml">CoreTypes.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag_xhtml"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">arm_compute::wrapper::traits::vector_64_tag</a></div><div class="ttdoc">64-bit vector tag</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00052">traits.h:52</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1promote_xhtml"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">arm_compute::wrapper::traits::promote</a></div><div class="ttdoc">Promote a type.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00144">traits.h:144</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint8__t_01_4_xhtml_a3085ed9ad7c9b1c88dcec24108730e54"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml#a3085ed9ad7c9b1c88dcec24108730e54">arm_compute::wrapper::traits::promote&lt; uint8_t &gt;::type</a></div><div class="ttdeci">uint16_t type</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00145">traits.h:145</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_1_1traits_xhtml_a20782de3fa029b3c94a67c493f7cb6b9"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#a20782de3fa029b3c94a67c493f7cb6b9">arm_compute::wrapper::traits::neon_vector_t</a></div><div class="ttdeci">typename neon_vector&lt; T, S &gt;::type neon_vector_t</div><div class="ttdoc">Helper type template to get the type of a neon vector.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00089">traits.h:89</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint32__t_01_4_xhtml_a9659bbcc7fc016eda242219021c7980b"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml#a9659bbcc7fc016eda242219021c7980b">arm_compute::wrapper::traits::promote&lt; uint32_t &gt;::type</a></div><div class="ttdeci">uint64_t type</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00149">traits.h:149</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_1_1traits_xhtml_aecca9117994b24bab16aaf0d9674fb0b"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0b">arm_compute::wrapper::traits::BitWidth</a></div><div class="ttdeci">BitWidth</div><div class="ttdoc">Vector bit-width enum class.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00094">traits.h:94</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_1_1traits_xhtml_a793232f2606e7e2737fc313777ad3498"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#a793232f2606e7e2737fc313777ad3498">arm_compute::wrapper::traits::neon_vector_tag_t</a></div><div class="ttdeci">typename neon_vector&lt; T, S &gt;::tag_type neon_vector_tag_t</div><div class="ttdoc">Helper type template to get the tag type of a neon vector.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00091">traits.h:91</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag_xhtml"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">arm_compute::wrapper::traits::vector_128_tag</a></div><div class="ttdoc">128-bit vector tag</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00054">traits.h:54</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_1_1traits_xhtml_acf6b3be295be8dbd7897536bcd7561a3"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#acf6b3be295be8dbd7897536bcd7561a3">arm_compute::wrapper::traits::neon_bitvector_tag_t</a></div><div class="ttdeci">typename neon_bitvector&lt; T, BW &gt;::tag_type neon_bitvector_tag_t</div><div class="ttdoc">Helper type template to get the tag type of a neon vector.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00141">traits.h:141</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1promote_3_01half_01_4_xhtml_a871173f31fa2a65afb444d262bc1aadb"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01half_01_4.xhtml#a871173f31fa2a65afb444d262bc1aadb">arm_compute::wrapper::traits::promote&lt; half &gt;::type</a></div><div class="ttdeci">half type</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00152">traits.h:152</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_1_1traits_xhtml_ac20ca549fa27b2eed44367745055a233"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ac20ca549fa27b2eed44367745055a233">arm_compute::wrapper::traits::promote_t</a></div><div class="ttdeci">typename promote&lt; T &gt;::type promote_t</div><div class="ttdoc">Get promoted type.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00156">traits.h:156</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_1_1traits_xhtml_aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#aecca9117994b24bab16aaf0d9674fb0ba9b84734fee03571d586d8700ce846006">arm_compute::wrapper::traits::BitWidth::W64</a></div><div class="ttdeci">@ W64</div><div class="ttdoc">64-bit width</div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int8__t_01_4_xhtml_a8812bf779dca54354aa6ad00cef14a73"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int8__t_01_4.xhtml#a8812bf779dca54354aa6ad00cef14a73">arm_compute::wrapper::traits::promote&lt; int8_t &gt;::type</a></div><div class="ttdeci">int16_t type</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00146">traits.h:146</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_8224aa485683c095eaa3fd7faa788467.xhtml">wrapper</a></li><li class="navelem"><a class="el" href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h.xhtml">traits.h</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:19:54 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
