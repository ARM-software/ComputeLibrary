<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/gpu/cl/operators/ClFullyConnected.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cl_fully_connected_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClFullyConnected.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_fully_connected_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_fully_connected_8h.xhtml">src/gpu/cl/operators/ClFullyConnected.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_size2_d_8h.xhtml">arm_compute/core/Size2D.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2utils_2quantization_2_asymm_helpers_8h.xhtml">arm_compute/core/utils/quantization/AsymmHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2common_2utils_2_log_8h.xhtml">src/common/utils/Log.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_fill_border_kernel_8h.xhtml">src/core/CL/kernels/CLFillBorderKernel.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_memory_helpers_8h.xhtml">src/core/helpers/MemoryHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2gpu_2cl_2operators_2_c_l_convert_fully_connected_weights_8h.xhtml">src/gpu/cl/operators/ClConvertFullyConnectedWeights.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_flatten_8h.xhtml">src/gpu/cl/operators/ClFlatten.h</a>&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_8h.xhtml">src/gpu/cl/operators/ClGemm.h</a>&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_lowp_matrix_multiply_core_8h.xhtml">src/gpu/cl/operators/ClGemmLowpMatrixMultiplyCore.h</a>&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2gpu_2cl_2operators_2_c_l_mat_mul_8h.xhtml">src/gpu/cl/operators/ClMatMul.h</a>&quot;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2gpu_2cl_2operators_2_c_l_transpose_8h.xhtml">src/gpu/cl/operators/ClTranspose.h</a>&quot;</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_aux_tensor_handler_8h.xhtml">src/gpu/cl/utils/ClAuxTensorHandler.h</a>&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_mat_mul_native_kernel_config_8h.xhtml">src/runtime/heuristics/matmul_native/ClMatMulNativeKernelConfig.h</a>&quot;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_cl_mat_mul_native_kernel_config_8h.xhtml">src/runtime/heuristics/matmul_native/IClMatMulNativeKernelConfig.h</a>&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cast_8h.xhtml">support/Cast.h</a>&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">namespace </span>opencl</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml">arm_compute::misc::shape_calculator</a>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">// Function to calculate batched tensor shape in format [M, 1, B0, B1 ..] which is the format matmul expects</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">inline</span> TensorShape get_reshaped_matmul_tensor(<span class="keyword">const</span> TensorShape &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">return</span> TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.x(), 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.y(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.collapsed_from(2).z()); <span class="comment">// Return value optimisation</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;Status construct_gemmlowp_output_stage(<span class="keyword">const</span> ITensorInfo       &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                       <span class="keyword">const</span> ITensorInfo       &amp;weights,</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                       <span class="keyword">const</span> ITensorInfo       &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                       GEMMLowpOutputStageInfo &amp;gemmlowp_output_stage,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                       ActivationLayerInfo      activation_info)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    gemmlowp_output_stage.type                = <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    gemmlowp_output_stage.gemmlowp_offset     = 0;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    gemmlowp_output_stage.gemmlowp_multiplier = 0;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    gemmlowp_output_stage.gemmlowp_shift      = 0;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.data_type();</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment">// Configure output stage for quantized case</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>))</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">const</span> QuantizationInfo        oq_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.quantization_info();</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo iq_unif = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.quantization_info().uniform();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo wq_unif = weights.quantization_info().uniform();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo oq_unif = oq_info.uniform();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> output_quant_info = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.total_size() == 0) ? iq_unif : oq_unif;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> multiplier        = (iq_unif.scale * wq_unif.scale) / output_quant_info.scale;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordtype">int</span>         output_multiplier = 0;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordtype">int</span>         output_shift      = 0;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(multiplier, &amp;output_multiplier, &amp;output_shift));</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        PixelValue type_min{};</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        PixelValue type_max{};</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        std::tie(type_min, type_max) = <a class="code" href="namespacearm__compute.xhtml#ae69217acf0f0b5d4de030a09ad50a0bc">get_min_max</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">if</span> (activation_info.enabled())</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            std::tie(type_min, type_max) =</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#a549f4d59cb7f823d884ffe2424079c3a">get_quantized_activation_min_max</a>(activation_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, output_quant_info);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="comment">// Set the GEMMLowp output stage info</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        gemmlowp_output_stage.gemmlowp_offset     = output_quant_info.offset;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        gemmlowp_output_stage.gemmlowp_multiplier = output_multiplier;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        gemmlowp_output_stage.gemmlowp_shift      = output_shift;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        gemmlowp_output_stage.gemmlowp_multipliers.push_back(output_multiplier);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        gemmlowp_output_stage.gemmlowp_shifts.push_back(output_shift);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        type_min.get(gemmlowp_output_stage.gemmlowp_min_bound);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        type_max.get(gemmlowp_output_stage.gemmlowp_max_bound);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;Status validate_mm(<span class="keyword">const</span> ITensorInfo             &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                   <span class="keyword">const</span> ITensorInfo             &amp;weights,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                   <span class="keyword">const</span> ITensorInfo             *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                   <span class="keyword">const</span> ITensorInfo             &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                   <span class="keyword">const</span> FullyConnectedLayerInfo &amp;fc_info,</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                   <span class="keywordtype">bool</span>                           use_matmul)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="comment">// Note : If input is dynamic and data is not batched, use matmul, else use gemm</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> transpose_weights = fc_info.transpose_weights ? !fc_info.are_weights_reshaped : <span class="keyword">false</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> use_dynamic_gemm =</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        !use_matmul &amp;&amp; !weights.are_values_constant() &amp;&amp; transpose_weights; <span class="comment">// use dynamic gemm as fallback for matmul</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_quantized = <a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.data_type());</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">if</span> (use_matmul)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keyword">const</span> MatMulInfo m_info = MatMulInfo().adj_rhs(transpose_weights);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment">// Note: LHS is reshaped here to match ClMatMul expectations of batch index - From [M, B0, B1] to [M, 1, B0, B1]</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        TensorInfo lhs_to_use = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.clone()-&gt;set_tensor_shape(get_reshaped_matmul_tensor(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.tensor_shape()));</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>                                         gpu_target = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        std::unique_ptr&lt;cl_matmul::IClMatMulNativeKernelConfig&gt; <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> =</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <a class="code" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_kernel_configuration_factory.xhtml#a2253cdf55abb1aed125585e3b96a5a90">cl_matmul::ClMatMulNativeKernelConfigurationFactory::create</a>(gpu_target);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keyword">const</span> MatMulKernelInfo kernel_info = <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;configure(&amp;lhs_to_use, &amp;weights, m_info);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">return</span> is_quantized ? <a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_lowp_native_kernel.xhtml#ad7202b8e6dbb1a8c4ed6ccea00f8cdac">kernels::ClMatMulLowpNativeKernel::validate</a>(&amp;lhs_to_use, &amp;weights, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                                                          kernel_info, fc_info.activation_info)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                            : kernels::ClMatMulNativeKernel::<a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(&amp;lhs_to_use, &amp;weights, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, kernel_info,</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                                                      fc_info.activation_info);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        GEMMLowpOutputStageInfo gemmlowp_output_stage;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            construct_gemmlowp_output_stage(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, gemmlowp_output_stage, fc_info.activation_info));</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keyword">const</span> GEMMInfo &amp;gemm_info = GEMMInfo(<span class="keyword">false</span>,                           <span class="comment">// is_a_reshaped</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                             <span class="keyword">false</span>,                           <span class="comment">// is_b_reshaped</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                             !use_dynamic_gemm,               <span class="comment">// reshape_b_only_on_first_run</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                             0,                               <span class="comment">// depth_output_gemm3d</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                             <span class="keyword">false</span>,                           <span class="comment">// reinterpret_input_as_3d</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                             fc_info.retain_internal_weights, <span class="comment">// retain_internal_weights</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                             gemmlowp_output_stage,           <span class="comment">// gemmlowp_output_stage</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                             fc_info.fp_mixed_precision,      <span class="comment">// fp_mixed_precision</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                                             <span class="keyword">false</span>,                           <span class="comment">// fast_math</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                                             <span class="keyword">true</span>,                            <span class="comment">// broadcast_bias</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                                             ActivationLayerInfo());          <span class="comment">// activation_info</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">if</span> (is_quantized)</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keyword">const</span> UniformQuantizationInfo iq_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.quantization_info().uniform();</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keyword">const</span> UniformQuantizationInfo wq_info = weights.quantization_info().uniform();</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="comment">// Since we need negative offsets for computing convolution, we need to change QuantizationInfo()</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="comment">// Extract and negate src and weights offset</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keyword">const</span> QuantizationInfo src_quantization_info(iq_info.scale, -iq_info.offset);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keyword">const</span> QuantizationInfo weights_quantization_info(wq_info.scale, -wq_info.offset);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="comment">// Validate gemmlowp function</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">ClGemmLowpMatrixMultiplyCore::validate</a>(</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.clone()-&gt;set_quantization_info(src_quantization_info),</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                &amp;weights.clone()-&gt;set_quantization_info(weights_quantization_info), <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, gemm_info));</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a9f6cb7cb1ae1f9a3260abea993ef8608">ClGemm::validate</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;weights, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, 1.f, 1.f, gemm_info));</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a3cff020074e699ef234b33ce69dbd553">  188</a></span>&#160;<a class="code" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a3cff020074e699ef234b33ce69dbd553">ClFullyConnected::ClFullyConnected</a>()</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    : _convert_weights(nullptr),</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      _flatten(nullptr),</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      _reshape_weights(nullptr),</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      _mm_gemm(nullptr),</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      _mm_gemmlowp(nullptr),</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      _matmul_native_kernel(nullptr),</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      _matmul_lowp_native_kernel(nullptr),</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      _aux_mem(Count)</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;{</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;}</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<a class="code" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a1ddc02c8e0cc57f8ba7e0773c29b81d4">ClFullyConnected::~ClFullyConnected</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keywordtype">void</span> ClFullyConnected::configure_mm(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a>        &amp;compile_context,</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>                   *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>                   *weights,</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>                   *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>,</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>                   *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a> &amp;fc_info)</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;{</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="comment">// If weights are dynamic and matmul is supported use matmul, else use gemm</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">if</span> (_use_matmul)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="comment">// Specify whether transpose weights is necessary in matmul info</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_mat_mul_info.xhtml">MatMulInfo</a> mat_info = <a class="code" href="classarm__compute_1_1_mat_mul_info.xhtml">MatMulInfo</a>().<a class="code" href="classarm__compute_1_1_mat_mul_info.xhtml#a39f307e04480a663f207874d42b73347">adj_rhs</a>(_transpose_weights);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="comment">// Note: MatMul does not need offset negation unlike gemm</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="comment">// 1. Change shape when calling matmul to fit batch expectations.</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        _lhs_to_use = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;clone()-&gt;set_tensor_shape(get_reshaped_matmul_tensor(_lhs_to_use.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>()));</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="comment">// 2. Use heuristics to get kernel info object</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>                                         gpu_target = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>();</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        std::unique_ptr&lt;cl_matmul::IClMatMulNativeKernelConfig&gt; kernel_config =</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <a class="code" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_kernel_configuration_factory.xhtml#a2253cdf55abb1aed125585e3b96a5a90">cl_matmul::ClMatMulNativeKernelConfigurationFactory::create</a>(gpu_target);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <a class="code" href="structarm__compute_1_1_mat_mul_kernel_info.xhtml">MatMulKernelInfo</a> kernel_info = kernel_config-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, mat_info);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="comment">// 3. Configure relevant matmul kernel</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">if</span> (_is_quantized)</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            _matmul_lowp_native_kernel = std::make_unique&lt;kernels::ClMatMulLowpNativeKernel&gt;();</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            _matmul_lowp_native_kernel-&gt;set_target(gpu_target);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            _matmul_lowp_native_kernel-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, kernel_info,</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                                  fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        {</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            _matmul_native_kernel = std::make_unique&lt;kernels::ClMatMulNativeKernel&gt;();</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            _matmul_native_kernel-&gt;set_target(gpu_target);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            _matmul_native_kernel-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, kernel_info,</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                             fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="comment">// Configure GEMM</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        GEMMLowpOutputStageInfo gemmlowp_output_stage;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        construct_gemmlowp_output_stage(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, *weights, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, gemmlowp_output_stage, fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keyword">const</span> GEMMInfo &amp;gemm_info = GEMMInfo(<span class="keyword">false</span>,                           <span class="comment">// is_a_reshaped</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                             <span class="keyword">false</span>,                           <span class="comment">// is_b_reshaped</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                                             !_dynamic_gemm,                  <span class="comment">// reshape_b_only_on_first_run</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                             0,                               <span class="comment">// depth_output_gemm3d</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                             <span class="keyword">false</span>,                           <span class="comment">// reinterpret_input_as_3d</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                                             fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a4f87c5060cca01305f94a9d2f10e9d83">retain_internal_weights</a>, <span class="comment">// retain_internal_weights</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                                             gemmlowp_output_stage,           <span class="comment">// gemmlowp_output_stage</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                                             fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a31ff0f4153b53a0abfc96250b18b15f1">fp_mixed_precision</a>,      <span class="comment">// fp_mixed_precision</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                                             <span class="keyword">false</span>,                           <span class="comment">// fast_math</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                                             <span class="keyword">true</span>,                            <span class="comment">// broadcast_bias</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                             fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>);        <span class="comment">// activation_info</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keywordflow">if</span> (_is_quantized)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            <span class="comment">// Since we need negative offsets for computing convolution, we need to change QuantizationInfo()</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            <span class="comment">// Extract and negate input and weights offset</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keyword">const</span> QuantizationInfo src_quantization_info     = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;quantization_info();</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keyword">const</span> QuantizationInfo weights_quantization_info = weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>();</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            TensorInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>     = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;clone()-&gt;set_quantization_info(src_quantization_info);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            TensorInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a> = weights-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>()-&gt;set_quantization_info(weights_quantization_info);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a78839e7861ba8ffed52ca55da2745761">set_quantization_info</a>(</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                QuantizationInfo(src_quantization_info.uniform().scale, -src_quantization_info.uniform().offset));</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>.set_quantization_info(QuantizationInfo(weights_quantization_info.uniform().scale,</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                                                                -weights_quantization_info.uniform().offset));</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <span class="comment">// Configure gemmlowp function</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            _mm_gemmlowp = std::make_unique&lt;ClGemmLowpMatrixMultiplyCore&gt;();</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            _mm_gemmlowp-&gt;configure(compile_context, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, gemm_info);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        }</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="comment">// Configure matrix multiply kernel</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            _mm_gemm = std::make_unique&lt;ClGemm&gt;();</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            _mm_gemm-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, 1.f, 1.f, gemm_info);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;}</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordtype">void</span> ClFullyConnected::configure_conv_fc(<span class="keyword">const</span> CLCompileContext        &amp;compile_context,</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                                         ITensorInfo                   *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                                         ITensorInfo                   *weights,</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                         ITensorInfo                   *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>,</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                                         ITensorInfo                   *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                         <span class="keyword">const</span> FullyConnectedLayerInfo &amp;fc_info)</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;{</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="comment">// MatMul fuses transpose operation, so we use the first dimension for comparison where appropriate.</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>((weights-&gt;dimension((_use_matmul &amp;&amp; _transpose_weights) ? 0 : 1) !=</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                          (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(0) * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(1) * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(2))));</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="comment">// If the fully connected layer is called after a convolution layer, the input tensor must be linearized</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="comment">// Initialize output tensor for flatten</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    _flattened_src = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;clone()</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                         -&gt;set_is_resizable(<span class="keyword">true</span>)</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                         .reset_padding()</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                         .set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a83efb6708574e67d13965bcd2059ad75">compute_flatten_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>))</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                         .set_data_layout(<a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="comment">// Configure flatten kernel</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    _flatten = std::make_unique&lt;ClFlatten&gt;();</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    _flatten-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;_flattened_src);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="comment">// Note: if flatten has &gt; 1 dimensions after, these dimensions are batch</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="comment">// Configure matrix multiply kernel</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    configure_mm(compile_context, &amp;_flattened_src, weights, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, fc_info);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;}</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160; </div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordtype">void</span> ClFullyConnected::configure_fc_fc(<span class="keyword">const</span> CLCompileContext        &amp;compile_context,</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                                       ITensorInfo                   *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                                       ITensorInfo                   *weights,</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                                       ITensorInfo                   *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>,</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                                       ITensorInfo                   *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                                       <span class="keyword">const</span> FullyConnectedLayerInfo &amp;fc_info)</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;{</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="comment">// MatMul fuses transpose operation, so we use the first dimension for comparison where appropriate.</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(0) != weights-&gt;dimension((_use_matmul &amp;&amp; _transpose_weights) ? 0 : 1));</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; </div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="comment">// Configure matrix multiply kernel</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    configure_mm(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, fc_info);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a7030809bde2d1adcf2e1accc36965018">  330</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a7030809bde2d1adcf2e1accc36965018">ClFullyConnected::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;compile_context,</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                                 <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>            *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                 <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>            *weights,</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                                 <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>            *biases,</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                                 <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>            *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                                 <a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a> fc_info)</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;{</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target = <a class="code" href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">get_arch_from_target</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().target());</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="comment">// Perform validate step</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#ade56104b8c4e9ddbd2065145e3f91dfd">ClFullyConnected::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, fc_info));</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, fc_info);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    _transpose_weights  = fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a11851649b6a7cd12ae25cf72b769cfb9">transpose_weights</a> ? !fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a146a7be9d813ad80abb72a0bf6566cbc">are_weights_reshaped</a> : <span class="keyword">false</span>;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    _is_fc_after_conv   = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    _is_quantized       = <a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type());</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    _is_prepared        = fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a4f87c5060cca01305f94a9d2f10e9d83">retain_internal_weights</a>;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    _weights_to_use     = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(*weights);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    _weights_to_use_idx = <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160; </div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="comment">// When using dynamic weights - use matmul kernels.</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="comment">// Note: MatMul is not used in the following cases (Gemm is used as fallback) :</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="comment">// 1. When the weights tensor is not dynamic</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="comment">// 2. MatMul does not support broadcasting batch dimension, and therefore is disabled if fc is batched.</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="comment">// 3. When FC is after convolution and src tensor data layout does not match weights trained data layout (weights conversion kernel is required)</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_batched_fc_layer = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(1) &gt; 1;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    _use_matmul = gpu_target != <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">GPUTarget::MIDGARD</a> &amp;&amp; !weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">are_values_constant</a>() &amp;&amp; !is_batched_fc_layer &amp;&amp;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                  !(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;num_dimensions() &gt; 1 &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout() != fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a89d0ed86875fd3fb395899187c84bc2f">weights_trained_layout</a>));</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    _dynamic_gemm = !weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">are_values_constant</a>() &amp;&amp; _transpose_weights &amp;&amp; !_use_matmul;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160; </div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="comment">// With the Fully Connected layer we can have 4 different cases:</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="comment">//  1) Convolution layer -&gt; Fully Connected layer without batches</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="comment">//  2) Fully Connected layer -&gt; Fully Connected layer without batches</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="comment">//  3) Convolution layer -&gt; Fully Connected layer with batches</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="comment">//  4) Fully Connected layer -&gt; Fully Connected layer with batches</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="comment">// Check if we have a fully connected layer with batches</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keywordflow">if</span> (is_batched_fc_layer)</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    {</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        _is_fc_after_conv = (<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">TensorShape::num_max_dimensions</a> &gt;= 4) &amp;&amp;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                            (std::equal(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor_shape().cbegin() + 3, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor_shape().cend(),</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;tensor_shape().cbegin() + 1));</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    }</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    {</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        _is_fc_after_conv = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;num_dimensions() &gt; 1;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    }</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160; </div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights_used = weights;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160; </div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="comment">// Reshape weights if needed - Not needed when matmul is in use as matmul fuses transpose op.</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="keywordflow">if</span> (_transpose_weights &amp;&amp; !_use_matmul)</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    {</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="comment">// Reshape the weights</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        _reshape_weights = std::make_unique&lt;ClTranspose&gt;();</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        _reshape_weights-&gt;configure(compile_context, weights, &amp;_reshaped_weights);</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        weights_used        = &amp;_reshaped_weights;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        _weights_to_use_idx = <a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransposedWeights);</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    }</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160; </div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="comment">// Convert weights if needed</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keywordflow">if</span> (_is_fc_after_conv &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout() != fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a89d0ed86875fd3fb395899187c84bc2f">weights_trained_layout</a>))</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    {</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="comment">// Convert weights</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        _convert_weights = std::make_unique&lt;ClConvertFullyConnectedWeights&gt;();</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        _convert_weights-&gt;configure(compile_context, weights_used, &amp;_converted_weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor_shape(),</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                                    fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a89d0ed86875fd3fb395899187c84bc2f">weights_trained_layout</a>);</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160; </div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        weights_used         = &amp;_converted_weights;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        _weights_to_use_idx  = <a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(ConvertedWeights);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        _run_convert_weights = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keywordflow">if</span> (_is_fc_after_conv)</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="comment">// Fully Connected layer after a Convolution Layer without batches</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        configure_conv_fc(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights_used, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, fc_info);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    {</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="comment">// Fully Connected layer after a Fully Connected Layer without batches</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        configure_fc_fc(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights_used, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, fc_info);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="comment">// Update TensorInfo of final weights used (Need to be done in the end due to padding expansion)</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    _weights_to_use = *weights_used;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160; </div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordflow">if</span> (_use_matmul)</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    {</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <span class="comment">// Note : MatMul does not use transpose and does not need auxillary memory, so only converted weights are added to aux_mem</span></div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        _aux_mem[ConvertedWeights] =</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(ConvertedWeights), MemoryLifetime::Temporary, _converted_weights.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    }</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    {</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <span class="comment">// Set auxiliary memory requirements for gemm operators</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <span class="keyword">auto</span> gemm_mem_req = (_is_quantized) ? _mm_gemmlowp-&gt;workspace() : _mm_gemm-&gt;workspace();</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; gemm_mem_req.size(); ++i)</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        {</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            _aux_mem[i] = gemm_mem_req[i];</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        }</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="keywordflow">if</span> (_aux_mem[1].size &gt; 0 || _aux_mem[2].size &gt; 0) <span class="comment">// Persistent weights memory on GEMMs</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            <span class="comment">// Release permuted weights at the of prepare as they are further transposed by the assembly dispatch</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            <span class="comment">// Keep all the auxiliary tensors in case of dynamic weights as they are recalculated every time</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            _aux_mem[TransposedWeights] = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransposedWeights), _dynamic_gemm ? MemoryLifetime::Temporary : <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1">MemoryLifetime::Prepare</a>,</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                _reshaped_weights.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            _aux_mem[ConvertedWeights] = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(ConvertedWeights),</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                                                    _dynamic_gemm ? MemoryLifetime::Temporary : <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1">MemoryLifetime::Prepare</a>,</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                                    _converted_weights.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        }</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        {</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            <span class="comment">// Release permuted weights at the of prepare as they are further transposed by the assembly dispatch</span></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> transposed_wei_lft = (_weights_to_use_idx == <a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransposedWeights))</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                                                ? MemoryLifetime::Persistent</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                                                : <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1">MemoryLifetime::Prepare</a>;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> converted_wei_lft  = (_weights_to_use_idx == <a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(ConvertedWeights))</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                                                ? MemoryLifetime::Persistent</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                                                : <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1">MemoryLifetime::Prepare</a>;</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160; </div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            _aux_mem[TransposedWeights] = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransposedWeights),</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                                                     _dynamic_gemm ? MemoryLifetime::Temporary : transposed_wei_lft,</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                                                     _reshaped_weights.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            _aux_mem[ConvertedWeights]  = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(ConvertedWeights),</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                                                    _dynamic_gemm ? MemoryLifetime::Temporary : converted_wei_lft,</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                                                     _converted_weights.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        }</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    }</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    _aux_mem[FlattenedSrc] =</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(FlattenedSrc), MemoryLifetime::Temporary, _flattened_src.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;}</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160; </div>
<div class="line"><a name="l00464"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#ade56104b8c4e9ddbd2065145e3f91dfd">  464</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#ade56104b8c4e9ddbd2065145e3f91dfd">ClFullyConnected::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>      *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>      *weights,</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>      *biases,</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>      *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                                  <a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a> fc_info)</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;{</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>,</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() &gt; 2);</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">enabled</a>() &amp;&amp; <a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type()) &amp;&amp;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>() != ActivationLayerInfo::ActivationFunction::RELU &amp;&amp;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>() != ActivationLayerInfo::ActivationFunction::BOUNDED_RELU &amp;&amp;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>() != ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU);</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target = <a class="code" href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">get_arch_from_target</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().target());</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160; </div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> transpose_weights = fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a11851649b6a7cd12ae25cf72b769cfb9">transpose_weights</a> ? !fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a146a7be9d813ad80abb72a0bf6566cbc">are_weights_reshaped</a> : <span class="keyword">false</span>;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="keywordtype">bool</span>       is_fc_after_conv  = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160; </div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="comment">// When using dynamic weights - use matmul kernels.</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="comment">// Note: MatMul does not support broadcasting so fallback with batched cases.</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_batched_fc_layer = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(1) &gt; 1;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> use_matmul          = gpu_target != <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">GPUTarget::MIDGARD</a> &amp;&amp; !weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">are_values_constant</a>() &amp;&amp;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                            !is_batched_fc_layer &amp;&amp;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                            !(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;num_dimensions() &gt; 1 &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout() != fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a89d0ed86875fd3fb395899187c84bc2f">weights_trained_layout</a>));</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160; </div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;flatten_src      = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;clone()</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                                                         -&gt;set_is_resizable(<span class="keyword">true</span>)</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                                                         .reset_padding()</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                                                         .set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a83efb6708574e67d13965bcd2059ad75">compute_flatten_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>))</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                                                         .<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59cb3ec4cae7835d0a0283be56ef789">set_data_layout</a>(<a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>));</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;reshaped_weights = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        weights-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>()-&gt;set_is_resizable(<span class="keyword">true</span>).reset_padding().set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69cb11b5b37f94a6bea9eaad9d13cccf">compute_transposed_shape</a>(*weights)));</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;converted_weights = (transpose_weights &amp;&amp; !use_matmul)</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                                               ? <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(*reshaped_weights.<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>())</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                                               : <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(weights-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>()-&gt;set_is_resizable(<span class="keyword">true</span>).reset_padding());</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160; </div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="comment">// With the Fully Connected layer we can have 4 different cases:</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <span class="comment">//  1) Convolution layer -&gt; Fully Connected layer without batches</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="comment">//  2) Fully Connected layer -&gt; Fully Connected layer without batches</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="comment">//  3) Convolution layer -&gt; Fully Connected layer with batches</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    <span class="comment">//  4) Fully Connected layer -&gt; Fully Connected layer with batches</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160; </div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src_to_use     = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights_to_use = weights;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160; </div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="keywordflow">if</span> (biases != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    {</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(biases-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() &gt; 1);</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type()))</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        {</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(biases, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        }</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        {</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, biases);</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        }</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    }</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160; </div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <span class="comment">// Check if FC is after conv (flatten kernel is run in case where FC is after conv.)</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="keywordflow">if</span> (is_batched_fc_layer)</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    {</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        is_fc_after_conv = (<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">TensorShape::num_max_dimensions</a> &gt;= 4) &amp;&amp;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                           (std::equal(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor_shape().cbegin() + 3, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor_shape().cend(),</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                                       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;tensor_shape().cbegin() + 1));</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    }</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    {</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        is_fc_after_conv = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;num_dimensions() &gt; 1;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    }</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160; </div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <span class="comment">// Transpose kernel does not run when matmul is supported as matmul fuses transpose op.</span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordflow">if</span> (transpose_weights &amp;&amp; !use_matmul)</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    {</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        <span class="comment">// Validate reshape weights kernel</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_transpose.xhtml#a1f4089d0d7191158a65d297c6a130682">ClTranspose::validate</a>(weights, &amp;reshaped_weights));</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        weights_to_use = &amp;reshaped_weights;</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    }</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160; </div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordflow">if</span> (is_fc_after_conv &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout() != fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a89d0ed86875fd3fb395899187c84bc2f">weights_trained_layout</a>))</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    {</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="comment">// Validate convert weights kernel</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_convert_fully_connected_weights.xhtml#ae93feaa33d69b47436a8f7e4593c51c2">ClConvertFullyConnectedWeights::validate</a>(</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            weights_to_use, &amp;converted_weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor_shape(), fc_info.<a class="code" href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a89d0ed86875fd3fb395899187c84bc2f">weights_trained_layout</a>));</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        weights_to_use = &amp;converted_weights;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    }</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160; </div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keywordflow">if</span> (is_fc_after_conv)</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    {</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        <span class="comment">// Fully Connected layer after a Convolution Layer without batches</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="comment">// K Index of matrix multiplication. MatMul performs transpose in kernel, so index is 0 when matmul and transpose enabled</span></div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> weight_idx = (use_matmul &amp;&amp; transpose_weights) ? 0 : 1;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            (weights_to_use-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(weight_idx) != (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(0) * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(1) * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(2))));</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160; </div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        <span class="comment">// Validate flatten kernel</span></div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_flatten.xhtml#a1f4089d0d7191158a65d297c6a130682">ClFlatten::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;flatten_src));</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        src_to_use = &amp;flatten_src;</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    }</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    {</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        <span class="comment">// Fully Connected layer after a Fully Connected Layer without batches</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        <span class="comment">// K Index of matrix multiplication. MatMul performs transpose in kernel, so index is 0 when matmul and transpose enabled</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> weight_idx = (use_matmul &amp;&amp; transpose_weights) ? 0 : 1;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(0) != weights_to_use-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(weight_idx));</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    }</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160; </div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <span class="comment">// Validate matrix multiply kernel</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(*src_to_use, *weights_to_use, biases, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, fc_info, use_matmul));</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160; </div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;}</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160; </div>
<div class="line"><a name="l00579"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a684a54d1fb1634a348a585c6b5e76df0">  579</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClFullyConnected::run</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors)</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;{</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">prepare</a>(tensors);</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160; </div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_ASSERTS_ENABLED</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    ++_asrt_run_count;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_dynamic_gemm &amp;&amp; _asrt_prepare_count != _asrt_run_count);</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="preprocessor">#endif // ARM_COMPUTE_ASSERTS_ENABLED</span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160; </div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a> = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>);</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160; </div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> flattened_src(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(FlattenedSrc), _flattened_src, tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> weights(_weights_to_use_idx, _weights_to_use, tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160; </div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    <span class="comment">// Linearize input if it comes from a convolutional layer</span></div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    <span class="keywordflow">if</span> (_is_fc_after_conv)</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    {</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> flatten_pack{{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>}, {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, flattened_src.<a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#af34f1529f3b4b4e5517b36cd84447b23">get</a>()}};</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        _flatten-&gt;run(flatten_pack);</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    }</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160; </div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> gemm_pack = tensors;</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    gemm_pack.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, (_is_fc_after_conv) ? flattened_src.<a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#af34f1529f3b4b4e5517b36cd84447b23">get</a>() : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    <span class="keywordflow">if</span> (_weights_to_use_idx != <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>)</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    {</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        gemm_pack.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, weights.<a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#af34f1529f3b4b4e5517b36cd84447b23">get</a>());</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    }</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160; </div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="comment">// Run MatMul Op</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <span class="keywordflow">if</span> (_use_matmul)</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    {</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        <span class="comment">// Run matmul kernels for matrix multiplication</span></div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        <span class="keywordflow">if</span> (_is_quantized)</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        {</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_matmul_lowp_native_kernel, gemm_pack, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        }</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        {</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_matmul_native_kernel, gemm_pack, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        }</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    }</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    {</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        <span class="comment">// Run matrix multiply</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        <span class="keywordflow">if</span> (_is_quantized)</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        {</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;            _mm_gemmlowp-&gt;run(gemm_pack);</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;        }</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        {</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;            _mm_gemm-&gt;run(gemm_pack);</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        }</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    }</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;}</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160; </div>
<div class="line"><a name="l00634"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">  634</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">ClFullyConnected::prepare</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors)</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;{</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    <span class="comment">// Note : Running prepare() each run when _use_matmul is true is unnecessary unless weights conversion is needed.</span></div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    <span class="keywordflow">if</span> (!_is_prepared || _dynamic_gemm)</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    {</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_ASSERTS_ENABLED</span></div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        ++_asrt_prepare_count;</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!_dynamic_gemm &amp;&amp; !_use_matmul &amp;&amp; _asrt_prepare_count &gt; 1);</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="preprocessor">#endif // ARM_COMPUTE_ASSERTS_ENABLED</span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160; </div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        <span class="keyword">auto</span> weights = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>);</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160; </div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        <a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> reshaped_weights(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransposedWeights), _reshaped_weights, tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        <a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> converted_weights(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(ConvertedWeights), _converted_weights, tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160; </div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        <span class="comment">// Pointer to current weights</span></div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *cur_weights = weights;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160; </div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        <span class="comment">// Reshape weights if needed. Disabled when matmul kernels are enabled as matmul fuses transpose.</span></div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        <span class="keywordflow">if</span> (_transpose_weights &amp;&amp; !_use_matmul)</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        {</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;            <span class="comment">// Run reshape weights kernel and mark weights as unused</span></div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;            <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> transpose_pack{{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, weights}, {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, reshaped_weights.<a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#af34f1529f3b4b4e5517b36cd84447b23">get</a>()}};</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            _reshape_weights-&gt;run(transpose_pack);</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160; </div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            cur_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;            cur_weights = reshaped_weights.<a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#af34f1529f3b4b4e5517b36cd84447b23">get</a>();</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        }</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160; </div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        <span class="comment">// Convert weights if needed</span></div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keywordflow">if</span> (_run_convert_weights)</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        {</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> convert_pack{{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, cur_weights}, {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, converted_weights.<a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#af34f1529f3b4b4e5517b36cd84447b23">get</a>()}};</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            _convert_weights-&gt;run(convert_pack);</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160; </div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            cur_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;            cur_weights = converted_weights.<a class="code" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#af34f1529f3b4b4e5517b36cd84447b23">get</a>();</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        }</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160; </div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> gemm_pack = tensors;</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        gemm_pack.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, cur_weights);</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160; </div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        <span class="comment">// Prepare GEMM prepare and release unused weights</span></div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        <span class="keywordflow">if</span> (_dynamic_gemm || !_use_matmul)</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;        {</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;            <span class="keywordflow">if</span> (!_is_quantized)</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;            {</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                _mm_gemm-&gt;prepare(gemm_pack);</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;            }</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;            {</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                _mm_gemmlowp-&gt;prepare(gemm_pack);</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;            }</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        }</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160; </div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        _is_prepared = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    }</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;}</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160; </div>
<div class="line"><a name="l00693"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a74ae0d6e96f38fecd38471431786b870">  693</a></span>&#160;<a class="code" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a74ae0d6e96f38fecd38471431786b870">ClFullyConnected::workspace</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    <span class="keywordflow">return</span> _aux_mem;</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;}</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;} <span class="comment">// namespace opencl</span></div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdeci">@ NCHW</div><div class="ttdoc">Num samples, channels, height, width.</div></div>
<div class="ttc" id="a_cl_fully_connected_8h_xhtml"><div class="ttname"><a href="_cl_fully_connected_8h.xhtml">ClFullyConnected.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_fully_connected_xhtml_a7030809bde2d1adcf2e1accc36965018"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a7030809bde2d1adcf2e1accc36965018">arm_compute::opencl::ClFullyConnected::configure</a></div><div class="ttdeci">void configure(const CLCompileContext &amp;compile_context, ITensorInfo *src, ITensorInfo *weights, ITensorInfo *biases, ITensorInfo *dst, FullyConnectedLayerInfo fc_info=FullyConnectedLayerInfo())</div><div class="ttdoc">Set the input and output tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fully_connected_8cpp_source.xhtml#l00330">ClFullyConnected.cpp:330</a></div></div>
<div class="ttc" id="a_cast_8h_xhtml"><div class="ttname"><a href="_cast_8h.xhtml">Cast.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_aa93a4d93eb22ef5445cd567ef22ca67c"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">arm_compute::experimental::MemoryRequirements</a></div><div class="ttdeci">std::vector&lt; MemoryInfo &gt; MemoryRequirements</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00123">Types.h:123</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a7cb842ebfe255726066039853a4322f0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">arm_compute::test::validation::weights_info</a></div><div class="ttdeci">weights_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">BatchNormalizationLayer.cpp:165</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a549f4d59cb7f823d884ffe2424079c3a"><div class="ttname"><a href="namespacearm__compute.xhtml#a549f4d59cb7f823d884ffe2424079c3a">arm_compute::get_quantized_activation_min_max</a></div><div class="ttdeci">std::pair&lt; int32_t, int32_t &gt; get_quantized_activation_min_max(const ActivationLayerInfo &amp;act_info, DataType data_type, UniformQuantizationInfo oq_info)</div><div class="ttdoc">Returns a pair of minimum and maximum values for a quantized activation.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00442">Utils.cpp:442</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ae59cb3ec4cae7835d0a0283be56ef789"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59cb3ec4cae7835d0a0283be56ef789">arm_compute::test::validation::set_data_layout</a></div><div class="ttdeci">src_info set_data_layout(data_layout)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1">arm_compute::experimental::MemoryLifetime::Prepare</a></div><div class="ttdeci">@ Prepare</div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_transpose_xhtml_a1f4089d0d7191158a65d297c6a130682"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_transpose.xhtml#a1f4089d0d7191158a65d297c6a130682">arm_compute::opencl::ClTranspose::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dst)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2operators_2_cl_transpose_8cpp_source.xhtml#l00042">ClTranspose.cpp:42</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_a9e0fb1d1462557f28966ae19988532c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">arm_compute::ActivationLayerInfo::activation</a></div><div class="ttdeci">ActivationFunction activation() const</div><div class="ttdoc">Get the type of activation function.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00084">ActivationLayerInfo.h:84</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a69cb11b5b37f94a6bea9eaad9d13cccf"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69cb11b5b37f94a6bea9eaad9d13cccf">arm_compute::misc::shape_calculator::compute_transposed_shape</a></div><div class="ttdeci">TensorShape compute_transposed_shape(const ITensorInfo &amp;input)</div><div class="ttdoc">Calculate the transposed shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00422">ShapeCalculator.h:422</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_fully_connected_layer_info_xhtml_ad5f55d98fbe268b4eb6225aca14a2403"><div class="ttname"><a href="structarm__compute_1_1_fully_connected_layer_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">arm_compute::FullyConnectedLayerInfo::activation_info</a></div><div class="ttdeci">ActivationLayerInfo activation_info</div><div class="ttdoc">Fused activation to apply after the matrix multiplication.</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_info_8h_source.xhtml#l00036">FullyConnectedLayerInfo.h:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_aa23dcee239e241566abce6dfceac704d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">arm_compute::ITensorPack::add_const_tensor</a></div><div class="ttdeci">void add_const_tensor(int id, const ITensor *tensor)</div><div class="ttdoc">Add const tensor to the pack.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00048">ITensorPack.cpp:48</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">Validate.h:677</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00952">Validate.h:952</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00205">Error.h:205</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="astructarm__compute_1_1_fully_connected_layer_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_fully_connected_layer_info.xhtml">arm_compute::FullyConnectedLayerInfo</a></div><div class="ttdoc">Fully connected layer info.</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_info_8h_source.xhtml#l00033">FullyConnectedLayerInfo.h:33</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">arm_compute::experimental::MemoryInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00091">Types.h:91</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a78839e7861ba8ffed52ca55da2745761"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a78839e7861ba8ffed52ca55da2745761">arm_compute::TensorInfo::set_quantization_info</a></div><div class="ttdeci">ITensorInfo &amp; set_quantization_info(const QuantizationInfo &amp;quantization_info) override</div><div class="ttdoc">Set the quantization settings (scale and offset) of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_tensor_info_8cpp_source.xhtml#l00398">TensorInfo.cpp:398</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a000c70e9839ed364ab7343de880a4d35"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">arm_compute::ITensorPack::get_const_tensor</a></div><div class="ttdeci">const ITensor * get_const_tensor(int id) const</div><div class="ttdoc">Get constant tensor of a given id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00053">ITensorPack.cpp:53</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_fully_connected_xhtml_a3cff020074e699ef234b33ce69dbd553"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a3cff020074e699ef234b33ce69dbd553">arm_compute::opencl::ClFullyConnected::ClFullyConnected</a></div><div class="ttdeci">ClFullyConnected()</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fully_connected_8cpp_source.xhtml#l00188">ClFullyConnected.cpp:188</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_af5a8385102f8f8dd6c5957eac08b04c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">arm_compute::ActivationLayerInfo::enabled</a></div><div class="ttdeci">bool enabled() const</div><div class="ttdoc">Check if initialised.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00099">ActivationLayerInfo.h:99</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml">arm_compute::CLCompileContext</a></div><div class="ttdoc">CLCompileContext class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00204">CLCompileContext.h:204</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_fully_connected_layer_info_xhtml_a146a7be9d813ad80abb72a0bf6566cbc"><div class="ttname"><a href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a146a7be9d813ad80abb72a0bf6566cbc">arm_compute::FullyConnectedLayerInfo::are_weights_reshaped</a></div><div class="ttdeci">bool are_weights_reshaped</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_info_8h_source.xhtml#l00040">FullyConnectedLayerInfo.h:40</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a2355c2bf5d1950088937416baea24fe6"><div class="ttname"><a href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">arm_compute::get_arch_from_target</a></div><div class="ttdeci">GPUTarget get_arch_from_target(GPUTarget target)</div><div class="ttdoc">Helper function to get the GPU arch.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_g_p_u_target_8cpp_source.xhtml#l00247">GPUTarget.cpp:247</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00298">Error.h:298</a></div></div>
<div class="ttc" id="a_c_l_fill_border_kernel_8h_xhtml"><div class="ttname"><a href="_c_l_fill_border_kernel_8h.xhtml">CLFillBorderKernel.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_af398466b602a02b42d8df19fb66a6c60"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">arm_compute::TensorInfo::total_size</a></div><div class="ttdeci">size_t total_size() const override</div><div class="ttdoc">Returns the total size of the tensor in bytes.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00261">TensorInfo.h:261</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdeci">@ ACL_DST</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="a_cl_flatten_8h_xhtml"><div class="ttname"><a href="_cl_flatten_8h.xhtml">ClFlatten.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml_a9bc00234de9adf8c99a21eb1d7d494c2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">arm_compute::ITensor::mark_as_unused</a></div><div class="ttdeci">void mark_as_unused() const</div><div class="ttdoc">Marks a tensor as unused.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8cpp_source.xhtml#l00167">ITensor.cpp:167</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a83efb6708574e67d13965bcd2059ad75"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a83efb6708574e67d13965bcd2059ad75">arm_compute::misc::shape_calculator::compute_flatten_shape</a></div><div class="ttdeci">TensorShape compute_flatten_shape(const ITensorInfo *input)</div><div class="ttdoc">Calculate the flattened output shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00631">ShapeCalculator.h:631</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_fully_connected_xhtml_a684a54d1fb1634a348a585c6b5e76df0"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a684a54d1fb1634a348a585c6b5e76df0">arm_compute::opencl::ClFullyConnected::run</a></div><div class="ttdeci">void run(ITensorPack &amp;tensors) override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fully_connected_8cpp_source.xhtml#l00579">ClFullyConnected.cpp:579</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdeci">@ QASYMM8_SIGNED</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="a_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner.</div></div>
<div class="ttc" id="aclassarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_kernel_configuration_factory_xhtml_a2253cdf55abb1aed125585e3b96a5a90"><div class="ttname"><a href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_kernel_configuration_factory.xhtml#a2253cdf55abb1aed125585e3b96a5a90">arm_compute::cl_matmul::ClMatMulNativeKernelConfigurationFactory::create</a></div><div class="ttdeci">static std::unique_ptr&lt; IClMatMulNativeKernelConfig &gt; create(GPUTarget gpu)</div><div class="ttdoc">Static method to call the ClMatMul configuration class accordingly with the GPU target.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_mat_mul_native_kernel_config_8h_source.xhtml#l00046">ClMatMulNativeKernelConfig.h:46</a></div></div>
<div class="ttc" id="a_cl_aux_tensor_handler_8h_xhtml"><div class="ttname"><a href="_cl_aux_tensor_handler_8h.xhtml">ClAuxTensorHandler.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_fully_connected_xhtml_a1ddc02c8e0cc57f8ba7e0773c29b81d4"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a1ddc02c8e0cc57f8ba7e0773c29b81d4">arm_compute::opencl::ClFullyConnected::~ClFullyConnected</a></div><div class="ttdeci">~ClFullyConnected()</div></div>
<div class="ttc" id="a_cl_mat_mul_native_kernel_config_8h_xhtml"><div class="ttname"><a href="_cl_mat_mul_native_kernel_config_8h.xhtml">ClMatMulNativeKernelConfig.h</a></div></div>
<div class="ttc" id="asrc_2gpu_2cl_2operators_2_c_l_transpose_8h_xhtml"><div class="ttname"><a href="src_2gpu_2cl_2operators_2_c_l_transpose_8h.xhtml">ClTranspose.h</a></div></div>
<div class="ttc" id="aworking__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00322">working_space.hpp:322</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_fully_connected_layer_info_xhtml_a31ff0f4153b53a0abfc96250b18b15f1"><div class="ttname"><a href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a31ff0f4153b53a0abfc96250b18b15f1">arm_compute::FullyConnectedLayerInfo::fp_mixed_precision</a></div><div class="ttdeci">bool fp_mixed_precision</div><div class="ttdoc">Use wider accumulators (32 bit instead of 16 for FP16) to improve accuracy.</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_info_8h_source.xhtml#l00044">FullyConnectedLayerInfo.h:44</a></div></div>
<div class="ttc" id="a_size2_d_8h_xhtml"><div class="ttname"><a href="_size2_d_8h.xhtml">Size2D.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler_xhtml"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">arm_compute::opencl::CLAuxTensorHandler</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_aux_tensor_handler_8h_source.xhtml#l00039">ClAuxTensorHandler.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a></div><div class="ttdeci">@ MIDGARD</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00222">Cast.cpp:222</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_fully_connected_xhtml_a74ae0d6e96f38fecd38471431786b870"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a74ae0d6e96f38fecd38471431786b870">arm_compute::opencl::ClFullyConnected::workspace</a></div><div class="ttdeci">experimental::MemoryRequirements workspace() const override</div><div class="ttdoc">Return the memory requirements required by the workspace.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fully_connected_8cpp_source.xhtml#l00693">ClFullyConnected.cpp:693</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core_xhtml_a8c3cf2d65afb288e39909171ada19566"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">arm_compute::opencl::ClGemmLowpMatrixMultiplyCore::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *output, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00557">ClGemmLowpMatrixMultiplyCore.cpp:557</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a3f3e1a3200223e6a304a533b1016e749"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">arm_compute::ITensorInfo::quantization_info</a></div><div class="ttdeci">virtual QuantizationInfo quantization_info() const =0</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor.</div></div>
<div class="ttc" id="asrc_2gpu_2cl_2operators_2_c_l_g_e_m_m_8h_xhtml"><div class="ttname"><a href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_8h.xhtml">ClGemm.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a27561688e2fc60176608ef725a4ecb30"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">arm_compute::CLScheduler::target</a></div><div class="ttdeci">GPUTarget target() const</div><div class="ttdoc">Get the target GPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00046">CLScheduler.cpp:46</a></div></div>
<div class="ttc" id="aarm__compute_2core_2utils_2quantization_2_asymm_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2utils_2quantization_2_asymm_helpers_8h.xhtml">AsymmHelpers.h</a></div></div>
<div class="ttc" id="a_memory_helpers_8h_xhtml"><div class="ttname"><a href="_memory_helpers_8h.xhtml">MemoryHelpers.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00083">Types.h:83</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets.</div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1misc_1_1_i_cloneable_xhtml_a4d10e5012a872e7f78f2b539b673049d"><div class="ttname"><a href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">arm_compute::misc::ICloneable::clone</a></div><div class="ttdeci">virtual std::unique_ptr&lt; T &gt; clone() const =0</div><div class="ttdoc">Provide a clone of the current object of class T.</div></div>
<div class="ttc" id="a_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00041">TensorInfo.h:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a324d709e8fb5568ada56ba4999dfb2f1"><div class="ttname"><a href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">arm_compute::offset_int_vec</a></div><div class="ttdeci">int offset_int_vec(int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_memory_helpers_8h_source.xhtml#l00038">MemoryHelpers.h:38</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_fully_connected_layer_info_xhtml_a89d0ed86875fd3fb395899187c84bc2f"><div class="ttname"><a href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a89d0ed86875fd3fb395899187c84bc2f">arm_compute::FullyConnectedLayerInfo::weights_trained_layout</a></div><div class="ttdeci">DataLayout weights_trained_layout</div><div class="ttdoc">Layout that the weights have been trained with.</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_info_8h_source.xhtml#l00038">FullyConnectedLayerInfo.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_convert_fully_connected_weights_xhtml_ae93feaa33d69b47436a8f7e4593c51c2"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_convert_fully_connected_weights.xhtml#ae93feaa33d69b47436a8f7e4593c51c2">arm_compute::opencl::ClConvertFullyConnectedWeights::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dst, const TensorShape &amp;original_src_shape, DataLayout data_layout)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2operators_2_cl_convert_fully_connected_weights_8cpp_source.xhtml#l00046">ClConvertFullyConnectedWeights.cpp:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="asrc_2gpu_2cl_2operators_2_c_l_g_e_m_m_lowp_matrix_multiply_core_8h_xhtml"><div class="ttname"><a href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_lowp_matrix_multiply_core_8h.xhtml">ClGemmLowpMatrixMultiplyCore.h</a></div></div>
<div class="ttc" id="asrc_2gpu_2cl_2operators_2_c_l_mat_mul_8h_xhtml"><div class="ttname"><a href="src_2gpu_2cl_2operators_2_c_l_mat_mul_8h.xhtml">ClMatMul.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="astructarm__compute_1_1_mat_mul_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_mat_mul_kernel_info.xhtml">arm_compute::MatMulKernelInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00237">KernelDescriptors.h:237</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_fully_connected_xhtml_af4d2c35e9fbc329b2e1b2acb864265aa"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">arm_compute::opencl::ClFullyConnected::prepare</a></div><div class="ttdeci">void prepare(ITensorPack &amp;tensors) override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fully_connected_8cpp_source.xhtml#l00634">ClFullyConnected.cpp:634</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::DataType::S32</a></div><div class="ttdeci">@ S32</div><div class="ttdoc">signed 32-bit number</div></div>
<div class="ttc" id="a_i_cl_mat_mul_native_kernel_config_8h_xhtml"><div class="ttname"><a href="_i_cl_mat_mul_native_kernel_config_8h.xhtml">IClMatMulNativeKernelConfig.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a15541ee1af263ccf663a5dc23de9fb89"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">arm_compute::test::validation::src_info</a></div><div class="ttdeci">TensorInfo src_info(src_shape, 1, data_type)</div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml">Log.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00346">DataTypeUtils.h:346</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_flatten_xhtml_a1f4089d0d7191158a65d297c6a130682"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_flatten.xhtml#a1f4089d0d7191158a65d297c6a130682">arm_compute::opencl::ClFlatten::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dst)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_flatten_8cpp_source.xhtml#l00042">ClFlatten.cpp:42</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1quantization_xhtml_aada9ec2ea42d767854b2b7545ffd310b"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">arm_compute::quantization::calculate_quantized_multiplier</a></div><div class="ttdeci">Status calculate_quantized_multiplier(float multiplier, int32_t *quant_multiplier, int32_t *shift, bool ignore_epsilon=false)</div><div class="ttdoc">Calculate quantized representation of multiplier.</div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00043">AsymmHelpers.cpp:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a5c0fc6f465cae029d60ffdfc7f3e99d9"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">arm_compute::CLScheduler::enqueue_op</a></div><div class="ttdeci">void enqueue_op(ICLKernel &amp;kernel, ITensorPack &amp;tensors, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00238">CLScheduler.cpp:238</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a4feaaa70771629f4b5dcf3b219c8b647"><div class="ttname"><a href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">arm_compute::validate</a></div><div class="ttdeci">Status validate(const ITensorInfo *scores_in, const ITensorInfo *boxes_in, const ITensorInfo *batch_splits_in, const ITensorInfo *scores_out, const ITensorInfo *boxes_out, const ITensorInfo *classes, const ITensorInfo *batch_splits_out, const ITensorInfo *keeps, const ITensorInfo *keeps_size, const BoxNMSLimitInfo info)</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00243">CPPBoxWithNonMaximaSuppressionLimit.cpp:243</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0bee325b210f81bb89fe1f9e15badf9c"><div class="ttname"><a href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">arm_compute::is_data_type_quantized</a></div><div class="ttdeci">bool is_data_type_quantized(DataType dt)</div><div class="ttdoc">Check if a given data type is of quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00324">DataTypeUtils.h:324</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_lowp_native_kernel_xhtml_ad7202b8e6dbb1a8c4ed6ccea00f8cdac"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_lowp_native_kernel.xhtml#ad7202b8e6dbb1a8c4ed6ccea00f8cdac">arm_compute::opencl::kernels::ClMatMulLowpNativeKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *lhs, const ITensorInfo *rhs, const ITensorInfo *bias, const ITensorInfo *dst, const MatMulKernelInfo &amp;matmul_kernel_info, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_mat_mul_lowp_native_kernel_8cpp_source.xhtml#l00090">ClMatMulLowpNativeKernel.cpp:90</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler_xhtml_af34f1529f3b4b4e5517b36cd84447b23"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#af34f1529f3b4b4e5517b36cd84447b23">arm_compute::opencl::CLAuxTensorHandler::get</a></div><div class="ttdeci">ICLTensor * get()</div><div class="ttdef"><b>Definition:</b> <a href="_cl_aux_tensor_handler_8h_source.xhtml#l00094">ClAuxTensorHandler.h:94</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_fully_connected_layer_info_xhtml_a4f87c5060cca01305f94a9d2f10e9d83"><div class="ttname"><a href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a4f87c5060cca01305f94a9d2f10e9d83">arm_compute::FullyConnectedLayerInfo::retain_internal_weights</a></div><div class="ttdeci">bool retain_internal_weights</div><div class="ttdoc">Retain internal reshaped weights.</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_info_8h_source.xhtml#l00041">FullyConnectedLayerInfo.h:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdeci">@ ACL_SRC</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:44</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_mat_mul_info_xhtml_a39f307e04480a663f207874d42b73347"><div class="ttname"><a href="classarm__compute_1_1_mat_mul_info.xhtml#a39f307e04480a663f207874d42b73347">arm_compute::MatMulInfo::adj_rhs</a></div><div class="ttdeci">bool adj_rhs() const</div><div class="ttdef"><b>Definition:</b> <a href="_mat_mul_info_8h_source.xhtml#l00040">MatMulInfo.h:40</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_fully_connected_layer_info_xhtml_a11851649b6a7cd12ae25cf72b769cfb9"><div class="ttname"><a href="structarm__compute_1_1_fully_connected_layer_info.xhtml#a11851649b6a7cd12ae25cf72b769cfb9">arm_compute::FullyConnectedLayerInfo::transpose_weights</a></div><div class="ttdeci">bool transpose_weights</div><div class="ttdoc">Transpose weights if true.</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_info_8h_source.xhtml#l00039">FullyConnectedLayerInfo.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml">arm_compute::misc::shape_calculator</a></div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00041">ShapeCalculator.h:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a755401027819f45173d06db7a922eb10"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">arm_compute::ITensorInfo::are_values_constant</a></div><div class="ttdeci">virtual bool are_values_constant() const =0</div><div class="ttdoc">Flag indicating whether the values of the tensor are constant, meaning that they can change on kernel...</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae69217acf0f0b5d4de030a09ad50a0bc"><div class="ttname"><a href="namespacearm__compute.xhtml#ae69217acf0f0b5d4de030a09ad50a0bc">arm_compute::get_min_max</a></div><div class="ttdeci">std::tuple&lt; PixelValue, PixelValue &gt; get_min_max(DataType dt)</div><div class="ttdoc">Compute the mininum and maximum values a data type can take.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00195">DataTypeUtils.h:195</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_fully_connected_xhtml_ade56104b8c4e9ddbd2065145e3f91dfd"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#ade56104b8c4e9ddbd2065145e3f91dfd">arm_compute::opencl::ClFullyConnected::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *dst, FullyConnectedLayerInfo fc_info=FullyConnectedLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fully_connected_8cpp_source.xhtml#l00464">ClFullyConnected.cpp:464</a></div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_gemm_xhtml_a9f6cb7cb1ae1f9a3260abea993ef8608"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a9f6cb7cb1ae1f9a3260abea993ef8608">arm_compute::opencl::ClGemm::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *output, float alpha, float beta, const GEMMInfo &amp;gemm_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00720">ClGemm.cpp:720</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00035">Log.h:35</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a></div><div class="ttdeci">@ QUANTIZE_DOWN_FIXEDPOINT</div><div class="ttdoc">Quantize using a fixed point multiplication.</div></div>
<div class="ttc" id="asrc_2gpu_2cl_2operators_2_c_l_convert_fully_connected_weights_8h_xhtml"><div class="ttname"><a href="src_2gpu_2cl_2operators_2_c_l_convert_fully_connected_weights_8h.xhtml">ClConvertFullyConnectedWeights.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_mat_mul_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_mat_mul_info.xhtml">arm_compute::MatMulInfo</a></div><div class="ttdoc">Class for holding information related to matrix multiplication function.</div><div class="ttdef"><b>Definition:</b> <a href="_mat_mul_info_8h_source.xhtml#l00031">MatMulInfo.h:31</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a269b19ce3f357ac65f41f9951906e38e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">arm_compute::TensorInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const override</div><div class="ttdoc">Size for each dimension of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00245">TensorInfo.h:245</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_dimensions_xhtml_a1b67d5b720119d50faa286c774579ecc"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">arm_compute::Dimensions&lt; size_t &gt;::num_max_dimensions</a></div><div class="ttdeci">static constexpr size_t num_max_dimensions</div><div class="ttdoc">Number of dimensions the tensor has.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00046">Dimensions.h:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a1f4e725b8e1ea36b30e09dc08ae6961d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">arm_compute::ITensorInfo::num_dimensions</a></div><div class="ttdeci">virtual size_t num_dimensions() const =0</div><div class="ttdoc">The number of dimensions of the tensor (rank)</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_cf895c1ed808af158264b2f3d8d7f8f0.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_3fd6b49eea07a5dd89d90722d8b4e77f.xhtml">cl</a></li><li class="navelem"><a class="el" href="dir_9f6e96fe293420b74afaf1a4dc4f9f82.xhtml">operators</a></li><li class="navelem"><a class="el" href="_cl_fully_connected_8cpp.xhtml">ClFullyConnected.cpp</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:20:01 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
