<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GemmCommon&lt; To, Tr &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__gemm_1_1_gemm_common.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GemmCommon&lt; To, Tr &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for GemmCommon&lt; To, Tr &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__gemm_1_1_gemm_common__coll__graph.svg" width="199" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af6a736f1b9e80d533bd557d0fb5748bb"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml#af6a736f1b9e80d533bd557d0fb5748bb">set_arrays</a> (const To *A, const int lda, const int A_batch_stride, const int A_multi_stride, const To *B, const int ldb, const int B_multi_stride, Tr *C, const int ldc, const int C_batch_stride, const int C_multi_stride, const Tr *<a class="el" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, const int bias_multi_stride)</td></tr>
<tr class="separator:af6a736f1b9e80d533bd557d0fb5748bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b4d3fc2c5f4a97d8233231161abfc5e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml#a2b4d3fc2c5f4a97d8233231161abfc5e">set_arrays_generic</a> (const void *A, const int lda, const int A_batch_stride, const int A_multi_stride, const void *B, const int ldb, const int B_multi_stride, void *C, const int ldc, const int C_batch_stride, const int C_multi_stride, const void *<a class="el" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, const int bias_multi_stride) override</td></tr>
<tr class="separator:a2b4d3fc2c5f4a97d8233231161abfc5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c4f4f6a90ff91f2c2ae9a954446a762"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml#a7c4f4f6a90ff91f2c2ae9a954446a762">requantize_bias</a> (void *, const To *, const int, const int)</td></tr>
<tr class="separator:a7c4f4f6a90ff91f2c2ae9a954446a762"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcc95242f389687b72fa2ec63faec7e3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml#abcc95242f389687b72fa2ec63faec7e3">pretranspose_B_array</a> (void *, const To *, const int, const int)</td></tr>
<tr class="separator:abcc95242f389687b72fa2ec63faec7e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06d4b10407385edb146b05c9df9a9f4b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml#a06d4b10407385edb146b05c9df9a9f4b">pretranspose_B_array_generic</a> (void *out, const void *in, const int row_stride, const int multi_stride) override</td></tr>
<tr class="separator:a06d4b10407385edb146b05c9df9a9f4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5addbdb1697735d2024f01186c222841"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml#a5addbdb1697735d2024f01186c222841">pretranspose_B_array_part</a> (void *out, const To *in, const int row_stride, const int multi_stride, size_t, size_t)</td></tr>
<tr class="separator:a5addbdb1697735d2024f01186c222841"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4359651317954ea79919cc9823097947"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml#a4359651317954ea79919cc9823097947">pretranspose_B_array_part_generic</a> (void *out, const void *in, const int row_stride, const int multi_stride, size_t start, size_t end) override</td></tr>
<tr class="separator:a4359651317954ea79919cc9823097947"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61189e875b30e38a11a1f8fe21e3e939"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml#a61189e875b30e38a11a1f8fe21e3e939">set_indirect_parameters</a> (size_t, const To *const *const *)</td></tr>
<tr class="separator:a61189e875b30e38a11a1f8fe21e3e939"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fc4bc4ac3708ea77593ac974cabd426"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml#a5fc4bc4ac3708ea77593ac974cabd426">set_indirect_parameters_generic</a> (size_t sz, const void *const *const *ptr) override</td></tr>
<tr class="separator:a5fc4bc4ac3708ea77593ac974cabd426"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__gemm_1_1_i_gemm_common"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__gemm_1_1_i_gemm_common')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml">IGemmCommon</a></td></tr>
<tr class="memitem:a06ec4bc84b2197e53f665ac9a31df52e inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearm__gemm.xhtml#add517606da81960aed83e2e66e87ecab">ndrange_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a06ec4bc84b2197e53f665ac9a31df52e">get_window_size</a> () const =0</td></tr>
<tr class="separator:a06ec4bc84b2197e53f665ac9a31df52e inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a568b1d289dcf3226443fd87e8a261f91 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a568b1d289dcf3226443fd87e8a261f91">set_nthreads</a> (int)</td></tr>
<tr class="separator:a568b1d289dcf3226443fd87e8a261f91 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af320ce710c0547bedf4f2a6f8387d396 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#af320ce710c0547bedf4f2a6f8387d396">supports_dynamic_scheduling</a> () const</td></tr>
<tr class="separator:af320ce710c0547bedf4f2a6f8387d396 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7686815e0e1a7ed5d703a2f85ecd3b65 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a7686815e0e1a7ed5d703a2f85ecd3b65">execute</a> (const <a class="el" href="namespacearm__gemm.xhtml#a051d3dc92e26a43c1651cc8ce631c98e">ndcoord_t</a> &amp;work_range, const <a class="el" href="namespacearm__gemm.xhtml#a051d3dc92e26a43c1651cc8ce631c98e">ndcoord_t</a> &amp;thread_locator, int threadid)=0</td></tr>
<tr class="memdesc:a7686815e0e1a7ed5d703a2f85ecd3b65 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="mdescLeft">&#160;</td><td class="mdescRight">Main execute member fucntion.  <a href="classarm__gemm_1_1_i_gemm_common.xhtml#a7686815e0e1a7ed5d703a2f85ecd3b65">More...</a><br /></td></tr>
<tr class="separator:a7686815e0e1a7ed5d703a2f85ecd3b65 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0a90e40986e0daec072bfbfb89aa17d inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#ab0a90e40986e0daec072bfbfb89aa17d">get_working_size</a> () const</td></tr>
<tr class="separator:ab0a90e40986e0daec072bfbfb89aa17d inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e424d4bc279d4bb932d2a26f66ec418 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a5e424d4bc279d4bb932d2a26f66ec418">set_working_space</a> (void *)</td></tr>
<tr class="separator:a5e424d4bc279d4bb932d2a26f66ec418 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9992ba5ca09abf7df2927b433e869bb5 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a9992ba5ca09abf7df2927b433e869bb5">B_is_pretransposed</a> () const</td></tr>
<tr class="separator:a9992ba5ca09abf7df2927b433e869bb5 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59b3ebe4dbba64c14fa99d8367bfb3c9 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a59b3ebe4dbba64c14fa99d8367bfb3c9">B_pretranspose_required</a> () const</td></tr>
<tr class="separator:a59b3ebe4dbba64c14fa99d8367bfb3c9 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab32fbd73de4fd392a14b674fbcbd6e7f inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#ab32fbd73de4fd392a14b674fbcbd6e7f">get_B_pretransposed_array_size</a> () const</td></tr>
<tr class="separator:ab32fbd73de4fd392a14b674fbcbd6e7f inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37e8736d7db6afdeab374b248599a573 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a37e8736d7db6afdeab374b248599a573">get_B_pretranspose_window_size</a> () const</td></tr>
<tr class="separator:a37e8736d7db6afdeab374b248599a573 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb17b9ef6dcfb2ab257c5a8290fac666 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#aeb17b9ef6dcfb2ab257c5a8290fac666">set_pretransposed_B_data</a> (void *)</td></tr>
<tr class="separator:aeb17b9ef6dcfb2ab257c5a8290fac666 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab091a53dc98522e74b3e2a4d9020d76c inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#ab091a53dc98522e74b3e2a4d9020d76c">set_quantized_bias</a> (const int32_t *, size_t)</td></tr>
<tr class="separator:ab091a53dc98522e74b3e2a4d9020d76c inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaabbf2723a390d8e7f859c70aea256a8 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#aaabbf2723a390d8e7f859c70aea256a8">set_convolution_parameters</a> (<a class="el" href="structarm__gemm_1_1_convolution_parameters.xhtml">ConvolutionParameters</a>)</td></tr>
<tr class="separator:aaabbf2723a390d8e7f859c70aea256a8 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a7fd4eeb44e91ea8f8ed53d21b9691f inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__gemm_1_1_gemm_config.xhtml">GemmConfig</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a9a7fd4eeb44e91ea8f8ed53d21b9691f">get_config</a> ()=0</td></tr>
<tr class="separator:a9a7fd4eeb44e91ea8f8ed53d21b9691f inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d067226d7026bb265784e14b45f2890 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a8d067226d7026bb265784e14b45f2890">~IGemmCommon</a> ()</td></tr>
<tr class="separator:a8d067226d7026bb265784e14b45f2890 inherit pub_methods_classarm__gemm_1_1_i_gemm_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename To, typename Tr&gt;<br />
class arm_gemm::GemmCommon&lt; To, Tr &gt;</h3>


<p class="definition">Definition at line <a class="el" href="gemm__common_8hpp_source.xhtml#l00178">178</a> of file <a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="abcc95242f389687b72fa2ec63faec7e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcc95242f389687b72fa2ec63faec7e3">&#9670;&nbsp;</a></span>pretranspose_B_array()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pretranspose_B_array </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const To *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml#ae385dce1a98e03f0a3ca311f031e5110">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;</a>, <a class="el" href="classarm__gemm_1_1_gemm_hybrid_indirect.xhtml#ae385dce1a98e03f0a3ca311f031e5110">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;</a>, <a class="el" href="classarm__gemm_1_1_gemm_hybrid_quantized.xhtml#ae385dce1a98e03f0a3ca311f031e5110">GemmHybridQuantized&lt; strategy, To, Tr &gt;</a>, <a class="el" href="classarm__gemm_1_1_gemm_hybrid_quantized_inline.xhtml#ae385dce1a98e03f0a3ca311f031e5110">GemmHybridQuantizedInline&lt; strategy, To, Tr &gt;</a>, <a class="el" href="classarm__gemm_1_1_gemm_hybrid.xhtml#ae385dce1a98e03f0a3ca311f031e5110">GemmHybrid&lt; strategy, To, Tr &gt;</a>, <a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a28341e4e1158f3446a8dfa13c9f5c6f0">GemvPretransposed&lt; strategy, To, Tr, OutputStage &gt;</a>, <a class="el" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a28341e4e1158f3446a8dfa13c9f5c6f0">QuantizeWrapper&lt; To, Tr, Tgemm &gt;</a>, and <a class="el" href="classarm__gemm_1_1_gemv_batched.xhtml#a28341e4e1158f3446a8dfa13c9f5c6f0">GemvBatched&lt; To, Tr &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="gemm__common_8hpp_source.xhtml#l00254">254</a> of file <a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;{};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="gemm__common_8hpp_source.xhtml#l00257">GemmCommon&lt; TypeInput, TypeOutput &gt;::pretranspose_B_array_generic()</a>, and <a class="el" href="gemm__common_8hpp_source.xhtml#l00267">GemmCommon&lt; TypeInput, TypeOutput &gt;::pretranspose_B_array_part()</a>.</p>

</div>
</div>
<a id="a06d4b10407385edb146b05c9df9a9f4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06d4b10407385edb146b05c9df9a9f4b">&#9670;&nbsp;</a></span>pretranspose_B_array_generic()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void pretranspose_B_array_generic </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>row_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>multi_stride</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a56e22f79e63a74948ea7a4eeec01a6c6">IGemmCommon</a>.</p>

<p class="definition">Definition at line <a class="el" href="gemm__common_8hpp_source.xhtml#l00257">257</a> of file <a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <a class="code" href="classarm__gemm_1_1_gemm_common.xhtml#abcc95242f389687b72fa2ec63faec7e3">pretranspose_B_array</a>(out, <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>To *<span class="keyword">&gt;</span>(in), row_stride, multi_stride);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5addbdb1697735d2024f01186c222841"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5addbdb1697735d2024f01186c222841">&#9670;&nbsp;</a></span>pretranspose_B_array_part()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pretranspose_B_array_part </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const To *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>row_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>multi_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml#acc55eb5049f295e8ea170a9e4bf8d2f2">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;</a>, and <a class="el" href="classarm__gemm_1_1_gemm_hybrid_indirect.xhtml#acc55eb5049f295e8ea170a9e4bf8d2f2">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="gemm__common_8hpp_source.xhtml#l00267">267</a> of file <a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <a class="code" href="classarm__gemm_1_1_gemm_common.xhtml#abcc95242f389687b72fa2ec63faec7e3">pretranspose_B_array</a>(out, in, row_stride, multi_stride);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    };</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="gemm__common_8hpp_source.xhtml#l00272">GemmCommon&lt; TypeInput, TypeOutput &gt;::pretranspose_B_array_part_generic()</a>.</p>

</div>
</div>
<a id="a4359651317954ea79919cc9823097947"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4359651317954ea79919cc9823097947">&#9670;&nbsp;</a></span>pretranspose_B_array_part_generic()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void pretranspose_B_array_part_generic </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>row_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>multi_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#afbc7d4067eb00dc059104fc3b8912638">IGemmCommon</a>.</p>

<p class="definition">Definition at line <a class="el" href="gemm__common_8hpp_source.xhtml#l00272">272</a> of file <a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <a class="code" href="classarm__gemm_1_1_gemm_common.xhtml#a5addbdb1697735d2024f01186c222841">pretranspose_B_array_part</a>(out, <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>To *<span class="keyword">&gt;</span>(in), row_stride, multi_stride, start, <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a7c4f4f6a90ff91f2c2ae9a954446a762"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c4f4f6a90ff91f2c2ae9a954446a762">&#9670;&nbsp;</a></span>requantize_bias()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void requantize_bias </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const To *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml#a0ae716040d875abeeba60aa4a6b73363">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;</a>, <a class="el" href="classarm__gemm_1_1_gemm_hybrid_indirect.xhtml#a0ae716040d875abeeba60aa4a6b73363">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;</a>, <a class="el" href="classarm__gemm_1_1_gemm_hybrid_quantized.xhtml#a0ae716040d875abeeba60aa4a6b73363">GemmHybridQuantized&lt; strategy, To, Tr &gt;</a>, <a class="el" href="classarm__gemm_1_1_gemm_hybrid_quantized_inline.xhtml#a0ae716040d875abeeba60aa4a6b73363">GemmHybridQuantizedInline&lt; strategy, To, Tr &gt;</a>, <a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a0ae716040d875abeeba60aa4a6b73363">GemvPretransposed&lt; strategy, To, Tr, OutputStage &gt;</a>, and <a class="el" href="classarm__gemm_1_1_quantize_wrapper.xhtml#a0ae716040d875abeeba60aa4a6b73363">QuantizeWrapper&lt; To, Tr, Tgemm &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="gemm__common_8hpp_source.xhtml#l00250">250</a> of file <a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;{};</div>
</div><!-- fragment -->
</div>
</div>
<a id="af6a736f1b9e80d533bd557d0fb5748bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6a736f1b9e80d533bd557d0fb5748bb">&#9670;&nbsp;</a></span>set_arrays()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void set_arrays </td>
          <td>(</td>
          <td class="paramtype">const To *&#160;</td>
          <td class="paramname"><em>A</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lda</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>A_batch_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>A_multi_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const To *&#160;</td>
          <td class="paramname"><em>B</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>ldb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>B_multi_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Tr *&#160;</td>
          <td class="paramname"><em>C</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>ldc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>C_batch_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>C_multi_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Tr *&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>bias_multi_stride</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarm__gemm_1_1_gemv_batched.xhtml#a14ef822f32672070364412152debfd33">GemvBatched&lt; To, Tr &gt;</a>, and <a class="el" href="classarm__gemm_1_1_quantize_wrapper.xhtml#ab0e2eeafea4c7ab024171643146b2452">QuantizeWrapper&lt; To, Tr, Tgemm &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="gemm__common_8hpp_source.xhtml#l00198">198</a> of file <a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        _Aptr              = <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">A</a>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        _lda               = lda;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        _A_batch_stride    = A_batch_stride;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        _A_multi_stride    = A_multi_stride;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        _Bptr              = <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">B</a>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        _ldb               = ldb;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        _B_multi_stride    = B_multi_stride;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        _Cptr              = C;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        _ldc               = ldc;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        _C_batch_stride    = C_batch_stride;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        _C_multi_stride    = C_multi_stride;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        _bias              = <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        _bias_multi_stride = bias_multi_stride;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="quantize__wrapper_8hpp_source.xhtml#l00121">QuantizeWrapper&lt; To, Tr, Tgemm &gt;::set_arrays()</a>, and <a class="el" href="gemm__common_8hpp_source.xhtml#l00228">GemmCommon&lt; TypeInput, TypeOutput &gt;::set_arrays_generic()</a>.</p>

</div>
</div>
<a id="a2b4d3fc2c5f4a97d8233231161abfc5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b4d3fc2c5f4a97d8233231161abfc5e">&#9670;&nbsp;</a></span>set_arrays_generic()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_arrays_generic </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>A</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lda</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>A_batch_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>A_multi_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>B</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>ldb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>B_multi_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>C</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>ldc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>C_batch_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>C_multi_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>bias_multi_stride</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#aa21ed4f40e7bd4282b205ea4fd1d75d7">IGemmCommon</a>.</p>

<p class="definition">Definition at line <a class="el" href="gemm__common_8hpp_source.xhtml#l00228">228</a> of file <a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <a class="code" href="classarm__gemm_1_1_gemm_common.xhtml#af6a736f1b9e80d533bd557d0fb5748bb">set_arrays</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>To *<span class="keyword">&gt;</span>(A), lda, A_batch_stride, A_multi_stride, <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>To *<span class="keyword">&gt;</span>(B), ldb,</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                   B_multi_stride, <span class="keyword">static_cast&lt;</span>Tr *<span class="keyword">&gt;</span>(C), ldc, C_batch_stride, C_multi_stride,</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                   <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Tr *<span class="keyword">&gt;</span>(<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>), bias_multi_stride);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a61189e875b30e38a11a1f8fe21e3e939"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61189e875b30e38a11a1f8fe21e3e939">&#9670;&nbsp;</a></span>set_indirect_parameters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void set_indirect_parameters </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const To *const *const *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml#a82b688818137467809617daf73ffdc11">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;</a>, and <a class="el" href="classarm__gemm_1_1_gemm_hybrid_indirect.xhtml#a82b688818137467809617daf73ffdc11">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="gemm__common_8hpp_source.xhtml#l00279">279</a> of file <a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="gemm__common_8hpp_source.xhtml#l00283">GemmCommon&lt; TypeInput, TypeOutput &gt;::set_indirect_parameters_generic()</a>.</p>

</div>
</div>
<a id="a5fc4bc4ac3708ea77593ac974cabd426"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fc4bc4ac3708ea77593ac974cabd426">&#9670;&nbsp;</a></span>set_indirect_parameters_generic()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_indirect_parameters_generic </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>sz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *const *const *&#160;</td>
          <td class="paramname"><em>ptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml#a40f2d61f10ba1f7f4d80e6569ed189e2">IGemmCommon</a>.</p>

<p class="definition">Definition at line <a class="el" href="gemm__common_8hpp_source.xhtml#l00283">283</a> of file <a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <a class="code" href="classarm__gemm_1_1_gemm_common.xhtml#a61189e875b30e38a11a1f8fe21e3e939">set_indirect_parameters</a>(sz, <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>To *<span class="keyword">const </span>*<span class="keyword">const </span>*<span class="keyword">&gt;</span>(ptr));</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/cpu/kernels/assembly/<a class="el" href="gemm__common_8hpp_source.xhtml">gemm_common.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__gemm_1_1_gemm_common_xhtml_abcc95242f389687b72fa2ec63faec7e3"><div class="ttname"><a href="classarm__gemm_1_1_gemm_common.xhtml#abcc95242f389687b72fa2ec63faec7e3">arm_gemm::GemmCommon::pretranspose_B_array</a></div><div class="ttdeci">virtual void pretranspose_B_array(void *, const To *, const int, const int)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__common_8hpp_source.xhtml#l00254">gemm_common.hpp:254</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::Channel::B</a></div><div class="ttdeci">@ B</div><div class="ttdoc">Blue channel.</div></div>
<div class="ttc" id="aclassarm__gemm_1_1_gemm_common_xhtml_a61189e875b30e38a11a1f8fe21e3e939"><div class="ttname"><a href="classarm__gemm_1_1_gemm_common.xhtml#a61189e875b30e38a11a1f8fe21e3e939">arm_gemm::GemmCommon::set_indirect_parameters</a></div><div class="ttdeci">virtual void set_indirect_parameters(size_t, const To *const *const *)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__common_8hpp_source.xhtml#l00279">gemm_common.hpp:279</a></div></div>
<div class="ttc" id="aclassarm__gemm_1_1_gemm_common_xhtml_af6a736f1b9e80d533bd557d0fb5748bb"><div class="ttname"><a href="classarm__gemm_1_1_gemm_common.xhtml#af6a736f1b9e80d533bd557d0fb5748bb">arm_gemm::GemmCommon::set_arrays</a></div><div class="ttdeci">virtual void set_arrays(const To *A, const int lda, const int A_batch_stride, const int A_multi_stride, const To *B, const int ldb, const int B_multi_stride, Tr *C, const int ldc, const int C_batch_stride, const int C_multi_stride, const Tr *bias, const int bias_multi_stride)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__common_8hpp_source.xhtml#l00198">gemm_common.hpp:198</a></div></div>
<div class="ttc" id="aworking__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00322">working_space.hpp:322</a></div></div>
<div class="ttc" id="aclassarm__gemm_1_1_gemm_common_xhtml_a5addbdb1697735d2024f01186c222841"><div class="ttname"><a href="classarm__gemm_1_1_gemm_common.xhtml#a5addbdb1697735d2024f01186c222841">arm_gemm::GemmCommon::pretranspose_B_array_part</a></div><div class="ttdeci">virtual void pretranspose_B_array_part(void *out, const To *in, const int row_stride, const int multi_stride, size_t, size_t)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__common_8hpp_source.xhtml#l00267">gemm_common.hpp:267</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::Channel::A</a></div><div class="ttdeci">@ A</div><div class="ttdoc">Alpha channel.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">MLGOParser.cpp:283</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a></li><li class="navelem"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml">GemmCommon</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:20:16 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
