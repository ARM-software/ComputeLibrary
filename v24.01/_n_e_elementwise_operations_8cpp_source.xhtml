<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/NEON/functions/NEElementwiseOperations.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_elementwise_operations_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEElementwiseOperations.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_elementwise_operations_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_elementwise_operations_8h.xhtml">arm_compute/runtime/NEON/functions/NEElementwiseOperations.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_8h.xhtml">arm_compute/core/ITensor.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_elementwise_8h.xhtml">src/cpu/operators/CpuElementwise.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">struct </span>NEElementwiseMax::Impl</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">const</span> ITensor                          *src_0{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keyword">const</span> ITensor                          *src_1{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    ITensor                                *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    std::unique_ptr&lt;cpu::CpuElementwiseMax&gt; op{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;};</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#a175472ec38b0c2e5373c821c156e7148">   43</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#a175472ec38b0c2e5373c821c156e7148">NEElementwiseMax::NEElementwiseMax</a>() : _impl(std::make_unique&lt;Impl&gt;())</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#a175472ec38b0c2e5373c821c156e7148">NEElementwiseMax::NEElementwiseMax</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml">NEElementwiseMax</a> &amp;&amp;)            = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml">NEElementwiseMax</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#add32c8189727819aab9d872cc09f5cfd">NEElementwiseMax::operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml">NEElementwiseMax</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#a6ad355ed142997ff0232e84112b473e1">NEElementwiseMax::~NEElementwiseMax</a>()                              = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#abafff41f9b2ef82e8c99229c2717770f">   50</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#abafff41f9b2ef82e8c99229c2717770f">NEElementwiseMax::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    _impl-&gt;src_0 = input1;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    _impl-&gt;src_1 = input2;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    _impl-&gt;dst   = output;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    _impl-&gt;op    = std::make_unique&lt;cpu::CpuElementwiseMax&gt;();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    _impl-&gt;op-&gt;configure(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">   60</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">NEElementwiseMax::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input1,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input2,</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *output,</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>.enabled());</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_arithmetic.xhtml#ade7f7ca859a4bc67b2a7f4588940dcd8">cpu::CpuElementwiseMax::validate</a>(input1, input2, output);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#ad1717410afd0be936c6213a63c8005fb">   69</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#ad1717410afd0be936c6213a63c8005fb">NEElementwiseMax::run</a>()</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, _impl-&gt;src_0);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, _impl-&gt;src_1);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _impl-&gt;dst);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    _impl-&gt;op-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">struct </span>NEElementwiseMin::Impl</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                          *src_0{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">const</span> ITensor                          *src_1{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    ITensor                                *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    std::unique_ptr&lt;cpu::CpuElementwiseMin&gt; op{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;};</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#a7060eb5060f1696ff0251d131809d2be">   86</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#a7060eb5060f1696ff0251d131809d2be">NEElementwiseMin::NEElementwiseMin</a>() : _impl(std::make_unique&lt;Impl&gt;())</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#a7060eb5060f1696ff0251d131809d2be">NEElementwiseMin::NEElementwiseMin</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml">NEElementwiseMin</a> &amp;&amp;)            = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml">NEElementwiseMin</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#ace8c02bd48d40bbd03fc1843ea9f2cba">NEElementwiseMin::operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml">NEElementwiseMin</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#adeaeaa0014ced02a72af93c9ea434072">NEElementwiseMin::~NEElementwiseMin</a>()                              = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#abafff41f9b2ef82e8c99229c2717770f">   93</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#abafff41f9b2ef82e8c99229c2717770f">NEElementwiseMin::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    _impl-&gt;src_0 = input1;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    _impl-&gt;src_1 = input2;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    _impl-&gt;dst   = output;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    _impl-&gt;op    = std::make_unique&lt;cpu::CpuElementwiseMin&gt;();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    _impl-&gt;op-&gt;configure(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">  103</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">NEElementwiseMin::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input1,</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input2,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *output,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>.enabled());</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_arithmetic.xhtml#ade7f7ca859a4bc67b2a7f4588940dcd8">cpu::CpuElementwiseMin::validate</a>(input1, input2, output);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#ad1717410afd0be936c6213a63c8005fb">  112</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#ad1717410afd0be936c6213a63c8005fb">NEElementwiseMin::run</a>()</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, _impl-&gt;src_0);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, _impl-&gt;src_1);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _impl-&gt;dst);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    _impl-&gt;op-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">struct </span>NEElementwiseSquaredDiff::Impl</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                                  *src_0{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">const</span> ITensor                                  *src_1{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    ITensor                                        *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    std::unique_ptr&lt;cpu::CpuElementwiseSquaredDiff&gt; op{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;};</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a5dc473f7b3693460cb53aafc7d691606">  129</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a5dc473f7b3693460cb53aafc7d691606">NEElementwiseSquaredDiff::NEElementwiseSquaredDiff</a>() : _impl(std::make_unique&lt;Impl&gt;())</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a5dc473f7b3693460cb53aafc7d691606">NEElementwiseSquaredDiff::NEElementwiseSquaredDiff</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml">NEElementwiseSquaredDiff</a> &amp;&amp;)            = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml">NEElementwiseSquaredDiff</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a7e36af44a39bfd767fd6bee5b0abce57">NEElementwiseSquaredDiff::operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml">NEElementwiseSquaredDiff</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a073c34dda38345f7699d13a690b219ad">NEElementwiseSquaredDiff::~NEElementwiseSquaredDiff</a>()                                      = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#abafff41f9b2ef82e8c99229c2717770f">  136</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#abafff41f9b2ef82e8c99229c2717770f">NEElementwiseSquaredDiff::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                   *input1,</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                         <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                   *input2,</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                         <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                   *output,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    _impl-&gt;src_0 = input1;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    _impl-&gt;src_1 = input2;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    _impl-&gt;dst   = output;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    _impl-&gt;op    = std::make_unique&lt;cpu::CpuElementwiseSquaredDiff&gt;();</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    _impl-&gt;op-&gt;configure(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">  149</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">NEElementwiseSquaredDiff::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input1,</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input2,</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *output,</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>.enabled());</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_arithmetic.xhtml#ade7f7ca859a4bc67b2a7f4588940dcd8">cpu::CpuElementwiseSquaredDiff::validate</a>(input1, input2, output);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#ad1717410afd0be936c6213a63c8005fb">  158</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#ad1717410afd0be936c6213a63c8005fb">NEElementwiseSquaredDiff::run</a>()</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, _impl-&gt;src_0);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, _impl-&gt;src_1);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _impl-&gt;dst);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    _impl-&gt;op-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword">struct </span>NEElementwiseDivision::Impl</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;{</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                               *src_0{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">const</span> ITensor                               *src_1{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    ITensor                                     *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    std::unique_ptr&lt;cpu::CpuElementwiseDivision&gt; op{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;};</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#ae285af0ff85fc2b0229d192b17e0ff0f">  175</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#ae285af0ff85fc2b0229d192b17e0ff0f">NEElementwiseDivision::NEElementwiseDivision</a>() : _impl(std::make_unique&lt;Impl&gt;())</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;{</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#ae285af0ff85fc2b0229d192b17e0ff0f">NEElementwiseDivision::NEElementwiseDivision</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml">NEElementwiseDivision</a> &amp;&amp;)            = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml">NEElementwiseDivision</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#a26878b6c4aefaa523ddae04de6677294">NEElementwiseDivision::operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml">NEElementwiseDivision</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#a7b7ae85b7a828f0e4a981a8e4ec70b1c">NEElementwiseDivision::~NEElementwiseDivision</a>()                                   = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#abafff41f9b2ef82e8c99229c2717770f">  182</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#abafff41f9b2ef82e8c99229c2717770f">NEElementwiseDivision::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                   *input1,</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                      <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                   *input2,</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                      <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                   *output,</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;{</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    _impl-&gt;src_0 = input1;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    _impl-&gt;src_1 = input2;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    _impl-&gt;dst   = output;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    _impl-&gt;op    = std::make_unique&lt;cpu::CpuElementwiseDivision&gt;();</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    _impl-&gt;op-&gt;configure(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">  195</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">NEElementwiseDivision::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input1,</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input2,</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *output,</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;{</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>.enabled());</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_division.xhtml#ade7f7ca859a4bc67b2a7f4588940dcd8">cpu::CpuElementwiseDivision::validate</a>(input1, input2, output);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;}</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#ad1717410afd0be936c6213a63c8005fb">  204</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#ad1717410afd0be936c6213a63c8005fb">NEElementwiseDivision::run</a>()</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;{</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, _impl-&gt;src_0);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, _impl-&gt;src_1);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _impl-&gt;dst);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    _impl-&gt;op-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keyword">struct </span>NEElementwisePower::Impl</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                            *src_0{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keyword">const</span> ITensor                            *src_1{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    ITensor                                  *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    std::unique_ptr&lt;cpu::CpuElementwisePower&gt; op{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;};</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#a20e7c0794274d99608cf51460e01ee52">  221</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#a20e7c0794274d99608cf51460e01ee52">NEElementwisePower::NEElementwisePower</a>() : _impl(std::make_unique&lt;Impl&gt;())</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;{</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#a20e7c0794274d99608cf51460e01ee52">NEElementwisePower::NEElementwisePower</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml">NEElementwisePower</a> &amp;&amp;)            = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml">NEElementwisePower</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#adb343b870eb5c648144225fff3181845">NEElementwisePower::operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml">NEElementwisePower</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#a526c56855861bd4a7f82b320d0dda41c">NEElementwisePower::~NEElementwisePower</a>()                                = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#abafff41f9b2ef82e8c99229c2717770f">  228</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#abafff41f9b2ef82e8c99229c2717770f">NEElementwisePower::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                   *input1,</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                   <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                   *input2,</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                                   <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                   *output,</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;{</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    _impl-&gt;src_0 = input1;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    _impl-&gt;src_1 = input2;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    _impl-&gt;dst   = output;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    _impl-&gt;op    = std::make_unique&lt;cpu::CpuElementwisePower&gt;();</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    _impl-&gt;op-&gt;configure(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;}</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">  241</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">NEElementwisePower::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input1,</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input2,</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *output,</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;{</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>.enabled());</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_power.xhtml#ade7f7ca859a4bc67b2a7f4588940dcd8">cpu::CpuElementwisePower::validate</a>(input1, input2, output);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#ad1717410afd0be936c6213a63c8005fb">  250</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#ad1717410afd0be936c6213a63c8005fb">NEElementwisePower::run</a>()</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, _impl-&gt;src_0);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, _impl-&gt;src_1);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _impl-&gt;dst);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    _impl-&gt;op-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;}</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keyword">template</span> &lt;ComparisonOperation COP&gt;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword">struct </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic</a>&lt;COP&gt;::Impl</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;{</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                                            *src_0{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keyword">const</span> ITensor                                            *src_1{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    ITensor                                                  *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    std::unique_ptr&lt;cpu::CpuElementwiseComparisonStatic&lt;COP&gt;&gt; op{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;};</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keyword">template</span> &lt;ComparisonOperation COP&gt;</div>
<div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a50f362acd4116badfaeb1650b93eb35e">  269</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a50f362acd4116badfaeb1650b93eb35e">NEElementwiseComparisonStatic&lt;COP&gt;::NEElementwiseComparisonStatic</a>() : _impl(std::make_unique&lt;Impl&gt;())</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;{</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;}</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword">template</span> &lt;ComparisonOperation COP&gt;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a50f362acd4116badfaeb1650b93eb35e">NEElementwiseComparisonStatic&lt;COP&gt;::NEElementwiseComparisonStatic</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keyword">template</span> &lt;ComparisonOperation COP&gt;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;COP&gt;</a> &amp;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#ae6518b13459cfde95d533f6bb00d3987">NEElementwiseComparisonStatic&lt;COP&gt;::operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keyword">template</span> &lt;ComparisonOperation COP&gt;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a74b1b3ad06927d2b2256129e6390efb2">NEElementwiseComparisonStatic&lt;COP&gt;::~NEElementwiseComparisonStatic</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keyword">template</span> &lt;ComparisonOperation COP&gt;</div>
<div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a151f73d8df86064f806f8b3256571b0a">  281</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a151f73d8df86064f806f8b3256571b0a">NEElementwiseComparisonStatic&lt;COP&gt;::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output)</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;{</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    _impl-&gt;src_0 = input1;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    _impl-&gt;src_1 = input2;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    _impl-&gt;dst   = output;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    _impl-&gt;op    = std::make_unique&lt;cpu::CpuElementwiseComparisonStatic&lt;COP&gt;&gt;();</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    _impl-&gt;op-&gt;configure(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;}</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160; </div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keyword">template</span> &lt;ComparisonOperation COP&gt;</div>
<div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#afe71126bef1735fe1613a6da30d2c0c4">  291</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#afe71126bef1735fe1613a6da30d2c0c4">NEElementwiseComparisonStatic&lt;COP&gt;::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1,</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2,</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output)</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;{</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison_static.xhtml#ade7f7ca859a4bc67b2a7f4588940dcd8">cpu::CpuElementwiseComparisonStatic&lt;COP&gt;::validate</a>(input1, input2, output);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;}</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keyword">template</span> &lt;ComparisonOperation COP&gt;</div>
<div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#ad1717410afd0be936c6213a63c8005fb">  299</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#ad1717410afd0be936c6213a63c8005fb">NEElementwiseComparisonStatic&lt;COP&gt;::run</a>()</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;{</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, _impl-&gt;src_0);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, _impl-&gt;src_1);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _impl-&gt;dst);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    _impl-&gt;op-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;}</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160; </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keyword">struct </span>NEElementwiseComparison::Impl</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;{</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                                 *src_0{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keyword">const</span> ITensor                                 *src_1{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    ITensor                                       *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    std::unique_ptr&lt;cpu::CpuElementwiseComparison&gt; op{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;};</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160; </div>
<div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a59af9125db28a13b26029a9f8ef07cd1">  316</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a59af9125db28a13b26029a9f8ef07cd1">NEElementwiseComparison::NEElementwiseComparison</a>() : _impl(std::make_unique&lt;Impl&gt;())</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;{</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;}</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a59af9125db28a13b26029a9f8ef07cd1">NEElementwiseComparison::NEElementwiseComparison</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml">NEElementwiseComparison</a> &amp;&amp;)            = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml">NEElementwiseComparison</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a8a826614ba95f5a5532180550d1f95ee">NEElementwiseComparison::operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml">NEElementwiseComparison</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a9aa749f6fe33142b375b7e9fd72d0d3a">NEElementwiseComparison::~NEElementwiseComparison</a>()                                     = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#ace1b1f04b180068d7c3f183038a66134">  323</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#ace1b1f04b180068d7c3f183038a66134">NEElementwiseComparison::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <a class="code" href="namespacearm__compute.xhtml#a2d299363c9fc33334c571fa29ca4f58c">ComparisonOperation</a> op)</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;{</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    _impl-&gt;src_0 = input1;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    _impl-&gt;src_1 = input2;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    _impl-&gt;dst   = output;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    _impl-&gt;op    = std::make_unique&lt;cpu::CpuElementwiseComparison&gt;();</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    _impl-&gt;op-&gt;configure(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), op);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;}</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a3c6c21badfd0002fd036410be5b1dcb1">  332</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a3c6c21badfd0002fd036410be5b1dcb1">NEElementwiseComparison::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>  *input1,</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>  *input2,</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>  *output,</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                                         <a class="code" href="namespacearm__compute.xhtml#a2d299363c9fc33334c571fa29ca4f58c">ComparisonOperation</a> op)</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;{</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison.xhtml#a32a353df59aa3ac200ff09feaf36d6db">cpu::CpuElementwiseComparison::validate</a>(input1, input2, output, op);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#ad1717410afd0be936c6213a63c8005fb">  340</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#ad1717410afd0be936c6213a63c8005fb">NEElementwiseComparison::run</a>()</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;{</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, _impl-&gt;src_0);</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, _impl-&gt;src_1);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _impl-&gt;dst);</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    _impl-&gt;op-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;}</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160; </div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">// Supported Specializations</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::Equal&gt;</a>;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::NotEqual&gt;</a>;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::Greater&gt;</a>;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::GreaterEqual&gt;</a>;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::Less&gt;</a>;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::LessEqual&gt;</a>;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_division_xhtml_abafff41f9b2ef82e8c99229c2717770f"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_division.xhtml#abafff41f9b2ef82e8c99229c2717770f">arm_compute::NEElementwiseDivision::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00182">NEElementwiseOperations.cpp:182</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_xhtml_a9aa749f6fe33142b375b7e9fd72d0d3a"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a9aa749f6fe33142b375b7e9fd72d0d3a">arm_compute::NEElementwiseComparison::~NEElementwiseComparison</a></div><div class="ttdeci">~NEElementwiseComparison()</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml">arm_compute::NEElementwiseComparison</a></div><div class="ttdoc">Basic function to run cpu::kernels::CpuComparisonKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8h_source.xhtml#l00364">NEElementwiseOperations.h:364</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_squared_diff_xhtml_a073c34dda38345f7699d13a690b219ad"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a073c34dda38345f7699d13a690b219ad">arm_compute::NEElementwiseSquaredDiff::~NEElementwiseSquaredDiff</a></div><div class="ttdeci">~NEElementwiseSquaredDiff()</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_power_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_power.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEElementwisePower::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00250">NEElementwiseOperations.cpp:250</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_power_xhtml_a20e7c0794274d99608cf51460e01ee52"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_power.xhtml#a20e7c0794274d99608cf51460e01ee52">arm_compute::NEElementwisePower::NEElementwisePower</a></div><div class="ttdeci">NEElementwisePower()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00221">NEElementwiseOperations.cpp:221</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_max_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_max.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEElementwiseMax::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00069">NEElementwiseOperations.cpp:69</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_min_xhtml_adeaeaa0014ced02a72af93c9ea434072"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_min.xhtml#adeaeaa0014ced02a72af93c9ea434072">arm_compute::NEElementwiseMin::~NEElementwiseMin</a></div><div class="ttdeci">~NEElementwiseMin()</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_max_xhtml_abafff41f9b2ef82e8c99229c2717770f"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_max.xhtml#abafff41f9b2ef82e8c99229c2717770f">arm_compute::NEElementwiseMax::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00050">NEElementwiseOperations.cpp:50</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_squared_diff_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEElementwiseSquaredDiff::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00158">NEElementwiseOperations.cpp:158</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a6d8078b635739e84400cf8240a2993e7"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">arm_compute::ITensorPack::add_tensor</a></div><div class="ttdeci">void add_tensor(int id, ITensor *tensor)</div><div class="ttdoc">Add tensor to the pack.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00038">ITensorPack.cpp:38</a></div></div>
<div class="ttc" id="a_cpu_elementwise_8h_xhtml"><div class="ttname"><a href="_cpu_elementwise_8h.xhtml">CpuElementwise.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_min_xhtml_a7060eb5060f1696ff0251d131809d2be"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_min.xhtml#a7060eb5060f1696ff0251d131809d2be">arm_compute::NEElementwiseMin::NEElementwiseMin</a></div><div class="ttdeci">NEElementwiseMin()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00086">NEElementwiseOperations.cpp:86</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_elementwise_arithmetic_xhtml_ade7f7ca859a4bc67b2a7f4588940dcd8"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_elementwise_arithmetic.xhtml#ade7f7ca859a4bc67b2a7f4588940dcd8">arm_compute::cpu::CpuElementwiseArithmetic::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *dst)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_elementwise_8cpp_source.xhtml#l00059">CpuElementwise.cpp:59</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_xhtml_a8a826614ba95f5a5532180550d1f95ee"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a8a826614ba95f5a5532180550d1f95ee">arm_compute::NEElementwiseComparison::operator=</a></div><div class="ttdeci">NEElementwiseComparison &amp; operator=(const NEElementwiseComparison &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_max_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_max.xhtml">arm_compute::NEElementwiseMax</a></div><div class="ttdoc">Basic function to run cpu::kernels::CpuArithmeticKernel for max.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8h_source.xhtml#l00041">NEElementwiseOperations.h:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_squared_diff_xhtml_a5dc473f7b3693460cb53aafc7d691606"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a5dc473f7b3693460cb53aafc7d691606">arm_compute::NEElementwiseSquaredDiff::NEElementwiseSquaredDiff</a></div><div class="ttdeci">NEElementwiseSquaredDiff()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00129">NEElementwiseOperations.cpp:129</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_max_xhtml_a6ad355ed142997ff0232e84112b473e1"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_max.xhtml#a6ad355ed142997ff0232e84112b473e1">arm_compute::NEElementwiseMax::~NEElementwiseMax</a></div><div class="ttdeci">~NEElementwiseMax()</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00061">ActivationLayerInfo.h:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_division_xhtml_a7b7ae85b7a828f0e4a981a8e4ec70b1c"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_division.xhtml#a7b7ae85b7a828f0e4a981a8e4ec70b1c">arm_compute::NEElementwiseDivision::~NEElementwiseDivision</a></div><div class="ttdeci">~NEElementwiseDivision()</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1f8aca235c095df227e7444f6b237eb1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">arm_compute::test::validation::act_info</a></div><div class="ttdeci">act_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEElementwiseComparison::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00340">NEElementwiseOperations.cpp:340</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_min_xhtml_ace8c02bd48d40bbd03fc1843ea9f2cba"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_min.xhtml#ace8c02bd48d40bbd03fc1843ea9f2cba">arm_compute::NEElementwiseMin::operator=</a></div><div class="ttdeci">NEElementwiseMin &amp; operator=(const NEElementwiseMin &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_static_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">arm_compute::NEElementwiseComparisonStatic</a></div><div class="ttdoc">Basic function to run cpu::kernels::CpuComparisonKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8h_source.xhtml#l00427">NEElementwiseOperations.h:427</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a2d299363c9fc33334c571fa29ca4f58c"><div class="ttname"><a href="namespacearm__compute.xhtml#a2d299363c9fc33334c571fa29ca4f58c">arm_compute::ComparisonOperation</a></div><div class="ttdeci">ComparisonOperation</div><div class="ttdoc">Supported comparison operations.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00132">Types.h:132</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_division_xhtml_af26b2456f5c6fa0e1c8d69a13c74c6cb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_division.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">arm_compute::NEElementwiseDivision::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of cpu::kernels::CpuArithme...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00195">NEElementwiseOperations.cpp:195</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00298">Error.h:298</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_squared_diff_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml">arm_compute::NEElementwiseSquaredDiff</a></div><div class="ttdoc">Basic function to run cpu::kernels::CpuArithmeticKernel for squared difference.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8h_source.xhtml#l00173">NEElementwiseOperations.h:173</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdeci">@ ACL_DST</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_squared_diff_xhtml_abafff41f9b2ef82e8c99229c2717770f"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#abafff41f9b2ef82e8c99229c2717770f">arm_compute::NEElementwiseSquaredDiff::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00136">NEElementwiseOperations.cpp:136</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_max_xhtml_af26b2456f5c6fa0e1c8d69a13c74c6cb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_max.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">arm_compute::NEElementwiseMax::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of cpu::kernels::CpuArithme...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00060">NEElementwiseOperations.cpp:60</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_static_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEElementwiseComparisonStatic::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00299">NEElementwiseOperations.cpp:299</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_power_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_power.xhtml">arm_compute::NEElementwisePower</a></div><div class="ttdoc">Basic function to run cpu::kernels::CpuArithmeticKernel for power.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8h_source.xhtml#l00302">NEElementwiseOperations.h:302</a></div></div>
<div class="ttc" id="a_n_e_elementwise_operations_8h_xhtml"><div class="ttname"><a href="_n_e_elementwise_operations_8h.xhtml">NEElementwiseOperations.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_elementwise_power_xhtml_ade7f7ca859a4bc67b2a7f4588940dcd8"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_elementwise_power.xhtml#ade7f7ca859a4bc67b2a7f4588940dcd8">arm_compute::cpu::CpuElementwisePower::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *dst)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_elementwise_8cpp_source.xhtml#l00090">CpuElementwise.cpp:90</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_xhtml_a3c6c21badfd0002fd036410be5b1dcb1"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a3c6c21badfd0002fd036410be5b1dcb1">arm_compute::NEElementwiseComparison::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, ComparisonOperation op)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of cpu::kernels::CpuCompari...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00332">NEElementwiseOperations.cpp:332</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_elementwise_comparison_xhtml_a32a353df59aa3ac200ff09feaf36d6db"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison.xhtml#a32a353df59aa3ac200ff09feaf36d6db">arm_compute::cpu::CpuElementwiseComparison::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *dst, ComparisonOperation op)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_elementwise_8cpp_source.xhtml#l00122">CpuElementwise.cpp:122</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_max_xhtml_add32c8189727819aab9d872cc09f5cfd"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_max.xhtml#add32c8189727819aab9d872cc09f5cfd">arm_compute::NEElementwiseMax::operator=</a></div><div class="ttdeci">NEElementwiseMax &amp; operator=(const NEElementwiseMax &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1e041dc03ff256dfc8b0bf5c5fe099e0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">arm_compute::test::validation::pack</a></div><div class="ttdeci">ITensorPack pack</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">Im2Col.cpp:188</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_squared_diff_xhtml_a7e36af44a39bfd767fd6bee5b0abce57"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a7e36af44a39bfd767fd6bee5b0abce57">arm_compute::NEElementwiseSquaredDiff::operator=</a></div><div class="ttdeci">NEElementwiseSquaredDiff &amp; operator=(const NEElementwiseSquaredDiff &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_elementwise_comparison_static_xhtml_ade7f7ca859a4bc67b2a7f4588940dcd8"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison_static.xhtml#ade7f7ca859a4bc67b2a7f4588940dcd8">arm_compute::cpu::CpuElementwiseComparisonStatic::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *dst)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_elementwise_8cpp_source.xhtml#l00106">CpuElementwise.cpp:106</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_power_xhtml_adb343b870eb5c648144225fff3181845"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_power.xhtml#adb343b870eb5c648144225fff3181845">arm_compute::NEElementwisePower::operator=</a></div><div class="ttdeci">NEElementwisePower &amp; operator=(const NEElementwisePower &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_squared_diff_xhtml_af26b2456f5c6fa0e1c8d69a13c74c6cb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">arm_compute::NEElementwiseSquaredDiff::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of cpu::kernels::CpuArithme...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00149">NEElementwiseOperations.cpp:149</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_power_xhtml_abafff41f9b2ef82e8c99229c2717770f"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_power.xhtml#abafff41f9b2ef82e8c99229c2717770f">arm_compute::NEElementwisePower::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00228">NEElementwiseOperations.cpp:228</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_static_xhtml_a50f362acd4116badfaeb1650b93eb35e"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a50f362acd4116badfaeb1650b93eb35e">arm_compute::NEElementwiseComparisonStatic::NEElementwiseComparisonStatic</a></div><div class="ttdeci">NEElementwiseComparisonStatic()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00269">NEElementwiseOperations.cpp:269</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_static_xhtml_afe71126bef1735fe1613a6da30d2c0c4"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#afe71126bef1735fe1613a6da30d2c0c4">arm_compute::NEElementwiseComparisonStatic::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of cpu::kernels::CpuCompari...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00291">NEElementwiseOperations.cpp:291</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_xhtml_ace1b1f04b180068d7c3f183038a66134"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#ace1b1f04b180068d7c3f183038a66134">arm_compute::NEElementwiseComparison::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output, ComparisonOperation op)</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00323">NEElementwiseOperations.cpp:323</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_division_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_division.xhtml">arm_compute::NEElementwiseDivision</a></div><div class="ttdoc">Basic function to run cpu::kernels::CpuArithmeticKernel for division.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8h_source.xhtml#l00239">NEElementwiseOperations.h:239</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_xhtml_a59af9125db28a13b26029a9f8ef07cd1"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a59af9125db28a13b26029a9f8ef07cd1">arm_compute::NEElementwiseComparison::NEElementwiseComparison</a></div><div class="ttdeci">NEElementwiseComparison()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00316">NEElementwiseOperations.cpp:316</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_division_xhtml_ae285af0ff85fc2b0229d192b17e0ff0f"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_division.xhtml#ae285af0ff85fc2b0229d192b17e0ff0f">arm_compute::NEElementwiseDivision::NEElementwiseDivision</a></div><div class="ttdeci">NEElementwiseDivision()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00175">NEElementwiseOperations.cpp:175</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_min_xhtml_abafff41f9b2ef82e8c99229c2717770f"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_min.xhtml#abafff41f9b2ef82e8c99229c2717770f">arm_compute::NEElementwiseMin::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00093">NEElementwiseOperations.cpp:93</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_min_xhtml_af26b2456f5c6fa0e1c8d69a13c74c6cb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_min.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">arm_compute::NEElementwiseMin::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of cpu::kernels::CpuArithme...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00103">NEElementwiseOperations.cpp:103</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_static_xhtml_a74b1b3ad06927d2b2256129e6390efb2"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a74b1b3ad06927d2b2256129e6390efb2">arm_compute::NEElementwiseComparisonStatic::~NEElementwiseComparisonStatic</a></div><div class="ttdeci">~NEElementwiseComparisonStatic()</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:44</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_min_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_min.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEElementwiseMin::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00112">NEElementwiseOperations.cpp:112</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_division_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_division.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEElementwiseDivision::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00204">NEElementwiseOperations.cpp:204</a></div></div>
<div class="ttc" id="a_i_tensor_8h_xhtml"><div class="ttname"><a href="_i_tensor_8h.xhtml">ITensor.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_static_xhtml_ae6518b13459cfde95d533f6bb00d3987"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#ae6518b13459cfde95d533f6bb00d3987">arm_compute::NEElementwiseComparisonStatic::operator=</a></div><div class="ttdeci">NEElementwiseComparisonStatic &amp; operator=(const NEElementwiseComparisonStatic &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_elementwise_division_xhtml_ade7f7ca859a4bc67b2a7f4588940dcd8"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_elementwise_division.xhtml#ade7f7ca859a4bc67b2a7f4588940dcd8">arm_compute::cpu::CpuElementwiseDivision::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *dst)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_elementwise_8cpp_source.xhtml#l00077">CpuElementwise.cpp:77</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_division_xhtml_a26878b6c4aefaa523ddae04de6677294"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_division.xhtml#a26878b6c4aefaa523ddae04de6677294">arm_compute::NEElementwiseDivision::operator=</a></div><div class="ttdeci">NEElementwiseDivision &amp; operator=(const NEElementwiseDivision &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_max_xhtml_a175472ec38b0c2e5373c821c156e7148"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_max.xhtml#a175472ec38b0c2e5373c821c156e7148">arm_compute::NEElementwiseMax::NEElementwiseMax</a></div><div class="ttdeci">NEElementwiseMax()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00043">NEElementwiseOperations.cpp:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_power_xhtml_a526c56855861bd4a7f82b320d0dda41c"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_power.xhtml#a526c56855861bd4a7f82b320d0dda41c">arm_compute::NEElementwisePower::~NEElementwisePower</a></div><div class="ttdeci">~NEElementwisePower()</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_power_xhtml_af26b2456f5c6fa0e1c8d69a13c74c6cb"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_power.xhtml#af26b2456f5c6fa0e1c8d69a13c74c6cb">arm_compute::NEElementwisePower::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of cpu::kernels::CpuArithme...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00241">NEElementwiseOperations.cpp:241</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_comparison_static_xhtml_a151f73d8df86064f806f8b3256571b0a"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a151f73d8df86064f806f8b3256571b0a">arm_compute::NEElementwiseComparisonStatic::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output)</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8cpp_source.xhtml#l00281">NEElementwiseOperations.cpp:281</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_elementwise_min_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_min.xhtml">arm_compute::NEElementwiseMin</a></div><div class="ttdoc">Basic function to run cpu::kernels::CpuArithmeticKernel for min.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8h_source.xhtml#l00107">NEElementwiseOperations.h:107</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_a36523fc4c32a6b0076906589b6fc202.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_4d03f28cfd35f8f734a3b0a2f1168d27.xhtml">functions</a></li><li class="navelem"><a class="el" href="_n_e_elementwise_operations_8cpp.xhtml">NEElementwiseOperations.cpp</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:20:03 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
