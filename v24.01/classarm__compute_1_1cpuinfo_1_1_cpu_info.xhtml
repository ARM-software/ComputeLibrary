<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CpuInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CpuInfo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Aggregate class that contains CPU related information.  
 <a href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab7d98af1963169ce0ba5e98635271e24"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ab7d98af1963169ce0ba5e98635271e24">CpuInfo</a> ()=default</td></tr>
<tr class="memdesc:ab7d98af1963169ce0ba5e98635271e24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ab7d98af1963169ce0ba5e98635271e24">More...</a><br /></td></tr>
<tr class="separator:ab7d98af1963169ce0ba5e98635271e24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae82cbece298ec4aff3d35182ffa61c75"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ae82cbece298ec4aff3d35182ffa61c75">CpuInfo</a> (<a class="el" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml">CpuIsaInfo</a> <a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a38f04d1608271656814fbb66e4688a0b">isa</a>, std::vector&lt; <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CpuModel</a> &gt; <a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#aac66bfca0bbdd8554a6011ab2f489d31">cpus</a>)</td></tr>
<tr class="memdesc:ae82cbece298ec4aff3d35182ffa61c75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a new Cpu Info object.  <a href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ae82cbece298ec4aff3d35182ffa61c75">More...</a><br /></td></tr>
<tr class="separator:ae82cbece298ec4aff3d35182ffa61c75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a113d21f3f48f13555a1a611981f436a3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a113d21f3f48f13555a1a611981f436a3">has_neon</a> () const</td></tr>
<tr class="separator:a113d21f3f48f13555a1a611981f436a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f7dae768d45b1c3781748808f1c16a4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a2f7dae768d45b1c3781748808f1c16a4">has_sve</a> () const</td></tr>
<tr class="separator:a2f7dae768d45b1c3781748808f1c16a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81409e78339a5ed0dfb97d152111b568"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a81409e78339a5ed0dfb97d152111b568">has_sve2</a> () const</td></tr>
<tr class="separator:a81409e78339a5ed0dfb97d152111b568"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a934b3b3a24b2f25bde992b6883caf3f0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a934b3b3a24b2f25bde992b6883caf3f0">has_sme</a> () const</td></tr>
<tr class="separator:a934b3b3a24b2f25bde992b6883caf3f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a629b7f8097121022b5fae83ed4b1581f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a629b7f8097121022b5fae83ed4b1581f">has_sme2</a> () const</td></tr>
<tr class="separator:a629b7f8097121022b5fae83ed4b1581f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0647761f309e3b3edb5a5501b3ff38d2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a0647761f309e3b3edb5a5501b3ff38d2">has_fp16</a> () const</td></tr>
<tr class="separator:a0647761f309e3b3edb5a5501b3ff38d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3a44e5d711e5707a9d974d085bcccdd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ae3a44e5d711e5707a9d974d085bcccdd">has_bf16</a> () const</td></tr>
<tr class="separator:ae3a44e5d711e5707a9d974d085bcccdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77c6d2e5ffdac1eb191c637584b63e9f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a77c6d2e5ffdac1eb191c637584b63e9f">has_svebf16</a> () const</td></tr>
<tr class="separator:a77c6d2e5ffdac1eb191c637584b63e9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d31247d25bfe0a0b669d367aa801c2d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a8d31247d25bfe0a0b669d367aa801c2d">has_dotprod</a> () const</td></tr>
<tr class="separator:a8d31247d25bfe0a0b669d367aa801c2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b945f4077c1c4e623fd8d13b0cac29c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a7b945f4077c1c4e623fd8d13b0cac29c">has_i8mm</a> () const</td></tr>
<tr class="separator:a7b945f4077c1c4e623fd8d13b0cac29c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ce2bff23b934048c003ac612e9abd83"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a2ce2bff23b934048c003ac612e9abd83">has_svei8mm</a> () const</td></tr>
<tr class="separator:a2ce2bff23b934048c003ac612e9abd83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa12d6e2d28e061e8dec5a29b0a0817d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#aaa12d6e2d28e061e8dec5a29b0a0817d">has_svef32mm</a> () const</td></tr>
<tr class="separator:aaa12d6e2d28e061e8dec5a29b0a0817d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38f04d1608271656814fbb66e4688a0b"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml">CpuIsaInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a38f04d1608271656814fbb66e4688a0b">isa</a> () const</td></tr>
<tr class="separator:a38f04d1608271656814fbb66e4688a0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac66bfca0bbdd8554a6011ab2f489d31"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CpuModel</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#aac66bfca0bbdd8554a6011ab2f489d31">cpus</a> () const</td></tr>
<tr class="separator:aac66bfca0bbdd8554a6011ab2f489d31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ff1f812b21b85daca91749ab3760386"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CpuModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a8ff1f812b21b85daca91749ab3760386">cpu_model</a> (uint32_t cpuid) const</td></tr>
<tr class="separator:a8ff1f812b21b85daca91749ab3760386"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada9426e8aa29745aadf93352e1eb00b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CpuModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ada9426e8aa29745aadf93352e1eb00b5">cpu_model</a> () const</td></tr>
<tr class="separator:ada9426e8aa29745aadf93352e1eb00b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbfb368a91028856295df4cdaef94cdd"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#adbfb368a91028856295df4cdaef94cdd">num_cpus</a> () const</td></tr>
<tr class="separator:adbfb368a91028856295df4cdaef94cdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a686af658dafc836c66bc29bc8fe6932b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml">CpuInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a686af658dafc836c66bc29bc8fe6932b">build</a> ()</td></tr>
<tr class="memdesc:a686af658dafc836c66bc29bc8fe6932b"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml" title="Aggregate class that contains CPU related information.">CpuInfo</a> builder function from system related information.  <a href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a686af658dafc836c66bc29bc8fe6932b">More...</a><br /></td></tr>
<tr class="separator:a686af658dafc836c66bc29bc8fe6932b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Aggregate class that contains CPU related information. </p>
<p>Contains information about the numbers of the CPUs, the model of each CPU, ISA related information and more</p>
<dl class="section note"><dt>Note</dt><dd>We can safely assume that the ISA is common between different clusters of cores </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00044">44</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab7d98af1963169ce0ba5e98635271e24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7d98af1963169ce0ba5e98635271e24">&#9670;&nbsp;</a></span>CpuInfo() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml">CpuInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a id="ae82cbece298ec4aff3d35182ffa61c75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae82cbece298ec4aff3d35182ffa61c75">&#9670;&nbsp;</a></span>CpuInfo() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml">CpuInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml">CpuIsaInfo</a>&#160;</td>
          <td class="paramname"><em>isa</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CpuModel</a> &gt;&#160;</td>
          <td class="paramname"><em>cpus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct a new Cpu Info object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">isa</td><td>ISA capabilities information </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cpus</td><td>CPU models information </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cpu_info_8cpp_source.xhtml#l00301">301</a> of file <a class="el" href="_cpu_info_8cpp_source.xhtml">CpuInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                                                         : _isa(std::move(<a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a38f04d1608271656814fbb66e4688a0b">isa</a>)), _cpus(std::move(<a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#aac66bfca0bbdd8554a6011ab2f489d31">cpus</a>))</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;{</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a686af658dafc836c66bc29bc8fe6932b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a686af658dafc836c66bc29bc8fe6932b">&#9670;&nbsp;</a></span>build()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml">CpuInfo</a> build </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml" title="Aggregate class that contains CPU related information.">CpuInfo</a> builder function from system related information. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml" title="Aggregate class that contains CPU related information.">CpuInfo</a> A populated <a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml" title="Aggregate class that contains CPU related information.">CpuInfo</a> structure </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cpu_info_8cpp_source.xhtml#l00305">305</a> of file <a class="el" href="_cpu_info_8cpp_source.xhtml">CpuInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;{</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="preprocessor">#if !defined(_WIN64) &amp;&amp; !defined(BARE_METAL) &amp;&amp; !defined(__APPLE__) &amp;&amp; !defined(__OpenBSD__) &amp;&amp; \</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="preprocessor">    (defined(__arm__) || defined(__aarch64__))</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keyword">const</span> uint32_t hwcaps   = getauxval(AT_HWCAP);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">const</span> uint32_t hwcaps2  = getauxval(AT_HWCAP2);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keyword">const</span> uint32_t max_cpus = get_max_cpus();</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="comment">// Populate midr values</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    std::vector&lt;uint32_t&gt; cpus_midr;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordflow">if</span> (hwcaps &amp; <a class="code" href="_cpu_info_8cpp.xhtml#a6f1ae534cac43c2430d66e81bfe4d0f7">ARM_COMPUTE_CPU_FEATURE_HWCAP_CPUID</a>)</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    {</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        cpus_midr = midr_from_cpuid(max_cpus);</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keywordflow">if</span> (cpus_midr.empty())</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    {</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        cpus_midr = midr_from_proc_cpuinfo(max_cpus);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    }</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">if</span> (cpus_midr.empty())</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        cpus_midr.resize(max_cpus, 0);</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    }</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="comment">// Populate isa (Assume homogeneous ISA specification)</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    CpuIsaInfo <a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a38f04d1608271656814fbb66e4688a0b">isa</a> = <a class="code" href="namespacearm__compute_1_1cpuinfo.xhtml#a9abbd59830c6b78524e28478b2f78208">init_cpu_isa_from_hwcaps</a>(hwcaps, hwcaps2, cpus_midr.back());</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160; </div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="comment">// Convert midr to models</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    std::vector&lt;CpuModel&gt; cpus_model;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    std::transform(std::begin(cpus_midr), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(cpus_midr), std::back_inserter(cpus_model),</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                   [](uint32_t midr) -&gt; <a class="code" href="namespacearm__compute_1_1cpuinfo.xhtml#a720e47e8a41ea0be30c84d7b823cda31">CpuModel</a> { <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1cpuinfo.xhtml#ac48afee48f0c8e4b0e0be117385694d7">midr_to_model</a>(midr); });</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ab7d98af1963169ce0ba5e98635271e24">CpuInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>(<a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a38f04d1608271656814fbb66e4688a0b">isa</a>, cpus_model);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160; </div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="preprocessor">#elif (BARE_METAL) &amp;&amp; \</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="preprocessor">    defined(          \</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="preprocessor">        __aarch64__) </span><span class="comment">/* !defined(BARE_METAL) &amp;&amp; !defined(__APPLE__) &amp;&amp; !defined(__OpenBSD__) &amp;&amp; (defined(__arm__) || defined(__aarch64__)) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160; </div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="comment">// Assume single CPU in bare metal mode.  Just read the ID register and feature bits directly.</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    uint64_t isar0 = 0, isar1 = 0, pfr0 = 0, pfr1 = 0, svefr0 = 0, midr = 0;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <a class="code" href="_cpu_info_8cpp.xhtml#a5596c84a7096be3975643069954aec7d">ARM_COMPUTE_GET_FEATURE_REG</a>(isar0, ID_AA64ISAR0_EL1);</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <a class="code" href="_cpu_info_8cpp.xhtml#a5596c84a7096be3975643069954aec7d">ARM_COMPUTE_GET_FEATURE_REG</a>(isar1, ID_AA64ISAR1_EL1);</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <a class="code" href="_cpu_info_8cpp.xhtml#a5596c84a7096be3975643069954aec7d">ARM_COMPUTE_GET_FEATURE_REG</a>(pfr0, ID_AA64PFR0_EL1);</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <a class="code" href="_cpu_info_8cpp.xhtml#a5596c84a7096be3975643069954aec7d">ARM_COMPUTE_GET_FEATURE_REG</a>(pfr1, ID_AA64PFR1_EL1);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <a class="code" href="_cpu_info_8cpp.xhtml#a5596c84a7096be3975643069954aec7d">ARM_COMPUTE_GET_FEATURE_REG</a>(midr, MIDR_EL1);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keywordflow">if</span> ((pfr0 &gt;&gt; 32) &amp; 0xf)</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    {</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        svefr0 = get_sve_feature_reg();</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    CpuIsaInfo            <a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a38f04d1608271656814fbb66e4688a0b">isa</a> = <a class="code" href="namespacearm__compute_1_1cpuinfo.xhtml#ad40a2cde10e8b5f3e44af23f1e878f1c">init_cpu_isa_from_regs</a>(isar0, isar1, pfr0, pfr1, svefr0, midr);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    std::vector&lt;CpuModel&gt; cpus_model(1, <a class="code" href="namespacearm__compute_1_1cpuinfo.xhtml#ac48afee48f0c8e4b0e0be117385694d7">midr_to_model</a>(midr));</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ab7d98af1963169ce0ba5e98635271e24">CpuInfo</a>               <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>(<a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a38f04d1608271656814fbb66e4688a0b">isa</a>, cpus_model);</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="preprocessor">#elif defined(__aarch64__) &amp;&amp; defined(__APPLE__) </span><span class="comment">/* #elif(BARE_METAL) &amp;&amp; defined(__aarch64__) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordtype">int</span>                   ncpus = get_hw_capability(<span class="stringliteral">&quot;hw.perflevel0.logicalcpu&quot;</span>);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    CpuIsaInfo            isainfo;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    std::vector&lt;CpuModel&gt; cpus_model(ncpus);</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    isainfo.neon = get_hw_capability(<span class="stringliteral">&quot;hw.optional.neon&quot;</span>);</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    isainfo.fp16 = get_hw_capability(<span class="stringliteral">&quot;hw.optional.neon_fp16&quot;</span>);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    isainfo.dot  = get_hw_capability(<span class="stringliteral">&quot;hw.optional.arm.FEAT_DotProd&quot;</span>);</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ab7d98af1963169ce0ba5e98635271e24">CpuInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>(isainfo, cpus_model);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="preprocessor">#else                                            </span><span class="comment">/* #elif defined(__aarch64__) &amp;&amp; defined(__APPLE__) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ab7d98af1963169ce0ba5e98635271e24">CpuInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>(CpuIsaInfo(), {CpuModel::GENERIC});</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* !defined(BARE_METAL) &amp;&amp; !defined(__APPLE__) &amp;&amp; !defined(__OpenBSD__) &amp;&amp; (defined(__arm__) || defined(__aarch64__)) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_info_8cpp_source.xhtml#l00057">ARM_COMPUTE_CPU_FEATURE_HWCAP_CPUID</a>, <a class="el" href="_cpu_info_8cpp_source.xhtml#l00058">ARM_COMPUTE_GET_FEATURE_REG</a>, <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00052">CpuIsaInfo::dot</a>, <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">arm_compute::mlgo::parser::end()</a>, <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00047">CpuIsaInfo::fp16</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="_cpu_isa_info_8cpp_source.xhtml#l00142">arm_compute::cpuinfo::init_cpu_isa_from_hwcaps()</a>, <a class="el" href="_cpu_isa_info_8cpp_source.xhtml#l00155">arm_compute::cpuinfo::init_cpu_isa_from_regs()</a>, <a class="el" href="_cpu_info_8h_source.xhtml#l00111">CpuInfo::isa()</a>, <a class="el" href="_cpu_model_8cpp_source.xhtml#l00080">arm_compute::cpuinfo::midr_to_model()</a>, and <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00040">CpuIsaInfo::neon</a>.</p>

</div>
</div>
<a id="ada9426e8aa29745aadf93352e1eb00b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada9426e8aa29745aadf93352e1eb00b5">&#9670;&nbsp;</a></span>cpu_model() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CpuModel</a> cpu_model </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8cpp_source.xhtml#l00383">383</a> of file <a class="el" href="_cpu_info_8cpp_source.xhtml">CpuInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;{</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="preprocessor">#if defined(_WIN64) || defined(BARE_METAL) || defined(__APPLE__) || defined(__OpenBSD__) || \</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="preprocessor">    (!defined(__arm__) &amp;&amp; !defined(__aarch64__))</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ada9426e8aa29745aadf93352e1eb00b5">cpu_model</a>(0);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="preprocessor">#else </span><span class="comment">/* defined(BARE_METAL) || defined(__APPLE__) || defined(__OpenBSD__) || (!defined(__arm__) &amp;&amp; !defined(__aarch64__)) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ada9426e8aa29745aadf93352e1eb00b5">cpu_model</a>(sched_getcpu());</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(BARE_METAL) || defined(__APPLE__) || defined(__OpenBSD__) || (!defined(__arm__) &amp;&amp; !defined(__aarch64__)) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8ff1f812b21b85daca91749ab3760386"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ff1f812b21b85daca91749ab3760386">&#9670;&nbsp;</a></span>cpu_model() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CpuModel</a> cpu_model </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>cpuid</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8cpp_source.xhtml#l00374">374</a> of file <a class="el" href="_cpu_info_8cpp_source.xhtml">CpuInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;{</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordflow">if</span> (cpuid &lt; _cpus.size())</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    {</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">return</span> _cpus[cpuid];</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    }</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordflow">return</span> CpuModel::GENERIC;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aac66bfca0bbdd8554a6011ab2f489d31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac66bfca0bbdd8554a6011ab2f489d31">&#9670;&nbsp;</a></span>cpus()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;<a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CpuModel</a>&gt;&amp; cpus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00115">115</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">return</span> _cpus;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae3a44e5d711e5707a9d974d085bcccdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3a44e5d711e5707a9d974d085bcccdd">&#9670;&nbsp;</a></span>has_bf16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_bf16 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00086">86</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a88092a332a92f8b7fe41627f4bbdda11">bf16</a>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00048">CpuIsaInfo::bf16</a>.</p>

</div>
</div>
<a id="a8d31247d25bfe0a0b669d367aa801c2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d31247d25bfe0a0b669d367aa801c2d">&#9670;&nbsp;</a></span>has_dotprod()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_dotprod </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00094">94</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#aa9a6bf94935dd333e9337fdccc119616">dot</a>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00052">CpuIsaInfo::dot</a>.</p>

<p class="reference">Referenced by <a class="el" href="cpu_2unit_2_context_8cpp_source.xhtml#l00091">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a0647761f309e3b3edb5a5501b3ff38d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0647761f309e3b3edb5a5501b3ff38d2">&#9670;&nbsp;</a></span>has_fp16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_fp16 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00082">82</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a2af87cdc1d4cc99aeee94cbefeae7811">fp16</a>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00047">CpuIsaInfo::fp16</a>.</p>

<p class="reference">Referenced by <a class="el" href="cpu_2unit_2_context_8cpp_source.xhtml#l00091">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a7b945f4077c1c4e623fd8d13b0cac29c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b945f4077c1c4e623fd8d13b0cac29c">&#9670;&nbsp;</a></span>has_i8mm()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_i8mm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00098">98</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#afbdf12e6f5662a3bece45ef6153b6053">i8mm</a>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00053">CpuIsaInfo::i8mm</a>.</p>

<p class="reference">Referenced by <a class="el" href="cpu_2unit_2_context_8cpp_source.xhtml#l00091">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a113d21f3f48f13555a1a611981f436a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a113d21f3f48f13555a1a611981f436a3">&#9670;&nbsp;</a></span>has_neon()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_neon </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00062">62</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#af778cbee81845454fec3eaec33d7ac57">neon</a>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00040">CpuIsaInfo::neon</a>.</p>

<p class="reference">Referenced by <a class="el" href="cpu_2unit_2_context_8cpp_source.xhtml#l00091">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a934b3b3a24b2f25bde992b6883caf3f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a934b3b3a24b2f25bde992b6883caf3f0">&#9670;&nbsp;</a></span>has_sme()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_sme </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00074">74</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a7ef417bc021cf9b95932a42716ee9296">sme</a>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00043">CpuIsaInfo::sme</a>.</p>

</div>
</div>
<a id="a629b7f8097121022b5fae83ed4b1581f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a629b7f8097121022b5fae83ed4b1581f">&#9670;&nbsp;</a></span>has_sme2()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_sme2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00078">78</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#ab0d6c6f4867adf5ce34d1e9e6edde48c">sme2</a>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00044">CpuIsaInfo::sme2</a>.</p>

</div>
</div>
<a id="a2f7dae768d45b1c3781748808f1c16a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f7dae768d45b1c3781748808f1c16a4">&#9670;&nbsp;</a></span>has_sve()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_sve </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00066">66</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a2aa244536f400a80d97e5bb219e4d6ed">sve</a>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00041">CpuIsaInfo::sve</a>.</p>

</div>
</div>
<a id="a81409e78339a5ed0dfb97d152111b568"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81409e78339a5ed0dfb97d152111b568">&#9670;&nbsp;</a></span>has_sve2()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_sve2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00070">70</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a66d030556f884ccd13ab141377a24fab">sve2</a>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00042">CpuIsaInfo::sve2</a>.</p>

<p class="reference">Referenced by <a class="el" href="cpu_2unit_2_context_8cpp_source.xhtml#l00091">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a77c6d2e5ffdac1eb191c637584b63e9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77c6d2e5ffdac1eb191c637584b63e9f">&#9670;&nbsp;</a></span>has_svebf16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_svebf16 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00090">90</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a288148f8f6ebc576fe9d86403814cbb1">svebf16</a>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00049">CpuIsaInfo::svebf16</a>.</p>

</div>
</div>
<a id="aaa12d6e2d28e061e8dec5a29b0a0817d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa12d6e2d28e061e8dec5a29b0a0817d">&#9670;&nbsp;</a></span>has_svef32mm()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_svef32mm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00106">106</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a786ebd40b02b25fac5d48a4273d8ab44">svef32mm</a>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00055">CpuIsaInfo::svef32mm</a>.</p>

</div>
</div>
<a id="a2ce2bff23b934048c003ac612e9abd83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ce2bff23b934048c003ac612e9abd83">&#9670;&nbsp;</a></span>has_svei8mm()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_svei8mm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00102">102</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">return</span> _isa.<a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a96ba96d43f2e5fdba2aaf457ef35b0ac">svei8mm</a>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cpu_isa_info_8h_source.xhtml#l00054">CpuIsaInfo::svei8mm</a>.</p>

</div>
</div>
<a id="a38f04d1608271656814fbb66e4688a0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38f04d1608271656814fbb66e4688a0b">&#9670;&nbsp;</a></span>isa()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml">CpuIsaInfo</a>&amp; isa </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8h_source.xhtml#l00111">111</a> of file <a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">return</span> _isa;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cpu_info_8cpp_source.xhtml#l00305">CpuInfo::build()</a>.</p>

</div>
</div>
<a id="adbfb368a91028856295df4cdaef94cdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbfb368a91028856295df4cdaef94cdd">&#9670;&nbsp;</a></span>num_cpus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t num_cpus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_info_8cpp_source.xhtml#l00393">393</a> of file <a class="el" href="_cpu_info_8cpp_source.xhtml">CpuInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;{</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keywordflow">return</span> _cpus.size();</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/common/cpuinfo/<a class="el" href="_cpu_info_8h_source.xhtml">CpuInfo.h</a></li>
<li>src/common/cpuinfo/<a class="el" href="_cpu_info_8cpp_source.xhtml">CpuInfo.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_af778cbee81845454fec3eaec33d7ac57"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#af778cbee81845454fec3eaec33d7ac57">arm_compute::cpuinfo::CpuIsaInfo::neon</a></div><div class="ttdeci">bool neon</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00040">CpuIsaInfo.h:40</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_ab0d6c6f4867adf5ce34d1e9e6edde48c"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#ab0d6c6f4867adf5ce34d1e9e6edde48c">arm_compute::cpuinfo::CpuIsaInfo::sme2</a></div><div class="ttdeci">bool sme2</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00044">CpuIsaInfo.h:44</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_aa9a6bf94935dd333e9337fdccc119616"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#aa9a6bf94935dd333e9337fdccc119616">arm_compute::cpuinfo::CpuIsaInfo::dot</a></div><div class="ttdeci">bool dot</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00052">CpuIsaInfo.h:52</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_a2af87cdc1d4cc99aeee94cbefeae7811"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a2af87cdc1d4cc99aeee94cbefeae7811">arm_compute::cpuinfo::CpuIsaInfo::fp16</a></div><div class="ttdeci">bool fp16</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00047">CpuIsaInfo.h:47</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_a786ebd40b02b25fac5d48a4273d8ab44"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a786ebd40b02b25fac5d48a4273d8ab44">arm_compute::cpuinfo::CpuIsaInfo::svef32mm</a></div><div class="ttdeci">bool svef32mm</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00055">CpuIsaInfo.h:55</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpuinfo_1_1_cpu_info_xhtml_ada9426e8aa29745aadf93352e1eb00b5"><div class="ttname"><a href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ada9426e8aa29745aadf93352e1eb00b5">arm_compute::cpuinfo::CpuInfo::cpu_model</a></div><div class="ttdeci">CpuModel cpu_model() const</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_info_8cpp_source.xhtml#l00383">CpuInfo.cpp:383</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpuinfo_1_1_cpu_info_xhtml_aac66bfca0bbdd8554a6011ab2f489d31"><div class="ttname"><a href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#aac66bfca0bbdd8554a6011ab2f489d31">arm_compute::cpuinfo::CpuInfo::cpus</a></div><div class="ttdeci">const std::vector&lt; CpuModel &gt; &amp; cpus() const</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_info_8h_source.xhtml#l00115">CpuInfo.h:115</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_afbdf12e6f5662a3bece45ef6153b6053"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#afbdf12e6f5662a3bece45ef6153b6053">arm_compute::cpuinfo::CpuIsaInfo::i8mm</a></div><div class="ttdeci">bool i8mm</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00053">CpuIsaInfo.h:53</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpuinfo_xhtml_ac48afee48f0c8e4b0e0be117385694d7"><div class="ttname"><a href="namespacearm__compute_1_1cpuinfo.xhtml#ac48afee48f0c8e4b0e0be117385694d7">arm_compute::cpuinfo::midr_to_model</a></div><div class="ttdeci">CpuModel midr_to_model(uint32_t midr)</div><div class="ttdoc">Extract the model type from the MIDR value.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_model_8cpp_source.xhtml#l00080">CpuModel.cpp:80</a></div></div>
<div class="ttc" id="a_cpu_info_8cpp_xhtml_a6f1ae534cac43c2430d66e81bfe4d0f7"><div class="ttname"><a href="_cpu_info_8cpp.xhtml#a6f1ae534cac43c2430d66e81bfe4d0f7">ARM_COMPUTE_CPU_FEATURE_HWCAP_CPUID</a></div><div class="ttdeci">#define ARM_COMPUTE_CPU_FEATURE_HWCAP_CPUID</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_info_8cpp_source.xhtml#l00057">CpuInfo.cpp:57</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_a96ba96d43f2e5fdba2aaf457ef35b0ac"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a96ba96d43f2e5fdba2aaf457ef35b0ac">arm_compute::cpuinfo::CpuIsaInfo::svei8mm</a></div><div class="ttdeci">bool svei8mm</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00054">CpuIsaInfo.h:54</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_a66d030556f884ccd13ab141377a24fab"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a66d030556f884ccd13ab141377a24fab">arm_compute::cpuinfo::CpuIsaInfo::sve2</a></div><div class="ttdeci">bool sve2</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00042">CpuIsaInfo.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpuinfo_1_1_cpu_info_xhtml_ab7d98af1963169ce0ba5e98635271e24"><div class="ttname"><a href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#ab7d98af1963169ce0ba5e98635271e24">arm_compute::cpuinfo::CpuInfo::CpuInfo</a></div><div class="ttdeci">CpuInfo()=default</div><div class="ttdoc">Default constructor.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpuinfo_xhtml_ad40a2cde10e8b5f3e44af23f1e878f1c"><div class="ttname"><a href="namespacearm__compute_1_1cpuinfo.xhtml#ad40a2cde10e8b5f3e44af23f1e878f1c">arm_compute::cpuinfo::init_cpu_isa_from_regs</a></div><div class="ttdeci">CpuIsaInfo init_cpu_isa_from_regs(uint64_t isar0, uint64_t isar1, uint64_t pfr0, uint64_t pfr1, uint64_t svefr0, uint64_t midr)</div><div class="ttdoc">Identify ISA related information through register information.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8cpp_source.xhtml#l00155">CpuIsaInfo.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpuinfo_xhtml_a720e47e8a41ea0be30c84d7b823cda31"><div class="ttname"><a href="namespacearm__compute_1_1cpuinfo.xhtml#a720e47e8a41ea0be30c84d7b823cda31">arm_compute::cpuinfo::CpuModel</a></div><div class="ttdeci">arm_compute::CPUModel CpuModel</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_model_8h_source.xhtml#l00036">CpuModel.h:36</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_a288148f8f6ebc576fe9d86403814cbb1"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a288148f8f6ebc576fe9d86403814cbb1">arm_compute::cpuinfo::CpuIsaInfo::svebf16</a></div><div class="ttdeci">bool svebf16</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00049">CpuIsaInfo.h:49</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_a2aa244536f400a80d97e5bb219e4d6ed"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a2aa244536f400a80d97e5bb219e4d6ed">arm_compute::cpuinfo::CpuIsaInfo::sve</a></div><div class="ttdeci">bool sve</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00041">CpuIsaInfo.h:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpuinfo_1_1_cpu_info_xhtml_a38f04d1608271656814fbb66e4688a0b"><div class="ttname"><a href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a38f04d1608271656814fbb66e4688a0b">arm_compute::cpuinfo::CpuInfo::isa</a></div><div class="ttdeci">const CpuIsaInfo &amp; isa() const</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_info_8h_source.xhtml#l00111">CpuInfo.h:111</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_a7ef417bc021cf9b95932a42716ee9296"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a7ef417bc021cf9b95932a42716ee9296">arm_compute::cpuinfo::CpuIsaInfo::sme</a></div><div class="ttdeci">bool sme</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00043">CpuIsaInfo.h:43</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml_a88092a332a92f8b7fe41627f4bbdda11"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#a88092a332a92f8b7fe41627f4bbdda11">arm_compute::cpuinfo::CpuIsaInfo::bf16</a></div><div class="ttdeci">bool bf16</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00048">CpuIsaInfo.h:48</a></div></div>
<div class="ttc" id="a_cpu_info_8cpp_xhtml_a5596c84a7096be3975643069954aec7d"><div class="ttname"><a href="_cpu_info_8cpp.xhtml#a5596c84a7096be3975643069954aec7d">ARM_COMPUTE_GET_FEATURE_REG</a></div><div class="ttdeci">#define ARM_COMPUTE_GET_FEATURE_REG(var, freg)</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_info_8cpp_source.xhtml#l00058">CpuInfo.cpp:58</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">MLGOParser.cpp:283</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpuinfo_xhtml_a9abbd59830c6b78524e28478b2f78208"><div class="ttname"><a href="namespacearm__compute_1_1cpuinfo.xhtml#a9abbd59830c6b78524e28478b2f78208">arm_compute::cpuinfo::init_cpu_isa_from_hwcaps</a></div><div class="ttdeci">CpuIsaInfo init_cpu_isa_from_hwcaps(uint32_t hwcaps, uint32_t hwcaps2, uint32_t midr)</div><div class="ttdoc">Identify ISA related information through system information.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8cpp_source.xhtml#l00142">CpuIsaInfo.cpp:142</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1cpuinfo.xhtml">cpuinfo</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml">CpuInfo</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:20:12 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
