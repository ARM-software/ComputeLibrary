<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GpuCkwActivation Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GpuCkwActivation Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_gpu_ckw_activation_8h_source.xhtml">GpuCkwActivation.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for GpuCkwActivation:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation__coll__graph.svg" width="206" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a4801f32bd118d1763d6de8010e1118da"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#a4801f32bd118d1763d6de8010e1118da">Attributes</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_activation.xhtml#a0009828fc4786d6d5395cf625a84b7eb">ClComponentActivation::Attributes</a></td></tr>
<tr class="separator:a4801f32bd118d1763d6de8010e1118da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml">IGpuCkwComponentDriver</a></td></tr>
<tr class="memitem:a6cda2a0c50524467fbfba048298303ed inherit pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a></td></tr>
<tr class="separator:a6cda2a0c50524467fbfba048298303ed inherit pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8afa6383b85bc64031673b7b916e7ede"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#a8afa6383b85bc64031673b7b916e7ede">GpuCkwActivation</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#a4801f32bd118d1763d6de8010e1118da">Attributes</a> &amp;attributes)</td></tr>
<tr class="memdesc:a8afa6383b85bc64031673b7b916e7ede"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#a8afa6383b85bc64031673b7b916e7ede">More...</a><br /></td></tr>
<tr class="separator:a8afa6383b85bc64031673b7b916e7ede"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af61e56d7ec7b664adc3dba8cd29d90cc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#af61e56d7ec7b664adc3dba8cd29d90cc">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml">GpuCkwActivation</a>)</td></tr>
<tr class="separator:af61e56d7ec7b664adc3dba8cd29d90cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9f8313e4bd0fdc516e12fdec07761dc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#af9f8313e4bd0fdc516e12fdec07761dc">~GpuCkwActivation</a> () override=default</td></tr>
<tr class="memdesc:af9f8313e4bd0fdc516e12fdec07761dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#af9f8313e4bd0fdc516e12fdec07761dc">More...</a><br /></td></tr>
<tr class="separator:af9f8313e4bd0fdc516e12fdec07761dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac794f053c37af9bdaf61039dbff80cac"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#ac794f053c37af9bdaf61039dbff80cac">write_component_code</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table.xhtml">GpuCkwVariableTable</a> &amp;vtable, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_scoped_kernel_writer.xhtml">GpuCkwScopedKernelWriter</a> writer) const override</td></tr>
<tr class="memdesc:ac794f053c37af9bdaf61039dbff80cac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate kernel component code.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#ac794f053c37af9bdaf61039dbff80cac">More...</a><br /></td></tr>
<tr class="separator:ac794f053c37af9bdaf61039dbff80cac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">get_window</a> () const override</td></tr>
<tr class="memdesc:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the execution window for the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">More...</a><br /></td></tr>
<tr class="separator:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml">IGpuCkwComponentDriver</a></td></tr>
<tr class="memitem:af67e2958735983cf2b86a53c380a231d inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#af67e2958735983cf2b86a53c380a231d">IGpuCkwComponentDriver</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>)</td></tr>
<tr class="memdesc:af67e2958735983cf2b86a53c380a231d inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#af67e2958735983cf2b86a53c380a231d">More...</a><br /></td></tr>
<tr class="separator:af67e2958735983cf2b86a53c380a231d inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9d2bce409c75c96710589810737bb88 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#ad9d2bce409c75c96710589810737bb88">~IGpuCkwComponentDriver</a> ()</td></tr>
<tr class="memdesc:ad9d2bce409c75c96710589810737bb88 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#ad9d2bce409c75c96710589810737bb88">More...</a><br /></td></tr>
<tr class="separator:ad9d2bce409c75c96710589810737bb88 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a> () const</td></tr>
<tr class="memdesc:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get tensor arguments.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">More...</a><br /></td></tr>
<tr class="separator:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad32af139db3c06d1a04898bd1c0bd152 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#ad32af139db3c06d1a04898bd1c0bd152">get_name</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const</td></tr>
<tr class="memdesc:ad32af139db3c06d1a04898bd1c0bd152 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the name of the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#ad32af139db3c06d1a04898bd1c0bd152">More...</a><br /></td></tr>
<tr class="separator:ad32af139db3c06d1a04898bd1c0bd152 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c754e22417f5d6afc5eafe85f84484b inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a5c754e22417f5d6afc5eafe85f84484b">get_tuner_id</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const</td></tr>
<tr class="memdesc:a5c754e22417f5d6afc5eafe85f84484b inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the tuner id of the component This id should capture all the parameters that distinguish one kernel's lws tuning from another.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a5c754e22417f5d6afc5eafe85f84484b">More...</a><br /></td></tr>
<tr class="separator:a5c754e22417f5d6afc5eafe85f84484b inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a> () const</td></tr>
<tr class="memdesc:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get component id.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">More...</a><br /></td></tr>
<tr class="separator:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_gpu_ckw_activation_8h_source.xhtml#l00037">37</a> of file <a class="el" href="_gpu_ckw_activation_8h_source.xhtml">GpuCkwActivation.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a4801f32bd118d1763d6de8010e1118da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4801f32bd118d1763d6de8010e1118da">&#9670;&nbsp;</a></span>Attributes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#a4801f32bd118d1763d6de8010e1118da">Attributes</a> =  <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_activation.xhtml#a0009828fc4786d6d5395cf625a84b7eb">ClComponentActivation::Attributes</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gpu_ckw_activation_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_gpu_ckw_activation_8h_source.xhtml">GpuCkwActivation.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8afa6383b85bc64031673b7b916e7ede"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8afa6383b85bc64031673b7b916e7ede">&#9670;&nbsp;</a></span>GpuCkwActivation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml">GpuCkwActivation</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>tensors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml#a4801f32bd118d1763d6de8010e1118da">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attributes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>For supported configurations please refer to <a class="el" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">GpuCkwActivation::validate()</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>Component id </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> arguments to the component </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">attributes</td><td>Component attributes </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_gpu_ckw_activation_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="_gpu_ckw_activation_8cpp_source.xhtml">GpuCkwActivation.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    : <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#af67e2958735983cf2b86a53c380a231d">IGpuCkwComponentDriver</a>{<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>}, _src{}, _dst{}, _attributes{attributes}</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    _src = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    _dst = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">TensorType::ACL_DST_0</a>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_src, _dst);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00127">IGpuCkwComponentDriver::id()</a>, and <a class="el" href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00096">IGpuCkwComponentDriver::tensors()</a>.</p>

</div>
</div>
<a id="af9f8313e4bd0fdc516e12fdec07761dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9f8313e4bd0fdc516e12fdec07761dc">&#9670;&nbsp;</a></span>~GpuCkwActivation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml">GpuCkwActivation</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af61e56d7ec7b664adc3dba8cd29d90cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af61e56d7ec7b664adc3dba8cd29d90cc">&#9670;&nbsp;</a></span>ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml">GpuCkwActivation</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae744fb5fb66aa1ce9db14ba93eab24e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae744fb5fb66aa1ce9db14ba93eab24e3">&#9670;&nbsp;</a></span>get_window()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> get_window </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the execution window for the component. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a66df3fbb8781a4dfa011885356e1495f">IGpuCkwComponentDriver</a>.</p>

<p class="definition">Definition at line <a class="el" href="_gpu_ckw_activation_8cpp_source.xhtml#l00177">177</a> of file <a class="el" href="_gpu_ckw_activation_8cpp_source.xhtml">GpuCkwActivation.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;{</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>().<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">total_size</a>() == 0U, <span class="stringliteral">&quot;Destination tensor is not initialized&quot;</span>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a> = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>();</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="comment">// Collapse Dim 1 (W) and Dim 2 (H) together, leave Dim 0 (C) unchanged</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="comment">// This is in line with the collapsing convention used by operators like Conv2d</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a8e15e87871211f98c2b566137e38ef99">collapse</a>(2U, 1U);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a229f7c437acf59940c4723fce78c6d5c">vector_size_byte_opencl</a> = 16;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>     <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a> =</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a229f7c437acf59940c4723fce78c6d5c">vector_size_byte_opencl</a> / _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a>(), _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0));</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    Window win = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>, Steps(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>));</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span> win;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_adjust_vec_size_8h_source.xhtml#l00038">arm_compute::adjust_vec_size()</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_window_helpers_8cpp_source.xhtml#l00029">arm_compute::calculate_max_window()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00136">TensorShape::collapse()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">ITensorInfo::element_size()</a>, <a class="el" href="_cl_im2_col_kernel_8cpp_source.xhtml#l00060">num_elems_processed_per_iteration</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00469">arm_compute::test::validation::output_shape</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00175">TensorShape::total_size()</a>, <a class="el" href="_saturate_cast_8h_source.xhtml#l00065">arm_compute::utils::cast::U</a>, and <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00041">arm_compute::experimental::dynamic_fusion::vector_size_byte_opencl</a>.</p>

</div>
</div>
<a id="ac794f053c37af9bdaf61039dbff80cac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac794f053c37af9bdaf61039dbff80cac">&#9670;&nbsp;</a></span>write_component_code()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void write_component_code </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table.xhtml">GpuCkwVariableTable</a> &amp;&#160;</td>
          <td class="paramname"><em>vtable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_scoped_kernel_writer.xhtml">GpuCkwScopedKernelWriter</a>&#160;</td>
          <td class="paramname"><em>writer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate kernel component code. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">vtable</td><td>Table of variables declared by each component </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">writer</td><td>CKW writer that writes code scoped to this kernel component. <pre class="fragment">                       @note @p writer can only be passed via value since the new scope is created in the copy constructor
</pre> </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#aa0f315fcb0831da70e746870f0679c5f">IGpuCkwComponentDriver</a>.</p>

<p class="definition">Definition at line <a class="el" href="_gpu_ckw_activation_8cpp_source.xhtml#l00099">99</a> of file <a class="el" href="_gpu_ckw_activation_8cpp_source.xhtml">GpuCkwActivation.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>         root_window = comp_group.get_root_component()-&gt;ckw_component_driver()-&gt;get_window();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n0          = root_window.x().step();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m0          = root_window.y().step();</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    GpuCkwComponentArgument *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a> =</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        vtable.declare_variable(comp_group, writer, _src, TensorStorageType::ClBufferUint8Ptr, <span class="stringliteral">&quot;src&quot;</span>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    GpuCkwComponentArgument *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> =</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        vtable.declare_variable(comp_group, writer, _dst, TensorStorageType::ClBufferUint8Ptr, <span class="stringliteral">&quot;dst&quot;</span>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aec993a62b6886508bee9f49673c9c4d6">load_src_dst_tiles_and_prepare_sampler</a>(writer, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, m0, n0, create_sampler);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">auto</span> &amp;src_tile = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tile();</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">auto</span> &amp;dst_tile = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;tile();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// Constants</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;constant_minus_1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;minus_1&quot;</span>, -1);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;constant_pos_1   = writer-&gt;declare_tile(<span class="stringliteral">&quot;one&quot;</span>, 1);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;constant_zero    = writer-&gt;declare_tile(<span class="stringliteral">&quot;zero&quot;</span>, 0);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;constant_A       = writer-&gt;declare_tile(<span class="stringliteral">&quot;A_VAL&quot;</span>, _attributes.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>());</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;constant_B       = writer-&gt;declare_tile(<span class="stringliteral">&quot;B_VAL&quot;</span>, _attributes.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>());</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">// Perform the operation.</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">switch</span> (_attributes.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>())</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">case</span> ActivationLayerInfo::ActivationFunction::LOGISTIC:</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="comment">// dst = src * -1</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            writer-&gt;op_binary_expression(dst_tile, src_tile, BinaryOp::Mul, constant_minus_1);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="comment">// dst = exp(src * -1)</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            writer-&gt;op_unary_elementwise_function(dst_tile, UnaryFunction::Exp, dst_tile);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="comment">// dst = 1 + (exp(src * -1))</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            writer-&gt;op_binary_expression(dst_tile, dst_tile, BinaryOp::Add, constant_pos_1);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="comment">// dst = 1 /  1 + (exp(src * -1))</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            writer-&gt;op_binary_expression(dst_tile, constant_pos_1, BinaryOp::Div, dst_tile);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">case</span> ActivationLayerInfo::ActivationFunction::TANH:</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="comment">// dst = B_VAL * src</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            writer-&gt;op_binary_expression(dst_tile, src_tile, BinaryOp::Mul, constant_B);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="comment">// dst = tanh(B_VAL * src)</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            writer-&gt;op_unary_elementwise_function(dst_tile, UnaryFunction::Tanh, dst_tile);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="comment">// dst = A_VAL * tanh(B_VAL * src)</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            writer-&gt;op_binary_expression(dst_tile, dst_tile, BinaryOp::Mul, constant_A);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">case</span> ActivationLayerInfo::ActivationFunction::RELU:</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="comment">// dst = max(src, 0)</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            writer-&gt;op_binary_elementwise_function(dst_tile, ckw::BinaryFunction::Max, src_tile, constant_zero);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">case</span> ActivationLayerInfo::ActivationFunction::BOUNDED_RELU:</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <span class="comment">//dst = max(src, 0)</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            writer-&gt;op_binary_elementwise_function(dst_tile, ckw::BinaryFunction::Max, src_tile, constant_zero);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="comment">//dst = min(max(src, 0), A_VAL)</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            writer-&gt;op_binary_elementwise_function(dst_tile, ckw::BinaryFunction::Min, dst_tile, constant_A);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">case</span> ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU:</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="comment">//dst = max(src, B_VAL)</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            writer-&gt;op_binary_elementwise_function(dst_tile, ckw::BinaryFunction::Max, src_tile, constant_B);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="comment">//dst = min(max(src, B_VAL), A_VAL)</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            writer-&gt;op_binary_elementwise_function(dst_tile, ckw::BinaryFunction::Min, dst_tile, constant_A);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            CKW_ASSERT(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_activation_layer_info_8h_source.xhtml#l00089">ActivationLayerInfo::a()</a>, <a class="el" href="_activation_layer_info_8h_source.xhtml#l00084">ActivationLayerInfo::activation()</a>, <a class="el" href="_activation_layer_info_8h_source.xhtml#l00094">ActivationLayerInfo::b()</a>, <a class="el" href="_i_gpu_kernel_component_8h_source.xhtml#l00107">IGpuKernelComponent::ckw_component_driver()</a>, <a class="el" href="_gpu_ckw_variable_table_8cpp_source.xhtml#l00040">GpuCkwVariableTable::declare_variable()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_gpu_kernel_component_group_8cpp_source.xhtml#l00304">GpuKernelComponentGroup::get_root_component()</a>, <a class="el" href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00101">IGpuCkwComponentDriver::get_window()</a>, <a class="el" href="_writer_helper_8h_source.xhtml#l00048">arm_compute::experimental::dynamic_fusion::load_src_dst_tiles_and_prepare_sampler()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, <a class="el" href="_window_8h_source.xhtml#l00106">Window::Dimension::step()</a>, and <a class="el" href="_window_8h_source.xhtml#l00158">Window::x()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/dynamic_fusion/sketch/gpu/ckw_driver/components/<a class="el" href="_gpu_ckw_activation_8h_source.xhtml">GpuCkwActivation.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/ckw_driver/components/<a class="el" href="_gpu_ckw_activation_8cpp_source.xhtml">GpuCkwActivation.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a229f7c437acf59940c4723fce78c6d5c"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a229f7c437acf59940c4723fce78c6d5c">arm_compute::experimental::dynamic_fusion::vector_size_byte_opencl</a></div><div class="ttdeci">constexpr unsigned int vector_size_byte_opencl</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00041">ClTemplateElementwiseBinary.cpp:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00029">WindowHelpers.cpp:29</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aaae4098f0f54b97f23d99be335c459ad"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">TensorShape output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00469">LSTMLayerQuantized.cpp:469</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aec993a62b6886508bee9f49673c9c4d6"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aec993a62b6886508bee9f49673c9c4d6">arm_compute::experimental::dynamic_fusion::load_src_dst_tiles_and_prepare_sampler</a></div><div class="ttdeci">void load_src_dst_tiles_and_prepare_sampler(GpuCkwScopedKernelWriter &amp;writer, GpuCkwComponentArgument *src, GpuCkwComponentArgument *dst, int32_t m0, int32_t n0, SamplerCreator create_sampler)</div><div class="ttdoc">Load src and dst tiles of dimension [m0, n0] only when not loaded and prepare the sampler.</div><div class="ttdef"><b>Definition:</b> <a href="_writer_helper_8h_source.xhtml#l00048">WriterHelper.h:48</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_aa459796b5489eca8a9160cb5dcf1a103"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">arm_compute::ITensorInfo::element_size</a></div><div class="ttdeci">virtual size_t element_size() const =0</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels()</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_a9e0fb1d1462557f28966ae19988532c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">arm_compute::ActivationLayerInfo::activation</a></div><div class="ttdeci">ActivationFunction activation() const</div><div class="ttdoc">Get the type of activation function.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00084">ActivationLayerInfo.h:84</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver_xhtml_a2b1fb10e2eeb3bcea23a8bd60296ca7c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">arm_compute::experimental::dynamic_fusion::IGpuCkwComponentDriver::id</a></div><div class="ttdeci">ComponentId id() const</div><div class="ttdoc">Get component id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00127">IGpuCkwComponentDriver.h:127</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdeci">@ ACL_DST_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_a0fdcb923dfd4c74858cc2bc326321efb"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">arm_compute::TensorShape::total_size</a></div><div class="ttdeci">size_t total_size() const</div><div class="ttdoc">Collapses all dimensions to a single linear total size.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00175">TensorShape.h:175</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver_xhtml_af67e2958735983cf2b86a53c380a231d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#af67e2958735983cf2b86a53c380a231d">arm_compute::experimental::dynamic_fusion::IGpuCkwComponentDriver::IGpuCkwComponentDriver</a></div><div class="ttdeci">IGpuCkwComponentDriver(ComponentId id, const ArgumentPack&lt; ITensorInfo &gt; &amp;tensors)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00077">IGpuCkwComponentDriver.h:77</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_aec65e090c2276e8c8f8dffb6e3edd178"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">arm_compute::ActivationLayerInfo::a</a></div><div class="ttdeci">float a() const</div><div class="ttdoc">Get the alpha value.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00089">ActivationLayerInfo.h:89</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a7be62dcb9603165af78bca6f2ca8ec15"><div class="ttname"><a href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">arm_compute::adjust_vec_size</a></div><div class="ttdeci">unsigned int adjust_vec_size(unsigned int vec_size, size_t dim0)</div><div class="ttdoc">Returns the adjusted vector size in case it is less than the input's first dimension,...</div><div class="ttdef"><b>Definition:</b> <a href="_adjust_vec_size_8h_source.xhtml#l00038">AdjustVecSize.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver_xhtml_a6c87c6e19567bc42bc52d166728c4461"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">arm_compute::experimental::dynamic_fusion::IGpuCkwComponentDriver::tensors</a></div><div class="ttdeci">ArgumentPack&lt; ITensorInfo &gt; tensors() const</div><div class="ttdoc">Get tensor arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00096">IGpuCkwComponentDriver.h:96</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_a02a00a5d20986f3a7ab72b9c86be3a54"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">arm_compute::ActivationLayerInfo::b</a></div><div class="ttdeci">float b() const</div><div class="ttdoc">Get the beta value.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00094">ActivationLayerInfo.h:94</a></div></div>
<div class="ttc" id="a_cl_im2_col_kernel_8cpp_xhtml_a4e45c1f5e4280813a78a77dda71d8799"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a></div><div class="ttdeci">unsigned int num_elems_processed_per_iteration</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00060">ClIm2ColKernel.cpp:60</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_a8e15e87871211f98c2b566137e38ef99"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a8e15e87871211f98c2b566137e38ef99">arm_compute::TensorShape::collapse</a></div><div class="ttdeci">void collapse(size_t n, size_t first=0)</div><div class="ttdoc">Collapse the first n dimensions.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00136">TensorShape.h:136</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml">GpuCkwActivation</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:20:12 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
