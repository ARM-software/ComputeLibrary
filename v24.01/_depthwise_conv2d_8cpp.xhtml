<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/dynamic_fusion/gpu/cl/DepthwiseConv2d.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_depthwise_conv2d_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">DepthwiseConv2d.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_gpu_depthwise_conv2d_8h_source.xhtml">arm_compute/dynamic_fusion/sketch/gpu/operators/GpuDepthwiseConv2d.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/DepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/DilatedDepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_fixture_8h_source.xhtml">tests/framework/Fixture.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/dynamic_fusion/gpu/cl/DepthwiseConv2dFixture.h&quot;</code><br />
</div>
<p><a href="_depthwise_conv2d_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a002f2e36f3c0a4506db3c660b5f8ba26"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a002f2e36f3c0a4506db3c660b5f8ba26"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a002f2e36f3c0a4506db3c660b5f8ba26">DynamicFusionGpuDepthwiseConv2dFixture</a> = DynamicFusionGpuDepthwiseConv2dValidationFixture&lt; CLTensor, CLAccessor, GpuDepthwiseConv2d, T &gt;</td></tr>
<tr class="separator:a002f2e36f3c0a4506db3c660b5f8ba26"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aac9a34c5fbd2262627088a38695ee31e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac9a34c5fbd2262627088a38695ee31e">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(2U, 27U, 13U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(3U, 27U, 13U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 27U, 13U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 27U, 13U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 27U, 13U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(8U, 27U, 13U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(8U, 27U, 13U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::QASYMM8, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::QASYMM8_SIGNED, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::QSYMM16, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::QSYMM8, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::QSYMM8_PER_CHANNEL, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::QASYMM16, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::U8, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::S8, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::U16, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::S16, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::U32, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(32U, 13U, 8U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(8U, 32U, 13U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(8U, 32U, 13U, 4U), 1, DataType::F32, DataLayout::NHWC), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(2U, 3U, 3U, 2U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(2U, 3U, 3U, 2U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 3U, 3U, 2U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 3U, 3U, 2U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 3U, 3U, 2U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(16U, 3U, 3U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(16U, 3U, 3U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::QASYMM8, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::QASYMM8_SIGNED, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::QSYMM16, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::QSYMM8, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::QSYMM8_PER_CHANNEL, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::QASYMM16, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::U8, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::S8, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::U16, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::S16, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::U32, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U, 5U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(24U, 3U, 3U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(24U, 4U, 3U), 1, DataType::F32, DataLayout::NHWC), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(16U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(16U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::S32, DataLayout::NCHW), TensorInfo(TensorShape(24U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(24U), 1, DataType::F32, DataLayout::NHWC), })), framework::dataset::make(&quot;Padding&quot;, { Padding2D(0, 0, 0, 0), Padding2D(0, 0, 0, 0), Padding2D(0, 0, 0, 0), Padding2D(0, 0, 0, 0), Padding2D(0, 0, 0, 0), Padding2D(0, 0, 0, 0), Padding2D(0, 0, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(1, 1, 0, 0), Padding2D(2, 1, 2, 1), Padding2D(2, 1, 2, 1), Padding2D(2, 1, 2, 1), })), framework::dataset::make(&quot;Stride&quot;, { Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(1, 1), Size2D(2, 3), Size2D(2, 3), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 3U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, true, true, true })), input_info, weights_info, biases_info, padding, stride, depth_multiplier, dilation, expected)</td></tr>
<tr class="separator:aac9a34c5fbd2262627088a38695ee31e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae19fa224c6815b831404c877f1052f30"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae19fa224c6815b831404c877f1052f30">FIXTURE_DATA_TEST_CASE</a> (RunSmall, DynamicFusionGpuDepthwiseConv2dFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)))</td></tr>
<tr class="separator:ae19fa224c6815b831404c877f1052f30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62efc9519b7cb0a858df6e8c5f80bbc2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62efc9519b7cb0a858df6e8c5f80bbc2">FIXTURE_DATA_TEST_CASE</a> (RunLarge, DynamicFusionGpuDepthwiseConv2dFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)))</td></tr>
<tr class="separator:a62efc9519b7cb0a858df6e8c5f80bbc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b1385f7891a9790f622954fe3fd1dbc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b1385f7891a9790f622954fe3fd1dbc">FIXTURE_DATA_TEST_CASE</a> (RunSmall, DynamicFusionGpuDepthwiseConv2dFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a3b1385f7891a9790f622954fe3fd1dbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa546199a66aa7a0c89a7415d586799d4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa546199a66aa7a0c89a7415d586799d4">FIXTURE_DATA_TEST_CASE</a> (RunLarge, DynamicFusionGpuDepthwiseConv2dFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:aa546199a66aa7a0c89a7415d586799d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadb2c1922575ce563391f0d9af7b1b9d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aadb2c1922575ce563391f0d9af7b1b9d">combine</a> (combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:aadb2c1922575ce563391f0d9af7b1b9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58e0bb6105114023498c03b1e1b21df3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a58e0bb6105114023498c03b1e1b21df3">FIXTURE_DATA_TEST_CASE</a> (RunLarge, DynamicFusionGpuDepthwiseConv2dFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a58e0bb6105114023498c03b1e1b21df3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c15365f6b30961c0c6b45003ac9cfc3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7c15365f6b30961c0c6b45003ac9cfc3">FIXTURE_DATA_TEST_CASE</a> (RunSmall, DynamicFusionGpuDepthwiseConv2dFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a7c15365f6b30961c0c6b45003ac9cfc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6fc98ca1fc9b34028eb0099c94a40bf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa6fc98ca1fc9b34028eb0099c94a40bf">FIXTURE_DATA_TEST_CASE</a> (RunLarge, DynamicFusionGpuDepthwiseConv2dFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:aa6fc98ca1fc9b34028eb0099c94a40bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6bd88f9e6eb49c611a1e38acdbd2ced"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad6bd88f9e6eb49c611a1e38acdbd2ced">combine</a> (combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)))</td></tr>
<tr class="separator:ad6bd88f9e6eb49c611a1e38acdbd2ced"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57a33a3133a80da7def33b465f071621"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a57a33a3133a80da7def33b465f071621">FIXTURE_DATA_TEST_CASE</a> (RunLarge, DynamicFusionGpuDepthwiseConv2dFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)))</td></tr>
<tr class="separator:a57a33a3133a80da7def33b465f071621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f8a83f543e30f70fa023b11e925b5bd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9f8a83f543e30f70fa023b11e925b5bd">FIXTURE_DATA_TEST_CASE</a> (RunSmall, DynamicFusionGpuDepthwiseConv2dFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)))</td></tr>
<tr class="separator:a9f8a83f543e30f70fa023b11e925b5bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0dade23e0065c88d6680bfb7a8d6bcf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa0dade23e0065c88d6680bfb7a8d6bcf">FIXTURE_DATA_TEST_CASE</a> (RunLarge, DynamicFusionGpuDepthwiseConv2dFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)))</td></tr>
<tr class="separator:aa0dade23e0065c88d6680bfb7a8d6bcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c083bcb5cfaa46b849a99a7602d1ec9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9c083bcb5cfaa46b849a99a7602d1ec9">combine</a> (combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a9c083bcb5cfaa46b849a99a7602d1ec9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5734b85a88ad4ebfe66d0961de97573"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad5734b85a88ad4ebfe66d0961de97573">FIXTURE_DATA_TEST_CASE</a> (RunLarge, DynamicFusionGpuDepthwiseConv2dFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:ad5734b85a88ad4ebfe66d0961de97573"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5ddc068f3ce993ed4b3636f39111800"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae5ddc068f3ce993ed4b3636f39111800">FIXTURE_DATA_TEST_CASE</a> (RunLargeKernelSize, DynamicFusionGpuDepthwiseConv2dFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(datasets::LargeKernelSizeDepthwiseConvolutionLayerNHWCDataset(), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1 })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:ae5ddc068f3ce993ed4b3636f39111800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27d3ca00d7a6e589f1338c1df4e335fb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a27d3ca00d7a6e589f1338c1df4e335fb">FIXTURE_DATA_TEST_CASE</a> (RunSmall, DynamicFusionGpuDepthwiseConv2dFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a27d3ca00d7a6e589f1338c1df4e335fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa60e6d4c06cb6d66c29d629ad655492d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa60e6d4c06cb6d66c29d629ad655492d">FIXTURE_DATA_TEST_CASE</a> (RunLarge, DynamicFusionGpuDepthwiseConv2dFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:aa60e6d4c06cb6d66c29d629ad655492d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a8f2ae1c240039ef8219b7b4a7b665c2d"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8f2ae1c240039ef8219b7b4a7b665c2d">depth_multipliers</a> = framework::dataset::make(&quot;DepthMultiplier&quot;, { 1U, 4U })</td></tr>
<tr class="separator:a8f2ae1c240039ef8219b7b4a7b665c2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf31ad64cf569df25b79cb412d3edf82"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abf31ad64cf569df25b79cb412d3edf82">large_depth_multipliers</a> = framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 2, 5, 8 })</td></tr>
<tr class="separator:abf31ad64cf569df25b79cb412d3edf82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abff212e63cf6eb9337d2daa426922349"><td class="memItemLeft" align="right" valign="top">RelativeTolerance&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abff212e63cf6eb9337d2daa426922349">tolerance_f32</a> (0.01f)</td></tr>
<tr class="memdesc:abff212e63cf6eb9337d2daa426922349"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tolerance value for comparing reference's output against implementation's output for <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda" title="32-bit floating-point number">DataType::F32</a>.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#abff212e63cf6eb9337d2daa426922349">More...</a><br /></td></tr>
<tr class="separator:abff212e63cf6eb9337d2daa426922349"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad43f657d7b1e337c580b385de8be92c4"><td class="memItemLeft" align="right" valign="top">RelativeTolerance&lt; half_float::half &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad43f657d7b1e337c580b385de8be92c4">tolerance_f16</a> (half_float::half(0.1))</td></tr>
<tr class="memdesc:ad43f657d7b1e337c580b385de8be92c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tolerance value for comparing reference's output against implementation's output for <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94" title="16-bit floating-point number">DataType::F16</a>.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad43f657d7b1e337c580b385de8be92c4">More...</a><br /></td></tr>
<tr class="separator:ad43f657d7b1e337c580b385de8be92c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64f5ee735734200cc86e009b409b0863"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64f5ee735734200cc86e009b409b0863">DynamicFusionGpuDepthwiseConv2dFixture&lt; half &gt;</a></td></tr>
<tr class="separator:a64f5ee735734200cc86e009b409b0863"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a260dd273c9ba15ce1e779c5161468fc0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a260dd273c9ba15ce1e779c5161468fc0">DynamicFusionGpuDepthwiseConv2dFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a260dd273c9ba15ce1e779c5161468fc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_d178b4fe845b8ce36c704432820c8c40.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_36525c4f440e1302e710dd3570052bdf.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_ef4bb624515ce47a3740619c2af5550d.xhtml">cl</a></li><li class="navelem"><a class="el" href="_depthwise_conv2d_8cpp.xhtml">DepthwiseConv2d.cpp</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:20:07 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
