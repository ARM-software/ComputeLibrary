<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/DepthwiseConvolutionLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_2_depthwise_convolution_layer_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">DepthwiseConvolutionLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_depthwise_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLDepthwiseConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/DepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/DilatedDepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/DepthwiseConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_depthwise_convolution_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ae133c0063d4112703d30b7f7ae485fce"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ae133c0063d4112703d30b7f7ae485fce"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae133c0063d4112703d30b7f7ae485fce">CLDepthwiseConvolutionLayerFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T &gt;</td></tr>
<tr class="separator:ae133c0063d4112703d30b7f7ae485fce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a93d42669d83d522e80a6ed5faf4435"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a4a93d42669d83d522e80a6ed5faf4435"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4a93d42669d83d522e80a6ed5faf4435">CLDepthwiseConvolutionLayerMixedDataLayoutFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:a4a93d42669d83d522e80a6ed5faf4435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a089070ec30b2f51d897a51fc2c28fa7f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a089070ec30b2f51d897a51fc2c28fa7f"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a089070ec30b2f51d897a51fc2c28fa7f">CLDepthwiseConvolutionLayerInPlaceFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T, false, true &gt;</td></tr>
<tr class="separator:a089070ec30b2f51d897a51fc2c28fa7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ad2df3fbb6f130a192a8ef12eb32cde"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a7ad2df3fbb6f130a192a8ef12eb32cde"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7ad2df3fbb6f130a192a8ef12eb32cde">CLDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture</a> = DepthwiseConvolutionLayerValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:a7ad2df3fbb6f130a192a8ef12eb32cde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff8ac2db6fee50706a654768d9f85a7"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9ff8ac2db6fee50706a654768d9f85a7"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9ff8ac2db6fee50706a654768d9f85a7">CLDepthwiseConvolutionLayerQuantizedPerChannelFixture</a> = DepthwiseConvolutionLayerValidationQuantizedPerChannelFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T, int8_t &gt;</td></tr>
<tr class="separator:a9ff8ac2db6fee50706a654768d9f85a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a6226901ebb39634fb45f67f3fb8f63c5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6226901ebb39634fb45f67f3fb8f63c5">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 8U), 1, DataType::QASYMM8), }), make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8), }), make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(24U), 1, DataType::S32), }), make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 11U, 24U), 1, DataType::QASYMM8), }), make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 0), }), make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, }), make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(20U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), }), make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, true, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)</td></tr>
<tr class="separator:a6226901ebb39634fb45f67f3fb8f63c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab54cb27fcbd3807d52b7d7d18e42edbe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab54cb27fcbd3807d52b7d7d18e42edbe">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), datasets::SmallDepthwiseConvolutionLayerDataset3x3NCHW()), depth_multipliers, make(&quot;DataType&quot;, DataType::F16), make(&quot;DataLayout&quot;, DataLayout::NCHW), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:ab54cb27fcbd3807d52b7d7d18e42edbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b812d2396084e2fe495040583c6f7a9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1b812d2396084e2fe495040583c6f7a9">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers, make(&quot;DataType&quot;, DataType::F16), make(&quot;DataLayout&quot;, { DataLayout::NCHW }), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a1b812d2396084e2fe495040583c6f7a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae6f343eb3be6feb50f04b0a00720320"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aae6f343eb3be6feb50f04b0a00720320">combine</a> (datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers, make(&quot;DataType&quot;, DataType::F16), make(&quot;DataLayout&quot;, DataLayout::NHWC), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:aae6f343eb3be6feb50f04b0a00720320"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9799f216fd75b3c6c77a9c01ccd45015"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9799f216fd75b3c6c77a9c01ccd45015">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3Fp16Subset(), large_depth_multipliers, make(&quot;DataType&quot;, DataType::F16), make(&quot;DataLayout&quot;, DataLayout::NHWC), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a9799f216fd75b3c6c77a9c01ccd45015"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05514cdb278c2b88394f92db785c7cc5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a05514cdb278c2b88394f92db785c7cc5">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::F16)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a05514cdb278c2b88394f92db785c7cc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c7d6a067eac1af1c4f51acc15129a3e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c7d6a067eac1af1c4f51acc15129a3e">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3Fp16Subset(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F16)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a3c7d6a067eac1af1c4f51acc15129a3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6aaa337a9460846798da88fdb05aafd3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6aaa337a9460846798da88fdb05aafd3">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::F16)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a6aaa337a9460846798da88fdb05aafd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cd6c052c02131f7c6e9118c9a2803f0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cd6c052c02131f7c6e9118c9a2803f0">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDatasetFp16Subset(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F16)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a6cd6c052c02131f7c6e9118c9a2803f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4157a247a6284e633a28f05d07a7f23"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac4157a247a6284e633a28f05d07a7f23">FIXTURE_DATA_TEST_CASE_NEW</a> (RunActivations, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(make(&quot;In&quot;, TensorShape(33U, 27U, 11U, 3U)), make(&quot;Weights&quot;, Size2D(3U, 4U)), make(&quot;Info&quot;, PadStrideInfo(1, 2, 0, 1)), make(&quot;Dilation&quot;, Size2D(2U, 2U)), make(&quot;DepthMultiplier&quot;, { 2 }), make(&quot;DataType&quot;, DataType::F16), make(&quot;DataLayout&quot;, { DataLayout::NHWC }), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac4157a247a6284e633a28f05d07a7f23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6b891de80e0e93ae26b863f85745047"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac6b891de80e0e93ae26b863f85745047">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::F16)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:ac6b891de80e0e93ae26b863f85745047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9482a8331e43ea912c1465c00ddb149"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af9482a8331e43ea912c1465c00ddb149">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDatasetFp16Subset(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F16)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:af9482a8331e43ea912c1465c00ddb149"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92f4ed2d29187e92faaa60f3f35629b1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a92f4ed2d29187e92faaa60f3f35629b1">combine</a> (combine(combine(combine(datasets::SmallInPlaceDepthwiseConvolutionLayerDataset(), make(&quot;DepthMultiplier&quot;, { 1 })), make(&quot;DataType&quot;, DataType::F16)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a92f4ed2d29187e92faaa60f3f35629b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0f1f84037c4b55795cc984b99fadce8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac0f1f84037c4b55795cc984b99fadce8">combine</a> (combine(combine(combine(framework::dataset::concat(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), datasets::SmallDepthwiseConvolutionLayerDataset3x3NCHW()), depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:ac0f1f84037c4b55795cc984b99fadce8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f7000d19729a22543d4588ada1f269a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6f7000d19729a22543d4588ada1f269a">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a6f7000d19729a22543d4588ada1f269a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04ae2be99e5b98a5f2381ad935f55f1d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a04ae2be99e5b98a5f2381ad935f55f1d">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a04ae2be99e5b98a5f2381ad935f55f1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac50e2f2f585926a290a4880f60f6ce46"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac50e2f2f585926a290a4880f60f6ce46">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout, CLDepthwiseConvolutionLayerMixedDataLayoutFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, { 2 })), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, DataLayout::NHWC)), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:ac50e2f2f585926a290a4880f60f6ce46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05e68e92699c351c6c241655dd6de360"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a05e68e92699c351c6c241655dd6de360">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, DataLayout::NHWC)), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a05e68e92699c351c6c241655dd6de360"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a474e9ed07468cdce9cc6ea9b2c9bb5b7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a474e9ed07468cdce9cc6ea9b2c9bb5b7">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a474e9ed07468cdce9cc6ea9b2c9bb5b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77b7308e6545bd7618cefe9369678b2f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a77b7308e6545bd7618cefe9369678b2f">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, DataLayout::NHWC)), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a77b7308e6545bd7618cefe9369678b2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820352630c76ed6ae13553531f017201"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a820352630c76ed6ae13553531f017201">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a820352630c76ed6ae13553531f017201"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41607039b84a9079b14f65d01340cb22"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a41607039b84a9079b14f65d01340cb22">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a41607039b84a9079b14f65d01340cb22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf4bb403cbd743fa2c41cfd0d49f575b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf4bb403cbd743fa2c41cfd0d49f575b">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLargeKernelSize, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::LargeKernelSizeDepthwiseConvolutionLayerNHWCDataset(), make(&quot;DepthMultiplier&quot;, { 1 })), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:adf4bb403cbd743fa2c41cfd0d49f575b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a315ba2bc6db6da4e8fa2d75ce100154b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a315ba2bc6db6da4e8fa2d75ce100154b">FIXTURE_DATA_TEST_CASE_NEW</a> (RunActivations, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(make(&quot;In&quot;, TensorShape(33U, 27U, 11U, 3U)), make(&quot;Weights&quot;, Size2D(3U, 4U)), make(&quot;Info&quot;, PadStrideInfo(1, 2, 0, 1)), make(&quot;Dilation&quot;, Size2D(2U, 2U)), make(&quot;DepthMultiplier&quot;, { 2 }), make(&quot;DataType&quot;, DataType::F32), make(&quot;DataLayout&quot;, { DataLayout::NHWC }), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a315ba2bc6db6da4e8fa2d75ce100154b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99c4967d82495694d90b278e816f1345"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a99c4967d82495694d90b278e816f1345">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a99c4967d82495694d90b278e816f1345"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac787449945c2497c416397d2f5321684"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac787449945c2497c416397d2f5321684">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:ac787449945c2497c416397d2f5321684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb6d6b07aeced1b066b17c5bc958c708"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adb6d6b07aeced1b066b17c5bc958c708">combine</a> (combine(combine(combine(datasets::SmallInPlaceDepthwiseConvolutionLayerDataset(), make(&quot;DepthMultiplier&quot;, { 1 })), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:adb6d6b07aeced1b066b17c5bc958c708"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92b83b40dcaf7b6c7d353be042c95201"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a92b83b40dcaf7b6c7d353be042c95201">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 128), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(1.f, 128) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a92b83b40dcaf7b6c7d353be042c95201"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a651bec3df2d38c8ddbc3e6660f873997"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a651bec3df2d38c8ddbc3e6660f873997">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.7f, 2) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a651bec3df2d38c8ddbc3e6660f873997"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b8af10656b92bb8eea393ceb6301816"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b8af10656b92bb8eea393ceb6301816">FIXTURE_DATA_TEST_CASE_NEW</a> (RunActivations, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(make(&quot;In&quot;, TensorShape(33U, 27U, 11U, 3U)), make(&quot;Weights&quot;, Size2D(3U, 4U)), make(&quot;Info&quot;, PadStrideInfo(1, 2, 0, 1)), make(&quot;Dilation&quot;, Size2D(2U, 2U)), make(&quot;DepthMultiplier&quot;, { 2U }), make(&quot;DataType&quot;, DataType::QASYMM8), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(2.2f, 10) }), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.1f, 128) }), make(&quot;DataLayout&quot;, { DataLayout::NHWC }), ActivationFunctionsQuantizedDataset))</td></tr>
<tr class="separator:a3b8af10656b92bb8eea393ceb6301816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f78cd7f0be96c0a9ea17f290219f657"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f78cd7f0be96c0a9ea17f290219f657">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.8, 1) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a1f78cd7f0be96c0a9ea17f290219f657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5647b411787c2e870be5a9364402d33"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa5647b411787c2e870be5a9364402d33">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(1.3f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.9f, 11) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:aa5647b411787c2e870be5a9364402d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a905cd0bdaac1422449a21d4bc0d0cfb9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a905cd0bdaac1422449a21d4bc0d0cfb9">combine</a> (combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a905cd0bdaac1422449a21d4bc0d0cfb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12f3058186aff8e0f276306a2c729f58"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a12f3058186aff8e0f276306a2c729f58">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a12f3058186aff8e0f276306a2c729f58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25f63db476377ff223a7f32ce197e72e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25f63db476377ff223a7f32ce197e72e">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a25f63db476377ff223a7f32ce197e72e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4167a41f5c62105f06a675fceb6e512e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4167a41f5c62105f06a675fceb6e512e">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout, CLDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), make(&quot;DepthMultiplier&quot;, { 2 })), make(&quot;DataType&quot;, DataType::QASYMM8)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a4167a41f5c62105f06a675fceb6e512e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5760f2a010eb550b3666f50c2b746142"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5760f2a010eb550b3666f50c2b746142">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a5760f2a010eb550b3666f50c2b746142"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00c24480286ea3bc40b024a86079c3e3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00c24480286ea3bc40b024a86079c3e3">combine</a> (combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a00c24480286ea3bc40b024a86079c3e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1d5965301f322a9b4c24bcfeb8ac3b2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af1d5965301f322a9b4c24bcfeb8ac3b2">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout, CLDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), make(&quot;DepthMultiplier&quot;, { 2 })), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:af1d5965301f322a9b4c24bcfeb8ac3b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28599611b2c4166ad51b7d8038c05ea2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a28599611b2c4166ad51b7d8038c05ea2">FIXTURE_DATA_TEST_CASE_NEW</a> (RunActivations, CLDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(make(&quot;In&quot;, TensorShape(33U, 27U, 11U, 3U)), make(&quot;Weights&quot;, Size2D(3U, 4U)), make(&quot;Info&quot;, PadStrideInfo(1, 2, 0, 1)), make(&quot;Dilation&quot;, Size2D(2U, 2U)), make(&quot;DepthMultiplier&quot;, { 2U }), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10) }), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) }), make(&quot;DataLayout&quot;, { DataLayout::NHWC }), ActivationFunctionsQuantizedDataset))</td></tr>
<tr class="separator:a28599611b2c4166ad51b7d8038c05ea2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb22afc3cb1f42f84046bd53b2a2d41c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afb22afc3cb1f42f84046bd53b2a2d41c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.8, 1) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:afb22afc3cb1f42f84046bd53b2a2d41c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d30cbd090e0720b0e975e0f02cc460c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3d30cbd090e0720b0e975e0f02cc460c">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), make(&quot;SrcDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a3d30cbd090e0720b0e975e0f02cc460c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a964110ea6f4cfe9ca21beb3fe56e20f7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a964110ea6f4cfe9ca21beb3fe56e20f7">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), make(&quot;SrcDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.7f, 2) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a964110ea6f4cfe9ca21beb3fe56e20f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a641ea5ca54320ba4f0b4399ea27cc951"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a641ea5ca54320ba4f0b4399ea27cc951">FIXTURE_DATA_TEST_CASE_NEW</a> (RunActivations, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(make(&quot;In&quot;, TensorShape(33U, 27U, 11U, 3U)), make(&quot;Weights&quot;, Size2D(3U, 4U)), make(&quot;Info&quot;, PadStrideInfo(1, 2, 0, 1)), make(&quot;Dilation&quot;, Size2D(2U, 2U)), make(&quot;DepthMultiplier&quot;, { 2U }), make(&quot;SrcDataType&quot;, DataType::QASYMM8_SIGNED), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10) }), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) }), make(&quot;DataLayout&quot;, { DataLayout::NHWC }), ActivationFunctionsQuantizedDataset))</td></tr>
<tr class="separator:a641ea5ca54320ba4f0b4399ea27cc951"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d80f05b036d1be725f3aae44d0e3407"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4d80f05b036d1be725f3aae44d0e3407">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), make(&quot;SrcDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.8, 1) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a4d80f05b036d1be725f3aae44d0e3407"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ddb22a4e4406f3dd692c2504fc66c07"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5ddb22a4e4406f3dd692c2504fc66c07">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), make(&quot;SrcDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.9f, 11) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a5ddb22a4e4406f3dd692c2504fc66c07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b9d196404e704ac7330ae69cce0b440"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1b9d196404e704ac7330ae69cce0b440">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;SrcDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a1b9d196404e704ac7330ae69cce0b440"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2294dd62af5f9b66443a5942550ac6c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa2294dd62af5f9b66443a5942550ac6c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;SrcDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:aa2294dd62af5f9b66443a5942550ac6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41212e4b6e03defc9ef4b8e70ae1cd8a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a41212e4b6e03defc9ef4b8e70ae1cd8a">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), make(&quot;SrcDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a41212e4b6e03defc9ef4b8e70ae1cd8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addad6ea62046644a23fce726fa61b408"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#addad6ea62046644a23fce726fa61b408">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), make(&quot;SrcDataType&quot;, DataType::QASYMM8)), make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:addad6ea62046644a23fce726fa61b408"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a2437c44063526d22feb88404f431c5c8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2437c44063526d22feb88404f431c5c8">CLDepthwiseConvolutionLayerFixture&lt; half &gt;</a></td></tr>
<tr class="separator:a2437c44063526d22feb88404f431c5c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87887d952f8c00ec8d87f38905840f85"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a87887d952f8c00ec8d87f38905840f85">CLDepthwiseConvolutionLayerInPlaceFixture&lt; half &gt;</a></td></tr>
<tr class="separator:a87887d952f8c00ec8d87f38905840f85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98594c5ca9886c14365d813714611c79"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a98594c5ca9886c14365d813714611c79">CLDepthwiseConvolutionLayerFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a98594c5ca9886c14365d813714611c79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aded041e97b0d40a06acc63e781da3daf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aded041e97b0d40a06acc63e781da3daf">CLDepthwiseConvolutionLayerInPlaceFixture&lt; float &gt;</a></td></tr>
<tr class="separator:aded041e97b0d40a06acc63e781da3daf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46215efb57d85d73b814e3a5b3f987c2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a46215efb57d85d73b814e3a5b3f987c2">CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a46215efb57d85d73b814e3a5b3f987c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42a91f9125a5968b9b17ef4b68db5d33"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a42a91f9125a5968b9b17ef4b68db5d33">CLDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;</a></td></tr>
<tr class="separator:a42a91f9125a5968b9b17ef4b68db5d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a860cb13f725aff473482655e08e7a783"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a860cb13f725aff473482655e08e7a783">CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a860cb13f725aff473482655e08e7a783"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_depthwise_convolution_layer_8cpp.xhtml">DepthwiseConvolutionLayer.cpp</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:20:07 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
