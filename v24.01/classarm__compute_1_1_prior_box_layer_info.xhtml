<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: PriorBoxLayerInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_prior_box_layer_info.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">PriorBoxLayerInfo Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>PriorBox layer info.  
 <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a02b66d0a0d561b44c99b1db8b740d1dd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a02b66d0a0d561b44c99b1db8b740d1dd">PriorBoxLayerInfo</a> ()</td></tr>
<tr class="memdesc:a02b66d0a0d561b44c99b1db8b740d1dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a02b66d0a0d561b44c99b1db8b740d1dd">More...</a><br /></td></tr>
<tr class="separator:a02b66d0a0d561b44c99b1db8b740d1dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afda0265b456a3e3fe96b4b94c85ea53e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#afda0265b456a3e3fe96b4b94c85ea53e">PriorBoxLayerInfo</a> (const std::vector&lt; float &gt; &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a147b1e13f347e7b995de58f8fafd6723">min_sizes</a>, const std::vector&lt; float &gt; &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#afd15b7132dbacc847969f91c72633e7d">variances</a>, float <a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a8420f76d876fd4e61e653dfb6b56b5f5">offset</a>, bool <a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">flip</a>=true, bool <a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a7a636f1561bb52de88a5ef9671f28c12">clip</a>=false, const std::vector&lt; float &gt; &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a985940fefc02bdbc0ea1c916bb0ac82b">max_sizes</a>={}, const std::vector&lt; float &gt; &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">aspect_ratios</a>={}, const <a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a3fda69c38090070865d117fe94cf0c88">img_size</a>=<a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a>{0, 0}, const std::array&lt; float, 2 &gt; &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">steps</a>={{0.f, 0.f}})</td></tr>
<tr class="memdesc:afda0265b456a3e3fe96b4b94c85ea53e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#afda0265b456a3e3fe96b4b94c85ea53e">More...</a><br /></td></tr>
<tr class="separator:afda0265b456a3e3fe96b4b94c85ea53e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a147b1e13f347e7b995de58f8fafd6723"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a147b1e13f347e7b995de58f8fafd6723">min_sizes</a> () const</td></tr>
<tr class="memdesc:a147b1e13f347e7b995de58f8fafd6723"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get min sizes.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a147b1e13f347e7b995de58f8fafd6723">More...</a><br /></td></tr>
<tr class="separator:a147b1e13f347e7b995de58f8fafd6723"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd15b7132dbacc847969f91c72633e7d"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#afd15b7132dbacc847969f91c72633e7d">variances</a> () const</td></tr>
<tr class="memdesc:afd15b7132dbacc847969f91c72633e7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get min variances.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#afd15b7132dbacc847969f91c72633e7d">More...</a><br /></td></tr>
<tr class="separator:afd15b7132dbacc847969f91c72633e7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b45b0e0f8dd18aae641aebaf5055e4d"><td class="memItemLeft" align="right" valign="top">std::array&lt; float, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">steps</a> () const</td></tr>
<tr class="memdesc:a6b45b0e0f8dd18aae641aebaf5055e4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the step coordinates.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">More...</a><br /></td></tr>
<tr class="separator:a6b45b0e0f8dd18aae641aebaf5055e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fda69c38090070865d117fe94cf0c88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a3fda69c38090070865d117fe94cf0c88">img_size</a> () const</td></tr>
<tr class="memdesc:a3fda69c38090070865d117fe94cf0c88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the image size coordinates.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a3fda69c38090070865d117fe94cf0c88">More...</a><br /></td></tr>
<tr class="separator:a3fda69c38090070865d117fe94cf0c88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8420f76d876fd4e61e653dfb6b56b5f5"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a8420f76d876fd4e61e653dfb6b56b5f5">offset</a> () const</td></tr>
<tr class="memdesc:a8420f76d876fd4e61e653dfb6b56b5f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the offset.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a8420f76d876fd4e61e653dfb6b56b5f5">More...</a><br /></td></tr>
<tr class="separator:a8420f76d876fd4e61e653dfb6b56b5f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4333016b04c798f769404aad7683ec3d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">flip</a> () const</td></tr>
<tr class="memdesc:a4333016b04c798f769404aad7683ec3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the flip value.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">More...</a><br /></td></tr>
<tr class="separator:a4333016b04c798f769404aad7683ec3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a636f1561bb52de88a5ef9671f28c12"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a7a636f1561bb52de88a5ef9671f28c12">clip</a> () const</td></tr>
<tr class="memdesc:a7a636f1561bb52de88a5ef9671f28c12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the clip value.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a7a636f1561bb52de88a5ef9671f28c12">More...</a><br /></td></tr>
<tr class="separator:a7a636f1561bb52de88a5ef9671f28c12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a985940fefc02bdbc0ea1c916bb0ac82b"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a985940fefc02bdbc0ea1c916bb0ac82b">max_sizes</a> () const</td></tr>
<tr class="memdesc:a985940fefc02bdbc0ea1c916bb0ac82b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get max sizes.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a985940fefc02bdbc0ea1c916bb0ac82b">More...</a><br /></td></tr>
<tr class="separator:a985940fefc02bdbc0ea1c916bb0ac82b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a8ad2364ce45d0cb7c6938544711f7c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">aspect_ratios</a> () const</td></tr>
<tr class="memdesc:a6a8ad2364ce45d0cb7c6938544711f7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get aspect ratios.  <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">More...</a><br /></td></tr>
<tr class="separator:a6a8ad2364ce45d0cb7c6938544711f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>PriorBox layer info. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00647">647</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a02b66d0a0d561b44c99b1db8b740d1dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02b66d0a0d561b44c99b1db8b740d1dd">&#9670;&nbsp;</a></span>PriorBoxLayerInfo() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml">PriorBoxLayerInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00651">651</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        : _min_sizes(),</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;          _variances(),</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;          _offset(),</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;          _flip(<span class="keyword">true</span>),</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;          _clip(<span class="keyword">false</span>),</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;          _max_sizes(),</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;          _aspect_ratios(),</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;          _img_size(),</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;          _steps()</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    {</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="afda0265b456a3e3fe96b4b94c85ea53e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afda0265b456a3e3fe96b4b94c85ea53e">&#9670;&nbsp;</a></span>PriorBoxLayerInfo() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml">PriorBoxLayerInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>min_sizes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>variances</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flip</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>clip</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>max_sizes</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>aspect_ratios</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> &amp;&#160;</td>
          <td class="paramname"><em>img_size</em> = <code><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a>{0,&#160;0}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::array&lt; float, 2 &gt; &amp;&#160;</td>
          <td class="paramname"><em>steps</em> = <code>{{0.f,&#160;0.f}}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">min_sizes</td><td>Min sizes vector. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">variances</td><td>Variances vector. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>Offset value. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flip</td><td>(Optional) Flip the aspect ratios. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">clip</td><td>(Optional) Clip coordinates so that they're within [0,1]. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">max_sizes</td><td>(Optional) Max sizes vector. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">aspect_ratios</td><td>(Optional) Aspect ratios of the boxes. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">img_size</td><td>(Optional) <a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> size. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">steps</td><td>(Optional) Step values. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00675">675</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                                                                {},</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                      <span class="keyword">const</span> std::vector&lt;float&gt;   &amp;<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">aspect_ratios</a> = {},</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                      <span class="keyword">const</span> <a class="code" href="struct_coordinates2_d.xhtml">Coordinates2D</a>        &amp;<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a3fda69c38090070865d117fe94cf0c88">img_size</a>      = <a class="code" href="struct_coordinates2_d.xhtml">Coordinates2D</a>{0, 0},</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                      <span class="keyword">const</span> std::array&lt;float, 2&gt; &amp;<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">steps</a>         = {{0.f, 0.f}})</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        : _min_sizes(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a147b1e13f347e7b995de58f8fafd6723">min_sizes</a>),</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;          _variances(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#afd15b7132dbacc847969f91c72633e7d">variances</a>),</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;          _offset(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a8420f76d876fd4e61e653dfb6b56b5f5">offset</a>),</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;          _flip(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">flip</a>),</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;          _clip(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a7a636f1561bb52de88a5ef9671f28c12">clip</a>),</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;          _max_sizes(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a985940fefc02bdbc0ea1c916bb0ac82b">max_sizes</a>),</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;          _aspect_ratios(),</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;          _img_size(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a3fda69c38090070865d117fe94cf0c88">img_size</a>),</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;          _steps(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">steps</a>)</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    {</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        _aspect_ratios.push_back(1.);</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">aspect_ratios</a>.size(); ++i)</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        {</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;            <span class="keywordtype">float</span> ar            = <a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">aspect_ratios</a>[i];</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;            <span class="keywordtype">bool</span>  already_exist = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> ar_new : _aspect_ratios)</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;            {</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                <span class="keywordflow">if</span> (fabs(ar - ar_new) &lt; 1e-6)</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                {</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                    already_exist = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;                }</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            }</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;            <span class="keywordflow">if</span> (!already_exist)</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;            {</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;                _aspect_ratios.push_back(ar);</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">flip</a>)</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                {</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                    _aspect_ratios.push_back(1.f / ar);</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                }</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;            }</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;        }</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6a8ad2364ce45d0cb7c6938544711f7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a8ad2364ce45d0cb7c6938544711f7c">&#9670;&nbsp;</a></span>aspect_ratios()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;float&gt; aspect_ratios </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get aspect ratios. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00758">758</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    {</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;        <span class="keywordflow">return</span> _aspect_ratios;</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00236">CLPriorBoxLayerKernel::run()</a>.</p>

</div>
</div>
<a id="a7a636f1561bb52de88a5ef9671f28c12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a636f1561bb52de88a5ef9671f28c12">&#9670;&nbsp;</a></span>clip()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool clip </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the clip value. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00748">748</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    {</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;        <span class="keywordflow">return</span> _clip;</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4333016b04c798f769404aad7683ec3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4333016b04c798f769404aad7683ec3d">&#9670;&nbsp;</a></span>flip()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool flip </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the flip value. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00743">743</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    {</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;        <span class="keywordflow">return</span> _flip;</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a3fda69c38090070865d117fe94cf0c88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fda69c38090070865d117fe94cf0c88">&#9670;&nbsp;</a></span>img_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> img_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the image size coordinates. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00733">733</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    {</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        <span class="keywordflow">return</span> _img_size;</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a985940fefc02bdbc0ea1c916bb0ac82b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a985940fefc02bdbc0ea1c916bb0ac82b">&#9670;&nbsp;</a></span>max_sizes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;float&gt; max_sizes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get max sizes. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00753">753</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    {</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        <span class="keywordflow">return</span> _max_sizes;</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00236">CLPriorBoxLayerKernel::run()</a>.</p>

</div>
</div>
<a id="a147b1e13f347e7b995de58f8fafd6723"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a147b1e13f347e7b995de58f8fafd6723">&#9670;&nbsp;</a></span>min_sizes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;float&gt; min_sizes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get min sizes. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00718">718</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    {</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keywordflow">return</span> _min_sizes;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00236">CLPriorBoxLayerKernel::run()</a>.</p>

</div>
</div>
<a id="a8420f76d876fd4e61e653dfb6b56b5f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8420f76d876fd4e61e653dfb6b56b5f5">&#9670;&nbsp;</a></span>offset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float offset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the offset. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00738">738</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    {</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        <span class="keywordflow">return</span> _offset;</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6b45b0e0f8dd18aae641aebaf5055e4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b45b0e0f8dd18aae641aebaf5055e4d">&#9670;&nbsp;</a></span>steps()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::array&lt;float, 2&gt; steps </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the step coordinates. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00728">728</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    {</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="keywordflow">return</span> _steps;</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="afd15b7132dbacc847969f91c72633e7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd15b7132dbacc847969f91c72633e7d">&#9670;&nbsp;</a></span>variances()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;float&gt; variances </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get min variances. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00723">723</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    {</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        <span class="keywordflow">return</span> _variances;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_prior_box_layer_info_xhtml_a985940fefc02bdbc0ea1c916bb0ac82b"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a985940fefc02bdbc0ea1c916bb0ac82b">arm_compute::PriorBoxLayerInfo::max_sizes</a></div><div class="ttdeci">std::vector&lt; float &gt; max_sizes() const</div><div class="ttdoc">Get max sizes.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00753">Types.h:753</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_prior_box_layer_info_xhtml_a147b1e13f347e7b995de58f8fafd6723"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a147b1e13f347e7b995de58f8fafd6723">arm_compute::PriorBoxLayerInfo::min_sizes</a></div><div class="ttdeci">std::vector&lt; float &gt; min_sizes() const</div><div class="ttdoc">Get min sizes.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00718">Types.h:718</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_prior_box_layer_info_xhtml_a7a636f1561bb52de88a5ef9671f28c12"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a7a636f1561bb52de88a5ef9671f28c12">arm_compute::PriorBoxLayerInfo::clip</a></div><div class="ttdeci">bool clip() const</div><div class="ttdoc">Get the clip value.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00748">Types.h:748</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_prior_box_layer_info_xhtml_a6a8ad2364ce45d0cb7c6938544711f7c"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">arm_compute::PriorBoxLayerInfo::aspect_ratios</a></div><div class="ttdeci">std::vector&lt; float &gt; aspect_ratios() const</div><div class="ttdoc">Get aspect ratios.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00758">Types.h:758</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_prior_box_layer_info_xhtml_a3fda69c38090070865d117fe94cf0c88"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a3fda69c38090070865d117fe94cf0c88">arm_compute::PriorBoxLayerInfo::img_size</a></div><div class="ttdeci">Coordinates2D img_size() const</div><div class="ttdoc">Get the image size coordinates.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00733">Types.h:733</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_prior_box_layer_info_xhtml_a6b45b0e0f8dd18aae641aebaf5055e4d"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">arm_compute::PriorBoxLayerInfo::steps</a></div><div class="ttdeci">std::array&lt; float, 2 &gt; steps() const</div><div class="ttdoc">Get the step coordinates.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00728">Types.h:728</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_prior_box_layer_info_xhtml_a4333016b04c798f769404aad7683ec3d"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">arm_compute::PriorBoxLayerInfo::flip</a></div><div class="ttdeci">bool flip() const</div><div class="ttdoc">Get the flip value.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00743">Types.h:743</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_prior_box_layer_info_xhtml_a8420f76d876fd4e61e653dfb6b56b5f5"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a8420f76d876fd4e61e653dfb6b56b5f5">arm_compute::PriorBoxLayerInfo::offset</a></div><div class="ttdeci">float offset() const</div><div class="ttdoc">Get the offset.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00738">Types.h:738</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_prior_box_layer_info_xhtml_afd15b7132dbacc847969f91c72633e7d"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#afd15b7132dbacc847969f91c72633e7d">arm_compute::PriorBoxLayerInfo::variances</a></div><div class="ttdeci">std::vector&lt; float &gt; variances() const</div><div class="ttdoc">Get min variances.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00723">Types.h:723</a></div></div>
<div class="ttc" id="astruct_coordinates2_d_xhtml"><div class="ttname"><a href="struct_coordinates2_d.xhtml">Coordinates2D</a></div><div class="ttdoc">2D Coordinates structure</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_types_8h_source.xhtml#l00028">types.h:28</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml">PriorBoxLayerInfo</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:20:11 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
