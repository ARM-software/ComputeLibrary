<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$classarm__compute_1_1experimental_1_1_i_operator.xhtml" title="Base class for all async functions." alt="" coords="5,2963,88,2989"/>
<area shape="rect" id="node2" href="$classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml" title="Basic interface for functions which have a single async CL kernel." alt="" coords="137,1551,236,1577"/>
<area shape="rect" id="node64" href="$classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml" title="Basic interface for functions which have a single async CPU kernel." alt="" coords="136,4349,237,4376"/>
<area shape="rect" id="node3" href="$classarm__compute_1_1experimental_1_1_c_l_logical_and.xhtml" title=" " alt="" coords="374,5,483,32"/>
<area shape="rect" id="node4" href="$classarm__compute_1_1experimental_1_1_c_l_logical_or.xhtml" title=" " alt="" coords="379,56,478,83"/>
<area shape="rect" id="node5" href="$classarm__compute_1_1experimental_1_1_c_l_slice.xhtml" title="Basic function to perform tensor slicing." alt="" coords="394,107,463,133"/>
<area shape="rect" id="node6" href="$classarm__compute_1_1experimental_1_1_c_l_strided_slice.xhtml" title="Basic function to run CLStridedSliceKernel." alt="" coords="371,157,486,184"/>
<area shape="rect" id="node7" href="$classarm__compute_1_1opencl_1_1_cl_abs.xhtml" title="Basic function to get the absolute value of an src tensor." alt="" coords="399,208,458,235"/>
<area shape="rect" id="node8" href="$classarm__compute_1_1opencl_1_1_cl_activation.xhtml" title="Basic function to run kernels::ClActivationKernel." alt="" coords="378,259,479,285"/>
<area shape="rect" id="node9" href="$classarm__compute_1_1opencl_1_1_cl_add.xhtml" title="Basic function to run arithmetic addition." alt="" coords="399,309,459,336"/>
<area shape="rect" id="node10" href="$classarm__compute_1_1opencl_1_1_cl_cast.xhtml" title="Basic function to run kernels::ClCastKernel." alt="" coords="397,360,461,387"/>
<area shape="rect" id="node11" href="$classarm__compute_1_1opencl_1_1_cl_complex_mul.xhtml" title="Basic function to run opencl::kernels::ClComplexMulKernel." alt="" coords="370,411,487,437"/>
<area shape="rect" id="node12" href="$classarm__compute_1_1opencl_1_1_cl_concatenate.xhtml" title="Basic function to execute concatenate tensors along a given axis." alt="" coords="370,461,487,488"/>
<area shape="rect" id="node13" href="$classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml" title="Basic function to compute the convolution layer." alt="" coords="387,512,471,539"/>
<area shape="rect" id="node14" href="$classarm__compute_1_1opencl_1_1_cl_convert_fully_connected_weights.xhtml" title="Basic function to run kernels::ClConvertFullyConnectedWeightsKernel." alt="" coords="309,563,548,589"/>
<area shape="rect" id="node15" href="$classarm__compute_1_1opencl_1_1_cl_copy.xhtml" title="Basic function to run kernels::ClCopyKernel." alt="" coords="395,613,463,640"/>
<area shape="rect" id="node16" href="$classarm__compute_1_1opencl_1_1_cl_crop.xhtml" title="Basic function to run kernels::ClCropKernel." alt="" coords="396,664,461,691"/>
<area shape="rect" id="node17" href="$classarm__compute_1_1opencl_1_1_cl_dequantize.xhtml" title="Basic function to run kernels::ClDequantizeKernel that dequantizes an input tensor." alt="" coords="374,715,483,741"/>
<area shape="rect" id="node18" href="$classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml" title="Basic function to simulate a directly convolution layer." alt="" coords="367,765,490,792"/>
<area shape="rect" id="node19" href="$classarm__compute_1_1opencl_1_1_cl_direct_conv3d.xhtml" title="Basic function to simulate a directly convolution layer with 3 spatial dimensions." alt="" coords="367,816,490,843"/>
<area shape="rect" id="node20" href="$classarm__compute_1_1opencl_1_1_cl_elementwise_division.xhtml" title="Basic function to run opencl::kernels::ClArithmeticKernel for division." alt="" coords="343,867,515,893"/>
<area shape="rect" id="node21" href="$classarm__compute_1_1opencl_1_1_cl_elementwise_max.xhtml" title="Basic function to run opencl::kernels::ClArithmeticKernel for max." alt="" coords="355,917,502,944"/>
<area shape="rect" id="node22" href="$classarm__compute_1_1opencl_1_1_cl_elementwise_min.xhtml" title="Basic function to run opencl::kernels::ClArithmeticKernel for min." alt="" coords="357,968,500,995"/>
<area shape="rect" id="node23" href="$classarm__compute_1_1opencl_1_1_cl_elementwise_power.xhtml" title="Basic function to run opencl::kernels::ClArithmeticKernel for power." alt="" coords="349,1019,508,1045"/>
<area shape="rect" id="node24" href="$classarm__compute_1_1opencl_1_1_cl_elementwise_squared_diff.xhtml" title="Basic function to run opencl::kernels::ClArithmeticKernel for squared difference." alt="" coords="331,1069,526,1096"/>
<area shape="rect" id="node25" href="$classarm__compute_1_1opencl_1_1_cl_exp.xhtml" title="Basic function to perform exponential on an src tensor." alt="" coords="399,1120,458,1147"/>
<area shape="rect" id="node26" href="$classarm__compute_1_1opencl_1_1_cl_fill.xhtml" title="Basic function to run kernels::ClFillKernel." alt="" coords="401,1171,456,1197"/>
<area shape="rect" id="node27" href="$classarm__compute_1_1opencl_1_1_cl_flatten.xhtml" title="Basic function to flatten a given input." alt="" coords="388,1221,469,1248"/>
<area shape="rect" id="node28" href="$classarm__compute_1_1opencl_1_1_cl_floor.xhtml" title="Basic function to run kernels::ClFloorKernel." alt="" coords="395,1272,463,1299"/>
<area shape="rect" id="node29" href="$classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml" title="Basic function to compute a Fully Connected layer on OpenCL." alt="" coords="361,1323,496,1349"/>
<area shape="rect" id="node30" href="$classarm__compute_1_1opencl_1_1_cl_gemm.xhtml" title="Basic function to execute GEMM on OpenCL." alt="" coords="389,1373,468,1400"/>
<area shape="rect" id="node31" href="$classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml" title="Basic function to compute the convolution layer." alt="" coords="365,1424,493,1451"/>
<area shape="rect" id="node32" href="$classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml" title="Basic function to execute GEMMLowpMatrixMultiplyCore on OpenCL." alt="" coords="309,1475,548,1501"/>
<area shape="rect" id="node33" href="$classarm__compute_1_1opencl_1_1_cl_gemm_lowp_output_stage.xhtml" title="Basic function to execute GEMMLowpQuantizeDown kernels on CL." alt="" coords="331,1525,526,1552"/>
<area shape="rect" id="node34" href="$classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml" title="Basic function to execute indirect convolution on OpenCL." alt="" coords="362,1576,495,1603"/>
<area shape="rect" id="node35" href="$classarm__compute_1_1opencl_1_1_cl_log.xhtml" title="Basic function to perform elementwise log on an src tensor." alt="" coords="399,1627,458,1653"/>
<area shape="rect" id="node36" href="$classarm__compute_1_1opencl_1_1_cl_logical_not.xhtml" title="Basic function to run kernels::ClElementWiseUnaryKernel for NOT operation." alt="" coords="377,1677,481,1704"/>
<area shape="rect" id="node37" href="$classarm__compute_1_1opencl_1_1_cl_mat_mul.xhtml" title="Basic operator to execute BatchMatMul on OpenCL." alt="" coords="387,1728,471,1755"/>
<area shape="rect" id="node38" href="$classarm__compute_1_1opencl_1_1_cl_mul.xhtml" title="Basic function to run opencl::kernels::ClMulKernel." alt="" coords="399,1779,458,1805"/>
<area shape="rect" id="node39" href="$classarm__compute_1_1opencl_1_1_cl_neg.xhtml" title="Basic function to negate an src tensor." alt="" coords="398,1829,459,1856"/>
<area shape="rect" id="node40" href="$classarm__compute_1_1opencl_1_1_cl_permute.xhtml" title="Basic function to run kernels::ClPermuteKernel." alt="" coords="383,1880,474,1907"/>
<area shape="rect" id="node41" href="$classarm__compute_1_1opencl_1_1_cl_pool2d.xhtml" title="Basic function to simulate a pooling layer with the specified pooling operation." alt="" coords="389,1931,468,1957"/>
<area shape="rect" id="node42" href="$classarm__compute_1_1opencl_1_1_cl_pool3d.xhtml" title="Basic function to simulate a pooling layer with the specified pooling operation." alt="" coords="389,1981,468,2008"/>
<area shape="rect" id="node43" href="$classarm__compute_1_1opencl_1_1_cl_p_relu.xhtml" title="Basic operator to run arm_compute::opencl::kernels::ClArithmeticKernel for PRELU." alt="" coords="393,2032,465,2059"/>
<area shape="rect" id="node44" href="$classarm__compute_1_1opencl_1_1_cl_quantize.xhtml" title="Basic function to run kernels::ClQuantizeKernel that dequantizes an input tensor." alt="" coords="382,2083,475,2109"/>
<area shape="rect" id="node45" href="$classarm__compute_1_1opencl_1_1_cl_reshape.xhtml" title="Basic function to run kernels::ClReshapeKernel." alt="" coords="383,2133,474,2160"/>
<area shape="rect" id="node46" href="$classarm__compute_1_1opencl_1_1_cl_round.xhtml" title="Basic function to get the round (to the nearest even) value of an src tensor." alt="" coords="391,2184,467,2211"/>
<area shape="rect" id="node47" href="$classarm__compute_1_1opencl_1_1_cl_rsqrt.xhtml" title="Basic function to perform inverse square root on an src tensor." alt="" coords="394,2235,463,2261"/>
<area shape="rect" id="node48" href="$classarm__compute_1_1opencl_1_1_cl_scale.xhtml" title="Basic function to simulate a scale layer." alt="" coords="393,2285,464,2312"/>
<area shape="rect" id="node49" href="$classarm__compute_1_1opencl_1_1_cl_sin.xhtml" title="Basic function to calculate sine of an src tensor." alt="" coords="401,2336,456,2363"/>
<area shape="rect" id="node50" href="$classarm__compute_1_1opencl_1_1_cl_softmax.xhtml" title=" " alt="" coords="384,2387,473,2413"/>
<area shape="rect" id="node51" href="$classarm__compute_1_1opencl_1_1_cl_sub.xhtml" title="Basic function to run arithmetic subtraction." alt="" coords="399,2437,458,2464"/>
<area shape="rect" id="node52" href="$classarm__compute_1_1opencl_1_1_cl_transpose.xhtml" title="Basic function to run kernels::ClTransposeKernel." alt="" coords="379,2488,479,2515"/>
<area shape="rect" id="node53" href="$classarm__compute_1_1opencl_1_1_cl_transposed_convolution.xhtml" title="Basic function to simulate a directly convolution layer." alt="" coords="335,2539,522,2565"/>
<area shape="rect" id="node54" href="$classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml" title="Basic function to execute Winograd&#45;based convolution on OpenCL." alt="" coords="355,2589,502,2616"/>
<area shape="rect" id="node55" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title="This template synthetizes a simple IOperator which runs the given kernel K." alt="" coords="327,2640,530,2667"/>
<area shape="rect" id="node56" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator_init_output_with_zero_and_with_zero_constant_border.xhtml" title="As above but this also initializes to zero the input tensor." alt="" coords="294,2691,563,2747"/>
<area shape="rect" id="node57" href="$classarm__compute_1_1test_1_1_cl_synthetize_operator_with_border.xhtml" title="As above but this also setups a Zero border on the input tensor of the kernel&#39;s bordersize." alt="" coords="333,2771,524,2813"/>
<area shape="rect" id="node58" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title=" " alt="" coords="285,2837,572,2893"/>
<area shape="rect" id="node59" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title=" " alt="" coords="285,2917,572,2973"/>
<area shape="rect" id="node60" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title=" " alt="" coords="313,2997,545,3053"/>
<area shape="rect" id="node61" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title=" " alt="" coords="302,3077,555,3133"/>
<area shape="rect" id="node62" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title=" " alt="" coords="302,3157,555,3213"/>
<area shape="rect" id="node63" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title=" " alt="" coords="293,3238,564,3279"/>
<area shape="rect" id="node65" href="$classarm__compute_1_1cpu_1_1_cpu_activation.xhtml" title="Basic function to run kernels::CpuActivationKernel." alt="" coords="372,3304,485,3331"/>
<area shape="rect" id="node66" href="$classarm__compute_1_1cpu_1_1_cpu_add.xhtml" title="Basic function to run kernels::CpuAddKernel." alt="" coords="393,3355,465,3381"/>
<area shape="rect" id="node67" href="$classarm__compute_1_1cpu_1_1_cpu_add_mul_add.xhtml" title="Basic function to run kernels::CpuAddMulAddKernel." alt="" coords="368,3405,489,3432"/>
<area shape="rect" id="node68" href="$classarm__compute_1_1cpu_1_1_cpu_cast.xhtml" title="Basic function to run kernels::CpuCastKernel." alt="" coords="391,3456,467,3483"/>
<area shape="rect" id="node69" href="$classarm__compute_1_1cpu_1_1_cpu_complex_mul.xhtml" title="Basic function to run kernels::CpuComplexMulKernel." alt="" coords="364,3507,493,3533"/>
<area shape="rect" id="node70" href="$classarm__compute_1_1cpu_1_1_cpu_concatenate.xhtml" title="Basic function to execute concatenate tensors along a given axis." alt="" coords="364,3557,493,3584"/>
<area shape="rect" id="node71" href="$classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml" title="Basic function to simulate a convolution layer." alt="" coords="381,3608,477,3635"/>
<area shape="rect" id="node72" href="$classarm__compute_1_1cpu_1_1_cpu_convert_fully_connected_weights.xhtml" title="Basic function to run kernels::CpuConvertFullyConnectedWeightsKernel." alt="" coords="329,3659,528,3701"/>
<area shape="rect" id="node73" href="$classarm__compute_1_1cpu_1_1_cpu_copy.xhtml" title="Basic function to run kernels::CpuCopyKernel." alt="" coords="389,3725,469,3752"/>
<area shape="rect" id="node74" href="$classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d.xhtml" title="Function to execute a depthwise convolution." alt="" coords="346,3776,511,3803"/>
<area shape="rect" id="node75" href="$classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml" title="Depthwise convolution assembly kernel glue." alt="" coords="314,3827,543,3869"/>
<area shape="rect" id="node76" href="$classarm__compute_1_1cpu_1_1_cpu_dequantize.xhtml" title="Basic function to run kernels::CpuDequantizeKernel that dequantizes an input tensor." alt="" coords="368,3893,489,3920"/>
<area shape="rect" id="node77" href="$classarm__compute_1_1cpu_1_1_cpu_direct_conv2d.xhtml" title="Function to run the direct convolution." alt="" coords="361,3944,496,3971"/>
<area shape="rect" id="node78" href="$classarm__compute_1_1cpu_1_1_cpu_direct_conv3d.xhtml" title="Function to run the direct convolution." alt="" coords="361,3995,496,4021"/>
<area shape="rect" id="node79" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_base.xhtml" title=" " alt="" coords="347,4045,510,4072"/>
<area shape="rect" id="node85" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_unary.xhtml" title=" " alt="" coords="343,4096,514,4123"/>
<area shape="rect" id="node86" href="$classarm__compute_1_1cpu_1_1_cpu_fill.xhtml" title="Basic function to run kernels::CpuFillKernel." alt="" coords="395,4147,462,4173"/>
<area shape="rect" id="node87" href="$classarm__compute_1_1cpu_1_1_cpu_flatten.xhtml" title="Basic function to flatten a given input." alt="" coords="382,4197,475,4224"/>
<area shape="rect" id="node88" href="$classarm__compute_1_1cpu_1_1_cpu_floor.xhtml" title="Basic function to run kernels::CpuFloorKernel." alt="" coords="389,4248,469,4275"/>
<area shape="rect" id="node89" href="$classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml" title="Basic function to compute a Fully Connected layer." alt="" coords="355,4299,502,4325"/>
<area shape="rect" id="node90" href="$classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml" title="Basic function to execute GEMM." alt="" coords="383,4349,474,4376"/>
<area shape="rect" id="node91" href="$classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml" title="Assembly kernel glue." alt="" coords="323,4400,535,4427"/>
<area shape="rect" id="node92" href="$classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml" title="Basic function to compute the convolution layer." alt="" coords="359,4451,499,4477"/>
<area shape="rect" id="node93" href="$classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml" title=" " alt="" coords="339,4501,518,4528"/>
<area shape="rect" id="node94" href="$classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml" title="Basic function to execute GEMMLowpMatrixMultiplyCore." alt="" coords="303,4552,554,4579"/>
<area shape="rect" id="node95" href="$classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_output_stage.xhtml" title="Basic function to execute GEMMLowpQuantizeDown kernels." alt="" coords="325,4603,532,4629"/>
<area shape="rect" id="node96" href="$classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml" title="Function to execute MatMul Operation." alt="" coords="381,4653,477,4680"/>
<area shape="rect" id="node97" href="$classarm__compute_1_1cpu_1_1_cpu_max_unpooling.xhtml" title="Basic function to run kernels::CpuMaxUnpoolingLayerKernel." alt="" coords="358,4704,499,4731"/>
<area shape="rect" id="node98" href="$classarm__compute_1_1cpu_1_1_cpu_mul.xhtml" title="Basic function to run kernels::CpuMulKernel." alt="" coords="393,4755,464,4781"/>
<area shape="rect" id="node99" href="$classarm__compute_1_1cpu_1_1_cpu_permute.xhtml" title="Basic function to run kernels::CpuPermuteKernel." alt="" coords="377,4805,480,4832"/>
<area shape="rect" id="node100" href="$classarm__compute_1_1cpu_1_1_cpu_pool2d.xhtml" title="Basic function to simulate a pooling layer with the specified pooling operation." alt="" coords="383,4856,474,4883"/>
<area shape="rect" id="node101" href="$classarm__compute_1_1cpu_1_1_cpu_pool3d.xhtml" title="Basic function to simulate a pooling layer with the specified pooling operation." alt="" coords="383,4907,474,4933"/>
<area shape="rect" id="node102" href="$classarm__compute_1_1cpu_1_1_cpu_quantize.xhtml" title="Basic function to run kernels::CpuQuantizeKernel that dequantizes an input tensor." alt="" coords="376,4957,481,4984"/>
<area shape="rect" id="node103" href="$classarm__compute_1_1cpu_1_1_cpu_reshape.xhtml" title="Basic function to run kernels::CpuReshapeKernel." alt="" coords="377,5008,480,5035"/>
<area shape="rect" id="node104" href="$classarm__compute_1_1cpu_1_1_cpu_scale.xhtml" title="Basic function to compute Scale." alt="" coords="387,5059,470,5085"/>
<area shape="rect" id="node105" href="$classarm__compute_1_1cpu_1_1_cpu_softmax_generic.xhtml" title="Basic function to compute a SoftmaxLayer and a Log SoftmaxLayer." alt="" coords="353,5109,504,5136"/>
<area shape="rect" id="node106" href="$classarm__compute_1_1cpu_1_1_cpu_sub.xhtml" title="Basic function to run kernels::CpuSubKernel." alt="" coords="393,5160,464,5187"/>
<area shape="rect" id="node107" href="$classarm__compute_1_1cpu_1_1_cpu_transpose.xhtml" title="Basic function to run kernels::CpuTransposeKernel." alt="" coords="373,5211,485,5237"/>
<area shape="rect" id="node108" href="$classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml" title=" " alt="" coords="349,5261,508,5288"/>
<area shape="rect" id="node109" href="$classarm__compute_1_1experimental_1_1_n_e_slice.xhtml" title="Basic function to perform tensor slicing." alt="" coords="393,5312,464,5339"/>
<area shape="rect" id="node110" href="$classarm__compute_1_1experimental_1_1_n_e_strided_slice.xhtml" title="Basic function to run NEStridedSliceKernel." alt="" coords="370,5363,487,5389"/>
<area shape="rect" id="node111" href="$classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_kernel_border.xhtml" title="As above but this also setups a Zero border on the input tensor of the kernel&#39;s bordersize." alt="" coords="312,5414,545,5455"/>
<area shape="rect" id="node80" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_arithmetic.xhtml" title="Class to run cpu::kernels::CpuArithmeticKernel except for division and power." alt="" coords="625,3921,824,3962"/>
<area shape="rect" id="node81" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison.xhtml" title="Basic function to run cpu::kernels::CpuComparisonKernel." alt="" coords="620,3987,829,4013"/>
<area shape="rect" id="node82" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison_static.xhtml" title="Basic function to run cpu::kernels::CpuComparisonKernel." alt="" coords="620,4038,829,4079"/>
<area shape="rect" id="node83" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_division.xhtml" title="Basic function to run cpu::kernels::CpuArithmeticKernel for division." alt="" coords="633,4104,817,4131"/>
<area shape="rect" id="node84" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_power.xhtml" title="Basic function to run cpu::kernels::CpuArithmeticKernel for power." alt="" coords="639,4155,810,4181"/>
</map>
