<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/dynamic_fusion/sketch/gpu/ckw_driver/components/GpuCkwResize.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_gpu_ckw_resize_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GpuCkwResize.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_gpu_ckw_resize_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_ckw_resize_8h.xhtml">src/dynamic_fusion/sketch/gpu/ckw_driver/components/GpuCkwResize.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_adjust_vec_size_8h.xhtml">arm_compute/core/utils/helpers/AdjustVecSize.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_helpers_8h.xhtml">src/core/helpers/WindowHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_scale_utils_8h.xhtml">src/core/utils/ScaleUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="dynamic__fusion_2sketch_2gpu_2ckw__driver_2components_2utils_2type__converter_2_common_8h.xhtml">src/dynamic_fusion/sketch/gpu/ckw_driver/components/utils/type_converter/Common.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_writer_helper_8h.xhtml">src/dynamic_fusion/sketch/gpu/ckw_driver/components/utils/WriterHelper.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_ckw_kernel_writer_8h.xhtml">src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwKernelWriter.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_ckw_scoped_kernel_writer_8h.xhtml">src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwScopedKernelWriter.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_ckw_variable_table_8h.xhtml">src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwVariableTable.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_argument_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuKernelArgument.h</a>&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_component_group_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuKernelComponentGroup.h</a>&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_string_support_8h.xhtml">support/StringSupport.h</a>&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>experimental</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> opencl_vector_size_in_bytes = 16;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#ac0fb2ee11e39af41565ddd5a783bc281">   51</a></span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#ac0fb2ee11e39af41565ddd5a783bc281">GpuCkwResize::GpuCkwResize</a>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack&lt;ITensorInfo&gt;</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml">Attributes</a> &amp;attributes)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    : <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml">IGpuCkwComponentDriver</a>{<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>}, _src{}, _dst{}, _attributes{attributes}</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    _src = this-&gt;tensors().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    _dst = this-&gt;tensors().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_src, _dst);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">void</span> GpuCkwResize::do_nearest_neighbor_resize(<span class="keyword">const</span> ComponentGroup    &amp;comp_group,</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                              GpuCkwVariableTable     &amp;vtable,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                              GpuCkwScopedKernelWriter writer)<span class="keyword"> const</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a> = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">const</span> Window  root_window = comp_group.get_root_component()-&gt;ckw_component_driver()-&gt;get_window();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">const</span> int32_t n0          = root_window.x().step();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">const</span> int32_t m0          = root_window.y().step();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">const</span> int32_t partial_n0  = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) % n0;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    GpuCkwComponentArgument *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a> =</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        vtable.declare_variable(comp_group, writer, _src, TensorStorageType::ClBufferUint8Ptr, <span class="stringliteral">&quot;src&quot;</span>);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    GpuCkwComponentArgument *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> =</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        vtable.declare_variable(comp_group, writer, _dst, TensorStorageType::ClBufferUint8Ptr, <span class="stringliteral">&quot;dst&quot;</span>);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment">// Constants</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae78a2afc8cb469d8629dc419237e5c68">scale_x</a> = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>), _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>),</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                                              _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a4224060ec00e60ea33aab588e2d48189">align_corners</a>());</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaaab31fd732b950bf0d4b98f00e259c0">scale_y</a> = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>), _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>),</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                                              _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a4224060ec00e60ea33aab588e2d48189">align_corners</a>());</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_scale_x = writer-&gt;declare_tile(<span class="stringliteral">&quot;scale_x&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae78a2afc8cb469d8629dc419237e5c68">scale_x</a>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_scale_y = writer-&gt;declare_tile(<span class="stringliteral">&quot;scale_y&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaaab31fd732b950bf0d4b98f00e259c0">scale_y</a>);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_0       = writer-&gt;declare_tile(<span class="stringliteral">&quot;0&quot;</span>, 0);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_half    = writer-&gt;declare_tile(<span class="stringliteral">&quot;half&quot;</span>, 0.5f);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_1       = writer-&gt;declare_tile(<span class="stringliteral">&quot;1&quot;</span>, 1);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_src_w   = writer-&gt;declare_tile(<span class="stringliteral">&quot;src_w&quot;</span>, <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>)));</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_src_h   = writer-&gt;declare_tile(<span class="stringliteral">&quot;src_h&quot;</span>, <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>)));</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_dst_h   = writer-&gt;declare_tile(<span class="stringliteral">&quot;dst_h&quot;</span>, <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>)));</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_gid_0 = writer-&gt;declare_tile(<span class="stringliteral">&quot;gid_0&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_gid_1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;gid_1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_gid_2 = writer-&gt;declare_tile(<span class="stringliteral">&quot;gid_2&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    writer-&gt;op_get_global_id(tile_gid_0, 0);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    writer-&gt;op_get_global_id(tile_gid_1, 1);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    writer-&gt;op_get_global_id(tile_gid_2, 2);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keyword">auto</span> &amp;tile_co = writer-&gt;declare_tile(<span class="stringliteral">&quot;co&quot;</span>, ckw::DataType::Int32); <span class="comment">// OFM</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">auto</span> &amp;tile_xo = writer-&gt;declare_tile(<span class="stringliteral">&quot;xo&quot;</span>, ckw::DataType::Int32); <span class="comment">// WIDTH</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">auto</span> &amp;tile_yo = writer-&gt;declare_tile(<span class="stringliteral">&quot;yo&quot;</span>, ckw::DataType::Int32); <span class="comment">// HEIGHT</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">auto</span> &amp;tile_bo = writer-&gt;declare_tile(<span class="stringliteral">&quot;bo&quot;</span>, ckw::DataType::Int32); <span class="comment">// BATCH SIZE IDX</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment">// Get the boundary aware coordinates at each global dimension index</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abd9eddc31ead31aebb93c3b844a27fe3">get_coord</a>(writer, tile_co, tile_gid_0, n0, partial_n0, tile_co.name() + <span class="stringliteral">&quot;_dim0_&quot;</span>, tile_0);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abd9eddc31ead31aebb93c3b844a27fe3">get_coord</a>(writer, tile_xo, tile_gid_1, 1, 0, tile_xo.name() + <span class="stringliteral">&quot;_dim1_&quot;</span>, tile_0);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abd9eddc31ead31aebb93c3b844a27fe3">get_coord</a>(writer, tile_yo, tile_gid_2, 1, 0, tile_yo.name() + <span class="stringliteral">&quot;_dim2_&quot;</span>, tile_0);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abd9eddc31ead31aebb93c3b844a27fe3">get_coord</a>(writer, tile_bo, tile_gid_2, 1, 0, tile_yo.name() + <span class="stringliteral">&quot;_dim3_&quot;</span>, tile_0);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    writer-&gt;op_binary_expression(tile_yo, tile_yo, BinaryOp::Mod, tile_dst_h);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    writer-&gt;op_binary_expression(tile_bo, tile_bo, BinaryOp::Div, tile_dst_h);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_xi_f = writer-&gt;declare_tile(<span class="stringliteral">&quot;xi_f&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_yi_f = writer-&gt;declare_tile(<span class="stringliteral">&quot;yi_f&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">switch</span> (_attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a440e2b1d9950d5d0bd5e60add33eb903">sampling_policy</a>())</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">SamplingPolicy::TOP_LEFT</a>:</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="comment">// xi_f = (xo * scale_x)</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="comment">// yi_f = (yo * scale_y)</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            writer-&gt;op_binary_expression(tile_xi_f, tile_xo, BinaryOp::Mul, tile_scale_x);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            writer-&gt;op_binary_expression(tile_yi_f, tile_yo, BinaryOp::Mul, tile_scale_y);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">SamplingPolicy::CENTER</a>:</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="comment">// xi_f = ((xo + 0.5f) * scale_x)</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="comment">// yi_f = ((yo + 0.5f) * scale_y)</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_xo_plus_half = writer-&gt;declare_tile(<span class="stringliteral">&quot;xo_plus_half&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_yo_plus_half = writer-&gt;declare_tile(<span class="stringliteral">&quot;yo_plus_half&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            writer-&gt;op_binary_expression(tile_xo_plus_half, tile_xo, BinaryOp::Add, tile_half);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            writer-&gt;op_binary_expression(tile_yo_plus_half, tile_yo, BinaryOp::Add, tile_half);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            writer-&gt;op_binary_expression(tile_xi_f, tile_xo_plus_half, BinaryOp::Mul, tile_scale_x);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            writer-&gt;op_binary_expression(tile_yi_f, tile_yo_plus_half, BinaryOp::Mul, tile_scale_y);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported sampling policy&quot;</span>);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">if</span> (_attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a4224060ec00e60ea33aab588e2d48189">align_corners</a>())</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        writer-&gt;op_unary_elementwise_function(tile_xi_f, UnaryFunction::Round, tile_xi_f);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        writer-&gt;op_unary_elementwise_function(tile_yi_f, UnaryFunction::Round, tile_yi_f);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="comment">// xi0 = clamp((int)xi_f, 0, (int)src_w - 1)</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="comment">// yi0 = clamp((int)yi_f, 0, (int)src_h - 1)</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_xi_f_int = writer-&gt;declare_tile(<span class="stringliteral">&quot;xi_f_int&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_yi_f_int = writer-&gt;declare_tile(<span class="stringliteral">&quot;yi_f_int&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    writer-&gt;op_cast_expression(tile_xi_f_int, tile_xi_f, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    writer-&gt;op_cast_expression(tile_yi_f_int, tile_yi_f, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_src_w_minus_1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;src_w_minus_1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_src_h_minus_1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;src_h_minus_1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    writer-&gt;op_binary_expression(tile_src_w_minus_1, tile_src_w, BinaryOp::Sub, tile_1);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    writer-&gt;op_binary_expression(tile_src_h_minus_1, tile_src_h, BinaryOp::Sub, tile_1);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">auto</span> &amp;tile_xi0 = writer-&gt;declare_tile(<span class="stringliteral">&quot;xi0&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keyword">auto</span> &amp;tile_yi0 = writer-&gt;declare_tile(<span class="stringliteral">&quot;yi0&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    writer-&gt;op_ternary_elementwise_function(tile_xi0, TernaryFunction::Clamp, tile_xi_f_int, tile_0,</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                            tile_src_w_minus_1);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    writer-&gt;op_ternary_elementwise_function(tile_yi0, TernaryFunction::Clamp, tile_yi_f_int, tile_0,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                            tile_src_h_minus_1);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    TensorTileSampler src_sampler;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    src_sampler.x(tile_co);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    src_sampler.y(tile_xi0);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    src_sampler.z(tile_yi0);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    src_sampler.b(tile_bo);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    src_sampler.height(m0);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    src_sampler.width(n0);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="comment">// We guarantee to not have out-of-bounds accesses</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    src_sampler.format(TensorSamplerFormat::C_W_H);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    src_sampler.address_mode_x(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeX::None</a>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    src_sampler.address_mode_y(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeY::None</a>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    src_sampler.address_mode_z(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeZ::None</a>);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    writer-&gt;op_load_once(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, src_sampler);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">auto</span> &amp;tile_src = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tile();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    TensorTileSampler dst_sampler;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    dst_sampler.x(tile_co);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    dst_sampler.y(tile_xo);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    dst_sampler.z(tile_yo);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    dst_sampler.b(tile_bo);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    dst_sampler.height(m0);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    dst_sampler.width(n0);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    dst_sampler.format(TensorSamplerFormat::C_W_H);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="comment">// Do not write to the same memory location with multiple threads</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    dst_sampler.address_mode_x(TensorSamplerAddressModeX::OverlappingMin);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    dst_sampler.address_mode_y(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeY::None</a>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    dst_sampler.address_mode_z(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeZ::None</a>);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">auto</span> &amp;tile_dst = writer-&gt;declare_tile(<span class="stringliteral">&quot;dst&quot;</span>, TileInfo(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">to_ckw</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()), m0, n0));</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;init_virtual_tensor(tile_dst, dst_sampler);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    writer-&gt;op_assign(tile_dst, tile_src);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;}</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordtype">void</span> GpuCkwResize::do_bilinear_resize(<span class="keyword">const</span> ComponentGroup    &amp;comp_group,</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                      GpuCkwVariableTable     &amp;vtable,</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                      GpuCkwScopedKernelWriter writer)<span class="keyword"> const</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a> = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keyword">const</span> Window  root_window = comp_group.get_root_component()-&gt;ckw_component_driver()-&gt;get_window();</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keyword">const</span> int32_t n0          = root_window.x().step();</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">const</span> int32_t m0          = root_window.y().step();</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keyword">const</span> int32_t partial_n0  = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) % n0;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    GpuCkwComponentArgument *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a> =</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        vtable.declare_variable(comp_group, writer, _src, TensorStorageType::ClBufferUint8Ptr, <span class="stringliteral">&quot;src&quot;</span>);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    GpuCkwComponentArgument *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> =</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        vtable.declare_variable(comp_group, writer, _dst, TensorStorageType::ClBufferUint8Ptr, <span class="stringliteral">&quot;dst&quot;</span>);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="comment">// Constants</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae78a2afc8cb469d8629dc419237e5c68">scale_x</a> = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>), _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>),</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                                              _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a4224060ec00e60ea33aab588e2d48189">align_corners</a>());</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaaab31fd732b950bf0d4b98f00e259c0">scale_y</a> = <a class="code" href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">scale_utils::calculate_resize_ratio</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>), _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>),</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                                                              _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a4224060ec00e60ea33aab588e2d48189">align_corners</a>());</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_scale_x = writer-&gt;declare_tile(<span class="stringliteral">&quot;scale_x&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae78a2afc8cb469d8629dc419237e5c68">scale_x</a>);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_scale_y = writer-&gt;declare_tile(<span class="stringliteral">&quot;scale_y&quot;</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaaab31fd732b950bf0d4b98f00e259c0">scale_y</a>);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_0       = writer-&gt;declare_tile(<span class="stringliteral">&quot;0&quot;</span>, 0);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_half    = writer-&gt;declare_tile(<span class="stringliteral">&quot;half&quot;</span>, 0.5f);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_1       = writer-&gt;declare_tile(<span class="stringliteral">&quot;1&quot;</span>, 1);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_src_w   = writer-&gt;declare_tile(<span class="stringliteral">&quot;src_w&quot;</span>, <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>)));</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_src_h   = writer-&gt;declare_tile(<span class="stringliteral">&quot;src_h&quot;</span>, <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>)));</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_dst_h   = writer-&gt;declare_tile(<span class="stringliteral">&quot;dst_h&quot;</span>, <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>)));</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_gid_0 = writer-&gt;declare_tile(<span class="stringliteral">&quot;gid_0&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_gid_1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;gid_1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_gid_2 = writer-&gt;declare_tile(<span class="stringliteral">&quot;gid_2&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    writer-&gt;op_get_global_id(tile_gid_0, 0);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    writer-&gt;op_get_global_id(tile_gid_1, 1);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    writer-&gt;op_get_global_id(tile_gid_2, 2);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keyword">auto</span> &amp;tile_co = writer-&gt;declare_tile(<span class="stringliteral">&quot;co&quot;</span>, ckw::DataType::Int32); <span class="comment">// OFM</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keyword">auto</span> &amp;tile_xo = writer-&gt;declare_tile(<span class="stringliteral">&quot;xo&quot;</span>, ckw::DataType::Int32); <span class="comment">// WIDTH</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keyword">auto</span> &amp;tile_yo = writer-&gt;declare_tile(<span class="stringliteral">&quot;yo&quot;</span>, ckw::DataType::Int32); <span class="comment">// HEIGHT</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keyword">auto</span> &amp;tile_bo = writer-&gt;declare_tile(<span class="stringliteral">&quot;bo&quot;</span>, ckw::DataType::Int32); <span class="comment">// BATCH SIZE IDX</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="comment">// Get the boundary aware coordinates at each global dimension index</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abd9eddc31ead31aebb93c3b844a27fe3">get_coord</a>(writer, tile_co, tile_gid_0, n0, partial_n0, tile_co.name() + <span class="stringliteral">&quot;_dim0_&quot;</span>, tile_0);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abd9eddc31ead31aebb93c3b844a27fe3">get_coord</a>(writer, tile_xo, tile_gid_1, 1, 0, tile_xo.name() + <span class="stringliteral">&quot;_dim1_&quot;</span>, tile_0);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abd9eddc31ead31aebb93c3b844a27fe3">get_coord</a>(writer, tile_yo, tile_gid_2, 1, 0, tile_yo.name() + <span class="stringliteral">&quot;_dim2_&quot;</span>, tile_0);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abd9eddc31ead31aebb93c3b844a27fe3">get_coord</a>(writer, tile_bo, tile_gid_2, 1, 0, tile_yo.name() + <span class="stringliteral">&quot;_dim3_&quot;</span>, tile_0);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="comment">// yo = coord_dim2 % dst_h</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="comment">// bo = coord_dim2 / dst_h</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    writer-&gt;op_binary_expression(tile_yo, tile_yo, BinaryOp::Mod, tile_dst_h);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    writer-&gt;op_binary_expression(tile_bo, tile_bo, BinaryOp::Div, tile_dst_h);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_xi_f = writer-&gt;declare_tile(<span class="stringliteral">&quot;xi_f&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_yi_f = writer-&gt;declare_tile(<span class="stringliteral">&quot;yi_f&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">switch</span> (_attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a440e2b1d9950d5d0bd5e60add33eb903">sampling_policy</a>())</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">SamplingPolicy::TOP_LEFT</a>:</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            <span class="comment">// xi_f = (xo * scale_x)</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <span class="comment">// yi_f = (yo * scale_y)</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            writer-&gt;op_binary_expression(tile_xi_f, tile_xo, BinaryOp::Mul, tile_scale_x);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            writer-&gt;op_binary_expression(tile_yi_f, tile_yo, BinaryOp::Mul, tile_scale_y);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">SamplingPolicy::CENTER</a>:</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <span class="comment">// xi_f = ((xo + 0.5f) * scale_x - 0.5f)</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="comment">// yi_f = ((yo + 0.5f) * scale_y - 0.5f)</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_xo_plus_half = writer-&gt;declare_tile(<span class="stringliteral">&quot;xo_plus_half&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_yo_plus_half = writer-&gt;declare_tile(<span class="stringliteral">&quot;yo_plus_half&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            writer-&gt;op_binary_expression(tile_xo_plus_half, tile_xo, BinaryOp::Add, tile_half);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            writer-&gt;op_binary_expression(tile_yo_plus_half, tile_yo, BinaryOp::Add, tile_half);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            writer-&gt;op_binary_expression(tile_xi_f, tile_xo_plus_half, BinaryOp::Mul, tile_scale_x);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            writer-&gt;op_binary_expression(tile_yi_f, tile_yo_plus_half, BinaryOp::Mul, tile_scale_y);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            writer-&gt;op_binary_expression(tile_xi_f, tile_xi_f, BinaryOp::Sub, tile_half);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            writer-&gt;op_binary_expression(tile_yi_f, tile_yi_f, BinaryOp::Sub, tile_half);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported sampling policy&quot;</span>);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    }</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160; </div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="comment">// xi = (int)floor(xi_f);</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="comment">// yi = (int)floor(yi_f);</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_xi_f_floor = writer-&gt;declare_tile(<span class="stringliteral">&quot;xi_f_floor&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_yi_f_floor = writer-&gt;declare_tile(<span class="stringliteral">&quot;yi_f_floor&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    writer-&gt;op_unary_elementwise_function(tile_xi_f_floor, UnaryFunction::Floor, tile_xi_f);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    writer-&gt;op_unary_elementwise_function(tile_yi_f_floor, UnaryFunction::Floor, tile_yi_f);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; </div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_xi = writer-&gt;declare_tile(<span class="stringliteral">&quot;xi&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_yi = writer-&gt;declare_tile(<span class="stringliteral">&quot;yi&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    writer-&gt;op_cast_expression(tile_xi, tile_xi_f_floor, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    writer-&gt;op_cast_expression(tile_yi, tile_yi_f_floor, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="comment">// xi0  = clamp(xi, 0, (int)src_w - 1);</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="comment">// yi0  = clamp(yi, 0, (int)src_h - 1);</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="comment">// xi1  = clamp(xi + 1, 0, (int)src_w - 1);</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="comment">// yi1  = clamp(yi + 1, 0, (int)src_h - 1);</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_src_w_minus_1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;src_w_minus_1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_src_h_minus_1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;src_h_minus_1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    writer-&gt;op_binary_expression(tile_src_w_minus_1, tile_src_w, BinaryOp::Sub, tile_1);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    writer-&gt;op_binary_expression(tile_src_h_minus_1, tile_src_h, BinaryOp::Sub, tile_1);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_xi_plus_1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;xi_plus_1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_yi_plus_1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;yi_plus_1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    writer-&gt;op_binary_expression(tile_xi_plus_1, tile_xi, BinaryOp::Add, tile_1);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    writer-&gt;op_binary_expression(tile_yi_plus_1, tile_yi, BinaryOp::Add, tile_1);</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160; </div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keyword">auto</span> &amp;tile_xi0 = writer-&gt;declare_tile(<span class="stringliteral">&quot;xi0&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keyword">auto</span> &amp;tile_yi0 = writer-&gt;declare_tile(<span class="stringliteral">&quot;yi0&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keyword">auto</span> &amp;tile_xi1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;xi1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keyword">auto</span> &amp;tile_yi1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;yi1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    writer-&gt;op_ternary_elementwise_function(tile_xi0, TernaryFunction::Clamp, tile_xi, tile_0, tile_src_w_minus_1);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    writer-&gt;op_ternary_elementwise_function(tile_yi0, TernaryFunction::Clamp, tile_yi, tile_0, tile_src_h_minus_1);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    writer-&gt;op_ternary_elementwise_function(tile_xi1, TernaryFunction::Clamp, tile_xi_plus_1, tile_0,</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                                            tile_src_w_minus_1);</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    writer-&gt;op_ternary_elementwise_function(tile_yi1, TernaryFunction::Clamp, tile_yi_plus_1, tile_0,</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                                            tile_src_h_minus_1);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    TensorTileSampler in_sampler;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    in_sampler.x(tile_co);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    in_sampler.b(tile_bo);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    in_sampler.height(1);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    in_sampler.width(n0);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="comment">// We guarantee to not have out-of-bounds accesses</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    in_sampler.format(TensorSamplerFormat::C_W_H);</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    in_sampler.address_mode_x(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeX::None</a>);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    in_sampler.address_mode_y(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeY::None</a>);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    in_sampler.address_mode_z(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeZ::None</a>);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160; </div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    TensorTileSampler in00_sampler = in_sampler;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    in00_sampler.y(tile_xi0);</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    in00_sampler.z(tile_yi0);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160; </div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    TensorTileSampler in01_sampler = in_sampler;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    in01_sampler.y(tile_xi1);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    in01_sampler.z(tile_yi0);</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    TensorTileSampler in10_sampler = in_sampler;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    in10_sampler.y(tile_xi0);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    in10_sampler.z(tile_yi1);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160; </div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    TensorTileSampler in11_sampler = in_sampler;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    in11_sampler.y(tile_xi1);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    in11_sampler.z(tile_yi1);</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keyword">auto</span> &amp;tile_in00 = writer-&gt;declare_tile(<span class="stringliteral">&quot;in00&quot;</span>, TileInfo(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">to_ckw</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()), 1, n0));</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">auto</span> &amp;tile_in01 = writer-&gt;declare_tile(<span class="stringliteral">&quot;in01&quot;</span>, TileInfo(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">to_ckw</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()), 1, n0));</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keyword">auto</span> &amp;tile_in10 = writer-&gt;declare_tile(<span class="stringliteral">&quot;in10&quot;</span>, TileInfo(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">to_ckw</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()), 1, n0));</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keyword">auto</span> &amp;tile_in11 = writer-&gt;declare_tile(<span class="stringliteral">&quot;in11&quot;</span>, TileInfo(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">to_ckw</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()), 1, n0));</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    writer-&gt;op_load(tile_in00, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor(), in00_sampler);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    writer-&gt;op_load(tile_in01, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor(), in01_sampler);</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    writer-&gt;op_load(tile_in10, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor(), in10_sampler);</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    writer-&gt;op_load(tile_in11, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor(), in11_sampler);</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160; </div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    TensorTileSampler dst_sampler;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    dst_sampler.x(tile_co);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    dst_sampler.y(tile_xo);</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    dst_sampler.z(tile_yo);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    dst_sampler.b(tile_bo);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    dst_sampler.height(m0);</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    dst_sampler.width(n0);</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    dst_sampler.format(TensorSamplerFormat::C_W_H);</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="comment">// Do not write to the same memory location with multiple threads</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    dst_sampler.address_mode_x(TensorSamplerAddressModeX::OverlappingMin);</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    dst_sampler.address_mode_y(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeY::None</a>);</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    dst_sampler.address_mode_z(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeZ::None</a>);</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160; </div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keyword">auto</span> &amp;tile_dst = writer-&gt;declare_tile(<span class="stringliteral">&quot;dst&quot;</span>, TileInfo(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">to_ckw</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()), m0, n0));</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;init_virtual_tensor(tile_dst, dst_sampler);</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160; </div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="comment">// Weights of each nearest pixel</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_a  = writer-&gt;declare_tile(<span class="stringliteral">&quot;a&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_b  = writer-&gt;declare_tile(<span class="stringliteral">&quot;b&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_a1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;a1&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_b1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;b1&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160; </div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="comment">// a = (xi_f - (float)xi)</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="comment">// b = (1.f - a)</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="comment">// a1 = (yi_f - (float)yi)</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="comment">// b1 = (1.f - a1)</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_xi_float = writer-&gt;declare_tile(<span class="stringliteral">&quot;xi_float&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_yi_float = writer-&gt;declare_tile(<span class="stringliteral">&quot;yi_float&quot;</span>, ckw::DataType::Fp32);</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    writer-&gt;op_cast_expression(tile_xi_float, tile_xi, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    writer-&gt;op_cast_expression(tile_yi_float, tile_yi, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160; </div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    writer-&gt;op_binary_expression(tile_a, tile_xi_f, BinaryOp::Sub, tile_xi_float);</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    writer-&gt;op_binary_expression(tile_b, tile_1, BinaryOp::Sub, tile_a);</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    writer-&gt;op_binary_expression(tile_a1, tile_yi_f, BinaryOp::Sub, tile_yi_float);</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    writer-&gt;op_binary_expression(tile_b1, tile_1, BinaryOp::Sub, tile_a1);</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160; </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()))</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    {</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="comment">// Cast weights to source type</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_a_src_type  = writer-&gt;declare_tile(<span class="stringliteral">&quot;a_src_t&quot;</span>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">to_ckw</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()));</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_b_src_type  = writer-&gt;declare_tile(<span class="stringliteral">&quot;b_src_t&quot;</span>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">to_ckw</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()));</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_a1_src_type = writer-&gt;declare_tile(<span class="stringliteral">&quot;a1_src_t&quot;</span>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">to_ckw</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()));</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_b1_src_type = writer-&gt;declare_tile(<span class="stringliteral">&quot;b1_src_t&quot;</span>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">to_ckw</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()));</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160; </div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        writer-&gt;op_cast_expression(tile_a_src_type, tile_a, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        writer-&gt;op_cast_expression(tile_b_src_type, tile_b, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        writer-&gt;op_cast_expression(tile_a1_src_type, tile_a1, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        writer-&gt;op_cast_expression(tile_b1_src_type, tile_b1, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160; </div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="comment">// in00 * b * b1</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        writer-&gt;op_binary_expression(tile_in00, tile_in00, BinaryOp::Mul, tile_b_src_type);</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        writer-&gt;op_binary_expression(tile_in00, tile_in00, BinaryOp::Mul, tile_b1_src_type);</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160; </div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="comment">// in01 * a * b1</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        writer-&gt;op_binary_expression(tile_in01, tile_in01, BinaryOp::Mul, tile_a_src_type);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        writer-&gt;op_binary_expression(tile_in01, tile_in01, BinaryOp::Mul, tile_b1_src_type);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160; </div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="comment">// in10 * b * a1</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        writer-&gt;op_binary_expression(tile_in10, tile_in10, BinaryOp::Mul, tile_b_src_type);</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        writer-&gt;op_binary_expression(tile_in10, tile_in10, BinaryOp::Mul, tile_a1_src_type);</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160; </div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <span class="comment">// in11 * a * a1</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        writer-&gt;op_binary_expression(tile_in11, tile_in11, BinaryOp::Mul, tile_a_src_type);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        writer-&gt;op_binary_expression(tile_in11, tile_in11, BinaryOp::Mul, tile_a1_src_type);</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160; </div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="comment">// Summation of above terms</span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        writer-&gt;op_assign(tile_dst, tile_in00);</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        writer-&gt;op_binary_expression(tile_dst, tile_dst, BinaryOp::Add, tile_in01);</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        writer-&gt;op_binary_expression(tile_dst, tile_dst, BinaryOp::Add, tile_in10);</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        writer-&gt;op_binary_expression(tile_dst, tile_dst, BinaryOp::Add, tile_in11);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    }</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    {</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="comment">// Cast to float</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_in00_f = writer-&gt;declare_tile(<span class="stringliteral">&quot;in00_f&quot;</span>, TileInfo(ckw::DataType::Fp32, 1, n0));</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_in01_f = writer-&gt;declare_tile(<span class="stringliteral">&quot;in01_f&quot;</span>, TileInfo(ckw::DataType::Fp32, 1, n0));</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_in10_f = writer-&gt;declare_tile(<span class="stringliteral">&quot;in10_f&quot;</span>, TileInfo(ckw::DataType::Fp32, 1, n0));</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;tile_in11_f = writer-&gt;declare_tile(<span class="stringliteral">&quot;in11_f&quot;</span>, TileInfo(ckw::DataType::Fp32, 1, n0));</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        writer-&gt;op_cast_expression(tile_in00_f, tile_in00, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        writer-&gt;op_cast_expression(tile_in01_f, tile_in01, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        writer-&gt;op_cast_expression(tile_in10_f, tile_in10, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        writer-&gt;op_cast_expression(tile_in11_f, tile_in11, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>);</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160; </div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        <span class="comment">// in00 * b * b1</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        writer-&gt;op_binary_expression(tile_in00_f, tile_in00_f, BinaryOp::Mul, tile_b);</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        writer-&gt;op_binary_expression(tile_in00_f, tile_in00_f, BinaryOp::Mul, tile_b1);</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160; </div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="comment">// in01 * a * b1</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        writer-&gt;op_binary_expression(tile_in01_f, tile_in01_f, BinaryOp::Mul, tile_a);</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        writer-&gt;op_binary_expression(tile_in01_f, tile_in01_f, BinaryOp::Mul, tile_b1);</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160; </div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="comment">// in10 * b * a1</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        writer-&gt;op_binary_expression(tile_in10_f, tile_in10_f, BinaryOp::Mul, tile_b);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        writer-&gt;op_binary_expression(tile_in10_f, tile_in10_f, BinaryOp::Mul, tile_a1);</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160; </div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="comment">// in11 * a * a1</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        writer-&gt;op_binary_expression(tile_in11_f, tile_in11_f, BinaryOp::Mul, tile_a);</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        writer-&gt;op_binary_expression(tile_in11_f, tile_in11_f, BinaryOp::Mul, tile_a1);</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160; </div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="comment">// Summation of above terms</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        writer-&gt;op_binary_expression(tile_in00_f, tile_in00_f, BinaryOp::Add, tile_in01_f);</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        writer-&gt;op_binary_expression(tile_in00_f, tile_in00_f, BinaryOp::Add, tile_in10_f);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        writer-&gt;op_binary_expression(tile_in00_f, tile_in00_f, BinaryOp::Add, tile_in11_f);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160; </div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        <span class="comment">// Cast to destination type with saturation</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        writer-&gt;op_cast_expression(tile_dst, tile_in00_f, ckw::ConvertPolicy::Saturate);</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    }</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;}</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160; </div>
<div class="line"><a name="l00474"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#ac794f053c37af9bdaf61039dbff80cac">  474</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#ac794f053c37af9bdaf61039dbff80cac">GpuCkwResize::write_component_code</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">ComponentGroup</a>    &amp;comp_group,</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                                        <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table.xhtml">GpuCkwVariableTable</a>     &amp;vtable,</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                                        <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_scoped_kernel_writer.xhtml">GpuCkwScopedKernelWriter</a> writer)<span class="keyword"> const</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <span class="keywordflow">switch</span> (_attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a731cec8d591c8fdc2c8d368b0563089c">interpolation_policy</a>())</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    {</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">InterpolationPolicy::NEAREST_NEIGHBOR</a>:</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            do_nearest_neighbor_resize(comp_group, vtable, writer);</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>:</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            do_bilinear_resize(comp_group, vtable, writer);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported interpolation policy&quot;</span>);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    }</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;}</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160; </div>
<div class="line"><a name="l00491"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">  491</a></span>&#160;<a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">GpuCkwResize::get_window</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>().<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">total_size</a>() == 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, <span class="stringliteral">&quot;Destination tensor is not initialized&quot;</span>);</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160; </div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n0  = <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(opencl_vector_size_in_bytes / _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a>(), _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0));</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>             win = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(*_dst, <a class="code" href="classarm__compute_1_1_steps.xhtml">Steps</a>(n0));</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">return</span> win.<a class="code" href="classarm__compute_1_1_window.xhtml#af6303f954929d2bdac13a4712ecf9711">collapse</a>(win, <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;}</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160; </div>
<div class="line"><a name="l00500"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#a064cea9c8ee6031faa74d41eb3a11d9d">  500</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#a064cea9c8ee6031faa74d41eb3a11d9d">GpuCkwResize::get_tuner_id</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">ComponentGroup</a> &amp;comp_group)<span class="keyword"> const</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(comp_group);</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160; </div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    std::string tuner_id = <span class="stringliteral">&quot;resize_&quot;</span>;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    tuner_id += _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a731cec8d591c8fdc2c8d368b0563089c">interpolation_policy</a>() == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">InterpolationPolicy::NEAREST_NEIGHBOR</a> ? <span class="stringliteral">&quot;nearest_neighbor&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    tuner_id += _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a731cec8d591c8fdc2c8d368b0563089c">interpolation_policy</a>() == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a> ? <span class="stringliteral">&quot;bilinear&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    tuner_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    tuner_id += _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a440e2b1d9950d5d0bd5e60add33eb903">sampling_policy</a>() == <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">SamplingPolicy::CENTER</a> ? <span class="stringliteral">&quot;center&quot;</span> : <span class="stringliteral">&quot;topleft&quot;</span>;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    tuner_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    tuner_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0));</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    tuner_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    tuner_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1));</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    tuner_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    tuner_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(2));</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    tuner_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    tuner_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(3));</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160; </div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keywordflow">return</span> tuner_id;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;}</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160; </div>
<div class="line"><a name="l00521"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#a57fa0fc38a7a23597a14423a4c6d5dc8">  521</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#a57fa0fc38a7a23597a14423a4c6d5dc8">GpuCkwResize::get_name</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">ComponentGroup</a> &amp;comp_group)<span class="keyword"> const</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(comp_group);</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160; </div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    std::string <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a> = <span class="stringliteral">&quot;resize_&quot;</span>;</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a> += _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a731cec8d591c8fdc2c8d368b0563089c">interpolation_policy</a>() == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">InterpolationPolicy::NEAREST_NEIGHBOR</a> ? <span class="stringliteral">&quot;nearest_neighbor&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a> += _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a731cec8d591c8fdc2c8d368b0563089c">interpolation_policy</a>() == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a> ? <span class="stringliteral">&quot;bilinear&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160; </div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;}</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160; </div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;} <span class="comment">// namespace experimental</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_steps_xhtml"><div class="ttname"><a href="classarm__compute_1_1_steps.xhtml">arm_compute::Steps</a></div><div class="ttdoc">Class to describe a number of elements in each dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_steps_8h_source.xhtml#l00040">Steps.h:40</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="a_string_support_8h_xhtml"><div class="ttname"><a href="_string_support_8h.xhtml">StringSupport.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a367b5090ab432bc7de2c32369e087ab1"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">arm_compute::ITensorInfo::data_layout</a></div><div class="ttdeci">virtual DataLayout data_layout() const =0</div><div class="ttdoc">Get the data layout of the tensor.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="a_adjust_vec_size_8h_xhtml"><div class="ttname"><a href="_adjust_vec_size_8h.xhtml">AdjustVecSize.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize_xhtml_a57fa0fc38a7a23597a14423a4c6d5dc8"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#a57fa0fc38a7a23597a14423a4c6d5dc8">arm_compute::experimental::dynamic_fusion::GpuCkwResize::get_name</a></div><div class="ttdeci">std::string get_name(const ComponentGroup &amp;comp_group) const override</div><div class="ttdoc">Generate the name of the component.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_resize_8cpp_source.xhtml#l00521">GpuCkwResize.cpp:521</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00029">WindowHelpers.cpp:29</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">arm_compute::SamplingPolicy::TOP_LEFT</a></div><div class="ttdeci">@ TOP_LEFT</div><div class="ttdoc">Samples are taken at pixel top left corner.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_aa459796b5489eca8a9160cb5dcf1a103"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">arm_compute::ITensorInfo::element_size</a></div><div class="ttdeci">virtual size_t element_size() const =0</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels()</div></div>
<div class="ttc" id="a_gpu_ckw_kernel_writer_8h_xhtml"><div class="ttname"><a href="_gpu_ckw_kernel_writer_8h.xhtml">GpuCkwKernelWriter.h</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">arm_compute::experimental::dynamic_fusion::ArgumentPack</a></div><div class="ttdoc">This is a generic class that packs the arguments of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_argument_pack_8h_source.xhtml#l00046">ArgumentPack.h:46</a></div></div>
<div class="ttc" id="a_gpu_kernel_component_group_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_component_group_8h.xhtml">GpuKernelComponentGroup.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdeci">@ WIDTH</div><div class="ttdoc">width</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver_xhtml_a2b1fb10e2eeb3bcea23a8bd60296ca7c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">arm_compute::experimental::dynamic_fusion::IGpuCkwComponentDriver::id</a></div><div class="ttdeci">ComponentId id() const</div><div class="ttdoc">Get component id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00127">IGpuCkwComponentDriver.h:127</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml">arm_compute::experimental::dynamic_fusion::ResizeAttributes</a></div><div class="ttdoc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_resize_attributes_8h_source.xhtml#l00043">ResizeAttributes.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml_a81cf6107131a3583e2b0b762cb9c2862"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00065">SaturateCast.h:65</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table.xhtml">arm_compute::experimental::dynamic_fusion::GpuCkwVariableTable</a></div><div class="ttdoc">A table of all the variables used in the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_variable_table_8h_source.xhtml#l00049">GpuCkwVariableTable.h:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize_xhtml_a064cea9c8ee6031faa74d41eb3a11d9d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#a064cea9c8ee6031faa74d41eb3a11d9d">arm_compute::experimental::dynamic_fusion::GpuCkwResize::get_tuner_id</a></div><div class="ttdeci">std::string get_tuner_id(const ComponentGroup &amp;comp_group) const override</div><div class="ttdoc">Generate the tuner id of the component This id should capture all the parameters that distinguish one...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_resize_8cpp_source.xhtml#l00500">GpuCkwResize.cpp:500</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdeci">@ HEIGHT</div><div class="ttdoc">height</div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_af6303f954929d2bdac13a4712ecf9711"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#af6303f954929d2bdac13a4712ecf9711">arm_compute::Window::collapse</a></div><div class="ttdeci">Window collapse(const Window &amp;full_window, size_t first, size_t last=Coordinates::num_max_dimensions) const</div><div class="ttdoc">Collapse the dimensions between first and last.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00125">Window.inl:125</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdeci">@ ACL_DST</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_a0fdcb923dfd4c74858cc2bc326321efb"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">arm_compute::TensorShape::total_size</a></div><div class="ttdeci">size_t total_size() const</div><div class="ttdoc">Collapses all dimensions to a single linear total size.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00175">TensorShape.h:175</a></div></div>
<div class="ttc" id="a_writer_helper_8h_xhtml"><div class="ttname"><a href="_writer_helper_8h.xhtml">WriterHelper.h</a></div></div>
<div class="ttc" id="a_window_helpers_8h_xhtml"><div class="ttname"><a href="_window_helpers_8h.xhtml">WindowHelpers.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aaaab31fd732b950bf0d4b98f00e259c0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaaab31fd732b950bf0d4b98f00e259c0">arm_compute::test::validation::scale_y</a></div><div class="ttdeci">const float scale_y</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00260">Scale.cpp:260</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="a_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00066">NEBatchNormalizationLayerKernel.cpp:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml">arm_compute::experimental::dynamic_fusion::IGpuCkwComponentDriver</a></div><div class="ttdoc">An interface used by GpuCkwDriver to write source code for a kernel component.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00066">IGpuCkwComponentDriver.h:66</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="a_gpu_ckw_scoped_kernel_writer_8h_xhtml"><div class="ttname"><a href="_gpu_ckw_scoped_kernel_writer_8h.xhtml">GpuCkwScopedKernelWriter.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_abd9eddc31ead31aebb93c3b844a27fe3"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abd9eddc31ead31aebb93c3b844a27fe3">arm_compute::experimental::dynamic_fusion::get_coord</a></div><div class="ttdeci">void get_coord(GpuCkwScopedKernelWriter writer, TileOperand &amp;coord, const TileOperand &amp;gid, int32_t step_v, int32_t leftover_step_v, const std::string &amp;prefix, const TileOperand &amp;const_0)</div><div class="ttdoc">Get boundary aware coordinate along one axis.</div><div class="ttdef"><b>Definition:</b> <a href="_writer_helper_8h_source.xhtml#l00087">WriterHelper.h:87</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ae78a2afc8cb469d8629dc419237e5c68"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae78a2afc8cb469d8629dc419237e5c68">arm_compute::test::validation::scale_x</a></div><div class="ttdeci">const float scale_x</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00259">Scale.cpp:259</a></div></div>
<div class="ttc" id="a_gpu_kernel_argument_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_argument_8h.xhtml">GpuKernelArgument.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">arm_compute::InterpolationPolicy::BILINEAR</a></div><div class="ttdeci">@ BILINEAR</div><div class="ttdoc">Output values are defined by bilinear interpolation between the pixels.</div></div>
<div class="ttc" id="a_scale_utils_8h_xhtml"><div class="ttname"><a href="_scale_utils_8h.xhtml">ScaleUtils.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_afff13da4ff0bb0cd14e24f19743c8225"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">arm_compute::experimental::dynamic_fusion::ComponentId</a></div><div class="ttdeci">int32_t ComponentId</div><div class="ttdoc">Uniquely identifies a kernel component within a workload.</div><div class="ttdef"><b>Definition:</b> <a href="src_2dynamic__fusion_2sketch_2gpu_2components_2_types_8h_source.xhtml#l00037">Types.h:37</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00201">Helpers.inl:201</a></div></div>
<div class="ttc" id="a_gpu_ckw_resize_8h_xhtml"><div class="ttname"><a href="_gpu_ckw_resize_8h.xhtml">GpuCkwResize.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes_xhtml_a4224060ec00e60ea33aab588e2d48189"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a4224060ec00e60ea33aab588e2d48189">arm_compute::experimental::dynamic_fusion::ResizeAttributes::align_corners</a></div><div class="ttdeci">ResizeAttributes &amp; align_corners(bool align_corners)</div><div class="ttdoc">Set align corners.</div><div class="ttdef"><b>Definition:</b> <a href="_resize_attributes_8cpp_source.xhtml#l00077">ResizeAttributes.cpp:77</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize_xhtml_ae744fb5fb66aa1ce9db14ba93eab24e3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">arm_compute::experimental::dynamic_fusion::GpuCkwResize::get_window</a></div><div class="ttdeci">Window get_window() const override</div><div class="ttdoc">Generate the execution window for the component.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_resize_8cpp_source.xhtml#l00491">GpuCkwResize.cpp:491</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_acbae697336efd01a1b964274b4212767"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">arm_compute::experimental::dynamic_fusion::to_ckw</a></div><div class="ttdeci">ckw::DataType to_ckw(DataType dt)</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__fusion_2sketch_2gpu_2ckw__driver_2components_2utils_2type__converter_2_common_8h_source.xhtml#l00040">Common.h:40</a></div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_ac7485dcc8d256a6f197ed7802687f252"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">tf_frozen_model_extractor.None</a></div><div class="ttdeci">None</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00041">tf_frozen_model_extractor.py:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes_xhtml_a731cec8d591c8fdc2c8d368b0563089c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a731cec8d591c8fdc2c8d368b0563089c">arm_compute::experimental::dynamic_fusion::ResizeAttributes::interpolation_policy</a></div><div class="ttdeci">ResizeAttributes &amp; interpolation_policy(InterpolationPolicy interpolation_policy)</div><div class="ttdoc">Set interpolation policy.</div><div class="ttdef"><b>Definition:</b> <a href="_resize_attributes_8cpp_source.xhtml#l00055">ResizeAttributes.cpp:55</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a7be62dcb9603165af78bca6f2ca8ec15"><div class="ttname"><a href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">arm_compute::adjust_vec_size</a></div><div class="ttdeci">unsigned int adjust_vec_size(unsigned int vec_size, size_t dim0)</div><div class="ttdoc">Returns the adjusted vector size in case it is less than the input's first dimension,...</div><div class="ttdef"><b>Definition:</b> <a href="_adjust_vec_size_8h_source.xhtml#l00038">AdjustVecSize.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_af5982a092e9eb743fce2d6392bdd8897"><div class="ttname"><a href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">arm_compute::is_data_type_float</a></div><div class="ttdeci">bool is_data_type_float(DataType dt)</div><div class="ttdoc">Check if a given data type is of floating point type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00304">DataTypeUtils.h:304</a></div></div>
<div class="ttc" id="adynamic__fusion_2sketch_2gpu_2ckw__driver_2components_2utils_2type__converter_2_common_8h_xhtml"><div class="ttname"><a href="dynamic__fusion_2sketch_2gpu_2ckw__driver_2components_2utils_2type__converter_2_common_8h.xhtml">Common.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1scale__utils_xhtml_a8c25b29542a5312b947f72e5ea5c825b"><div class="ttname"><a href="namespacearm__compute_1_1scale__utils.xhtml#a8c25b29542a5312b947f72e5ea5c825b">arm_compute::scale_utils::calculate_resize_ratio</a></div><div class="ttdeci">float calculate_resize_ratio(size_t input_size, size_t output_size, bool align_corners=false)</div><div class="ttdoc">Returns resize ratio between input and output with consideration of aligned corners.</div><div class="ttdef"><b>Definition:</b> <a href="_scale_utils_8cpp_source.xhtml#l00032">ScaleUtils.cpp:32</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver_xhtml_a6c87c6e19567bc42bc52d166728c4461"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">arm_compute::experimental::dynamic_fusion::IGpuCkwComponentDriver::tensors</a></div><div class="ttdeci">ArgumentPack&lt; ITensorInfo &gt; tensors() const</div><div class="ttdoc">Get tensor arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00096">IGpuCkwComponentDriver.h:96</a></div></div>
<div class="ttc" id="a_gpu_ckw_variable_table_8h_xhtml"><div class="ttname"><a href="_gpu_ckw_variable_table_8h.xhtml">GpuCkwVariableTable.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGroup</a></div><div class="ttdoc">A group of gpu kernel components to be fused together PRECONDITIONS:</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_group_8h_source.xhtml#l00061">GpuKernelComponentGroup.h:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">arm_compute::InterpolationPolicy::NEAREST_NEIGHBOR</a></div><div class="ttdeci">@ NEAREST_NEIGHBOR</div><div class="ttdoc">Output values are defined to match the source pixel whose center is nearest to the sample position.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">arm_compute::SamplingPolicy::CENTER</a></div><div class="ttdeci">@ CENTER</div><div class="ttdoc">Samples are taken at pixel center.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize_xhtml_ac0fb2ee11e39af41565ddd5a783bc281"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#ac0fb2ee11e39af41565ddd5a783bc281">arm_compute::experimental::dynamic_fusion::GpuCkwResize::GpuCkwResize</a></div><div class="ttdeci">GpuCkwResize(ComponentId id, const ArgumentPack&lt; ITensorInfo &gt; &amp;tensors, const Attributes &amp;attributes)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_resize_8cpp_source.xhtml#l00051">GpuCkwResize.cpp:51</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdeci">@ ACL_SRC</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a2daf774ab1f2b95de283245a361d455f"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">arm_compute::cpu::width_idx</a></div><div class="ttdeci">const size_t width_idx</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00037">impl.h:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize_xhtml_ac794f053c37af9bdaf61039dbff80cac"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml#ac794f053c37af9bdaf61039dbff80cac">arm_compute::experimental::dynamic_fusion::GpuCkwResize::write_component_code</a></div><div class="ttdeci">virtual void write_component_code(const ComponentGroup &amp;comp_group, GpuCkwVariableTable &amp;vtable, GpuCkwScopedKernelWriter writer) const override</div><div class="ttdoc">Generate kernel component code.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_resize_8cpp_source.xhtml#l00474">GpuCkwResize.cpp:474</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes_xhtml_a440e2b1d9950d5d0bd5e60add33eb903"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml#a440e2b1d9950d5d0bd5e60add33eb903">arm_compute::experimental::dynamic_fusion::ResizeAttributes::sampling_policy</a></div><div class="ttdeci">ResizeAttributes &amp; sampling_policy(SamplingPolicy sampling_policy)</div><div class="ttdoc">Set sampling policy.</div><div class="ttdef"><b>Definition:</b> <a href="_resize_attributes_8cpp_source.xhtml#l00066">ResizeAttributes.cpp:66</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_aa6d92f521dc4f05ac7f4c856dcfe263e"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">arm_compute::cpu::height_idx</a></div><div class="ttdeci">const size_t height_idx</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00038">impl.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_scoped_kernel_writer_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_scoped_kernel_writer.xhtml">arm_compute::experimental::dynamic_fusion::GpuCkwScopedKernelWriter</a></div><div class="ttdoc">Helper to automatically manage kernel writer ID space.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_scoped_kernel_writer_8h_source.xhtml#l00040">GpuCkwScopedKernelWriter.h:40</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_5ff8356557e4f59c6a20c3735e8d2267.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_729ca8b25cabcdcb8b11b571ea7b237a.xhtml">sketch</a></li><li class="navelem"><a class="el" href="dir_df94d166e0e6f49d063cb29fea25a88b.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_41286eb82ab9bcc453374927cfc10252.xhtml">ckw_driver</a></li><li class="navelem"><a class="el" href="dir_510767539347664ee40808f8989f21cf.xhtml">components</a></li><li class="navelem"><a class="el" href="_gpu_ckw_resize_8cpp.xhtml">GpuCkwResize.cpp</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:20:00 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
