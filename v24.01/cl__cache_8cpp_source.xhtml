<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: examples/cl_cache.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('cl__cache_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">cl_cache.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cl__cache_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2020 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_open_c_l_8h.xhtml">arm_compute/core/CL/OpenCL.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="runtime_2_c_l_2_c_l_helpers_8h.xhtml">arm_compute/runtime/CL/CLHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_c_l_2functions_2_c_l_permute_8h.xhtml">arm_compute/runtime/CL/functions/CLPermute.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_c_l_2_utils_8h.xhtml">arm_compute/runtime/CL/Utils.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;utils/Utils.h&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">using namespace </span>utils;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">class </span>CLCacheExample : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1utils_1_1_example.xhtml">Example</a></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    CLCacheExample() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordtype">bool</span> do_setup(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)<span class="keyword"> override</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Once the program has run and created the file cache.bin, rerun with --restore_cache.&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                  &lt;&lt; std::endl;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a56d8f451f6b30093a49f1b4978681b07">default_init</a>();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">if</span> (argc &gt; 1)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            std::string argv1 = argv[1];</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            std::transform(argv1.begin(), argv1.end(), argv1.begin(), ::<a class="code" href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">tolower</a>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">if</span> (argv1 == <span class="stringliteral">&quot;--restore_cache&quot;</span>)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                <span class="comment">// Load the precompiled kernels from a file into the kernel library, in this way the next time they are needed</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                <span class="comment">// compilation won&#39;t be required.</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#ac7ed63ed26f02dfeddba85858fad6ada">restore_program_cache_from_file</a>();</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                std::cout &lt;&lt; <span class="stringliteral">&quot;Unkown option &quot;</span> &lt;&lt; argv1 &lt;&lt; std::endl;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="comment">// Initialise shapes</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        init_tensor(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(8U, 4U, 2U), tensor_nchw, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        init_tensor(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(2U, 8U, 4U), tensor_nhwc, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        init_tensor(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(8U, 4U, 2U), tensor_nchw_result, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment">// Create the permutation vector to turn a NCHW tensor to NHWC.</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="comment">// The input tensor is NCHW, which means that the fastest changing coordinate is W=8U.</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="comment">// For permutation vectors the fastest changing coordinate is the one on the left too.</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="comment">// Each element in the permutation vector specifies a mapping from the source tensor to the destination one, thus if we</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="comment">// use 2U in the permutation vector&#39;s first element we are telling the function to move the channels to the fastest</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="comment">// changing coordinate in the destination tensor.</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">PermutationVector</a> vector_nchw_to_nhwc(2U, 0U, 1U);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        permute_nhwc.configure(&amp;tensor_nchw, &amp;tensor_nhwc, vector_nchw_to_nhwc);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="comment">// Allocate and fill tensors</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        tensor_nhwc.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        tensor_nchw.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(tensor_nchw);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="comment">// Demostrate autoconfigure for the output tensor</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">PermutationVector</a> vector_nhwc_to_nchw(1U, 2U, 0U);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        permute_nchw.configure(&amp;tensor_nhwc, &amp;tensor_nchw_result, vector_nhwc_to_nchw);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        tensor_nchw_result.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="comment">// Save the opencl kernels to a file</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a3a3405e0e787bc6d6298ff7a2d52e5e4">save_program_cache_to_file</a>();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">void</span> do_run()<span class="keyword"> override</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        permute_nhwc.run();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        permute_nchw.run();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">void</span> do_teardown()<span class="keyword"> override</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">void</span> validate_result(<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> &amp;reference, <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> &amp;result)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        reference.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        result.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> window;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        window.<a class="code" href="classarm__compute_1_1_window.xhtml#a14470b4cb59140a1b6ff3b8f16c89ab6">use_tensor_dimensions</a>(reference.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>());</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> it_ref(&amp;reference, window);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> it_res(&amp;result, window);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            window,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;) {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                assert(*<span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(it_ref.ptr()) ==</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                       *<span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(it_res.ptr()));</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            },</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            it_ref, it_res);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        reference.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        result.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> window;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        window.<a class="code" href="classarm__compute_1_1_window.xhtml#a14470b4cb59140a1b6ff3b8f16c89ab6">use_tensor_dimensions</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>());</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a>      it_tensor(&amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, window);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> val(0);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            window, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;) { *<span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(it_tensor.ptr()) = val++; },</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            it_tensor);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">void</span> init_tensor(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> layout)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, 1, <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>).<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59cb3ec4cae7835d0a0283be56ef789">set_data_layout</a>(layout));</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>  tensor_nchw{};</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>  tensor_nhwc{};</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>  tensor_nchw_result{};</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_permute.xhtml">CLPermute</a> permute_nhwc{};</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_permute.xhtml">CLPermute</a> permute_nchw{};</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;};</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">/** Main program creating an example that demostrates how to load precompiled kernels from a file.</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment"> * @param[in] argc Number of arguments</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"> * @param[in] argv Arguments</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="cl__cache_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">  155</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="cl__cache_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">return</span> utils::run_example&lt;CLCacheExample&gt;(argc, argv);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdeci">@ NCHW</div><div class="ttdoc">Num samples, channels, height, width.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">arm_compute::graph::ConvolutionMethod::Default</a></div><div class="ttdeci">@ Default</div><div class="ttdoc">Default approach using internal heuristics.</div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a0c40e87dd09c38533d746df32e9ca483a71cbccca38c1ea3c257cff95a92d41e2"><div class="ttname"><a href="_acl_types_8h.xhtml#a0c40e87dd09c38533d746df32e9ca483a71cbccca38c1ea3c257cff95a92d41e2">AclCpu</a></div><div class="ttdeci">@ AclCpu</div><div class="ttdoc">Cpu target that uses SIMD extensions.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00066">AclTypes.h:66</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_ae81948490ddf54e80a22593640178350"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#ae81948490ddf54e80a22593640178350">GemmTuner.required</a></div><div class="ttdeci">required</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00652">GemmTuner.py:652</a></div></div>
<div class="ttc" id="astruct_acl_allocator_xhtml"><div class="ttname"><a href="struct_acl_allocator.xhtml">AclAllocator</a></div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00099">AclTypes.h:99</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a1ffeb3b5abb3d61f62b58a391816201c"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">arm_compute::CLTensor::unmap</a></div><div class="ttdeci">void unmap()</div><div class="ttdoc">Enqueue an unmap operation of the allocated and mapped buffer.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00071">CLTensor.cpp:71</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a06403ad5596b5405787cfca12e5b815e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">arm_compute::test::validation::run</a></div><div class="ttdeci">lstmq run()</div></div>
<div class="ttc" id="agemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00261">gemm_interleaved.hpp:261</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utility_xhtml_abb96ad5c7071ec3a47ea5f07e817a636"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">arm_compute::utility::tolower</a></div><div class="ttdeci">std::string tolower(std::string string)</div><div class="ttdoc">Convert string to lower case.</div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00204">Utility.h:204</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a723a2d3874520624df4c3214ef0ec420"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a723a2d3874520624df4c3214ef0ec420">arm_compute::mlgo::parser::header</a></div><div class="ttdeci">void header(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00474">MLGOParser.cpp:474</a></div></div>
<div class="ttc" id="anamespaceadd__copyright_xhtml_aa28dc103258589d9cb421197fe2de90b"><div class="ttname"><a href="namespaceadd__copyright.xhtml#aa28dc103258589d9cb421197fe2de90b">add_copyright.path</a></div><div class="ttdeci">path</div><div class="ttdef"><b>Definition:</b> <a href="add__copyright_8py_source.xhtml#l00089">add_copyright.py:89</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ab26c0327042b802ca8cff46a9bc67670a10b4eb76294b70d7fd6df997ff06edb1"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab26c0327042b802ca8cff46a9bc67670a10b4eb76294b70d7fd6df997ff06edb1">arm_compute::experimental::dynamic_fusion::GpuComponentType::Complex</a></div><div class="ttdeci">@ Complex</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00110">CoreTypes.h:110</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdeci">@ NHWC</div><div class="ttdoc">Num samples, height, width, channels.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4aad4e206408c1c59bfb8a057ba7857446"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4aad4e206408c1c59bfb8a057ba7857446">arm_compute::detail::ObjectType::Context</a></div><div class="ttdeci">@ Context</div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_allocator_xhtml_af36143939a43fa124312e395975091ed"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">arm_compute::ITensorAllocator::init</a></div><div class="ttdeci">void init(const TensorInfo &amp;input, size_t alignment=0)</div><div class="ttdoc">Initialize a tensor based on the passed TensorInfo.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator.cpp:33</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_a73e352c61baaf9c1178da2d30105b04e"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a73e352c61baaf9c1178da2d30105b04e">arm_compute::support::cpp11::lowest</a></div><div class="ttdeci">T lowest()</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00278">ToolchainSupport.h:278</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a632a44487dc40eeaabc65c039ce4a246a76a2b4d702182be52cb658037bd55b58"><div class="ttname"><a href="_acl_types_8h.xhtml#a632a44487dc40eeaabc65c039ce4a246a76a2b4d702182be52cb658037bd55b58">AclPreferFastStart</a></div><div class="ttdeci">@ AclPreferFastStart</div><div class="ttdoc">Prioritize performance when a single iterations is expected to be performed.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00074">AclTypes.h:74</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a14470b4cb59140a1b6ff3b8f16c89ab6"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a14470b4cb59140a1b6ff3b8f16c89ab6">arm_compute::Window::use_tensor_dimensions</a></div><div class="ttdeci">void use_tensor_dimensions(const TensorShape &amp;shape, size_t first_dimension=Window::DimX)</div><div class="ttdoc">Use the tensor's dimensions to fill the window dimensions.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00290">Window.inl:290</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a14c53d2d17be6fa8a2c9861527c7b002"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">arm_compute::CLTensor::map</a></div><div class="ttdeci">void map(bool blocking=true)</div><div class="ttdoc">Enqueue a map operation of the allocated buffer.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00066">CLTensor.cpp:66</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ac7ed63ed26f02dfeddba85858fad6ada"><div class="ttname"><a href="namespacearm__compute.xhtml#ac7ed63ed26f02dfeddba85858fad6ada">arm_compute::restore_program_cache_from_file</a></div><div class="ttdeci">void restore_program_cache_from_file(const std::string &amp;filename=&quot;cache.bin&quot;)</div><div class="ttdoc">This function loads prebuilt opencl kernels from a file.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00035">Utils.cpp:35</a></div></div>
<div class="ttc" id="a_cpu_gemm_assembly_dispatch_8cpp_xhtml_ad92c19f85e6eee3a06810736da11329d"><div class="ttname"><a href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ad92c19f85e6eee3a06810736da11329d">sections</a></div><div class="ttdeci">unsigned int sections</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00107">CpuGemmAssemblyDispatch.cpp:107</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ae59cb3ec4cae7835d0a0283be56ef789"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59cb3ec4cae7835d0a0283be56ef789">arm_compute::test::validation::set_data_layout</a></div><div class="ttdeci">src_info set_data_layout(data_layout)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35da6c83d364c26a490210700ad9ac6ad236"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da6c83d364c26a490210700ad9ac6ad236">arm_compute::graph::Target::CLVK</a></div><div class="ttdeci">@ CLVK</div><div class="ttdoc">CLVK capable target device.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml">arm_compute::CLTensor</a></div><div class="ttdoc">Basic implementation of the OpenCL tensor interface.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml#l00041">CLTensor.h:41</a></div></div>
<div class="ttc" id="a_acl_entrypoints_8h_xhtml_a94b41b78fd18d9dbff5325f7636c8974"><div class="ttname"><a href="_acl_entrypoints_8h.xhtml#a94b41b78fd18d9dbff5325f7636c8974">AclMapTensor</a></div><div class="ttdeci">AclStatus AclMapTensor(AclTensor tensor, void **handle)</div><div class="ttdoc">Map a tensor's backing memory to the host.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_tensor_8cpp_source.xhtml#l00097">AclTensor.cpp:97</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a7c5b54128c108267837e7e999259e0e9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7c5b54128c108267837e7e999259e0e9">arm_compute::test::validation::backward</a></div><div class="ttdeci">auto backward</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00125">DFT.cpp:125</a></div></div>
<div class="ttc" id="anamespaceexamples_xhtml"><div class="ttname"><a href="namespaceexamples.xhtml">examples</a></div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_helpers_8h_source.xhtml#l00030">GemmTunerHelpers.h:30</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a79e20eacb1e963e24a21ebd7369effd7"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a79e20eacb1e963e24a21ebd7369effd7">arm_compute::TensorInfo::padding</a></div><div class="ttdeci">PaddingSize padding() const override</div><div class="ttdoc">Padding of tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00265">TensorInfo.h:265</a></div></div>
<div class="ttc" id="a_acl_entrypoints_8h_xhtml_a22a4f3406d18376e3d8740c72e3b2a35"><div class="ttname"><a href="_acl_entrypoints_8h.xhtml#a22a4f3406d18376e3d8740c72e3b2a35">AclUnmapTensor</a></div><div class="ttdeci">AclStatus AclUnmapTensor(AclTensor tensor, void *handle)</div><div class="ttdoc">Unmap the tensor's backing memory.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_tensor_8cpp_source.xhtml#l00116">AclTensor.cpp:116</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_strides_xhtml"><div class="ttname"><a href="classarm__compute_1_1_strides.xhtml">arm_compute::Strides</a></div><div class="ttdoc">Strides of an item in bytes.</div><div class="ttdef"><b>Definition:</b> <a href="_strides_8h_source.xhtml#l00038">Strides.h:38</a></div></div>
<div class="ttc" id="aarm__compute_2runtime_2_c_l_2functions_2_c_l_permute_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_c_l_2functions_2_c_l_permute_8h.xhtml">CLPermute.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4a722ad2d05ecf4868b00c5484b82fd808"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4a722ad2d05ecf4868b00c5484b82fd808">arm_compute::detail::ObjectType::Queue</a></div><div class="ttdeci">@ Queue</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6c0dcc38187027dcb89cd9724bc5a823"><div class="ttname"><a href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;...iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00074">Helpers.inl:74</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_iterator_xhtml"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml">arm_compute::Iterator</a></div><div class="ttdoc">Iterator updated by execute_window_loop for each window element.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00046">Helpers.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::DataType::U8</a></div><div class="ttdeci">@ U8</div><div class="ttdoc">unsigned 8-bit number</div></div>
<div class="ttc" id="anamespacecheck__header__guards_xhtml_af41dc620231ab9c2278a677cf579f05d"><div class="ttname"><a href="namespacecheck__header__guards.xhtml#af41dc620231ab9c2278a677cf579f05d">check_header_guards.include</a></div><div class="ttdeci">string include</div><div class="ttdef"><b>Definition:</b> <a href="check__header__guards_8py_source.xhtml#l00179">check_header_guards.py:179</a></div></div>
<div class="ttc" id="anamespaceclang__tidy__rules_xhtml_a392f48c0119ddcef4c443ca399328f8a"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#a392f48c0119ddcef4c443ca399328f8a">clang_tidy_rules.errors</a></div><div class="ttdeci">list errors</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00195">clang_tidy_rules.py:195</a></div></div>
<div class="ttc" id="a_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">arm_compute::detail::ObjectType::Tensor</a></div><div class="ttdeci">@ Tensor</div></div>
<div class="ttc" id="a_acl_open_cl_ext_8h_xhtml_a74350c866f8a478c6ee5c26a346024d2"><div class="ttname"><a href="_acl_open_cl_ext_8h.xhtml#a74350c866f8a478c6ee5c26a346024d2">AclGetClContext</a></div><div class="ttdeci">AclStatus AclGetClContext(AclContext ctx, cl_context *opencl_context)</div><div class="ttdoc">Extract the underlying OpenCL context used by a given Compute Library context object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00034">AclOpenClExt.cpp:34</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a632a44487dc40eeaabc65c039ce4a246a0c619b2e90be7d83736a8cb49085deee"><div class="ttname"><a href="_acl_types_8h.xhtml#a632a44487dc40eeaabc65c039ce4a246a0c619b2e90be7d83736a8cb49085deee">AclPreferFastRerun</a></div><div class="ttdeci">@ AclPreferFastRerun</div><div class="ttdoc">Prioritize performance when multiple iterations are performed.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00073">AclTypes.h:73</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01128">helpers.h:1128</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_ad9000ce99b9ffcec5722cade36d7e757"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ad9000ce99b9ffcec5722cade36d7e757">arm_compute::test::validation::reference::copy</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; copy(const SimpleTensor&lt; T &gt; &amp;src, const TensorShape &amp;output_shape)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_copy_8cpp_source.xhtml#l00037">Copy.cpp:37</a></div></div>
<div class="ttc" id="a_acl_open_cl_ext_8h_xhtml_a4be892e8b9ed0afdab2208b6e436b434"><div class="ttname"><a href="_acl_open_cl_ext_8h.xhtml#a4be892e8b9ed0afdab2208b6e436b434">AclSetClQueue</a></div><div class="ttdeci">AclStatus AclSetClQueue(AclQueue queue, cl_command_queue opencl_queue)</div><div class="ttdoc">Set the underlying OpenCL queue to be used by a given Compute Library queue object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00138">AclOpenClExt.cpp:138</a></div></div>
<div class="ttc" id="a_open_c_l_8h_xhtml"><div class="ttname"><a href="_open_c_l_8h.xhtml">OpenCL.h</a></div><div class="ttdoc">Wrapper to configure the Khronos OpenCL C++ header.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_ab3a61953b0f41e932f8a2ce8918e7aec"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#ab3a61953b0f41e932f8a2ce8918e7aec">arm_compute::test::apply</a></div><div class="ttdeci">void apply(O *obj, F &amp;&amp;func, const std::tuple&lt; As... &gt; &amp;args)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_utils_8h_source.xhtml#l00079">Utils.h:79</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_acc22b5786e09c538c1ed7f159388067d"><div class="ttname"><a href="_acl_types_8h.xhtml#acc22b5786e09c538c1ed7f159388067d">AclTargetCapabilities</a></div><div class="ttdeci">uint64_t AclTargetCapabilities</div><div class="ttdoc">Error codes returned by the public entry-points.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00047">AclTypes.h:47</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad258d4c51629346fceac4679b3209ad9acaf162e9233294cadf62d2a71a14ca09"><div class="ttname"><a href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9acaf162e9233294cadf62d2a71a14ca09">arm_compute::DeviceType::NEON</a></div><div class="ttdeci">@ NEON</div></div>
<div class="ttc" id="anamespacegenerate__build__files_xhtml"><div class="ttname"><a href="namespacegenerate__build__files.xhtml">generate_build_files</a></div><div class="ttdef"><b>Definition:</b> <a href="generate__build__files_8py_source.xhtml#l00001">generate_build_files.py:1</a></div></div>
<div class="ttc" id="aruntime_2_c_l_2_c_l_helpers_8h_xhtml"><div class="ttname"><a href="runtime_2_c_l_2_c_l_helpers_8h.xhtml">CLHelpers.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a0886942393a3ba0dfefaa7516b159784"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a0886942393a3ba0dfefaa7516b159784">arm_compute::test::validation::for</a></div><div class="ttdeci">for(size_t k=0;k&lt; _target.size();++k)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_unstack_8cpp_source.xhtml#l00091">Unstack.cpp:91</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_permute_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_permute.xhtml">arm_compute::CLPermute</a></div><div class="ttdoc">Basic function to execute an opencl::kernels::ClPermuteKernel.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_c_l_2functions_2_c_l_permute_8h_source.xhtml#l00039">CLPermute.h:39</a></div></div>
<div class="ttc" id="anamespacecheck__header__guards_xhtml_afafecb95aca5e0525fd6959a5602fb89"><div class="ttname"><a href="namespacecheck__header__guards.xhtml#afafecb95aca5e0525fd6959a5602fb89">check_header_guards.files</a></div><div class="ttdeci">files</div><div class="ttdef"><b>Definition:</b> <a href="check__header__guards_8py_source.xhtml#l00176">check_header_guards.py:176</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item.</div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00156">DirectConv2d.cpp:156</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor's allocator.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba"><div class="ttname"><a href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">arm_gemm::VLType::SVE</a></div><div class="ttdeci">@ SVE</div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_xhtml_a9c3303817ba653b5d1e78efb88d02bcf"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a9c3303817ba653b5d1e78efb88d02bcf">arm_compute::utils::map</a></div><div class="ttdeci">void map(T &amp;tensor, bool blocking)</div><div class="ttdoc">Maps a tensor if needed.</div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00213">Utils.h:213</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00160">ContainerDataset.h:160</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a632a44487dc40eeaabc65c039ce4a246"><div class="ttname"><a href="_acl_types_8h.xhtml#a632a44487dc40eeaabc65c039ce4a246">AclExecutionMode</a></div><div class="ttdeci">AclExecutionMode</div><div class="ttdoc">Execution mode types.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00071">AclTypes.h:71</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_a71326f0909d77386e29b511e1990a11f"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">arm_compute::test::library</a></div><div class="ttdeci">std::unique_ptr&lt; AssetsLibrary &gt; library</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00077">main.cpp:77</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a6a5eef7d8485a2b8c04bf9b4638a90e9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">arm_compute::test::validation::fill_tensor</a></div><div class="ttdeci">fill_tensor(input_to_input_weights, std::vector&lt; uint8_t &gt;{ 122, 130, 124, 134, 120, 122, 134, 134 })</div></div>
<div class="ttc" id="astruct_acl_tensor___xhtml"><div class="ttname"><a href="struct_acl_tensor__.xhtml">AclTensor_</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_v2_8h_source.xhtml#l00030">ITensorV2.h:30</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_abb222b6342b2b9056ec65056984d5e21"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">arm_compute::test::parameters</a></div><div class="ttdeci">std::unique_ptr&lt; ParametersLibrary &gt; parameters</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00046">Framework.cpp:46</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_affb1327b18bf08a379d19eef89cf1ed1"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#affb1327b18bf08a379d19eef89cf1ed1">GemmTuner.default</a></div><div class="ttdeci">default</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00668">GemmTuner.py:668</a></div></div>
<div class="ttc" id="acl__cache_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="cl__cache_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdoc">Main program creating an example that demostrates how to load precompiled kernels from a file.</div><div class="ttdef"><b>Definition:</b> <a href="cl__cache_8cpp_source.xhtml#l00155">cl_cache.cpp:155</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00041">TensorInfo.h:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a3a3405e0e787bc6d6298ff7a2d52e5e4"><div class="ttname"><a href="namespacearm__compute.xhtml#a3a3405e0e787bc6d6298ff7a2d52e5e4">arm_compute::save_program_cache_to_file</a></div><div class="ttdeci">void save_program_cache_to_file(const std::string &amp;filename=&quot;cache.bin&quot;)</div><div class="ttdoc">This function saves opencl kernels library to a file.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00073">Utils.cpp:73</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a0c40e87dd09c38533d746df32e9ca483adb7b44c0ec8957483f3dbf6d63fde846"><div class="ttname"><a href="_acl_types_8h.xhtml#a0c40e87dd09c38533d746df32e9ca483adb7b44c0ec8957483f3dbf6d63fde846">AclGpuOcl</a></div><div class="ttdeci">@ AclGpuOcl</div><div class="ttdoc">OpenCL target for GPU.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00067">AclTypes.h:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a56d8f451f6b30093a49f1b4978681b07"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a56d8f451f6b30093a49f1b4978681b07">arm_compute::CLScheduler::default_init</a></div><div class="ttdeci">void default_init(ICLTuner *cl_tuner=nullptr, CLGEMMHeuristicsHandle *gemm_h=nullptr, CLBackendType cl_backend_type=CLBackendType::Native)</div><div class="ttdoc">Initialises the context and command queue used by the scheduler to default values and sets a default ...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00134">CLScheduler.cpp:134</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="astruct_acl_tensor_descriptor_xhtml"><div class="ttname"><a href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00192">AclTypes.h:192</a></div></div>
<div class="ttc" id="aarm__compute_2runtime_2_c_l_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_c_l_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_example_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_example.xhtml">arm_compute::utils::Example</a></div><div class="ttdoc">Abstract Example class.</div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00074">Utils.h:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::Channel::A</a></div><div class="ttdeci">@ A</div><div class="ttdoc">Alpha channel.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespaceclang__tidy__rules_xhtml_a1a6b6fb557d8d37d59700faf4e4c9167"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">clang_tidy_rules.mode</a></div><div class="ttdeci">mode</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00196">clang_tidy_rules.py:196</a></div></div>
<div class="ttc" id="astruct_acl_queue___xhtml"><div class="ttname"><a href="struct_acl_queue__.xhtml">AclQueue_</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_queue_8h_source.xhtml#l00029">IQueue.h:29</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a6f4fa4bb0583f29e77138fb1e7d77411"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a6f4fa4bb0583f29e77138fb1e7d77411">arm_compute::test::framework::dataset::combine</a></div><div class="ttdeci">CartesianProductDataset&lt; T, U &gt; combine(T &amp;&amp;dataset1, U &amp;&amp;dataset2)</div><div class="ttdoc">Helper function to create a CartesianProductDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00180">CartesianProductDataset.h:180</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">MLGOParser.cpp:283</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1f8212fef242f87e34893c8db13fc16ea10df3d67626099df882920ba6552f16d"><div class="ttname"><a href="namespacearm__compute.xhtml#a1f8212fef242f87e34893c8db13fc16ea10df3d67626099df882920ba6552f16d">arm_compute::BitwiseOperation::NOT</a></div><div class="ttdeci">@ NOT</div><div class="ttdoc">Bitwise NOT operation.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_ad45f0c01a0713dfb6bd7232c7f396fc4"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">arm_compute::CLTensor::info</a></div><div class="ttdeci">TensorInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00041">CLTensor.cpp:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a3b69631535313e83809cd7746027cc62"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">arm_compute::test::validation::expected</a></div><div class="ttdeci">expected</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00166">BatchNormalizationLayer.cpp:166</a></div></div>
<div class="ttc" id="astruct_acl_context___xhtml"><div class="ttname"><a href="struct_acl_context__.xhtml">AclContext_</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00034">IContext.h:34</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a2b2912c16aeb279ce55dc9c30968b906"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a2b2912c16aeb279ce55dc9c30968b906">clCreateCommandQueueWithProperties</a></div><div class="ttdeci">cl_command_queue clCreateCommandQueueWithProperties(cl_context context, cl_device_id device, const cl_queue_properties *properties, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00382">OpenCL.cpp:382</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a31488d29805a596498c0234ae392d35d"><div class="ttname"><a href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">arm_compute::Target</a></div><div class="ttdeci">Target</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a05c10bc9018179245c50d45b330a1c6a"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a05c10bc9018179245c50d45b330a1c6a">arm_compute::cpu::step</a></div><div class="ttdeci">constexpr int step</div><div class="ttdef"><b>Definition:</b> <a href="cpu_2kernels_2floor_2neon_2fp32_8cpp_source.xhtml#l00035">fp32.cpp:35</a></div></div>
<div class="ttc" id="anamespaceformat__code_xhtml"><div class="ttname"><a href="namespaceformat__code.xhtml">format_code</a></div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00001">format_code.py:1</a></div></div>
<div class="ttc" id="a_acl_open_cl_ext_8h_xhtml_a57c64243b6e1e39edd0aa6fba5705268"><div class="ttname"><a href="_acl_open_cl_ext_8h.xhtml#a57c64243b6e1e39edd0aa6fba5705268">AclSetClContext</a></div><div class="ttdeci">AclStatus AclSetClContext(AclContext ctx, cl_context opencl_context)</div><div class="ttdoc">Set the underlying OpenCL context to be used by a given Compute Library context object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00059">AclOpenClExt.cpp:59</a></div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_a462bfa9dfea81692463ecb192183dd01a2b55387dd066c5bac646ac61543d152d"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#a462bfa9dfea81692463ecb192183dd01a2b55387dd066c5bac646ac61543d152d">arm_compute::experimental::MemoryType::CPU</a></div><div class="ttdeci">@ CPU</div></div>
<div class="ttc" id="a_acl_open_cl_ext_8h_xhtml_af481d1b263f628c2d085d852922f1f90"><div class="ttname"><a href="_acl_open_cl_ext_8h.xhtml#af481d1b263f628c2d085d852922f1f90">AclGetClQueue</a></div><div class="ttdeci">AclStatus AclGetClQueue(AclQueue queue, cl_command_queue *opencl_queue)</div><div class="ttdoc">Extract the underlying OpenCL queue used by a given Compute Library queue object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00113">AclOpenClExt.cpp:113</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">arm_compute::experimental::dynamic_fusion::GpuLanguage::OpenCL</a></div><div class="ttdeci">@ OpenCL</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1ec8dd7ea96aec0e4068497f0b5e17b2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">arm_compute::test::validation::set</a></div><div class="ttdeci">dst_shape set(0, output_wh.first)</div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a0c40e87dd09c38533d746df32e9ca483"><div class="ttname"><a href="_acl_types_8h.xhtml#a0c40e87dd09c38533d746df32e9ca483">AclTarget</a></div><div class="ttdeci">AclTarget</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00064">AclTypes.h:64</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9608e5af9f3a199f69ca6aa41b94359a"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9608e5af9f3a199f69ca6aa41b94359a">arm_compute::CLScheduler::set_queue</a></div><div class="ttdeci">void set_queue(cl::CommandQueue queue)</div><div class="ttdoc">Accessor to set the CL command queue to be used by the scheduler.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00056">CLScheduler.cpp:56</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00083">CoreTypes.h:83</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a269b19ce3f357ac65f41f9951906e38e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">arm_compute::TensorInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const override</div><div class="ttdoc">Size for each dimension of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00245">TensorInfo.h:245</a></div></div>
<div class="ttc" id="a_acl_open_cl_ext_8h_xhtml_aac9fa70e576a03c535b6404bca4e578b"><div class="ttname"><a href="_acl_open_cl_ext_8h.xhtml#aac9fa70e576a03c535b6404bca4e578b">AclGetClMem</a></div><div class="ttdeci">AclStatus AclGetClMem(AclTensor tensor, cl_mem *opencl_mem)</div><div class="ttdoc">Extract the underlying OpenCL memory object by a given Compute Library tensor object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00162">AclOpenClExt.cpp:162</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_afde8e18a788ccc92fc61cab298bca7e3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">GemmTuner.level</a></div><div class="ttdeci">level</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00681">GemmTuner.py:681</a></div></div>
<div class="ttc" id="anamespacecheck__header__guards_xhtml_a4397ebd547b206a8f60555ec1d1e0397"><div class="ttname"><a href="namespacecheck__header__guards.xhtml#a4397ebd547b206a8f60555ec1d1e0397">check_header_guards.extensions</a></div><div class="ttdeci">extensions</div><div class="ttdef"><b>Definition:</b> <a href="check__header__guards_8py_source.xhtml#l00177">check_header_guards.py:177</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a3d45498be87235b5165d9972b2d0644d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3d45498be87235b5165d9972b2d0644d">arm_compute::test::validation::allocator</a></div><div class="ttdeci">input allocator() -&gt; allocate()</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="cl__cache_8cpp.xhtml">cl_cache.cpp</a></li>
    <li class="footer">Generated on Mon Jan 22 2024 14:19:55 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
