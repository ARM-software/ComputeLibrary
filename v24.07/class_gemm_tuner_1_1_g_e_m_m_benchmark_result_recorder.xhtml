<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GEMMBenchmarkResultRecorder Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a>  </div>
  <div class="headertitle">
<div class="title">GEMMBenchmarkResultRecorder Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae625b46930454abeb72e1526955462b6"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#ae625b46930454abeb72e1526955462b6">__init__</a> (self, tol=0.01)</td></tr>
<tr class="separator:ae625b46930454abeb72e1526955462b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9db75613721e5fa69e3af9697ca8dc5"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#af9db75613721e5fa69e3af9697ca8dc5">add</a> (self, <a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a> benchmark_result)</td></tr>
<tr class="separator:af9db75613721e5fa69e3af9697ca8dc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64d43ff72eaa8e6ba4fe9831c6294af4"><td class="memItemLeft" align="right" valign="top">Generator[<a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a>, None, None]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a64d43ff72eaa8e6ba4fe9831c6294af4">get_record</a> (self)</td></tr>
<tr class="separator:a64d43ff72eaa8e6ba4fe9831c6294af4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84ff0c9fbd56a0f9308d138de4f99354"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a84ff0c9fbd56a0f9308d138de4f99354">get_best_gemm_configs</a> (self)</td></tr>
<tr class="separator:a84ff0c9fbd56a0f9308d138de4f99354"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c938fde12c1d2d34553c608c776ba77"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a8c938fde12c1d2d34553c608c776ba77">get_best_gemm_configs_as_sequence</a> (self)</td></tr>
<tr class="separator:a8c938fde12c1d2d34553c608c776ba77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ea49ac2ac7d7a33761dc5905cab3711"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a0ea49ac2ac7d7a33761dc5905cab3711">get_config_distributions</a> (self)</td></tr>
<tr class="separator:a0ea49ac2ac7d7a33761dc5905cab3711"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65177c090b4c592e4260ce9f5b2963bd"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a65177c090b4c592e4260ce9f5b2963bd">get_best_gemm_strategies</a> (self)</td></tr>
<tr class="separator:a65177c090b4c592e4260ce9f5b2963bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31ba40892c26b3f1734705e4f865c0f1"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a31ba40892c26b3f1734705e4f865c0f1">save_to_jsons</a> (self, out_dir, only_best_config=True)</td></tr>
<tr class="separator:a31ba40892c26b3f1734705e4f865c0f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc0ecf20ebe230b07f49bed19a7fb0f5"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#adc0ecf20ebe230b07f49bed19a7fb0f5">summary</a> (self, sum_level=SummaryLevel.Short)</td></tr>
<tr class="separator:adc0ecf20ebe230b07f49bed19a7fb0f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a1d13ba4c90b1f13f78abc54d6c18bde4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a1d13ba4c90b1f13f78abc54d6c18bde4">SummaryLevel</a> = Enum(&quot;SummaryLevel&quot;, [&quot;Short&quot;, &quot;Detailed&quot;])</td></tr>
<tr class="separator:a1d13ba4c90b1f13f78abc54d6c18bde4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><pre class="fragment">A recorder that records and organises GEMM Benchmark results, and produces various reports on the record.
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00201">201</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae625b46930454abeb72e1526955462b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae625b46930454abeb72e1526955462b6">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def __init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>tol</em> = <code>0.01</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Initializer
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00207">207</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">def </span>__init__(self, tol=0.01):</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Initializer</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        self._benchmark_result_record: List[BenchmarkResult] = []</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="comment"># Strategies recorded</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        self._strategies = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">set</a>()</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        self._tol = tol</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00212">GEMMBenchmarkResultRecorder._strategies</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00213">GEMMBenchmarkResultRecorder._tol</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">arm_compute::test::validation.set()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af9db75613721e5fa69e3af9697ca8dc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9db75613721e5fa69e3af9697ca8dc5">&#9670;&nbsp;</a></span>add()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def add </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a>&#160;</td>
          <td class="paramname"><em>benchmark_result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Add a benchmark result to the record.
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00215">215</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keyword">def </span>add(self, benchmark_result: BenchmarkResult):</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Add a benchmark result to the record.</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        gemm_param, strategy, gemm_config, measurement = benchmark_result</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="comment"># Update strategies encoutnered</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        self._strategies.add(strategy)</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        self._benchmark_result_record.append(benchmark_result)</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00212">GEMMBenchmarkResultRecorder._strategies</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00268">GEMMBenchmarkResultRecorder.get_config_distributions()</a>.</p>

</div>
</div>
<a id="a84ff0c9fbd56a0f9308d138de4f99354"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84ff0c9fbd56a0f9308d138de4f99354">&#9670;&nbsp;</a></span>get_best_gemm_configs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def get_best_gemm_configs </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get the best GEMMConfig set per GEMMParam per Strategy
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00229">229</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">def </span>get_best_gemm_configs(self):</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Get the best GEMMConfig set per GEMMParam per Strategy</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        best_gc_sets: Dict[</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            Tuple[GEMMParam, Strategy], List[Tuple[GEMMConfig, Measurement]]</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        ] = defaultdict(list)</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">for</span> gemm_param, strategy, gemm_config, measurement <span class="keywordflow">in</span> self.get_record():</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            best_gc_set = best_gc_sets.setdefault((gemm_param, strategy), [])</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            best_gc_set.append((gemm_config, measurement))</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="comment"># Sort the best config set (list)</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            best_gc_set = sorted(</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                best_gc_set, key=<span class="keyword">lambda</span> gc_and_m: gc_and_m[1].get_total_ms()</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            )</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            <span class="comment"># Filter out configs that are beyond tolerance to the best GEMMConfig&#39;s measurement</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            best_gc, best_m = best_gc_set[0]</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            best_gc_set_new = [</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                (gemm_config, measurement)</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                <span class="keywordflow">for</span> gemm_config, measurement <span class="keywordflow">in</span> best_gc_set[1:]</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <span class="keywordflow">if</span> measurement.is_close_to(best_m, self._tol)</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            ]</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="comment"># Add back the best config</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            best_gc_set_new.insert(0, (best_gc, best_m))</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            best_gc_sets[(gemm_param, strategy)] = best_gc_set_new</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">return</span> best_gc_sets</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00213">GEMMBenchmarkResultRecorder._tol</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00224">GEMMBenchmarkResultRecorder.get_record()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00255">GEMMBenchmarkResultRecorder.get_best_gemm_configs_as_sequence()</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00347">GEMMBenchmarkResultRecorder.summary()</a>.</p>

</div>
</div>
<a id="a8c938fde12c1d2d34553c608c776ba77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c938fde12c1d2d34553c608c776ba77">&#9670;&nbsp;</a></span>get_best_gemm_configs_as_sequence()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def get_best_gemm_configs_as_sequence </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get the best GEMMConfig set per GEMMParam per Strategy, and flatten the result into a sequence
of BenchmarkResults
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00255">255</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">def </span>get_best_gemm_configs_as_sequence(self):</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Get the best GEMMConfig set per GEMMParam per Strategy, and flatten the result into a sequence</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="stringliteral">        of BenchmarkResults</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keywordflow">for</span> (</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            (gemm_param, strategy),</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            best_gc_sets,</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        ) <span class="keywordflow">in</span> self.get_best_gemm_configs().items():</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">for</span> best_gemm_config, best_measurement <span class="keywordflow">in</span> best_gc_sets:</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                <span class="keywordflow">yield</span> BenchmarkResult(</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    gemm_param, strategy, best_gemm_config, best_measurement</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                )</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00229">GEMMBenchmarkResultRecorder.get_best_gemm_configs()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00268">GEMMBenchmarkResultRecorder.get_config_distributions()</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00303">GEMMBenchmarkResultRecorder.save_to_jsons()</a>.</p>

</div>
</div>
<a id="a65177c090b4c592e4260ce9f5b2963bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65177c090b4c592e4260ce9f5b2963bd">&#9670;&nbsp;</a></span>get_best_gemm_strategies()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def get_best_gemm_strategies </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get the best Stratey per GEMMParam
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00280">280</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keyword">def </span>get_best_gemm_strategies(self):</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Get the best Stratey per GEMMParam</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        all_results: Dict[GEMMParam, List[Tuple[Strategy, Measurement]]] = defaultdict(</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            list</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        )</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        best_strategies: Dict[GEMMParam, Strategy] = {}</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keywordflow">for</span> gemm_param, strategy, gemm_config, measurement <span class="keywordflow">in</span> self.get_record():</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            all_results[gemm_param].append((strategy, measurement))</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="keywordflow">for</span> gemm_param, results_set <span class="keywordflow">in</span> all_results.items():</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <span class="comment"># Sort the best results set (list)</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            results_set = sorted(</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                results_set, key=<span class="keyword">lambda</span> s_and_m: s_and_m[1].get_total_ms()</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            )</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            <span class="comment"># Select best Strategy</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            best_s, best_m = results_set[0]</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            best_strategies[gemm_param] = best_s</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordflow">return</span> best_strategies</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00224">GEMMBenchmarkResultRecorder.get_record()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00303">GEMMBenchmarkResultRecorder.save_to_jsons()</a>.</p>

</div>
</div>
<a id="a0ea49ac2ac7d7a33761dc5905cab3711"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ea49ac2ac7d7a33761dc5905cab3711">&#9670;&nbsp;</a></span>get_config_distributions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def get_config_distributions </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Return GEMMConfigDistribution for each strategy
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00268">268</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">def </span>get_config_distributions(self):</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Return GEMMConfigDistribution for each strategy</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        gemm_config_distributions: Dict[Strategy, GEMMConfigDistribution] = defaultdict(</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            GEMMConfigDistribution</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        )</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">for</span> benchmark_result <span class="keywordflow">in</span> self.get_best_gemm_configs_as_sequence():</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            _, strategy, _, _ = benchmark_result</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            gemm_config_distributions[strategy].add(benchmark_result)</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">return</span> gemm_config_distributions</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00215">GEMMBenchmarkResultRecorder.add()</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00255">GEMMBenchmarkResultRecorder.get_best_gemm_configs_as_sequence()</a>.</p>

</div>
</div>
<a id="a64d43ff72eaa8e6ba4fe9831c6294af4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64d43ff72eaa8e6ba4fe9831c6294af4">&#9670;&nbsp;</a></span>get_record()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"> Generator[<a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a>, None, None] get_record </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Return an iterator that iterates over the record.
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00224">224</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">def </span>get_record(self) -&gt; Generator[BenchmarkResult, None, None]:</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Return an iterator that iterates over the record.</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">yield</span> <span class="keyword">from</span> self._benchmark_result_record</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00229">GEMMBenchmarkResultRecorder.get_best_gemm_configs()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00280">GEMMBenchmarkResultRecorder.get_best_gemm_strategies()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00303">GEMMBenchmarkResultRecorder.save_to_jsons()</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00347">GEMMBenchmarkResultRecorder.summary()</a>.</p>

</div>
</div>
<a id="a31ba40892c26b3f1734705e4f865c0f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31ba40892c26b3f1734705e4f865c0f1">&#9670;&nbsp;</a></span>save_to_jsons()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def save_to_jsons </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>out_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>only_best_config</em> = <code>True</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Save records to an output directory of JSON files.
The directory is organized such that each strategy gets its own JSON file.
The directory also includes a JSON file to define the best strategy per GEMM Param.
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00303">303</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keyword">def </span>save_to_jsons(self, out_dir, only_best_config=True):</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Save records to an output directory of JSON files.</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="stringliteral">        The directory is organized such that each strategy gets its own JSON file.</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="stringliteral">        The directory also includes a JSON file to define the best strategy per GEMM Param.</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> os.path.exists(out_dir):</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            logging.info(</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                <span class="stringliteral">&quot;Output directory {} does not exist. Creating...&quot;</span>.<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>(</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                    out_dir)</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            )</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            os.mkdir(out_dir)</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        out_json_path = os.path.join(out_dir, <span class="stringliteral">&quot;gemm_type_selection.json&quot;</span>)</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">if</span> <a class="code" href="namespace_gemm_tuner.xhtml#a118d1a9756d5cb110204180506ed8c99">check_out_path</a>(out_json_path):</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            results = self.get_best_gemm_strategies()</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            results = {<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(key): value.name <span class="keywordflow">for</span> key, value <span class="keywordflow">in</span> results.items()}</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <a class="code" href="namespace_gemm_tuner.xhtml#a70ce377ea8b5202ced8079196c6841ed">dump_json</a>(out_json_path, results)</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keywordflow">for</span> strategy <span class="keywordflow">in</span> self._strategies:</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            out_json_path = os.path.join(</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                out_dir, (<span class="stringliteral">&quot;gemm_config_&quot;</span> + strategy.name.lower() + <span class="stringliteral">&quot;.json&quot;</span>)</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            )</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            <span class="keywordflow">if</span> <a class="code" href="namespace_gemm_tuner.xhtml#a118d1a9756d5cb110204180506ed8c99">check_out_path</a>(out_json_path):</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                record = (</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                    self.get_best_gemm_configs_as_sequence()</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                    <span class="keywordflow">if</span> only_best_config</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                    <span class="keywordflow">else</span> self.get_record()</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                )</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                results = defaultdict(list)</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                <span class="keywordflow">for</span> res <span class="keywordflow">in</span> record:</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                    <span class="keywordflow">if</span> res.strategy == strategy:</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                        results[<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(res.gemm_param)].append(</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                            {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                                <span class="stringliteral">&quot;GEMMConfig&quot;</span>: <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(res.gemm_config),</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                                <span class="stringliteral">&quot;OpenCL_Timer_ms_reshape&quot;</span>: <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                                    res.measurement.opencl_timer_ms_reshape</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                                ),</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                                <span class="stringliteral">&quot;OpenCL_Timer_ms_kernel&quot;</span>: <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                                    res.measurement.opencl_timer_ms_kernel</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                ),</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                            }</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                        )</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                <a class="code" href="namespace_gemm_tuner.xhtml#a70ce377ea8b5202ced8079196c6841ed">dump_json</a>(out_json_path, results)</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00212">GEMMBenchmarkResultRecorder._strategies</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00566">GemmTuner.check_out_path()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00582">GemmTuner.dump_json()</a>, <a class="el" href="update__supported__ops_8py_source.xhtml#l00405">update_supported_ops.format</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00255">GEMMBenchmarkResultRecorder.get_best_gemm_configs_as_sequence()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00280">GEMMBenchmarkResultRecorder.get_best_gemm_strategies()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00224">GEMMBenchmarkResultRecorder.get_record()</a>, and <a class="el" href="caffe__mnist__image__extractor_8py_source.xhtml#l00021">caffe_mnist_image_extractor.str</a>.</p>

</div>
</div>
<a id="adc0ecf20ebe230b07f49bed19a7fb0f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc0ecf20ebe230b07f49bed19a7fb0f5">&#9670;&nbsp;</a></span>summary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def summary </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>sum_level</em> = <code>SummaryLevel.Short</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Return the summary string of the record
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00347">347</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keyword">def </span>summary(self, sum_level=SummaryLevel.Short):</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Return the summary string of the record</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        num_raw_records = sum(1 <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> self.get_record())</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        gemm_params_per_strategy = defaultdict(list)</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keywordflow">for</span> gemm_param, strategy <span class="keywordflow">in</span> self.get_best_gemm_configs().keys():</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            gemm_params_per_strategy[strategy].append(gemm_param)</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        global_summary = f<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="stringliteral">=== {self.__class__.__name__} Summary ===</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="stringliteral">[Global]</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="stringliteral">Strategies recorded: {&quot;, &quot;.join(map(lambda s: s.name, self._strategies))}</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="stringliteral">Total number of results recorded: {num_raw_records}</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="stringliteral">[Per strategy]</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        strategy_summaries = []</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="keywordflow">for</span> strategy <span class="keywordflow">in</span> gemm_params_per_strategy:</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            summary = f<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="stringliteral">Strategy {strategy.name}:</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="stringliteral">GEMM parameters:</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="stringliteral">    Number of: {len(gemm_params_per_strategy[strategy])}</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="stringliteral">            &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            <span class="keywordflow">if</span> sum_level == self.__class__.SummaryLevel.Detailed:</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                summary += f<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="stringliteral">    Content: {gemm_params_per_strategy[strategy]}</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="stringliteral">                &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            strategy_summaries.append(summary)</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="keywordflow">return</span> global_summary + <span class="stringliteral">&quot;&quot;</span>.<a class="code" href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">join</a>(strategy_summaries)</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160; </div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00229">GEMMBenchmarkResultRecorder.get_best_gemm_configs()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00224">GEMMBenchmarkResultRecorder.get_record()</a>, and <a class="el" href="_string_utils_8cpp_source.xhtml#l00066">arm_compute.join()</a>.</p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a1d13ba4c90b1f13f78abc54d6c18bde4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d13ba4c90b1f13f78abc54d6c18bde4">&#9670;&nbsp;</a></span>SummaryLevel</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SummaryLevel = Enum(&quot;SummaryLevel&quot;, [&quot;Short&quot;, &quot;Detailed&quot;])</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00205">205</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>examples/gemm_tuner/<a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacecaffe__mnist__image__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_mnist_image_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__mnist__image__extractor_8py_source.xhtml#l00021">caffe_mnist_image_extractor.py:21</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5277640d2fd61696201c28a01c3de703"><div class="ttname"><a href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">arm_compute::join</a></div><div class="ttdeci">std::string join(const std::vector&lt; std::string &gt; strings, const std::string &amp;sep)</div><div class="ttdoc">Join a sequence of strings with separator sep.</div><div class="ttdef"><b>Definition:</b> <a href="_string_utils_8cpp_source.xhtml#l00066">StringUtils.cpp:66</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a70ce377ea8b5202ced8079196c6841ed"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a70ce377ea8b5202ced8079196c6841ed">GemmTuner.dump_json</a></div><div class="ttdeci">def dump_json(out_path, dict)</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00582">GemmTuner.py:582</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1ec8dd7ea96aec0e4068497f0b5e17b2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">arm_compute::test::validation::set</a></div><div class="ttdeci">dst_shape set(0, output_wh.first)</div></div>
<div class="ttc" id="anamespaceupdate__supported__ops_xhtml_a387137c43ed9616d39ba90e890d181eb"><div class="ttname"><a href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">update_supported_ops.format</a></div><div class="ttdeci">format</div><div class="ttdef"><b>Definition:</b> <a href="update__supported__ops_8py_source.xhtml#l00405">update_supported_ops.py:405</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a118d1a9756d5cb110204180506ed8c99"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a118d1a9756d5cb110204180506ed8c99">GemmTuner.check_out_path</a></div><div class="ttdeci">def check_out_path(out_path)</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00566">GemmTuner.py:566</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a></li><li class="navelem"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml">GEMMBenchmarkResultRecorder</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:38 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
