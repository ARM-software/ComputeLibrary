<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: RedOpYZW_quantized&lt; T &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('structarm__compute_1_1_red_op_y_z_w__quantized.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">RedOpYZW_quantized&lt; T &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a85d22c07dd22936a6c9bd247ecc8f072"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_red_op_y_z_w__quantized.xhtml#a85d22c07dd22936a6c9bd247ecc8f072">operator()</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;in_window, <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;out_window, const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *in, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *out, int axis, const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</td></tr>
<tr class="separator:a85d22c07dd22936a6c9bd247ecc8f072"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
struct arm_compute::RedOpYZW_quantized&lt; T &gt;</h3>


<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l01213">1213</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a85d22c07dd22936a6c9bd247ecc8f072"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85d22c07dd22936a6c9bd247ecc8f072">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>in_window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>out_window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>axis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a>&#160;</td>
          <td class="paramname"><em>op</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l01215">1215</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;    {</div>
<div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;        <span class="keyword">const</span> TensorInfo              in_info = *(in-&gt;info());</div>
<div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo iq_info = in_info.quantization_info().uniform();</div>
<div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;        <span class="keyword">using</span> PromotedType = <span class="keyword">typename</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">wrapper::traits::promote&lt;typename wrapper::traits::promote&lt;T&gt;::type</a>&gt;<a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">::type</a>;</div>
<div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160; </div>
<div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> oq_info = out-&gt;info()-&gt;quantization_info().uniform();</div>
<div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160; </div>
<div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>  window_step_x      = 16 / <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> window_start_x_tmp = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(in_window.x().start());</div>
<div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> window_end_x_tmp   = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(in_window.x().end());</div>
<div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;        <span class="comment">// As it split over x-axis, need to set the correct spiltted window start and end.</span></div>
<div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> window_start_x = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(0);</div>
<div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> window_end_x   = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(in_window.shape().x());</div>
<div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160; </div>
<div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;        Window in_win_no_pad = in_window;</div>
<div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;        in_win_no_pad.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(window_start_x_tmp, window_end_x_tmp, in_window.shape().x()));</div>
<div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;        Window out_win_no_pad = out_window;</div>
<div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;        out_win_no_pad.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>,</div>
<div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;                           Window::Dimension(window_start_x_tmp, window_end_x_tmp, out_window.shape().x()));</div>
<div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160; </div>
<div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;        Iterator <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(in, in_win_no_pad);</div>
<div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;        Iterator output(out, out_win_no_pad);</div>
<div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160; </div>
<div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;        <span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a324e868d35ee9cec67b7dd8ad0b1ad05">vector_type</a> =</div>
<div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;            <span class="keyword">typename</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">wrapper::traits::neon_bitvector&lt;PromotedType, wrapper::traits::BitWidth::W128&gt;::type</a>;</div>
<div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;        <span class="keyword">using</span> vector_type_f = <span class="keyword">typename</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">wrapper::traits::neon_vector&lt;float, 4&gt;::type</a>;</div>
<div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160; </div>
<div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;        <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a324e868d35ee9cec67b7dd8ad0b1ad05">vector_type</a> vec_res_value1{};</div>
<div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;        <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a324e868d35ee9cec67b7dd8ad0b1ad05">vector_type</a> vec_res_value2{};</div>
<div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;        <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a324e868d35ee9cec67b7dd8ad0b1ad05">vector_type</a> vec_res_value3{};</div>
<div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;        <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a324e868d35ee9cec67b7dd8ad0b1ad05">vector_type</a> vec_res_value4{};</div>
<div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160; </div>
<div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;        vector_type_f vec_res_value1_f{};</div>
<div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;        vector_type_f vec_res_value2_f{};</div>
<div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;        vector_type_f vec_res_value3_f{};</div>
<div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;        vector_type_f vec_res_value4_f{};</div>
<div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160; </div>
<div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> in_offset = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(iq_info.offset);</div>
<div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> in_scale  = iq_info.scale;</div>
<div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160; </div>
<div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> out_offset = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(oq_info.offset);</div>
<div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> out_scale  = oq_info.scale;</div>
<div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160; </div>
<div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> num_elements = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(in_info.dimension(axis));</div>
<div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160; </div>
<div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">A</a> = in_scale / (out_scale * num_elements);</div>
<div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">B</a> = out_offset - (in_scale * in_offset) / (out_scale);</div>
<div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160; </div>
<div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> vec_A = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(A), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> vec_B = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(B), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160; </div>
<div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;            in_win_no_pad,</div>
<div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;            [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;            {</div>
<div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr = <span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div>
<div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160; </div>
<div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;                <span class="comment">// Compute window_step_x elements per iteration</span></div>
<div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;                <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;                <span class="keywordflow">for</span> (; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;                {</div>
<div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;                    uint32x4x4_t vec_res_idx{{0}};</div>
<div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;                    vec_res_value1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>PromotedType<span class="keyword">&gt;</span>(0), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;                    vec_res_value2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>PromotedType<span class="keyword">&gt;</span>(0), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;                    vec_res_value3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>PromotedType<span class="keyword">&gt;</span>(0), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;                    vec_res_value4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>PromotedType<span class="keyword">&gt;</span>(0), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160; </div>
<div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;                    vec_res_value1_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(1), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;                    vec_res_value2_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(1), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;                    vec_res_value3_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(1), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;                    vec_res_value4_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(1), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160; </div>
<div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;                    <span class="keyword">auto</span> vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(input_ptr + x);</div>
<div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160; </div>
<div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index_dim = 0; index_dim &lt; in_info.dimension(axis); ++index_dim)</div>
<div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;                    {</div>
<div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;                        <span class="keyword">const</span> T   *in_ptr       = input_ptr + x + in_info.strides_in_bytes()[axis] * index_dim;</div>
<div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> vec_elements = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(in_ptr);</div>
<div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;                        <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;                        {</div>
<div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div>
<div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div>
<div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;                            {</div>
<div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_elements));</div>
<div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_elements));</div>
<div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160; </div>
<div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_1));</div>
<div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_1));</div>
<div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_2));</div>
<div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_2));</div>
<div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160; </div>
<div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;                                vec_res_value1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_1, vec_res_value1);</div>
<div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;                                vec_res_value2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_2, vec_res_value2);</div>
<div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;                                vec_res_value3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_3, vec_res_value3);</div>
<div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;                                vec_res_value4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_4, vec_res_value4);</div>
<div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;                            }</div>
<div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;                            {</div>
<div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> offset32x4f_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(iq_info.offset),</div>
<div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;                                                                           wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> scale32x4f_4 =</div>
<div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(iq_info.scale, wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160; </div>
<div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_elements));</div>
<div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_elements));</div>
<div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160; </div>
<div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_1));</div>
<div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_1));</div>
<div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_2));</div>
<div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_2));</div>
<div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160; </div>
<div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;                                <span class="keyword">auto</span> temp32x4f_1 = wrapper::vcvt&lt;float&gt;(temp32x4t_1);</div>
<div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;                                <span class="keyword">auto</span> temp32x4f_2 = wrapper::vcvt&lt;float&gt;(temp32x4t_2);</div>
<div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;                                <span class="keyword">auto</span> temp32x4f_3 = wrapper::vcvt&lt;float&gt;(temp32x4t_3);</div>
<div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;                                <span class="keyword">auto</span> temp32x4f_4 = wrapper::vcvt&lt;float&gt;(temp32x4t_4);</div>
<div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160; </div>
<div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;                                <span class="comment">//de-quantize vec_elements</span></div>
<div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;                                temp32x4f_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(temp32x4f_1, offset32x4f_4), scale32x4f_4);</div>
<div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;                                temp32x4f_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(temp32x4f_2, offset32x4f_4), scale32x4f_4);</div>
<div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;                                temp32x4f_3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(temp32x4f_3, offset32x4f_4), scale32x4f_4);</div>
<div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;                                temp32x4f_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(temp32x4f_4, offset32x4f_4), scale32x4f_4);</div>
<div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160; </div>
<div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;                                vec_res_value1_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(temp32x4f_1, vec_res_value1_f);</div>
<div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;                                vec_res_value2_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(temp32x4f_2, vec_res_value2_f);</div>
<div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;                                vec_res_value3_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(temp32x4f_3, vec_res_value3_f);</div>
<div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;                                vec_res_value4_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(temp32x4f_4, vec_res_value4_f);</div>
<div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;                            }</div>
<div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;                            {</div>
<div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;                                <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;                                vec_res_idx   = <a class="code" href="namespacearm__compute.xhtml#a8a1099ac566bfff8b1c11f582b4b6ff0">calculate_index_quantized</a>(index_dim, temp_vec_res_value, vec_res_value,</div>
<div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;                                                                          vec_res_idx, op, axis);</div>
<div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;                                vec_res_value = temp_vec_res_value;</div>
<div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;                            }</div>
<div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;                            {</div>
<div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;                                <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;                                vec_res_idx   = <a class="code" href="namespacearm__compute.xhtml#a8a1099ac566bfff8b1c11f582b4b6ff0">calculate_index_quantized</a>(index_dim, temp_vec_res_value, vec_res_value,</div>
<div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;                                                                          vec_res_idx, op, axis);</div>
<div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;                                vec_res_value = temp_vec_res_value;</div>
<div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;                            }</div>
<div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;                            {</div>
<div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;                                vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;                            }</div>
<div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;                            {</div>
<div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;                                vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;                            }</div>
<div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;                            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;                                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div>
<div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;                        }</div>
<div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;                    }</div>
<div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160; </div>
<div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;                    <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;                    {</div>
<div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;                        {</div>
<div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr() + 4 * x), vec_res_idx.val[0]);</div>
<div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr() + 4 * x) + 4, vec_res_idx.val[1]);</div>
<div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr() + 4 * x) + 8, vec_res_idx.val[2]);</div>
<div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr() + 4 * x) + 12,</div>
<div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;                                            vec_res_idx.val[3]);</div>
<div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;                        }</div>
<div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;                        {</div>
<div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr() + x), vec_res_value);</div>
<div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;                        }</div>
<div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div>
<div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;                        {</div>
<div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;                            <span class="comment">// Subtract offsets</span></div>
<div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;                            <span class="keyword">auto</span> offsets = vdupq_n_s32((in_info.dimension(axis) - 1) * iq_info.offset);</div>
<div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160; </div>
<div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;                            <span class="keyword">auto</span> vec_res_s_value1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a57b24ba39d5191e1946dcc87a7e88b10">wrapper::vreinterpret</a>(vec_res_value1);</div>
<div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;                            <span class="keyword">auto</span> vec_res_s_value2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a57b24ba39d5191e1946dcc87a7e88b10">wrapper::vreinterpret</a>(vec_res_value2);</div>
<div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;                            <span class="keyword">auto</span> vec_res_s_value3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a57b24ba39d5191e1946dcc87a7e88b10">wrapper::vreinterpret</a>(vec_res_value3);</div>
<div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;                            <span class="keyword">auto</span> vec_res_s_value4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a57b24ba39d5191e1946dcc87a7e88b10">wrapper::vreinterpret</a>(vec_res_value4);</div>
<div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160; </div>
<div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;                            vec_res_s_value1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(vec_res_s_value1, offsets);</div>
<div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;                            vec_res_s_value2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(vec_res_s_value2, offsets);</div>
<div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;                            vec_res_s_value3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(vec_res_s_value3, offsets);</div>
<div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;                            vec_res_s_value4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(vec_res_s_value4, offsets);</div>
<div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160; </div>
<div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 =</div>
<div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_s_value1), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_s_value2));</div>
<div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 =</div>
<div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_s_value3), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_s_value4));</div>
<div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160; </div>
<div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;                            combine_and_store&lt;T&gt;(temp16x8t_1, temp16x8t_2, output, x);</div>
<div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;                        }</div>
<div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div>
<div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;                        {</div>
<div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;                            vec_res_value1_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">wrapper::vmla</a>(vec_B, wrapper::vcvt&lt;float&gt;(vec_res_value1), vec_A);</div>
<div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;                            vec_res_value2_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">wrapper::vmla</a>(vec_B, wrapper::vcvt&lt;float&gt;(vec_res_value2), vec_A);</div>
<div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;                            vec_res_value3_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">wrapper::vmla</a>(vec_B, wrapper::vcvt&lt;float&gt;(vec_res_value3), vec_A);</div>
<div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;                            vec_res_value4_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">wrapper::vmla</a>(vec_B, wrapper::vcvt&lt;float&gt;(vec_res_value4), vec_A);</div>
<div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160; </div>
<div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;<span class="preprocessor">#ifdef __aarch64__</span></div>
<div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;                            vec_res_value1 = wrapper::vcvta&lt;PromotedType&gt;(vec_res_value1_f);</div>
<div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;                            vec_res_value2 = wrapper::vcvta&lt;PromotedType&gt;(vec_res_value2_f);</div>
<div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;                            vec_res_value3 = wrapper::vcvta&lt;PromotedType&gt;(vec_res_value3_f);</div>
<div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;                            vec_res_value4 = wrapper::vcvta&lt;PromotedType&gt;(vec_res_value4_f);</div>
<div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;<span class="preprocessor">#else  // defined(__aarch64__)</span></div>
<div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;                            vec_res_value1    = wrapper::vcvt&lt;PromotedType&gt;(vec_res_value1_f);</div>
<div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;                            vec_res_value2    = wrapper::vcvt&lt;PromotedType&gt;(vec_res_value2_f);</div>
<div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;                            vec_res_value3    = wrapper::vcvt&lt;PromotedType&gt;(vec_res_value3_f);</div>
<div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;                            vec_res_value4    = wrapper::vcvt&lt;PromotedType&gt;(vec_res_value4_f);</div>
<div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;<span class="preprocessor">#endif // __aarch64__</span></div>
<div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160; </div>
<div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 =</div>
<div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value1), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value2));</div>
<div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 =</div>
<div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value3), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value4));</div>
<div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;                            <span class="keyword">auto</span> res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(temp16x8t_1), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(temp16x8t_2));</div>
<div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160; </div>
<div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr() + x), res);</div>
<div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;                        }</div>
<div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;                        {</div>
<div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> offset32x4f_4 =</div>
<div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(iq_info.offset), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> iscale32x4f_4 = <a class="code" href="namespacearm__compute.xhtml#a2e0f2412b4d1302272d1aeb85d21ab25">vinvq_f32</a>(vdupq_n_f32(iq_info.scale));</div>
<div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160; </div>
<div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;                            <span class="comment">//re-quantize</span></div>
<div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;                            vec_res_value1_f =</div>
<div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value1_f, iscale32x4f_4), offset32x4f_4);</div>
<div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;                            vec_res_value2_f =</div>
<div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value2_f, iscale32x4f_4), offset32x4f_4);</div>
<div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;                            vec_res_value3_f =</div>
<div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value3_f, iscale32x4f_4), offset32x4f_4);</div>
<div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;                            vec_res_value4_f =</div>
<div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value4_f, iscale32x4f_4), offset32x4f_4);</div>
<div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160; </div>
<div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;                            vec_res_value1 = wrapper::vcvt&lt;T&gt;(vec_res_value1_f);</div>
<div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;                            vec_res_value2 = wrapper::vcvt&lt;T&gt;(vec_res_value2_f);</div>
<div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;                            vec_res_value3 = wrapper::vcvt&lt;T&gt;(vec_res_value3_f);</div>
<div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;                            vec_res_value4 = wrapper::vcvt&lt;T&gt;(vec_res_value4_f);</div>
<div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160; </div>
<div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 =</div>
<div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value1), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value2));</div>
<div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 =</div>
<div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;                                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value3), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value4));</div>
<div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;                            <span class="keyword">auto</span> res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(temp16x8t_1), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(temp16x8t_2));</div>
<div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160; </div>
<div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr() + x), res);</div>
<div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;                        }</div>
<div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;                        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;                            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div>
<div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;                    }</div>
<div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;                }</div>
<div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160; </div>
<div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;                <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;                <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;                {</div>
<div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;                    <span class="keywordtype">float</span>   res_value   = 0.f;</div>
<div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;                    int32_t res_value_q = 0;</div>
<div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160; </div>
<div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;                    <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;                    {</div>
<div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;                        {</div>
<div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;                            res_value = *(input_ptr + x);</div>
<div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;                        }</div>
<div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;                        {</div>
<div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;                            res_value = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(1.0f);</div>
<div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;                        }</div>
<div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;                        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;                        {</div>
<div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;                            res_value = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0.0f);</div>
<div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;                        }</div>
<div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;                    }</div>
<div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;                    uint32_t res_idx = 0;</div>
<div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160; </div>
<div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dim = 0; dim &lt; in_info.dimension(axis); ++dim)</div>
<div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;                    {</div>
<div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;                        <span class="keyword">const</span> T *in_ptr =</div>
<div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;                            <span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr() + x + in_info.strides_in_bytes()[axis] * dim);</div>
<div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;                        <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;                        {</div>
<div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div>
<div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;                            {</div>
<div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;                                res_value += *in_ptr;</div>
<div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;                            }</div>
<div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div>
<div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;                            {</div>
<div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;                                res_value_q += *in_ptr;</div>
<div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;                            }</div>
<div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">ReductionOperation::SUM_SQUARE</a>:</div>
<div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;                            {</div>
<div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;                                res_value += *in_ptr * *in_ptr;</div>
<div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;                            }</div>
<div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;                            {</div>
<div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;                                <span class="comment">//de-quantize input</span></div>
<div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;                                <span class="keywordflow">if</span> (std::is_same&lt;T, uint8_t&gt;::value)</div>
<div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;                                {</div>
<div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;                                    res_value *= <a class="code" href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">dequantize_qasymm8</a>(*in_ptr, iq_info);</div>
<div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;                                }</div>
<div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;                                <span class="keywordflow">else</span></div>
<div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;                                {</div>
<div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;                                    res_value *= <a class="code" href="namespacearm__compute.xhtml#afe6fcf1a0c6f6c2d2cb10a8c14fa9131">dequantize_qasymm8_signed</a>(*in_ptr, iq_info);</div>
<div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;                                }</div>
<div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;                            }</div>
<div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;                            {</div>
<div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;                                <span class="keywordflow">if</span> (*in_ptr &lt; res_value)</div>
<div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;                                {</div>
<div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;                                    res_value = *in_ptr;</div>
<div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;                                    res_idx   = dim;</div>
<div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;                                }</div>
<div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;                            }</div>
<div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;                            {</div>
<div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;                                <span class="keywordflow">if</span> (*in_ptr &gt; res_value)</div>
<div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;                                {</div>
<div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;                                    res_value = *in_ptr;</div>
<div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;                                    res_idx   = dim;</div>
<div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;                                }</div>
<div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;                            }</div>
<div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;                            {</div>
<div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;                                res_value = *in_ptr &lt; res_value ? *in_ptr : res_value;</div>
<div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;                            }</div>
<div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;                            {</div>
<div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;                                res_value = *in_ptr &gt; res_value ? *in_ptr : res_value;</div>
<div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;                            }</div>
<div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;                            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;                                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div>
<div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;                        }</div>
<div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;                    }</div>
<div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160; </div>
<div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;                    <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;                    {</div>
<div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div>
<div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;                        {</div>
<div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;                        <span class="comment">// Apply previously calculated coefficients (with rounding on aarch64)</span></div>
<div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;<span class="preprocessor">#ifdef __aarch64__</span></div>
<div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;                            <span class="keyword">const</span> int32_t res =</div>
<div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;                                <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#ab71c35ca207b916a9f8b0336ab88484e">arm_compute::support::cpp11::round</a>(A * (<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(res_value_q)) + B);</div>
<div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;<span class="preprocessor">#else  // defined(__aarch64__)</span></div>
<div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;                            <span class="keyword">const</span> int32_t res = <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">A</a> * (<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(res_value_q)) + <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">B</a>;</div>
<div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;<span class="preprocessor">#endif // __aarch64__</span></div>
<div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;                            *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr() + x) = utils::cast::saturate_cast&lt;T&gt;(res);</div>
<div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;                        }</div>
<div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div>
<div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;                        {</div>
<div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;                            <span class="comment">// Subtract accumulated offsets</span></div>
<div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;                            res_value -= (in_info.dimension(axis) - 1) * iq_info.offset;</div>
<div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;                            *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr() + x) = utils::cast::saturate_cast&lt;T&gt;(res_value);</div>
<div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;                        }</div>
<div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;                        {</div>
<div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;                            <span class="comment">//re-quantize result</span></div>
<div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;                            T res = 0;</div>
<div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;                            <span class="keywordflow">if</span> (std::is_same&lt;T, uint8_t&gt;::value)</div>
<div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;                            {</div>
<div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;                                res = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(res_value, iq_info);</div>
<div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;                            }</div>
<div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;                            <span class="keywordflow">else</span></div>
<div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;                            {</div>
<div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;                                res = <a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(res_value, iq_info);</div>
<div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;                            }</div>
<div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;                            *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr() + x)) = res;</div>
<div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;                        }</div>
<div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;                        {</div>
<div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;                            *(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr() + x * 4)) = res_idx;</div>
<div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;                        }</div>
<div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;                        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;                            *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr() + x)) = res_value;</div>
<div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;                    }</div>
<div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;                }</div>
<div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;            },</div>
<div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div>
<div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::A</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ARG_IDX_MAX</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ARG_IDX_MIN</a>, <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::B</a>, <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00079">arm_compute::calculate_index_quantized()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00367">arm_compute::dequantize_qasymm8()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00380">arm_compute::dequantize_qasymm8_signed()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00216">TensorInfo::dimension()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00101">Window::Dimension::end()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00074">arm_compute::execute_window_loop()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">arm_compute::MAX</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">arm_compute::MEAN_SUM</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">arm_compute::MIN</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00063">UniformQuantizationInfo::offset</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">arm_compute::PROD</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00147">Iterator::ptr()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">ITensorInfo::quantization_info()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00299">TensorInfo::quantization_info()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00309">arm_compute::quantize_qasymm8()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00323">arm_compute::quantize_qasymm8_signed()</a>, <a class="el" href="_toolchain_support_8h_source.xhtml#l00185">arm_compute::support::cpp11::round()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00062">UniformQuantizationInfo::scale</a>, <a class="el" href="_window_8inl_source.xhtml#l00053">Window::set()</a>, <a class="el" href="_window_8inl_source.xhtml#l00298">Window::shape()</a>, <a class="el" href="_window_8h_source.xhtml#l00096">Window::Dimension::start()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00224">TensorInfo::strides_in_bytes()</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">arm_compute::SUM</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">arm_compute::SUM_SQUARE</a>, <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00347">type</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00152">QuantizationInfo::uniform()</a>, <a class="el" href="intrinsics_2add_8h_source.xhtml#l00039">arm_compute::wrapper::vadd()</a>, <a class="el" href="combine_8h_source.xhtml#l00039">arm_compute::wrapper::vcombine()</a>, <a class="el" href="dup__n_8h_source.xhtml#l00041">arm_compute::wrapper::vdup_n()</a>, <a class="el" href="gethigh_8h_source.xhtml#l00039">arm_compute::wrapper::vgethigh()</a>, <a class="el" href="getlow_8h_source.xhtml#l00039">arm_compute::wrapper::vgetlow()</a>, <a class="el" href="namespacearm__compute.xhtml#a2e0f2412b4d1302272d1aeb85d21ab25">arm_compute::vinvq_f32()</a>, <a class="el" href="load_8h_source.xhtml#l00058">arm_compute::wrapper::vloadq()</a>, <a class="el" href="max_8h_source.xhtml#l00039">arm_compute::wrapper::vmax()</a>, <a class="el" href="min_8h_source.xhtml#l00039">arm_compute::wrapper::vmin()</a>, <a class="el" href="mla_8h_source.xhtml#l00046">arm_compute::wrapper::vmla()</a>, <a class="el" href="movl_8h_source.xhtml#l00039">arm_compute::wrapper::vmovl()</a>, <a class="el" href="mul_8h_source.xhtml#l00039">arm_compute::wrapper::vmul()</a>, <a class="el" href="movn_8h_source.xhtml#l00052">arm_compute::wrapper::vqmovn()</a>, <a class="el" href="reinterpret_8h_source.xhtml#l00044">arm_compute::wrapper::vreinterpret()</a>, <a class="el" href="store_8h_source.xhtml#l00039">arm_compute::wrapper::vstore()</a>, <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00039">arm_compute::wrapper::vsub()</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00086">Dimensions&lt; T &gt;::x()</a>, and <a class="el" href="_window_8h_source.xhtml#l00158">Window::x()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>src/cpu/kernels/reduction_layer/generic/neon/<a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a1894e825a225f3b2013f594cbffdae73"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">arm_compute::wrapper::vadd</a></div><div class="ttdeci">uint8x8_t vadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00039">add.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ac1d8253f8b422e143ab989ad2a4d29dd"><div class="ttname"><a href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">arm_compute::dequantize_qasymm8</a></div><div class="ttdeci">float dequantize_qasymm8(uint8_t value, const INFO_TYPE &amp;qinfo)</div><div class="ttdoc">Dequantize a value given an unsigned 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00367">QuantizationInfo.h:367</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">arm_compute::ReductionOperation::PROD</a></div><div class="ttdeci">@ PROD</div><div class="ttdoc">Product.</div></div>
<div class="ttc" id="agemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00347">gemm_interleaved.hpp:347</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">arm_compute::ReductionOperation::MIN</a></div><div class="ttdeci">@ MIN</div><div class="ttdoc">Min.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a8dbba1731c32d176ae6635be1c65cbd6"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">arm_compute::wrapper::vmovl</a></div><div class="ttdeci">uint16x8_t vmovl(const uint8x8_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="movl_8h_source.xhtml#l00039">movl.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_acae4ec59246f93845fa78120d83d7c1e"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">arm_compute::wrapper::vsub</a></div><div class="ttdeci">uint8x8_t vsub(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2sub_8h_source.xhtml#l00039">sub.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_ab71c35ca207b916a9f8b0336ab88484e"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#ab71c35ca207b916a9f8b0336ab88484e">arm_compute::support::cpp11::round</a></div><div class="ttdeci">T round(T value)</div><div class="ttdoc">Round floating-point value with half value rounding away from zero.</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00185">ToolchainSupport.h:185</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab8cef8b31b552b532a14ab8815e06285"><div class="ttname"><a href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">arm_compute::quantize_qasymm8</a></div><div class="ttdeci">uint8_t quantize_qasymm8(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given an unsigned 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00309">QuantizationInfo.h:309</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a55bc37be5f14e4c561d3ca93b2a34aa9"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">arm_compute::wrapper::vqmovn</a></div><div class="ttdeci">uint32x2_t vqmovn(const uint64x2_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="movn_8h_source.xhtml#l00052">movn.h:52</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">arm_compute::ReductionOperation::MAX</a></div><div class="ttdeci">@ MAX</div><div class="ttdoc">Max.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a77f54eded7fef436d3a4f21ad5a00da6"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">arm_compute::wrapper::vloadq</a></div><div class="ttdeci">uint8x16_t vloadq(const uint8_t *ptr)</div><div class="ttdef"><b>Definition:</b> <a href="load_8h_source.xhtml#l00058">load.h:58</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">arm_compute::ReductionOperation::MEAN_SUM</a></div><div class="ttdeci">@ MEAN_SUM</div><div class="ttdoc">Mean of sum.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_ab026a1aeec48074092f548c130c323f4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">arm_compute::wrapper::vmin</a></div><div class="ttdeci">uint8x8_t vmin(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="min_8h_source.xhtml#l00039">min.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a66c8dd218a4863a14fec363e3dd13dc4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">arm_compute::wrapper::vmul</a></div><div class="ttdeci">uint8x8_t vmul(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="mul_8h_source.xhtml#l00039">mul.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">arm_compute::ReductionOperation::SUM_SQUARE</a></div><div class="ttdeci">@ SUM_SQUARE</div><div class="ttdoc">Sum of squares.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::Channel::B</a></div><div class="ttdeci">@ B</div><div class="ttdoc">Blue channel.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6c0dcc38187027dcb89cd9724bc5a823"><div class="ttname"><a href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;...iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00074">Helpers.inl:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a57b24ba39d5191e1946dcc87a7e88b10"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a57b24ba39d5191e1946dcc87a7e88b10">arm_compute::wrapper::vreinterpret</a></div><div class="ttdeci">int16x4_t vreinterpret(const uint16x4_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="reinterpret_8h_source.xhtml#l00044">reinterpret.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a464ea9027ae01e64014040d69302800f"><div class="ttname"><a href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">arm_compute::quantize_qasymm8_signed</a></div><div class="ttdeci">int8_t quantize_qasymm8_signed(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given a signed 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00323">QuantizationInfo.h:323</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a324e868d35ee9cec67b7dd8ad0b1ad05"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a324e868d35ee9cec67b7dd8ad0b1ad05">arm_compute::cpu::vector_type</a></div><div class="ttdeci">wrapper::traits::neon_vector_t&lt; element_type, window_step &gt; vector_type</div><div class="ttdef"><b>Definition:</b> <a href="quantize_2generic_2neon_2impl_8h_source.xhtml#l00063">impl.h:63</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a1598e7eb12a58fc53559332cd0c3ab6f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">arm_compute::wrapper::vcombine</a></div><div class="ttdeci">uint8x16_t vcombine(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="combine_8h_source.xhtml#l00039">combine.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a8a1099ac566bfff8b1c11f582b4b6ff0"><div class="ttname"><a href="namespacearm__compute.xhtml#a8a1099ac566bfff8b1c11f582b4b6ff0">arm_compute::calculate_index_quantized</a></div><div class="ttdeci">uint32x4x4_t calculate_index_quantized(uint32_t idx, T a, T b, uint32x4x4_t c, ReductionOperation op, int axis)</div><div class="ttdef"><b>Definition:</b> <a href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00079">impl.h:79</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ReductionOperation::ARG_IDX_MAX</a></div><div class="ttdeci">@ ARG_IDX_MAX</div><div class="ttdoc">Index of the max value.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a4287931a2912ecb6cece71219ca5478c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">arm_compute::wrapper::vmla</a></div><div class="ttdeci">uint8x8_t vmla(const uint8x8_t &amp;a, const uint8x8_t &amp;b, const uint8x8_t &amp;c)</div><div class="ttdef"><b>Definition:</b> <a href="mla_8h_source.xhtml#l00046">mla.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a8d1d14000c959f1146a8a64e1dafae5f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">arm_compute::wrapper::vmax</a></div><div class="ttdeci">uint8x8_t vmax(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="max_8h_source.xhtml#l00039">max.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ReductionOperation::ARG_IDX_MIN</a></div><div class="ttdeci">@ ARG_IDX_MIN</div><div class="ttdoc">Index of the min value.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a2902775707bc7bf7d6da1bda1cc15783"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">arm_compute::wrapper::vgetlow</a></div><div class="ttdeci">uint8x8_t vgetlow(const uint8x16_t val)</div><div class="ttdef"><b>Definition:</b> <a href="getlow_8h_source.xhtml#l00039">getlow.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_ae7943ea9c1f74dc72c62d4cc3966a459"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">arm_compute::wrapper::vstore</a></div><div class="ttdeci">void vstore(uint8_t *ptr, uint8x8_t val)</div><div class="ttdef"><b>Definition:</b> <a href="store_8h_source.xhtml#l00039">store.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_afe6fcf1a0c6f6c2d2cb10a8c14fa9131"><div class="ttname"><a href="namespacearm__compute.xhtml#afe6fcf1a0c6f6c2d2cb10a8c14fa9131">arm_compute::dequantize_qasymm8_signed</a></div><div class="ttdeci">float dequantize_qasymm8_signed(int8_t value, const INFO_TYPE &amp;qinfo)</div><div class="ttdoc">Dequantize a value given a signed 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00380">QuantizationInfo.h:380</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::Channel::A</a></div><div class="ttdeci">@ A</div><div class="ttdoc">Alpha channel.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a95ee388aa7c5bccab918235dc538a6b3"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">arm_compute::wrapper::vgethigh</a></div><div class="ttdeci">uint8x8_t vgethigh(const uint8x16_t val)</div><div class="ttdef"><b>Definition:</b> <a href="gethigh_8h_source.xhtml#l00039">gethigh.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a2e0f2412b4d1302272d1aeb85d21ab25"><div class="ttname"><a href="namespacearm__compute.xhtml#a2e0f2412b4d1302272d1aeb85d21ab25">arm_compute::vinvq_f32</a></div><div class="ttdeci">float32x4_t vinvq_f32(float32x4_t x)</div><div class="ttdoc">Calculate reciprocal.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">arm_compute::ReductionOperation::SUM</a></div><div class="ttdeci">@ SUM</div><div class="ttdoc">Sum.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a39e87435be178fba49b76f49426ef873"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">arm_compute::wrapper::vdup_n</a></div><div class="ttdeci">uint8x8_t vdup_n(uint8_t value, traits::vector_64_tag)</div><div class="ttdef"><b>Definition:</b> <a href="dup__n_8h_source.xhtml#l00041">dup_n.h:41</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1_red_op_y_z_w__quantized.xhtml">RedOpYZW_quantized</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
