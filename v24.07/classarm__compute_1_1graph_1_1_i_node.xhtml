<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: INode Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1graph_1_1_i_node.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">INode Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Node interface.  
 <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_node_8h_source.xhtml">INode.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a41ea547ddf32e27b4d3b6cc565ad67d1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a41ea547ddf32e27b4d3b6cc565ad67d1">INode</a> ()</td></tr>
<tr class="memdesc:a41ea547ddf32e27b4d3b6cc565ad67d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a41ea547ddf32e27b4d3b6cc565ad67d1">More...</a><br /></td></tr>
<tr class="separator:a41ea547ddf32e27b4d3b6cc565ad67d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1356f0d04912be3ec8d8ce7a2b0cddd2"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a1356f0d04912be3ec8d8ce7a2b0cddd2">~INode</a> ()=default</td></tr>
<tr class="memdesc:a1356f0d04912be3ec8d8ce7a2b0cddd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a1356f0d04912be3ec8d8ce7a2b0cddd2">More...</a><br /></td></tr>
<tr class="separator:a1356f0d04912be3ec8d8ce7a2b0cddd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d98a026d543444099ae32d51d150848"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6d98a026d543444099ae32d51d150848">INode</a> (const <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;)=delete</td></tr>
<tr class="memdesc:a6d98a026d543444099ae32d51d150848"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6d98a026d543444099ae32d51d150848">More...</a><br /></td></tr>
<tr class="separator:a6d98a026d543444099ae32d51d150848"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2f34bc6eaa698b25680f2091dc29170"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2f34bc6eaa698b25680f2091dc29170">operator=</a> (const <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;)=delete</td></tr>
<tr class="memdesc:ac2f34bc6eaa698b25680f2091dc29170"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy assigned (As this class contains pointers)  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2f34bc6eaa698b25680f2091dc29170">More...</a><br /></td></tr>
<tr class="separator:ac2f34bc6eaa698b25680f2091dc29170"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab926b66a0f1c5bfb4b80f6d56e5edbc9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ab926b66a0f1c5bfb4b80f6d56e5edbc9">INode</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ab926b66a0f1c5bfb4b80f6d56e5edbc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#ab926b66a0f1c5bfb4b80f6d56e5edbc9">More...</a><br /></td></tr>
<tr class="separator:ab926b66a0f1c5bfb4b80f6d56e5edbc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa85ed20eb40b3a914e78124c89556249"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aa85ed20eb40b3a914e78124c89556249">operator=</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:aa85ed20eb40b3a914e78124c89556249"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move assigned.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#aa85ed20eb40b3a914e78124c89556249">More...</a><br /></td></tr>
<tr class="separator:aa85ed20eb40b3a914e78124c89556249"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f3b12aedc549ea5ba08cbb36871da15"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a0f3b12aedc549ea5ba08cbb36871da15">validate</a> () const</td></tr>
<tr class="memdesc:a0f3b12aedc549ea5ba08cbb36871da15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a0f3b12aedc549ea5ba08cbb36871da15">More...</a><br /></td></tr>
<tr class="separator:a0f3b12aedc549ea5ba08cbb36871da15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b2d83e561886647467f86c20ce39bec"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6b2d83e561886647467f86c20ce39bec">type</a> () const =0</td></tr>
<tr class="memdesc:a6b2d83e561886647467f86c20ce39bec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns node's type.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6b2d83e561886647467f86c20ce39bec">More...</a><br /></td></tr>
<tr class="separator:a6b2d83e561886647467f86c20ce39bec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69a6e8613e2e1b00de98610c2ae6288a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a69a6e8613e2e1b00de98610c2ae6288a">accept</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml">INodeVisitor</a> &amp;v)=0</td></tr>
<tr class="memdesc:a69a6e8613e2e1b00de98610c2ae6288a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accepts a node visitor.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a69a6e8613e2e1b00de98610c2ae6288a">More...</a><br /></td></tr>
<tr class="separator:a69a6e8613e2e1b00de98610c2ae6288a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5edbd8a4a1b75060bb3b49bc0ba2c6b0"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a5edbd8a4a1b75060bb3b49bc0ba2c6b0">forward_descriptors</a> ()=0</td></tr>
<tr class="memdesc:a5edbd8a4a1b75060bb3b49bc0ba2c6b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forwards descriptor information to outputs if possible.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a5edbd8a4a1b75060bb3b49bc0ba2c6b0">More...</a><br /></td></tr>
<tr class="separator:a5edbd8a4a1b75060bb3b49bc0ba2c6b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98dd474c332ea76a71bd81b790d7e0d9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a98dd474c332ea76a71bd81b790d7e0d9">configure_output</a> (size_t idx) const =0</td></tr>
<tr class="memdesc:a98dd474c332ea76a71bd81b790d7e0d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates output configuration.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a98dd474c332ea76a71bd81b790d7e0d9">More...</a><br /></td></tr>
<tr class="separator:a98dd474c332ea76a71bd81b790d7e0d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d89c28bd42ba9a52da008bb69367171"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a> () const</td></tr>
<tr class="memdesc:a1d89c28bd42ba9a52da008bb69367171"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns node's name.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a1d89c28bd42ba9a52da008bb69367171">More...</a><br /></td></tr>
<tr class="separator:a1d89c28bd42ba9a52da008bb69367171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ea90a25ef8059df2d2e51b82991ebf3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a5ea90a25ef8059df2d2e51b82991ebf3">id</a> () const</td></tr>
<tr class="memdesc:a5ea90a25ef8059df2d2e51b82991ebf3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns node's ID.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a5ea90a25ef8059df2d2e51b82991ebf3">More...</a><br /></td></tr>
<tr class="separator:a5ea90a25ef8059df2d2e51b82991ebf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd25293f6de98c40b7186205c3496878"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#acd25293f6de98c40b7186205c3496878">graph</a> () const</td></tr>
<tr class="memdesc:acd25293f6de98c40b7186205c3496878"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns node's <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a>.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#acd25293f6de98c40b7186205c3496878">More...</a><br /></td></tr>
<tr class="separator:acd25293f6de98c40b7186205c3496878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff1c67aacd9b499aa083c6ef0b72d0eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aff1c67aacd9b499aa083c6ef0b72d0eb">graph</a> ()</td></tr>
<tr class="memdesc:aff1c67aacd9b499aa083c6ef0b72d0eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns node's <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a>.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#aff1c67aacd9b499aa083c6ef0b72d0eb">More...</a><br /></td></tr>
<tr class="separator:aff1c67aacd9b499aa083c6ef0b72d0eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ace781433ede299fb1dc8d0b02667b9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a3ace781433ede299fb1dc8d0b02667b9">set_graph</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> *g)</td></tr>
<tr class="memdesc:a3ace781433ede299fb1dc8d0b02667b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the graph that this node is registered to.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a3ace781433ede299fb1dc8d0b02667b9">More...</a><br /></td></tr>
<tr class="separator:a3ace781433ede299fb1dc8d0b02667b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483b76accbb02199c359bd5cf23dd476"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a483b76accbb02199c359bd5cf23dd476">set_id</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a5ea90a25ef8059df2d2e51b82991ebf3">id</a>)</td></tr>
<tr class="memdesc:a483b76accbb02199c359bd5cf23dd476"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the node id.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a483b76accbb02199c359bd5cf23dd476">More...</a><br /></td></tr>
<tr class="separator:a483b76accbb02199c359bd5cf23dd476"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeadb909ea02bec78f92ca35ff0ccbaea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">set_common_node_parameters</a> (<a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> common_params)</td></tr>
<tr class="memdesc:aeadb909ea02bec78f92ca35ff0ccbaea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets common node parameters.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#aeadb909ea02bec78f92ca35ff0ccbaea">More...</a><br /></td></tr>
<tr class="separator:aeadb909ea02bec78f92ca35ff0ccbaea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4d8c49b8b04fae8561238b8efb472f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ab4d8c49b8b04fae8561238b8efb472f5">set_requested_target</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> target)</td></tr>
<tr class="memdesc:ab4d8c49b8b04fae8561238b8efb472f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets target preference.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#ab4d8c49b8b04fae8561238b8efb472f5">More...</a><br /></td></tr>
<tr class="separator:ab4d8c49b8b04fae8561238b8efb472f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7069f1901ff50cd2ac6ba152cb106058"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a7069f1901ff50cd2ac6ba152cb106058">set_assigned_target</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> target)</td></tr>
<tr class="memdesc:a7069f1901ff50cd2ac6ba152cb106058"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the final execution target.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a7069f1901ff50cd2ac6ba152cb106058">More...</a><br /></td></tr>
<tr class="separator:a7069f1901ff50cd2ac6ba152cb106058"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09dab02145c91bb9be20fe98cbedc300"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a09dab02145c91bb9be20fe98cbedc300">set_output_tensor</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> tid, size_t idx)</td></tr>
<tr class="memdesc:a09dab02145c91bb9be20fe98cbedc300"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the output tensor of at a given index.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a09dab02145c91bb9be20fe98cbedc300">More...</a><br /></td></tr>
<tr class="separator:a09dab02145c91bb9be20fe98cbedc300"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c77caaf0ff3ccc12220871c6dfed704"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a7c77caaf0ff3ccc12220871c6dfed704">inputs</a> () const</td></tr>
<tr class="memdesc:a7c77caaf0ff3ccc12220871c6dfed704"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns inputs of the node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a7c77caaf0ff3ccc12220871c6dfed704">More...</a><br /></td></tr>
<tr class="separator:a7c77caaf0ff3ccc12220871c6dfed704"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74e6b1e9d4924f2fb12baed6a432d3a5"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a74e6b1e9d4924f2fb12baed6a432d3a5">outputs</a> () const</td></tr>
<tr class="memdesc:a74e6b1e9d4924f2fb12baed6a432d3a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns outputs of the node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a74e6b1e9d4924f2fb12baed6a432d3a5">More...</a><br /></td></tr>
<tr class="separator:a74e6b1e9d4924f2fb12baed6a432d3a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fd5d1d4dea9bb355f9baa9b4d44402f"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a3fd5d1d4dea9bb355f9baa9b4d44402f">input_edges</a> () const</td></tr>
<tr class="memdesc:a3fd5d1d4dea9bb355f9baa9b4d44402f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns input edge set.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a3fd5d1d4dea9bb355f9baa9b4d44402f">More...</a><br /></td></tr>
<tr class="separator:a3fd5d1d4dea9bb355f9baa9b4d44402f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbf8678d888561b348dd1c34d9e34af9"><td class="memItemLeft" align="right" valign="top">const std::set&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#abbf8678d888561b348dd1c34d9e34af9">output_edges</a> () const</td></tr>
<tr class="memdesc:abbf8678d888561b348dd1c34d9e34af9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns output edge set.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#abbf8678d888561b348dd1c34d9e34af9">More...</a><br /></td></tr>
<tr class="separator:abbf8678d888561b348dd1c34d9e34af9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a156d1ea7a01d8b27131f30aacaf40b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6a156d1ea7a01d8b27131f30aacaf40b">input_id</a> (size_t idx) const</td></tr>
<tr class="memdesc:a6a156d1ea7a01d8b27131f30aacaf40b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the tensor ID of a given input of the node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6a156d1ea7a01d8b27131f30aacaf40b">More...</a><br /></td></tr>
<tr class="separator:a6a156d1ea7a01d8b27131f30aacaf40b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a339f9817d95cb065b7670d35c03f4d88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a339f9817d95cb065b7670d35c03f4d88">output_id</a> (size_t idx) const</td></tr>
<tr class="memdesc:a339f9817d95cb065b7670d35c03f4d88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the tensor ID of a given output of the node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a339f9817d95cb065b7670d35c03f4d88">More...</a><br /></td></tr>
<tr class="separator:a339f9817d95cb065b7670d35c03f4d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7c09b0faaf3c808b0489012204852a9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ad7c09b0faaf3c808b0489012204852a9">input</a> (size_t idx) const</td></tr>
<tr class="memdesc:ad7c09b0faaf3c808b0489012204852a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the tensor of a given input of the node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#ad7c09b0faaf3c808b0489012204852a9">More...</a><br /></td></tr>
<tr class="separator:ad7c09b0faaf3c808b0489012204852a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27369471d9b2ba47746e1e923f585b9f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a27369471d9b2ba47746e1e923f585b9f">output</a> (size_t idx) const</td></tr>
<tr class="memdesc:a27369471d9b2ba47746e1e923f585b9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the tensor of a given output of the node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a27369471d9b2ba47746e1e923f585b9f">More...</a><br /></td></tr>
<tr class="separator:a27369471d9b2ba47746e1e923f585b9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a283425ac27acd897fb075e0cee215020"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a283425ac27acd897fb075e0cee215020">input_edge_id</a> (size_t idx) const</td></tr>
<tr class="memdesc:a283425ac27acd897fb075e0cee215020"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the edge ID of a given input of the node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a283425ac27acd897fb075e0cee215020">More...</a><br /></td></tr>
<tr class="separator:a283425ac27acd897fb075e0cee215020"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bca7473aa08cb0ecba36cb5dda2badf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_edge.xhtml">Edge</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6bca7473aa08cb0ecba36cb5dda2badf">input_edge</a> (size_t idx) const</td></tr>
<tr class="memdesc:a6bca7473aa08cb0ecba36cb5dda2badf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the edge of a given input of the node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6bca7473aa08cb0ecba36cb5dda2badf">More...</a><br /></td></tr>
<tr class="separator:a6bca7473aa08cb0ecba36cb5dda2badf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe0cb3e4411a1c289e3e40e3f9d79fec"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#abe0cb3e4411a1c289e3e40e3f9d79fec">num_inputs</a> () const</td></tr>
<tr class="memdesc:abe0cb3e4411a1c289e3e40e3f9d79fec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns number of inputs of the node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#abe0cb3e4411a1c289e3e40e3f9d79fec">More...</a><br /></td></tr>
<tr class="separator:abe0cb3e4411a1c289e3e40e3f9d79fec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d7c8bdf0059bb235880f8ef8d190bc"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a75d7c8bdf0059bb235880f8ef8d190bc">num_outputs</a> () const</td></tr>
<tr class="memdesc:a75d7c8bdf0059bb235880f8ef8d190bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns number of outputs of the node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a75d7c8bdf0059bb235880f8ef8d190bc">More...</a><br /></td></tr>
<tr class="separator:a75d7c8bdf0059bb235880f8ef8d190bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a106f54af67828d3da9f8098397d3b4ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a106f54af67828d3da9f8098397d3b4ea">common_node_params</a> () const</td></tr>
<tr class="memdesc:a106f54af67828d3da9f8098397d3b4ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns common node parameters.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a106f54af67828d3da9f8098397d3b4ea">More...</a><br /></td></tr>
<tr class="separator:a106f54af67828d3da9f8098397d3b4ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc6514aa006c1820217d9a8d832cc656"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#afc6514aa006c1820217d9a8d832cc656">requested_target</a> () const</td></tr>
<tr class="memdesc:afc6514aa006c1820217d9a8d832cc656"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns requested target for this node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#afc6514aa006c1820217d9a8d832cc656">More...</a><br /></td></tr>
<tr class="separator:afc6514aa006c1820217d9a8d832cc656"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa26cd423e8fc9233bd2bff46f82f46ab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#aa26cd423e8fc9233bd2bff46f82f46ab">assigned_target</a> () const</td></tr>
<tr class="memdesc:aa26cd423e8fc9233bd2bff46f82f46ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns assigned target for this node.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#aa26cd423e8fc9233bd2bff46f82f46ab">More...</a><br /></td></tr>
<tr class="separator:aa26cd423e8fc9233bd2bff46f82f46ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:afab89afd724f1b07b1aaad6bdc61c47a"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#afab89afd724f1b07b1aaad6bdc61c47a">Graph</a></td></tr>
<tr class="separator:afab89afd724f1b07b1aaad6bdc61c47a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Node interface. </p>

<p class="definition">Definition at line <a class="el" href="_i_node_8h_source.xhtml#l00046">46</a> of file <a class="el" href="_i_node_8h_source.xhtml">INode.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a41ea547ddf32e27b4d3b6cc565ad67d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41ea547ddf32e27b4d3b6cc565ad67d1">&#9670;&nbsp;</a></span>INode() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    : _graph(<span class="keyword">nullptr</span>), _id(<a class="code" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a>), _common_params({ <span class="stringliteral">&quot;&quot;</span>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52">Target::UNSPECIFIED</a>}),</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      _outputs(), _input_edges(), _output_edges(), _assigned_target(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52">Target::UNSPECIFIED</a>)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52">arm_compute::graph::UNSPECIFIED</a>.</p>

</div>
</div>
<a id="a1356f0d04912be3ec8d8ce7a2b0cddd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1356f0d04912be3ec8d8ce7a2b0cddd2">&#9670;&nbsp;</a></span>~INode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<a id="a6d98a026d543444099ae32d51d150848"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d98a026d543444099ae32d51d150848">&#9670;&nbsp;</a></span>INode() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="ab926b66a0f1c5bfb4b80f6d56e5edbc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab926b66a0f1c5bfb4b80f6d56e5edbc9">&#9670;&nbsp;</a></span>INode() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a69a6e8613e2e1b00de98610c2ae6288a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69a6e8613e2e1b00de98610c2ae6288a">&#9670;&nbsp;</a></span>accept()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void accept </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml">INodeVisitor</a> &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Accepts a node visitor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Visitor to accept </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">FusedConvolutionBatchNormalizationNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">FusedDepthwiseConvolutionBatchNormalizationNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">UnaryEltwiseLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ConvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">DepthwiseConvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">FullyConnectedLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_strided_slice_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">StridedSliceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ConcatenateLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">EltwiseLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">SplitLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_print_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">PrintLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_l2_normalize_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">L2NormalizeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_slice_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">SliceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_arg_min_max_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ArgMinMaxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">DeconvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">BatchNormalizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">DetectionOutputLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_prior_box_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">PriorBoxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_stack_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">StackLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">PoolingLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reorg_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ReorgLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_depth_to_space_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">DepthToSpaceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_pad_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">PadLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reduction_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ReductionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_r_o_i_align_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ROIAlignLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_dummy_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">DummyNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_permute_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">PermuteLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_quantization_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">QuantizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_resize_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ResizeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ActivationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_bounding_box_transform_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">BoundingBoxTransformLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_generate_proposals_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">GenerateProposalsLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_channel_shuffle_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ChannelShuffleLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">DetectionPostProcessLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">NormalizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">SoftmaxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">DequantizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_const_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ConstNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_input_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">InputNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ReshapeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">FlattenLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_normalize_planar_y_u_v_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">NormalizePlanarYUVLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_output_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">OutputNode</a>, and <a class="el" href="classarm__compute_1_1graph_1_1_p_relu_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">PReluLayerNode</a>.</p>

</div>
</div>
<a id="aa26cd423e8fc9233bd2bff46f82f46ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa26cd423e8fc9233bd2bff46f82f46ab">&#9670;&nbsp;</a></span>assigned_target()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> assigned_target </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns assigned target for this node. </p>
<dl class="section return"><dt>Returns</dt><dd>Assigned target of this node </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00198">198</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;{</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">return</span> _assigned_target;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00134">arm_compute::graph::detail::configure_all_nodes()</a>, <a class="el" href="_n_e_device_backend_8cpp_source.xhtml#l00136">NEDeviceBackend::configure_node()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00192">CLDeviceBackend::configure_node()</a>, <a class="el" href="_grouped_convolution_mutator_8cpp_source.xhtml#l00120">GroupedConvolutionMutator::mutate()</a>, <a class="el" href="_n_e_device_backend_8cpp_source.xhtml#l00145">NEDeviceBackend::validate_node()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00201">CLDeviceBackend::validate_node()</a>, and <a class="el" href="_function_helpers_8h_source.xhtml#l00078">arm_compute::graph::backends::detail::validate_node()</a>.</p>

</div>
</div>
<a id="a106f54af67828d3da9f8098397d3b4ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a106f54af67828d3da9f8098397d3b4ea">&#9670;&nbsp;</a></span>common_node_params()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> common_node_params </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns common node parameters. </p>
<dl class="section return"><dt>Returns</dt><dd>Common node parameters </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00188">188</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;{</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span> _common_params;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a98dd474c332ea76a71bd81b790d7e0d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98dd474c332ea76a71bd81b790d7e0d9">&#9670;&nbsp;</a></span>configure_output()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> configure_output </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates output configuration. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Output index to configure</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Output descriptor configuration </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">FusedConvolutionBatchNormalizationNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">FusedDepthwiseConvolutionBatchNormalizationNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">UnaryEltwiseLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ConvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">DepthwiseConvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">FullyConnectedLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_strided_slice_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">StridedSliceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ConcatenateLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">EltwiseLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">SplitLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_print_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">PrintLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_l2_normalize_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">L2NormalizeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_slice_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">SliceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_arg_min_max_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ArgMinMaxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">DeconvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">BatchNormalizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">DetectionOutputLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_prior_box_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">PriorBoxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_stack_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">StackLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">PoolingLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reorg_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ReorgLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_depth_to_space_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">DepthToSpaceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_pad_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">PadLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reduction_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ReductionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_r_o_i_align_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ROIAlignLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_dummy_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">DummyNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_permute_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">PermuteLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_quantization_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">QuantizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_resize_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ResizeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ActivationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_bounding_box_transform_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">BoundingBoxTransformLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_generate_proposals_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">GenerateProposalsLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_channel_shuffle_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ChannelShuffleLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">DetectionPostProcessLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">NormalizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">SoftmaxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">DequantizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_const_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ConstNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_input_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">InputNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ReshapeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">FlattenLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_normalize_planar_y_u_v_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">NormalizePlanarYUVLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_output_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">OutputNode</a>, and <a class="el" href="classarm__compute_1_1graph_1_1_p_relu_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">PReluLayerNode</a>.</p>

</div>
</div>
<a id="a5edbd8a4a1b75060bb3b49bc0ba2c6b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5edbd8a4a1b75060bb3b49bc0ba2c6b0">&#9670;&nbsp;</a></span>forward_descriptors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool forward_descriptors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Forwards descriptor information to outputs if possible. </p>
<dl class="section return"><dt>Returns</dt><dd>True if descriptor information could be forwarded otherwise false </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">FusedConvolutionBatchNormalizationNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">FusedDepthwiseConvolutionBatchNormalizationNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">UnaryEltwiseLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ConvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">DepthwiseConvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">FullyConnectedLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_strided_slice_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">StridedSliceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ConcatenateLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">EltwiseLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">SplitLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_print_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">PrintLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_l2_normalize_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">L2NormalizeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_slice_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">SliceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_arg_min_max_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ArgMinMaxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">DeconvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">BatchNormalizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">DetectionOutputLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_prior_box_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">PriorBoxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_stack_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">StackLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">PoolingLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reorg_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ReorgLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_depth_to_space_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">DepthToSpaceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_pad_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">PadLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reduction_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ReductionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_r_o_i_align_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ROIAlignLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_dummy_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">DummyNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_permute_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">PermuteLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_quantization_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">QuantizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_resize_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ResizeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ActivationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_bounding_box_transform_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">BoundingBoxTransformLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_generate_proposals_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">GenerateProposalsLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_channel_shuffle_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ChannelShuffleLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">DetectionPostProcessLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">NormalizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">SoftmaxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">DequantizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_const_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ConstNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_input_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">InputNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ReshapeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">FlattenLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_normalize_planar_y_u_v_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">NormalizePlanarYUVLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_output_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">OutputNode</a>, and <a class="el" href="classarm__compute_1_1graph_1_1_p_relu_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">PReluLayerNode</a>.</p>

<p class="reference">Referenced by <a class="el" href="graph_2_graph_8h_source.xhtml#l00234">Graph::add_node()</a>.</p>

</div>
</div>
<a id="aff1c67aacd9b499aa083c6ef0b72d0eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff1c67aacd9b499aa083c6ef0b72d0eb">&#9670;&nbsp;</a></span>graph() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a>* graph </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns node's <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Node's graph </dd></dl>

</div>
</div>
<a id="acd25293f6de98c40b7186205c3496878"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd25293f6de98c40b7186205c3496878">&#9670;&nbsp;</a></span>graph() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> * graph </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns node's <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Node's graph </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00112">112</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> _graph;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_topological_sort_8cpp_source.xhtml#l00046">arm_compute::graph::detail::all_inputs_are_visited()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00200">arm_compute::graph::get_driver_nodes()</a>, and <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00180">arm_compute::graph::get_driving_nodes()</a>.</p>

</div>
</div>
<a id="a5ea90a25ef8059df2d2e51b82991ebf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ea90a25ef8059df2d2e51b82991ebf3">&#9670;&nbsp;</a></span>id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns node's ID. </p>
<dl class="section return"><dt>Returns</dt><dd>Node's ID </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00102">102</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> _id;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_device_backend_8cpp_source.xhtml#l00136">NEDeviceBackend::configure_node()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00192">CLDeviceBackend::configure_node()</a>, <a class="el" href="_edge_8h_source.xhtml#l00086">Edge::consumer_id()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00377">arm_compute::graph::backends::detail::create_concatenate_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01613">arm_compute::graph::backends::detail::create_stack_layer()</a>, <a class="el" href="_depth_concat_sub_tensor_mutator_8cpp_source.xhtml#l00050">DepthConcatSubTensorMutator::mutate()</a>, <a class="el" href="_grouped_convolution_mutator_8cpp_source.xhtml#l00120">GroupedConvolutionMutator::mutate()</a>, <a class="el" href="_split_layer_sub_tensor_mutator_8cpp_source.xhtml#l00050">SplitLayerSubTensorMutator::mutate()</a>, <a class="el" href="_node_execution_method_mutator_8cpp_source.xhtml#l00081">NodeExecutionMethodMutator::mutate()</a>, <a class="el" href="_edge_8h_source.xhtml#l00078">Edge::producer_id()</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00056">INode::set_id()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00046">arm_compute::graph::detail::transfer_driving_nodes_and_remove_old_node()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00063">arm_compute::graph::backends::detail::validate_arg_min_max_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00087">arm_compute::graph::backends::detail::validate_bounding_box_transform_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00112">arm_compute::graph::backends::detail::validate_channel_shuffle_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00142">arm_compute::graph::backends::detail::validate_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00242">arm_compute::graph::backends::detail::validate_depth_to_space_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00202">arm_compute::graph::backends::detail::validate_depthwise_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00264">arm_compute::graph::backends::detail::validate_dequantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00286">arm_compute::graph::backends::detail::validate_detection_output_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00311">arm_compute::graph::backends::detail::validate_detection_post_process_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00691">arm_compute::graph::backends::detail::validate_eltwise_Layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00340">arm_compute::graph::backends::detail::validate_generate_proposals_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00368">arm_compute::graph::backends::detail::validate_l2_normalize_layer()</a>, <a class="el" href="_n_e_device_backend_8cpp_source.xhtml#l00145">NEDeviceBackend::validate_node()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00201">CLDeviceBackend::validate_node()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00078">arm_compute::graph::backends::detail::validate_node()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00394">arm_compute::graph::backends::detail::validate_normalize_planar_yuv_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00420">arm_compute::graph::backends::detail::validate_pad_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00444">arm_compute::graph::backends::detail::validate_permute_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00468">arm_compute::graph::backends::detail::validate_prelu_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00492">arm_compute::graph::backends::detail::validate_priorbox_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00517">arm_compute::graph::backends::detail::validate_quantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00541">arm_compute::graph::backends::detail::validate_reduction_operation_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00566">arm_compute::graph::backends::detail::validate_reorg_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00590">arm_compute::graph::backends::detail::validate_reshape_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00614">arm_compute::graph::backends::detail::validate_roi_align_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00640">arm_compute::graph::backends::detail::validate_slice_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00665">arm_compute::graph::backends::detail::validate_strided_slice_layer()</a>, and <a class="el" href="_validate_helpers_8h_source.xhtml#l00743">arm_compute::graph::backends::detail::validate_unary_eltwise_layer()</a>.</p>

</div>
</div>
<a id="ad7c09b0faaf3c808b0489012204852a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7c09b0faaf3c808b0489012204852a9">&#9670;&nbsp;</a></span>input()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> * input </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the tensor of a given input of the node. </p>
<dl class="section note"><dt>Note</dt><dd>Precondition : idx should be a valid input index</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index of the node input</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> of the requested input </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00150">150</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_graph == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(idx &gt;= _input_edges.size());</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    Edge *e = _graph-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a0ea47db036b1c140af002ee1494dcb6f">edge</a>(_input_edges[idx]);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">return</span> (e != <span class="keyword">nullptr</span>) ? e-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">tensor</a>() : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00218">Graph::edge()</a>, and <a class="el" href="_edge_8h_source.xhtml#l00126">Edge::tensor()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00073">arm_compute::graph::detail::allocate_all_input_tensors()</a>, <a class="el" href="_flatten_layer_node_8cpp_source.xhtml#l00051">FlattenLayerNode::configure_output()</a>, <a class="el" href="_normalize_planar_y_u_v_layer_node_8cpp_source.xhtml#l00052">NormalizePlanarYUVLayerNode::configure_output()</a>, <a class="el" href="_p_relu_layer_node_8cpp_source.xhtml#l00051">PReluLayerNode::configure_output()</a>, <a class="el" href="src_2graph_2nodes_2_reshape_layer_8cpp_source.xhtml#l00050">ReshapeLayerNode::configure_output()</a>, <a class="el" href="_dequantization_layer_node_8cpp_source.xhtml#l00053">DequantizationLayerNode::configure_output()</a>, <a class="el" href="_channel_shuffle_layer_node_8cpp_source.xhtml#l00056">ChannelShuffleLayerNode::configure_output()</a>, <a class="el" href="_normalization_layer_node_8cpp_source.xhtml#l00057">NormalizationLayerNode::configure_output()</a>, <a class="el" href="_softmax_layer_node_8cpp_source.xhtml#l00057">SoftmaxLayerNode::configure_output()</a>, <a class="el" href="_activation_layer_node_8cpp_source.xhtml#l00057">ActivationLayerNode::configure_output()</a>, <a class="el" href="_bounding_box_transform_layer_node_8cpp_source.xhtml#l00057">BoundingBoxTransformLayerNode::configure_output()</a>, <a class="el" href="_generate_proposals_layer_node_8cpp_source.xhtml#l00061">GenerateProposalsLayerNode::configure_output()</a>, <a class="el" href="_dummy_node_8cpp_source.xhtml#l00053">DummyNode::configure_output()</a>, <a class="el" href="_permute_layer_node_8cpp_source.xhtml#l00057">PermuteLayerNode::configure_output()</a>, <a class="el" href="_quantization_layer_node_8cpp_source.xhtml#l00060">QuantizationLayerNode::configure_output()</a>, <a class="el" href="_resize_layer_node_8cpp_source.xhtml#l00063">ResizeLayerNode::configure_output()</a>, <a class="el" href="_depth_to_space_layer_node_8cpp_source.xhtml#l00074">DepthToSpaceLayerNode::configure_output()</a>, <a class="el" href="_pad_layer_node_8cpp_source.xhtml#l00062">PadLayerNode::configure_output()</a>, <a class="el" href="_reduction_layer_node_8cpp_source.xhtml#l00069">ReductionLayerNode::configure_output()</a>, <a class="el" href="_r_o_i_align_layer_node_8cpp_source.xhtml#l00058">ROIAlignLayerNode::configure_output()</a>, <a class="el" href="_pooling_layer_node_8cpp_source.xhtml#l00080">PoolingLayerNode::configure_output()</a>, <a class="el" href="_reorg_layer_node_8cpp_source.xhtml#l00078">ReorgLayerNode::configure_output()</a>, <a class="el" href="_detection_output_layer_node_8cpp_source.xhtml#l00072">DetectionOutputLayerNode::configure_output()</a>, <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00073">PriorBoxLayerNode::configure_output()</a>, <a class="el" href="_batch_normalization_layer_node_8cpp_source.xhtml#l00068">BatchNormalizationLayerNode::configure_output()</a>, <a class="el" href="_deconvolution_layer_node_8cpp_source.xhtml#l00084">DeconvolutionLayerNode::configure_output()</a>, <a class="el" href="_arg_min_max_layer_node_8cpp_source.xhtml#l00071">ArgMinMaxLayerNode::configure_output()</a>, <a class="el" href="_l2_normalize_layer_node_8cpp_source.xhtml#l00059">L2NormalizeLayerNode::configure_output()</a>, <a class="el" href="_slice_layer_node_8cpp_source.xhtml#l00075">SliceLayerNode::configure_output()</a>, <a class="el" href="_print_layer_node_8cpp_source.xhtml#l00071">PrintLayerNode::configure_output()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00104">SplitLayerNode::configure_output()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00082">EltwiseLayerNode::configure_output()</a>, <a class="el" href="_strided_slice_layer_node_8cpp_source.xhtml#l00092">StridedSliceLayerNode::configure_output()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00136">FullyConnectedLayerNode::configure_output()</a>, <a class="el" href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00123">DepthwiseConvolutionLayerNode::configure_output()</a>, <a class="el" href="_convolution_layer_node_8cpp_source.xhtml#l00133">ConvolutionLayerNode::configure_output()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00146">UnaryEltwiseLayerNode::configure_output()</a>, <a class="el" href="_fused_depthwise_convolution_batch_normalization_node_8cpp_source.xhtml#l00127">FusedDepthwiseConvolutionBatchNormalizationNode::configure_output()</a>, <a class="el" href="_fused_convolution_batch_normalization_node_8cpp_source.xhtml#l00133">FusedConvolutionBatchNormalizationNode::configure_output()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00099">arm_compute::graph::backends::detail::create_activation_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00131">arm_compute::graph::backends::detail::create_arg_min_max_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00163">arm_compute::graph::backends::detail::create_batch_normalization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00312">arm_compute::graph::backends::detail::create_bounding_box_transform_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00346">arm_compute::graph::backends::detail::create_channel_shuffle_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00377">arm_compute::graph::backends::detail::create_concatenate_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00429">arm_compute::graph::backends::detail::create_convolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00515">arm_compute::graph::backends::detail::create_deconvolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00610">arm_compute::graph::backends::detail::create_depth_to_space_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00553">arm_compute::graph::backends::detail::create_depthwise_convolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00645">arm_compute::graph::backends::detail::create_dequantization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00679">arm_compute::graph::backends::detail::create_detection_output_layer()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00130">arm_compute::graph::backends::detail::create_detection_output_layer&lt; CPPDetectionOutputLayer, CLTargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00721">arm_compute::graph::backends::detail::create_detection_post_process_layer()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00171">arm_compute::graph::backends::detail::create_detection_post_process_layer&lt; CPPDetectionPostProcessLayer, CLTargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00772">arm_compute::graph::backends::detail::create_eltwise_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00882">arm_compute::graph::backends::detail::create_flatten_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00917">arm_compute::graph::backends::detail::create_fully_connected_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00204">arm_compute::graph::backends::detail::create_fused_convolution_batch_normalization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00259">arm_compute::graph::backends::detail::create_fused_depthwise_convolution_batch_normalization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00969">arm_compute::graph::backends::detail::create_generate_proposals_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01016">arm_compute::graph::backends::detail::create_l2_normalize_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01055">arm_compute::graph::backends::detail::create_normalization_layer()</a>, <a class="el" href="_n_e_function_factory_8cpp_source.xhtml#l00091">arm_compute::graph::backends::detail::create_normalization_layer&lt; NENormalizationLayer, NETargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01092">arm_compute::graph::backends::detail::create_normalize_planar_yuv_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01128">arm_compute::graph::backends::detail::create_pad_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01163">arm_compute::graph::backends::detail::create_permute_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01198">arm_compute::graph::backends::detail::create_pooling_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01233">arm_compute::graph::backends::detail::create_prelu_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01266">arm_compute::graph::backends::detail::create_print_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01292">arm_compute::graph::backends::detail::create_priorbox_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01330">arm_compute::graph::backends::detail::create_quantization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01364">arm_compute::graph::backends::detail::create_reduction_operation_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01402">arm_compute::graph::backends::detail::create_reorg_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01435">arm_compute::graph::backends::detail::create_reshape_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01468">arm_compute::graph::backends::detail::create_resize_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01504">arm_compute::graph::backends::detail::create_roi_align_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01545">arm_compute::graph::backends::detail::create_slice_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01579">arm_compute::graph::backends::detail::create_softmax_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01613">arm_compute::graph::backends::detail::create_stack_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01653">arm_compute::graph::backends::detail::create_strided_slice_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00839">arm_compute::graph::backends::detail::create_unary_eltwise_layer()</a>, <a class="el" href="_split_layer_sub_tensor_mutator_8cpp_source.xhtml#l00050">SplitLayerSubTensorMutator::mutate()</a>, <a class="el" href="_depth_concat_sub_tensor_mutator_8cpp_source.xhtml#l00050">DepthConcatSubTensorMutator::mutate()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00131">SplitLayerNode::validate()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00063">arm_compute::graph::backends::detail::validate_arg_min_max_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00087">arm_compute::graph::backends::detail::validate_bounding_box_transform_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00112">arm_compute::graph::backends::detail::validate_channel_shuffle_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00142">arm_compute::graph::backends::detail::validate_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00242">arm_compute::graph::backends::detail::validate_depth_to_space_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00202">arm_compute::graph::backends::detail::validate_depthwise_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00264">arm_compute::graph::backends::detail::validate_dequantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00286">arm_compute::graph::backends::detail::validate_detection_output_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00311">arm_compute::graph::backends::detail::validate_detection_post_process_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00691">arm_compute::graph::backends::detail::validate_eltwise_Layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00340">arm_compute::graph::backends::detail::validate_generate_proposals_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00368">arm_compute::graph::backends::detail::validate_l2_normalize_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00394">arm_compute::graph::backends::detail::validate_normalize_planar_yuv_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00420">arm_compute::graph::backends::detail::validate_pad_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00444">arm_compute::graph::backends::detail::validate_permute_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00468">arm_compute::graph::backends::detail::validate_prelu_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00492">arm_compute::graph::backends::detail::validate_priorbox_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00517">arm_compute::graph::backends::detail::validate_quantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00541">arm_compute::graph::backends::detail::validate_reduction_operation_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00566">arm_compute::graph::backends::detail::validate_reorg_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00590">arm_compute::graph::backends::detail::validate_reshape_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00614">arm_compute::graph::backends::detail::validate_roi_align_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00640">arm_compute::graph::backends::detail::validate_slice_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00665">arm_compute::graph::backends::detail::validate_strided_slice_layer()</a>, and <a class="el" href="_validate_helpers_8h_source.xhtml#l00743">arm_compute::graph::backends::detail::validate_unary_eltwise_layer()</a>.</p>

</div>
</div>
<a id="a6bca7473aa08cb0ecba36cb5dda2badf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bca7473aa08cb0ecba36cb5dda2badf">&#9670;&nbsp;</a></span>input_edge()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_edge.xhtml">Edge</a> * input_edge </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the edge of a given input of the node. </p>
<dl class="section note"><dt>Note</dt><dd>Precondition : idx should be a valid input index</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index of the node input</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1graph_1_1_edge.xhtml" title="Graph Edge.">Edge</a> of the requested input </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00171">171</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_graph == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(idx &gt;= _input_edges.size());</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">return</span> _graph-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a0ea47db036b1c140af002ee1494dcb6f">edge</a>(_input_edges[idx]);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="_graph_8cpp_source.xhtml#l00218">Graph::edge()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00080">arm_compute::graph::detail::fuse_convolution_with_batch_normalization()</a>, and <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00164">arm_compute::graph::detail::fuse_depthwise_convolution_with_batch_normalization()</a>.</p>

</div>
</div>
<a id="a283425ac27acd897fb075e0cee215020"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a283425ac27acd897fb075e0cee215020">&#9670;&nbsp;</a></span>input_edge_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> input_edge_id </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the edge ID of a given input of the node. </p>
<dl class="section note"><dt>Note</dt><dd>Precondition : idx should be a valid input index</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index of the node input</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>EdgeID of the requested input </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00165">165</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;{</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(idx &gt;= _input_edges.size());</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">return</span> _input_edges[idx];</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<a id="a3fd5d1d4dea9bb355f9baa9b4d44402f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fd5d1d4dea9bb355f9baa9b4d44402f">&#9670;&nbsp;</a></span>input_edges()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> &gt; &amp; input_edges </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns input edge set. </p>
<dl class="section return"><dt>Returns</dt><dd>Set of input edges </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00127">127</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;{</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span> _input_edges;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_topological_sort_8cpp_source.xhtml#l00046">arm_compute::graph::detail::all_inputs_are_visited()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00200">arm_compute::graph::get_driver_nodes()</a>, and <a class="el" href="_depth_concat_sub_tensor_mutator_8cpp_source.xhtml#l00050">DepthConcatSubTensorMutator::mutate()</a>.</p>

</div>
</div>
<a id="a6a156d1ea7a01d8b27131f30aacaf40b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a156d1ea7a01d8b27131f30aacaf40b">&#9670;&nbsp;</a></span>input_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> input_id </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the tensor ID of a given input of the node. </p>
<dl class="section note"><dt>Note</dt><dd>Precondition : idx should be a valid input index</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index of the node input</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TensorID of the requested input </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00137">137</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(idx &gt;= _input_edges.size());</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    Edge *e = _graph-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a0ea47db036b1c140af002ee1494dcb6f">edge</a>(_input_edges[idx]);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> (e != <span class="keyword">nullptr</span>) ? e-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#af20a11225e8c9ae2029e12f2ff05d95b">tensor_id</a>() : <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">NullTensorID</a>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00218">Graph::edge()</a>, <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00077">arm_compute::graph::NullTensorID</a>, and <a class="el" href="_edge_8h_source.xhtml#l00134">Edge::tensor_id()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_stack_layer_node_8cpp_source.xhtml#l00075">StackLayerNode::configure_output()</a>, <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00098">ConcatenateLayerNode::configure_output()</a>, <a class="el" href="_flatten_layer_node_8cpp_source.xhtml#l00039">FlattenLayerNode::forward_descriptors()</a>, <a class="el" href="_normalize_planar_y_u_v_layer_node_8cpp_source.xhtml#l00040">NormalizePlanarYUVLayerNode::forward_descriptors()</a>, <a class="el" href="_p_relu_layer_node_8cpp_source.xhtml#l00039">PReluLayerNode::forward_descriptors()</a>, <a class="el" href="src_2graph_2nodes_2_reshape_layer_8cpp_source.xhtml#l00038">ReshapeLayerNode::forward_descriptors()</a>, <a class="el" href="_dequantization_layer_node_8cpp_source.xhtml#l00041">DequantizationLayerNode::forward_descriptors()</a>, <a class="el" href="_softmax_layer_node_8cpp_source.xhtml#l00045">SoftmaxLayerNode::forward_descriptors()</a>, <a class="el" href="_normalization_layer_node_8cpp_source.xhtml#l00045">NormalizationLayerNode::forward_descriptors()</a>, <a class="el" href="_channel_shuffle_layer_node_8cpp_source.xhtml#l00044">ChannelShuffleLayerNode::forward_descriptors()</a>, <a class="el" href="_detection_post_process_layer_node_8cpp_source.xhtml#l00047">DetectionPostProcessLayerNode::forward_descriptors()</a>, <a class="el" href="_generate_proposals_layer_node_8cpp_source.xhtml#l00045">GenerateProposalsLayerNode::forward_descriptors()</a>, <a class="el" href="_activation_layer_node_8cpp_source.xhtml#l00045">ActivationLayerNode::forward_descriptors()</a>, <a class="el" href="_bounding_box_transform_layer_node_8cpp_source.xhtml#l00045">BoundingBoxTransformLayerNode::forward_descriptors()</a>, <a class="el" href="_resize_layer_node_8cpp_source.xhtml#l00051">ResizeLayerNode::forward_descriptors()</a>, <a class="el" href="_permute_layer_node_8cpp_source.xhtml#l00045">PermuteLayerNode::forward_descriptors()</a>, <a class="el" href="_dummy_node_8cpp_source.xhtml#l00041">DummyNode::forward_descriptors()</a>, <a class="el" href="_quantization_layer_node_8cpp_source.xhtml#l00048">QuantizationLayerNode::forward_descriptors()</a>, <a class="el" href="_reduction_layer_node_8cpp_source.xhtml#l00057">ReductionLayerNode::forward_descriptors()</a>, <a class="el" href="_depth_to_space_layer_node_8cpp_source.xhtml#l00062">DepthToSpaceLayerNode::forward_descriptors()</a>, <a class="el" href="_r_o_i_align_layer_node_8cpp_source.xhtml#l00046">ROIAlignLayerNode::forward_descriptors()</a>, <a class="el" href="_pad_layer_node_8cpp_source.xhtml#l00050">PadLayerNode::forward_descriptors()</a>, <a class="el" href="_reorg_layer_node_8cpp_source.xhtml#l00066">ReorgLayerNode::forward_descriptors()</a>, <a class="el" href="_pooling_layer_node_8cpp_source.xhtml#l00068">PoolingLayerNode::forward_descriptors()</a>, <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00061">PriorBoxLayerNode::forward_descriptors()</a>, <a class="el" href="_detection_output_layer_node_8cpp_source.xhtml#l00059">DetectionOutputLayerNode::forward_descriptors()</a>, <a class="el" href="_batch_normalization_layer_node_8cpp_source.xhtml#l00056">BatchNormalizationLayerNode::forward_descriptors()</a>, <a class="el" href="_deconvolution_layer_node_8cpp_source.xhtml#l00072">DeconvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_arg_min_max_layer_node_8cpp_source.xhtml#l00059">ArgMinMaxLayerNode::forward_descriptors()</a>, <a class="el" href="_l2_normalize_layer_node_8cpp_source.xhtml#l00047">L2NormalizeLayerNode::forward_descriptors()</a>, <a class="el" href="_slice_layer_node_8cpp_source.xhtml#l00063">SliceLayerNode::forward_descriptors()</a>, <a class="el" href="_print_layer_node_8cpp_source.xhtml#l00059">PrintLayerNode::forward_descriptors()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00085">SplitLayerNode::forward_descriptors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00070">EltwiseLayerNode::forward_descriptors()</a>, <a class="el" href="_strided_slice_layer_node_8cpp_source.xhtml#l00080">StridedSliceLayerNode::forward_descriptors()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00124">FullyConnectedLayerNode::forward_descriptors()</a>, <a class="el" href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00111">DepthwiseConvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_convolution_layer_node_8cpp_source.xhtml#l00121">ConvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00134">UnaryEltwiseLayerNode::forward_descriptors()</a>, <a class="el" href="_fused_depthwise_convolution_batch_normalization_node_8cpp_source.xhtml#l00115">FusedDepthwiseConvolutionBatchNormalizationNode::forward_descriptors()</a>, and <a class="el" href="_fused_convolution_batch_normalization_node_8cpp_source.xhtml#l00121">FusedConvolutionBatchNormalizationNode::forward_descriptors()</a>.</p>

</div>
</div>
<a id="a7c77caaf0ff3ccc12220871c6dfed704"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c77caaf0ff3ccc12220871c6dfed704">&#9670;&nbsp;</a></span>inputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;<a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a>&gt;&amp; inputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns inputs of the node. </p>
<dl class="section return"><dt>Returns</dt><dd>Inputs of the node </dd></dl>

</div>
</div>
<a id="a1d89c28bd42ba9a52da008bb69367171"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d89c28bd42ba9a52da008bb69367171">&#9670;&nbsp;</a></span>name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns node's name. </p>
<dl class="section return"><dt>Returns</dt><dd>Node name </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00107">107</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> _common_params.<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml#a9b45b3e13bd9167aab02e17e08916231">name</a>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00225">NodeParams::name</a>.</p>

<p class="reference">Referenced by <a class="el" href="_function_helpers_8h_source.xhtml#l00099">arm_compute::graph::backends::detail::create_activation_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00131">arm_compute::graph::backends::detail::create_arg_min_max_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00163">arm_compute::graph::backends::detail::create_batch_normalization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00312">arm_compute::graph::backends::detail::create_bounding_box_transform_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00346">arm_compute::graph::backends::detail::create_channel_shuffle_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00377">arm_compute::graph::backends::detail::create_concatenate_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00429">arm_compute::graph::backends::detail::create_convolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00515">arm_compute::graph::backends::detail::create_deconvolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00610">arm_compute::graph::backends::detail::create_depth_to_space_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00553">arm_compute::graph::backends::detail::create_depthwise_convolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00645">arm_compute::graph::backends::detail::create_dequantization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00679">arm_compute::graph::backends::detail::create_detection_output_layer()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00130">arm_compute::graph::backends::detail::create_detection_output_layer&lt; CPPDetectionOutputLayer, CLTargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00721">arm_compute::graph::backends::detail::create_detection_post_process_layer()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00171">arm_compute::graph::backends::detail::create_detection_post_process_layer&lt; CPPDetectionPostProcessLayer, CLTargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00772">arm_compute::graph::backends::detail::create_eltwise_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00882">arm_compute::graph::backends::detail::create_flatten_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00917">arm_compute::graph::backends::detail::create_fully_connected_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00204">arm_compute::graph::backends::detail::create_fused_convolution_batch_normalization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00259">arm_compute::graph::backends::detail::create_fused_depthwise_convolution_batch_normalization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01016">arm_compute::graph::backends::detail::create_l2_normalize_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01055">arm_compute::graph::backends::detail::create_normalization_layer()</a>, <a class="el" href="_n_e_function_factory_8cpp_source.xhtml#l00091">arm_compute::graph::backends::detail::create_normalization_layer&lt; NENormalizationLayer, NETargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01092">arm_compute::graph::backends::detail::create_normalize_planar_yuv_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01128">arm_compute::graph::backends::detail::create_pad_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01163">arm_compute::graph::backends::detail::create_permute_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01198">arm_compute::graph::backends::detail::create_pooling_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01233">arm_compute::graph::backends::detail::create_prelu_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01266">arm_compute::graph::backends::detail::create_print_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01292">arm_compute::graph::backends::detail::create_priorbox_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01330">arm_compute::graph::backends::detail::create_quantization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01364">arm_compute::graph::backends::detail::create_reduction_operation_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01402">arm_compute::graph::backends::detail::create_reorg_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01435">arm_compute::graph::backends::detail::create_reshape_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01468">arm_compute::graph::backends::detail::create_resize_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01504">arm_compute::graph::backends::detail::create_roi_align_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01545">arm_compute::graph::backends::detail::create_slice_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01579">arm_compute::graph::backends::detail::create_softmax_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01613">arm_compute::graph::backends::detail::create_stack_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01653">arm_compute::graph::backends::detail::create_strided_slice_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00839">arm_compute::graph::backends::detail::create_unary_eltwise_layer()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00080">arm_compute::graph::detail::fuse_convolution_with_batch_normalization()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00164">arm_compute::graph::detail::fuse_depthwise_convolution_with_batch_normalization()</a>, <a class="el" href="_depth_concat_sub_tensor_mutator_8cpp_source.xhtml#l00050">DepthConcatSubTensorMutator::mutate()</a>, <a class="el" href="_split_layer_sub_tensor_mutator_8cpp_source.xhtml#l00050">SplitLayerSubTensorMutator::mutate()</a>, <a class="el" href="_node_execution_method_mutator_8cpp_source.xhtml#l00081">NodeExecutionMethodMutator::mutate()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00063">arm_compute::graph::backends::detail::validate_arg_min_max_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00087">arm_compute::graph::backends::detail::validate_bounding_box_transform_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00112">arm_compute::graph::backends::detail::validate_channel_shuffle_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00142">arm_compute::graph::backends::detail::validate_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00242">arm_compute::graph::backends::detail::validate_depth_to_space_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00202">arm_compute::graph::backends::detail::validate_depthwise_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00264">arm_compute::graph::backends::detail::validate_dequantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00286">arm_compute::graph::backends::detail::validate_detection_output_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00311">arm_compute::graph::backends::detail::validate_detection_post_process_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00691">arm_compute::graph::backends::detail::validate_eltwise_Layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00340">arm_compute::graph::backends::detail::validate_generate_proposals_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00368">arm_compute::graph::backends::detail::validate_l2_normalize_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00078">arm_compute::graph::backends::detail::validate_node()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00394">arm_compute::graph::backends::detail::validate_normalize_planar_yuv_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00420">arm_compute::graph::backends::detail::validate_pad_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00444">arm_compute::graph::backends::detail::validate_permute_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00468">arm_compute::graph::backends::detail::validate_prelu_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00492">arm_compute::graph::backends::detail::validate_priorbox_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00517">arm_compute::graph::backends::detail::validate_quantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00541">arm_compute::graph::backends::detail::validate_reduction_operation_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00566">arm_compute::graph::backends::detail::validate_reorg_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00590">arm_compute::graph::backends::detail::validate_reshape_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00614">arm_compute::graph::backends::detail::validate_roi_align_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00640">arm_compute::graph::backends::detail::validate_slice_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00665">arm_compute::graph::backends::detail::validate_strided_slice_layer()</a>, and <a class="el" href="_validate_helpers_8h_source.xhtml#l00743">arm_compute::graph::backends::detail::validate_unary_eltwise_layer()</a>.</p>

</div>
</div>
<a id="abe0cb3e4411a1c289e3e40e3f9d79fec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe0cb3e4411a1c289e3e40e3f9d79fec">&#9670;&nbsp;</a></span>num_inputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t num_inputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns number of inputs of the node. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of inputs </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00178">178</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;{</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">return</span> _input_edges.size();</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00073">arm_compute::graph::detail::allocate_all_input_tensors()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00377">arm_compute::graph::backends::detail::create_concatenate_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01613">arm_compute::graph::backends::detail::create_stack_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00063">arm_compute::graph::backends::detail::validate_arg_min_max_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00087">arm_compute::graph::backends::detail::validate_bounding_box_transform_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00112">arm_compute::graph::backends::detail::validate_channel_shuffle_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00142">arm_compute::graph::backends::detail::validate_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00242">arm_compute::graph::backends::detail::validate_depth_to_space_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00202">arm_compute::graph::backends::detail::validate_depthwise_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00264">arm_compute::graph::backends::detail::validate_dequantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00286">arm_compute::graph::backends::detail::validate_detection_output_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00311">arm_compute::graph::backends::detail::validate_detection_post_process_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00691">arm_compute::graph::backends::detail::validate_eltwise_Layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00340">arm_compute::graph::backends::detail::validate_generate_proposals_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00368">arm_compute::graph::backends::detail::validate_l2_normalize_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00078">arm_compute::graph::backends::detail::validate_node()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00394">arm_compute::graph::backends::detail::validate_normalize_planar_yuv_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00420">arm_compute::graph::backends::detail::validate_pad_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00444">arm_compute::graph::backends::detail::validate_permute_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00468">arm_compute::graph::backends::detail::validate_prelu_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00492">arm_compute::graph::backends::detail::validate_priorbox_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00517">arm_compute::graph::backends::detail::validate_quantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00541">arm_compute::graph::backends::detail::validate_reduction_operation_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00566">arm_compute::graph::backends::detail::validate_reorg_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00590">arm_compute::graph::backends::detail::validate_reshape_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00614">arm_compute::graph::backends::detail::validate_roi_align_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00640">arm_compute::graph::backends::detail::validate_slice_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00665">arm_compute::graph::backends::detail::validate_strided_slice_layer()</a>, and <a class="el" href="_validate_helpers_8h_source.xhtml#l00743">arm_compute::graph::backends::detail::validate_unary_eltwise_layer()</a>.</p>

</div>
</div>
<a id="a75d7c8bdf0059bb235880f8ef8d190bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75d7c8bdf0059bb235880f8ef8d190bc">&#9670;&nbsp;</a></span>num_outputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t num_outputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns number of outputs of the node. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of outputs </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;{</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">return</span> _outputs.size();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00086">arm_compute::graph::detail::allocate_all_output_tensors()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00095">FullyConnectedLayerNode::compute_output_descriptor()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00060">FullyConnectedLayerNode::compute_weights_descriptor()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00377">arm_compute::graph::backends::detail::create_concatenate_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01613">arm_compute::graph::backends::detail::create_stack_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00063">arm_compute::graph::backends::detail::validate_arg_min_max_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00087">arm_compute::graph::backends::detail::validate_bounding_box_transform_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00112">arm_compute::graph::backends::detail::validate_channel_shuffle_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00142">arm_compute::graph::backends::detail::validate_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00242">arm_compute::graph::backends::detail::validate_depth_to_space_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00202">arm_compute::graph::backends::detail::validate_depthwise_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00264">arm_compute::graph::backends::detail::validate_dequantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00286">arm_compute::graph::backends::detail::validate_detection_output_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00311">arm_compute::graph::backends::detail::validate_detection_post_process_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00691">arm_compute::graph::backends::detail::validate_eltwise_Layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00340">arm_compute::graph::backends::detail::validate_generate_proposals_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00368">arm_compute::graph::backends::detail::validate_l2_normalize_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00078">arm_compute::graph::backends::detail::validate_node()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00394">arm_compute::graph::backends::detail::validate_normalize_planar_yuv_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00420">arm_compute::graph::backends::detail::validate_pad_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00444">arm_compute::graph::backends::detail::validate_permute_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00468">arm_compute::graph::backends::detail::validate_prelu_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00492">arm_compute::graph::backends::detail::validate_priorbox_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00517">arm_compute::graph::backends::detail::validate_quantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00541">arm_compute::graph::backends::detail::validate_reduction_operation_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00566">arm_compute::graph::backends::detail::validate_reorg_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00590">arm_compute::graph::backends::detail::validate_reshape_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00614">arm_compute::graph::backends::detail::validate_roi_align_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00640">arm_compute::graph::backends::detail::validate_slice_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00665">arm_compute::graph::backends::detail::validate_strided_slice_layer()</a>, and <a class="el" href="_validate_helpers_8h_source.xhtml#l00743">arm_compute::graph::backends::detail::validate_unary_eltwise_layer()</a>.</p>

</div>
</div>
<a id="ac2f34bc6eaa698b25680f2091dc29170"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2f34bc6eaa698b25680f2091dc29170">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy assigned (As this class contains pointers) </p>

</div>
</div>
<a id="aa85ed20eb40b3a914e78124c89556249"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa85ed20eb40b3a914e78124c89556249">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move assigned. </p>

</div>
</div>
<a id="a27369471d9b2ba47746e1e923f585b9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27369471d9b2ba47746e1e923f585b9f">&#9670;&nbsp;</a></span>output()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> * output </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the tensor of a given output of the node. </p>
<dl class="section note"><dt>Note</dt><dd>Precondition : idx should be a valid output index</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index of the node output</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> of the requested output </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00158">158</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_graph == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(idx &gt;= _outputs.size());</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> _graph-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a91bccd842a1caad3149523a05f150ee6">tensor</a>(_outputs[idx]);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="_graph_8cpp_source.xhtml#l00228">Graph::tensor()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00086">arm_compute::graph::detail::allocate_all_output_tensors()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00099">arm_compute::graph::backends::detail::create_activation_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00131">arm_compute::graph::backends::detail::create_arg_min_max_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00163">arm_compute::graph::backends::detail::create_batch_normalization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00312">arm_compute::graph::backends::detail::create_bounding_box_transform_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00346">arm_compute::graph::backends::detail::create_channel_shuffle_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00377">arm_compute::graph::backends::detail::create_concatenate_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00429">arm_compute::graph::backends::detail::create_convolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00515">arm_compute::graph::backends::detail::create_deconvolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00610">arm_compute::graph::backends::detail::create_depth_to_space_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00553">arm_compute::graph::backends::detail::create_depthwise_convolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00645">arm_compute::graph::backends::detail::create_dequantization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00679">arm_compute::graph::backends::detail::create_detection_output_layer()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00130">arm_compute::graph::backends::detail::create_detection_output_layer&lt; CPPDetectionOutputLayer, CLTargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00721">arm_compute::graph::backends::detail::create_detection_post_process_layer()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00171">arm_compute::graph::backends::detail::create_detection_post_process_layer&lt; CPPDetectionPostProcessLayer, CLTargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00772">arm_compute::graph::backends::detail::create_eltwise_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00882">arm_compute::graph::backends::detail::create_flatten_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00917">arm_compute::graph::backends::detail::create_fully_connected_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00204">arm_compute::graph::backends::detail::create_fused_convolution_batch_normalization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00259">arm_compute::graph::backends::detail::create_fused_depthwise_convolution_batch_normalization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00969">arm_compute::graph::backends::detail::create_generate_proposals_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01016">arm_compute::graph::backends::detail::create_l2_normalize_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01055">arm_compute::graph::backends::detail::create_normalization_layer()</a>, <a class="el" href="_n_e_function_factory_8cpp_source.xhtml#l00091">arm_compute::graph::backends::detail::create_normalization_layer&lt; NENormalizationLayer, NETargetInfo &gt;()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01092">arm_compute::graph::backends::detail::create_normalize_planar_yuv_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01128">arm_compute::graph::backends::detail::create_pad_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01163">arm_compute::graph::backends::detail::create_permute_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01198">arm_compute::graph::backends::detail::create_pooling_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01233">arm_compute::graph::backends::detail::create_prelu_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01292">arm_compute::graph::backends::detail::create_priorbox_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01330">arm_compute::graph::backends::detail::create_quantization_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01364">arm_compute::graph::backends::detail::create_reduction_operation_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01402">arm_compute::graph::backends::detail::create_reorg_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01435">arm_compute::graph::backends::detail::create_reshape_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01468">arm_compute::graph::backends::detail::create_resize_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01504">arm_compute::graph::backends::detail::create_roi_align_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01545">arm_compute::graph::backends::detail::create_slice_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01579">arm_compute::graph::backends::detail::create_softmax_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01613">arm_compute::graph::backends::detail::create_stack_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01653">arm_compute::graph::backends::detail::create_strided_slice_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00839">arm_compute::graph::backends::detail::create_unary_eltwise_layer()</a>, <a class="el" href="_flatten_layer_node_8cpp_source.xhtml#l00039">FlattenLayerNode::forward_descriptors()</a>, <a class="el" href="_normalize_planar_y_u_v_layer_node_8cpp_source.xhtml#l00040">NormalizePlanarYUVLayerNode::forward_descriptors()</a>, <a class="el" href="_p_relu_layer_node_8cpp_source.xhtml#l00039">PReluLayerNode::forward_descriptors()</a>, <a class="el" href="_const_node_8cpp_source.xhtml#l00038">ConstNode::forward_descriptors()</a>, <a class="el" href="_input_node_8cpp_source.xhtml#l00038">InputNode::forward_descriptors()</a>, <a class="el" href="src_2graph_2nodes_2_reshape_layer_8cpp_source.xhtml#l00038">ReshapeLayerNode::forward_descriptors()</a>, <a class="el" href="_dequantization_layer_node_8cpp_source.xhtml#l00041">DequantizationLayerNode::forward_descriptors()</a>, <a class="el" href="_channel_shuffle_layer_node_8cpp_source.xhtml#l00044">ChannelShuffleLayerNode::forward_descriptors()</a>, <a class="el" href="_detection_post_process_layer_node_8cpp_source.xhtml#l00047">DetectionPostProcessLayerNode::forward_descriptors()</a>, <a class="el" href="_normalization_layer_node_8cpp_source.xhtml#l00045">NormalizationLayerNode::forward_descriptors()</a>, <a class="el" href="_softmax_layer_node_8cpp_source.xhtml#l00045">SoftmaxLayerNode::forward_descriptors()</a>, <a class="el" href="_activation_layer_node_8cpp_source.xhtml#l00045">ActivationLayerNode::forward_descriptors()</a>, <a class="el" href="_bounding_box_transform_layer_node_8cpp_source.xhtml#l00045">BoundingBoxTransformLayerNode::forward_descriptors()</a>, <a class="el" href="_generate_proposals_layer_node_8cpp_source.xhtml#l00045">GenerateProposalsLayerNode::forward_descriptors()</a>, <a class="el" href="_dummy_node_8cpp_source.xhtml#l00041">DummyNode::forward_descriptors()</a>, <a class="el" href="_resize_layer_node_8cpp_source.xhtml#l00051">ResizeLayerNode::forward_descriptors()</a>, <a class="el" href="_permute_layer_node_8cpp_source.xhtml#l00045">PermuteLayerNode::forward_descriptors()</a>, <a class="el" href="_quantization_layer_node_8cpp_source.xhtml#l00048">QuantizationLayerNode::forward_descriptors()</a>, <a class="el" href="_depth_to_space_layer_node_8cpp_source.xhtml#l00062">DepthToSpaceLayerNode::forward_descriptors()</a>, <a class="el" href="_pad_layer_node_8cpp_source.xhtml#l00050">PadLayerNode::forward_descriptors()</a>, <a class="el" href="_reduction_layer_node_8cpp_source.xhtml#l00057">ReductionLayerNode::forward_descriptors()</a>, <a class="el" href="_r_o_i_align_layer_node_8cpp_source.xhtml#l00046">ROIAlignLayerNode::forward_descriptors()</a>, <a class="el" href="_pooling_layer_node_8cpp_source.xhtml#l00068">PoolingLayerNode::forward_descriptors()</a>, <a class="el" href="_reorg_layer_node_8cpp_source.xhtml#l00066">ReorgLayerNode::forward_descriptors()</a>, <a class="el" href="_detection_output_layer_node_8cpp_source.xhtml#l00059">DetectionOutputLayerNode::forward_descriptors()</a>, <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00061">PriorBoxLayerNode::forward_descriptors()</a>, <a class="el" href="_stack_layer_node_8cpp_source.xhtml#l00063">StackLayerNode::forward_descriptors()</a>, <a class="el" href="_batch_normalization_layer_node_8cpp_source.xhtml#l00056">BatchNormalizationLayerNode::forward_descriptors()</a>, <a class="el" href="_deconvolution_layer_node_8cpp_source.xhtml#l00072">DeconvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_arg_min_max_layer_node_8cpp_source.xhtml#l00059">ArgMinMaxLayerNode::forward_descriptors()</a>, <a class="el" href="_l2_normalize_layer_node_8cpp_source.xhtml#l00047">L2NormalizeLayerNode::forward_descriptors()</a>, <a class="el" href="_slice_layer_node_8cpp_source.xhtml#l00063">SliceLayerNode::forward_descriptors()</a>, <a class="el" href="_print_layer_node_8cpp_source.xhtml#l00059">PrintLayerNode::forward_descriptors()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00085">SplitLayerNode::forward_descriptors()</a>, <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00086">ConcatenateLayerNode::forward_descriptors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00070">EltwiseLayerNode::forward_descriptors()</a>, <a class="el" href="_strided_slice_layer_node_8cpp_source.xhtml#l00080">StridedSliceLayerNode::forward_descriptors()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00124">FullyConnectedLayerNode::forward_descriptors()</a>, <a class="el" href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00111">DepthwiseConvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_convolution_layer_node_8cpp_source.xhtml#l00121">ConvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00134">UnaryEltwiseLayerNode::forward_descriptors()</a>, <a class="el" href="_fused_depthwise_convolution_batch_normalization_node_8cpp_source.xhtml#l00115">FusedDepthwiseConvolutionBatchNormalizationNode::forward_descriptors()</a>, <a class="el" href="_fused_convolution_batch_normalization_node_8cpp_source.xhtml#l00121">FusedConvolutionBatchNormalizationNode::forward_descriptors()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00379">NodeFusionMutator::mutate()</a>, <a class="el" href="_depth_concat_sub_tensor_mutator_8cpp_source.xhtml#l00050">DepthConcatSubTensorMutator::mutate()</a>, <a class="el" href="_split_layer_sub_tensor_mutator_8cpp_source.xhtml#l00050">SplitLayerSubTensorMutator::mutate()</a>, <a class="el" href="_grouped_convolution_mutator_8cpp_source.xhtml#l00120">GroupedConvolutionMutator::mutate()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00046">arm_compute::graph::detail::transfer_driving_nodes_and_remove_old_node()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00063">arm_compute::graph::backends::detail::validate_arg_min_max_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00087">arm_compute::graph::backends::detail::validate_bounding_box_transform_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00112">arm_compute::graph::backends::detail::validate_channel_shuffle_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00142">arm_compute::graph::backends::detail::validate_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00242">arm_compute::graph::backends::detail::validate_depth_to_space_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00202">arm_compute::graph::backends::detail::validate_depthwise_convolution_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00264">arm_compute::graph::backends::detail::validate_dequantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00286">arm_compute::graph::backends::detail::validate_detection_output_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00311">arm_compute::graph::backends::detail::validate_detection_post_process_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00691">arm_compute::graph::backends::detail::validate_eltwise_Layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00340">arm_compute::graph::backends::detail::validate_generate_proposals_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00368">arm_compute::graph::backends::detail::validate_l2_normalize_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00394">arm_compute::graph::backends::detail::validate_normalize_planar_yuv_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00420">arm_compute::graph::backends::detail::validate_pad_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00444">arm_compute::graph::backends::detail::validate_permute_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00468">arm_compute::graph::backends::detail::validate_prelu_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00492">arm_compute::graph::backends::detail::validate_priorbox_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00517">arm_compute::graph::backends::detail::validate_quantization_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00541">arm_compute::graph::backends::detail::validate_reduction_operation_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00566">arm_compute::graph::backends::detail::validate_reorg_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00590">arm_compute::graph::backends::detail::validate_reshape_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00614">arm_compute::graph::backends::detail::validate_roi_align_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00640">arm_compute::graph::backends::detail::validate_slice_layer()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00665">arm_compute::graph::backends::detail::validate_strided_slice_layer()</a>, and <a class="el" href="_validate_helpers_8h_source.xhtml#l00743">arm_compute::graph::backends::detail::validate_unary_eltwise_layer()</a>.</p>

</div>
</div>
<a id="abbf8678d888561b348dd1c34d9e34af9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbf8678d888561b348dd1c34d9e34af9">&#9670;&nbsp;</a></span>output_edges()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::set&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> &gt; &amp; output_edges </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns output edge set. </p>
<dl class="section return"><dt>Returns</dt><dd>Set of output edges </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00132">132</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> _output_edges;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_topological_sort_8cpp_source.xhtml#l00072">arm_compute::graph::bfs()</a>, <a class="el" href="_topological_sort_8cpp_source.xhtml#l00127">arm_compute::graph::dfs()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00320">arm_compute::graph::detail::fuse_layer()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00180">arm_compute::graph::get_driving_nodes()</a>, and <a class="el" href="_graph_8cpp_source.xhtml#l00035">Graph::remove_node()</a>.</p>

</div>
</div>
<a id="a339f9817d95cb065b7670d35c03f4d88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a339f9817d95cb065b7670d35c03f4d88">&#9670;&nbsp;</a></span>output_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> output_id </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the tensor ID of a given output of the node. </p>
<dl class="section note"><dt>Note</dt><dd>Precondition : idx should be a valid output index</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index of the node output</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TensorID of the requested output </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00144">144</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(idx &gt;= _outputs.size());</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">return</span> _outputs[idx];</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

<p class="reference">Referenced by <a class="el" href="_flatten_layer_node_8cpp_source.xhtml#l00039">FlattenLayerNode::forward_descriptors()</a>, <a class="el" href="_normalize_planar_y_u_v_layer_node_8cpp_source.xhtml#l00040">NormalizePlanarYUVLayerNode::forward_descriptors()</a>, <a class="el" href="_p_relu_layer_node_8cpp_source.xhtml#l00039">PReluLayerNode::forward_descriptors()</a>, <a class="el" href="_const_node_8cpp_source.xhtml#l00038">ConstNode::forward_descriptors()</a>, <a class="el" href="src_2graph_2nodes_2_reshape_layer_8cpp_source.xhtml#l00038">ReshapeLayerNode::forward_descriptors()</a>, <a class="el" href="_input_node_8cpp_source.xhtml#l00038">InputNode::forward_descriptors()</a>, <a class="el" href="_dequantization_layer_node_8cpp_source.xhtml#l00041">DequantizationLayerNode::forward_descriptors()</a>, <a class="el" href="_softmax_layer_node_8cpp_source.xhtml#l00045">SoftmaxLayerNode::forward_descriptors()</a>, <a class="el" href="_channel_shuffle_layer_node_8cpp_source.xhtml#l00044">ChannelShuffleLayerNode::forward_descriptors()</a>, <a class="el" href="_detection_post_process_layer_node_8cpp_source.xhtml#l00047">DetectionPostProcessLayerNode::forward_descriptors()</a>, <a class="el" href="_normalization_layer_node_8cpp_source.xhtml#l00045">NormalizationLayerNode::forward_descriptors()</a>, <a class="el" href="_generate_proposals_layer_node_8cpp_source.xhtml#l00045">GenerateProposalsLayerNode::forward_descriptors()</a>, <a class="el" href="_activation_layer_node_8cpp_source.xhtml#l00045">ActivationLayerNode::forward_descriptors()</a>, <a class="el" href="_bounding_box_transform_layer_node_8cpp_source.xhtml#l00045">BoundingBoxTransformLayerNode::forward_descriptors()</a>, <a class="el" href="_quantization_layer_node_8cpp_source.xhtml#l00048">QuantizationLayerNode::forward_descriptors()</a>, <a class="el" href="_resize_layer_node_8cpp_source.xhtml#l00051">ResizeLayerNode::forward_descriptors()</a>, <a class="el" href="_permute_layer_node_8cpp_source.xhtml#l00045">PermuteLayerNode::forward_descriptors()</a>, <a class="el" href="_dummy_node_8cpp_source.xhtml#l00041">DummyNode::forward_descriptors()</a>, <a class="el" href="_depth_to_space_layer_node_8cpp_source.xhtml#l00062">DepthToSpaceLayerNode::forward_descriptors()</a>, <a class="el" href="_reduction_layer_node_8cpp_source.xhtml#l00057">ReductionLayerNode::forward_descriptors()</a>, <a class="el" href="_r_o_i_align_layer_node_8cpp_source.xhtml#l00046">ROIAlignLayerNode::forward_descriptors()</a>, <a class="el" href="_pad_layer_node_8cpp_source.xhtml#l00050">PadLayerNode::forward_descriptors()</a>, <a class="el" href="_reorg_layer_node_8cpp_source.xhtml#l00066">ReorgLayerNode::forward_descriptors()</a>, <a class="el" href="_pooling_layer_node_8cpp_source.xhtml#l00068">PoolingLayerNode::forward_descriptors()</a>, <a class="el" href="_detection_output_layer_node_8cpp_source.xhtml#l00059">DetectionOutputLayerNode::forward_descriptors()</a>, <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00061">PriorBoxLayerNode::forward_descriptors()</a>, <a class="el" href="_batch_normalization_layer_node_8cpp_source.xhtml#l00056">BatchNormalizationLayerNode::forward_descriptors()</a>, <a class="el" href="_deconvolution_layer_node_8cpp_source.xhtml#l00072">DeconvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_arg_min_max_layer_node_8cpp_source.xhtml#l00059">ArgMinMaxLayerNode::forward_descriptors()</a>, <a class="el" href="_slice_layer_node_8cpp_source.xhtml#l00063">SliceLayerNode::forward_descriptors()</a>, <a class="el" href="_l2_normalize_layer_node_8cpp_source.xhtml#l00047">L2NormalizeLayerNode::forward_descriptors()</a>, <a class="el" href="_print_layer_node_8cpp_source.xhtml#l00059">PrintLayerNode::forward_descriptors()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00085">SplitLayerNode::forward_descriptors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00070">EltwiseLayerNode::forward_descriptors()</a>, <a class="el" href="_strided_slice_layer_node_8cpp_source.xhtml#l00080">StridedSliceLayerNode::forward_descriptors()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00124">FullyConnectedLayerNode::forward_descriptors()</a>, <a class="el" href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00111">DepthwiseConvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_convolution_layer_node_8cpp_source.xhtml#l00121">ConvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00134">UnaryEltwiseLayerNode::forward_descriptors()</a>, <a class="el" href="_fused_depthwise_convolution_batch_normalization_node_8cpp_source.xhtml#l00115">FusedDepthwiseConvolutionBatchNormalizationNode::forward_descriptors()</a>, and <a class="el" href="_fused_convolution_batch_normalization_node_8cpp_source.xhtml#l00121">FusedConvolutionBatchNormalizationNode::forward_descriptors()</a>.</p>

</div>
</div>
<a id="a74e6b1e9d4924f2fb12baed6a432d3a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74e6b1e9d4924f2fb12baed6a432d3a5">&#9670;&nbsp;</a></span>outputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> &gt; &amp; outputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns outputs of the node. </p>
<dl class="section return"><dt>Returns</dt><dd>Outputs of the node </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00122">122</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">return</span> _outputs;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_graph_builder_8cpp_source.xhtml#l00165">GraphBuilder::add_batch_normalization_node()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00242">GraphBuilder::add_convolution_node()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00306">GraphBuilder::add_deconvolution_node()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00370">GraphBuilder::add_depthwise_convolution_node()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00465">GraphBuilder::add_detection_post_process_node()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00527">GraphBuilder::add_fully_connected_layer()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00643">GraphBuilder::add_normalize_planar_yuv_node()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00771">GraphBuilder::add_scale_layer()</a>, <a class="el" href="_graph_builder_8cpp_source.xhtml#l00839">GraphBuilder::add_yolo_node()</a>, and <a class="el" href="_split_layer_sub_tensor_mutator_8cpp_source.xhtml#l00050">SplitLayerSubTensorMutator::mutate()</a>.</p>

</div>
</div>
<a id="afc6514aa006c1820217d9a8d832cc656"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc6514aa006c1820217d9a8d832cc656">&#9670;&nbsp;</a></span>requested_target()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> requested_target </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns requested target for this node. </p>
<dl class="section return"><dt>Returns</dt><dd>Requested execution target </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00193">193</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;{</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">return</span> _common_params.<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml#a2a7ca82c5e74421cb45f17e936abf964">target</a>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00226">NodeParams::target</a>.</p>

</div>
</div>
<a id="a7069f1901ff50cd2ac6ba152cb106058"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7069f1901ff50cd2ac6ba152cb106058">&#9670;&nbsp;</a></span>set_assigned_target()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_assigned_target </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td>
          <td class="paramname"><em>target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the final execution target. </p>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1graph_1_1_graph_manager.xhtml" title="Graph manager class.">GraphManager</a> might change this target</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">target</td><td>Final execution target </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00071">71</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    _assigned_target = target;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aeadb909ea02bec78f92ca35ff0ccbaea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeadb909ea02bec78f92ca35ff0ccbaea">&#9670;&nbsp;</a></span>set_common_node_parameters()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_common_node_parameters </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>common_params</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets common node parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">common_params</td><td>Common node parameters to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    _common_params = std::move(common_params);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="graph__edsr_8h_source.xhtml#l00039">GraphEdsr::setup()</a>.</p>

</div>
</div>
<a id="a3ace781433ede299fb1dc8d0b02667b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ace781433ede299fb1dc8d0b02667b9">&#9670;&nbsp;</a></span>set_graph()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_graph </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> *&#160;</td>
          <td class="paramname"><em>g</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the graph that this node is registered to. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td>Back reference to graph </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(g == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    _graph = g;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

<p class="reference">Referenced by <a class="el" href="graph_2_graph_8h_source.xhtml#l00234">Graph::add_node()</a>.</p>

</div>
</div>
<a id="a483b76accbb02199c359bd5cf23dd476"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a483b76accbb02199c359bd5cf23dd476">&#9670;&nbsp;</a></span>set_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_id </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the node id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>Node id </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    _id = <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a5ea90a25ef8059df2d2e51b82991ebf3">id</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_node_8cpp_source.xhtml#l00102">INode::id()</a>.</p>

<p class="reference">Referenced by <a class="el" href="graph_2_graph_8h_source.xhtml#l00234">Graph::add_node()</a>.</p>

</div>
</div>
<a id="a09dab02145c91bb9be20fe98cbedc300"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09dab02145c91bb9be20fe98cbedc300">&#9670;&nbsp;</a></span>set_output_tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_output_tensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a>&#160;</td>
          <td class="paramname"><em>tid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the output tensor of at a given index. </p>
<dl class="section note"><dt>Note</dt><dd>All edges will get updated</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tid</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> ID </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Output index </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00076">76</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span> (tid != <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">NullTensorID</a> &amp;&amp; (idx &lt; _outputs.size()) &amp;&amp; (_graph-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a91bccd842a1caad3149523a05f150ee6">tensor</a>(tid) != <span class="keyword">nullptr</span>))</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_graph == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a> *updated_tensor = _graph-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a91bccd842a1caad3149523a05f150ee6">tensor</a>(tid);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        _outputs[idx]          = tid;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="comment">// Set tensor to all output edges of the node</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;output_edge_id : _output_edges)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="keyword">auto</span> output_edge = _graph-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a0ea47db036b1c140af002ee1494dcb6f">edge</a>(output_edge_id);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">if</span> (output_edge != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                <span class="comment">// Unbind edge from current tensor</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <span class="keyword">auto</span> current_output_tensor = output_edge-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">tensor</a>();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                current_output_tensor-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0839be1697496b3a951e030627f9e69b">unbind_edge</a>(output_edge-&gt;id());</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="comment">// Update tensor to edge and rebind tensor</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                output_edge-&gt;update_bound_tensor(updated_tensor);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                updated_tensor-&gt;bind_edge(output_edge-&gt;id());</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00109">Tensor::bind_edge()</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00218">Graph::edge()</a>, <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00077">arm_compute::graph::NullTensorID</a>, <a class="el" href="_edge_8h_source.xhtml#l00126">Edge::tensor()</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00228">Graph::tensor()</a>, and <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00114">Tensor::unbind_edge()</a>.</p>

</div>
</div>
<a id="ab4d8c49b8b04fae8561238b8efb472f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4d8c49b8b04fae8561238b8efb472f5">&#9670;&nbsp;</a></span>set_requested_target()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_requested_target </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td>
          <td class="paramname"><em>target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets target preference. </p>
<dl class="section note"><dt>Note</dt><dd>This is not the target that the graph executor might choose, its just an indication</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">target</td><td>Target preference </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00066">66</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    _common_params.<a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml#a2a7ca82c5e74421cb45f17e936abf964">target</a> = target;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00226">NodeParams::target</a>.</p>

</div>
</div>
<a id="a6b2d83e561886647467f86c20ce39bec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b2d83e561886647467f86c20ce39bec">&#9670;&nbsp;</a></span>type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a> type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns node's type. </p>
<dl class="section return"><dt>Returns</dt><dd>Node's type </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">FusedConvolutionBatchNormalizationNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">FusedDepthwiseConvolutionBatchNormalizationNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">UnaryEltwiseLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ConvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">DepthwiseConvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">FullyConnectedLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_strided_slice_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">StridedSliceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ConcatenateLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">EltwiseLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">SplitLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_print_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">PrintLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_l2_normalize_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">L2NormalizeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_slice_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">SliceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_arg_min_max_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ArgMinMaxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">DeconvolutionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">BatchNormalizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">DetectionOutputLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_prior_box_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">PriorBoxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_stack_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">StackLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">PoolingLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reorg_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ReorgLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_depth_to_space_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">DepthToSpaceLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_pad_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">PadLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reduction_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ReductionLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_r_o_i_align_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ROIAlignLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_dummy_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">DummyNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_permute_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">PermuteLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_quantization_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">QuantizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_resize_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ResizeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ActivationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_bounding_box_transform_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">BoundingBoxTransformLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_generate_proposals_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">GenerateProposalsLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_channel_shuffle_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ChannelShuffleLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">DetectionPostProcessLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">NormalizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">SoftmaxLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">DequantizationLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_const_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ConstNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_input_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">InputNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ReshapeLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">FlattenLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_normalize_planar_y_u_v_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">NormalizePlanarYUVLayerNode</a>, <a class="el" href="classarm__compute_1_1graph_1_1_output_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">OutputNode</a>, and <a class="el" href="classarm__compute_1_1graph_1_1_p_relu_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">PReluLayerNode</a>.</p>

<p class="reference">Referenced by <a class="el" href="graph_2_graph_8h_source.xhtml#l00234">Graph::add_node()</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00224">CLFunctionFactory::create()</a>, <a class="el" href="_n_e_function_factory_8cpp_source.xhtml#l00118">NEFunctionFactory::create()</a>, <a class="el" href="_workload_8cpp_source.xhtml#l00041">arm_compute::graph::execute_task()</a>, <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00037">arm_compute::graph::is_utility_node()</a>, <a class="el" href="_depth_concat_sub_tensor_mutator_8cpp_source.xhtml#l00050">DepthConcatSubTensorMutator::mutate()</a>, <a class="el" href="_grouped_convolution_mutator_8cpp_source.xhtml#l00120">GroupedConvolutionMutator::mutate()</a>, <a class="el" href="_split_layer_sub_tensor_mutator_8cpp_source.xhtml#l00050">SplitLayerSubTensorMutator::mutate()</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00035">Graph::remove_node()</a>, <a class="el" href="_n_e_node_validator_8cpp_source.xhtml#l00057">NENodeValidator::validate()</a>, <a class="el" href="_c_l_node_validator_8cpp_source.xhtml#l00057">CLNodeValidator::validate()</a>, and <a class="el" href="_function_helpers_8h_source.xhtml#l00078">arm_compute::graph::backends::detail::validate_node()</a>.</p>

</div>
</div>
<a id="a0f3b12aedc549ea5ba08cbb36871da15"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f3b12aedc549ea5ba08cbb36871da15">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Validate node. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class.">Status</a> containing any errors </dd></dl>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml#a600f574bc2868a148f9a746d16774dbd">SplitLayerNode</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_node_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="afab89afd724f1b07b1aaad6bdc61c47a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afab89afd724f1b07b1aaad6bdc61c47a">&#9670;&nbsp;</a></span>Graph</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_node_8h_source.xhtml#l00246">246</a> of file <a class="el" href="_i_node_8h_source.xhtml">INode.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/graph/<a class="el" href="_i_node_8h_source.xhtml">INode.h</a></li>
<li>src/graph/<a class="el" href="_i_node_8cpp_source.xhtml">INode.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_xhtml_a0ea47db036b1c140af002ee1494dcb6f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml#a0ea47db036b1c140af002ee1494dcb6f">arm_compute::graph::Graph::edge</a></div><div class="ttdeci">const Edge * edge(EdgeID id) const</div><div class="ttdoc">Get edge object given its id.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8cpp_source.xhtml#l00218">Graph.cpp:218</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_node_params_xhtml_a9b45b3e13bd9167aab02e17e08916231"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_node_params.xhtml#a9b45b3e13bd9167aab02e17e08916231">arm_compute::graph::NodeParams::name</a></div><div class="ttdeci">std::string name</div><div class="ttdoc">Node name.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00225">Types.h:225</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_aff6b38772acc09675f4f64e510e31055"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">arm_compute::graph::Edge::tensor</a></div><div class="ttdeci">Tensor * tensor() const</div><div class="ttdoc">Returns the tensor associated with this edge.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00126">Edge.h:126</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52">arm_compute::graph::Target::UNSPECIFIED</a></div><div class="ttdeci">@ UNSPECIFIED</div><div class="ttdoc">Unspecified Target.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">arm_compute::detail::ObjectType::Tensor</a></div><div class="ttdeci">@ Tensor</div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_tensor_xhtml_a0839be1697496b3a951e030627f9e69b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0839be1697496b3a951e030627f9e69b">arm_compute::graph::Tensor::unbind_edge</a></div><div class="ttdeci">void unbind_edge(EdgeID eid)</div><div class="ttdoc">Unbinds an edge from a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="src_2graph_2_tensor_8cpp_source.xhtml#l00114">Tensor.cpp:114</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_xhtml_a91bccd842a1caad3149523a05f150ee6"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml#a91bccd842a1caad3149523a05f150ee6">arm_compute::graph::Graph::tensor</a></div><div class="ttdeci">const Tensor * tensor(TensorID id) const</div><div class="ttdoc">Get tensor object given its id.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8cpp_source.xhtml#l00228">Graph.cpp:228</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_aa94938a3eb11fda4724c362c53c28f24"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">arm_compute::graph::NullTensorID</a></div><div class="ttdeci">constexpr TensorID NullTensorID</div><div class="ttdoc">Constant NodeID specifying an equivalent of null node.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00077">Types.h:77</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_i_node_xhtml_a5ea90a25ef8059df2d2e51b82991ebf3"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a5ea90a25ef8059df2d2e51b82991ebf3">arm_compute::graph::INode::id</a></div><div class="ttdeci">NodeID id() const</div><div class="ttdoc">Returns node's ID.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8cpp_source.xhtml#l00102">INode.cpp:102</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_aad3f5296ec88b9d552c109b04b89ad9f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">arm_compute::graph::EmptyNodeID</a></div><div class="ttdeci">constexpr NodeID EmptyNodeID</div><div class="ttdoc">Constant EdgeID specifying an equivalent of null edge.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_af20a11225e8c9ae2029e12f2ff05d95b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#af20a11225e8c9ae2029e12f2ff05d95b">arm_compute::graph::Edge::tensor_id</a></div><div class="ttdeci">TensorID tensor_id() const</div><div class="ttdoc">Returns the tensor id associated with this edge.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00134">Edge.h:134</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_node_params_xhtml_a2a7ca82c5e74421cb45f17e936abf964"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_node_params.xhtml#a2a7ca82c5e74421cb45f17e936abf964">arm_compute::graph::NodeParams::target</a></div><div class="ttdeci">Target target</div><div class="ttdoc">Node target.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00226">Types.h:226</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:34 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
