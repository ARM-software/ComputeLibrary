<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: NormalizationLayerInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_normalization_layer_info.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">NormalizationLayerInfo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Normalization Layer Information class.  
 <a href="classarm__compute_1_1_normalization_layer_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a305c2145d26b998641402a9fec76f0bb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a305c2145d26b998641402a9fec76f0bb">NormalizationLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59ca">NormType</a> <a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#abf43f970446f0b82889df52463b9c2b8">type</a>, uint32_t <a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a7c3edc4b354dda6c7285541f4f0e5c43">norm_size</a>=5, float <a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a418f33d41dc0830534ee590a162a10e3">alpha</a>=0.0001f, float <a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a01524f49fa1d982d4382e390bef91de7">beta</a>=0.5f, float <a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#afb71e43799c794c059aa2d6244bd3140">kappa</a>=1.f, bool <a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a97a1f3636f40206d67ff65902f7ff3a3">is_scaled</a>=true)</td></tr>
<tr class="memdesc:a305c2145d26b998641402a9fec76f0bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1_normalization_layer_info.xhtml#a305c2145d26b998641402a9fec76f0bb">More...</a><br /></td></tr>
<tr class="separator:a305c2145d26b998641402a9fec76f0bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf43f970446f0b82889df52463b9c2b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59ca">NormType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#abf43f970446f0b82889df52463b9c2b8">type</a> () const</td></tr>
<tr class="memdesc:abf43f970446f0b82889df52463b9c2b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the normalization type.  <a href="classarm__compute_1_1_normalization_layer_info.xhtml#abf43f970446f0b82889df52463b9c2b8">More...</a><br /></td></tr>
<tr class="separator:abf43f970446f0b82889df52463b9c2b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c3edc4b354dda6c7285541f4f0e5c43"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a7c3edc4b354dda6c7285541f4f0e5c43">norm_size</a> () const</td></tr>
<tr class="memdesc:a7c3edc4b354dda6c7285541f4f0e5c43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the normalization size.  <a href="classarm__compute_1_1_normalization_layer_info.xhtml#a7c3edc4b354dda6c7285541f4f0e5c43">More...</a><br /></td></tr>
<tr class="separator:a7c3edc4b354dda6c7285541f4f0e5c43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a418f33d41dc0830534ee590a162a10e3"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a418f33d41dc0830534ee590a162a10e3">alpha</a> () const</td></tr>
<tr class="memdesc:a418f33d41dc0830534ee590a162a10e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the alpha value.  <a href="classarm__compute_1_1_normalization_layer_info.xhtml#a418f33d41dc0830534ee590a162a10e3">More...</a><br /></td></tr>
<tr class="separator:a418f33d41dc0830534ee590a162a10e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01524f49fa1d982d4382e390bef91de7"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a01524f49fa1d982d4382e390bef91de7">beta</a> () const</td></tr>
<tr class="memdesc:a01524f49fa1d982d4382e390bef91de7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the beta value.  <a href="classarm__compute_1_1_normalization_layer_info.xhtml#a01524f49fa1d982d4382e390bef91de7">More...</a><br /></td></tr>
<tr class="separator:a01524f49fa1d982d4382e390bef91de7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb71e43799c794c059aa2d6244bd3140"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#afb71e43799c794c059aa2d6244bd3140">kappa</a> () const</td></tr>
<tr class="memdesc:afb71e43799c794c059aa2d6244bd3140"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the kappa value.  <a href="classarm__compute_1_1_normalization_layer_info.xhtml#afb71e43799c794c059aa2d6244bd3140">More...</a><br /></td></tr>
<tr class="separator:afb71e43799c794c059aa2d6244bd3140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97a1f3636f40206d67ff65902f7ff3a3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a97a1f3636f40206d67ff65902f7ff3a3">is_scaled</a> () const</td></tr>
<tr class="memdesc:a97a1f3636f40206d67ff65902f7ff3a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the is_scaled value.  <a href="classarm__compute_1_1_normalization_layer_info.xhtml#a97a1f3636f40206d67ff65902f7ff3a3">More...</a><br /></td></tr>
<tr class="separator:a97a1f3636f40206d67ff65902f7ff3a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a727a7ffe5a01a9d26fb910796e84e163"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a727a7ffe5a01a9d26fb910796e84e163">is_cross_map</a> () const</td></tr>
<tr class="memdesc:a727a7ffe5a01a9d26fb910796e84e163"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if normalization is cross map.  <a href="classarm__compute_1_1_normalization_layer_info.xhtml#a727a7ffe5a01a9d26fb910796e84e163">More...</a><br /></td></tr>
<tr class="separator:a727a7ffe5a01a9d26fb910796e84e163"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f8e7c7833f47804091414a46bef67d6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a9f8e7c7833f47804091414a46bef67d6">is_in_map</a> () const</td></tr>
<tr class="memdesc:a9f8e7c7833f47804091414a46bef67d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if normalization is not cross map.  <a href="classarm__compute_1_1_normalization_layer_info.xhtml#a9f8e7c7833f47804091414a46bef67d6">More...</a><br /></td></tr>
<tr class="separator:a9f8e7c7833f47804091414a46bef67d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a6d5f8b1f761ea40f7f1072642be9e5"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml#a7a6d5f8b1f761ea40f7f1072642be9e5">scale_coeff</a> () const</td></tr>
<tr class="memdesc:a7a6d5f8b1f761ea40f7f1072642be9e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the scaling factor of the normalization function.  <a href="classarm__compute_1_1_normalization_layer_info.xhtml#a7a6d5f8b1f761ea40f7f1072642be9e5">More...</a><br /></td></tr>
<tr class="separator:a7a6d5f8b1f761ea40f7f1072642be9e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Normalization Layer Information class. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01529">1529</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a305c2145d26b998641402a9fec76f0bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a305c2145d26b998641402a9fec76f0bb">&#9670;&nbsp;</a></span>NormalizationLayerInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59ca">NormType</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>norm_size</em> = <code>5</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>alpha</em> = <code>0.0001f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em> = <code>0.5f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>kappa</em> = <code>1.f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_scaled</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The normalization type. Can be <a class="el" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caaca2475ab7883ebb9f125241141896190">NormType::IN_MAP_1D</a>, <a class="el" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa6ff8bd96743aae9fd283cd822b84278e">NormType::IN_MAP_2D</a> or <a class="el" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">NormType::CROSS_MAP</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">norm_size</td><td>The normalization size is the number of elements to normalize across. Defaults to 5. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">alpha</td><td>(Optional) Alpha parameter used by normalization equation. Defaults to 0.0001. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">beta</td><td>(Optional) Beta parameter used by normalization equation. Defaults to 0.5. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">kappa</td><td>(Optional) Kappa parameter used by [Krichevksy 2012] Across Channel Local Brightness Normalization equation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_scaled</td><td>(Optional) Boolean that specifies if alpha will be scaled by the normalization size or not. Should be false to follow [Krichevksy 2012]. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01542">1542</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;        : _type(<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#abf43f970446f0b82889df52463b9c2b8">type</a>), _norm_size(<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a7c3edc4b354dda6c7285541f4f0e5c43">norm_size</a>), _alpha(<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a418f33d41dc0830534ee590a162a10e3">alpha</a>), _beta(<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a01524f49fa1d982d4382e390bef91de7">beta</a>), _kappa(<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#afb71e43799c794c059aa2d6244bd3140">kappa</a>), _is_scaled(<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a97a1f3636f40206d67ff65902f7ff3a3">is_scaled</a>)</div>
<div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;    {</div>
<div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a418f33d41dc0830534ee590a162a10e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a418f33d41dc0830534ee590a162a10e3">&#9670;&nbsp;</a></span>alpha()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float alpha </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the alpha value. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01562">1562</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;    {</div>
<div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;        <span class="keywordflow">return</span> _alpha;</div>
<div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a01524f49fa1d982d4382e390bef91de7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01524f49fa1d982d4382e390bef91de7">&#9670;&nbsp;</a></span>beta()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float beta </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the beta value. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01567">1567</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;    {</div>
<div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;        <span class="keywordflow">return</span> _beta;</div>
<div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00147">CLNormalizationLayerKernel::configure()</a>, and <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>.</p>

</div>
</div>
<a id="a727a7ffe5a01a9d26fb910796e84e163"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a727a7ffe5a01a9d26fb910796e84e163">&#9670;&nbsp;</a></span>is_cross_map()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_cross_map </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if normalization is cross map. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01582">1582</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;    {</div>
<div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;        <span class="keywordflow">return</span> _type == <a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">NormType::CROSS_MAP</a>;</div>
<div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">arm_compute::CROSS_MAP</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00147">CLNormalizationLayerKernel::configure()</a>, and <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01587">NormalizationLayerInfo::is_in_map()</a>.</p>

</div>
</div>
<a id="a9f8e7c7833f47804091414a46bef67d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f8e7c7833f47804091414a46bef67d6">&#9670;&nbsp;</a></span>is_in_map()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_in_map </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if normalization is not cross map. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01587">1587</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;    {</div>
<div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;        <span class="keywordflow">return</span> !<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a727a7ffe5a01a9d26fb910796e84e163">is_cross_map</a>();</div>
<div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01582">NormalizationLayerInfo::is_cross_map()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00147">CLNormalizationLayerKernel::configure()</a>.</p>

</div>
</div>
<a id="a97a1f3636f40206d67ff65902f7ff3a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97a1f3636f40206d67ff65902f7ff3a3">&#9670;&nbsp;</a></span>is_scaled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_scaled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the is_scaled value. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01577">1577</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;    {</div>
<div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;        <span class="keywordflow">return</span> _is_scaled;</div>
<div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="afb71e43799c794c059aa2d6244bd3140"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb71e43799c794c059aa2d6244bd3140">&#9670;&nbsp;</a></span>kappa()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float kappa </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the kappa value. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01572">1572</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;    {</div>
<div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;        <span class="keywordflow">return</span> _kappa;</div>
<div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00147">CLNormalizationLayerKernel::configure()</a>, and <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>.</p>

</div>
</div>
<a id="a7c3edc4b354dda6c7285541f4f0e5c43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c3edc4b354dda6c7285541f4f0e5c43">&#9670;&nbsp;</a></span>norm_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t norm_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the normalization size. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01557">1557</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;    {</div>
<div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;        <span class="keywordflow">return</span> _norm_size;</div>
<div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00147">CLNormalizationLayerKernel::configure()</a>, and <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>.</p>

</div>
</div>
<a id="a7a6d5f8b1f761ea40f7f1072642be9e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a6d5f8b1f761ea40f7f1072642be9e5">&#9670;&nbsp;</a></span>scale_coeff()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float scale_coeff </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the scaling factor of the normalization function. </p>
<p>If is_scaled is set to false then [Krichevksy 2012] normalization scaling is performed, where alpha is returned plainly, else alpha is scaled by the total number of elements used for the normalization.</p>
<dl class="section return"><dt>Returns</dt><dd>The normalization scaling factor. </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01598">1598</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;    {</div>
<div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;        <span class="keyword">const</span> uint32_t size = (_type == <a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa6ff8bd96743aae9fd283cd822b84278e">NormType::IN_MAP_2D</a>) ? _norm_size * _norm_size : _norm_size;</div>
<div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;        <span class="keywordflow">return</span> (_is_scaled) ? (_alpha / size) : _alpha;</div>
<div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa6ff8bd96743aae9fd283cd822b84278e">arm_compute::IN_MAP_2D</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00147">CLNormalizationLayerKernel::configure()</a>, and <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>.</p>

</div>
</div>
<a id="abf43f970446f0b82889df52463b9c2b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf43f970446f0b82889df52463b9c2b8">&#9670;&nbsp;</a></span>type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59ca">NormType</a> type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the normalization type. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01552">1552</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;    {</div>
<div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;        <span class="keywordflow">return</span> _type;</div>
<div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_normalization_layer_kernel_8cpp_source.xhtml#l00079">NENormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00147">CLNormalizationLayerKernel::configure()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l01055">arm_compute::graph::backends::detail::create_normalization_layer()</a>, <a class="el" href="_n_e_function_factory_8cpp_source.xhtml#l00091">arm_compute::graph::backends::detail::create_normalization_layer&lt; NENormalizationLayer, NETargetInfo &gt;()</a>, and <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00096">DotGraphVisitor::visit()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml_afb71e43799c794c059aa2d6244bd3140"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#afb71e43799c794c059aa2d6244bd3140">arm_compute::NormalizationLayerInfo::kappa</a></div><div class="ttdeci">float kappa() const</div><div class="ttdoc">Get the kappa value.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01572">Types.h:1572</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml_a418f33d41dc0830534ee590a162a10e3"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a418f33d41dc0830534ee590a162a10e3">arm_compute::NormalizationLayerInfo::alpha</a></div><div class="ttdeci">float alpha() const</div><div class="ttdoc">Get the alpha value.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01562">Types.h:1562</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml_a97a1f3636f40206d67ff65902f7ff3a3"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a97a1f3636f40206d67ff65902f7ff3a3">arm_compute::NormalizationLayerInfo::is_scaled</a></div><div class="ttdeci">bool is_scaled() const</div><div class="ttdoc">Get the is_scaled value.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01577">Types.h:1577</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml_a7c3edc4b354dda6c7285541f4f0e5c43"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a7c3edc4b354dda6c7285541f4f0e5c43">arm_compute::NormalizationLayerInfo::norm_size</a></div><div class="ttdeci">uint32_t norm_size() const</div><div class="ttdoc">Get the normalization size.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01557">Types.h:1557</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad4bb8dabdbf8ad75e34220cc666b59caa6ff8bd96743aae9fd283cd822b84278e"><div class="ttname"><a href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa6ff8bd96743aae9fd283cd822b84278e">arm_compute::NormType::IN_MAP_2D</a></div><div class="ttdeci">@ IN_MAP_2D</div><div class="ttdoc">Normalization applied within the same map in 2D region.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml_a727a7ffe5a01a9d26fb910796e84e163"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a727a7ffe5a01a9d26fb910796e84e163">arm_compute::NormalizationLayerInfo::is_cross_map</a></div><div class="ttdeci">bool is_cross_map() const</div><div class="ttdoc">Check if normalization is cross map.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01582">Types.h:1582</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">arm_compute::NormType::CROSS_MAP</a></div><div class="ttdeci">@ CROSS_MAP</div><div class="ttdoc">Normalization applied cross maps.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml_a01524f49fa1d982d4382e390bef91de7"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a01524f49fa1d982d4382e390bef91de7">arm_compute::NormalizationLayerInfo::beta</a></div><div class="ttdeci">float beta() const</div><div class="ttdoc">Get the beta value.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01567">Types.h:1567</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml_abf43f970446f0b82889df52463b9c2b8"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#abf43f970446f0b82889df52463b9c2b8">arm_compute::NormalizationLayerInfo::type</a></div><div class="ttdeci">NormType type() const</div><div class="ttdoc">Get the normalization type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01552">Types.h:1552</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
