<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/ISimpleLifetimeManager.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_i_simple_lifetime_manager_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ISimpleLifetimeManager.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_i_simple_lifetime_manager_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2020 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_simple_lifetime_manager_8h.xhtml">arm_compute/runtime/ISimpleLifetimeManager.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_allocator_8h.xhtml">arm_compute/runtime/IAllocator.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_8h.xhtml">arm_compute/runtime/IMemory.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_group_8h.xhtml">arm_compute/runtime/IMemoryGroup.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_pool_8h.xhtml">arm_compute/runtime/IMemoryPool.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a011196c118f00760877e8113b6256148">   39</a></span>&#160;<a class="code" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a011196c118f00760877e8113b6256148">ISimpleLifetimeManager::ISimpleLifetimeManager</a>()</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    : _active_group(nullptr), _active_elements(), _free_blobs(), _occupied_blobs(), _finalized_groups()</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a93fc2c6a7ebb5d8f44c67d492347d054">   44</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a93fc2c6a7ebb5d8f44c67d492347d054">ISimpleLifetimeManager::register_group</a>(<a class="code" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *group)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">if</span> (_active_group == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(group == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        _active_group = group;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a2f3b9c36674e2c4097552d9ffb30fbf2">   53</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a2f3b9c36674e2c4097552d9ffb30fbf2">ISimpleLifetimeManager::release_group</a>(<a class="code" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *group)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">if</span> (group == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> status = bool(_finalized_groups.erase(group));</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        group-&gt;<a class="code" href="classarm__compute_1_1_i_memory_group.xhtml#aa4f0ba2c065527f486249f37350a235c">mappings</a>().clear();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> status;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#af9e6669812c674ab36a3cb3e592d5efe">   67</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#af9e6669812c674ab36a3cb3e592d5efe">ISimpleLifetimeManager::start_lifetime</a>(<span class="keywordtype">void</span> *obj)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(obj == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_active_elements.find(obj) != <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_active_elements),</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                             <span class="stringliteral">&quot;Memory object is already registered!&quot;</span>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// Check if there is a free blob</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span> (_free_blobs.empty())</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        _occupied_blobs.emplace_front(Blob{obj, 0, 0, {obj}});</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        _occupied_blobs.splice(std::begin(_occupied_blobs), _free_blobs, std::begin(_free_blobs));</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        _occupied_blobs.front().id = obj;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="comment">// Insert object in groups and mark its finalized state to false</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    _active_elements.insert(std::make_pair(obj, obj));</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a5eb1cd0eb1bd44c695f7e3a8b65ba000">   88</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a5eb1cd0eb1bd44c695f7e3a8b65ba000">ISimpleLifetimeManager::end_lifetime</a>(<span class="keywordtype">void</span> *obj, <a class="code" href="classarm__compute_1_1_i_memory.xhtml">IMemory</a> &amp;obj_memory, <span class="keywordtype">size_t</span> size, <span class="keywordtype">size_t</span> alignment)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(obj == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="comment">// Find object</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">auto</span> active_object_it = _active_elements.find(obj);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(active_object_it == <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_active_elements));</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">// Update object fields and mark object as complete</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    Element &amp;el  = active_object_it-&gt;second;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    el.handle    = &amp;obj_memory;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    el.size      = size;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    el.alignment = alignment;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    el.status    = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment">// Find object in the occupied lists</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">auto</span> occupied_blob_it = std::find_if(std::begin(_occupied_blobs), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_occupied_blobs),</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                         [&amp;obj](<span class="keyword">const</span> Blob &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>) { <span class="keywordflow">return</span> obj == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.id; });</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(occupied_blob_it == <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_occupied_blobs));</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="comment">// Update occupied blob and return as free</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    occupied_blob_it-&gt;bound_elements.insert(obj);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    occupied_blob_it-&gt;max_size      = std::max(occupied_blob_it-&gt;max_size, size);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    occupied_blob_it-&gt;max_alignment = std::max(occupied_blob_it-&gt;max_alignment, alignment);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    occupied_blob_it-&gt;id            = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    _free_blobs.splice(std::begin(_free_blobs), _occupied_blobs, occupied_blob_it);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="comment">// Check if all objects are finalized and reset active group</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aa849cbaa03d63911dbbedc830f22943d">are_all_finalized</a>())</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!_occupied_blobs.empty());</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="comment">// Update blobs and group mappings</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        update_blobs_and_mappings();</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="comment">// Update finalized groups</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        _finalized_groups[_active_group].insert(std::begin(_active_elements), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_active_elements));</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="comment">// Reset state</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        _active_elements.clear();</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        _active_group = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        _free_blobs.clear();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aa849cbaa03d63911dbbedc830f22943d">  133</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aa849cbaa03d63911dbbedc830f22943d">ISimpleLifetimeManager::are_all_finalized</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> !std::any_of(std::begin(_active_elements), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_active_elements),</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                        [](<span class="keyword">const</span> std::pair&lt;void *, Element&gt; &amp;e) { <span class="keywordflow">return</span> !e.second.status; });</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_i_memory_8h_xhtml"><div class="ttname"><a href="_i_memory_8h.xhtml">IMemory.h</a></div></div>
<div class="ttc" id="a_i_simple_lifetime_manager_8h_xhtml"><div class="ttname"><a href="_i_simple_lifetime_manager_8h.xhtml">ISimpleLifetimeManager.h</a></div></div>
<div class="ttc" id="a_i_memory_pool_8h_xhtml"><div class="ttname"><a href="_i_memory_pool_8h.xhtml">IMemoryPool.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_simple_lifetime_manager_xhtml_a2f3b9c36674e2c4097552d9ffb30fbf2"><div class="ttname"><a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a2f3b9c36674e2c4097552d9ffb30fbf2">arm_compute::ISimpleLifetimeManager::release_group</a></div><div class="ttdeci">bool release_group(IMemoryGroup *group) override</div><div class="ttdoc">Unbound and release elements associated with a group.</div><div class="ttdef"><b>Definition:</b> <a href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00053">ISimpleLifetimeManager.cpp:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_memory_group_xhtml_aa4f0ba2c065527f486249f37350a235c"><div class="ttname"><a href="classarm__compute_1_1_i_memory_group.xhtml#aa4f0ba2c065527f486249f37350a235c">arm_compute::IMemoryGroup::mappings</a></div><div class="ttdeci">virtual MemoryMappings &amp; mappings()=0</div><div class="ttdoc">Gets the memory mapping of the group.</div></div>
<div class="ttc" id="a_i_allocator_8h_xhtml"><div class="ttname"><a href="_i_allocator_8h.xhtml">IAllocator.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_memory_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_memory_group.xhtml">arm_compute::IMemoryGroup</a></div><div class="ttdoc">Memory group interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_group_8h_source.xhtml#l00037">IMemoryGroup.h:37</a></div></div>
<div class="ttc" id="a_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_simple_lifetime_manager_xhtml_a5eb1cd0eb1bd44c695f7e3a8b65ba000"><div class="ttname"><a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a5eb1cd0eb1bd44c695f7e3a8b65ba000">arm_compute::ISimpleLifetimeManager::end_lifetime</a></div><div class="ttdeci">void end_lifetime(void *obj, IMemory &amp;obj_memory, size_t size, size_t alignment) override</div><div class="ttdoc">Ends lifetime of an object.</div><div class="ttdef"><b>Definition:</b> <a href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00088">ISimpleLifetimeManager.cpp:88</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_simple_lifetime_manager_xhtml_af9e6669812c674ab36a3cb3e592d5efe"><div class="ttname"><a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#af9e6669812c674ab36a3cb3e592d5efe">arm_compute::ISimpleLifetimeManager::start_lifetime</a></div><div class="ttdeci">void start_lifetime(void *obj) override</div><div class="ttdoc">Registers and starts lifetime of an object.</div><div class="ttdef"><b>Definition:</b> <a href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00067">ISimpleLifetimeManager.cpp:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_memory_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_memory.xhtml">arm_compute::IMemory</a></div><div class="ttdoc">Memory interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_8h_source.xhtml#l00032">IMemory.h:32</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_simple_lifetime_manager_xhtml_a011196c118f00760877e8113b6256148"><div class="ttname"><a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a011196c118f00760877e8113b6256148">arm_compute::ISimpleLifetimeManager::ISimpleLifetimeManager</a></div><div class="ttdeci">ISimpleLifetimeManager()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00039">ISimpleLifetimeManager.cpp:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_simple_lifetime_manager_xhtml_a93fc2c6a7ebb5d8f44c67d492347d054"><div class="ttname"><a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a93fc2c6a7ebb5d8f44c67d492347d054">arm_compute::ISimpleLifetimeManager::register_group</a></div><div class="ttdeci">void register_group(IMemoryGroup *group) override</div><div class="ttdoc">Registers a group to the lifetime manager and assigns a group id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00044">ISimpleLifetimeManager.cpp:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">MLGOParser.cpp:283</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_simple_lifetime_manager_xhtml_aa849cbaa03d63911dbbedc830f22943d"><div class="ttname"><a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aa849cbaa03d63911dbbedc830f22943d">arm_compute::ISimpleLifetimeManager::are_all_finalized</a></div><div class="ttdeci">bool are_all_finalized() const override</div><div class="ttdoc">Checks if the lifetime of the registered object is complete.</div><div class="ttdef"><b>Definition:</b> <a href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00133">ISimpleLifetimeManager.cpp:133</a></div></div>
<div class="ttc" id="a_i_memory_group_8h_xhtml"><div class="ttname"><a href="_i_memory_group_8h.xhtml">IMemoryGroup.h</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="_i_simple_lifetime_manager_8cpp.xhtml">ISimpleLifetimeManager.cpp</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:24 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
