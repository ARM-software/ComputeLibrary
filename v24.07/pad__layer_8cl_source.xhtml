<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/common/pad_layer.cl Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('pad__layer_8cl_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">pad_layer.cl</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pad__layer_8cl.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#if defined(DATA_TYPE) &amp;&amp; defined(VEC_SIZE) &amp;&amp; defined(PAD_X_BEFORE) &amp;&amp; defined(SRC_WIDTH) &amp;&amp; defined(PAD_X_BEFORE_REMAINDER) &amp;&amp; defined(VEC_SIZE_LEFTOVER_WRITE)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#define VEC_TYPE VEC_DATA_TYPE(DATA_TYPE, VEC_SIZE)</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#define VEC_INT VEC_DATA_TYPE(int, VEC_SIZE)</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#define VEC_SELECT SELECT_VEC_DATA_TYPE(DATA_TYPE, VEC_SIZE)</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#define OFFSETS VEC_OFFS(SELECT_DATA_TYPE(DATA_TYPE), VEC_SIZE)</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#define SCALAR_COND(x) CONVERT((VEC_SELECT)x == (VEC_SELECT)1, VEC_SELECT)</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#if defined(CONST_VAL) &amp;&amp; defined(VEC_SIZE_LEFTOVER_READ)</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/** Perform a pad operation when PaddingMode is CONSTANT</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> * @note Data type can be passed using the -DDATA_TYPE compile flag, e.g. -DDATA_TYPE=float</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"> * @note Vector size must be passed using the -DVEC_SIZE compile flag, e.g. -DVEC_SIZE=4</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> * @note Constant value used to fill the pads must be passed using the -DCONST_VAL compile flag, e.g. -DCONST_VAL=1.27</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> * @note Pad to add to the left must be passed using the -DPAD_X_BEFORE compile flag, e.g. -DPAD_X_BEFORE=5</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> * @note Input tensor&#39;s width must be passed using the -DSRC_WIDTH compile flag, e.g. -DSRC_WIDTH=224</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> * @note In case pad left is more than the vector size, the number of threads to skip along the X axis must be passed using the</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> *       -DTHREADS_TO_SKIP_BEFORE compile flag, e.g. -DTHREADS_TO_SKIP_BEFORE=1. This is defined as (PAD_X_BEFORE / VEC_SIZE)</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * @note In case pad left is more than the vector size, the thread from which to skip along the X axis for pad right must be passed using the</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> *       -DTHREADS_TO_SKIP_AFTER compile flag, e.g. -THREADS_TO_SKIP_AFTER=1. This is defined as ((SRC_WIDTH + PAD_X_BEFORE) / VEC_SIZE)</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> * @note If pad also needs to be added to the top of the tensor, the following compile flags must be passed at compile time:</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> *       -# -DPAD_Y_BEFORE: Pad to add to the top of the input tensor (e.g. -DPAD_Y_BEFORE=3)</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> *       -# -DSRC_HEIGHT: Input tensor&#39;s height (e.g. -DSRC_HEIGHT=127)</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> * @note If pad also needs to be added to the depth of the tensor, the following compile flags must be passed at compile time:</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> *       -# -DPAD_Z_BEFORE: Pad to add before the first plane of the input tensor (e.g. -DPAD_Z_BEFORE=3)</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> *       -# -DSRC_DEPTH: Input tensor&#39;s depth (e.g. -DSRC_DEPTH=32)</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> * @note If pad also needs to be added to the batch of the tensor, the following compile flags must be passed at compile time:</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> *       -# -DPAD_W_BEFORE: Pad to add before the first batch of the input tensor (e.g. -DPAD_W_BEFORE=3)</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> *       -# -DSRC_BATCH: Input tensor&#39;s batch size (e.g. -DSRC_BATCH=4)</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> * @param[in]  src_ptr                           Pointer to the source image. Supported data types: All</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> * @param[in]  src_stride_x                      Stride of the source image in X dimension (in bytes)</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> * @param[in]  src_step_x                        src_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> * @param[in]  src_stride_y                      Stride of the source image in Y dimension (in bytes)</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> * @param[in]  src_step_y                        src_stride_y * number of elements along Y processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"> * @param[in]  src_stride_z                      Stride of the source image in Z dimension (in bytes)</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"> * @param[in]  src_step_z                        src_stride_z * number of elements along Z processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"> * @param[in]  src_offset_first_element_in_bytes The offset of the first element in the source image</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"> * @param[out] dst_ptr                           Pointer to the destination image. Supported data types: same as @p src_ptr</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> * @param[in]  dst_stride_x                      Stride of the destination image in X dimension (in bytes)</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> * @param[in]  dst_step_x                        dst_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> * @param[in]  dst_stride_y                      Stride of the destination image in Y dimension (in bytes)</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> * @param[in]  dst_step_y                        dst_stride_y * number of elements along Y processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> * @param[in]  dst_stride_z                      Stride of the destination image in Z dimension (in bytes)</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> * @param[in]  dst_step_z                        dst_stride_z * number of elements along Z processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"> * @param[in]  dst_offset_first_element_in_bytes The offset of the first element in the destination image</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"> * @param[in]  batch                             (Optional) Batch index if 4D pad must be applied</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;__kernel <span class="keywordtype">void</span> pad_layer_constant(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>),</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;#<span class="keywordflow">if</span> defined(PAD_W_BEFORE)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                 ,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                 uint batch</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;#endif <span class="comment">// defined(PAD_W_BEFORE)</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                )</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">CONVERT_TO_TENSOR3D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">int</span> x = get_global_id(0);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">int</span> y = get_global_id(1);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">int</span> z = get_global_id(2);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="comment">// If true, write only padding values; no reads performed</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    uint cond = 0;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">#if defined(THREADS_TO_SKIP_BEFORE)</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    cond |= x &lt; THREADS_TO_SKIP_BEFORE || x &gt; THREADS_TO_SKIP_AFTER;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">#endif // defined(THREADS_TO_SKIP_BEFORE)</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">#if defined(PAD_Y_BEFORE)</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    cond |= y &lt; PAD_Y_BEFORE || y &gt;= (SRC_HEIGHT + PAD_Y_BEFORE);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">#endif // defined(PAD_Y_BEFORE)</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor">#if defined(PAD_Z_BEFORE)</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    cond |= z &lt; PAD_Z_BEFORE || z &gt;= (SRC_DEPTH + PAD_Z_BEFORE);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#endif // defined(PAD_Z_BEFORE)</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">#if defined(PAD_W_BEFORE)</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    cond |= batch &lt; PAD_W_BEFORE || batch &gt;= (SRC_BATCH + PAD_W_BEFORE);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">#endif // defined(PAD_W_BEFORE)</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">if</span>(cond)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        VEC_TYPE const_vals0 = (VEC_TYPE)CONST_VAL;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <a class="code" href="load__store__utility_8h.xhtml#a270acb3e45f182ebb6526f3e85eadd14">STORE_VECTOR_SELECT</a>(const_vals, DATA_TYPE, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr, <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>, VEC_SIZE_LEFTOVER_WRITE, get_global_id(0) == (get_global_size(0) - 1));</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="comment">// Calculate input&#39;s coordinates based on output&#39;s</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> = 0;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#if defined(THREADS_TO_SKIP_BEFORE)</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        x -= THREADS_TO_SKIP_BEFORE;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#endif // defined(THREADS_TO_SKIP_BEFORE)</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#if defined(PAD_Y_BEFORE)</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        y -= PAD_Y_BEFORE;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">#endif // defined(PAD_Y_BEFORE)</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">#if defined(PAD_Z_BEFORE)</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        z -= PAD_Z_BEFORE;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor">#endif // defined(PAD_Z_BEFORE)</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#if defined(PAD_W_BEFORE)</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> -= PAD_W_BEFORE * SRC_DEPTH;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#endif // defined(PAD_W_BEFORE)</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        x *= <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        x -= PAD_X_BEFORE_REMAINDER;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="comment">// Check for out of bound reads and clamp X coordinate</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        uint cond_left  = x &lt; 0;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        uint cond_right = (x + <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>) &gt; SRC_WIDTH;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        x               = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a96efecf997f13a914609ddf1eb67f624">clamp</a>(x, 0, (SRC_WIDTH - <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>));</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment">// Calculate input&#39;s address</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        __global uchar *src_addr = src_ptr + src_offset_first_element_in_bytes + x * src_stride_x + y * src_stride_y + z * src_stride_z + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> * (int)src_stride_z;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="comment">// Read values and rotate them properly if they would have been across paddings</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        VEC_TYPE src_vals0 = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a287e2fc366c312b468382c95bb90f91f">VLOAD</a>(<a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>)(0, (__global DATA_TYPE *)src_addr);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        src_vals0          = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(src_vals0, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa6a1974248e56bbdfb2845d985093ce7">ROTATE</a>(src_vals0, <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>, PAD_X_BEFORE_REMAINDER), SCALAR_COND(cond_left));</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        src_vals0          = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(src_vals0, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa6a1974248e56bbdfb2845d985093ce7">ROTATE</a>(src_vals0, <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>, VEC_SIZE_LEFTOVER_READ), SCALAR_COND(cond_right));</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="comment">// Check what values would be padding and replace them with the constant value</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        VEC_INT xs_out = (VEC_INT)(get_global_id(0) * <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>) + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ac22ba2ef169d8979d68d9553ae34d284">VEC_OFFS</a>(<span class="keywordtype">int</span>, <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        VEC_INT conds  = xs_out &lt; (VEC_INT)PAD_X_BEFORE || xs_out &gt;= (VEC_INT)(SRC_WIDTH + PAD_X_BEFORE);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        src_vals0      = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(src_vals0, (VEC_TYPE)CONST_VAL, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(conds, VEC_SELECT));</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="comment">// Store values in bounds</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <a class="code" href="load__store__utility_8h.xhtml#a270acb3e45f182ebb6526f3e85eadd14">STORE_VECTOR_SELECT</a>(src_vals, DATA_TYPE, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr, <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>, VEC_SIZE_LEFTOVER_WRITE, get_global_id(0) == (get_global_size(0) - 1));</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#endif // defined(CONST_VAL) &amp;&amp; defined(VEC_SIZE_LEFTOVER_READ)</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="preprocessor">#if defined(IS_REFLECT) &amp;&amp; defined(PAD_X_AFTER_REMAINDER) &amp;&amp; defined(PAD_X_BEFORE_REMAINDER_REFL) &amp;&amp; defined(PAD_X_AFTER_REMAINDER_REFL) &amp;&amp; defined(AFTER_PAD_FACT_X)</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor">#define ROTATE_REVERSE(x, n) ROTATE(REVERSE(x, VEC_SIZE), VEC_SIZE, n)</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">#define SYMM_REFL_LEFT(x, n0, n1) select(ROTATE_REVERSE(x, n1), ROTATE(x, VEC_SIZE, n0), OFFSETS &gt;= (VEC_SELECT)n0)</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">#define SYMM_REFL_RIGHT(x, n0, n1) select(ROTATE(x, VEC_SIZE, n0), ROTATE_REVERSE(x, n1), OFFSETS &gt;= (VEC_SELECT)n0)</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">/** Perform a pad operation when PaddingMode is SYMMETRIC</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"> * @note Data type can be passed using the -DDATA_TYPE compile flag, e.g. -DDATA_TYPE=float</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"> * @note Vector size must be passed using the -DVEC_SIZE compile flag, e.g. -DVEC_SIZE=4</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment"> * @note Constant value must be passed using the -DCONST_VAL compile flag, e.g. -DCONST_VAL=1.27</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment"> * @note Pad to add to the left must be passed using the -DPAD_X_BEFORE compile flag, e.g. -DPAD_X_BEFORE=5</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment"> * @note Input tensor&#39;s width must be passed using the -DSRC_WIDTH compile flag, e.g. -DSRC_WIDTH=224</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment"> * @note Number of values to the left when operating across left padding must be passed using the -DPAD_X_BEFORE_REMAINDER compile flag, e.g. -DPAD_X_BEFORE_REMAINDER=5</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"> * @note Number of values to the left when operating across right padding must be passed using the -DPAD_X_AFTER_REMAINDER compile flag, e.g. -DPAD_X_AFTER_REMAINDER=6</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment"> * @note To rearrange the vectors properly, (PAD_X_BEFORE_REMAINDER + 1) must be passed when mode is REFLECT using the -DPAD_X_BEFORE_REMAINDER_REFL compile flag, e.g. -DPAD_X_BEFORE_REMAINDER=6</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment"> * @note To rearrange the vectors properly, (PAD_X_AFTER_REMAINDER - 1) must be passed using the -DPAD_X_AFTER_REMAINDER_REFL compile flag, e.g. -DPAD_X_AFTER_REMAINDER=5</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"> * @note When after pad X, starting point to read backward from must be passed using the -DAFTER_PAD_FACT_X compile flag, e.g. -DAFTER_PAD_FACT_X=253</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment"> * @note If padding mode is REFLECT, the -DIS_REFLECT compile flag must be set to 1, else it must be set to 0</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment"> * @note If pad also needs to be added to the top of the tensor, the following compile flags must be passed at compile time:</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"> *       -# -DPAD_Y_BEFORE: Pad to add to the top of the input tensor (e.g. -DPAD_Y_BEFORE=3)</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"> *       -# -DSRC_HEIGHT: Input tensor&#39;s height (e.g. -DSRC_HEIGHT=127)</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"> * @note If pad also needs to be added to the depth of the tensor, the following compile flags must be passed at compile time:</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment"> *       -# -DPAD_Z_BEFORE: Pad to add before the first plane of the input tensor (e.g. -DPAD_Z_BEFORE=3)</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"> *       -# -DSRC_DEPTH: Input tensor&#39;s depth (e.g. -DSRC_DEPTH=32)</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment"> * @note If the starting point to read backward from is less than the output&#39;s last element accessed in the X, the following compile flags must be passed at compile time to avoid negative offsets:</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"> *       -# -DAFTER_PAD_REM: Defines how much to rotate the vector if the backward calculation attempted to read from a negative offset (e.g. -DAFTER_PAD_REM=3)</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment"> * @param[in]  src_ptr                           Pointer to the source image. Supported data types: All</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"> * @param[in]  src_stride_x                      Stride of the source image in X dimension (in bytes)</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment"> * @param[in]  src_step_x                        src_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment"> * @param[in]  src_stride_y                      Stride of the source image in Y dimension (in bytes)</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment"> * @param[in]  src_step_y                        src_stride_y * number of elements along Y processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment"> * @param[in]  src_stride_z                      Stride of the source image in Z dimension (in bytes)</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"> * @param[in]  src_step_z                        src_stride_z * number of elements along Z processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"> * @param[in]  src_offset_first_element_in_bytes The offset of the first element in the source image</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"> * @param[out] dst_ptr                           Pointer to the destination image. Supported data types: same as @p src_ptr</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> * @param[in]  dst_stride_x                      Stride of the destination image in X dimension (in bytes)</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"> * @param[in]  dst_step_x                        dst_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"> * @param[in]  dst_stride_y                      Stride of the destination image in Y dimension (in bytes)</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"> * @param[in]  dst_step_y                        dst_stride_y * number of elements along Y processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"> * @param[in]  dst_stride_z                      Stride of the destination image in Z dimension (in bytes)</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"> * @param[in]  dst_step_z                        dst_stride_z * number of elements along Z processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"> * @param[in]  dst_offset_first_element_in_bytes The offset of the first element in the destination image</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;__kernel <span class="keywordtype">void</span> pad_layer_symmetric_reflect(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>),</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                          <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;{</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="comment">// Get current thread position</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> x = get_global_id(0);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> y = get_global_id(1);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> z = get_global_id(2);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="comment">// Define conditions based on the thread X position w.r.t. pad left and right</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> x_out_first         = x * <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> x_out_last          = x_out_first + <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> is_before_pad_left  = (x_out_last &lt;= PAD_X_BEFORE);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> is_across_pad_left  = (x_out_first &lt; PAD_X_BEFORE) &amp;&amp; (x_out_last &gt; PAD_X_BEFORE);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> is_inside_input     = (x_out_first &gt;= PAD_X_BEFORE) &amp;&amp; (x_out_last &lt;= (SRC_WIDTH + PAD_X_BEFORE));</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> is_across_pad_right = (x_out_first &lt; (SRC_WIDTH + PAD_X_BEFORE)) &amp;&amp; (x_out_last &gt; (SRC_WIDTH + PAD_X_BEFORE));</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> is_after_pad_right  = (x_out_first &gt;= (SRC_WIDTH + PAD_X_BEFORE));</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="comment">// Calculate base pointers</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    __global uchar *src_addr = src_ptr + src_offset_first_element_in_bytes;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>      = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">CONVERT_TO_TENSOR3D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="comment">// Calculate input tensor&#39;s offset based on the defined conditions</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordtype">int</span> x_offset = 0;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    x_offset     = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(x_offset, PAD_X_BEFORE - x_out_last + IS_REFLECT, is_before_pad_left);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    x_offset     = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(x_offset, x_out_first - PAD_X_BEFORE, is_inside_input);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    x_offset     = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(x_offset, SRC_WIDTH - <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>, is_across_pad_right);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    x_offset     = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(x_offset, AFTER_PAD_FACT_X - x_out_last, is_after_pad_right);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor">#if defined(AFTER_PAD_REM)</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordtype">int</span> neg_offs = x_offset &lt; 0;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    x_offset     = max(x_offset, 0);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="preprocessor">#endif // defined(AFTER_PAD_REM)</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="comment">// Load input values from the computed offset</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordtype">int</span> y_in = y;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordtype">int</span> z_in = z;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">#if defined(PAD_Y_BEFORE)</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    y_in = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(y - PAD_Y_BEFORE, PAD_Y_BEFORE - y + IS_REFLECT - 1, y &lt; PAD_Y_BEFORE);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    y_in = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(y_in, 2 * SRC_HEIGHT + PAD_Y_BEFORE - y - IS_REFLECT - 1, y &gt;= (SRC_HEIGHT + PAD_Y_BEFORE));</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="preprocessor">#endif // defined(PAD_Y_BEFORE)</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">#if defined(PAD_Z_BEFORE)</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    z_in = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(z - PAD_Z_BEFORE, PAD_Z_BEFORE - z + IS_REFLECT - 1, z &lt; PAD_Z_BEFORE);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    z_in = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(z_in, 2 * SRC_DEPTH + PAD_Z_BEFORE - z - IS_REFLECT - 1, z &gt;= (SRC_DEPTH + PAD_Z_BEFORE));</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="preprocessor">#endif // defined(PAD_Y_BEFORE)</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    src_addr += x_offset * src_stride_x + y_in * src_step_y + z_in * src_step_z;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor">#if SRC_WIDTH == 1</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#acb282042d1edeeaa3cc979a206f78b54">VSTORE</a>(<a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    ((VEC_TYPE)(*(__global DATA_TYPE *)src_addr), 0, (__global DATA_TYPE *)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="preprocessor">#else // SRC_WIDTH == 1</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    VEC_TYPE src_vals0 = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a287e2fc366c312b468382c95bb90f91f">VLOAD</a>(<a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>)(0, (__global DATA_TYPE *)src_addr);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="comment">// Choose rearrangement policy based on the defined conditions</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    src_vals0 = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(src_vals0, SYMM_REFL_LEFT(src_vals0, PAD_X_BEFORE_REMAINDER, PAD_X_BEFORE_REMAINDER_REFL), SCALAR_COND(is_across_pad_left));</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    src_vals0 = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(src_vals0, SYMM_REFL_RIGHT(src_vals0, PAD_X_AFTER_REMAINDER, PAD_X_AFTER_REMAINDER_REFL), SCALAR_COND(is_across_pad_right));</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    src_vals0 = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(src_vals0, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#abcadce1c5f0c9f446d1a72cac2421121">REVERSE</a>(src_vals0, <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>), SCALAR_COND((is_before_pad_left || is_after_pad_right)));</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="preprocessor">#if defined(AFTER_PAD_REM)</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    src_vals0 = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">select</a>(src_vals0, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa6a1974248e56bbdfb2845d985093ce7">ROTATE</a>(src_vals0, <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>, AFTER_PAD_REM), SCALAR_COND(neg_offs));</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="preprocessor">#endif // defined(AFTER_PAD_REM)</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="comment">// Store values in bounds</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="load__store__utility_8h.xhtml#a270acb3e45f182ebb6526f3e85eadd14">STORE_VECTOR_SELECT</a>(src_vals, DATA_TYPE, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr, <a class="code" href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a>, VEC_SIZE_LEFTOVER_WRITE, get_global_id(0) == (get_global_size(0) - 1));</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="preprocessor">#endif // SRC_WIDTH == 1</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;}</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="preprocessor">#endif // defined(IS_REFLECT) &amp;&amp; defined(PAD_X_AFTER_REMAINDER) &amp;&amp; defined(PAD_X_BEFORE_REMAINDER_REFL) &amp;&amp; defined(PAD_X_AFTER_REMAINDER_REFL) &amp;&amp; defined(AFTER_PAD_FACT_X)</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="preprocessor">#endif // defined(DATA_TYPE) &amp;&amp; defined(VEC_SIZE) &amp;&amp; defined(PAD_X_BEFORE) &amp;&amp; defined(SRC_WIDTH) &amp;&amp; defined(PAD_X_BEFORE_REMAINDER) &amp;&amp; defined(VEC_SIZE_LEFTOVER_WRITE)</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="aqlstm__layer__normalization_8cl_xhtml_a3fffea119c04c7680f2e9cf3fadf63b4"><div class="ttname"><a href="qlstm__layer__normalization_8cl.xhtml#a3fffea119c04c7680f2e9cf3fadf63b4">VEC_SIZE</a></div><div class="ttdeci">#define VEC_SIZE</div><div class="ttdef"><b>Definition:</b> <a href="qlstm__layer__normalization_8cl_source.xhtml#l00054">qlstm_layer_normalization.cl:54</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a31c8c760f08fb1a331b16b7c204321dc"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">CONVERT_TO_TENSOR3D_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_TENSOR3D_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00893">helpers.h:893</a></div></div>
<div class="ttc" id="aload__store__utility_8h_xhtml_a270acb3e45f182ebb6526f3e85eadd14"><div class="ttname"><a href="load__store__utility_8h.xhtml#a270acb3e45f182ebb6526f3e85eadd14">STORE_VECTOR_SELECT</a></div><div class="ttdeci">#define STORE_VECTOR_SELECT(basename, data_type, ptr, vec_size, leftover, cond)</div><div class="ttdef"><b>Definition:</b> <a href="load__store__utility_8h_source.xhtml#l00594">load_store_utility.h:594</a></div></div>
<div class="ttc" id="astruct_tensor3_d_xhtml"><div class="ttname"><a href="struct_tensor3_d.xhtml">Tensor3D</a></div><div class="ttdoc">Structure to hold 3D tensor information.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00932">helpers.h:932</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utility_xhtml_a96efecf997f13a914609ddf1eb67f624"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#a96efecf997f13a914609ddf1eb67f624">arm_compute::utility::clamp</a></div><div class="ttdeci">DataType clamp(const DataType &amp;n, const DataType &amp;lower=std::numeric_limits&lt; RangeType &gt;::lowest(), const DataType &amp;upper=std::numeric_limits&lt; RangeType &gt;::max())</div><div class="ttdoc">Performs clamping among a lower and upper value.</div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00102">Utility.h:102</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a287e2fc366c312b468382c95bb90f91f"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a287e2fc366c312b468382c95bb90f91f">VLOAD</a></div><div class="ttdeci">#define VLOAD(size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00204">helpers.h:204</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_acb282042d1edeeaa3cc979a206f78b54"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#acb282042d1edeeaa3cc979a206f78b54">VSTORE</a></div><div class="ttdeci">#define VSTORE(size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00500">helpers.h:500</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_aa6a1974248e56bbdfb2845d985093ce7"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa6a1974248e56bbdfb2845d985093ce7">ROTATE</a></div><div class="ttdeci">#define ROTATE(x, s, n)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00171">helpers.h:171</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a6b83038822d1ae7ab619b684ed3b7fc0"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a></div><div class="ttdeci">#define TENSOR3D_DECLARATION(name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00852">helpers.h:852</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1a367830ae09bf6138df822888ec1d71"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">arm_compute::test::validation::w</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; w</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00156">DFT.cpp:156</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a27e22718d532b621774aca14ce8b1101"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a27e22718d532b621774aca14ce8b1101">arm_compute::test::validation::reference::select</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; select(const SimpleTensor&lt; uint8_t &gt; &amp;c, const SimpleTensor&lt; T &gt; &amp;x, const SimpleTensor&lt; T &gt; &amp;y)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_select_8cpp_source.xhtml#l00038">Select.cpp:38</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_aa8d95ba04fc73845abc6045952cae5be"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a></div><div class="ttdeci">#define CONVERT(x, type)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00767">helpers.h:767</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_abcadce1c5f0c9f446d1a72cac2421121"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#abcadce1c5f0c9f446d1a72cac2421121">REVERSE</a></div><div class="ttdeci">#define REVERSE(x, s)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_ac22ba2ef169d8979d68d9553ae34d284"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ac22ba2ef169d8979d68d9553ae34d284">VEC_OFFS</a></div><div class="ttdeci">#define VEC_OFFS(dt, s)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00200">helpers.h:200</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="dir_a50b9933354d81525095b5e7ad336497.xhtml">common</a></li><li class="navelem"><a class="el" href="pad__layer_8cl.xhtml">pad_layer.cl</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:16 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
