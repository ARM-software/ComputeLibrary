<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLFFT1D Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_f_f_t1_d.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLFFT1D Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to execute one dimensional FFT.  
 <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_f_f_t1_d_8h_source.xhtml">CLFFT1D.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLFFT1D:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_f_f_t1_d__coll__graph.svg" width="92" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aadecfaf568c9c53a105b591887b423f4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#aadecfaf568c9c53a105b591887b423f4">CLFFT1D</a> (std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt; memory_manager=nullptr)</td></tr>
<tr class="memdesc:aadecfaf568c9c53a105b591887b423f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#aadecfaf568c9c53a105b591887b423f4">More...</a><br /></td></tr>
<tr class="separator:aadecfaf568c9c53a105b591887b423f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac66b2ae443dbeccda90e3b34fdb60281"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#ac66b2ae443dbeccda90e3b34fdb60281">CLFFT1D</a> (const <a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> &amp;)=delete</td></tr>
<tr class="memdesc:ac66b2ae443dbeccda90e3b34fdb60281"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#ac66b2ae443dbeccda90e3b34fdb60281">More...</a><br /></td></tr>
<tr class="separator:ac66b2ae443dbeccda90e3b34fdb60281"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67cf01a9dec2ae30ca4dde66c516020a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#a67cf01a9dec2ae30ca4dde66c516020a">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> &amp;)=delete</td></tr>
<tr class="memdesc:a67cf01a9dec2ae30ca4dde66c516020a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#a67cf01a9dec2ae30ca4dde66c516020a">More...</a><br /></td></tr>
<tr class="separator:a67cf01a9dec2ae30ca4dde66c516020a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6aed961d307d9ce2e70cecf1c8b679c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#ab6aed961d307d9ce2e70cecf1c8b679c">CLFFT1D</a> (<a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ab6aed961d307d9ce2e70cecf1c8b679c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#ab6aed961d307d9ce2e70cecf1c8b679c">More...</a><br /></td></tr>
<tr class="separator:ab6aed961d307d9ce2e70cecf1c8b679c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaefdc7897bbee7a2ebbd2b932568dad2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#aaefdc7897bbee7a2ebbd2b932568dad2">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:aaefdc7897bbee7a2ebbd2b932568dad2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#aaefdc7897bbee7a2ebbd2b932568dad2">More...</a><br /></td></tr>
<tr class="separator:aaefdc7897bbee7a2ebbd2b932568dad2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fe543ed38fcea5d1de52fa42d276efc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#a2fe543ed38fcea5d1de52fa42d276efc">~CLFFT1D</a> ()</td></tr>
<tr class="memdesc:a2fe543ed38fcea5d1de52fa42d276efc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#a2fe543ed38fcea5d1de52fa42d276efc">More...</a><br /></td></tr>
<tr class="separator:a2fe543ed38fcea5d1de52fa42d276efc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaeaf3ee7ea1cf0514bbc741ccc89d732"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#aaeaf3ee7ea1cf0514bbc741ccc89d732">configure</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output, const <a class="el" href="structarm__compute_1_1_f_f_t1_d_info.xhtml">FFT1DInfo</a> &amp;config)</td></tr>
<tr class="memdesc:aaeaf3ee7ea1cf0514bbc741ccc89d732"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the function's source, destinations and border mode.  <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#aaeaf3ee7ea1cf0514bbc741ccc89d732">More...</a><br /></td></tr>
<tr class="separator:aaeaf3ee7ea1cf0514bbc741ccc89d732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a576116db2142d895eb5b54093554c9e5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#a576116db2142d895eb5b54093554c9e5">configure</a> (const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;compile_context, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output, const <a class="el" href="structarm__compute_1_1_f_f_t1_d_info.xhtml">FFT1DInfo</a> &amp;config)</td></tr>
<tr class="memdesc:a576116db2142d895eb5b54093554c9e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the function's source, destinations and border mode.  <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#a576116db2142d895eb5b54093554c9e5">More...</a><br /></td></tr>
<tr class="separator:a576116db2142d895eb5b54093554c9e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717410afd0be936c6213a63c8005fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a> () override</td></tr>
<tr class="memdesc:ad1717410afd0be936c6213a63c8005fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#ad1717410afd0be936c6213a63c8005fb">More...</a><br /></td></tr>
<tr class="separator:ad1717410afd0be936c6213a63c8005fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a1df242336d170d76e2d39ecd8c5a43c8"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#a1df242336d170d76e2d39ecd8c5a43c8">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, const <a class="el" href="structarm__compute_1_1_f_f_t1_d_info.xhtml">FFT1DInfo</a> &amp;config)</td></tr>
<tr class="memdesc:a1df242336d170d76e2d39ecd8c5a43c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a>.  <a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#a1df242336d170d76e2d39ecd8c5a43c8">More...</a><br /></td></tr>
<tr class="separator:a1df242336d170d76e2d39ecd8c5a43c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to execute one dimensional FFT. </p>
<p>This function calls the following OpenCL kernels:</p>
<ol type="1">
<li><a class="el" href="classarm__compute_1_1_c_l_f_f_t_digit_reverse_kernel.xhtml">CLFFTDigitReverseKernel</a> Performs digit reverse.</li>
<li><a class="el" href="classarm__compute_1_1_c_l_f_f_t_radix_stage_kernel.xhtml">CLFFTRadixStageKernel</a> A list of FFT kernels depending on the radix decomposition.</li>
<li><a class="el" href="classarm__compute_1_1_c_l_f_f_t_scale_kernel.xhtml">CLFFTScaleKernel</a> Performs output scaling in case of in inverse FFT. </li>
</ol>

<p class="definition">Definition at line <a class="el" href="_c_l_f_f_t1_d_8h_source.xhtml#l00046">46</a> of file <a class="el" href="_c_l_f_f_t1_d_8h_source.xhtml">CLFFT1D.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aadecfaf568c9c53a105b591887b423f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadecfaf568c9c53a105b591887b423f4">&#9670;&nbsp;</a></span>CLFFT1D() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt;&#160;</td>
          <td class="paramname"><em>memory_manager</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml">CLFFT1D.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    : _memory_group(std::move(memory_manager)),</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      _digit_reverse_kernel(std::make_unique&lt;CLFFTDigitReverseKernel&gt;()),</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      _fft_kernels(),</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      _scale_kernel(std::make_unique&lt;CLFFTScaleKernel&gt;()),</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      _digit_reversed_input(),</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      _digit_reverse_indices(),</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      _num_ffts(0),</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      _run_scale(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac66b2ae443dbeccda90e3b34fdb60281"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac66b2ae443dbeccda90e3b34fdb60281">&#9670;&nbsp;</a></span>CLFFT1D() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="ab6aed961d307d9ce2e70cecf1c8b679c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6aed961d307d9ce2e70cecf1c8b679c">&#9670;&nbsp;</a></span>CLFFT1D() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move constructor. </p>

</div>
</div>
<a id="a2fe543ed38fcea5d1de52fa42d276efc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fe543ed38fcea5d1de52fa42d276efc">&#9670;&nbsp;</a></span>~CLFFT1D()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a576116db2142d895eb5b54093554c9e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a576116db2142d895eb5b54093554c9e5">&#9670;&nbsp;</a></span>configure() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;&#160;</td>
          <td class="paramname"><em>compile_context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_f_f_t1_d_info.xhtml">FFT1DInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the function's source, destinations and border mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">compile_context</td><td>The compile context to be used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor. Data types supported: F16/F32. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Destination tensor. Data types and data layouts supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">config</td><td>FFT related configuration </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml">CLFFT1D.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#a1df242336d170d76e2d39ecd8c5a43c8">CLFFT1D::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), output-&gt;info(), config));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, config);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">// Decompose size to radix factors</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>         supported_radix   = <a class="code" href="classarm__compute_1_1_c_l_f_f_t_radix_stage_kernel.xhtml#a058f31a004475bd61913f02fbf251ddb">CLFFTRadixStageKernel::supported_radix</a>();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>                 = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;tensor_shape()[config.axis];</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>         decomposed_vector = <a class="code" href="namespacearm__compute_1_1helpers_1_1fft.xhtml#a359fcf05844c0a2f1aed6e4386a86aee">arm_compute::helpers::fft::decompose_stages</a>(<a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>, supported_radix);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(decomposed_vector.empty());</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="comment">// Flags</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    _run_scale        = config.direction == <a class="code" href="namespacearm__compute.xhtml#a86a0c8e195c900a895c249662cfaa564a9f87f02f2da8f99c571b2a1c2a96132b">FFTDirection::Inverse</a>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_c2r = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;num_channels() == 2 &amp;&amp; output-&gt;info()-&gt;num_channels() == 1;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment">// Configure digit reverse</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    FFTDigitReverseKernelInfo digit_reverse_config;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    digit_reverse_config.axis      = config.axis;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    digit_reverse_config.conjugate = config.direction == <a class="code" href="namespacearm__compute.xhtml#a86a0c8e195c900a895c249662cfaa564a9f87f02f2da8f99c571b2a1c2a96132b">FFTDirection::Inverse</a>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    TensorInfo digit_reverse_indices_info(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;tensor_shape()[config.axis]), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    _digit_reverse_indices.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(digit_reverse_indices_info);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_digit_reversed_input);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    _digit_reverse_kernel-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, &amp;_digit_reversed_input, &amp;_digit_reverse_indices,</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                     digit_reverse_config);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Create and configure FFT kernels</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Nx = 1;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    _num_ffts       = decomposed_vector.size();</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    _fft_kernels.reserve(_num_ffts);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; _num_ffts; ++i)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> radix_for_stage = decomposed_vector.at(i);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        FFTRadixStageKernelInfo fft_kernel_info;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        fft_kernel_info.axis           = config.axis;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        fft_kernel_info.radix          = radix_for_stage;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        fft_kernel_info.Nx             = Nx;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        fft_kernel_info.is_first_stage = (i == 0);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        _fft_kernels.emplace_back(std::make_unique&lt;CLFFTRadixStageKernel&gt;());</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        _fft_kernels.back()-&gt;configure(compile_context, &amp;_digit_reversed_input,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                       ((i == (_num_ffts - 1)) &amp;&amp; !is_c2r) ? output : <span class="keyword">nullptr</span>, fft_kernel_info);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        Nx *= radix_for_stage;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="comment">// Configure scale kernel</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">if</span> (_run_scale)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        FFTScaleKernelInfo scale_config;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        scale_config.scale     = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        scale_config.conjugate = config.direction == <a class="code" href="namespacearm__compute.xhtml#a86a0c8e195c900a895c249662cfaa564a9f87f02f2da8f99c571b2a1c2a96132b">FFTDirection::Inverse</a>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        is_c2r ? _scale_kernel-&gt;configure(compile_context, &amp;_digit_reversed_input, output, scale_config)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;               : _scale_kernel-&gt;configure(output, <span class="keyword">nullptr</span>, scale_config);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="comment">// Allocate tensors</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    _digit_reversed_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    _digit_reverse_indices.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// Init digit reverse indices</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> digit_reverse_cpu = <a class="code" href="namespacearm__compute_1_1helpers_1_1fft.xhtml#acf1aaf9a5a9f908f6df4f37ad76f8fcd">arm_compute::helpers::fft::digit_reverse_indices</a>(<a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>, decomposed_vector);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    _digit_reverse_indices.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue(), <span class="keyword">true</span>);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    std::copy_n(digit_reverse_cpu.data(), <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>, <span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *<span class="keyword">&gt;</span>(_digit_reverse_indices.<a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a>()));</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    _digit_reverse_indices.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00131">CLTensorAllocator::allocate()</a>, <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor::allocator()</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00035">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00043">FFTDigitReverseKernelInfo::axis</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00044">FFT1DInfo::axis</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00050">FFTRadixStageKernelInfo::axis</a>, <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00052">ICLTensor::buffer()</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00037">FFTScaleKernelInfo::conjugate</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00044">FFTDigitReverseKernelInfo::conjugate</a>, <a class="el" href="src_2core_2utils_2helpers_2fft_8cpp_source.xhtml#l00034">arm_compute::helpers::fft::decompose_stages()</a>, <a class="el" href="src_2core_2utils_2helpers_2fft_8cpp_source.xhtml#l00079">arm_compute::helpers::fft::digit_reverse_indices()</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00045">FFT1DInfo::direction</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator::init()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="namespacearm__compute.xhtml#a86a0c8e195c900a895c249662cfaa564a9f87f02f2da8f99c571b2a1c2a96132b">arm_compute::Inverse</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00053">FFTRadixStageKernelInfo::is_first_stage</a>, <a class="el" href="_memory_group_8h_source.xhtml#l00076">MemoryGroup::manage()</a>, <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00066">CLTensor::map()</a>, <a class="el" href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00105">N</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">ITensorInfo::num_channels()</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00052">FFTRadixStageKernelInfo::Nx</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00051">FFTRadixStageKernelInfo::radix</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00036">FFTScaleKernelInfo::scale</a>, <a class="el" href="_c_l_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00158">CLFFTRadixStageKernel::supported_radix()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">arm_compute::U32</a>, <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00071">CLTensor::unmap()</a>, and <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00127">CLFFT1D::validate()</a>.</p>

</div>
</div>
<a id="aaeaf3ee7ea1cf0514bbc741ccc89d732"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaeaf3ee7ea1cf0514bbc741ccc89d732">&#9670;&nbsp;</a></span>configure() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_f_f_t1_d_info.xhtml">FFT1DInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the function's source, destinations and border mode. </p>
<p>Valid data layouts:</p><ul>
<li>All</li>
</ul>
<p>Valid data type configurations: </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadLeft">src </th><th class="markdownTableHeadLeft">dst  </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">F32 </td><td class="markdownTableBodyLeft">F32  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">F16 </td><td class="markdownTableBodyLeft">F16  </td></tr>
</table>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor. Data types supported: F16/F32. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Destination tensor. Data types and data layouts supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">config</td><td>FFT related configuration </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml">CLFFT1D.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#aaeaf3ee7ea1cf0514bbc741ccc89d732">configure</a>(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().get_compile_context(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, config);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00041">CLKernelLibrary::get()</a>, and <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_f_f_t2_d_8cpp_source.xhtml#l00052">CLFFT2D::configure()</a>.</p>

</div>
</div>
<a id="aaefdc7897bbee7a2ebbd2b932568dad2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaefdc7897bbee7a2ebbd2b932568dad2">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move assignment operator. </p>

</div>
</div>
<a id="a67cf01a9dec2ae30ca4dde66c516020a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67cf01a9dec2ae30ca4dde66c516020a">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="ad1717410afd0be936c6213a63c8005fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1717410afd0be936c6213a63c8005fb">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<p>For CPU kernels:</p><ul>
<li>Multi-threading is used for the kernels which are parallelisable.</li>
<li>By default std::thread::hardware_concurrency() threads are used.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler::set_num_threads()</a> can be used to manually set the number of threads</dd></dl>
<p>For OpenCL kernels:</p><ul>
<li>All the kernels are enqueued on the queue associated with <a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" title="Provides global access to a CL context and command queue.">CLScheduler</a>.</li>
<li>The queue is then flushed.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>The function will not block until the kernels are executed. It is the user's responsibility to wait. </dd>
<dd>
Will call <a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26" title="Prepare the function for executing.">prepare()</a> on first run if hasn't been done </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_function.xhtml#a18954417d3124a8095783ea13dc6d00b">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00152">152</a> of file <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml">CLFFT1D.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    MemoryGroupResourceScope scope_mg(_memory_group);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="comment">// Run digit reverse</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(*_digit_reverse_kernel, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="comment">// Run radix kernels</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; _num_ffts; ++i)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(*_fft_kernels[i], i == (_num_ffts - 1) &amp;&amp; !_run_scale);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// Run output scaling</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">if</span> (_run_scale)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(*_scale_kernel, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00232">CLScheduler::enqueue()</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_f_f_t2_d_8cpp_source.xhtml#l00106">CLFFT2D::run()</a>.</p>

</div>
</div>
<a id="a1df242336d170d76e2d39ecd8c5a43c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1df242336d170d76e2d39ecd8c5a43c8">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_f_f_t1_d_info.xhtml">FFT1DInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor info. Data types supported: F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output</td><td>Destination tensor info. Data types and data layouts supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">config</td><td>FFT related configuration</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00127">127</a> of file <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml">CLFFT1D.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;{</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aef783de4ec01874dbec6054a5868aea2">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;num_channels() != 1 &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;num_channels() != 2);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(std::set&lt;unsigned int&gt;({0, 1}).count(config.axis) == 0);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">// Check if FFT is decomposable</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>         supported_radix   = <a class="code" href="classarm__compute_1_1_c_l_f_f_t_radix_stage_kernel.xhtml#a058f31a004475bd61913f02fbf251ddb">CLFFTRadixStageKernel::supported_radix</a>();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>                 = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;tensor_shape()[config.axis];</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>         decomposed_vector = <a class="code" href="namespacearm__compute_1_1helpers_1_1fft.xhtml#a359fcf05844c0a2f1aed6e4386a86aee">arm_compute::helpers::fft::decompose_stages</a>(<a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>, supported_radix);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(decomposed_vector.empty());</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="comment">// Checks performed when output is configured</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">if</span> ((output != <span class="keyword">nullptr</span>) &amp;&amp; (output-&gt;total_size() != 0))</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(output-&gt;num_channels() == 1 &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;num_channels() == 1);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(output-&gt;num_channels() != 1 &amp;&amp; output-&gt;num_channels() != 2);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00298">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00838">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00574">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00044">FFT1DInfo::axis</a>, <a class="el" href="src_2core_2utils_2helpers_2fft_8cpp_source.xhtml#l00034">arm_compute::helpers::fft::decompose_stages()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::F16</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00105">N</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">ITensorInfo::num_channels()</a>, <a class="el" href="_c_l_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00158">CLFFTRadixStageKernel::supported_radix()</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo::total_size()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00057">CLFFT1D::configure()</a>, and <a class="el" href="_c_l_f_f_t2_d_8cpp_source.xhtml#l00076">CLFFT2D::validate()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/functions/<a class="el" href="_c_l_f_f_t1_d_8h_source.xhtml">CLFFT1D.h</a></li>
<li>src/runtime/CL/functions/<a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml">CLFFT1D.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a1ffeb3b5abb3d61f62b58a391816201c"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">arm_compute::CLTensor::unmap</a></div><div class="ttdeci">void unmap()</div><div class="ttdoc">Enqueue an unmap operation of the allocated and mapped buffer.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00071">CLTensor.cpp:71</a></div></div>
<div class="ttc" id="a_cpu_gemm_assembly_dispatch_8cpp_xhtml_ae8b170dcb376fe60270f4675f84e4477"><div class="ttname"><a href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a></div><div class="ttdeci">unsigned int N</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00105">CpuGemmAssemblyDispatch.cpp:105</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_memory_group_xhtml_a6fc0a49304c152c20a0f6df0634fb3cd"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">arm_compute::MemoryGroup::manage</a></div><div class="ttdeci">void manage(IMemoryManageable *obj) override</div><div class="ttdoc">Sets a object to be managed by the given memory group.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00076">MemoryGroup.h:76</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_ae1a643e517f50bf0392fb6516dd7cf67"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">arm_compute::CLScheduler::enqueue</a></div><div class="ttdeci">void enqueue(ICLKernel &amp;kernel, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00232">CLScheduler.cpp:232</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a86a0c8e195c900a895c249662cfaa564a9f87f02f2da8f99c571b2a1c2a96132b"><div class="ttname"><a href="namespacearm__compute.xhtml#a86a0c8e195c900a895c249662cfaa564a9f87f02f2da8f99c571b2a1c2a96132b">arm_compute::FFTDirection::Inverse</a></div><div class="ttdeci">@ Inverse</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_allocator_xhtml_af36143939a43fa124312e395975091ed"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">arm_compute::ITensorAllocator::init</a></div><div class="ttdeci">void init(const TensorInfo &amp;input, size_t alignment=0)</div><div class="ttdoc">Initialize a tensor based on the passed TensorInfo.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator.cpp:33</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a27e4638546c88b8916f967e6e54480a9"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00574">Validate.h:574</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_f_f_t_radix_stage_kernel_xhtml_a058f31a004475bd61913f02fbf251ddb"><div class="ttname"><a href="classarm__compute_1_1_c_l_f_f_t_radix_stage_kernel.xhtml#a058f31a004475bd61913f02fbf251ddb">arm_compute::CLFFTRadixStageKernel::supported_radix</a></div><div class="ttdeci">static std::set&lt; unsigned int &gt; supported_radix()</div><div class="ttdoc">Returns the radix that are support by the FFT kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00158">CLFFTRadixStageKernel.cpp:158</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a14c53d2d17be6fa8a2c9861527c7b002"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">arm_compute::CLTensor::map</a></div><div class="ttdeci">void map(bool blocking=true)</div><div class="ttdoc">Enqueue a map operation of the allocated buffer.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00066">CLTensor.cpp:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00041">CLKernelLibrary.cpp:41</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">Validate.h:677</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_tensor_xhtml_a24954cca5108a24706441fd99a7fb04c"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">arm_compute::ICLTensor::buffer</a></div><div class="ttdeci">uint8_t * buffer() const override</div><div class="ttdoc">Interface to be implemented by the child class to return a pointer to CPU memory.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8cpp_source.xhtml#l00052">ICLTensor.cpp:52</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1helpers_1_1fft_xhtml_a359fcf05844c0a2f1aed6e4386a86aee"><div class="ttname"><a href="namespacearm__compute_1_1helpers_1_1fft.xhtml#a359fcf05844c0a2f1aed6e4386a86aee">arm_compute::helpers::fft::decompose_stages</a></div><div class="ttdeci">std::vector&lt; unsigned int &gt; decompose_stages(unsigned int N, const std::set&lt; unsigned int &gt; &amp;supported_factors)</div><div class="ttdoc">Decompose a given 1D input size using the provided supported factors.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2utils_2helpers_2fft_8cpp_source.xhtml#l00034">fft.cpp:34</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">arm_compute::DataType::U32</a></div><div class="ttdeci">@ U32</div><div class="ttdoc">unsigned 32-bit number</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aef783de4ec01874dbec6054a5868aea2"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aef783de4ec01874dbec6054a5868aea2">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN(t,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00838">Validate.h:838</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00298">Error.h:298</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::CLTensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of OpenCL memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00131">CLTensorAllocator.cpp:131</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor's allocator.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1helpers_1_1fft_xhtml_acf1aaf9a5a9f908f6df4f37ad76f8fcd"><div class="ttname"><a href="namespacearm__compute_1_1helpers_1_1fft.xhtml#acf1aaf9a5a9f908f6df4f37ad76f8fcd">arm_compute::helpers::fft::digit_reverse_indices</a></div><div class="ttdeci">std::vector&lt; unsigned int &gt; digit_reverse_indices(unsigned int N, const std::vector&lt; unsigned int &gt; &amp;fft_stages)</div><div class="ttdoc">Calculate digit reverse index vector given fft size and the decomposed stages.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2utils_2helpers_2fft_8cpp_source.xhtml#l00079">fft.cpp:79</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00035">Log.h:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_f_f_t1_d_xhtml_a1df242336d170d76e2d39ecd8c5a43c8"><div class="ttname"><a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#a1df242336d170d76e2d39ecd8c5a43c8">arm_compute::CLFFT1D::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const FFT1DInfo &amp;config)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLFFT1D.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00127">CLFFT1D.cpp:127</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_f_f_t1_d_xhtml_aaeaf3ee7ea1cf0514bbc741ccc89d732"><div class="ttname"><a href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml#aaeaf3ee7ea1cf0514bbc741ccc89d732">arm_compute::CLFFT1D::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, ICLTensor *output, const FFT1DInfo &amp;config)</div><div class="ttdoc">Initialise the function's source, destinations and border mode.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00052">CLFFT1D.cpp:52</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:29 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
