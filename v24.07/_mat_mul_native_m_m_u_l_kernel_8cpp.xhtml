<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/MatMulNativeMMULKernel.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_mat_mul_native_m_m_u_l_kernel_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">MatMulNativeMMULKernel.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_cl_mat_mul_native_m_m_u_l_kernel_8h_source.xhtml">src/gpu/cl/kernels/ClMatMulNativeMMULKernel.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/LargeMatMulMMULDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/SmallMatMulMMULDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/MatMulKernelFixture.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_permute_8h_source.xhtml">tests/validation/reference/Permute.h</a>&quot;</code><br />
<code>#include &lt;tuple&gt;</code><br />
</div>
<p><a href="_mat_mul_native_m_m_u_l_kernel_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2024 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a4bbf75d7b05814ec52eab3005a1d16cd"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a4bbf75d7b05814ec52eab3005a1d16cd"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4bbf75d7b05814ec52eab3005a1d16cd">CLMatMulNativeMMULKernelFixture</a> = MatMulKernelValidationFixture&lt; T, ClMatMulNativeMMULKernel, true &gt;</td></tr>
<tr class="separator:a4bbf75d7b05814ec52eab3005a1d16cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a035ddce407c8f67c8c6f99afbda2a9d3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a035ddce407c8f67c8c6f99afbda2a9d3">TEST_CASE</a> (SupportedBlockSizes, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:a035ddce407c8f67c8c6f99afbda2a9d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2bd8b585f31e989354015d10a4a06dd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af2bd8b585f31e989354015d10a4a06dd">TEST_CASE</a> (ValidateInputShapes, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:af2bd8b585f31e989354015d10a4a06dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad61301ebbf84f81d3c2164f0f51838cc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad61301ebbf84f81d3c2164f0f51838cc">TEST_CASE</a> (ValidateDataTypes, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:ad61301ebbf84f81d3c2164f0f51838cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accdc9a1550087cc9656be9d602109d11"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#accdc9a1550087cc9656be9d602109d11">combine</a> (combine(combine(combine(combine(combine(combine(datasets::TinyMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { false, true })), framework::dataset::make(&quot;TransposeB&quot;, { false, true })), m0_values_precommit), n0_values_precommit), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)))</td></tr>
<tr class="separator:accdc9a1550087cc9656be9d602109d11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e24367a39f0f2b80b046755a21a188e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4e24367a39f0f2b80b046755a21a188e">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLMatMulNativeMMULKernelFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(datasets::SmallMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { false, true })), framework::dataset::make(&quot;TransposeB&quot;, { false, true })), m0_values_precommit), n0_values_precommit), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)))</td></tr>
<tr class="separator:a4e24367a39f0f2b80b046755a21a188e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ec13179b5a85cef425aad7215ffa5b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8ec13179b5a85cef425aad7215ffa5b8">FIXTURE_DATA_TEST_CASE</a> (RunWithBias, CLMatMulKernelBiasFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(datasets::SmallMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { false, true })), framework::dataset::make(&quot;TransposeB&quot;, { false, true })), m0_values_precommit), n0_values_precommit), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)))</td></tr>
<tr class="separator:a8ec13179b5a85cef425aad7215ffa5b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7f24d21039ed03b38415b545472feb0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af7f24d21039ed03b38415b545472feb0">FIXTURE_DATA_TEST_CASE</a> (RunLargeNoTranspose, CLMatMulNativeMMULKernelFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { false })), framework::dataset::make(&quot;TransposeB&quot;, { false })), m0_values_nightly_lhs_nt), n0_values_nightly_rhs_nt), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)))</td></tr>
<tr class="separator:af7f24d21039ed03b38415b545472feb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28eb1357db426a5841786ba35ffd3cba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a28eb1357db426a5841786ba35ffd3cba">FIXTURE_DATA_TEST_CASE</a> (RunLargeRhsTranspose, CLMatMulNativeMMULKernelFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { false })), framework::dataset::make(&quot;TransposeB&quot;, { true })), m0_values_nightly_lhs_nt), n0_values_nightly_rhs_t), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)))</td></tr>
<tr class="separator:a28eb1357db426a5841786ba35ffd3cba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa218566c2646e9b334e953bf17c0c6f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaa218566c2646e9b334e953bf17c0c6f">FIXTURE_DATA_TEST_CASE</a> (RunLargeLhsTransposed, CLMatMulNativeMMULKernelFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { true })), framework::dataset::make(&quot;TransposeB&quot;, { false })), m0_values_nightly_lhs_t), n0_values_nightly_rhs_nt), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)))</td></tr>
<tr class="separator:aaa218566c2646e9b334e953bf17c0c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afccc18173eefcb6738c18af233131431"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afccc18173eefcb6738c18af233131431">FIXTURE_DATA_TEST_CASE</a> (RunLargeLhsTransposedRhsTransposed, CLMatMulNativeMMULKernelFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { true })), framework::dataset::make(&quot;TransposeB&quot;, { true })), m0_values_nightly_lhs_t), n0_values_nightly_rhs_t), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)))</td></tr>
<tr class="separator:afccc18173eefcb6738c18af233131431"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4b47650fedb33d8679d16af9048c820"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad4b47650fedb33d8679d16af9048c820">FIXTURE_DATA_TEST_CASE</a> (RunHighDimensional, CLMatMulNativeMMULKernelFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(datasets::HighDimensionalMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { false, true })), framework::dataset::make(&quot;TransposeB&quot;, { false, true })), framework::dataset::make(&quot;M0&quot;, { 2 })), framework::dataset::make(&quot;N0&quot;, { 2 })), framework::dataset::make(&quot;K0&quot;, { 1 })), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)))</td></tr>
<tr class="separator:ad4b47650fedb33d8679d16af9048c820"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb388ac411448c32b21d582fea9e22e5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afb388ac411448c32b21d582fea9e22e5">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { false, true })), framework::dataset::make(&quot;TransposeB&quot;, { false, true })), m0_values_precommit), n0_values_precommit), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)))</td></tr>
<tr class="separator:afb388ac411448c32b21d582fea9e22e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f74b84d6729264d5b8f54d72ef0ccf4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2f74b84d6729264d5b8f54d72ef0ccf4">FIXTURE_DATA_TEST_CASE</a> (RunLargeNoTranspose, CLMatMulNativeMMULKernelFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { false })), framework::dataset::make(&quot;TransposeB&quot;, { false })), m0_values_nightly_lhs_nt), n0_values_nightly_rhs_nt), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)))</td></tr>
<tr class="separator:a2f74b84d6729264d5b8f54d72ef0ccf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab387f401966d2c4a40dc48cc8be5d106"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab387f401966d2c4a40dc48cc8be5d106">FIXTURE_DATA_TEST_CASE</a> (RunLargeRhsTranspose, CLMatMulNativeMMULKernelFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { false })), framework::dataset::make(&quot;TransposeB&quot;, { true })), m0_values_nightly_lhs_nt), n0_values_nightly_rhs_t), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)))</td></tr>
<tr class="separator:ab387f401966d2c4a40dc48cc8be5d106"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1959e0b0542e5246882740194f2c038a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1959e0b0542e5246882740194f2c038a">FIXTURE_DATA_TEST_CASE</a> (RunLargeLhsTransposed, CLMatMulNativeMMULKernelFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { true })), framework::dataset::make(&quot;TransposeB&quot;, { false })), m0_values_nightly_lhs_t), n0_values_nightly_rhs_nt), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)))</td></tr>
<tr class="separator:a1959e0b0542e5246882740194f2c038a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af909ed120dd67e8cfb7dcb46fa4baaf7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af909ed120dd67e8cfb7dcb46fa4baaf7">FIXTURE_DATA_TEST_CASE</a> (RunLargeLhsTransposedRhsTransposed, CLMatMulNativeMMULKernelFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeMatMulMMULDataset(), framework::dataset::make(&quot;TransposeA&quot;, { true })), framework::dataset::make(&quot;TransposeB&quot;, { true })), m0_values_nightly_lhs_t), n0_values_nightly_rhs_t), k0_value), framework::dataset::make(&quot;ExportRhsToCLImage&quot;, { false })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)))</td></tr>
<tr class="separator:af909ed120dd67e8cfb7dcb46fa4baaf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a6195d84f115c5bfbe2d35713f1387c9c"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6195d84f115c5bfbe2d35713f1387c9c">k0_value</a> = framework::dataset::make(&quot;K0&quot;, { 1 })</td></tr>
<tr class="memdesc:a6195d84f115c5bfbe2d35713f1387c9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">K0 value &ndash; Fixed to 1.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6195d84f115c5bfbe2d35713f1387c9c">More...</a><br /></td></tr>
<tr class="separator:a6195d84f115c5bfbe2d35713f1387c9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82500ad6cd7e9b86d83a799d15d900bc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a82500ad6cd7e9b86d83a799d15d900bc">CLMatMulNativeMMULKernelFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a82500ad6cd7e9b86d83a799d15d900bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9429715be5ef076bea4dec984a65af07"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9429715be5ef076bea4dec984a65af07">CLMatMulNativeMMULKernelFixture&lt; half &gt;</a></td></tr>
<tr class="separator:a9429715be5ef076bea4dec984a65af07"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_mat_mul_native_m_m_u_l_kernel_8cpp.xhtml">MatMulNativeMMULKernel.cpp</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:28 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
