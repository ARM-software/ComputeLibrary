<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/ConvolutionLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_2_convolution_layer_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ConvolutionLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_shape_calculator_8h_source.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_g_e_m_m_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLGEMMConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/LargeConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/SmallConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/TinyConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/ConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_convolution_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2024 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a5fd525f7415ba98516cfe008a2c4cb01"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5fd525f7415ba98516cfe008a2c4cb01"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5fd525f7415ba98516cfe008a2c4cb01">CLGEMMConvolutionLayerMixedDataLayoutFixture</a> = ConvolutionValidationFixture&lt; CLTensor, CLAccessor, CLGEMMConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:a5fd525f7415ba98516cfe008a2c4cb01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ff30e8cc8007cf191466a6af2b36520"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a1ff30e8cc8007cf191466a6af2b36520"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ff30e8cc8007cf191466a6af2b36520">CLConvolutionValidationWithPaddingFixture</a> = ConvolutionValidationWithPaddingFixture&lt; CLTensor, CLAccessor, CLGEMMConvolutionLayer, T &gt;</td></tr>
<tr class="separator:a1ff30e8cc8007cf191466a6af2b36520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6376667f28ac35124e23c3565ae890de"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a6376667f28ac35124e23c3565ae890de"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6376667f28ac35124e23c3565ae890de">CLGEMMConvolutionLayerQuantizedMixedDataLayoutFixture</a> = ConvolutionValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLGEMMConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:a6376667f28ac35124e23c3565ae890de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c57d7b691ce9bdaf3585fd21a98b6e2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9c57d7b691ce9bdaf3585fd21a98b6e2"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9c57d7b691ce9bdaf3585fd21a98b6e2">CLGEMMConvolutionLayerQuantizedPerChannelFixture</a> = ConvolutionValidationQuantizedPerChannelFixture&lt; CLTensor, CLAccessor, CLGEMMConvolutionLayer, T, int8_t &gt;</td></tr>
<tr class="separator:a9c57d7b691ce9bdaf3585fd21a98b6e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5ee098373bd6cc7ecf5743a4acb762d9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5ee098373bd6cc7ecf5743a4acb762d9">DATA_TEST_CASE</a> (ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 31U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 32U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::QASYMM8_SIGNED), }), make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 31U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 32U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::QASYMM8_SIGNED), })), make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::QASYMM8_SIGNED), })), make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2), })), make(&quot;GpuTarget&quot;, { GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST, })), make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 1U), Size2D(2U, 1U), })), make(&quot;EnableFastMath&quot;, { false, false, false, false, false, false, true, true, true })), make(&quot;Expected&quot;,{ ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, })), input_info, weights_info, output_info, conv_info, gpu_target, dilation, enable_fast_math, expected)</td></tr>
<tr class="separator:a5ee098373bd6cc7ecf5743a4acb762d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04931647aa5098c3b54ee6d3650c5ef7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a04931647aa5098c3b54ee6d3650c5ef7">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLGEMMConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true })), make(&quot;DataType&quot;, DataType::F16)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a04931647aa5098c3b54ee6d3650c5ef7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa43e51ed66ff75473634b1bc5eb0c23f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa43e51ed66ff75473634b1bc5eb0c23f">combine</a> (combine(combine(combine(datasets::SmallConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true })), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:aa43e51ed66ff75473634b1bc5eb0c23f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78078099ac3e9f65cfa9fdad8595dc1d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a78078099ac3e9f65cfa9fdad8595dc1d">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, CLGEMMConvolutionLayerMixedDataLayoutFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U))), make(&quot;Bias&quot;, TensorShape(2U))), make(&quot;Output&quot;, TensorShape(11U, 25U, 2U))), make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0))), make(&quot;Dilation&quot;, Size2D(1, 1))), make(&quot;ReshapeWeights&quot;, { true })), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a78078099ac3e9f65cfa9fdad8595dc1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9e48548e73a83a8d7d176f80436f920"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa9e48548e73a83a8d7d176f80436f920">FIXTURE_DATA_TEST_CASE</a> (RunSmallWithPadding, CLConvolutionValidationWithPaddingFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerPrePaddingDataset(), make(&quot;ReshapeWeights&quot;, { true })), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })), make(&quot;PrePadLayer&quot;, { PaddingList({ { 1, 1 }, { 1, 1 } }) })))</td></tr>
<tr class="separator:aa9e48548e73a83a8d7d176f80436f920"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c2cdc8390eee2a335659e1c83e33123"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7c2cdc8390eee2a335659e1c83e33123">FIXTURE_DATA_TEST_CASE</a> (RunSmallCases, CLGEMMConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(SmallConvolutionLayerDatasetCases(), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, DataType::QASYMM8), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), IgnoredQuantizationInfo, NoActivation))</td></tr>
<tr class="separator:a7c2cdc8390eee2a335659e1c83e33123"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe6e6d1a862c02f2a65a1f89b8ea7565"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afe6e6d1a862c02f2a65a1f89b8ea7565">FIXTURE_DATA_TEST_CASE</a> (RunSmallCasesWithActivation, CLGEMMConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(SmallConvolutionLayerDatasetCases(), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, DataType::QASYMM8), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), QuantizationData, QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:afe6e6d1a862c02f2a65a1f89b8ea7565"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4eee38ccb60ebe691cecf24c97f7c0a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa4eee38ccb60ebe691cecf24c97f7c0a">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLGEMMConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(datasets::SmallConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, DataType::QASYMM8), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), IgnoredQuantizationInfo, NoActivation))</td></tr>
<tr class="separator:aa4eee38ccb60ebe691cecf24c97f7c0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15ae18b8aa2b2244ce48a8b9b769c280"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15ae18b8aa2b2244ce48a8b9b769c280">FIXTURE_DATA_TEST_CASE</a> (RunSmallWithActivation, CLGEMMConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(datasets::SmallConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, DataType::QASYMM8), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), QuantizationData, QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a15ae18b8aa2b2244ce48a8b9b769c280"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e112d53ff81b008a59a25d2c28e0f56"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0e112d53ff81b008a59a25d2c28e0f56">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, CLGEMMConvolutionLayerQuantizedMixedDataLayoutFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U)), make(&quot;Bias&quot;, TensorShape(2U)), make(&quot;Output&quot;, TensorShape(11U, 25U, 2U)), make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0)), make(&quot;Dilation&quot;, Size2D(1, 1)), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, DataType::QASYMM8), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), IgnoredQuantizationInfo, NoActivation))</td></tr>
<tr class="separator:a0e112d53ff81b008a59a25d2c28e0f56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79584d040d2e44fd00a7a0b08f70ed5d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a79584d040d2e44fd00a7a0b08f70ed5d">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayoutWithActivation, CLGEMMConvolutionLayerQuantizedMixedDataLayoutFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U)), make(&quot;Bias&quot;, TensorShape(2U)), make(&quot;Output&quot;, TensorShape(11U, 25U, 2U)), make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0)), make(&quot;Dilation&quot;, Size2D(1, 1)), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, DataType::QASYMM8), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), QuantizationData, QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a79584d040d2e44fd00a7a0b08f70ed5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3132100d549200a278d16ed7f5a25aa7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3132100d549200a278d16ed7f5a25aa7">combine</a> (datasets::SmallConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), IgnoredQuantizationInfo, NoActivation))</td></tr>
<tr class="separator:a3132100d549200a278d16ed7f5a25aa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb82aa81bfa36895d4dc4372beca4183"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeb82aa81bfa36895d4dc4372beca4183">FIXTURE_DATA_TEST_CASE</a> (RunSmallWithActivation, CLGEMMConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::ALL, combine(datasets::SmallConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), QuantizationData, QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:aeb82aa81bfa36895d4dc4372beca4183"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebcde373a178001d29ff612a56560ce9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aebcde373a178001d29ff612a56560ce9">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, CLGEMMConvolutionLayerQuantizedMixedDataLayoutFixture&lt; int8_t &gt;, framework::DatasetMode::ALL, combine(make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U)), make(&quot;Bias&quot;, TensorShape(2U)), make(&quot;Output&quot;, TensorShape(11U, 25U, 2U)), make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0)), make(&quot;Dilation&quot;, Size2D(1, 1)), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), IgnoredQuantizationInfo, NoActivation))</td></tr>
<tr class="separator:aebcde373a178001d29ff612a56560ce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96410e463cc16379e6b357e1a1f3d07c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96410e463cc16379e6b357e1a1f3d07c">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayoutWithActivation, CLGEMMConvolutionLayerQuantizedMixedDataLayoutFixture&lt; int8_t &gt;, framework::DatasetMode::ALL, combine(make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U)), make(&quot;Bias&quot;, TensorShape(2U)), make(&quot;Output&quot;, TensorShape(11U, 25U, 2U)), make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0)), make(&quot;Dilation&quot;, Size2D(1, 1)), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), QuantizationData, QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a96410e463cc16379e6b357e1a1f3d07c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7397f3486a69a100150803d4ec8674c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7397f3486a69a100150803d4ec8674c">FIXTURE_DATA_TEST_CASE</a> (RunSmallSigned, CLGEMMConvolutionLayerQuantizedPerChannelFixture&lt; int8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true })), make(&quot;DataType&quot;, { DataType::QASYMM8_SIGNED })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallPerChannelDataset), make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:ae7397f3486a69a100150803d4ec8674c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a907a146357b03bdb1a366e4ca9f8ffa4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a907a146357b03bdb1a366e4ca9f8ffa4">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLGEMMConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true })), make(&quot;DataType&quot;, { DataType::QASYMM8 })), make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallPerChannelDataset), make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a907a146357b03bdb1a366e4ca9f8ffa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3f706900a402642032e2a2fc42fbcd7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab3f706900a402642032e2a2fc42fbcd7">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLGEMMGroupedConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallGroupedConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true })), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:ab3f706900a402642032e2a2fc42fbcd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a759cea389ffd60867bbf98cdfba6eb09"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a759cea389ffd60867bbf98cdfba6eb09">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLGEMMGroupedConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeGroupedConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true })), make(&quot;DataType&quot;, DataType::F32)), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a759cea389ffd60867bbf98cdfba6eb09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff250685e34984746662d8acf59c5f2a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aff250685e34984746662d8acf59c5f2a">combine</a> (combine(combine(combine(datasets::SmallGroupedConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true })), make(&quot;DataType&quot;, DataType::F16)), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:aff250685e34984746662d8acf59c5f2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a269e333f3a661a39541f6410e44c6636"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a269e333f3a661a39541f6410e44c6636">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLGEMMGroupedConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeGroupedConvolutionLayerDataset(), make(&quot;ReshapeWeights&quot;, { true })), make(&quot;DataType&quot;, DataType::F16)), make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a269e333f3a661a39541f6410e44c6636"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a0f3dc00a54fa25a6e8d565b5c8b56ea0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0f3dc00a54fa25a6e8d565b5c8b56ea0">CLGEMMConvolutionLayerFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a0f3dc00a54fa25a6e8d565b5c8b56ea0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35ac9eed0f8401a833752c2c56c5041c"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a35ac9eed0f8401a833752c2c56c5041c">QuantizationData</a></td></tr>
<tr class="separator:a35ac9eed0f8401a833752c2c56c5041c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa20bc9ed907c3053200afcebdccef262"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa20bc9ed907c3053200afcebdccef262">NoActivation</a> = make(&quot;ActivationInfo&quot;, ActivationLayerInfo())</td></tr>
<tr class="separator:aa20bc9ed907c3053200afcebdccef262"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8daecbf05ae7da171e044a2c81f9ee98"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8daecbf05ae7da171e044a2c81f9ee98">IgnoredQuantizationInfo</a> = make(&quot;IgnoredQuantizationInfo&quot;, QuantizationInfo())</td></tr>
<tr class="separator:a8daecbf05ae7da171e044a2c81f9ee98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c4de6fef335f27d37630b6f16ed0f24"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0c4de6fef335f27d37630b6f16ed0f24">QuantizedActivationFunctionsSmallDataset</a></td></tr>
<tr class="separator:a0c4de6fef335f27d37630b6f16ed0f24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf6c2a11e8059a6390d045677b6e88a5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf6c2a11e8059a6390d045677b6e88a5">CLGEMMConvolutionLayerQuantizedFixture&lt; int8_t &gt;</a></td></tr>
<tr class="separator:acf6c2a11e8059a6390d045677b6e88a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adda980a6f6ff459cb9b0a1720cd8fbe8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adda980a6f6ff459cb9b0a1720cd8fbe8">CLGEMMGroupedConvolutionLayerFixture&lt; half &gt;</a></td></tr>
<tr class="separator:adda980a6f6ff459cb9b0a1720cd8fbe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_convolution_layer_8cpp.xhtml">ConvolutionLayer.cpp</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:28 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
