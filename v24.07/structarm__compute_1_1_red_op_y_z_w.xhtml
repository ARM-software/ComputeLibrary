<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: RedOpYZW&lt; T, S &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('structarm__compute_1_1_red_op_y_z_w.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">RedOpYZW&lt; T, S &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a2eb8ae9edbcaa2ffa10e954e92d298d1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_red_op_y_z_w.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">ExactTagType</a> = typename <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">wrapper::traits::neon_vector</a>&lt; T, S &gt;::tag_type</td></tr>
<tr class="memdesc:a2eb8ae9edbcaa2ffa10e954e92d298d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">SIMD vector tag type.  <a href="structarm__compute_1_1_red_op_y_z_w.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">More...</a><br /></td></tr>
<tr class="separator:a2eb8ae9edbcaa2ffa10e954e92d298d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d5828726967acd8c03493375c5bd2d3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_red_op_y_z_w.xhtml#a5d5828726967acd8c03493375c5bd2d3">neon_vector</a> = typename <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">wrapper::traits::neon_vector</a>&lt; T, S &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></td></tr>
<tr class="separator:a5d5828726967acd8c03493375c5bd2d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a85d22c07dd22936a6c9bd247ecc8f072"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_red_op_y_z_w.xhtml#a85d22c07dd22936a6c9bd247ecc8f072">operator()</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;in_window, <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;out_window, const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *in, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *out, int axis, const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</td></tr>
<tr class="separator:a85d22c07dd22936a6c9bd247ecc8f072"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, int S&gt;<br />
struct arm_compute::RedOpYZW&lt; T, S &gt;</h3>


<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00898">898</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a2eb8ae9edbcaa2ffa10e954e92d298d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2eb8ae9edbcaa2ffa10e954e92d298d1">&#9670;&nbsp;</a></span>ExactTagType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structarm__compute_1_1_red_op_y_z_w.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">ExactTagType</a> =  typename <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">wrapper::traits::neon_vector</a>&lt;T, S&gt;::tag_type</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>SIMD vector tag type. </p>

<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00901">901</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>

</div>
</div>
<a id="a5d5828726967acd8c03493375c5bd2d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d5828726967acd8c03493375c5bd2d3">&#9670;&nbsp;</a></span>neon_vector</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structarm__compute_1_1_red_op_y_z_w.xhtml#a5d5828726967acd8c03493375c5bd2d3">neon_vector</a> =  typename <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">wrapper::traits::neon_vector</a>&lt;T, S&gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00902">902</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a85d22c07dd22936a6c9bd247ecc8f072"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85d22c07dd22936a6c9bd247ecc8f072">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>in_window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>out_window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>axis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a>&#160;</td>
          <td class="paramname"><em>op</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00904">904</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;    {</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;        <span class="keyword">const</span> TensorInfo in_info            = *(in-&gt;info());</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        window_step_x      = 16 / <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>       window_start_x_tmp = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(in_window.x().start());</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>       window_end_x_tmp   = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(in_window.x().end());</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;        <span class="comment">// As it split over x-axis, need to set the correct spiltted window start and end.</span></div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> window_start_x = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(0);</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> window_end_x   = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(in_window.shape().x());</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160; </div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;        Window in_win_no_pad = in_window;</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;        in_win_no_pad.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(window_start_x_tmp, window_end_x_tmp, in_window.shape().x()));</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;        Window out_win_no_pad = out_window;</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;        out_win_no_pad.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>,</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;                           Window::Dimension(window_start_x_tmp, window_end_x_tmp, out_window.shape().x()));</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160; </div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;        Iterator <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(in, in_win_no_pad);</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;        Iterator output(out, out_win_no_pad);</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160; </div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;            in_win_no_pad,</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;            [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;            {</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr = <span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160; </div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;                <span class="comment">// Compute window_step_x elements per iteration</span></div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;                <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;                <span class="keywordflow">for</span> (; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                {</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                    <a class="code" href="structarm__compute_1_1_red_op_y_z_w.xhtml#a5d5828726967acd8c03493375c5bd2d3">neon_vector</a> vec_res_value = {0};</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;                    <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;                    {</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;                        {</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;                            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(input_ptr + x);</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;                        }</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;                        {</div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;                            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(1.f), <a class="code" href="structarm__compute_1_1_red_op_y_z_w.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">ExactTagType</a>{});</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;                        }</div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;                        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;                        {</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;                            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0.f), <a class="code" href="structarm__compute_1_1_red_op_y_z_w.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">ExactTagType</a>{});</div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;                        }</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;                    }</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;                    uint32x4x4_t vec_res_idx{{0}};</div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160; </div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dim = 0; dim &lt; in_info.dimension(axis); ++dim)</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;                    {</div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;                        <span class="keyword">const</span> T *in_ptr =</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;                            <span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr() + x * <span class="keyword">sizeof</span>(T) + in_info.strides_in_bytes()[axis] * dim);</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> vec_elements = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(in_ptr);</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;                        <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;                        {</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;                                vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">ReductionOperation::SUM_SQUARE</a>:</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;                                vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_elements, vec_elements), vec_res_value);</div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                                vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;                            {</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;                                <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;                                vec_res_idx =</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;                                    <a class="code" href="namespacearm__compute.xhtml#a829c86ba1256b5aefab6822072bdb8e0">calculate_index</a>(dim, temp_vec_res_value, vec_res_value, vec_res_idx, op, axis);</div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;                                vec_res_value = temp_vec_res_value;</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;                            }</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;                            {</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;                                <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;                                vec_res_idx =</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;                                    <a class="code" href="namespacearm__compute.xhtml#a829c86ba1256b5aefab6822072bdb8e0">calculate_index</a>(dim, temp_vec_res_value, vec_res_value, vec_res_idx, op, axis);</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;                                vec_res_value = temp_vec_res_value;</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;                            }</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;                            {</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;                                vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;                            }</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;                            {</div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;                                vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;                            }</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;                            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;                                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;                        }</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;                    }</div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160; </div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;                    <span class="keywordflow">if</span> (op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>)</div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;                    {</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;                        <span class="keyword">auto</span> vec_width_inv =</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a5ac8135a2c0a60f10448be0057543ed7">wrapper::vinv</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(in_info.dimension(axis)), <a class="code" href="structarm__compute_1_1_red_op_y_z_w.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">ExactTagType</a>{}));</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;                        vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value, vec_width_inv);</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;                    }</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160; </div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;                    <span class="keywordflow">if</span> (op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a> || op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>)</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;                    {</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr()) + x, vec_res_idx.val[0]);</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;                        <span class="keywordflow">if</span> (std::is_same&lt;T, float16_t&gt;::value)</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;                        {</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr()) + x + 4, vec_res_idx.val[1]);</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;                        }</div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;<span class="preprocessor">#endif // __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;                    }</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;                    {</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr() + x * <span class="keyword">sizeof</span>(T)), vec_res_value);</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;                    }</div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;                }</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160; </div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;                <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;                <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;                {</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;                    <span class="keyword">auto</span> res_value = 0.f;</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;                    <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;                    {</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;                        {</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;                            res_value = *(input_ptr + x);</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;                        }</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;                        {</div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;                            res_value = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(1.f);</div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;                        }</div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;                        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;                        {</div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;                            res_value = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0.f);</div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;                        }</div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;                    }</div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160; </div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;                    uint32_t res_idx = 0;</div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dim = 0; dim &lt; in_info.dimension(axis); ++dim)</div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;                    {</div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;                        <span class="keyword">const</span> T *in_ptr =</div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;                            <span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr() + x * <span class="keyword">sizeof</span>(T) + in_info.strides_in_bytes()[axis] * dim);</div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160; </div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;                        <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;                        {</div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;                                res_value += *in_ptr;</div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">ReductionOperation::SUM_SQUARE</a>:</div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;                                res_value += *in_ptr * *in_ptr;</div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;                                res_value *= *in_ptr;</div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;                            {</div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;                                <span class="keywordflow">if</span> (*in_ptr &lt; res_value)</div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;                                {</div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;                                    res_value = *in_ptr;</div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;                                    res_idx   = dim;</div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;                                }</div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;                            }</div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;                            {</div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;                                <span class="keywordflow">if</span> (*in_ptr &gt; res_value)</div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;                                {</div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;                                    res_value = *in_ptr;</div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;                                    res_idx   = dim;</div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;                                }</div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;                            }</div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;                            {</div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;                                res_value = *in_ptr &lt; res_value ? *in_ptr : res_value;</div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;                            }</div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;                            {</div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;                                res_value = *in_ptr &gt; res_value ? *in_ptr : res_value;</div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;                            }</div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;                            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;                                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;                        }</div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;                    }</div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160; </div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;                    <span class="keywordflow">if</span> (op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>)</div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;                    {</div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;                        res_value /= in_info.dimension(axis);</div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;                    }</div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160; </div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;                    <span class="keywordflow">if</span> (op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a> || op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>)</div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;                    {</div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr()) + x) = res_idx;</div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;                    }</div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;                    {</div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr() + x * <span class="keyword">sizeof</span>(T))) = res_value;</div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;                    }</div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;                }</div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;            },</div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ARG_IDX_MAX</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ARG_IDX_MIN</a>, <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00056">arm_compute::calculate_index()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00216">TensorInfo::dimension()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00101">Window::Dimension::end()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00074">arm_compute::execute_window_loop()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">arm_compute::MAX</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">arm_compute::MEAN_SUM</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">arm_compute::MIN</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">arm_compute::PROD</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00147">Iterator::ptr()</a>, <a class="el" href="_window_8inl_source.xhtml#l00053">Window::set()</a>, <a class="el" href="_window_8inl_source.xhtml#l00298">Window::shape()</a>, <a class="el" href="_window_8h_source.xhtml#l00096">Window::Dimension::start()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00224">TensorInfo::strides_in_bytes()</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">arm_compute::SUM</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">arm_compute::SUM_SQUARE</a>, <a class="el" href="intrinsics_2add_8h_source.xhtml#l00039">arm_compute::wrapper::vadd()</a>, <a class="el" href="dup__n_8h_source.xhtml#l00041">arm_compute::wrapper::vdup_n()</a>, <a class="el" href="inv_8h_source.xhtml#l00048">arm_compute::wrapper::vinv()</a>, <a class="el" href="load_8h_source.xhtml#l00058">arm_compute::wrapper::vloadq()</a>, <a class="el" href="max_8h_source.xhtml#l00039">arm_compute::wrapper::vmax()</a>, <a class="el" href="min_8h_source.xhtml#l00039">arm_compute::wrapper::vmin()</a>, <a class="el" href="mul_8h_source.xhtml#l00039">arm_compute::wrapper::vmul()</a>, <a class="el" href="store_8h_source.xhtml#l00039">arm_compute::wrapper::vstore()</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00086">Dimensions&lt; T &gt;::x()</a>, and <a class="el" href="_window_8h_source.xhtml#l00158">Window::x()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>src/cpu/kernels/reduction_layer/generic/neon/<a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a1894e825a225f3b2013f594cbffdae73"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">arm_compute::wrapper::vadd</a></div><div class="ttdeci">uint8x8_t vadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00039">add.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">arm_compute::ReductionOperation::PROD</a></div><div class="ttdeci">@ PROD</div><div class="ttdoc">Product.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">arm_compute::ReductionOperation::MIN</a></div><div class="ttdeci">@ MIN</div><div class="ttdoc">Min.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_red_op_y_z_w_xhtml_a2eb8ae9edbcaa2ffa10e954e92d298d1"><div class="ttname"><a href="structarm__compute_1_1_red_op_y_z_w.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">arm_compute::RedOpYZW::ExactTagType</a></div><div class="ttdeci">typename wrapper::traits::neon_vector&lt; T, S &gt;::tag_type ExactTagType</div><div class="ttdoc">SIMD vector tag type.</div><div class="ttdef"><b>Definition:</b> <a href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00901">impl.h:901</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a5ac8135a2c0a60f10448be0057543ed7"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a5ac8135a2c0a60f10448be0057543ed7">arm_compute::wrapper::vinv</a></div><div class="ttdeci">float32x2_t vinv(const float32x2_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="inv_8h_source.xhtml#l00048">inv.h:48</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">arm_compute::ReductionOperation::MAX</a></div><div class="ttdeci">@ MAX</div><div class="ttdoc">Max.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a77f54eded7fef436d3a4f21ad5a00da6"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">arm_compute::wrapper::vloadq</a></div><div class="ttdeci">uint8x16_t vloadq(const uint8_t *ptr)</div><div class="ttdef"><b>Definition:</b> <a href="load_8h_source.xhtml#l00058">load.h:58</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">arm_compute::ReductionOperation::MEAN_SUM</a></div><div class="ttdeci">@ MEAN_SUM</div><div class="ttdoc">Mean of sum.</div></div>
<div class="ttc" id="astructarm__compute_1_1_red_op_y_z_w_xhtml_a5d5828726967acd8c03493375c5bd2d3"><div class="ttname"><a href="structarm__compute_1_1_red_op_y_z_w.xhtml#a5d5828726967acd8c03493375c5bd2d3">arm_compute::RedOpYZW::neon_vector</a></div><div class="ttdeci">typename wrapper::traits::neon_vector&lt; T, S &gt;::type neon_vector</div><div class="ttdef"><b>Definition:</b> <a href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00902">impl.h:902</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_ab026a1aeec48074092f548c130c323f4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">arm_compute::wrapper::vmin</a></div><div class="ttdeci">uint8x8_t vmin(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="min_8h_source.xhtml#l00039">min.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a829c86ba1256b5aefab6822072bdb8e0"><div class="ttname"><a href="namespacearm__compute.xhtml#a829c86ba1256b5aefab6822072bdb8e0">arm_compute::calculate_index</a></div><div class="ttdeci">uint32x4x4_t calculate_index(uint32_t idx, T a, T b, uint32x4x4_t c, ReductionOperation op, int axis)</div><div class="ttdef"><b>Definition:</b> <a href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00056">impl.h:56</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a66c8dd218a4863a14fec363e3dd13dc4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">arm_compute::wrapper::vmul</a></div><div class="ttdeci">uint8x8_t vmul(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="mul_8h_source.xhtml#l00039">mul.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">arm_compute::ReductionOperation::SUM_SQUARE</a></div><div class="ttdeci">@ SUM_SQUARE</div><div class="ttdoc">Sum of squares.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6c0dcc38187027dcb89cd9724bc5a823"><div class="ttname"><a href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;...iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00074">Helpers.inl:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ReductionOperation::ARG_IDX_MAX</a></div><div class="ttdeci">@ ARG_IDX_MAX</div><div class="ttdoc">Index of the max value.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a8d1d14000c959f1146a8a64e1dafae5f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">arm_compute::wrapper::vmax</a></div><div class="ttdeci">uint8x8_t vmax(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="max_8h_source.xhtml#l00039">max.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ReductionOperation::ARG_IDX_MIN</a></div><div class="ttdeci">@ ARG_IDX_MIN</div><div class="ttdoc">Index of the min value.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_ae7943ea9c1f74dc72c62d4cc3966a459"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">arm_compute::wrapper::vstore</a></div><div class="ttdeci">void vstore(uint8_t *ptr, uint8x8_t val)</div><div class="ttdef"><b>Definition:</b> <a href="store_8h_source.xhtml#l00039">store.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">arm_compute::ReductionOperation::SUM</a></div><div class="ttdeci">@ SUM</div><div class="ttdoc">Sum.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a39e87435be178fba49b76f49426ef873"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">arm_compute::wrapper::vdup_n</a></div><div class="ttdeci">uint8x8_t vdup_n(uint8_t value, traits::vector_64_tag)</div><div class="ttdef"><b>Definition:</b> <a href="dup__n_8h_source.xhtml#l00041">dup_n.h:41</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1_red_op_y_z_w.xhtml">RedOpYZW</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
