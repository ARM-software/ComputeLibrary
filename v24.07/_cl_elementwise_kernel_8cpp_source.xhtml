<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/gpu/cl/kernels/ClElementwiseKernel.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cl_elementwise_kernel_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClElementwiseKernel.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_elementwise_kernel_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_elementwise_kernel_8h.xhtml">src/gpu/cl/kernels/ClElementwiseKernel.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2_c_l_2_c_l_helpers_8h.xhtml">arm_compute/core/CL/CLHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_c_l_tensor_8h.xhtml">arm_compute/core/CL/ICLTensor.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_activation_function_utils_8h.xhtml">arm_compute/core/utils/ActivationFunctionUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_adjust_vec_size_8h.xhtml">arm_compute/core/utils/helpers/AdjustVecSize.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_string_utils_8h.xhtml">arm_compute/core/utils/StringUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2common_2utils_2_validate_8h.xhtml">src/common/utils/Validate.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_validate_8h.xhtml">src/core/CL/CLValidate.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_auto_configuration_8h.xhtml">src/core/helpers/AutoConfiguration.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_helpers_8h.xhtml">src/core/helpers/WindowHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cast_8h.xhtml">support/Cast.h</a>&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_string_support_8h.xhtml">support/StringSupport.h</a>&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace </span>opencl</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">namespace </span>kernels</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> vector_size_byte_opencl = 16;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;std::map&lt;ArithmeticOperation, std::string&gt; supported_arithmetic_ops = {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    {<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a>, <span class="stringliteral">&quot;ADD&quot;</span>},     {<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea241dd841abade20fcb27b8a9f494e1eb">ArithmeticOperation::SUB</a>, <span class="stringliteral">&quot;SUB&quot;</span>},</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">ArithmeticOperation::DIV</a>, <span class="stringliteral">&quot;DIV&quot;</span>},     {<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea46ea186b87dc545033d86ba8d6e63916">ArithmeticOperation::SQUARED_DIFF</a>, <span class="stringliteral">&quot;SQUARED_DIFF&quot;</span>},</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aeace31e2a082d17e038fcc6e3006166653">ArithmeticOperation::MIN</a>, <span class="stringliteral">&quot;MIN&quot;</span>},     {<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea26a4b44a837bf97b972628509912b4a5">ArithmeticOperation::MAX</a>, <span class="stringliteral">&quot;MAX&quot;</span>},</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aeac9c9c146c630ca5ef9197c73c032f4a6">ArithmeticOperation::POWER</a>, <span class="stringliteral">&quot;POWER&quot;</span>}, {<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea25c5689f5cf73ac778d6aec298e02a7f">ArithmeticOperation::PRELU</a>, <span class="stringliteral">&quot;PRELU&quot;</span>},</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;};</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;std::map&lt;ArithmeticOperation, std::string&gt; supported_sat_arithmetic_ops = {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    {<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a>, <span class="stringliteral">&quot;ADD&quot;</span>},</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    {<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea241dd841abade20fcb27b8a9f494e1eb">ArithmeticOperation::SUB</a>, <span class="stringliteral">&quot;SUB&quot;</span>},</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;};</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;std::string</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;generate_id_for_tuning_common(<span class="keyword">const</span> std::string &amp;<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, <span class="keyword">const</span> ITensorInfo &amp;src1, <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    std::string config_id;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="comment">// Set config_id for enabling LWS tuning</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    config_id = <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    config_id += <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(src1.data_type()));</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.dimension(0));</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.dimension(1));</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> config_id;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;Status validate_in_place_output_shape(<span class="keyword">const</span> <span class="keywordtype">bool</span>         in_place,</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                      <span class="keyword">const</span> <span class="keywordtype">bool</span>         src1_in_place,</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                      <span class="keyword">const</span> ITensorInfo &amp;src1,</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                      <span class="keyword">const</span> ITensorInfo &amp;src2,</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                      <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                      <span class="keyword">const</span> TensorShape &amp;out_shape)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">if</span> (in_place)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <a class="code" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">detail::have_different_dimensions</a>(out_shape, src1_in_place ? src1.tensor_shape() : src2.tensor_shape(), 0),</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="stringliteral">&quot;Wrong shape for dst, cannot do in_place calculation&quot;</span>);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">detail::have_different_dimensions</a>(out_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.tensor_shape(), 0),</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                        <span class="stringliteral">&quot;Wrong shape for dst&quot;</span>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;Status validate_arguments_with_float_only_supported_rules(<span class="keyword">const</span> ITensorInfo &amp;src1,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                                          <span class="keyword">const</span> ITensorInfo &amp;src2,</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                                          <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(&amp;src1, &amp;src2, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="_c_l_validate_8h.xhtml#ab82bd5de18ef067ae5d9ba4af8065dd6">ARM_COMPUTE_RETURN_ERROR_ON_F16_UNSUPPORTED</a>(&amp;src1);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(&amp;src1, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;src1, &amp;src2);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="comment">// Check whether it is in_place calculation</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> in_place      = (&amp;src1 == &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>) || (&amp;src2 == &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> src1_in_place = in_place &amp;&amp; (&amp;src1 == &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">const</span> TensorShape out_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a58838fbdce5b5330d84e62329b45ff7d">TensorShape::broadcast_shape</a>(src1.tensor_shape(), src2.tensor_shape());</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(out_shape.total_size() == 0, <span class="stringliteral">&quot;Inputs are not broadcast compatible&quot;</span>);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// Validate in case of configured dst</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.total_size() &gt; 0)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;src1, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            validate_in_place_output_shape(in_place, src1_in_place, src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, out_shape));</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;Status validate_arguments_divide_operation(<span class="keyword">const</span> ITensorInfo *src1, <span class="keyword">const</span> ITensorInfo *src2, <span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="_c_l_validate_8h.xhtml#ab82bd5de18ef067ae5d9ba4af8065dd6">ARM_COMPUTE_RETURN_ERROR_ON_F16_UNSUPPORTED</a>(src1);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(src1, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(src1, src2);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="comment">// Check whether it is in_place calculation</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> in_place      = (src1 == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>) || (src2 == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> src1_in_place = in_place &amp;&amp; (src1 == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">const</span> TensorShape out_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a58838fbdce5b5330d84e62329b45ff7d">TensorShape::broadcast_shape</a>(src1-&gt;tensor_shape(), src2-&gt;tensor_shape());</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(out_shape.total_size() == 0, <span class="stringliteral">&quot;Inputs are not broadcast compatible&quot;</span>);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="comment">// Validate in case of configured dst</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;total_size() &gt; 0)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(src1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            validate_in_place_output_shape(in_place, src1_in_place, *src1, *src2, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, out_shape));</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;Status</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;validate_arguments_with_arithmetic_rules(<span class="keyword">const</span> ITensorInfo &amp;src1, <span class="keyword">const</span> ITensorInfo &amp;src2, <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="_c_l_validate_8h.xhtml#ab82bd5de18ef067ae5d9ba4af8065dd6">ARM_COMPUTE_RETURN_ERROR_ON_F16_UNSUPPORTED</a>(&amp;src1);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(&amp;src1, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>,</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>,</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;src1, &amp;src2);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">is_data_type_quantized_symmetric</a>(src1.data_type()))</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keyword">const</span> int32_t in1_offset = src1.quantization_info().uniform().offset;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keyword">const</span> int32_t in2_offset = src2.quantization_info().uniform().offset;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(in1_offset != 0, <span class="stringliteral">&quot;For quantized symmetric, offset must be zero&quot;</span>);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(in2_offset != 0, <span class="stringliteral">&quot;For quantized symmetric, offset must be zero&quot;</span>);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="comment">// Check whether it is in_place calculation</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> in_place      = (&amp;src1 == &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>) || (&amp;src2 == &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> src1_in_place = in_place &amp;&amp; (&amp;src1 == &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keyword">const</span> TensorShape out_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a58838fbdce5b5330d84e62329b45ff7d">TensorShape::broadcast_shape</a>(src1.tensor_shape(), src2.tensor_shape());</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(out_shape.total_size() == 0, <span class="stringliteral">&quot;Inputs are not broadcast compatible&quot;</span>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="comment">// Validate in case of configured dst</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.total_size() &gt; 0)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;src1, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">detail::have_different_dimensions</a>(out_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.tensor_shape(), 0),</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                        <span class="stringliteral">&quot;Wrong shape for dst&quot;</span>);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            validate_in_place_output_shape(in_place, src1_in_place, src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, out_shape));</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">is_data_type_quantized_symmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.data_type()))</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keyword">const</span> int32_t <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.quantization_info().uniform().offset;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> != 0, <span class="stringliteral">&quot;For quantized symmetric, offset must be zero&quot;</span>);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;CLBuildOptions generate_build_options_with_arithmetic_rules(<span class="keyword">const</span> ITensorInfo &amp;src1,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                                            <span class="keyword">const</span> ITensorInfo &amp;src2,</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                                            <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                                                            <span class="keyword">const</span> std::string &amp;operation_string)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;{</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    CLBuildOptions build_opts;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a> =</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(vector_size_byte_opencl / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.element_size(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.dimension(0));</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DDATA_TYPE=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">get_cl_type_from_data_type</a>(src1.data_type()));</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DVEC_SIZE_IN1=&quot;</span> +</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                          <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(src1.dimension(0) == 1 ? 1 : <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>));</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DVEC_SIZE_IN2=&quot;</span> +</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                          <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(src2.dimension(0) == 1 ? 1 : <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>));</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DVEC_SIZE_OUT=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>));</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DVEC_SIZE_LEFTOVER=&quot;</span> +</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                          <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.dimension(0) % <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>));</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DOP=&quot;</span> + operation_string);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(src1.data_type()))</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo iq1info = src1.quantization_info().uniform();</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo iq2info = src2.quantization_info().uniform();</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo oqinfo  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.quantization_info().uniform();</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DOFFSET_IN1=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(iq1info.offset));</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DOFFSET_IN2=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(iq2info.offset));</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DOFFSET_OUT=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(oqinfo.offset));</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DSCALE_IN1=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a59cc7dde3c479fa90260c12c992f2cae">float_to_string_with_full_precision</a>(iq1info.scale));</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DSCALE_IN2=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a59cc7dde3c479fa90260c12c992f2cae">float_to_string_with_full_precision</a>(iq2info.scale));</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DSCALE_OUT=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a59cc7dde3c479fa90260c12c992f2cae">float_to_string_with_full_precision</a>(oqinfo.scale));</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    build_opts.add_option_if(src1.data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>, <span class="stringliteral">&quot;-DS32&quot;</span>);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="comment">// Check whether it is in_place calculation</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> in_place      = (&amp;src1 == &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>) || (&amp;src2 == &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> src1_in_place = in_place &amp;&amp; (&amp;src1 == &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    build_opts.add_option_if(in_place, <span class="stringliteral">&quot;-DIN_PLACE&quot;</span>);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    build_opts.add_option_if(src1_in_place, <span class="stringliteral">&quot;-DSRC1_IN_PLACE&quot;</span>);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordflow">return</span> build_opts;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;}</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;std::pair&lt;Status, Window&gt; configure_window_arithmetic_common(ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;{</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a> =</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(vector_size_byte_opencl / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.element_size(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.dimension(0));</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    Window win = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, Steps(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>));</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">return</span> std::make_pair(Status{}, win);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;std::pair&lt;Status, Window&gt;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;validate_and_configure_window_for_arithmetic_operators(ITensorInfo &amp;src1, ITensorInfo &amp;src2, ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keyword">const</span> std::pair&lt;TensorShape, ValidRegion&gt; broadcast_pair =</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#abb92caa923c8ff80bfdf1b408ef49185">ITensorInfo::broadcast_shape_and_valid_region</a>(src1, src2);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keyword">const</span> TensorShape &amp;out_shape = broadcast_pair.first;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, out_shape, 1, src1.data_type());</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">return</span> configure_window_arithmetic_common(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;}</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;std::pair&lt;Status, Window&gt;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;validate_and_configure_window_for_logical_binary_operators(ITensorInfo &amp;src1, ITensorInfo &amp;src2, ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;{</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">const</span> std::pair&lt;TensorShape, ValidRegion&gt; broadcast_pair =</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#abb92caa923c8ff80bfdf1b408ef49185">ITensorInfo::broadcast_shape_and_valid_region</a>(src1, src2);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keyword">const</span> TensorShape &amp;out_shape = broadcast_pair.first;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6bd175f94838df9aed06d32452df92d3">set_shape_if_empty</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, out_shape);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ac358f7701e83eb2bda7ae5b9f03fd7fe">set_data_type_if_unknown</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordflow">return</span> configure_window_arithmetic_common(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;std::pair&lt;Status, Window&gt;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;validate_and_configure_window_for_division(ITensorInfo &amp;src1, ITensorInfo &amp;src2, ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keyword">const</span> std::pair&lt;TensorShape, ValidRegion&gt; broadcast_pair =</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#abb92caa923c8ff80bfdf1b408ef49185">ITensorInfo::broadcast_shape_and_valid_region</a>(src1, src2);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keyword">const</span> TensorShape &amp;out_shape = broadcast_pair.first;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, out_shape, 1, src1.data_type());</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keywordflow">return</span> configure_window_arithmetic_common(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;}</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel.xhtml#a35d651c6593576222cd406cc173087f6">  287</a></span>&#160;<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel.xhtml#a35d651c6593576222cd406cc173087f6">ClElementwiseKernel::ClElementwiseKernel</a>()</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;{</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    _type = <a class="code" href="namespacearm__compute.xhtml#a6df16a1b3b5af590a14f55e983d3428ea92aed3228e2f4b29698517b9f0a3689e">CLKernelType::ELEMENTWISE</a>;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;}</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keywordtype">void</span> ClElementwiseKernel::configure_common(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml">ClCompileContext</a> &amp;compile_context,</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                                           <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>            *src1,</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                           <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>            *src2,</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                           <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>            *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="comment">// Configure kernel window</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keyword">auto</span> win_config = validate_and_configure_window(*src1, *src2, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(win_config.first);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    std::string <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> = <span class="stringliteral">&quot;elementwise_operation_&quot;</span> + name();</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(src1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()))</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> += <span class="stringliteral">&quot;_quantized&quot;</span>;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="comment">// Set kernel build options</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> build_opts = generate_build_options(*src1, *src2, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordflow">if</span> (_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">enabled</a>())</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        build_opts.<a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml#a3e2b80ff5463b7d2017de847f5c32a30">add_option</a>(<span class="stringliteral">&quot;-DACTIVATION_TYPE=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a5f2b06a162f0ca4e7bc8caac9525197f">string_from_activation_func</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>())));</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        build_opts.<a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml#a3e2b80ff5463b7d2017de847f5c32a30">add_option</a>(<span class="stringliteral">&quot;-DA_VAL=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a59cc7dde3c479fa90260c12c992f2cae">float_to_string_with_full_precision</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>()));</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        build_opts.<a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml#a3e2b80ff5463b7d2017de847f5c32a30">add_option</a>(<span class="stringliteral">&quot;-DB_VAL=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a59cc7dde3c479fa90260c12c992f2cae">float_to_string_with_full_precision</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>()));</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    }</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160; </div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="comment">// Create kernel</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    _kernel = <a class="code" href="namespacearm__compute.xhtml#adc51892eeef112d44a4f9bb0b988c9b9">create_kernel</a>(compile_context, <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, build_opts.<a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml#ae3b08139a1e57323c5d7dd93f30496c8">options</a>());</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    ICLKernel::configure_internal(win_config.second);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    _config_id = generate_id_for_tuning(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, *src1, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;}</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160; </div>
<div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel.xhtml#a7a021c3030be22b130066f32c47afef6">  324</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel.xhtml#a7a021c3030be22b130066f32c47afef6">ClElementwiseKernel::run_op</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, ::cl::CommandQueue &amp;queue)</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;{</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">ICLKernel::window</a>(), <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160; </div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> src_0 =</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        utils::cast::polymorphic_downcast&lt;const ICLTensor *&gt;(tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>));</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> src_1 =</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        utils::cast::polymorphic_downcast&lt;const ICLTensor *&gt;(tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>));</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = utils::cast::polymorphic_downcast&lt;ICLTensor *&gt;(tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>));</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; </div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(src_0, src_1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160; </div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;in_shape1 = src_0-&gt;info()-&gt;tensor_shape();</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;in_shape2 = src_1-&gt;info()-&gt;tensor_shape();</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;out_shape = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;info()-&gt;tensor_shape();</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160; </div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordtype">bool</span>       can_collapse = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_vector    = in_shape1.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a80a5f2d6e3a697c9aad893a3b4242615">num_dimensions</a>() == 1 || in_shape2.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a80a5f2d6e3a697c9aad893a3b4242615">num_dimensions</a>() == 1;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">if</span> (std::min(in_shape1.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">total_size</a>(), in_shape2.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">total_size</a>()) &gt; 1 &amp;&amp; !is_vector)</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    {</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        can_collapse = (std::min(in_shape1.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a80a5f2d6e3a697c9aad893a3b4242615">num_dimensions</a>(), in_shape2.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a80a5f2d6e3a697c9aad893a3b4242615">num_dimensions</a>()) &gt; <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> d = <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>; can_collapse &amp;&amp; (d &lt; out_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a80a5f2d6e3a697c9aad893a3b4242615">num_dimensions</a>()); d++)</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            can_collapse = (in_shape1[d] == in_shape2[d]);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        }</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    }</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160; </div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordtype">bool</span>   has_collapsed = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> collapsed =</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        can_collapse ? <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">collapse_if_possible</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">ICLKernel::window</a>(), <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, &amp;has_collapsed) : <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160; </div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;in_shape1_collapsed = has_collapsed ? in_shape1.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#af0d754a1bb2ae68b5d2f1aacc1794817">collapsed_from</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>) : in_shape1;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;in_shape2_collapsed = has_collapsed ? in_shape2.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#af0d754a1bb2ae68b5d2f1aacc1794817">collapsed_from</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>) : in_shape2;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160; </div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>      = collapsed.<a class="code" href="classarm__compute_1_1_window.xhtml#a30ca5bdbb60ee281d7f1ab34f7a4ee40">first_slice_window_3D</a>();</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> slice_src1 = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>.broadcast_if_dimension_le_one(in_shape1_collapsed);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> slice_src2 = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>.broadcast_if_dimension_le_one(in_shape2_collapsed);</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160; </div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="comment">// Check whether it is in_place calculation</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> in_place = (src_0 == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>) || (src_1 == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keywordflow">do</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    {</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> idx = 0;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a28f5847162f352444c6ac1825d0e99c7">add_3D_tensor_argument</a>(idx, src_0, slice_src1);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a28f5847162f352444c6ac1825d0e99c7">add_3D_tensor_argument</a>(idx, src_1, slice_src2);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="keywordflow">if</span> (!in_place)</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        {</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a28f5847162f352444c6ac1825d0e99c7">add_3D_tensor_argument</a>(idx, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>);</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        }</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6e51ab3789678d3e0b0b72178dd6c4c6">enqueue</a>(queue, *<span class="keyword">this</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>, <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ab9f813c25ed75ea7b7ac2fa3926a8f55">lws_hint</a>());</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(collapsed.<a class="code" href="classarm__compute_1_1_window.xhtml#aac792e3a11bc73bafafc4f4284c7f215">slide_window_slice_3D</a>(slice_src1));</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(collapsed.<a class="code" href="classarm__compute_1_1_window.xhtml#aac792e3a11bc73bafafc4f4284c7f215">slide_window_slice_3D</a>(slice_src2));</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    } <span class="keywordflow">while</span> (collapsed.<a class="code" href="classarm__compute_1_1_window.xhtml#aac792e3a11bc73bafafc4f4284c7f215">slide_window_slice_3D</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>));</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;}</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">/** Logical binary */</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160; </div>
<div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml#a91fc39f66fb170e10dd7e006ff59e049">  383</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml#a91fc39f66fb170e10dd7e006ff59e049">ClLogicalBinaryKernel::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml">ClCompileContext</a> &amp;compile_context,</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                      <a class="code" href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707">LogicalOperation</a>        op,</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                                      <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>            *src1,</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                                      <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>            *src2,</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                                      <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>            *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;{</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml#a1d934244dc8bb3900ecde43707e013fe">ClLogicalBinaryKernel::validate</a>(op, src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>));</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    _op = op;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    configure_common(compile_context, src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;}</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml#a1d934244dc8bb3900ecde43707e013fe">  395</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml#a1d934244dc8bb3900ecde43707e013fe">ClLogicalBinaryKernel::validate</a>(<a class="code" href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707">LogicalOperation</a>   op,</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src1,</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src2,</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;{</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(op);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <a class="code" href="src_2common_2utils_2_validate_8h.xhtml#a6d40659f94b26d9ac5ae03538252dcd4">ARM_COMPUTE_ASSERT</a>(op != <a class="code" href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707a88183b946cc5f0e8c96b2e66e1c74a7e">LogicalOperation::Unknown</a> &amp;&amp; op != <a class="code" href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707aa74c05d080620f087c4e523977230666">LogicalOperation::Not</a>);</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(src1, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>);</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(src1, src2);</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160; </div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_with_arithmetic_rules(*src1, *src2, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>));</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        validate_and_configure_window_for_logical_binary_operators(*src1-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *src2-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;clone())</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            .first);</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160; </div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;}</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160; </div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;std::string ClLogicalBinaryKernel::name()</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;{</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordflow">switch</span> (_op)</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    {</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707ac33315685a0cba3ce53be378b3c7874b">LogicalOperation::And</a>:</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;AND&quot;</span>;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707a3a2d5fe857d8f9541136a124c2edec6c">LogicalOperation::Or</a>:</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;OR&quot;</span>;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707aa74c05d080620f087c4e523977230666">LogicalOperation::Not</a>:</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        <span class="comment">/* fall through */</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            <a class="code" href="src_2common_2utils_2_validate_8h.xhtml#a6d40659f94b26d9ac5ae03538252dcd4">ARM_COMPUTE_ASSERT</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    }</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;}</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160; </div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;std::pair&lt;Status, Window&gt;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;ClLogicalBinaryKernel::validate_and_configure_window(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;src1, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;src2, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;{</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="keywordflow">return</span> validate_and_configure_window_for_logical_binary_operators(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;}</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160; </div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;CLBuildOptions</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;ClLogicalBinaryKernel::generate_build_options(<span class="keyword">const</span> ITensorInfo &amp;src1, <span class="keyword">const</span> ITensorInfo &amp;src2, <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;{</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <span class="comment">// The arithmetic utility functions can be share</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <span class="keywordflow">return</span> generate_build_options_with_arithmetic_rules(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, name());</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;}</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160; </div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;std::string ClLogicalBinaryKernel::generate_id_for_tuning(<span class="keyword">const</span> std::string &amp;<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>,</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                                                          <span class="keyword">const</span> ITensorInfo &amp;src1,</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                                                          <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;{</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <span class="keywordflow">return</span> generate_id_for_tuning_common(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, src1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;}</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">/** Arithmetic operations with saturation*/</span></div>
<div class="line"><a name="l00452"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml#ab6e6022ddcc828d6cb51e51539e565a4">  452</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml#ab6e6022ddcc828d6cb51e51539e565a4">ClSaturatedArithmeticKernel::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml">ClCompileContext</a>    &amp;compile_context,</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                                            <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8ae">ArithmeticOperation</a>        op,</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                                            <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *input1,</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                                            <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *input2,</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                                            <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *output,</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a>       &amp;policy,</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;{</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(input1, input2, output);</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml#aebf6a0c58aca10e93cda09f6dfad4583">ClSaturatedArithmeticKernel::validate</a>(op, input1, input2, output, policy, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>));</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="keyword">auto</span> padding_info = <a class="code" href="namespacearm__compute.xhtml#a456cc0b26fb17eee9942c8970f1c71db">get_padding_info</a>({input1, input2, output});</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160; </div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    _policy   = policy;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    _op       = op;</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    _act_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    configure_common(compile_context, input1, input2, output);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#a7d5ebe14ba3526c8e2ed3c6949669f9c">has_padding_changed</a>(padding_info));</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;}</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160; </div>
<div class="line"><a name="l00471"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml#aebf6a0c58aca10e93cda09f6dfad4583">  471</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml#aebf6a0c58aca10e93cda09f6dfad4583">ClSaturatedArithmeticKernel::validate</a>(<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8ae">ArithmeticOperation</a>        op,</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input1,</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *input2,</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *output,</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a>       &amp;policy,</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;{</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(op, policy);</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(input1, input2, output);</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_with_arithmetic_rules(*input1, *input2, *output));</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        validate_and_configure_window_for_arithmetic_operators(*input1-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *input2-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *output-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>())</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            .first);</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>.enabled() &amp;&amp; !<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()));</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160; </div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;}</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160; </div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;std::pair&lt;Status, Window&gt; ClSaturatedArithmeticKernel::validate_and_configure_window(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;input1,</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                                                                                     <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;input2,</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                                                                     <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;output)</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;{</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keywordflow">return</span> validate_and_configure_window_for_arithmetic_operators(input1, input2, output);</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;}</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160; </div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> ClSaturatedArithmeticKernel::generate_build_options(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;input1,</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                                                                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;input2,</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                                                                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;output)</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;{</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> has_float_out = <a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(output.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="keyword">auto</span>       <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a> = generate_build_options_with_arithmetic_rules(input1, input2, output, name());</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>.add_option((_policy == <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">ConvertPolicy::WRAP</a> || has_float_out) ? <span class="stringliteral">&quot;-DWRAP&quot;</span> : <span class="stringliteral">&quot;-DSATURATE&quot;</span>);</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>;</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;}</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160; </div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;std::string ClSaturatedArithmeticKernel::generate_id_for_tuning(<span class="keyword">const</span> std::string &amp;<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>,</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                                                                <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;input1,</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                                                                <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;output)</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;{</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keyword">auto</span> <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a8f7f6ab59fc0e601d750b83e75a398eb">config_id</a> = generate_id_for_tuning_common(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, input1, output);</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a8f7f6ab59fc0e601d750b83e75a398eb">config_id</a> += (_policy == <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">ConvertPolicy::WRAP</a>) ? <span class="stringliteral">&quot;_wrap_&quot;</span> : <span class="stringliteral">&quot;_saturate_&quot;</span>;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a8f7f6ab59fc0e601d750b83e75a398eb">config_id</a> += <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a56b9e25c2e8731ca5488e7b3ccd66f58">string_from_data_layout</a>(input1.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>()));</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a8f7f6ab59fc0e601d750b83e75a398eb">config_id</a>;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;}</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160; </div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;std::string ClSaturatedArithmeticKernel::name()</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;{</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keywordflow">return</span> supported_sat_arithmetic_ops[_op];</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;}</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment">/** Arithmetic operations*/</span></div>
<div class="line"><a name="l00522"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml#a7b4122b6331f1729682a96c87c6a2db8">  522</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml#a7b4122b6331f1729682a96c87c6a2db8">ClArithmeticKernel::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml">ClCompileContext</a>    &amp;compile_context,</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                                   <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8ae">ArithmeticOperation</a>        op,</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                                   <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *src1,</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                                   <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *src2,</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                                   <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;{</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml#a1b2437c6950b783eed0842560c21615e">ClArithmeticKernel::validate</a>(op, src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>));</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <span class="keyword">auto</span> padding_info = <a class="code" href="namespacearm__compute.xhtml#a456cc0b26fb17eee9942c8970f1c71db">get_padding_info</a>({src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>});</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160; </div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    _op       = op;</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    _act_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    configure_common(compile_context, src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#a7d5ebe14ba3526c8e2ed3c6949669f9c">has_padding_changed</a>(padding_info));</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;}</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160; </div>
<div class="line"><a name="l00539"></a><span class="lineno"><a class="line" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml#a1b2437c6950b783eed0842560c21615e">  539</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml#a1b2437c6950b783eed0842560c21615e">ClArithmeticKernel::validate</a>(<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8ae">ArithmeticOperation</a>        op,</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *src1,</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *src2,</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;{</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keywordflow">if</span> (op == <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">ArithmeticOperation::DIV</a>)</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    {</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        <span class="comment">// Partial integer support S32/F32/F16</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_divide_operation(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>));</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;            validate_and_configure_window_for_division(*src1-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *src2-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;clone()).first);</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    }</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (op == <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aeac9c9c146c630ca5ef9197c73c032f4a6">ArithmeticOperation::POWER</a>)</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    {</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        <span class="comment">// Power operators doesn&#39;t support integer arithmetic</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_with_float_only_supported_rules(*src1, *src2, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>));</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            validate_and_configure_window_for_division(*src1-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *src2-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;clone()).first);</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    }</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    {</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_with_arithmetic_rules(*src1, *src2, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>));</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;            validate_and_configure_window_for_arithmetic_operators(*src1-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *src2-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;clone())</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                .first);</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    }</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>.enabled() &amp;&amp; !<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;data_type()));</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160; </div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;}</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;std::pair&lt;Status, Window&gt;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;ClArithmeticKernel::validate_and_configure_window(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;src1, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;src2, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;{</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="keywordflow">if</span> (_op == <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">ArithmeticOperation::DIV</a> || _op == <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aeac9c9c146c630ca5ef9197c73c032f4a6">ArithmeticOperation::POWER</a>)</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    {</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        <span class="comment">// Division and Power operators don&#39;t support integer arithmetic</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        <span class="keywordflow">return</span> validate_and_configure_window_for_division(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    }</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    {</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        <span class="keywordflow">return</span> validate_and_configure_window_for_arithmetic_operators(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    }</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;}</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160; </div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;CLBuildOptions</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;ClArithmeticKernel::generate_build_options(<span class="keyword">const</span> ITensorInfo &amp;src1, <span class="keyword">const</span> ITensorInfo &amp;src2, <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;{</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keywordflow">return</span> generate_build_options_with_arithmetic_rules(src1, src2, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, name());</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;}</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;std::string ClArithmeticKernel::generate_id_for_tuning(<span class="keyword">const</span> std::string &amp;<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>,</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                                                       <span class="keyword">const</span> ITensorInfo &amp;src1,</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                                                       <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;{</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    <span class="keywordflow">return</span> generate_id_for_tuning_common(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, src1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;}</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160; </div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;std::string ClArithmeticKernel::name()</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;{</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <span class="keywordflow">return</span> supported_arithmetic_ops[_op];</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;}</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;} <span class="comment">// namespace kernels</span></div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;} <span class="comment">// namespace opencl</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel_xhtml_a1b2437c6950b783eed0842560c21615e"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml#a1b2437c6950b783eed0842560c21615e">arm_compute::opencl::kernels::ClArithmeticKernel::validate</a></div><div class="ttdeci">static Status validate(ArithmeticOperation op, const ITensorInfo *src1, const ITensorInfo *src2, const ITensorInfo *dst, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_8cpp_source.xhtml#l00539">ClElementwiseKernel.cpp:539</a></div></div>
<div class="ttc" id="a_cast_8h_xhtml"><div class="ttname"><a href="_cast_8h.xhtml">Cast.h</a></div></div>
<div class="ttc" id="a_string_support_8h_xhtml"><div class="ttname"><a href="_string_support_8h.xhtml">StringSupport.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel_xhtml_a35d651c6593576222cd406cc173087f6"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel.xhtml#a35d651c6593576222cd406cc173087f6">arm_compute::opencl::kernels::ClElementwiseKernel::ClElementwiseKernel</a></div><div class="ttdeci">ClElementwiseKernel()</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_8cpp_source.xhtml#l00287">ClElementwiseKernel.cpp:287</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a367b5090ab432bc7de2c32369e087ab1"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">arm_compute::ITensorInfo::data_layout</a></div><div class="ttdeci">virtual DataLayout data_layout() const =0</div><div class="ttdoc">Get the data layout of the tensor.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea26a4b44a837bf97b972628509912b4a5">arm_compute::ArithmeticOperation::MAX</a></div><div class="ttdeci">@ MAX</div><div class="ttdoc">Max(x, y)</div></div>
<div class="ttc" id="a_adjust_vec_size_8h_xhtml"><div class="ttname"><a href="_adjust_vec_size_8h.xhtml">AdjustVecSize.h</a></div></div>
<div class="ttc" id="a_i_c_l_tensor_8h_xhtml"><div class="ttname"><a href="_i_c_l_tensor_8h.xhtml">ICLTensor.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_build_options_xhtml_ae3b08139a1e57323c5d7dd93f30496c8"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml#ae3b08139a1e57323c5d7dd93f30496c8">arm_compute::CLBuildOptions::options</a></div><div class="ttdeci">const StringSet &amp; options() const</div><div class="ttdoc">Gets the current options list set.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00072">CLCompileContext.cpp:72</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00029">WindowHelpers.cpp:29</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0a7bb17a0a0414a7162f635776a02eb5"><div class="ttname"><a href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">arm_compute::lower_string</a></div><div class="ttdeci">std::string lower_string(const std::string &amp;val)</div><div class="ttdoc">Lower a given string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_utils_8cpp_source.xhtml#l00038">StringUtils.cpp:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ac358f7701e83eb2bda7ae5b9f03fd7fe"><div class="ttname"><a href="namespacearm__compute.xhtml#ac358f7701e83eb2bda7ae5b9f03fd7fe">arm_compute::set_data_type_if_unknown</a></div><div class="ttdeci">bool set_data_type_if_unknown(ITensorInfo &amp;info, DataType data_type)</div><div class="ttdoc">Set the data type and number of channels to the specified value if the current data type is unknown.</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00133">AutoConfiguration.h:133</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea25c5689f5cf73ac778d6aec298e02a7f"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea25c5689f5cf73ac778d6aec298e02a7f">arm_compute::ArithmeticOperation::PRELU</a></div><div class="ttdeci">@ PRELU</div><div class="ttdoc">y*x if x &lt; 0, x otherwise</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l01079">Validate.h:1079</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a663ce71e1992366180fcb85b0a874e2f"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">arm_compute::Window::collapse_if_possible</a></div><div class="ttdeci">Window collapse_if_possible(const Window &amp;full_window, size_t first, size_t last, bool *has_collapsed=nullptr) const</div><div class="ttdoc">Collapse the dimensions between first and last if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00072">Window.inl:72</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a8cb8460f7fedf906ecab5621af891707a88183b946cc5f0e8c96b2e66e1c74a7e"><div class="ttname"><a href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707a88183b946cc5f0e8c96b2e66e1c74a7e">arm_compute::LogicalOperation::Unknown</a></div><div class="ttdeci">@ Unknown</div><div class="ttdoc">Unknown.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a922cd85c475c0d725fc030116ea57979"><div class="ttname"><a href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">arm_compute::is_data_type_quantized_symmetric</a></div><div class="ttdeci">bool is_data_type_quantized_symmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of symmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00400">DataTypeUtils.h:400</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a341a4c8a24d190d39504656989573d91"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">arm_compute::ITensorPack::get_tensor</a></div><div class="ttdeci">ITensor * get_tensor(int id)</div><div class="ttdoc">Get tensor of a given id from the pac.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00063">ITensorPack.cpp:63</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a142b55a483cadf4e1068a1a09a55e8e9"><div class="ttname"><a href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">arm_compute::string_from_data_type</a></div><div class="ttdeci">const std::string &amp; string_from_data_type(DataType dt)</div><div class="ttdoc">Convert a data type identity into a string.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8cpp_source.xhtml#l00031">DataTypeUtils.cpp:31</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_a9e0fb1d1462557f28966ae19988532c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">arm_compute::ActivationLayerInfo::activation</a></div><div class="ttdeci">ActivationFunction activation() const</div><div class="ttdoc">Get the type of activation function.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00084">ActivationLayerInfo.h:84</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">Validate.h:677</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00952">Validate.h:952</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">arm_compute::DataType::QSYMM16</a></div><div class="ttdeci">@ QSYMM16</div><div class="ttdoc">quantized, symmetric fixed-point 16-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aeac9c9c146c630ca5ef9197c73c032f4a6"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aeac9c9c146c630ca5ef9197c73c032f4a6">arm_compute::ArithmeticOperation::POWER</a></div><div class="ttdeci">@ POWER</div><div class="ttdoc">x ^ y</div></div>
<div class="ttc" id="a_string_utils_8h_xhtml"><div class="ttname"><a href="_string_utils_8h.xhtml">StringUtils.h</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00205">Error.h:205</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00061">ActivationLayerInfo.h:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1f8aca235c095df227e7444f6b237eb1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">arm_compute::test::validation::act_info</a></div><div class="ttdeci">act_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_kernel_xhtml_a8f7f6ab59fc0e601d750b83e75a398eb"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a8f7f6ab59fc0e601d750b83e75a398eb">arm_compute::ICLKernel::config_id</a></div><div class="ttdeci">const std::string &amp; config_id() const</div><div class="ttdoc">Get the configuration ID.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_i_c_l_kernel_8h_source.xhtml#l00419">ICLKernel.h:419</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">arm_compute::ConvertPolicy::WRAP</a></div><div class="ttdeci">@ WRAP</div><div class="ttdoc">Wrap around.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a000c70e9839ed364ab7343de880a4d35"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">arm_compute::ITensorPack::get_const_tensor</a></div><div class="ttdeci">const ITensor * get_const_tensor(int id) const</div><div class="ttdoc">Get constant tensor of a given id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00053">ITensorPack.cpp:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel_xhtml_a91fc39f66fb170e10dd7e006ff59e049"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml#a91fc39f66fb170e10dd7e006ff59e049">arm_compute::opencl::kernels::ClLogicalBinaryKernel::configure</a></div><div class="ttdeci">void configure(const ClCompileContext &amp;compile_context, LogicalOperation op, ITensorInfo *src1, ITensorInfo *src2, ITensorInfo *dst)</div><div class="ttdoc">Function to configure kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_8cpp_source.xhtml#l00383">ClElementwiseKernel.cpp:383</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_af5a8385102f8f8dd6c5957eac08b04c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">arm_compute::ActivationLayerInfo::enabled</a></div><div class="ttdeci">bool enabled() const</div><div class="ttdoc">Check if initialised.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00099">ActivationLayerInfo.h:99</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_validate_8h_xhtml"><div class="ttname"><a href="src_2common_2utils_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_build_options_xhtml_a3e2b80ff5463b7d2017de847f5c32a30"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml#a3e2b80ff5463b7d2017de847f5c32a30">arm_compute::CLBuildOptions::add_option</a></div><div class="ttdeci">void add_option(std::string option)</div><div class="ttdoc">Adds option to the existing build option list.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00041">CLCompileContext.cpp:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml">arm_compute::CLCompileContext</a></div><div class="ttdoc">CLCompileContext class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00204">CLCompileContext.h:204</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel_xhtml_ab6e6022ddcc828d6cb51e51539e565a4"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml#ab6e6022ddcc828d6cb51e51539e565a4">arm_compute::opencl::kernels::ClSaturatedArithmeticKernel::configure</a></div><div class="ttdeci">void configure(const ClCompileContext &amp;compile_context, ArithmeticOperation op, ITensorInfo *input1, ITensorInfo *input2, ITensorInfo *output, const ConvertPolicy &amp;policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of ClSaturatedArithmeticKer...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_8cpp_source.xhtml#l00452">ClElementwiseKernel.cpp:452</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00298">Error.h:298</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdeci">@ ACL_DST</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a37c28ce239ce7092298245ce59694917"><div class="ttname"><a href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00043">AutoConfiguration.h:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aeace31e2a082d17e038fcc6e3006166653"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aeace31e2a082d17e038fcc6e3006166653">arm_compute::ArithmeticOperation::MIN</a></div><div class="ttdeci">@ MIN</div><div class="ttdoc">Min(x, y)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_a0fdcb923dfd4c74858cc2bc326321efb"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">arm_compute::TensorShape::total_size</a></div><div class="ttdeci">size_t total_size() const</div><div class="ttdoc">Collapses all dimensions to a single linear total size.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00175">TensorShape.h:175</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::DataType::U8</a></div><div class="ttdeci">@ U8</div><div class="ttdoc">unsigned 8-bit number</div></div>
<div class="ttc" id="a_c_l_validate_8h_xhtml_ab82bd5de18ef067ae5d9ba4af8065dd6"><div class="ttname"><a href="_c_l_validate_8h.xhtml#ab82bd5de18ef067ae5d9ba4af8065dd6">ARM_COMPUTE_RETURN_ERROR_ON_F16_UNSUPPORTED</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_F16_UNSUPPORTED(tensor)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_validate_8h_source.xhtml#l00036">CLValidate.h:36</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">arm_compute::DataType::S16</a></div><div class="ttdeci">@ S16</div><div class="ttdoc">signed 16-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a45d610a8bc262f7007c934293361e888"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">arm_compute::detail::have_different_dimensions</a></div><div class="ttdeci">bool have_different_dimensions(const Dimensions&lt; T &gt; &amp;dim1, const Dimensions&lt; T &gt; &amp;dim2, unsigned int upper_dim)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00051">Validate.h:51</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_adc51892eeef112d44a4f9bb0b988c9b9"><div class="ttname"><a href="namespacearm__compute.xhtml#adc51892eeef112d44a4f9bb0b988c9b9">arm_compute::create_kernel</a></div><div class="ttdeci">cl::Kernel create_kernel(const CLCompileContext &amp;ctx, const std::string &amp;kernel_name, const std::set&lt; std::string &gt; &amp;build_opts=std::set&lt; std::string &gt;())</div><div class="ttdoc">Creates an opencl kernel using a compile context.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00409">CLHelpers.cpp:409</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdeci">@ QASYMM8_SIGNED</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="a_window_helpers_8h_xhtml"><div class="ttname"><a href="_window_helpers_8h.xhtml">WindowHelpers.h</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00203">Validate.h:203</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a59cc7dde3c479fa90260c12c992f2cae"><div class="ttname"><a href="namespacearm__compute.xhtml#a59cc7dde3c479fa90260c12c992f2cae">arm_compute::float_to_string_with_full_precision</a></div><div class="ttdeci">std::string float_to_string_with_full_precision(float val)</div><div class="ttdoc">Create a string with the float in full precision.</div><div class="ttdef"><b>Definition:</b> <a href="_string_utils_8cpp_source.xhtml#l00052">StringUtils.cpp:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="asrc_2common_2utils_2_validate_8h_xhtml_a6d40659f94b26d9ac5ae03538252dcd4"><div class="ttname"><a href="src_2common_2utils_2_validate_8h.xhtml#a6d40659f94b26d9ac5ae03538252dcd4">ARM_COMPUTE_ASSERT</a></div><div class="ttdeci">#define ARM_COMPUTE_ASSERT(cond)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_validate_8h_source.xhtml#l00037">Validate.h:37</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">helpers.h:1142</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_aac792e3a11bc73bafafc4f4284c7f215"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aac792e3a11bc73bafafc4f4284c7f215">arm_compute::Window::slide_window_slice_3D</a></div><div class="ttdeci">bool slide_window_slice_3D(Window &amp;slice) const</div><div class="ttdoc">Slide the passed 3D window slice.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00350">Window.h:350</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel_xhtml_a7a021c3030be22b130066f32c47afef6"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel.xhtml#a7a021c3030be22b130066f32c47afef6">arm_compute::opencl::kernels::ClElementwiseKernel::run_op</a></div><div class="ttdeci">void run_op(ITensorPack &amp;tensors, const Window &amp;window, ::cl::CommandQueue &amp;queue) override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_8cpp_source.xhtml#l00324">ClElementwiseKernel.cpp:324</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_abb92caa923c8ff80bfdf1b408ef49185"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#abb92caa923c8ff80bfdf1b408ef49185">arm_compute::ITensorInfo::broadcast_shape_and_valid_region</a></div><div class="ttdeci">static std::pair&lt; TensorShape, ValidRegion &gt; broadcast_shape_and_valid_region(const Infos &amp;...infos)</div><div class="ttdoc">If infos are broadcast compatible tensor info's, return the broadcasted shape and the intersection of...</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00332">ITensorInfo.h:332</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea46ea186b87dc545033d86ba8d6e63916"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea46ea186b87dc545033d86ba8d6e63916">arm_compute::ArithmeticOperation::SQUARED_DIFF</a></div><div class="ttdeci">@ SQUARED_DIFF</div><div class="ttdoc">(x - y)^2</div></div>
<div class="ttc" id="a_auto_configuration_8h_xhtml"><div class="ttname"><a href="_auto_configuration_8h.xhtml">AutoConfiguration.h</a></div></div>
<div class="ttc" id="a_activation_function_utils_8h_xhtml"><div class="ttname"><a href="_activation_function_utils_8h.xhtml">ActivationFunctionUtils.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea241dd841abade20fcb27b8a9f494e1eb"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea241dd841abade20fcb27b8a9f494e1eb">arm_compute::ArithmeticOperation::SUB</a></div><div class="ttdeci">@ SUB</div><div class="ttdoc">(x - y)</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">arm_compute::ArithmeticOperation::DIV</a></div><div class="ttdeci">@ DIV</div><div class="ttdoc">(x / y)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a30ca5bdbb60ee281d7f1ab34f7a4ee40"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a30ca5bdbb60ee281d7f1ab34f7a4ee40">arm_compute::Window::first_slice_window_3D</a></div><div class="ttdeci">Window first_slice_window_3D() const</div><div class="ttdoc">First 3D slice of the window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00306">Window.h:306</a></div></div>
<div class="ttc" id="a_c_l_validate_8h_xhtml"><div class="ttname"><a href="_c_l_validate_8h.xhtml">CLValidate.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a56b9e25c2e8731ca5488e7b3ccd66f58"><div class="ttname"><a href="namespacearm__compute.xhtml#a56b9e25c2e8731ca5488e7b3ccd66f58">arm_compute::string_from_data_layout</a></div><div class="ttdeci">const std::string &amp; string_from_data_layout(DataLayout dl)</div><div class="ttdoc">Convert a data layout identity into a string.</div><div class="ttdef"><b>Definition:</b> <a href="_data_layout_utils_8cpp_source.xhtml#l00030">DataLayoutUtils.cpp:30</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a545eeda2eaa3f5a54345ce8169e21184"><div class="ttname"><a href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">arm_compute::get_cl_type_from_data_type</a></div><div class="ttdeci">std::string get_cl_type_from_data_type(const DataType &amp;dt)</div><div class="ttdoc">Translates a tensor data type to the appropriate OpenCL type.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00041">CLHelpers.cpp:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a8cb8460f7fedf906ecab5621af891707a3a2d5fe857d8f9541136a124c2edec6c"><div class="ttname"><a href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707a3a2d5fe857d8f9541136a124c2edec6c">arm_compute::LogicalOperation::Or</a></div><div class="ttdeci">@ Or</div><div class="ttdoc">Logical Or ||.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_kernel_xhtml_a28f5847162f352444c6ac1825d0e99c7"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a28f5847162f352444c6ac1825d0e99c7">arm_compute::ICLKernel::add_3D_tensor_argument</a></div><div class="ttdeci">void add_3D_tensor_argument(unsigned int &amp;idx, const ICLTensor *tensor, const Window &amp;window)</div><div class="ttdoc">Add the passed 3D tensor's parameters to the object's kernel's arguments starting from the index idx.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_i_c_l_kernel_8h_source.xhtml#l00234">ICLKernel.h:234</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1misc_1_1_i_cloneable_xhtml_a4d10e5012a872e7f78f2b539b673049d"><div class="ttname"><a href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">arm_compute::misc::ICloneable::clone</a></div><div class="ttdeci">virtual std::unique_ptr&lt; T &gt; clone() const =0</div><div class="ttdoc">Provide a clone of the current object of class T.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_aec65e090c2276e8c8f8dffb6e3edd178"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">arm_compute::ActivationLayerInfo::a</a></div><div class="ttdeci">float a() const</div><div class="ttdoc">Get the alpha value.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00089">ActivationLayerInfo.h:89</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6bd175f94838df9aed06d32452df92d3"><div class="ttname"><a href="namespacearm__compute.xhtml#a6bd175f94838df9aed06d32452df92d3">arm_compute::set_shape_if_empty</a></div><div class="ttdeci">bool set_shape_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape)</div><div class="ttdoc">Set the shape to the specified value if the current assignment is empty.</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00095">AutoConfiguration.h:95</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6df16a1b3b5af590a14f55e983d3428ea92aed3228e2f4b29698517b9f0a3689e"><div class="ttname"><a href="namespacearm__compute.xhtml#a6df16a1b3b5af590a14f55e983d3428ea92aed3228e2f4b29698517b9f0a3689e">arm_compute::ELEMENTWISE</a></div><div class="ttdeci">@ ELEMENTWISE</div><div class="ttdoc">Elementwise CL kernel type.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_types_8h_source.xhtml#l00083">CLTypes.h:83</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00245">Error.h:245</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6f"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">arm_compute::ConvertPolicy</a></div><div class="ttdeci">ConvertPolicy</div><div class="ttdoc">Policy to handle integer overflow.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00353">Types.h:353</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a7be62dcb9603165af78bca6f2ca8ec15"><div class="ttname"><a href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">arm_compute::adjust_vec_size</a></div><div class="ttdeci">unsigned int adjust_vec_size(unsigned int vec_size, size_t dim0)</div><div class="ttdoc">Returns the adjusted vector size in case it is less than the input's first dimension,...</div><div class="ttdef"><b>Definition:</b> <a href="_adjust_vec_size_8h_source.xhtml#l00038">AdjustVecSize.h:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a7d5ebe14ba3526c8e2ed3c6949669f9c"><div class="ttname"><a href="namespacearm__compute.xhtml#a7d5ebe14ba3526c8e2ed3c6949669f9c">arm_compute::has_padding_changed</a></div><div class="ttdeci">bool has_padding_changed(const std::unordered_map&lt; const ITensorInfo *, PaddingSize &gt; &amp;padding_map)</div><div class="ttdoc">Check if the previously stored padding info has changed after configuring a kernel.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00492">Utils.cpp:492</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_af5982a092e9eb743fce2d6392bdd8897"><div class="ttname"><a href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">arm_compute::is_data_type_float</a></div><div class="ttdeci">bool is_data_type_float(DataType dt)</div><div class="ttdoc">Check if a given data type is of floating point type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00304">DataTypeUtils.h:304</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::DataType::S32</a></div><div class="ttdeci">@ S32</div><div class="ttdoc">signed 32-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_kernel_xhtml_ab9f813c25ed75ea7b7ac2fa3926a8f55"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_kernel.xhtml#ab9f813c25ed75ea7b7ac2fa3926a8f55">arm_compute::ICLKernel::lws_hint</a></div><div class="ttdeci">cl::NDRange lws_hint() const</div><div class="ttdoc">Return the Local-Workgroup-Size hint.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_i_c_l_kernel_8h_source.xhtml#l00383">ICLKernel.h:383</a></div></div>
<div class="ttc" id="a_cl_elementwise_kernel_8h_xhtml"><div class="ttname"><a href="_cl_elementwise_kernel_8h.xhtml">ClElementwiseKernel.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">arm_compute::ArithmeticOperation::ADD</a></div><div class="ttdeci">@ ADD</div><div class="ttdoc">(x + y)</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel_xhtml_a1d934244dc8bb3900ecde43707e013fe"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml#a1d934244dc8bb3900ecde43707e013fe">arm_compute::opencl::kernels::ClLogicalBinaryKernel::validate</a></div><div class="ttdeci">static Status validate(LogicalOperation op, const ITensorInfo *src1, const ITensorInfo *src2, const ITensorInfo *dst)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_8cpp_source.xhtml#l00395">ClElementwiseKernel.cpp:395</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel_xhtml_aebf6a0c58aca10e93cda09f6dfad4583"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml#aebf6a0c58aca10e93cda09f6dfad4583">arm_compute::opencl::kernels::ClSaturatedArithmeticKernel::validate</a></div><div class="ttdeci">static Status validate(ArithmeticOperation op, const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, const ConvertPolicy &amp;policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_8cpp_source.xhtml#l00471">ClElementwiseKernel.cpp:471</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5f2b06a162f0ca4e7bc8caac9525197f"><div class="ttname"><a href="namespacearm__compute.xhtml#a5f2b06a162f0ca4e7bc8caac9525197f">arm_compute::string_from_activation_func</a></div><div class="ttdeci">const std::string &amp; string_from_activation_func(const ActivationFunction &amp;act)</div><div class="ttdoc">Translates a given activation function to a string.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_function_utils_8cpp_source.xhtml#l00031">ActivationFunctionUtils.cpp:31</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0bee325b210f81bb89fe1f9e15badf9c"><div class="ttname"><a href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">arm_compute::is_data_type_quantized</a></div><div class="ttdeci">bool is_data_type_quantized(DataType dt)</div><div class="ttdoc">Check if a given data type is of quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00324">DataTypeUtils.h:324</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_a58838fbdce5b5330d84e62329b45ff7d"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a58838fbdce5b5330d84e62329b45ff7d">arm_compute::TensorShape::broadcast_shape</a></div><div class="ttdeci">static TensorShape broadcast_shape(const Shapes &amp;...shapes)</div><div class="ttdoc">If shapes are broadcast compatible, return the broadcasted shape.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00214">TensorShape.h:214</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_build_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml">arm_compute::CLBuildOptions</a></div><div class="ttdoc">Build options.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00038">CLCompileContext.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel_xhtml_a7b4122b6331f1729682a96c87c6a2db8"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml#a7b4122b6331f1729682a96c87c6a2db8">arm_compute::opencl::kernels::ClArithmeticKernel::configure</a></div><div class="ttdeci">void configure(const ClCompileContext &amp;compile_context, ArithmeticOperation op, ITensorInfo *src1, ITensorInfo *src2, ITensorInfo *dst, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of ClArithmeticKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_8cpp_source.xhtml#l00522">ClElementwiseKernel.cpp:522</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a8cb8460f7fedf906ecab5621af891707aa74c05d080620f087c4e523977230666"><div class="ttname"><a href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707aa74c05d080620f087c4e523977230666">arm_compute::LogicalOperation::Not</a></div><div class="ttdeci">@ Not</div><div class="ttdoc">Logical Not !</div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_af0d754a1bb2ae68b5d2f1aacc1794817"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#af0d754a1bb2ae68b5d2f1aacc1794817">arm_compute::TensorShape::collapsed_from</a></div><div class="ttdeci">TensorShape collapsed_from(size_t start) const</div><div class="ttdoc">Return a copy with collapsed dimensions starting from a given point.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00164">TensorShape.h:164</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_a02a00a5d20986f3a7ab72b9c86be3a54"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">arm_compute::ActivationLayerInfo::b</a></div><div class="ttdeci">float b() const</div><div class="ttdoc">Get the beta value.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00094">ActivationLayerInfo.h:94</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a8cb8460f7fedf906ecab5621af891707ac33315685a0cba3ce53be378b3c7874b"><div class="ttname"><a href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707ac33315685a0cba3ce53be378b3c7874b">arm_compute::LogicalOperation::And</a></div><div class="ttdeci">@ And</div><div class="ttdoc">Logical And &amp;&amp;.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_dimensions_xhtml_a80a5f2d6e3a697c9aad893a3b4242615"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a80a5f2d6e3a697c9aad893a3b4242615">arm_compute::Dimensions::num_dimensions</a></div><div class="ttdeci">unsigned int num_dimensions() const</div><div class="ttdoc">Returns the effective dimensionality of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00142">Dimensions.h:142</a></div></div>
<div class="ttc" id="a_cl_im2_col_kernel_8cpp_xhtml_a4e45c1f5e4280813a78a77dda71d8799"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a></div><div class="ttdeci">unsigned int num_elems_processed_per_iteration</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00060">ClIm2ColKernel.cpp:60</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a456cc0b26fb17eee9942c8970f1c71db"><div class="ttname"><a href="namespacearm__compute.xhtml#a456cc0b26fb17eee9942c8970f1c71db">arm_compute::get_padding_info</a></div><div class="ttdeci">std::unordered_map&lt; const ITensorInfo *, PaddingSize &gt; get_padding_info(std::initializer_list&lt; const ITensorInfo * &gt; infos)</div><div class="ttdoc">Stores padding information before configuring a kernel.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00477">Utils.cpp:477</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a548131b3d37da47a2e9d32111c88dfe1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">arm_compute::test::validation::reference::slice</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; slice(const SimpleTensor&lt; T &gt; &amp;src, Coordinates starts, Coordinates ends)</div><div class="ttdef"><b>Definition:</b> <a href="_slice_operations_8cpp_source.xhtml#l00038">SliceOperations.cpp:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a8cb8460f7fedf906ecab5621af891707"><div class="ttname"><a href="namespacearm__compute.xhtml#a8cb8460f7fedf906ecab5621af891707">arm_compute::LogicalOperation</a></div><div class="ttdeci">LogicalOperation</div><div class="ttdoc">List of supported logical operations.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_types_8h_source.xhtml#l00030">KernelTypes.h:30</a></div></div>
<div class="ttc" id="acore_2_c_l_2_c_l_helpers_8h_xhtml"><div class="ttname"><a href="core_2_c_l_2_c_l_helpers_8h.xhtml">CLHelpers.h</a></div></div>
<div class="ttc" id="a_cl_im2_col_kernel_8cpp_xhtml_a3e76c95cfc49454dbfff42e02d25ccb8"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a></div><div class="ttdeci">std::set&lt; std::string &gt; build_options</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00059">ClIm2ColKernel.cpp:59</a></div></div>
<div class="ttc" id="a_cl_im2_col_kernel_8cpp_xhtml_a624a24e6d361fe7b8b8b2f6b375683a4"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a></div><div class="ttdeci">std::string kernel_name</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00058">ClIm2ColKernel.cpp:58</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6e51ab3789678d3e0b0b72178dd6c4c6"><div class="ttname"><a href="namespacearm__compute.xhtml#a6e51ab3789678d3e0b0b72178dd6c4c6">arm_compute::enqueue</a></div><div class="ttdeci">void enqueue(cl::CommandQueue &amp;queue, ICLKernel &amp;kernel, const Window &amp;window, const cl::NDRange &amp;lws_hint=CLKernelLibrary::get().default_ndrange(), bool use_dummy_work_items=false)</div><div class="ttdoc">Add the kernel to the command queue with the given window.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_kernel_8cpp_source.xhtml#l00033">ICLKernel.cpp:33</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8ae"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8ae">arm_compute::ArithmeticOperation</a></div><div class="ttdeci">ArithmeticOperation</div><div class="ttdoc">Available element-wise operations.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00421">Types.h:421</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_cf895c1ed808af158264b2f3d8d7f8f0.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_3fd6b49eea07a5dd89d90722d8b4e77f.xhtml">cl</a></li><li class="navelem"><a class="el" href="dir_d31afe59158d6d6f352f20563e96492f.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_cl_elementwise_kernel_8cpp.xhtml">ClElementwiseKernel.cpp</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:22 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
