<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClKernelLibrary Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClKernelLibrary Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml" title="ClKernelLibrary contains all the OpenCL kernels that are used throughout the library.">ClKernelLibrary</a> contains all the OpenCL kernels that are used throughout the library.  
 <a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="src_2gpu_2cl_2_c_l_kernel_library_8h_source.xhtml">ClKernelLibrary.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1opencl_1_1_cl_kernel_library_1_1_cl_program_info.xhtml">ClProgramInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure to encapsulte program related information.  <a href="structarm__compute_1_1opencl_1_1_cl_kernel_library_1_1_cl_program_info.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae9f578f0e7a9fa45b61090426913b08e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ae9f578f0e7a9fa45b61090426913b08e">set_kernel_path</a> (std::string <a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">kernel_path</a>)</td></tr>
<tr class="memdesc:ae9f578f0e7a9fa45b61090426913b08e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the path that the kernels reside in.  <a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ae9f578f0e7a9fa45b61090426913b08e">More...</a><br /></td></tr>
<tr class="separator:ae9f578f0e7a9fa45b61090426913b08e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5728371dec76ff8493cfe926700ba37d"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">kernel_path</a> () const</td></tr>
<tr class="memdesc:a5728371dec76ff8493cfe926700ba37d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the path that the kernels reside in.  <a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">More...</a><br /></td></tr>
<tr class="separator:a5728371dec76ff8493cfe926700ba37d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b1f019faeec045aa2bb8dcf7cfa95c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1opencl_1_1_cl_kernel_library_1_1_cl_program_info.xhtml">ClProgramInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a1b1f019faeec045aa2bb8dcf7cfa95c0">program</a> (const std::string &amp;<a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a>) const</td></tr>
<tr class="memdesc:a1b1f019faeec045aa2bb8dcf7cfa95c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the source of the selected program.  <a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a1b1f019faeec045aa2bb8dcf7cfa95c0">More...</a><br /></td></tr>
<tr class="separator:a1b1f019faeec045aa2bb8dcf7cfa95c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab28520b0811ac22a5bc07050bf40e483"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a> (const std::string &amp;<a class="el" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>) const</td></tr>
<tr class="memdesc:ab28520b0811ac22a5bc07050bf40e483"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the program name given a kernel name.  <a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">More...</a><br /></td></tr>
<tr class="separator:ab28520b0811ac22a5bc07050bf40e483"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9496f99209434a5fe2c79069220168da"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml">ClKernelLibrary</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">get</a> ()</td></tr>
<tr class="memdesc:a9496f99209434a5fe2c79069220168da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the KernelLibrary singleton.  <a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">More...</a><br /></td></tr>
<tr class="separator:a9496f99209434a5fe2c79069220168da"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml" title="ClKernelLibrary contains all the OpenCL kernels that are used throughout the library.">ClKernelLibrary</a> contains all the OpenCL kernels that are used throughout the library. </p>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> library is a singleton to reduce memory requirements </dd>
<dd>
Sole responsibility is just to provide access to the kernel string, does not perform any compilation and relevant tasks </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2gpu_2cl_2_c_l_kernel_library_8h_source.xhtml#l00041">41</a> of file <a class="el" href="src_2gpu_2cl_2_c_l_kernel_library_8h_source.xhtml">ClKernelLibrary.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a9496f99209434a5fe2c79069220168da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9496f99209434a5fe2c79069220168da">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml">ClKernelLibrary</a> &amp; get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access the KernelLibrary singleton. </p>
<dl class="section return"><dt>Returns</dt><dd>The KernelLibrary instance </dd></dl>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00975">975</a> of file <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml">ClKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;{</div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;    <span class="keyword">static</span> ClKernelLibrary _kernel_library;</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;    <span class="keywordflow">return</span> _kernel_library;</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cl_kernel_runtime_8cpp_source.xhtml#l00042">ClKernelRuntime::configure()</a>, and <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00409">arm_compute::create_kernel()</a>.</p>

</div>
</div>
<a id="a5728371dec76ff8493cfe926700ba37d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5728371dec76ff8493cfe926700ba37d">&#9670;&nbsp;</a></span>kernel_path()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::string &amp; kernel_path </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the path that the kernels reside in. </p>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l01002">1002</a> of file <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml">ClKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;{</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    <span class="keywordflow">return</span> _kernel_path;</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cl_kernel_runtime_8cpp_source.xhtml#l00042">ClKernelRuntime::configure()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00409">arm_compute::create_kernel()</a>, and <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00996">ClKernelLibrary::set_kernel_path()</a>.</p>

</div>
</div>
<a id="a1b1f019faeec045aa2bb8dcf7cfa95c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b1f019faeec045aa2bb8dcf7cfa95c0">&#9670;&nbsp;</a></span>program()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1opencl_1_1_cl_kernel_library_1_1_cl_program_info.xhtml">ClKernelLibrary::ClProgramInfo</a> program </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>program_name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the source of the selected program. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">program_name</td><td><a class="el" href="classarm__compute_1_1_program.xhtml" title="Program class.">Program</a> name</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pair with the source (false) or the binary (true), of the selected program </dd></dl>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l01007">1007</a> of file <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml">ClKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;{</div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;<span class="preprocessor">#ifdef EMBEDDED_KERNELS</span></div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_COMPRESSED_KERNELS</span></div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> inflatted_program_source_it = _decompressed_source_map.find(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a>);</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;    <span class="keywordflow">if</span> (inflatted_program_source_it != _decompressed_source_map.end())</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    {</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;        <span class="keywordflow">return</span> ClProgramInfo{inflatted_program_source_it-&gt;second, <span class="keyword">false</span>};</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;    }</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_COMPRESSED_KERNELS */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160; </div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> program_source_it = _program_source_map.find(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a>);</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;    <span class="keywordflow">if</span> (program_source_it == _program_source_map.end())</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;    {</div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;        <a class="code" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(<span class="stringliteral">&quot;Embedded program for %s does not exist.&quot;</span>, <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a>.c_str());</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    }</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    std::string program_source = program_source_it-&gt;second;</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160; </div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_COMPRESSED_KERNELS</span></div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;    std::string decompressed_program_source = decompress_zlib(decode_base64(program_source_it-&gt;second));</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(decompressed_program_source.empty(), <span class="stringliteral">&quot;Cannot de-compress requested program&quot;</span>);</div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;    _decompressed_source_map.insert(std::make_pair(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a>, decompressed_program_source));</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;    program_source = std::move(decompressed_program_source);</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_COMPRESSED_KERNELS */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160; </div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;    <span class="keywordflow">return</span> ClProgramInfo{program_source, <span class="keyword">false</span>};</div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* EMBEDDED_KERNELS */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    <span class="comment">// Check for binary</span></div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;    std::string source_name = _kernel_path + <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a>;</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;    std::string binary_name = source_name + <span class="stringliteral">&quot;bin&quot;</span>;</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    std::string program_source{};</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;    <span class="keywordtype">bool</span>        is_binary = <span class="keyword">false</span>;</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160; </div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    <span class="keywordflow">if</span> (std::ifstream(binary_name).is_open())</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;    {</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;        program_source = <a class="code" href="namespacearm__compute.xhtml#ae0d288429eb20baf6da6109f3a21e6bb">read_file</a>(binary_name, <span class="keyword">true</span>);</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;        is_binary      = <span class="keyword">true</span>;</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    }</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::ifstream(source_name).is_open())</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;    {</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;        program_source = <a class="code" href="namespacearm__compute.xhtml#ae0d288429eb20baf6da6109f3a21e6bb">read_file</a>(source_name, <span class="keyword">false</span>);</div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;    }</div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;    {</div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;        <a class="code" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(<span class="stringliteral">&quot;Kernel file %s does not exist.&quot;</span>, source_name.c_str());</div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;    }</div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160; </div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    <span class="keywordflow">return</span> ClProgramInfo{program_source, is_binary};</div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* EMBEDDED_KERNELS */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_error_8h_source.xhtml#l00348">ARM_COMPUTE_ERROR_VAR</a>, <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00981">ClKernelLibrary::program_name()</a>, and <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00040">arm_compute::read_file()</a>.</p>

<p class="reference">Referenced by <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00046">CLKernelLibrary::create_kernel()</a>, and <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00409">arm_compute::create_kernel()</a>.</p>

</div>
</div>
<a id="ab28520b0811ac22a5bc07050bf40e483"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab28520b0811ac22a5bc07050bf40e483">&#9670;&nbsp;</a></span>program_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string program_name </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>kernel_name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the program name given a kernel name. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_program.xhtml" title="Program class.">Program</a> name </dd></dl>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00981">981</a> of file <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml">ClKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;{</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    <span class="comment">// Find which program contains the kernel</span></div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;    <span class="keyword">auto</span> kernel_program_it = _kernel_program_map.find(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>);</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160; </div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;    <span class="keywordflow">if</span> (_kernel_program_map.end() == kernel_program_it)</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;    {</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;        <a class="code" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(<span class="stringliteral">&quot;Kernel %s not found in the CLKernelLibrary&quot;</span>, <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>.c_str());</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;    }</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160; </div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;    <span class="keyword">const</span> std::string <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a> = kernel_program_it-&gt;second;</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160; </div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a>;</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00348">ARM_COMPUTE_ERROR_VAR</a>, and <a class="el" href="_cl_im2_col_kernel_8cpp_source.xhtml#l00058">kernel_name</a>.</p>

<p class="reference">Referenced by <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00046">CLKernelLibrary::create_kernel()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00409">arm_compute::create_kernel()</a>, and <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l01007">ClKernelLibrary::program()</a>.</p>

</div>
</div>
<a id="ae9f578f0e7a9fa45b61090426913b08e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9f578f0e7a9fa45b61090426913b08e">&#9670;&nbsp;</a></span>set_kernel_path()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_kernel_path </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>kernel_path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the path that the kernels reside in. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_path</td><td>Path of the kernel </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00996">996</a> of file <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml">ClKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;{</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    _kernel_path = std::move(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">kernel_path</a>);</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    _kernel_path += <span class="stringliteral">&quot;/&quot;</span>;</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l01002">ClKernelLibrary::kernel_path()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gpu/cl/<a class="el" href="src_2gpu_2cl_2_c_l_kernel_library_8h_source.xhtml">ClKernelLibrary.h</a></li>
<li>src/gpu/cl/<a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml">ClKernelLibrary.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_error_8h_xhtml_abd040a16dc0dbc75733e07aff93048a8"><div class="ttname"><a href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_VAR(msg,...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00348">Error.h:348</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae0d288429eb20baf6da6109f3a21e6bb"><div class="ttname"><a href="namespacearm__compute.xhtml#ae0d288429eb20baf6da6109f3a21e6bb">arm_compute::read_file</a></div><div class="ttdeci">std::string read_file(const std::string &amp;filename, bool binary)</div><div class="ttdoc">Load an entire file in memory.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00040">Utils.cpp:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_ab28520b0811ac22a5bc07050bf40e483"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">arm_compute::opencl::ClKernelLibrary::program_name</a></div><div class="ttdeci">std::string program_name(const std::string &amp;kernel_name) const</div><div class="ttdoc">Returns the program name given a kernel name.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00981">ClKernelLibrary.cpp:981</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_a5728371dec76ff8493cfe926700ba37d"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">arm_compute::opencl::ClKernelLibrary::kernel_path</a></div><div class="ttdeci">const std::string &amp; kernel_path() const</div><div class="ttdoc">Gets the path that the kernels reside in.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l01002">ClKernelLibrary.cpp:1002</a></div></div>
<div class="ttc" id="a_cl_im2_col_kernel_8cpp_xhtml_a624a24e6d361fe7b8b8b2f6b375683a4"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a></div><div class="ttdeci">std::string kernel_name</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00058">ClIm2ColKernel.cpp:58</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1opencl.xhtml">opencl</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml">ClKernelLibrary</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
