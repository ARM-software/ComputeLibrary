<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClWorkload Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">ClWorkload Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Workload for Cl backend.  
 <a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ClWorkload:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload__coll__graph.svg" width="384" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2201c809d539f18b47839af02840b662"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a2201c809d539f18b47839af02840b662">add_workload_tensor</a> (<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *info, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a> memory_type, const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a>, const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a> &amp;kernel_arg, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> merge_point)</td></tr>
<tr class="separator:a2201c809d539f18b47839af02840b662"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa273e2e7935d4777a7f2e7491b693759"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a3fb003addd6c323793f8251ef3708d5b">UnitWorkId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa273e2e7935d4777a7f2e7491b693759">add_unit_workload</a> (<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a> stage, const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml">ClKernelCode</a> &amp;code, const std::vector&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> &gt; &amp;inputs, const std::vector&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> &gt; &amp;outputs)</td></tr>
<tr class="separator:aa273e2e7935d4777a7f2e7491b693759"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml">IWorkload</a></td></tr>
<tr class="memitem:a8ad40df708a08d167fb958eb150bba73 inherit pub_methods_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a8ad40df708a08d167fb958eb150bba73">IWorkload</a> ()=default</td></tr>
<tr class="separator:a8ad40df708a08d167fb958eb150bba73 inherit pub_methods_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e9b96ddd7c10d336bb6da943bcf3640 inherit pub_methods_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a2e9b96ddd7c10d336bb6da943bcf3640">~IWorkload</a> ()=default</td></tr>
<tr class="separator:a2e9b96ddd7c10d336bb6da943bcf3640 inherit pub_methods_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:aa28ea900b6115f17781179e998959e23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa28ea900b6115f17781179e998959e23">context</a> {}</td></tr>
<tr class="memdesc:aa28ea900b6115f17781179e998959e23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Workload context.  <a href="#aa28ea900b6115f17781179e998959e23">More...</a><br /></td></tr>
<tr class="separator:aa28ea900b6115f17781179e998959e23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb6cd783cc38a238e203a198229d1454"><td class="memItemLeft" align="right" valign="top">std::map&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a3fb003addd6c323793f8251ef3708d5b">UnitWorkId</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml">ClUnitWorkload</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#afb6cd783cc38a238e203a198229d1454">unit_workloads</a> {}</td></tr>
<tr class="memdesc:afb6cd783cc38a238e203a198229d1454"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unit workloads to run.  <a href="#afb6cd783cc38a238e203a198229d1454">More...</a><br /></td></tr>
<tr class="separator:afb6cd783cc38a238e203a198229d1454"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0171e631117d8976f8f0c7d532e7a4c4"><td class="memItemLeft" align="right" valign="top">std::map&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml">ClWorkloadTensor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a0171e631117d8976f8f0c7d532e7a4c4">tensors</a> {}</td></tr>
<tr class="memdesc:a0171e631117d8976f8f0c7d532e7a4c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Workload tensors.  <a href="#a0171e631117d8976f8f0c7d532e7a4c4">More...</a><br /></td></tr>
<tr class="separator:a0171e631117d8976f8f0c7d532e7a4c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bdd9d30fbc23162fdfc14df8822fee5"><td class="memItemLeft" align="right" valign="top">std::map&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#aebc5dc6e56fe725378002f1454d09978">OpTensor::Id</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a7bdd9d30fbc23162fdfc14df8822fee5">op_tensor_id_lut</a> {}</td></tr>
<tr class="memdesc:a7bdd9d30fbc23162fdfc14df8822fee5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Map from <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml" title="A descriptor of ClWorkload Tensors. ">ClWorkloadTensor</a> to SRC and DST <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="Operator Handle This can be used to further modify an existing operator. ">Operator</a> Tensors (no need to store "intermediate" <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="Operator Handle This can be used to further modify an existing operator. ">Operator</a> Tensors)  <a href="#a7bdd9d30fbc23162fdfc14df8822fee5">More...</a><br /></td></tr>
<tr class="separator:a7bdd9d30fbc23162fdfc14df8822fee5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae29aa2d4ae440022daaed1107eb306b3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> {}</td></tr>
<tr class="memdesc:ae29aa2d4ae440022daaed1107eb306b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">For compatibility with the <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml" title="Base class for all async functions. ">IOperator</a> validate method.  <a href="#ae29aa2d4ae440022daaed1107eb306b3">More...</a><br /></td></tr>
<tr class="separator:ae29aa2d4ae440022daaed1107eb306b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload')"><img src="closed.png" alt="-"/>&#160;Data Fields inherited from <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml">IWorkload</a></td></tr>
<tr class="memitem:adda92e981d244d14d1266f9746bccc6d inherit pub_attribs_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a> {}</td></tr>
<tr class="memdesc:adda92e981d244d14d1266f9746bccc6d inherit pub_attribs_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dependency graph of the workload tensors and the unit workloads.  <a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">More...</a><br /></td></tr>
<tr class="separator:adda92e981d244d14d1266f9746bccc6d inherit pub_attribs_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:aa5fd21abff6dc0da40b7c7d818cca807"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa5fd21abff6dc0da40b7c7d818cca807">operator==</a> (const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;workload0, const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;workload1)</td></tr>
<tr class="separator:aa5fd21abff6dc0da40b7c7d818cca807"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td colspan="2" onclick="javascript:toggleInherit('pub_types_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml">IWorkload</a></td></tr>
<tr class="memitem:a3fb003addd6c323793f8251ef3708d5b inherit pub_types_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a3fb003addd6c323793f8251ef3708d5b">UnitWorkId</a> = <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">UnitWorkload::Id</a></td></tr>
<tr class="separator:a3fb003addd6c323793f8251ef3708d5b inherit pub_types_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a738a4655df65d4e18d9cd5f63fe320cd inherit pub_types_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> = <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">WorkloadTensor::Id</a></td></tr>
<tr class="separator:a738a4655df65d4e18d9cd5f63fe320cd inherit pub_types_structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Workload for Cl backend. </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="dynamic_fusion_2cl_fused_conv2d_elementwise_add_8cpp-example.xhtml#_a33">dynamic_fusion/cl_fused_conv2d_elementwise_add.cpp</a>.</dd>
</dl>
<p class="definition">Definition at line <a class="el" href="_cl_workload_8h_source.xhtml#l00173">173</a> of file <a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="aa273e2e7935d4777a7f2e7491b693759"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa273e2e7935d4777a7f2e7491b693759">&#9670;&nbsp;</a></span>add_unit_workload()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a3fb003addd6c323793f8251ef3708d5b">UnitWorkId</a> add_unit_workload </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a>&#160;</td>
          <td class="paramname"><em>stage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml">ClKernelCode</a> &amp;&#160;</td>
          <td class="paramname"><em>code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>outputs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_workload_8h_source.xhtml#l00184">184</a> of file <a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00170">arm_compute::experimental::dynamic_fusion::generate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keyword">auto</span> op            = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a5922b6c22c15729162e749f06f7f518c">add_operator</a>(inputs, outputs);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keyword">auto</span> <span class="keywordtype">id</span>            = op.second;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#afb6cd783cc38a238e203a198229d1454">unit_workloads</a>[id] = ClUnitWorkload(<span class="keywordtype">id</span>, stage, code);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">return</span> id;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    }</div><div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml_adda92e981d244d14d1266f9746bccc6d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">arm_compute::experimental::dynamic_fusion::IWorkload::graph</a></div><div class="ttdeci">DependencyGraph graph</div><div class="ttdoc">Dependency graph of the workload tensors and the unit workloads. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00125">IWorkload.h:125</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a5922b6c22c15729162e749f06f7f518c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a5922b6c22c15729162e749f06f7f518c">arm_compute::experimental::dynamic_fusion::DependencyGraph::add_operator</a></div><div class="ttdeci">std::pair&lt; Status, DependencyGraph::Id &gt; add_operator(const std::vector&lt; Id &gt; &amp;inputs, const std::vector&lt; Id &gt; &amp;outputs)</div><div class="ttdoc">Add a new operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00103">DependencyGraph.cpp:103</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_afb6cd783cc38a238e203a198229d1454"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#afb6cd783cc38a238e203a198229d1454">arm_compute::experimental::dynamic_fusion::ClWorkload::unit_workloads</a></div><div class="ttdeci">std::map&lt; UnitWorkId, ClUnitWorkload &gt; unit_workloads</div><div class="ttdoc">Unit workloads to run. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00199">ClWorkload.h:199</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2201c809d539f18b47839af02840b662"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2201c809d539f18b47839af02840b662">&#9670;&nbsp;</a></span>add_workload_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> add_workload_tensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>&#160;</td>
          <td class="paramname"><em>memory_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>memory_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>kernel_arg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a>&#160;</td>
          <td class="paramname"><em>merge_point</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_workload_8h_source.xhtml#l00175">175</a> of file <a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00170">arm_compute::experimental::dynamic_fusion::generate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    {</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> <span class="keywordtype">id</span> = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a21d46af8bdb7e587be804b405b63ac3d">add_tensor</a>(merge_point);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a0171e631117d8976f8f0c7d532e7a4c4">tensors</a>.find(<span class="keywordtype">id</span>) == <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a0171e631117d8976f8f0c7d532e7a4c4">tensors</a>.end())</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        {</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a0171e631117d8976f8f0c7d532e7a4c4">tensors</a>[id] = ClWorkloadTensor(<span class="keywordtype">id</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, memory_type, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a>, kernel_arg);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">return</span> id;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a21d46af8bdb7e587be804b405b63ac3d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a21d46af8bdb7e587be804b405b63ac3d">arm_compute::experimental::dynamic_fusion::DependencyGraph::add_tensor</a></div><div class="ttdeci">Id add_tensor(Id merge_tensor=empty_id())</div><div class="ttdoc">Add a new tensor. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00061">DependencyGraph.cpp:61</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml_adda92e981d244d14d1266f9746bccc6d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">arm_compute::experimental::dynamic_fusion::IWorkload::graph</a></div><div class="ttdeci">DependencyGraph graph</div><div class="ttdoc">Dependency graph of the workload tensors and the unit workloads. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00125">IWorkload.h:125</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_a0171e631117d8976f8f0c7d532e7a4c4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a0171e631117d8976f8f0c7d532e7a4c4">arm_compute::experimental::dynamic_fusion::ClWorkload::tensors</a></div><div class="ttdeci">std::map&lt; Tid, ClWorkloadTensor &gt; tensors</div><div class="ttdoc">Workload tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00200">ClWorkload.h:200</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_abd1839b751c3e3abfec78177d70b8cb4"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a></div><div class="ttdeci">AuxMemoryInfo memory_info</div><div class="ttdoc">Memory requirement. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00068">ClWorkloadRuntime.cpp:68</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml_a738a4655df65d4e18d9cd5f63fe320cd"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">arm_compute::experimental::dynamic_fusion::IWorkload::Tid</a></div><div class="ttdeci">WorkloadTensor::Id Tid</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00122">IWorkload.h:122</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="aa5fd21abff6dc0da40b7c7d818cca807"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5fd21abff6dc0da40b7c7d818cca807">&#9670;&nbsp;</a></span>operator==</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;&#160;</td>
          <td class="paramname"><em>workload0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;&#160;</td>
          <td class="paramname"><em>workload1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_workload_8h_source.xhtml#l00191">191</a> of file <a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keywordflow">return</span> std::make_tuple(</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                   workload0.graph, workload0.context, workload0.unit_workloads, workload0.tensors, workload0.op_tensor_id_lut)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;               == std::make_tuple(</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                   workload1.graph, workload1.context, workload1.unit_workloads, workload1.tensors, workload1.op_tensor_id_lut);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="aa28ea900b6115f17781179e998959e23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa28ea900b6115f17781179e998959e23">&#9670;&nbsp;</a></span>context</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a> context {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Workload context. </p>

<p class="definition">Definition at line <a class="el" href="_cl_workload_8h_source.xhtml#l00198">198</a> of file <a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_workload_8cpp_source.xhtml#l00036">arm_compute::experimental::dynamic_fusion::build()</a>, and <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00170">arm_compute::experimental::dynamic_fusion::generate()</a>.</p>

</div>
</div>
<a id="a7bdd9d30fbc23162fdfc14df8822fee5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bdd9d30fbc23162fdfc14df8822fee5">&#9670;&nbsp;</a></span>op_tensor_id_lut</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt;<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#aebc5dc6e56fe725378002f1454d09978">OpTensor::Id</a>&gt; op_tensor_id_lut {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Map from <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml" title="A descriptor of ClWorkload Tensors. ">ClWorkloadTensor</a> to SRC and DST <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="Operator Handle This can be used to further modify an existing operator. ">Operator</a> Tensors (no need to store "intermediate" <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="Operator Handle This can be used to further modify an existing operator. ">Operator</a> Tensors) </p>

<p class="definition">Definition at line <a class="el" href="_cl_workload_8h_source.xhtml#l00201">201</a> of file <a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00104">arm_compute::experimental::dynamic_fusion::bind_tensors()</a>, and <a class="el" href="_cl_workload_8cpp_source.xhtml#l00036">arm_compute::experimental::dynamic_fusion::build()</a>.</p>

</div>
</div>
<a id="ae29aa2d4ae440022daaed1107eb306b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae29aa2d4ae440022daaed1107eb306b3">&#9670;&nbsp;</a></span>status</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> status {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>For compatibility with the <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml" title="Base class for all async functions. ">IOperator</a> validate method. </p>
<p>Store if the workload is valid or not. </p>

<p class="definition">Definition at line <a class="el" href="_cl_workload_8h_source.xhtml#l00202">202</a> of file <a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_workload_8cpp_source.xhtml#l00036">arm_compute::experimental::dynamic_fusion::build()</a>, and <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00203">ClCompositeOperator::validate()</a>.</p>

</div>
</div>
<a id="a0171e631117d8976f8f0c7d532e7a4c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0171e631117d8976f8f0c7d532e7a4c4">&#9670;&nbsp;</a></span>tensors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt;<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml">ClWorkloadTensor</a>&gt; tensors {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Workload tensors. </p>

<p class="definition">Definition at line <a class="el" href="_cl_workload_8h_source.xhtml#l00200">200</a> of file <a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00104">arm_compute::experimental::dynamic_fusion::bind_tensors()</a>.</p>

</div>
</div>
<a id="afb6cd783cc38a238e203a198229d1454"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb6cd783cc38a238e203a198229d1454">&#9670;&nbsp;</a></span>unit_workloads</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt;<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a3fb003addd6c323793f8251ef3708d5b">UnitWorkId</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml">ClUnitWorkload</a>&gt; unit_workloads {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unit workloads to run. </p>

<p class="definition">Definition at line <a class="el" href="_cl_workload_8h_source.xhtml#l00199">199</a> of file <a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00174">ClCompositeOperator::configure()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>arm_compute/core/experimental/<a class="el" href="_cl_workload_8h_source.xhtml">ClWorkload.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:57:04 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
