<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/common/experimental/gemm_fused_post_ops/fp_elementwise_op_helpers.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('fp__elementwise__op__helpers_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">fp_elementwise_op_helpers.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="fp__elementwise__op__helpers_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">/** (EXPERIMENTAL_POST_OPS) Macros for (binary) elementwise operations */</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">/** List of (binary) elementwise operators, accounting for the argument position of argument X</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment"> * @note X_Pos denotes the position of argument X. e.g. X_POS_0 means X is in the first place whereas X_POS_1 means X is in the second place</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"> * @name elementwise_post_ops</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#if defined(N0) &amp;&amp; !defined(VEC_SIZE)</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#define VEC_SIZE N0</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#endif // defined(N0) &amp;&amp; !defined(VEC_SIZE)</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#if defined(VEC_SIZE) &amp;&amp; defined(DATA_TYPE)</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#define ADD_X_POS_0(x, y) (x) + (y)</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#define SUB_X_POS_0(x, y) (x) - (y)</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#define MAX_X_POS_0(x, y) max(x, y)</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#define MIN_X_POS_0(x, y) min(x, y)</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#define SQUARED_DIFF_X_POS_0(x, y) (x - y) * (x - y)</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#define POWER_X_POS_0(x, y) pow(x, y)</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#if VEC_SIZE == 1</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#define PRELU_X_POS_0(x, y) (x &gt; 0 ? x : x * y)</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#else // VEC_SIZE == 1</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#if defined(MIXED_PRECISION)</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#define PRELU_X_POS_0(x, y) (select(y * x, x, CONVERT((x &gt; (DATA_TYPE_ACCUMULATOR)0), SELECT_VEC_DATA_TYPE(DATA_TYPE_ACCUMULATOR, VEC_SIZE))))</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#else // MIXED_PRECISION</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#define PRELU_X_POS_0(x, y) (select(y * x, x, CONVERT((x &gt; (DATA_TYPE)0), SELECT_VEC_DATA_TYPE(DATA_TYPE, VEC_SIZE))))</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#endif // MIXED_PRECISION</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#endif // VEC_SIZE == 1</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#define DIV_X_POS_0(x, y) (x / y)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#define AND_X_POS_0(x, y) (CONVERT((x &amp;&amp; y), VEC_DATA_TYPE(DATA_TYPE, VEC_SIZE)) &amp; ((VEC_DATA_TYPE(DATA_TYPE, VEC_SIZE))1))</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#define OR_X_POS_0(x, y) (CONVERT((x || y), VEC_DATA_TYPE(DATA_TYPE, VEC_SIZE)) &amp; ((VEC_DATA_TYPE(DATA_TYPE, VEC_SIZE))1))</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#define ADD_X_POS_1(x, y) ADD_X_POS_0(x, y)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#define SUB_X_POS_1(x, y) (y) - (x)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#define MAX_X_POS_1(x, y) MAX_X_POS_0(x, y)</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#define MIN_X_POS_1(x, y) MIN_X_POS_0(x, y)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#define SQUARED_DIFF_X_POS_1(x, y) SQUARED_DIFF_X_POS_0(x, y)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#define POWER_X_POS_1(x, y) pow(y, x)</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#if VEC_SIZE == 1</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#define PRELU_X_POS_1(x, y) (y &gt; 0 ? y : y * x)</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#else // VEC_SIZE == 1</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#if defined(MIXED_PRECISION)</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">#define PRELU_X_POS_1(x, y) (select(x * y, y, CONVERT((y &gt; (DATA_TYPE_ACCUMULATOR)0), SELECT_VEC_DATA_TYPE(DATA_TYPE_ACCUMULATOR, VEC_SIZE))))</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#else // MIXED_PRECISION</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#define PRELU_X_POS_1(x, y) (select(x * y, y, CONVERT((y &gt; (DATA_TYPE)0), SELECT_VEC_DATA_TYPE(DATA_TYPE, VEC_SIZE))))</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#endif // MIXED_PRECISION</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#endif // VEC_SIZE == 1</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#define DIV_X_POS_1(x, y) (y / x)</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#define AND_X_POS_1(x, y) AND_X_POS_0(x, y)</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">#define OR_X_POS_1(x, y) OR_X_POS_0(x, y)</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">// By default use the order of the arguments as they are passed in, ie. _X_POS_0</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">#define ADD(x, y) ADD_X_POS_0(x, y)</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">#define SUB(x, y) SUB_X_POS_0(x, y)</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">#define MAX(x, y) MAX_X_POS_0(x, y)</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">#define MIN(x, y) MIN_X_POS_0(x, y)</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#define SQUARED_DIFF(x, y) SQUARED_DIFF_X_POS_0(x, y)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">#define POWER(x, y) POWER_X_POS_0(x, y)</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#define PRELU(x, y) PRELU_X_POS_0(x, y)</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor">#define DIV(x, y) DIV_X_POS_0(x, y)</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">#define AND(x, y) AND_X_POS_0(x, y)</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#define OR(x, y) OR_X_POS_0(x, y)</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">#endif    // defined(VEC_SIZE) &amp;&amp; defined(DATA_TYPE)</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">/** @} */</span> <span class="comment">// end of group elementwise_post_ops</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">/** Performs OPERAND1 = OP(OPERAND1, OPERAND2)</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"> * @name ELTWISE_OP_ROW_n</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"> * @param[in]      OP       The elementwise post op</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"> * @param[in, out] OPERAND1 The basename of the destination and operand 1 variables</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"> * @param[in]      OPERAND2 The basename of the operand 2 variables</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a33989a5bd215485d2db5651465ffcebd">  104</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_1(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">    OPERAND1##0 = OP(OPERAND1##0, OPERAND2##0);</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#ab13d771b43c26875b1cdee71a7dd1de4">  107</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_2(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_1(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">    OPERAND1##1 = OP(OPERAND1##1, OPERAND2##1);</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a9ccd9e0f216bc8c81a3dd1b058a6f870">  111</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_3(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_2(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">    OPERAND1##2 = OP(OPERAND1##2, OPERAND2##2);</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a878b99a0a56dacadb305221f6c07a336">  115</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_4(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_3(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">    OPERAND1##3 = OP(OPERAND1##3, OPERAND2##3);</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a894da2d018353b00d15ec2c35e570be5">  119</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_5(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_4(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">    OPERAND1##4 = OP(OPERAND1##4, OPERAND2##4);</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a0e08b71548a60998f9fcc88425b885a1">  123</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_6(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_5(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">    OPERAND1##5 = OP(OPERAND1##5, OPERAND2##5);</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#aa8ad7cbb35f9fd1924c288f01ce69346">  127</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_7(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_6(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">    OPERAND1##6 = OP(OPERAND1##6, OPERAND2##6);</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#af71982cacafcf3a4f1f8792e662e64a8">  131</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_8(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_7(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor">    OPERAND1##7 = OP(OPERAND1##7, OPERAND2##7);</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#ac7d85722c2bd3a8fc87c48e716f78466">  135</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_9(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_8(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">    OPERAND1##8 = OP(OPERAND1##8, OPERAND2##8);</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#aa74414178df4421ab9958f6e2ce27e07">  139</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_10(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_9(OP, OPERAND1, OPERAND2)      \</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">    OPERAND1##9 = OP(OPERAND1##9, OPERAND2##9);</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#ab08ad505d8477fa4a4b91c5eb8eebb22">  143</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_11(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_10(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="preprocessor">    OPERAND1##A = OP(OPERAND1##A, OPERAND2##A);</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#ad1698d2574f2a019a7da3347d2459953">  147</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_12(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_11(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">    OPERAND1##B = OP(OPERAND1##B, OPERAND2##B);</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a9ab4d19e092416a9e3f2bd57b2a03cfa">  151</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_13(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_12(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor">    OPERAND1##C = OP(OPERAND1##C, OPERAND2##C);</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a3fd5a60f2d45e9ff89d672658b35d991">  155</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_14(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_13(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor">    OPERAND1##D = OP(OPERAND1##D, OPERAND2##D);</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a09a6ed9aa1b4f7bbb5d16f28e2437b52">  159</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_15(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_14(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">    OPERAND1##E = OP(OPERAND1##E, OPERAND2##E);</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a1db68c163724dbbdf2409e4652256558">  163</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_16(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_15(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">    OPERAND1##F = OP(OPERAND1##F, OPERAND2##F);</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">/** @} */</span> <span class="comment">// end of group ELTWISE_OP_ROW_n</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">/** Performs OPERAND1 = OP(OPERAND1, OPERAND2)</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment"> * @name ELTWISE_OP_BLOCK</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"> * Supported cases are N=1,2,3,...,16</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment"> * @param[in] OP       The elementwise post op</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"> * @param[in] N        The number of vectors in the block</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment"> * @param[in] OPERAND1 The basename of the destination and operand 1 variables</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"> * @param[in] OPERAND2 The basename of the operand 2 variables</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a7ace4152549c4cd218636102aab237c0">  180</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_BLOCK_STR(OP, N, OPERAND1, OPERAND2) ELTWISE_OP_ROW_##N(OP, OPERAND1, OPERAND2)</span></div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a481996355dcc826d3089efa973036bdd">  181</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_BLOCK(OP, N, OPERAND1, OPERAND2) ELTWISE_OP_BLOCK_STR(OP, N, OPERAND1, OPERAND2)</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">/** @} */</span> <span class="comment">// end of group ELTWISE_OP_BLOCK</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">/** Performs OPERAND1 = OP(OPERAND1, OPERAND2) with broadcasting</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"> * @name ELTWISE_OP_ROW_BROADCAST_n</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"> * @param[in]      OP       The elementwise post op</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> * @param[in, out] OPERAND1 The basename of the destination and operand 1 variables</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"> * @param[in]      OPERAND2 The basename of the broadcast operand 2 variables</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a4581c05f6be9ced623860354f2b725c3">  192</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_1(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="preprocessor">    OPERAND1##0 = OP(OPERAND1##0, OPERAND2);</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#aa7df7a92969a70c5fc77c545c9c651af">  195</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_2(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_1(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor">    OPERAND1##1 = OP(OPERAND1##1, OPERAND2);</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#af3d33b9004cf115fe98fe812f5456f64">  199</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_3(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_2(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor">    OPERAND1##2 = OP(OPERAND1##2, OPERAND2);</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a944fbecf165ad0c743f84eda0aff6833">  203</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_4(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_3(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor">    OPERAND1##3 = OP(OPERAND1##3, OPERAND2);</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a6820b036ba90de984769316648a4c7cc">  207</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_5(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_4(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor">    OPERAND1##4 = OP(OPERAND1##4, OPERAND2);</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a8d3727e11ce21025532e829782a8f44e">  211</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_6(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_5(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="preprocessor">    OPERAND1##5 = OP(OPERAND1##5, OPERAND2);</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#ab720c0a5f9b5c89fec91a867a48ba870">  215</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_7(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_6(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="preprocessor">    OPERAND1##6 = OP(OPERAND1##6, OPERAND2);</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#acae8e8789ce8e55d8d7646a9be14907c">  219</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_8(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_7(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="preprocessor">    OPERAND1##7 = OP(OPERAND1##7, OPERAND2);</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a266cf3ab66ed3f5a3e8dc9a0a249b415">  223</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_9(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_8(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">    OPERAND1##8 = OP(OPERAND1##8, OPERAND2);</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a6c80a08db4df5386f9856918b9726a88">  227</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_10(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_9(OP, OPERAND1, OPERAND2)      \</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">    OPERAND1##9 = OP(OPERAND1##9, OPERAND2);</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#ac9ef17247245f1d69c40bbdbb9536579">  231</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_11(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_10(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor">    OPERAND1##A = OP(OPERAND1##A, OPERAND2);</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a6e02b42c62b28c18b62fa77006b6bfb3">  235</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_12(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_11(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor">    OPERAND1##B = OP(OPERAND1##B, OPERAND2);</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#ae1d8029316d8358a2f64f74a6bbd1255">  239</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_13(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_12(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">    OPERAND1##C = OP(OPERAND1##C, OPERAND2);</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a95103f02b6ad7f67a53ec9bf989ad5fe">  243</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_14(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_13(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="preprocessor">    OPERAND1##D = OP(OPERAND1##D, OPERAND2);</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#afee31ad6f1e44dc321824c4c26680bb7">  247</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_15(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_14(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor">    OPERAND1##E = OP(OPERAND1##E, OPERAND2);</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#aaf5f67f3b1afa50c705d92ea2f966069">  251</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_ROW_BROADCAST_16(OP, OPERAND1, OPERAND2) \</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">    ELTWISE_OP_ROW_BROADCAST_15(OP, OPERAND1, OPERAND2)     \</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor">    OPERAND1##F = OP(OPERAND1##F, OPERAND2);</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">/** @} */</span> <span class="comment">// end of group ELTWISE_OP_ROW_BROADCAST_n</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">/** Performs OPERAND1 = OP(OPERAND1, OPERAND2) with broadcasting</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment"> * @name ELTWISE_OP_BLOCK_BROADCAST</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment"> * @note Only support:</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment"> *      case 1 broadcast in Y dimension : Operand1 [YxX] + Operand2 [1xX];</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment"> *      case 2 broadcast in both Y and X dimensions : Operand1 [YxX] + Operand2 [1x1] (scalar);</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment"> *      Does NOT support broad cast in X dimension: Operand1 [YxX] + Operand2 [Yx1];</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment"> * Supported cases are N=1,2,3,...,16</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment"> * @param[in] OP       The elementwise post op</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment"> * @param[in] N        The number of vectors in the block</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment"> * @param[in] OPERAND1 The basename of the destination and operand 1 variables</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment"> * @param[in] OPERAND2 The basename of the operand 2 variables</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a13f8f40eb40d6a40135cef2d659ddf92">  272</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_BLOCK_BROADCAST_STR(OP, N, OPERAND1, OPERAND2) ELTWISE_OP_ROW_BROADCAST_##N(OP, OPERAND1, OPERAND2)</span></div><div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="fp__elementwise__op__helpers_8h.xhtml#a1f49f2306470c30591d3b54a61c94f2b">  273</a></span>&#160;<span class="preprocessor">#define ELTWISE_OP_BLOCK_BROADCAST(OP, N, OPERAND1, OPERAND2) ELTWISE_OP_BLOCK_BROADCAST_STR(OP, N, OPERAND1, OPERAND2)</span><span class="comment"></span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">/** @} */</span><span class="preprocessor"> // end of group ELTWISE_OP_BLOCK_BROADCAST</span></div><div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="dir_a50b9933354d81525095b5e7ad336497.xhtml">common</a></li><li class="navelem"><a class="el" href="dir_75521c644d837c7ebf43e673a346bce4.xhtml">experimental</a></li><li class="navelem"><a class="el" href="dir_70024722ad4085cf40d9a19a01bb1977.xhtml">gemm_fused_post_ops</a></li><li class="navelem"><a class="el" href="fp__elementwise__op__helpers_8h.xhtml">fp_elementwise_op_helpers.h</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:49 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
