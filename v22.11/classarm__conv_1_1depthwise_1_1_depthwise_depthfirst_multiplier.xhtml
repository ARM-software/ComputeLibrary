<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml">depthwise_depthfirst_multiplier.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier__coll__graph.svg" width="266" height="246"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8214e0e5ed09ebfc669544d7631e1b2d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a8214e0e5ed09ebfc669544d7631e1b2d">DepthwiseDepthfirstMultiplier</a> (StratType *const strat, const DepthwiseArgs &amp;args, const OutputStage &amp;os={})</td></tr>
<tr class="separator:a8214e0e5ed09ebfc669544d7631e1b2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa42d27b8163085555b203f764268b5b3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#aa42d27b8163085555b203f764268b5b3">DepthwiseDepthfirstMultiplier</a> (<a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a> &amp;)=delete</td></tr>
<tr class="separator:aa42d27b8163085555b203f764268b5b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a248e8f85cd3107d638323a260de1b87a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a248e8f85cd3107d638323a260de1b87a">operator=</a> (<a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a> &amp;)=delete</td></tr>
<tr class="separator:a248e8f85cd3107d638323a260de1b87a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6de6182e7c12d5492f092057f5b32d30"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a6de6182e7c12d5492f092057f5b32d30">get_storage_size</a> (void) const override</td></tr>
<tr class="separator:a6de6182e7c12d5492f092057f5b32d30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e86e96b1933ec8bd8eae5f55654d111"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a4e86e96b1933ec8bd8eae5f55654d111">pack_parameters</a> (void *buffer, const void *biases, const void *weights, size_t ld_weight_col, size_t ld_weight_row) override</td></tr>
<tr class="separator:a4e86e96b1933ec8bd8eae5f55654d111"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a687bf0465cc14a64b153fa47d61c66d1"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a687bf0465cc14a64b153fa47d61c66d1">get_working_size_per_thread</a> (const unsigned int n_input_channels) const override</td></tr>
<tr class="separator:a687bf0465cc14a64b153fa47d61c66d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad921c8dea76a17f4cbccf64db16a41a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#ad921c8dea76a17f4cbccf64db16a41a4">initialise_working_space</a> (void *buffer, unsigned int n_input_channels) const override</td></tr>
<tr class="separator:ad921c8dea76a17f4cbccf64db16a41a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21a7d65b8744b6960b887205cff5c89b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a21a7d65b8744b6960b887205cff5c89b">compute_tile_padded</a> (unsigned int output_i, unsigned int output_j, unsigned int output_channel_start, unsigned int output_channel_end, const <a class="el" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml">TensorSpec</a>&lt; const TInput *&gt; &amp;input, const <a class="el" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml">TensorSpec</a>&lt; TOutput *&gt; &amp;output, const void *parameters, void *working_space_raw) const override</td></tr>
<tr class="separator:a21a7d65b8744b6960b887205cff5c89b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__conv_1_1depthwise_1_1_depthfirst_driver"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__conv_1_1depthwise_1_1_depthfirst_driver')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml">DepthfirstDriver&lt; TInput, TWeight, TOutput &gt;</a></td></tr>
<tr class="memitem:a3abb84f30e37dc3a3456eb8757672f34 inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthfirst_driver"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml#a3abb84f30e37dc3a3456eb8757672f34">DepthfirstDriver</a> (<a class="el" href="classarm__conv_1_1depthwise_1_1_i_depthfirst_strategy.xhtml">IDepthfirstStrategy</a> *<a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, const DepthwiseArgs &amp;args)</td></tr>
<tr class="separator:a3abb84f30e37dc3a3456eb8757672f34 inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthfirst_driver"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae634985f3a886efc2d15a047cee13fb9 inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthfirst_driver"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml#ae634985f3a886efc2d15a047cee13fb9">get_working_size</a> (unsigned int n_threads, unsigned int n_input_channels) const override final</td></tr>
<tr class="separator:ae634985f3a886efc2d15a047cee13fb9 inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthfirst_driver"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename TInput, typename TWeight = TInput, typename TOutput = TInput, typename TAccum = typename DefaultTAccum&lt;TInput&gt;::Type, bool is_generic = false, typename OutputStage = typename DefaultOutputStage&lt;TOutput&gt;::Type&gt;<br />
class arm_conv::depthwise::DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt;</h3>


<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00476">476</a> of file <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml">depthwise_depthfirst_multiplier.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8214e0e5ed09ebfc669544d7631e1b2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8214e0e5ed09ebfc669544d7631e1b2d">&#9670;&nbsp;</a></span>DepthwiseDepthfirstMultiplier() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a> </td>
          <td>(</td>
          <td class="paramtype">StratType *const&#160;</td>
          <td class="paramname"><em>strat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const DepthwiseArgs &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const OutputStage &amp;&#160;</td>
          <td class="paramname"><em>os</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00491">491</a> of file <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml">depthwise_depthfirst_multiplier.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                                                                                           {})</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;  : DepthfirstDriver&lt;TInput, TWeight, TOutput&gt;(strat, <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>), m_os(os)</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;  {</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;  }</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa42d27b8163085555b203f764268b5b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa42d27b8163085555b203f764268b5b3">&#9670;&nbsp;</a></span>DepthwiseDepthfirstMultiplier() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a>&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a21a7d65b8744b6960b887205cff5c89b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21a7d65b8744b6960b887205cff5c89b">&#9670;&nbsp;</a></span>compute_tile_padded()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void compute_tile_padded </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>output_i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>output_j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>output_channel_start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>output_channel_end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml">TensorSpec</a>&lt; const TInput *&gt; &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml">TensorSpec</a>&lt; TOutput *&gt; &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>parameters</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>working_space_raw</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml">DepthfirstDriver&lt; TInput, TWeight, TOutput &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00527">527</a> of file <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml">depthwise_depthfirst_multiplier.hpp</a>.</p>

<p class="reference">References <a class="el" href="depthwise_2depthfirst__driver_8hpp_source.xhtml#l00057">TensorSpec&lt; T &gt;::base</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00333">StrategyType&lt; IsGeneric, TInput, TWeight, TOutput, TAccum, OutputStage &gt;::execute()</a>, <a class="el" href="addressing_8cpp_source.xhtml#l00032">arm_conv::addressing::fill_pointer_array()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00068">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, TAccum &gt;::get_storage_size()</a>, <a class="el" href="depthwise_2depthfirst__driver_8hpp_source.xhtml#l00058">TensorSpec&lt; T &gt;::ld_col</a>, <a class="el" href="depthwise_2depthfirst__driver_8hpp_source.xhtml#l00058">TensorSpec&lt; T &gt;::ld_row</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">arm_compute::test::validation::n</a>, and <a class="el" href="_framework_8cpp_source.xhtml#l00046">arm_compute::test::parameters</a>.</p>
<div class="fragment"><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;  {</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="comment">// Get the working space</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <span class="keyword">auto</span> ws = <span class="keyword">reinterpret_cast&lt;</span>WorkingSpace *<span class="keyword">&gt;</span>(working_space_raw);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> ii = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(output_i * this-&gt;m_args.stride_rows) - this-&gt;m_args.padding.top;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_pad_top = static_cast&lt;unsigned int&gt;(ii &lt; 0 ? -ii : 0);</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_i = <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(ii &lt; 0 ? 0 : ii);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> ij = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(output_j * this-&gt;m_args.stride_cols) - this-&gt;m_args.padding.left;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_pad_left = static_cast&lt;unsigned int&gt;(ij &lt; 0 ? -ij : 0);</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_j = <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(ij &lt; 0 ? 0 : ij);</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <span class="comment">// Compute the output pointer array. We&#39;ll update this array after every</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="comment">// invocation of the kernel.</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <a class="code" href="namespacearm__conv_1_1addressing.xhtml#ac9211d5ee87bf4727d20cb4fbb73d413">fill_pointer_array</a>(</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;      ws-&gt;outptr_array, this-&gt;m_strat-&gt;get_output_rows(), this-&gt;m_strat-&gt;get_output_cols(),</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;      output.base + output_i*output.ld_row + output_j*output.ld_col + output_channel_start,</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;      output.ld_row, output.ld_col,</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;      ws-&gt;output_buffer,</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;      0, this-&gt;m_args.output_rows - output_i, <span class="comment">// Top padding, # valid rows</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;      0, this-&gt;m_args.output_cols - output_j  <span class="comment">// Left padding, # valid columns</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    );</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="comment">// Compute the parameter stride</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    DepthwiseArgs single_iter(this-&gt;m_args);</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    single_iter.input_channels = 1;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> parameter_stride = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>StratType *<span class="keyword">&gt;</span>(this-&gt;m_strat.get())</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;      -&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a6de6182e7c12d5492f092057f5b32d30">get_storage_size</a>(single_iter);</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <span class="keywordflow">for</span> (; output_channel_start &lt; output_channel_end;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;         output_channel_start += this-&gt;m_args.channel_multiplier)</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    {</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;      <span class="comment">// Compute the input pointer array</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;      <span class="keyword">const</span> <span class="keyword">auto</span> input_channel = output_channel_start / this-&gt;m_args.channel_multiplier;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;      <span class="comment">// Construct the input patch</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;      depthfirst_multiplier::PrepareInputSample&lt;is_generic&gt;::execute(</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        this-&gt;m_args, ws, this-&gt;m_strat.get(),</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.base + input_channel + input_i*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ld_row + input_j*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ld_col, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ld_row, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ld_col,</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        input_pad_top, this-&gt;m_args.input_rows - input_i,</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        input_pad_left, this-&gt;m_args.input_cols - input_j</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;      );</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;      <span class="comment">// Execute the kernel</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;      <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml#a38a8ef712ab8f0ea28e78e0d401dd2bb">depthfirst_multiplier::StrategyType&lt;is_generic, TInput, TWeight, TOutput, TAccum, OutputStage&gt;::execute</a>(</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        this-&gt;m_args, ws, reinterpret_cast&lt;const StratType *&gt;(this-&gt;m_strat.get()), m_os, output_channel_start,</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        <a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>, m_bias</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;      );</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;      <span class="comment">// Update the output pointers</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> = 0; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> &lt; this-&gt;m_strat-&gt;get_output_rows() * this-&gt;m_strat-&gt;get_output_cols(); <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>++)</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;      {</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        ws-&gt;outptr_array[<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>] += this-&gt;m_args.channel_multiplier;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;      }</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;      <span class="comment">// Progress the parameters</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;      <a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a> = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>) + parameter_stride;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    }</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;  }</div><div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier_xhtml_a6de6182e7c12d5492f092057f5b32d30"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a6de6182e7c12d5492f092057f5b32d30">arm_conv::depthwise::DepthwiseDepthfirstMultiplier::get_storage_size</a></div><div class="ttdeci">size_t get_storage_size(void) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00499">depthwise_depthfirst_multiplier.hpp:499</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_xhtml_a38a8ef712ab8f0ea28e78e0d401dd2bb"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml#a38a8ef712ab8f0ea28e78e0d401dd2bb">arm_conv::depthwise::depthfirst_multiplier::StrategyType::execute</a></div><div class="ttdeci">static void execute(const DepthwiseArgs &amp;args, const WorkspaceType *ws, const Type *strat, const OutputStage &amp;, const unsigned int, const void *parameters, const void *)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00333">depthwise_depthfirst_multiplier.hpp:333</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_abb222b6342b2b9056ec65056984d5e21"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">arm_compute::test::parameters</a></div><div class="ttdeci">std::unique_ptr&lt; ParametersLibrary &gt; parameters</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00046">Framework.cpp:46</a></div></div>
<div class="ttc" id="namespacearm__conv_1_1addressing_xhtml_ac9211d5ee87bf4727d20cb4fbb73d413"><div class="ttname"><a href="namespacearm__conv_1_1addressing.xhtml#ac9211d5ee87bf4727d20cb4fbb73d413">arm_conv::addressing::fill_pointer_array</a></div><div class="ttdeci">void fill_pointer_array(size_t element_size, void **dest_raw, const unsigned int array_rows, const unsigned int array_cols, void *base_ptr_raw, size_t ld_row, size_t ld_col, void *pad_buffer_raw, const unsigned int pad_top, const unsigned int valid_rows, const unsigned int pad_left, const unsigned int valid_cols)</div><div class="ttdef"><b>Definition:</b> <a href="addressing_8cpp_source.xhtml#l00032">addressing.cpp:32</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6de6182e7c12d5492f092057f5b32d30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6de6182e7c12d5492f092057f5b32d30">&#9670;&nbsp;</a></span>get_storage_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t get_storage_size </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00499">499</a> of file <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml">depthwise_depthfirst_multiplier.hpp</a>.</p>

<p class="reference">References <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00068">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, TAccum &gt;::get_storage_size()</a>.</p>
<div class="fragment"><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;  {</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>StratType *<span class="keyword">&gt;</span>(this-&gt;m_strat.get())</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;      -&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a6de6182e7c12d5492f092057f5b32d30">get_storage_size</a>(this-&gt;m_args);</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  }</div><div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier_xhtml_a6de6182e7c12d5492f092057f5b32d30"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a6de6182e7c12d5492f092057f5b32d30">arm_conv::depthwise::DepthwiseDepthfirstMultiplier::get_storage_size</a></div><div class="ttdeci">size_t get_storage_size(void) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00499">depthwise_depthfirst_multiplier.hpp:499</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a687bf0465cc14a64b153fa47d61c66d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a687bf0465cc14a64b153fa47d61c66d1">&#9670;&nbsp;</a></span>get_working_size_per_thread()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t get_working_size_per_thread </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>n_input_channels</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml">DepthfirstDriver&lt; TInput, TWeight, TOutput &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00513">513</a> of file <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml">depthwise_depthfirst_multiplier.hpp</a>.</p>

<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>.</p>
<div class="fragment"><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  {</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    DepthwiseArgs <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>(this-&gt;m_args);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels = n_input_channels;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keywordflow">return</span> WorkspaceManager::get_sizeof_workspace(WorkspaceArgs&lt;IDepthfirstStrategy, OutputStage&gt;(this-&gt;m_strat.get(), <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, m_os));</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;  }</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad921c8dea76a17f4cbccf64db16a41a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad921c8dea76a17f4cbccf64db16a41a4">&#9670;&nbsp;</a></span>initialise_working_space()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void initialise_working_space </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>n_input_channels</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml">DepthfirstDriver&lt; TInput, TWeight, TOutput &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00520">520</a> of file <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml">depthwise_depthfirst_multiplier.hpp</a>.</p>

<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>.</p>
<div class="fragment"><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;  {</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    DepthwiseArgs <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>(this-&gt;m_args);</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels = n_input_channels;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keywordflow">return</span> WorkspaceManager::initialise(buffer, WorkspaceArgs&lt;IDepthfirstStrategy, OutputStage&gt;(this-&gt;m_strat.get(), <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, m_os));</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;  }</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a248e8f85cd3107d638323a260de1b87a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a248e8f85cd3107d638323a260de1b87a">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a>&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4e86e96b1933ec8bd8eae5f55654d111"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e86e96b1933ec8bd8eae5f55654d111">&#9670;&nbsp;</a></span>pack_parameters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void pack_parameters </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>ld_weight_col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>ld_weight_row</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00505">505</a> of file <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml">depthwise_depthfirst_multiplier.hpp</a>.</p>

<p class="reference">References <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00073">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, TAccum &gt;::pack_parameters()</a>.</p>
<div class="fragment"><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;  {</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>StratType *<span class="keyword">&gt;</span>(this-&gt;m_strat.get())</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;      -&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a4e86e96b1933ec8bd8eae5f55654d111">pack_parameters</a>(this-&gt;m_args, buffer, biases, m_os, weights, ld_weight_col, ld_weight_row);</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    m_bias = biases;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    depthwise_depthfirst::stash_bias(m_os, biases);</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;  }</div><div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier_xhtml_a4e86e96b1933ec8bd8eae5f55654d111"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a4e86e96b1933ec8bd8eae5f55654d111">arm_conv::depthwise::DepthwiseDepthfirstMultiplier::pack_parameters</a></div><div class="ttdeci">void pack_parameters(void *buffer, const void *biases, const void *weights, size_t ld_weight_col, size_t ld_weight_row) override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00505">depthwise_depthfirst_multiplier.hpp:505</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/core/NEON/kernels/arm_conv/depthwise/<a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml">depthwise_depthfirst_multiplier.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__conv.xhtml">arm_conv</a></li><li class="navelem"><a class="el" href="namespacearm__conv_1_1depthwise.xhtml">depthwise</a></li><li class="navelem"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:57:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
