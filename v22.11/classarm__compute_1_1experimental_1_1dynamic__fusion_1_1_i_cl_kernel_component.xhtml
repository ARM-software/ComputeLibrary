<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IClKernelComponent Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IClKernelComponent Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_1_1_tag_val.xhtml">TagVal</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a931be7719b75f96e2fd85c3680581da4"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a931be7719b75f96e2fd85c3680581da4">Link</a> = <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">SharedVarLink</a></td></tr>
<tr class="separator:a931be7719b75f96e2fd85c3680581da4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af037c70dc8c0318e30d3a5138776337e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#af037c70dc8c0318e30d3a5138776337e">Tag</a> = std::string</td></tr>
<tr class="separator:af037c70dc8c0318e30d3a5138776337e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afacfec8193ed701f3646c22bc2d35455"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> = std::unordered_map&lt; <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#af037c70dc8c0318e30d3a5138776337e">Tag</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_1_1_tag_val.xhtml">TagVal</a> &gt;</td></tr>
<tr class="separator:afacfec8193ed701f3646c22bc2d35455"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a107bc55d669c46d434a9abf6e30515a2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a107bc55d669c46d434a9abf6e30515a2">IClKernelComponent</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">ClKernelBlueprint</a> *blueprint)</td></tr>
<tr class="separator:a107bc55d669c46d434a9abf6e30515a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab247225b59de289f129747a197852ea4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#ab247225b59de289f129747a197852ea4">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml">IClKernelComponent</a>)</td></tr>
<tr class="separator:ab247225b59de289f129747a197852ea4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69204ebb5307b978933aa651326a39c1"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a69204ebb5307b978933aa651326a39c1">~IClKernelComponent</a> ()=default</td></tr>
<tr class="separator:a69204ebb5307b978933aa651326a39c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9193fe6da7320deb84c6c3814721e3f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0">ComponentType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#ad9193fe6da7320deb84c6c3814721e3f">get_component_type</a> () const =0</td></tr>
<tr class="separator:ad9193fe6da7320deb84c6c3814721e3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3eca97015cc297c7079daeedfabcbc0a"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a931be7719b75f96e2fd85c3680581da4">Link</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a3eca97015cc297c7079daeedfabcbc0a">get_links</a> () const =0</td></tr>
<tr class="separator:a3eca97015cc297c7079daeedfabcbc0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f04e718c6856c4d3d77a496b6acad0d"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a7f04e718c6856c4d3d77a496b6acad0d">name</a> () const =0</td></tr>
<tr class="separator:a7f04e718c6856c4d3d77a496b6acad0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483b1d20313a5ba08f297c610563bdf0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a4e1b7c599411e580eaed97443d281691">ComponentID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a483b1d20313a5ba08f297c610563bdf0">id</a> () const</td></tr>
<tr class="separator:a483b1d20313a5ba08f297c610563bdf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5366eca9a2810f78855d4f1adeeadea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#ac5366eca9a2810f78855d4f1adeeadea">set_id</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a4e1b7c599411e580eaed97443d281691">ComponentID</a> <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a483b1d20313a5ba08f297c610563bdf0">id</a>)</td></tr>
<tr class="separator:ac5366eca9a2810f78855d4f1adeeadea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7a3eb170866dfc737d0a8842fe47fd1"><td class="memItemLeft" align="right" valign="top">virtual std::set&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#ad7a3eb170866dfc737d0a8842fe47fd1">get_headers_list</a> () const</td></tr>
<tr class="separator:ad7a3eb170866dfc737d0a8842fe47fd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65020719815c0344b43b296cc50b10ff"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a65020719815c0344b43b296cc50b10ff">get_additional_macros</a> () const</td></tr>
<tr class="separator:a65020719815c0344b43b296cc50b10ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa543fb6fd6b465a9a2b802c858ae4c73"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#aa543fb6fd6b465a9a2b802c858ae4c73">get_component_code</a> () const</td></tr>
<tr class="separator:aa543fb6fd6b465a9a2b802c858ae4c73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66df3fbb8781a4dfa011885356e1495f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a66df3fbb8781a4dfa011885356e1495f">get_window</a> () const</td></tr>
<tr class="separator:a66df3fbb8781a4dfa011885356e1495f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0004c4b2e8bb0abe37864eafb7d1879a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a0004c4b2e8bb0abe37864eafb7d1879a">get_tag_lut</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a> &amp;vtable) const =0</td></tr>
<tr class="memdesc:a0004c4b2e8bb0abe37864eafb7d1879a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the tag look-up table used to instantiate the component code.  <a href="#a0004c4b2e8bb0abe37864eafb7d1879a">More...</a><br /></td></tr>
<tr class="separator:a0004c4b2e8bb0abe37864eafb7d1879a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae83fc1460d0e073e8357e14a60fc79ac"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#ae83fc1460d0e073e8357e14a60fc79ac">allocate_shared_vars</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a> &amp;vtable) const =0</td></tr>
<tr class="memdesc:ae83fc1460d0e073e8357e14a60fc79ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate all shared variables used by the component in the <code>vtable</code>.  <a href="#ae83fc1460d0e073e8357e14a60fc79ac">More...</a><br /></td></tr>
<tr class="separator:ae83fc1460d0e073e8357e14a60fc79ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917e30e7bb891a89ae186b70d2710981"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a917e30e7bb891a89ae186b70d2710981">get_dst_addr_calculation</a> () const</td></tr>
<tr class="separator:a917e30e7bb891a89ae186b70d2710981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acba60c351708a2b5de270a7c71654c70"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#acba60c351708a2b5de270a7c71654c70">generate_config_id</a> () const</td></tr>
<tr class="memdesc:acba60c351708a2b5de270a7c71654c70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate config id of the component.  <a href="#acba60c351708a2b5de270a7c71654c70">More...</a><br /></td></tr>
<tr class="separator:acba60c351708a2b5de270a7c71654c70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa430b05011ebf30749be0c67d32b327f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#aa430b05011ebf30749be0c67d32b327f">generate_build_options</a> () const</td></tr>
<tr class="separator:aa430b05011ebf30749be0c67d32b327f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a8d7e5e18e2ef94f4e007c2efd7b3b3b0"><td class="memItemLeft" align="right" valign="top">static std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a8d7e5e18e2ef94f4e007c2efd7b3b3b0">replace_tags</a> (const std::string &amp;code_template, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> &amp;tags)</td></tr>
<tr class="separator:a8d7e5e18e2ef94f4e007c2efd7b3b3b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00256">256</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a931be7719b75f96e2fd85c3680581da4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a931be7719b75f96e2fd85c3680581da4">&#9670;&nbsp;</a></span>Link</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a931be7719b75f96e2fd85c3680581da4">Link</a> =  <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">SharedVarLink</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00259">259</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

</div>
</div>
<a id="af037c70dc8c0318e30d3a5138776337e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af037c70dc8c0318e30d3a5138776337e">&#9670;&nbsp;</a></span>Tag</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#af037c70dc8c0318e30d3a5138776337e">Tag</a> =  std::string</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00260">260</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

</div>
</div>
<a id="afacfec8193ed701f3646c22bc2d35455"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afacfec8193ed701f3646c22bc2d35455">&#9670;&nbsp;</a></span>TagLUT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> =  std::unordered_map&lt;<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#af037c70dc8c0318e30d3a5138776337e">Tag</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_1_1_tag_val.xhtml">TagVal</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00292">292</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a107bc55d669c46d434a9abf6e30515a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a107bc55d669c46d434a9abf6e30515a2">&#9670;&nbsp;</a></span>IClKernelComponent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml">IClKernelComponent</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">ClKernelBlueprint</a> *&#160;</td>
          <td class="paramname"><em>blueprint</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00294">294</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="src_2core_2common_2_macros_8h_source.xhtml#l00027">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a>, and <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">name</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_direct_convolution_kernel_component_8h_source.xhtml#l00042">ClDirectConvolutionKernelComponent::ClDirectConvolutionKernelComponent()</a>.</p>
<div class="fragment"><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        : _blueprint(blueprint)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    {</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a69204ebb5307b978933aa651326a39c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69204ebb5307b978933aa651326a39c1">&#9670;&nbsp;</a></span>~IClKernelComponent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml">IClKernelComponent</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae83fc1460d0e073e8357e14a60fc79ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae83fc1460d0e073e8357e14a60fc79ac">&#9670;&nbsp;</a></span>allocate_shared_vars()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void allocate_shared_vars </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a> &amp;&#160;</td>
          <td class="paramname"><em>vtable</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allocate all shared variables used by the component in the <code>vtable</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vtable</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_indirect_width_select_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">ClStoreIndirectWidthSelectKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">ClElementwiseKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">ClFloorKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">ClDirectConvolutionKernelComponent</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_block_boundary_aware_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">ClStoreBlockBoundaryAwareKernelComponent</a>.</p>

</div>
</div>
<a id="ab247225b59de289f129747a197852ea4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab247225b59de289f129747a197852ea4">&#9670;&nbsp;</a></span>ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml">IClKernelComponent</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa430b05011ebf30749be0c67d32b327f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa430b05011ebf30749be0c67d32b327f">&#9670;&nbsp;</a></span>generate_build_options()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> generate_build_options </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_indirect_width_select_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">ClStoreIndirectWidthSelectKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">ClElementwiseKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">ClFloorKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">ClDirectConvolutionKernelComponent</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_block_boundary_aware_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">ClStoreBlockBoundaryAwareKernelComponent</a>.</p>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00402">402</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    {</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordflow">return</span> CLBuildOptions{};</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="acba60c351708a2b5de270a7c71654c70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acba60c351708a2b5de270a7c71654c70">&#9670;&nbsp;</a></span>generate_config_id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string generate_config_id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate config id of the component. </p>
<dl class="section return"><dt>Returns</dt><dd>std::string </dd></dl>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a07cd84b2e4e8a8bde711ba8364e6c12e">ClElementwiseKernelComponent</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_component.xhtml#a07cd84b2e4e8a8bde711ba8364e6c12e">ClFloorKernelComponent</a>.</p>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00397">397</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    {</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a65020719815c0344b43b296cc50b10ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65020719815c0344b43b296cc50b10ff">&#9670;&nbsp;</a></span>get_additional_macros()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string get_additional_macros </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a149b376735e266985c6a5c8c79efeace">ClDirectConvolutionKernelComponent</a>.</p>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00360">360</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    {</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aa543fb6fd6b465a9a2b802c858ae4c73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa543fb6fd6b465a9a2b802c858ae4c73">&#9670;&nbsp;</a></span>get_component_code()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string get_component_code </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_indirect_width_select_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">ClStoreIndirectWidthSelectKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">ClElementwiseKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">ClFloorKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">ClDirectConvolutionKernelComponent</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_block_boundary_aware_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">ClStoreBlockBoundaryAwareKernelComponent</a>.</p>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00365">365</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ad9193fe6da7320deb84c6c3814721e3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9193fe6da7320deb84c6c3814721e3f">&#9670;&nbsp;</a></span>get_component_type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0">ComponentType</a> get_component_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_indirect_width_select_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">ClStoreIndirectWidthSelectKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">ClElementwiseKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">ClFloorKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">ClDirectConvolutionKernelComponent</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_block_boundary_aware_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">ClStoreBlockBoundaryAwareKernelComponent</a>.</p>

</div>
</div>
<a id="a917e30e7bb891a89ae186b70d2710981"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a917e30e7bb891a89ae186b70d2710981">&#9670;&nbsp;</a></span>get_dst_addr_calculation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string get_dst_addr_calculation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00388">388</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    {</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ad7a3eb170866dfc737d0a8842fe47fd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7a3eb170866dfc737d0a8842fe47fd1">&#9670;&nbsp;</a></span>get_headers_list()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::set&lt;std::string&gt; get_headers_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">ClElementwiseKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">ClFloorKernelComponent</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">ClDirectConvolutionKernelComponent</a>.</p>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00355">355</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    {</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keywordflow">return</span> std::set&lt;std::string&gt; {};</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a3eca97015cc297c7079daeedfabcbc0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3eca97015cc297c7079daeedfabcbc0a">&#9670;&nbsp;</a></span>get_links()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::vector&lt;<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a931be7719b75f96e2fd85c3680581da4">Link</a>&gt; get_links </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_indirect_width_select_kernel_component.xhtml#a7d9ccece3683c788ad8703513badd963">ClStoreIndirectWidthSelectKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a7d9ccece3683c788ad8703513badd963">ClElementwiseKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_component.xhtml#a7d9ccece3683c788ad8703513badd963">ClFloorKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a7d9ccece3683c788ad8703513badd963">ClDirectConvolutionKernelComponent</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_block_boundary_aware_kernel_component.xhtml#a7d9ccece3683c788ad8703513badd963">ClStoreBlockBoundaryAwareKernelComponent</a>.</p>

</div>
</div>
<a id="a0004c4b2e8bb0abe37864eafb7d1879a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0004c4b2e8bb0abe37864eafb7d1879a">&#9670;&nbsp;</a></span>get_tag_lut()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> get_tag_lut </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a> &amp;&#160;</td>
          <td class="paramname"><em>vtable</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the tag look-up table used to instantiate the component code. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vtable</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TagLUT </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_indirect_width_select_kernel_component.xhtml#ad64c3dde9110bc3147b9d46cbe023ea0">ClStoreIndirectWidthSelectKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a03e31968d514152ab12cc564d73f2cec">ClElementwiseKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_component.xhtml#aec05905b65483a5a5a3fb85b53783b76">ClFloorKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d6affc039a39f5b58d6cbe8e54da94a">ClDirectConvolutionKernelComponent</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_block_boundary_aware_kernel_component.xhtml#ad6dce9b8e25ca0943d29134920c3918c">ClStoreBlockBoundaryAwareKernelComponent</a>.</p>

</div>
</div>
<a id="a66df3fbb8781a4dfa011885356e1495f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66df3fbb8781a4dfa011885356e1495f">&#9670;&nbsp;</a></span>get_window()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> get_window </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">ClElementwiseKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">ClFloorKernelComponent</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">ClDirectConvolutionKernelComponent</a>.</p>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00370">370</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    {</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <span class="keywordflow">return</span> Window{};</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a483b1d20313a5ba08f297c610563bdf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a483b1d20313a5ba08f297c610563bdf0">&#9670;&nbsp;</a></span>id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a4e1b7c599411e580eaed97443d281691">ComponentID</a> id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00346">346</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_store_kernel_components_8cpp_source.xhtml#l00092">ClStoreBlockBoundaryAwareKernelComponent::get_tag_lut()</a>, <a class="el" href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00347">ClDirectConvolutionKernelComponent::get_tag_lut()</a>, <a class="el" href="_cl_floor_kernel_component_8cpp_source.xhtml#l00129">ClFloorKernelComponent::get_tag_lut()</a>, <a class="el" href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00176">ClElementwiseKernelComponent::get_tag_lut()</a>, and <a class="el" href="_cl_store_kernel_components_8cpp_source.xhtml#l00151">ClStoreIndirectWidthSelectKernelComponent::get_tag_lut()</a>.</p>
<div class="fragment"><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    {</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="keywordflow">return</span> _id;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a7f04e718c6856c4d3d77a496b6acad0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f04e718c6856c4d3d77a496b6acad0d">&#9670;&nbsp;</a></span>name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_indirect_width_select_kernel_component.xhtml#afc9312fdb90fc545e0d102d7f3b6341e">ClStoreIndirectWidthSelectKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#afc9312fdb90fc545e0d102d7f3b6341e">ClElementwiseKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_component.xhtml#afc9312fdb90fc545e0d102d7f3b6341e">ClFloorKernelComponent</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#afc9312fdb90fc545e0d102d7f3b6341e">ClDirectConvolutionKernelComponent</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_store_block_boundary_aware_kernel_component.xhtml#afc9312fdb90fc545e0d102d7f3b6341e">ClStoreBlockBoundaryAwareKernelComponent</a>.</p>

</div>
</div>
<a id="a8d7e5e18e2ef94f4e007c2efd7b3b3b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d7e5e18e2ef94f4e007c2efd7b3b3b0">&#9670;&nbsp;</a></span>replace_tags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::string replace_tags </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>code_template</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> &amp;&#160;</td>
          <td class="paramname"><em>tags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00307">307</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>.</p>

<p class="reference">Referenced by <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00559">ClKernelBlueprint::Implementation::build_code()</a>.</p>
<div class="fragment"><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    {</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        std::string replaced_code    = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="keywordtype">bool</span>        scanning_pattern = <span class="keyword">false</span>;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        std::string pattern_found    = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> i = 0; i &lt; code_template.size() - 1; ++i)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        {</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keywordflow">if</span>(!scanning_pattern)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            {</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                <span class="keywordflow">if</span>(code_template[i] == <span class="charliteral">&#39;{&#39;</span> &amp;&amp; code_template[i + 1] == <span class="charliteral">&#39;{&#39;</span>)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                {</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                    i += 1;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                    scanning_pattern = <span class="keyword">true</span>;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                    pattern_found    = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                }</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                <span class="keywordflow">else</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                {</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                    replaced_code += code_template[i];</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                }</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            }</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            {</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="keywordflow">if</span>(code_template[i] == <span class="charliteral">&#39;}&#39;</span> &amp;&amp; code_template[i + 1] == <span class="charliteral">&#39;}&#39;</span>)</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                {</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                    i += 1;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                    scanning_pattern = <span class="keyword">false</span>;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                    std::string err  = <span class="stringliteral">&quot;Pattern &quot;</span> + pattern_found + <span class="stringliteral">&quot; not found in tags&quot;</span>;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(tags.find(pattern_found) == tags.end(), err.c_str());</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                    replaced_code += tags.find(pattern_found)-&gt;second.value;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                }</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                <span class="keywordflow">else</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                {</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                    pattern_found += code_template[i];</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                }</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            }</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        }</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        <span class="keywordflow">return</span> replaced_code;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    }</div><div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac5366eca9a2810f78855d4f1adeeadea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5366eca9a2810f78855d4f1adeeadea">&#9670;&nbsp;</a></span>set_id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_id </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a4e1b7c599411e580eaed97443d281691">ComponentID</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00350">350</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    {</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        _id = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a483b1d20313a5ba08f297c610563bdf0">id</a>;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_xhtml_a483b1d20313a5ba08f297c610563bdf0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a483b1d20313a5ba08f297c610563bdf0">arm_compute::experimental::dynamic_fusion::IClKernelComponent::id</a></div><div class="ttdeci">ComponentID id() const</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00346">Common.h:346</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/core/experimental/dynamic_fusion/ClKernelBuildingImpl/<a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml">IClKernelComponent</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:57:04 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
