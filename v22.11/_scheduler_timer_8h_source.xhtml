<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/instruments/SchedulerTimer.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_scheduler_timer_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SchedulerTimer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_scheduler_timer_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2019,2021 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_TEST_SCHEDULER_TIMER</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_TEST_SCHEDULER_TIMER</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_instrument_8h.xhtml">Instrument.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_workload_8h.xhtml">arm_compute/graph/Workload.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_scheduler_8h.xhtml">arm_compute/runtime/Scheduler.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>framework</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">/** Scheduler user interface  */</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml">   42</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml">ISchedulerUser</a></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">    /** Default Destructor */</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml#a8fd08e95e9524a80d17488f0f1cc6d11">~ISchedulerUser</a>() = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /** Intercept the scheduler used by</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     * @param interceptor Intercept the scheduler used by the scheduler user.</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml#a4843c7dfdf88d463275133d3278df03a">intercept_scheduler</a>(std::unique_ptr&lt;IScheduler&gt; interceptor) = 0;<span class="comment"></span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">    /** Restore the original scheduler */</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml#a82cd5cd76f2e24a56b7f0f502d218d5d">restore_scheduler</a>() = 0;<span class="comment"></span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">    /** Real scheduler accessor</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     * @return The real scheduler</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a> *<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml#a5a8c9bfdfbdcdddc697f438ba2244620">scheduler</a>() = 0;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;};</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">/** Instrument creating measurements based on the information returned by clGetEventProfilingInfo for each OpenCL kernel executed*/</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> output_timestamps&gt;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">   63</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml#ac4310bc8ea513b536edc0a34db19ff9e">   66</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml#ac4310bc8ea513b536edc0a34db19ff9e">LayerData</a> = std::map&lt;std::string, std::string&gt;;<span class="comment"></span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /** Construct a Scheduler timer.</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     * @param[in] scale_factor Measurement scale factor.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a>(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a> scale_factor);<span class="comment"></span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /** Prevent instances of this class from being copy constructed */</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied */</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">    /** Use the default move assignment operator */</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a> &amp;operator=(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">    /** Use the default move constructor */</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    /** Use the default destructor */</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    ~<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// Inherited overridden methods</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    std::string                 id() <span class="keyword">const override</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">void</span>                        test_start() <span class="keyword">override</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">void</span>                        start() <span class="keyword">override</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">void</span>                        test_stop() <span class="keyword">override</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">Instrument::MeasurementsMap</a> measurements() <span class="keyword">const override</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    std::string                 instrument_header() <span class="keyword">const override</span>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">    /** Kernel information */</span></div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_clock_1_1kernel__info.xhtml">   92</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_clock_1_1kernel__info.xhtml">kernel_info</a></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_clock_1_1kernel__info.xhtml#a5f061b503cb1681c0b047c04d645e24e">   94</a></span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">Instrument::MeasurementsMap</a> measurements{}; <span class="comment">/**&lt; Time it took the kernel to run */</span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_clock_1_1kernel__info.xhtml#a9b45b3e13bd9167aab02e17e08916231">   95</a></span>&#160;        std::string                 <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>{};         <span class="comment">/**&lt; Kernel name */</span></div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_clock_1_1kernel__info.xhtml#a78fb15511f687fe7fdb8e3ba9613648b">   96</a></span>&#160;        std::string                 prefix{};       <span class="comment">/**&lt; Kernel prefix */</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    };</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    std::list&lt;kernel_info&gt; _kernels;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    std::map&lt;std::string, LayerData&gt; _layer_data_map;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a>     *_real_scheduler;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Scheduler::Type</a> _real_scheduler_type;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_GRAPH_ENABLED</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    std::function&lt;decltype(graph::execute_task)&gt; _real_graph_function;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GRAPH_ENABLED */</span><span class="preprocessor"></span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a>                   _scale_factor;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::shared_ptr&lt;IScheduler&gt;   _interceptor;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    std::vector&lt;ISchedulerUser *&gt; _scheduler_users;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;};</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1framework.xhtml#a51a7da881c52f992609a40c63253b8ae">  112</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerTimer</a>      = <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock&lt;false&gt;</a>;</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1framework.xhtml#aabd87e6be0a792475c0a9b7f513484ea">  113</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerTimestamps</a> = <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock&lt;true&gt;</a>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;} <span class="comment">// namespace framework</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_TEST_SCHEDULER_TIMER */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user_xhtml_a5a8c9bfdfbdcdddc697f438ba2244620"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml#a5a8c9bfdfbdcdddc697f438ba2244620">arm_compute::test::framework::ISchedulerUser::scheduler</a></div><div class="ttdeci">virtual IScheduler * scheduler()=0</div><div class="ttdoc">Real scheduler accessor. </div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">arm_compute::Scheduler::Type</a></div><div class="ttdeci">Type</div><div class="ttdoc">Scheduler type. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_8h_source.xhtml#l00039">Scheduler.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock_xhtml_ac4310bc8ea513b536edc0a34db19ff9e"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml#ac4310bc8ea513b536edc0a34db19ff9e">arm_compute::test::framework::SchedulerClock::LayerData</a></div><div class="ttdeci">std::map&lt; std::string, std::string &gt; LayerData</div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8h_source.xhtml#l00066">SchedulerTimer.h:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_scheduler_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml">arm_compute::IScheduler</a></div><div class="ttdoc">Scheduler interface to run kernels. </div><div class="ttdef"><b>Definition:</b> <a href="_i_scheduler_8h_source.xhtml#l00041">IScheduler.h:41</a></div></div>
<div class="ttc" id="_workload_8h_xhtml"><div class="ttname"><a href="_workload_8h.xhtml">Workload.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user_xhtml_a82cd5cd76f2e24a56b7f0f502d218d5d"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml#a82cd5cd76f2e24a56b7f0f502d218d5d">arm_compute::test::framework::ISchedulerUser::restore_scheduler</a></div><div class="ttdeci">virtual void restore_scheduler()=0</div><div class="ttdoc">Restore the original scheduler. </div></div>
<div class="ttc" id="_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
<div class="ttc" id="_scheduler_8h_xhtml"><div class="ttname"><a href="_scheduler_8h.xhtml">Scheduler.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml">arm_compute::test::framework::ISchedulerUser</a></div><div class="ttdoc">Scheduler user interface. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8h_source.xhtml#l00042">SchedulerTimer.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_instrument_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">arm_compute::test::framework::Instrument</a></div><div class="ttdoc">Interface for classes that can be used to measure performance. </div><div class="ttdef"><b>Definition:</b> <a href="_instrument_8h_source.xhtml#l00050">Instrument.h:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_instrument_xhtml_afc7df496e6026b91c3f48da6821c86a9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">arm_compute::test::framework::Instrument::MeasurementsMap</a></div><div class="ttdeci">std::map&lt; std::string, Measurement &gt; MeasurementsMap</div><div class="ttdoc">Map of measurements. </div><div class="ttdef"><b>Definition:</b> <a href="_instrument_8h_source.xhtml#l00109">Instrument.h:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user_xhtml_a8fd08e95e9524a80d17488f0f1cc6d11"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml#a8fd08e95e9524a80d17488f0f1cc6d11">arm_compute::test::framework::ISchedulerUser::~ISchedulerUser</a></div><div class="ttdeci">virtual ~ISchedulerUser()=default</div><div class="ttdoc">Default Destructor. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user_xhtml_a4843c7dfdf88d463275133d3278df03a"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml#a4843c7dfdf88d463275133d3278df03a">arm_compute::test::framework::ISchedulerUser::intercept_scheduler</a></div><div class="ttdeci">virtual void intercept_scheduler(std::unique_ptr&lt; IScheduler &gt; interceptor)=0</div><div class="ttdoc">Intercept the scheduler used by. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">arm_compute::test::framework::ScaleFactor</a></div><div class="ttdeci">ScaleFactor</div><div class="ttdef"><b>Definition:</b> <a href="_instrument_8h_source.xhtml#l00040">Instrument.h:40</a></div></div>
<div class="ttc" id="_instrument_8h_xhtml"><div class="ttname"><a href="_instrument_8h.xhtml">Instrument.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_scheduler_clock_1_1kernel__info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_scheduler_clock_1_1kernel__info.xhtml">arm_compute::test::framework::SchedulerClock::kernel_info</a></div><div class="ttdoc">Kernel information. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8h_source.xhtml#l00092">SchedulerTimer.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">arm_compute::test::framework::SchedulerClock</a></div><div class="ttdoc">Instrument creating measurements based on the information returned by clGetEventProfilingInfo for eac...</div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8h_source.xhtml#l00063">SchedulerTimer.h:63</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="dir_4efd0ee2ecda32567e74991b08d544ea.xhtml">instruments</a></li><li class="navelem"><a class="el" href="_scheduler_timer_8h.xhtml">SchedulerTimer.h</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:55 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
