<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLSubTensor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_sub_tensor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLSubTensor Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic implementation of the OpenCL sub-tensor interface.  
 <a href="classarm__compute_1_1_c_l_sub_tensor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_sub_tensor_8h_source.xhtml">CLSubTensor.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLSubTensor:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_sub_tensor__coll__graph.svg" width="115" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8eba94c1cb1d9ddf253b3d9594ac4355"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a8eba94c1cb1d9ddf253b3d9594ac4355">CLSubTensor</a> ()</td></tr>
<tr class="memdesc:a8eba94c1cb1d9ddf253b3d9594ac4355"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a8eba94c1cb1d9ddf253b3d9594ac4355">More...</a><br /></td></tr>
<tr class="separator:a8eba94c1cb1d9ddf253b3d9594ac4355"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65fe9103d114c8677b9c62844f9d9b22"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a65fe9103d114c8677b9c62844f9d9b22">CLSubTensor</a> (<a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *<a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#ae06581a05b08fb202d499444ae791e15">parent</a>, const <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;coords, bool extend_parent=false)</td></tr>
<tr class="memdesc:a65fe9103d114c8677b9c62844f9d9b22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a65fe9103d114c8677b9c62844f9d9b22">More...</a><br /></td></tr>
<tr class="separator:a65fe9103d114c8677b9c62844f9d9b22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f3d38e602db0a6af8ac5e932d798617"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a3f3d38e602db0a6af8ac5e932d798617">~CLSubTensor</a> ()=default</td></tr>
<tr class="memdesc:a3f3d38e602db0a6af8ac5e932d798617"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor: free the tensor's memory.  <a href="#a3f3d38e602db0a6af8ac5e932d798617">More...</a><br /></td></tr>
<tr class="separator:a3f3d38e602db0a6af8ac5e932d798617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3770cb2663115441657ca172d0df5bc5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a3770cb2663115441657ca172d0df5bc5">CLSubTensor</a> (const <a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> &amp;)=delete</td></tr>
<tr class="memdesc:a3770cb2663115441657ca172d0df5bc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restrict instances of this class to be copy constructed.  <a href="#a3770cb2663115441657ca172d0df5bc5">More...</a><br /></td></tr>
<tr class="separator:a3770cb2663115441657ca172d0df5bc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e7404a38329c9f1fcce42b8098dc6f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a9e7404a38329c9f1fcce42b8098dc6f9">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> &amp;)=delete</td></tr>
<tr class="memdesc:a9e7404a38329c9f1fcce42b8098dc6f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restrict instances of this class to be copied.  <a href="#a9e7404a38329c9f1fcce42b8098dc6f9">More...</a><br /></td></tr>
<tr class="separator:a9e7404a38329c9f1fcce42b8098dc6f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65c6e5ec2b8035889c3114462010b612"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a65c6e5ec2b8035889c3114462010b612">CLSubTensor</a> (<a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a65c6e5ec2b8035889c3114462010b612"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="#a65c6e5ec2b8035889c3114462010b612">More...</a><br /></td></tr>
<tr class="separator:a65c6e5ec2b8035889c3114462010b612"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee53085b838758adfce05657de25f5c5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#aee53085b838758adfce05657de25f5c5">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:aee53085b838758adfce05657de25f5c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#aee53085b838758adfce05657de25f5c5">More...</a><br /></td></tr>
<tr class="separator:aee53085b838758adfce05657de25f5c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14c53d2d17be6fa8a2c9861527c7b002"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a> (bool blocking=true)</td></tr>
<tr class="memdesc:a14c53d2d17be6fa8a2c9861527c7b002"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer.  <a href="#a14c53d2d17be6fa8a2c9861527c7b002">More...</a><br /></td></tr>
<tr class="separator:a14c53d2d17be6fa8a2c9861527c7b002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ffeb3b5abb3d61f62b58a391816201c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a> ()</td></tr>
<tr class="memdesc:a1ffeb3b5abb3d61f62b58a391816201c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated and mapped buffer.  <a href="#a1ffeb3b5abb3d61f62b58a391816201c">More...</a><br /></td></tr>
<tr class="separator:a1ffeb3b5abb3d61f62b58a391816201c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae06581a05b08fb202d499444ae791e15"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#ae06581a05b08fb202d499444ae791e15">parent</a> ()</td></tr>
<tr class="memdesc:ae06581a05b08fb202d499444ae791e15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the parent tensor of the subtensor.  <a href="#ae06581a05b08fb202d499444ae791e15">More...</a><br /></td></tr>
<tr class="separator:ae06581a05b08fb202d499444ae791e15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47d74e4e51f9b1a636c4831bd747a97c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a> () const override</td></tr>
<tr class="memdesc:a47d74e4e51f9b1a636c4831bd747a97c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's metadata.  <a href="#a47d74e4e51f9b1a636c4831bd747a97c">More...</a><br /></td></tr>
<tr class="separator:a47d74e4e51f9b1a636c4831bd747a97c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3913a3ffefed788b1fa3fb91407472a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#af3913a3ffefed788b1fa3fb91407472a">info</a> () override</td></tr>
<tr class="memdesc:af3913a3ffefed788b1fa3fb91407472a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's metadata.  <a href="#af3913a3ffefed788b1fa3fb91407472a">More...</a><br /></td></tr>
<tr class="separator:af3913a3ffefed788b1fa3fb91407472a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53c338c0d76f41c472cdbf66fafdfe91"><td class="memItemLeft" align="right" valign="top">const cl::Buffer &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a53c338c0d76f41c472cdbf66fafdfe91">cl_buffer</a> () const override</td></tr>
<tr class="memdesc:a53c338c0d76f41c472cdbf66fafdfe91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return a reference to the OpenCL buffer containing the image's data.  <a href="#a53c338c0d76f41c472cdbf66fafdfe91">More...</a><br /></td></tr>
<tr class="separator:a53c338c0d76f41c472cdbf66fafdfe91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d614dfaa0606b7fef13f3e26d745b48"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1_c_l_quantization.xhtml">CLQuantization</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a6d614dfaa0606b7fef13f3e26d745b48">quantization</a> () const override</td></tr>
<tr class="memdesc:a6d614dfaa0606b7fef13f3e26d745b48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the wrapped quantization info data.  <a href="#a6d614dfaa0606b7fef13f3e26d745b48">More...</a><br /></td></tr>
<tr class="separator:a6d614dfaa0606b7fef13f3e26d745b48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_l_tensor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_l_tensor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a></td></tr>
<tr class="memitem:a64399eb327ea2e4ecd2c8086a8dc01ce inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a64399eb327ea2e4ecd2c8086a8dc01ce">ICLTensor</a> ()</td></tr>
<tr class="memdesc:a64399eb327ea2e4ecd2c8086a8dc01ce inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1_i_c_l_tensor.xhtml#a64399eb327ea2e4ecd2c8086a8dc01ce">More...</a><br /></td></tr>
<tr class="separator:a64399eb327ea2e4ecd2c8086a8dc01ce inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad49b11e9c7276ca78046ad4c339cd7c6 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#ad49b11e9c7276ca78046ad4c339cd7c6">ICLTensor</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> &amp;)=delete</td></tr>
<tr class="memdesc:ad49b11e9c7276ca78046ad4c339cd7c6 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy constructed.  <a href="classarm__compute_1_1_i_c_l_tensor.xhtml#ad49b11e9c7276ca78046ad4c339cd7c6">More...</a><br /></td></tr>
<tr class="separator:ad49b11e9c7276ca78046ad4c339cd7c6 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af72219f9b5e8803950eb8863a23c076e inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#af72219f9b5e8803950eb8863a23c076e">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> &amp;)=delete</td></tr>
<tr class="memdesc:af72219f9b5e8803950eb8863a23c076e inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="classarm__compute_1_1_i_c_l_tensor.xhtml#af72219f9b5e8803950eb8863a23c076e">More...</a><br /></td></tr>
<tr class="separator:af72219f9b5e8803950eb8863a23c076e inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae81da2706cd5717c6c4d7cea239a1e03 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#ae81da2706cd5717c6c4d7cea239a1e03">ICLTensor</a> (<a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ae81da2706cd5717c6c4d7cea239a1e03 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1_i_c_l_tensor.xhtml#ae81da2706cd5717c6c4d7cea239a1e03">More...</a><br /></td></tr>
<tr class="separator:ae81da2706cd5717c6c4d7cea239a1e03 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a7368baa4f8580ea732b2a352217b80 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a6a7368baa4f8580ea732b2a352217b80">operator=</a> (<a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a6a7368baa4f8580ea732b2a352217b80 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copied.  <a href="classarm__compute_1_1_i_c_l_tensor.xhtml#a6a7368baa4f8580ea732b2a352217b80">More...</a><br /></td></tr>
<tr class="separator:a6a7368baa4f8580ea732b2a352217b80 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0bce17c5cd01f2b45cc59afd615913e inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#aa0bce17c5cd01f2b45cc59afd615913e">~ICLTensor</a> ()=default</td></tr>
<tr class="memdesc:aa0bce17c5cd01f2b45cc59afd615913e inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_c_l_tensor.xhtml#aa0bce17c5cd01f2b45cc59afd615913e">More...</a><br /></td></tr>
<tr class="separator:aa0bce17c5cd01f2b45cc59afd615913e inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0abc7a5c0d172947f0e6a0c0dde3df0 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">map</a> (cl::CommandQueue &amp;q, bool blocking=true)</td></tr>
<tr class="memdesc:ac0abc7a5c0d172947f0e6a0c0dde3df0 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="classarm__compute_1_1_i_c_l_tensor.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">More...</a><br /></td></tr>
<tr class="separator:ac0abc7a5c0d172947f0e6a0c0dde3df0 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af974a2360069c2ef8df4496d00e4f6cc inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#af974a2360069c2ef8df4496d00e4f6cc">unmap</a> (cl::CommandQueue &amp;q)</td></tr>
<tr class="memdesc:af974a2360069c2ef8df4496d00e4f6cc inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated and mapped buffer on the given queue.  <a href="classarm__compute_1_1_i_c_l_tensor.xhtml#af974a2360069c2ef8df4496d00e4f6cc">More...</a><br /></td></tr>
<tr class="separator:af974a2360069c2ef8df4496d00e4f6cc inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b94593f2b06f00d380ec3a3e6abccb2 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a7b94593f2b06f00d380ec3a3e6abccb2">clear</a> (cl::CommandQueue &amp;q)</td></tr>
<tr class="memdesc:a7b94593f2b06f00d380ec3a3e6abccb2 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear the contents of the tensor synchronously.  <a href="classarm__compute_1_1_i_c_l_tensor.xhtml#a7b94593f2b06f00d380ec3a3e6abccb2">More...</a><br /></td></tr>
<tr class="separator:a7b94593f2b06f00d380ec3a3e6abccb2 inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24954cca5108a24706441fd99a7fb04c inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a> () const override</td></tr>
<tr class="memdesc:a24954cca5108a24706441fd99a7fb04c inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return a pointer to CPU memory.  <a href="classarm__compute_1_1_i_c_l_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">More...</a><br /></td></tr>
<tr class="separator:a24954cca5108a24706441fd99a7fb04c inherit pub_methods_classarm__compute_1_1_i_c_l_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_tensor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_tensor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a></td></tr>
<tr class="memitem:a4aa2df36743089ac6814d83e7d4b7ffc inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a4aa2df36743089ac6814d83e7d4b7ffc">~ITensor</a> ()=default</td></tr>
<tr class="memdesc:a4aa2df36743089ac6814d83e7d4b7ffc inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_tensor.xhtml#a4aa2df36743089ac6814d83e7d4b7ffc">More...</a><br /></td></tr>
<tr class="separator:a4aa2df36743089ac6814d83e7d4b7ffc inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbd73147d41e8a640bc299d12613c31e inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a> (const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;id) const</td></tr>
<tr class="memdesc:adbd73147d41e8a640bc299d12613c31e inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a pointer to the element at the passed coordinates.  <a href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">More...</a><br /></td></tr>
<tr class="separator:adbd73147d41e8a640bc299d12613c31e inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a774ad8d5f4837f3d7de1876d367c5b inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a4a774ad8d5f4837f3d7de1876d367c5b">copy_from</a> (const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> &amp;src)</td></tr>
<tr class="memdesc:a4a774ad8d5f4837f3d7de1876d367c5b inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy the content of another tensor.  <a href="classarm__compute_1_1_i_tensor.xhtml#a4a774ad8d5f4837f3d7de1876d367c5b">More...</a><br /></td></tr>
<tr class="separator:a4a774ad8d5f4837f3d7de1876d367c5b inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade74189c92e70baa2848986c10dbe7ef inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ade74189c92e70baa2848986c10dbe7ef">print</a> (std::ostream &amp;s, <a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a> io_fmt=<a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a>()) const</td></tr>
<tr class="memdesc:ade74189c92e70baa2848986c10dbe7ef inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print a tensor to a given stream using user defined formatting information.  <a href="classarm__compute_1_1_i_tensor.xhtml#ade74189c92e70baa2848986c10dbe7ef">More...</a><br /></td></tr>
<tr class="separator:ade74189c92e70baa2848986c10dbe7ef inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a209ea2ddfdfa80703799c92da8beb643 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">is_used</a> () const</td></tr>
<tr class="memdesc:a209ea2ddfdfa80703799c92da8beb643 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flags if the tensor is used or not.  <a href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">More...</a><br /></td></tr>
<tr class="separator:a209ea2ddfdfa80703799c92da8beb643 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bc00234de9adf8c99a21eb1d7d494c2 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a> () const</td></tr>
<tr class="memdesc:a9bc00234de9adf8c99a21eb1d7d494c2 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks a tensor as unused.  <a href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">More...</a><br /></td></tr>
<tr class="separator:a9bc00234de9adf8c99a21eb1d7d494c2 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bac1e8a45b7823cbd4f74fe44f8c602 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0bac1e8a45b7823cbd4f74fe44f8c602">mark_as_used</a> () const</td></tr>
<tr class="memdesc:a0bac1e8a45b7823cbd4f74fe44f8c602 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks a tensor as used.  <a href="classarm__compute_1_1_i_tensor.xhtml#a0bac1e8a45b7823cbd4f74fe44f8c602">More...</a><br /></td></tr>
<tr class="separator:a0bac1e8a45b7823cbd4f74fe44f8c602 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic implementation of the OpenCL sub-tensor interface. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_sub_tensor_8h_source.xhtml#l00037">37</a> of file <a class="el" href="_c_l_sub_tensor_8h_source.xhtml">CLSubTensor.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8eba94c1cb1d9ddf253b3d9594ac4355"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8eba94c1cb1d9ddf253b3d9594ac4355">&#9670;&nbsp;</a></span>CLSubTensor() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml">CLSubTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    : _parent(<span class="keyword">nullptr</span>), _info()</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a65fe9103d114c8677b9c62844f9d9b22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65fe9103d114c8677b9c62844f9d9b22">&#9670;&nbsp;</a></span>CLSubTensor() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor_shape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;&#160;</td>
          <td class="paramname"><em>coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>extend_parent</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">parent</td><td>Parent tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor_shape</td><td>Shape of the subtensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">coords</td><td><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item. ">Coordinates</a> of the first subtensor element inside the parent tensor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">extend_parent</td><td>(Optional) Extend parent with subtensor shape if subtensor indexes out of bounds </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml">CLSubTensor.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, and <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00066">CLSubTensor::parent()</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    : _parent(<span class="keyword">nullptr</span>), _info()</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    _info   = <a class="code" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a>(parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), tensor_shape, coords, extend_parent);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    _parent = <a class="code" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#ae06581a05b08fb202d499444ae791e15">parent</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_sub_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_sub_tensor_info.xhtml">arm_compute::SubTensorInfo</a></div><div class="ttdoc">Store the sub tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_sub_tensor_info_8h_source.xhtml#l00041">SubTensorInfo.h:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_sub_tensor_xhtml_ae06581a05b08fb202d499444ae791e15"><div class="ttname"><a href="classarm__compute_1_1_c_l_sub_tensor.xhtml#ae06581a05b08fb202d499444ae791e15">arm_compute::CLSubTensor::parent</a></div><div class="ttdeci">ICLTensor * parent()</div><div class="ttdoc">Return the parent tensor of the subtensor. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_sub_tensor_8cpp_source.xhtml#l00066">CLSubTensor.cpp:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3f3d38e602db0a6af8ac5e932d798617"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f3d38e602db0a6af8ac5e932d798617">&#9670;&nbsp;</a></span>~CLSubTensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor: free the tensor's memory. </p>

</div>
</div>
<a id="a3770cb2663115441657ca172d0df5bc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3770cb2663115441657ca172d0df5bc5">&#9670;&nbsp;</a></span>CLSubTensor() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Restrict instances of this class to be copy constructed. </p>

</div>
</div>
<a id="a65c6e5ec2b8035889c3114462010b612"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65c6e5ec2b8035889c3114462010b612">&#9670;&nbsp;</a></span>CLSubTensor() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a53c338c0d76f41c472cdbf66fafdfe91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53c338c0d76f41c472cdbf66fafdfe91">&#9670;&nbsp;</a></span>cl_buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const cl::Buffer &amp; cl_buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return a reference to the OpenCL buffer containing the image's data. </p>
<dl class="section return"><dt>Returns</dt><dd>A reference to an OpenCL buffer containing the image's data. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a1fb4c50755a0ef424652246838ed91a6">ICLTensor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml">CLSubTensor.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a1fb4c50755a0ef424652246838ed91a6">ICLTensor::cl_buffer()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00076">CLSubTensor::unmap()</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a1fb4c50755a0ef424652246838ed91a6">cl_buffer</a>();</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml_a1fb4c50755a0ef424652246838ed91a6"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml#a1fb4c50755a0ef424652246838ed91a6">arm_compute::ICLTensor::cl_buffer</a></div><div class="ttdeci">virtual const cl::Buffer &amp; cl_buffer() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return a reference to the OpenCL buffer containing ...</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a47d74e4e51f9b1a636c4831bd747a97c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47d74e4e51f9b1a636c4831bd747a97c">&#9670;&nbsp;</a></span>info() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the tensor's metadata. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the tensor's metadata. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml">CLSubTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> &amp;_info;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af3913a3ffefed788b1fa3fb91407472a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3913a3ffefed788b1fa3fb91407472a">&#9670;&nbsp;</a></span>info() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the tensor's metadata. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the tensor's metadata. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a7e6b5e55a2914b1fb1966310e7733ac4">ITensor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml">CLSubTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> &amp;_info;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a14c53d2d17be6fa8a2c9861527c7b002"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14c53d2d17be6fa8a2c9861527c7b002">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void map </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer. </p>
<dl class="section note"><dt>Note</dt><dd>Mapping a subtensor will lead to the mapping of the whole parent tensor for now.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00071">71</a> of file <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml">CLSubTensor.cpp</a>.</p>

<p class="reference">References <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler::get()</a>, and <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00035">ICLTensor::map()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_sub_tensor_handle_8cpp_source.xhtml#l00059">CLSubTensorHandle::map()</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">ICLTensor::map</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue(), blocking);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml_ac0abc7a5c0d172947f0e6a0c0dde3df0"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">arm_compute::ICLTensor::map</a></div><div class="ttdeci">void map(cl::CommandQueue &amp;q, bool blocking=true)</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue. </div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8cpp_source.xhtml#l00035">ICLTensor.cpp:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9e7404a38329c9f1fcce42b8098dc6f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e7404a38329c9f1fcce42b8098dc6f9">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Restrict instances of this class to be copied. </p>

</div>
</div>
<a id="aee53085b838758adfce05657de25f5c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee53085b838758adfce05657de25f5c5">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ae06581a05b08fb202d499444ae791e15"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae06581a05b08fb202d499444ae791e15">&#9670;&nbsp;</a></span>parent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> * parent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the parent tensor of the subtensor. </p>
<dl class="section return"><dt>Returns</dt><dd>Parent tensor </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00066">66</a> of file <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml">CLSubTensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00037">CLSubTensor::CLSubTensor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> _parent;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6d614dfaa0606b7fef13f3e26d745b48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d614dfaa0606b7fef13f3e26d745b48">&#9670;&nbsp;</a></span>quantization()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1_c_l_quantization.xhtml">CLQuantization</a> quantization </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the wrapped quantization info data. </p>
<dl class="section return"><dt>Returns</dt><dd>A wrapped quantization info object. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#aff9433a5bb38873d6af3d45e6f638281">ICLTensor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml">CLSubTensor.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#aff9433a5bb38873d6af3d45e6f638281">ICLTensor::quantization()</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml#aff9433a5bb38873d6af3d45e6f638281">quantization</a>();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml_aff9433a5bb38873d6af3d45e6f638281"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml#aff9433a5bb38873d6af3d45e6f638281">arm_compute::ICLTensor::quantization</a></div><div class="ttdeci">virtual CLQuantization quantization() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the wrapped quantization info data...</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1ffeb3b5abb3d61f62b58a391816201c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ffeb3b5abb3d61f62b58a391816201c">&#9670;&nbsp;</a></span>unmap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated and mapped buffer. </p>
<dl class="section note"><dt>Note</dt><dd>Unmapping a subtensor will lead to the unmapping of the whole parent tensor for now.</dd>
<dd>
This method simply enqueues the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00076">76</a> of file <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml">CLSubTensor.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00053">ICLTensor::buffer()</a>, <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00055">CLSubTensor::cl_buffer()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler::get()</a>, <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00035">ICLTensor::map()</a>, and <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00040">ICLTensor::unmap()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_sub_tensor_handle_8cpp_source.xhtml#l00064">CLSubTensorHandle::unmap()</a>.</p>
<div class="fragment"><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml#af974a2360069c2ef8df4496d00e4f6cc">ICLTensor::unmap</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml_af974a2360069c2ef8df4496d00e4f6cc"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml#af974a2360069c2ef8df4496d00e4f6cc">arm_compute::ICLTensor::unmap</a></div><div class="ttdeci">void unmap(cl::CommandQueue &amp;q)</div><div class="ttdoc">Enqueue an unmap operation of the allocated and mapped buffer on the given queue. ...</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8cpp_source.xhtml#l00040">ICLTensor.cpp:40</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/<a class="el" href="_c_l_sub_tensor_8h_source.xhtml">CLSubTensor.h</a></li>
<li>src/runtime/CL/<a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml">CLSubTensor.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:57:01 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
