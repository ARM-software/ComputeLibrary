<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ITensorDescPack&lt; TDesc &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">ITensorDescPack&lt; TDesc &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_1_1_pack_element.xhtml">PackElement</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:adc913b2b859c9db15005941552d596ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#adc913b2b859c9db15005941552d596ae">ITensorDescPack</a> ()=default</td></tr>
<tr class="memdesc:adc913b2b859c9db15005941552d596ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#adc913b2b859c9db15005941552d596ae">More...</a><br /></td></tr>
<tr class="separator:adc913b2b859c9db15005941552d596ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab789da9fc38a7b2d09aca5e36c3b5f2b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#ab789da9fc38a7b2d09aca5e36c3b5f2b">~ITensorDescPack</a> ()=default</td></tr>
<tr class="separator:ab789da9fc38a7b2d09aca5e36c3b5f2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97f3b54610f26cdf4fc35ba2cde5eb61"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a97f3b54610f26cdf4fc35ba2cde5eb61">ITensorDescPack</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;other)=default</td></tr>
<tr class="separator:a97f3b54610f26cdf4fc35ba2cde5eb61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a835e82756a82d2190fb493894ceff21e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a835e82756a82d2190fb493894ceff21e">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;other)=default</td></tr>
<tr class="separator:a835e82756a82d2190fb493894ceff21e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a069fbac3d777d08e42775f0d6e853635"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a069fbac3d777d08e42775f0d6e853635">ITensorDescPack</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;&amp;other)=default</td></tr>
<tr class="separator:a069fbac3d777d08e42775f0d6e853635"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29c268b3b3d2b1cff922cf2b628e2928"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a29c268b3b3d2b1cff922cf2b628e2928">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;&amp;other)=default</td></tr>
<tr class="separator:a29c268b3b3d2b1cff922cf2b628e2928"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a58bd7da3e5a2f6c38ad071b5118445"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a4a58bd7da3e5a2f6c38ad071b5118445">ITensorDescPack</a> (std::initializer_list&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_1_1_pack_element.xhtml">PackElement</a> &gt; l)</td></tr>
<tr class="memdesc:a4a58bd7da3e5a2f6c38ad071b5118445"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializer list Constructor.  <a href="#a4a58bd7da3e5a2f6c38ad071b5118445">More...</a><br /></td></tr>
<tr class="separator:a4a58bd7da3e5a2f6c38ad071b5118445"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56377ca97195cdd53c63a2677815c8e1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a56377ca97195cdd53c63a2677815c8e1">add_tensor</a> (int id, TDesc *<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</td></tr>
<tr class="memdesc:a56377ca97195cdd53c63a2677815c8e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add tensor to the pack.  <a href="#a56377ca97195cdd53c63a2677815c8e1">More...</a><br /></td></tr>
<tr class="separator:a56377ca97195cdd53c63a2677815c8e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a228484585f0c1b71ad5392081698d722"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">add_const_tensor</a> (int id, const TDesc *<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</td></tr>
<tr class="memdesc:a228484585f0c1b71ad5392081698d722"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add const tensor to the pack.  <a href="#a228484585f0c1b71ad5392081698d722">More...</a><br /></td></tr>
<tr class="separator:a228484585f0c1b71ad5392081698d722"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6af1d045fe5cc76437dcd176915da0e3"><td class="memItemLeft" align="right" valign="top">TDesc *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a6af1d045fe5cc76437dcd176915da0e3">get_tensor</a> (int id)</td></tr>
<tr class="memdesc:a6af1d045fe5cc76437dcd176915da0e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get tensor of a given id from the pac.  <a href="#a6af1d045fe5cc76437dcd176915da0e3">More...</a><br /></td></tr>
<tr class="separator:a6af1d045fe5cc76437dcd176915da0e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1fca843d72b749b8446f2c057b26d5d"><td class="memItemLeft" align="right" valign="top">const TDesc *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#aa1fca843d72b749b8446f2c057b26d5d">get_const_tensor</a> (int id) const</td></tr>
<tr class="memdesc:aa1fca843d72b749b8446f2c057b26d5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get constant tensor of a given id.  <a href="#aa1fca843d72b749b8446f2c057b26d5d">More...</a><br /></td></tr>
<tr class="separator:aa1fca843d72b749b8446f2c057b26d5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2475b3be2ed6a5ef5654491aa6b7ca48"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a2475b3be2ed6a5ef5654491aa6b7ca48">remove_tensor</a> (int id)</td></tr>
<tr class="memdesc:a2475b3be2ed6a5ef5654491aa6b7ca48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove the tensor stored with the given id.  <a href="#a2475b3be2ed6a5ef5654491aa6b7ca48">More...</a><br /></td></tr>
<tr class="separator:a2475b3be2ed6a5ef5654491aa6b7ca48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259cb5a711406a8c3e5d937eb9350cca"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a> () const</td></tr>
<tr class="memdesc:a259cb5a711406a8c3e5d937eb9350cca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pack size accessor.  <a href="#a259cb5a711406a8c3e5d937eb9350cca">More...</a><br /></td></tr>
<tr class="separator:a259cb5a711406a8c3e5d937eb9350cca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a644718bb2fb240de962dc3c9a1fdf0dc">empty</a> () const</td></tr>
<tr class="memdesc:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if pack is empty.  <a href="#a644718bb2fb240de962dc3c9a1fdf0dc">More...</a><br /></td></tr>
<tr class="separator:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4efa4f7b0fcd5594827a38d56c4acbb"><td class="memItemLeft" align="right" valign="top">std::vector&lt; TDesc * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#aa4efa4f7b0fcd5594827a38d56c4acbb">get_src_tensors</a> ()</td></tr>
<tr class="memdesc:aa4efa4f7b0fcd5594827a38d56c4acbb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the ACL_SRC_* tensors.  <a href="#aa4efa4f7b0fcd5594827a38d56c4acbb">More...</a><br /></td></tr>
<tr class="separator:aa4efa4f7b0fcd5594827a38d56c4acbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8056850f0c668e3212b7f9328a09c5"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const TDesc * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#aff8056850f0c668e3212b7f9328a09c5">get_const_src_tensors</a> () const</td></tr>
<tr class="memdesc:aff8056850f0c668e3212b7f9328a09c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the const ACL_SRC_* tensors.  <a href="#aff8056850f0c668e3212b7f9328a09c5">More...</a><br /></td></tr>
<tr class="separator:aff8056850f0c668e3212b7f9328a09c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fbc1e6c05c5ba1bdb859da1af2115e6"><td class="memItemLeft" align="right" valign="top">std::vector&lt; TDesc * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a0fbc1e6c05c5ba1bdb859da1af2115e6">get_dst_tensors</a> ()</td></tr>
<tr class="memdesc:a0fbc1e6c05c5ba1bdb859da1af2115e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the ACL_DST_* tensors.  <a href="#a0fbc1e6c05c5ba1bdb859da1af2115e6">More...</a><br /></td></tr>
<tr class="separator:a0fbc1e6c05c5ba1bdb859da1af2115e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a954c38e39aec982618c6f87688765086"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const TDesc * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a954c38e39aec982618c6f87688765086">get_const_dst_tensors</a> () const</td></tr>
<tr class="memdesc:a954c38e39aec982618c6f87688765086"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the const ACL_DST_* tensors.  <a href="#a954c38e39aec982618c6f87688765086">More...</a><br /></td></tr>
<tr class="separator:a954c38e39aec982618c6f87688765086"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a9bcc5c7446b1d5a8c26fe0b0ff540423"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a9bcc5c7446b1d5a8c26fe0b0ff540423">operator==</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;pack0, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;pack1)</td></tr>
<tr class="separator:a9bcc5c7446b1d5a8c26fe0b0ff540423"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename TDesc&gt;<br />
class arm_compute::experimental::dynamic_fusion::ITensorDescPack&lt; TDesc &gt;</h3>


<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00039">39</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="adc913b2b859c9db15005941552d596ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc913b2b859c9db15005941552d596ae">&#9670;&nbsp;</a></span>ITensorDescPack() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>

</div>
</div>
<a id="ab789da9fc38a7b2d09aca5e36c3b5f2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab789da9fc38a7b2d09aca5e36c3b5f2b">&#9670;&nbsp;</a></span>~ITensorDescPack()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a97f3b54610f26cdf4fc35ba2cde5eb61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97f3b54610f26cdf4fc35ba2cde5eb61">&#9670;&nbsp;</a></span>ITensorDescPack() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a069fbac3d777d08e42775f0d6e853635"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a069fbac3d777d08e42775f0d6e853635">&#9670;&nbsp;</a></span>ITensorDescPack() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4a58bd7da3e5a2f6c38ad071b5118445"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a58bd7da3e5a2f6c38ad071b5118445">&#9670;&nbsp;</a></span>ITensorDescPack() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a> </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_1_1_pack_element.xhtml">PackElement</a> &gt;&#160;</td>
          <td class="paramname"><em>l</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializer list Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00081">81</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        : _pack{}</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;e : l)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            _pack[e.id] = e;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a228484585f0c1b71ad5392081698d722"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a228484585f0c1b71ad5392081698d722">&#9670;&nbsp;</a></span>add_const_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void add_const_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TDesc *&#160;</td>
          <td class="paramname"><em>tensor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add const tensor to the pack. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID/type of the tensor to add </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> to add </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00104">104</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_operator_graph_8cpp_source.xhtml#l00134">arm_compute::experimental::dynamic_fusion::add_op_conv2d()</a>, <a class="el" href="_operator_graph_8cpp_source.xhtml#l00201">arm_compute::experimental::dynamic_fusion::add_op_elementwise_op()</a>, <a class="el" href="_operator_graph_8cpp_source.xhtml#l00233">arm_compute::experimental::dynamic_fusion::add_op_floor()</a>, <a class="el" href="_operator_graph_impl_8cpp_source.xhtml#l00255">Conv2dContent::translate()</a>, <a class="el" href="_operator_graph_impl_8cpp_source.xhtml#l00321">ElementwiseContent::translate()</a>, and <a class="el" href="_operator_graph_impl_8cpp_source.xhtml#l00358">FloorContent::translate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        _pack[id] = PackElement(<span class="keywordtype">id</span>, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div><div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a56377ca97195cdd53c63a2677815c8e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56377ca97195cdd53c63a2677815c8e1">&#9670;&nbsp;</a></span>add_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void add_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">TDesc *&#160;</td>
          <td class="paramname"><em>tensor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add tensor to the pack. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID/type of the tensor to add </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> to add </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00094">94</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        _pack[id] = PackElement(<span class="keywordtype">id</span>, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div><div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a644718bb2fb240de962dc3c9a1fdf0dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a644718bb2fb240de962dc3c9a1fdf0dc">&#9670;&nbsp;</a></span>empty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool empty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if pack is empty. </p>
<dl class="section return"><dt>Returns</dt><dd>True if empty else false </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00154">154</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">return</span> _pack.empty();</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a954c38e39aec982618c6f87688765086"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a954c38e39aec982618c6f87688765086">&#9670;&nbsp;</a></span>get_const_dst_tensors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;const TDesc *&gt; get_const_dst_tensors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the const ACL_DST_* tensors. </p>
<dl class="section return"><dt>Returns</dt><dd>std::vector&lt;const TDesc *&gt; </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00214">214</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_graph_8h_source.xhtml#l00208">ClKernelGraph::add_kernel()</a>.</p>
<div class="fragment"><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        std::vector&lt;const TDesc *&gt; dst_tensors{};</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> <span class="keywordtype">id</span> = static_cast&lt;int&gt;(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>); id &lt;= static_cast&lt;int&gt;(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a3fb1122062a8d6eac28c9fe0dc2aba3d">TensorType::ACL_DST_END</a>); ++id)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        {</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keyword">auto</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#aa1fca843d72b749b8446f2c057b26d5d">get_const_tensor</a>(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                dst_tensors.push_back(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        }</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">return</span> dst_tensors;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_xhtml_aa1fca843d72b749b8446f2c057b26d5d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#aa1fca843d72b749b8446f2c057b26d5d">arm_compute::experimental::dynamic_fusion::ITensorDescPack::get_const_tensor</a></div><div class="ttdeci">const TDesc * get_const_tensor(int id) const</div><div class="ttdoc">Get constant tensor of a given id. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_desc_pack_8h_source.xhtml#l00125">ITensorDescPack.h:125</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a3fb1122062a8d6eac28c9fe0dc2aba3d"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a3fb1122062a8d6eac28c9fe0dc2aba3d">arm_compute::ACL_DST_END</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00059">Types.h:59</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aff8056850f0c668e3212b7f9328a09c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff8056850f0c668e3212b7f9328a09c5">&#9670;&nbsp;</a></span>get_const_src_tensors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;const TDesc *&gt; get_const_src_tensors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the const ACL_SRC_* tensors. </p>
<dl class="section return"><dt>Returns</dt><dd>std::vector&lt;const TDesc *&gt; </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00180">180</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_graph_8h_source.xhtml#l00208">ClKernelGraph::add_kernel()</a>.</p>
<div class="fragment"><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    {</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        std::vector&lt;const TDesc *&gt; src_tensors{};</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> <span class="keywordtype">id</span> = static_cast&lt;int&gt;(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>); id &lt;= static_cast&lt;int&gt;(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a94a384e3d37fd4f398fc4d61d7bd70f4">TensorType::ACL_SRC_END</a>); ++id)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keyword">auto</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#aa1fca843d72b749b8446f2c057b26d5d">get_const_tensor</a>(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            {</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                src_tensors.push_back(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            }</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">return</span> src_tensors;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_xhtml_aa1fca843d72b749b8446f2c057b26d5d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#aa1fca843d72b749b8446f2c057b26d5d">arm_compute::experimental::dynamic_fusion::ITensorDescPack::get_const_tensor</a></div><div class="ttdeci">const TDesc * get_const_tensor(int id) const</div><div class="ttdoc">Get constant tensor of a given id. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_desc_pack_8h_source.xhtml#l00125">ITensorDescPack.h:125</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a94a384e3d37fd4f398fc4d61d7bd70f4"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a94a384e3d37fd4f398fc4d61d7bd70f4">arm_compute::ACL_SRC_END</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00052">Types.h:52</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa1fca843d72b749b8446f2c057b26d5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1fca843d72b749b8446f2c057b26d5d">&#9670;&nbsp;</a></span>get_const_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const TDesc* get_const_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get constant tensor of a given id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID of tensor to extract</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The pointer to the tensor if exist and is const else nullptr </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00125">125</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00214">ITensorDescPack&lt; arm_compute::experimental::dynamic_fusion::OpTensorContent &gt;::get_const_dst_tensors()</a>, and <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00180">ITensorDescPack&lt; arm_compute::experimental::dynamic_fusion::OpTensorContent &gt;::get_const_src_tensors()</a>.</p>
<div class="fragment"><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keyword">auto</span> it = _pack.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">if</span>(it != _pack.end())</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">return</span> it-&gt;second.ctensor != <span class="keyword">nullptr</span> ? it-&gt;second.ctensor : it-&gt;second.tensor;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a0fbc1e6c05c5ba1bdb859da1af2115e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fbc1e6c05c5ba1bdb859da1af2115e6">&#9670;&nbsp;</a></span>get_dst_tensors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;TDesc *&gt; get_dst_tensors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the ACL_DST_* tensors. </p>
<dl class="section return"><dt>Returns</dt><dd>std::vector&lt;TDesc *&gt; </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00197">197</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        std::vector&lt;TDesc *&gt; dst_tensors{};</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> <span class="keywordtype">id</span> = static_cast&lt;int&gt;(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>); id &lt;= static_cast&lt;int&gt;(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a3fb1122062a8d6eac28c9fe0dc2aba3d">TensorType::ACL_DST_END</a>); ++id)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="keyword">auto</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a6af1d045fe5cc76437dcd176915da0e3">get_tensor</a>(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            {</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                dst_tensors.push_back(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            }</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">return</span> dst_tensors;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_xhtml_a6af1d045fe5cc76437dcd176915da0e3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a6af1d045fe5cc76437dcd176915da0e3">arm_compute::experimental::dynamic_fusion::ITensorDescPack::get_tensor</a></div><div class="ttdeci">TDesc * get_tensor(int id)</div><div class="ttdoc">Get tensor of a given id from the pac. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_desc_pack_8h_source.xhtml#l00114">ITensorDescPack.h:114</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a3fb1122062a8d6eac28c9fe0dc2aba3d"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a3fb1122062a8d6eac28c9fe0dc2aba3d">arm_compute::ACL_DST_END</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00059">Types.h:59</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa4efa4f7b0fcd5594827a38d56c4acbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4efa4f7b0fcd5594827a38d56c4acbb">&#9670;&nbsp;</a></span>get_src_tensors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;TDesc *&gt; get_src_tensors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the ACL_SRC_* tensors. </p>
<dl class="section return"><dt>Returns</dt><dd>std::vector&lt;TDesc *&gt; </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00163">163</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        std::vector&lt;TDesc *&gt; src_tensors{};</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> <span class="keywordtype">id</span> = static_cast&lt;int&gt;(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>); id &lt;= static_cast&lt;int&gt;(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a94a384e3d37fd4f398fc4d61d7bd70f4">TensorType::ACL_SRC_END</a>); ++id)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keyword">auto</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a6af1d045fe5cc76437dcd176915da0e3">get_tensor</a>(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                src_tensors.push_back(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">return</span> src_tensors;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_xhtml_a6af1d045fe5cc76437dcd176915da0e3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a6af1d045fe5cc76437dcd176915da0e3">arm_compute::experimental::dynamic_fusion::ITensorDescPack::get_tensor</a></div><div class="ttdeci">TDesc * get_tensor(int id)</div><div class="ttdoc">Get tensor of a given id from the pac. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_desc_pack_8h_source.xhtml#l00114">ITensorDescPack.h:114</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a94a384e3d37fd4f398fc4d61d7bd70f4"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a94a384e3d37fd4f398fc4d61d7bd70f4">arm_compute::ACL_SRC_END</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00052">Types.h:52</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6af1d045fe5cc76437dcd176915da0e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6af1d045fe5cc76437dcd176915da0e3">&#9670;&nbsp;</a></span>get_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">TDesc* get_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get tensor of a given id from the pac. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID of tensor to extract</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The pointer to the tensor if exist and is non-const else nullptr </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00114">114</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00197">ITensorDescPack&lt; arm_compute::experimental::dynamic_fusion::OpTensorContent &gt;::get_dst_tensors()</a>, and <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00163">ITensorDescPack&lt; arm_compute::experimental::dynamic_fusion::OpTensorContent &gt;::get_src_tensors()</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keyword">auto</span> it = _pack.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">return</span> it != _pack.end() ? it-&gt;second.tensor : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a835e82756a82d2190fb493894ceff21e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a835e82756a82d2190fb493894ceff21e">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt;TDesc&gt;&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a29c268b3b3d2b1cff922cf2b628e2928"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29c268b3b3d2b1cff922cf2b628e2928">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt;TDesc&gt;&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2475b3be2ed6a5ef5654491aa6b7ca48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2475b3be2ed6a5ef5654491aa6b7ca48">&#9670;&nbsp;</a></span>remove_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void remove_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Remove the tensor stored with the given id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID of tensor to remove </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00138">138</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        _pack.erase(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a259cb5a711406a8c3e5d937eb9350cca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a259cb5a711406a8c3e5d937eb9350cca">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Pack size accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of tensors registered to the pack </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00146">146</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">return</span> _pack.size();</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a9bcc5c7446b1d5a8c26fe0b0ff540423"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bcc5c7446b1d5a8c26fe0b0ff540423">&#9670;&nbsp;</a></span>operator==</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;&#160;</td>
          <td class="paramname"><em>pack0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a>&lt; TDesc &gt; &amp;&#160;</td>
          <td class="paramname"><em>pack1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml#l00228">228</a> of file <a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">return</span> pack0._pack == pack1._pack;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/core/experimental/dynamic_fusion/WorkloadImpl/<a class="el" href="_i_tensor_desc_pack_8h_source.xhtml">ITensorDescPack.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:57:04 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
