<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/graph/nodes/ConcatenateLayerNode.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_concatenate_layer_node_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ConcatenateLayerNode.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_concatenate_layer_node_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2019 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_concatenate_layer_node_8h.xhtml">arm_compute/graph/nodes/ConcatenateLayerNode.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_graph_8h.xhtml">arm_compute/graph/Graph.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_node_visitor_8h.xhtml">arm_compute/graph/INodeVisitor.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_utils_8h.xhtml">arm_compute/graph/Utils.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span>graph</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a91208b890273b22eae891c3ad4d8f452">   37</a></span>&#160;<a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a91208b890273b22eae891c3ad4d8f452">ConcatenateLayerNode::ConcatenateLayerNode</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> total_nodes, <a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">descriptors::ConcatLayerDescriptor</a> concat_descriptor)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    : _total_nodes(total_nodes), _concat_descriptor(<a class="code" href="namespacestd.xhtml">std</a>::move(concat_descriptor)), _is_enabled(true)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    _input_edges.resize(_total_nodes, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a8e0b093eda0649ddbce791bb5076104f">EmptyEdgeID</a>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    _outputs.resize(1, <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">NullTensorID</a>);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a27c3d7d9b1aa3789551262c22861b42f">   44</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a27c3d7d9b1aa3789551262c22861b42f">ConcatenateLayerNode::set_enabled</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6507f40ddf408e1f124cb84fa5cbfd1e">is_enabled</a>)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    _is_enabled = <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6507f40ddf408e1f124cb84fa5cbfd1e">is_enabled</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6507f40ddf408e1f124cb84fa5cbfd1e">   49</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6507f40ddf408e1f124cb84fa5cbfd1e">ConcatenateLayerNode::is_enabled</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">return</span> _is_enabled;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a051cd2a8d15cf783e9ab9a00451c77f6">   54</a></span>&#160;<a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a> <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a051cd2a8d15cf783e9ab9a00451c77f6">ConcatenateLayerNode::concatenation_axis</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> _concat_descriptor.<a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml#a96ae1e009deb669b33e5683acd5345ca">axis</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a4d9fc242799f52972ddfad40e70b928b">   59</a></span>&#160;<a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a4d9fc242799f52972ddfad40e70b928b">ConcatenateLayerNode::output_quantization_info</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">return</span> _concat_descriptor.<a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml#a517ffb58301a6160d372c99c1ecf9392">output_qinfo</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a78cd2cdd82038e9c3590cd182bf61127">   64</a></span>&#160;<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a78cd2cdd82038e9c3590cd182bf61127">ConcatenateLayerNode::compute_output_descriptor</a>(<span class="keyword">const</span> std::vector&lt;TensorDescriptor&gt; &amp;input_descriptors,</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                                                 <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a>                  axis)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(input_descriptors.size() == 0);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> output_descriptor = input_descriptors[0];</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        axis_idx          = <a class="code" href="namespacearm__compute_1_1graph.xhtml#a1df15aed3ed531f442ecea2a131d65a4">get_dimension_idx</a>(output_descriptor.layout, axis);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(axis_idx &gt; 2, <span class="stringliteral">&quot;Unsupported concatenation axis!&quot;</span>);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// Extract shapes</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    std::vector&lt;const TensorShape *&gt; shapes;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    shapes.reserve(input_descriptors.size());</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;input_descriptor : input_descriptors)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        shapes.emplace_back(&amp;input_descriptor.shape);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    output_descriptor.shape = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#add0528a8b08196d4e30e760499c552d4">arm_compute::misc::shape_calculator::calculate_concatenate_shape</a>(shapes, axis_idx);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">return</span> output_descriptor;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">   86</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">ConcatenateLayerNode::forward_descriptors</a>()</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">if</span>(_outputs[0] != <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">NullTensorID</a>)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a27369471d9b2ba47746e1e923f585b9f">output</a>(0);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(dst == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        dst-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0d3608f94078b90ab1ff9e9465d4ed3b">desc</a>() = <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">configure_output</a>(0);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">   98</a></span>&#160;<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">ConcatenateLayerNode::configure_output</a>(<span class="keywordtype">size_t</span> idx)<span class="keyword"> const</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(idx);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(idx &gt;= _outputs.size());</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment">// Check if all input tensors are set</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">bool</span> are_all_inputs_set = std::all_of(std::begin(_input_edges), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_input_edges), [](<span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> &amp; eid)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">return</span> eid != <a class="code" href="namespacearm__compute_1_1graph.xhtml#a8e0b093eda0649ddbce791bb5076104f">EmptyEdgeID</a>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    });</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25cae7166733a51d1354f3f395652782">output_info</a> = {};</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">if</span>(are_all_inputs_set)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        std::vector&lt;TensorDescriptor&gt; inputs_descriptors;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; _input_edges.size(); ++i)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> = _graph-&gt;tensor(<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6a156d1ea7a01d8b27131f30aacaf40b">input_id</a>(i));</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(t == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            inputs_descriptors.push_back(t-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0d3608f94078b90ab1ff9e9465d4ed3b">desc</a>());</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        output_info = <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a78cd2cdd82038e9c3590cd182bf61127">compute_output_descriptor</a>(inputs_descriptors, _concat_descriptor.<a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml#a96ae1e009deb669b33e5683acd5345ca">axis</a>);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">if</span>(!_concat_descriptor.<a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml#a517ffb58301a6160d372c99c1ecf9392">output_qinfo</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a644718bb2fb240de962dc3c9a1fdf0dc">empty</a>())</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            output_info.quant_info = _concat_descriptor.<a class="code" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml#a517ffb58301a6160d372c99c1ecf9392">output_qinfo</a>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25cae7166733a51d1354f3f395652782">output_info</a>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">  130</a></span>&#160;<a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a> <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">ConcatenateLayerNode::type</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5c436066fbad2e22ccab352c0d554809">NodeType::ConcatenateLayer</a>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">  135</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">ConcatenateLayerNode::accept</a>(<a class="code" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml">INodeVisitor</a> &amp;v)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    v.<a class="code" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#af2dbe7c232e1d5d1a9d0621c3bb483a0">visit</a>(*<span class="keyword">this</span>);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;} <span class="comment">// namespace graph</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">arm_compute::graph::TensorDescriptor</a></div><div class="ttdoc">Tensor metadata class. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00038">TensorDescriptor.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a051cd2a8d15cf783e9ab9a00451c77f6"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a051cd2a8d15cf783e9ab9a00451c77f6">arm_compute::graph::ConcatenateLayerNode::concatenation_axis</a></div><div class="ttdeci">DataLayoutDimension concatenation_axis() const</div><div class="ttdoc">Concatenation axis parameter accessor. </div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00054">ConcatenateLayerNode.cpp:54</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">arm_compute::DataLayoutDimension</a></div><div class="ttdeci">DataLayoutDimension</div><div class="ttdoc">[DataLayout enum definition] </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00124">Types.h:124</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor_xhtml_a517ffb58301a6160d372c99c1ecf9392"><div class="ttname"><a href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml#a517ffb58301a6160d372c99c1ecf9392">arm_compute::graph::descriptors::ConcatLayerDescriptor::output_qinfo</a></div><div class="ttdeci">const QuantizationInfo output_qinfo</div><div class="ttdoc">Output quantizazion info. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_descriptors_8h_source.xhtml#l00065">LayerDescriptors.h:65</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a25cae7166733a51d1354f3f395652782"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a25cae7166733a51d1354f3f395652782">arm_compute::test::validation::output_info</a></div><div class="ttdeci">output_info</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_c_l_2fft_8cpp_source.xhtml#l00145">FFT.cpp:145</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a0d3608f94078b90ab1ff9e9465d4ed3b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0d3608f94078b90ab1ff9e9465d4ed3b">arm_compute::graph::Tensor::desc</a></div><div class="ttdeci">TensorDescriptor &amp; desc()</div><div class="ttdoc">TensorInfo metadata accessor. </div><div class="ttdef"><b>Definition:</b> <a href="src_2graph_2_tensor_8cpp_source.xhtml#l00040">Tensor.cpp:40</a></div></div>
<div class="ttc" id="arm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00071">QuantizationInfo.h:71</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_visitor_xhtml_af2dbe7c232e1d5d1a9d0621c3bb483a0"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#af2dbe7c232e1d5d1a9d0621c3bb483a0">arm_compute::graph::INodeVisitor::visit</a></div><div class="ttdeci">virtual void visit(INode &amp;n)=0</div><div class="ttdoc">Visit INode. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a6507f40ddf408e1f124cb84fa5cbfd1e"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6507f40ddf408e1f124cb84fa5cbfd1e">arm_compute::graph::ConcatenateLayerNode::is_enabled</a></div><div class="ttdeci">bool is_enabled() const</div><div class="ttdoc">Enabled parameter accessor. </div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00049">ConcatenateLayerNode.cpp:49</a></div></div>
<div class="ttc" id="_i_node_visitor_8h_xhtml"><div class="ttname"><a href="_i_node_visitor_8h.xhtml">INodeVisitor.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_a27369471d9b2ba47746e1e923f585b9f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a27369471d9b2ba47746e1e923f585b9f">arm_compute::graph::INode::output</a></div><div class="ttdeci">Tensor * output(size_t idx) const</div><div class="ttdoc">Returns the tensor of a given output of the node. </div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8cpp_source.xhtml#l00159">INode.cpp:159</a></div></div>
<div class="ttc" id="arm__compute_2graph_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a6272eb9643b239dd0c1e7adde3ee093b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6272eb9643b239dd0c1e7adde3ee093b">arm_compute::graph::ConcatenateLayerNode::forward_descriptors</a></div><div class="ttdeci">bool forward_descriptors() override</div><div class="ttdoc">Forwards descriptor information to outputs if possible. </div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00086">ConcatenateLayerNode.cpp:86</a></div></div>
<div class="ttc" id="_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_a6a156d1ea7a01d8b27131f30aacaf40b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6a156d1ea7a01d8b27131f30aacaf40b">arm_compute::graph::INode::input_id</a></div><div class="ttdeci">TensorID input_id(size_t idx) const</div><div class="ttdoc">Returns the tensor ID of a given input of the node. </div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8cpp_source.xhtml#l00138">INode.cpp:138</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a3f18a7449b9d7fc9e5fec212b8e61710"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a3f18a7449b9d7fc9e5fec212b8e61710">arm_compute::graph::ConcatenateLayerNode::configure_output</a></div><div class="ttdeci">TensorDescriptor configure_output(size_t idx) const override</div><div class="ttdoc">Calculates output configuration. </div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00098">ConcatenateLayerNode.cpp:98</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a78cd2cdd82038e9c3590cd182bf61127"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a78cd2cdd82038e9c3590cd182bf61127">arm_compute::graph::ConcatenateLayerNode::compute_output_descriptor</a></div><div class="ttdeci">static TensorDescriptor compute_output_descriptor(const std::vector&lt; TensorDescriptor &gt; &amp;input_descriptors, DataLayoutDimension axis)</div><div class="ttdoc">Computes concatenations output descriptor. </div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00064">ConcatenateLayerNode.cpp:64</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">arm_compute::graph::NodeType</a></div><div class="ttdeci">NodeType</div><div class="ttdoc">Supported nodes. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00199">Types.h:199</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00290">MLGOParser.cpp:290</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a8e0b093eda0649ddbce791bb5076104f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a8e0b093eda0649ddbce791bb5076104f">arm_compute::graph::EmptyEdgeID</a></div><div class="ttdeci">constexpr EdgeID EmptyEdgeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00078">Types.h:78</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a91208b890273b22eae891c3ad4d8f452"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a91208b890273b22eae891c3ad4d8f452">arm_compute::graph::ConcatenateLayerNode::ConcatenateLayerNode</a></div><div class="ttdeci">ConcatenateLayerNode(unsigned int total_nodes, descriptors::ConcatLayerDescriptor concat_descriptor)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00037">ConcatenateLayerNode.cpp:37</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_abba17a56bbf16c7cbc7acd4aa54abcea"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">arm_compute::graph::EdgeID</a></div><div class="ttdeci">unsigned int EdgeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00070">Types.h:70</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml_a644718bb2fb240de962dc3c9a1fdf0dc"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml#a644718bb2fb240de962dc3c9a1fdf0dc">arm_compute::QuantizationInfo::empty</a></div><div class="ttdeci">bool empty() const</div><div class="ttdoc">Indicates whether this QuantizationInfo has valid settings or not. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00142">QuantizationInfo.h:142</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor_xhtml_a96ae1e009deb669b33e5683acd5345ca"><div class="ttname"><a href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml#a96ae1e009deb669b33e5683acd5345ca">arm_compute::graph::descriptors::ConcatLayerDescriptor::axis</a></div><div class="ttdeci">const DataLayoutDimension axis</div><div class="ttdoc">Concatenation Axis. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_descriptors_8h_source.xhtml#l00064">LayerDescriptors.h:64</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">arm_compute::graph::descriptors::ConcatLayerDescriptor</a></div><div class="ttdoc">Concatenate layer descriptor. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_descriptors_8h_source.xhtml#l00037">LayerDescriptors.h:37</a></div></div>
<div class="ttc" id="graph_2_graph_8h_xhtml"><div class="ttname"><a href="graph_2_graph_8h.xhtml">Graph.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a4d9fc242799f52972ddfad40e70b928b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a4d9fc242799f52972ddfad40e70b928b">arm_compute::graph::ConcatenateLayerNode::output_quantization_info</a></div><div class="ttdeci">QuantizationInfo output_quantization_info() const</div><div class="ttdoc">Concatenation output quantization info accessor. </div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00059">ConcatenateLayerNode.cpp:59</a></div></div>
<div class="ttc" id="_concatenate_layer_node_8h_xhtml"><div class="ttname"><a href="_concatenate_layer_node_8h.xhtml">ConcatenateLayerNode.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aa94938a3eb11fda4724c362c53c28f24"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">arm_compute::graph::NullTensorID</a></div><div class="ttdeci">constexpr TensorID NullTensorID</div><div class="ttdoc">Constant NodeID specifying an equivalent of null node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00074">Types.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_visitor_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml">arm_compute::graph::INodeVisitor</a></div><div class="ttdoc">Node visitor interface. </div><div class="ttdef"><b>Definition:</b> <a href="_i_node_visitor_8h_source.xhtml#l00034">INodeVisitor.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a5c436066fbad2e22ccab352c0d554809"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5c436066fbad2e22ccab352c0d554809">arm_compute::graph::NodeType::ConcatenateLayer</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a65d13dc93e2df5e8ab725263cf9f4ac5"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">arm_compute::graph::ConcatenateLayerNode::type</a></div><div class="ttdeci">NodeType type() const override</div><div class="ttdoc">Returns node&amp;#39;s type. </div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00130">ConcatenateLayerNode.cpp:130</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_add0528a8b08196d4e30e760499c552d4"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#add0528a8b08196d4e30e760499c552d4">arm_compute::misc::shape_calculator::calculate_concatenate_shape</a></div><div class="ttdeci">TensorShape calculate_concatenate_shape(const std::vector&lt; T *&gt; &amp;input, size_t axis)</div><div class="ttdoc">Calculate the concatenate output shape of the concatenate operation along a single axis...</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l01334">ShapeCalculator.h:1334</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_adb48b5745c55605a2d4ec6f665bb7f3f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#adb48b5745c55605a2d4ec6f665bb7f3f">arm_compute::graph::ConcatenateLayerNode::accept</a></div><div class="ttdeci">void accept(INodeVisitor &amp;v) override</div><div class="ttdoc">Accepts a node visitor. </div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00135">ConcatenateLayerNode.cpp:135</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a1df15aed3ed531f442ecea2a131d65a4"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a1df15aed3ed531f442ecea2a131d65a4">arm_compute::graph::get_dimension_idx</a></div><div class="ttdeci">size_t get_dimension_idx(DataLayout data_layout, const DataLayoutDimension data_layout_dimension)</div><div class="ttdoc">Get index of a tensor&amp;#39;s given dimension depending on its layout. </div><div class="ttdef"><b>Definition:</b> <a href="src_2graph_2_utils_8cpp_source.xhtml#l00148">Utils.cpp:148</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml">arm_compute::graph::Tensor</a></div><div class="ttdoc">Tensor object. </div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00041">Tensor.h:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a27c3d7d9b1aa3789551262c22861b42f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a27c3d7d9b1aa3789551262c22861b42f">arm_compute::graph::ConcatenateLayerNode::set_enabled</a></div><div class="ttdeci">void set_enabled(bool is_enabled)</div><div class="ttdoc">Disables or not the depth concatenate node. </div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00044">ConcatenateLayerNode.cpp:44</a></div></div>
<div class="ttc" id="namespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_d182250f0c231765fc862e69db210731.xhtml">graph</a></li><li class="navelem"><a class="el" href="dir_b522e8895b1a2b097ec0514a9a6c1549.xhtml">nodes</a></li><li class="navelem"><a class="el" href="_concatenate_layer_node_8cpp.xhtml">ConcatenateLayerNode.cpp</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:54 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
