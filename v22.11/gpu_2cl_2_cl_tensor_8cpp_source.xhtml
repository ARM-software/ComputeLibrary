<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/gpu/cl/ClTensor.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('gpu_2cl_2_cl_tensor_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClTensor.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="gpu_2cl_2_cl_tensor_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2gpu_2cl_2_c_l_tensor_8h.xhtml">src/gpu/cl/ClTensor.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_legacy_support_8h.xhtml">src/common/utils/LegacySupport.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span>gpu</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span>opencl</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#af56b5210bba49de73ceda72c10adcf74">   34</a></span>&#160;<a class="code" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#af56b5210bba49de73ceda72c10adcf74">ClTensor::ClTensor</a>(<a class="code" href="classarm__compute_1_1_i_context.xhtml">IContext</a> *ctx, <span class="keyword">const</span> <a class="code" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> &amp;desc)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    : <a class="code" href="classarm__compute_1_1_i_tensor_v2.xhtml">ITensorV2</a>(ctx), _legacy_tensor()</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="src_2common_2utils_2_validate_8h.xhtml#a6d40659f94b26d9ac5ae03538252dcd4">ARM_COMPUTE_ASSERT</a>((ctx != <span class="keyword">nullptr</span>) &amp;&amp; (ctx-&gt;<a class="code" href="classarm__compute_1_1_i_context.xhtml#a054cc89f738468abed5544c63c5b6c21">type</a>() == <a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3">Target::GpuOcl</a>));</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    _legacy_tensor = std::make_unique&lt;CLTensor&gt;();</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    _legacy_tensor-&gt;allocator()-&gt;init(<a class="code" href="namespacearm__compute_1_1detail.xhtml#a5d2ed5b1a1b431473e20ccffb16876be">arm_compute::detail::convert_to_legacy_tensor_info</a>(desc));</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#af89a62b8a4a4c1be1087489427eb2208">   42</a></span>&#160;<span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#af89a62b8a4a4c1be1087489427eb2208">ClTensor::map</a>()</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="src_2common_2utils_2_validate_8h.xhtml#a6d40659f94b26d9ac5ae03538252dcd4">ARM_COMPUTE_ASSERT</a>(_legacy_tensor.get() != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">if</span>(_legacy_tensor == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(<span class="stringliteral">&quot;[ClTensor:map]: Backing tensor does not exist!&quot;</span>);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    _legacy_tensor-&gt;map();</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> _legacy_tensor-&gt;buffer();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a48b50804579acbb0dbcf0383921feb28">   56</a></span>&#160;<a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> <a class="code" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a48b50804579acbb0dbcf0383921feb28">ClTensor::unmap</a>()</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="src_2common_2utils_2_validate_8h.xhtml#a6d40659f94b26d9ac5ae03538252dcd4">ARM_COMPUTE_ASSERT</a>(_legacy_tensor.get() != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">if</span>(_legacy_tensor == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(<span class="stringliteral">&quot;[ClTensor:unmap]: Backing tensor does not exist!&quot;</span>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113aa334b8fdd25f8fb3e632228494604ee1">StatusCode::RuntimeError</a>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    _legacy_tensor-&gt;unmap();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a0f5d2e0f5a8dfcc27736d5a6ca78dce5">   70</a></span>&#160;<a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> <a class="code" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a0f5d2e0f5a8dfcc27736d5a6ca78dce5">ClTensor::allocate</a>()</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="src_2common_2utils_2_validate_8h.xhtml#a6d40659f94b26d9ac5ae03538252dcd4">ARM_COMPUTE_ASSERT</a>(_legacy_tensor.get() != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    _legacy_tensor-&gt;allocator()-&gt;allocate();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a8784bf036925113d324a6c83db1fe43b">   78</a></span>&#160;<a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> <a class="code" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a8784bf036925113d324a6c83db1fe43b">ClTensor::import</a>(<span class="keywordtype">void</span> *handle, <a class="code" href="namespacearm__compute.xhtml#a2829e9ffdb98c900b4bf5af09c2bb85b">ImportMemoryType</a> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="src_2common_2utils_2_validate_8h.xhtml#a6d40659f94b26d9ac5ae03538252dcd4">ARM_COMPUTE_ASSERT</a>(_legacy_tensor.get() != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(type, handle);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a8b4aa61d662c8e4752706824861d19cb">   86</a></span>&#160;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a> *<a class="code" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a8b4aa61d662c8e4752706824861d19cb">ClTensor::tensor</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">return</span> _legacy_tensor.get();</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;} <span class="comment">// namespace opencl</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;} <span class="comment">// namespace gpu</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor_xhtml_a48b50804579acbb0dbcf0383921feb28"><div class="ttname"><a href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a48b50804579acbb0dbcf0383921feb28">arm_compute::gpu::opencl::ClTensor::unmap</a></div><div class="ttdeci">StatusCode unmap() override</div><div class="ttdoc">Unmap tensor. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_cl_tensor_8cpp_source.xhtml#l00056">ClTensor.cpp:56</a></div></div>
<div class="ttc" id="src_2common_2utils_2_validate_8h_xhtml_a6d40659f94b26d9ac5ae03538252dcd4"><div class="ttname"><a href="src_2common_2utils_2_validate_8h.xhtml#a6d40659f94b26d9ac5ae03538252dcd4">ARM_COMPUTE_ASSERT</a></div><div class="ttdeci">#define ARM_COMPUTE_ASSERT(cond)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_validate_8h_source.xhtml#l00037">Validate.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor_xhtml_a8784bf036925113d324a6c83db1fe43b"><div class="ttname"><a href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a8784bf036925113d324a6c83db1fe43b">arm_compute::gpu::opencl::ClTensor::import</a></div><div class="ttdeci">StatusCode import(void *handle, ImportMemoryType type) override</div><div class="ttdoc">Import external memory handle. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_cl_tensor_8cpp_source.xhtml#l00078">ClTensor.cpp:78</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_v2_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_v2.xhtml">arm_compute::ITensorV2</a></div><div class="ttdoc">Base class specifying the tensor interface. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_v2_8h_source.xhtml#l00045">ITensorV2.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor_xhtml_a8b4aa61d662c8e4752706824861d19cb"><div class="ttname"><a href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a8b4aa61d662c8e4752706824861d19cb">arm_compute::gpu::opencl::ClTensor::tensor</a></div><div class="ttdeci">arm_compute::ITensor * tensor() const override</div><div class="ttdoc">Get the legacy tensor object. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_cl_tensor_8cpp_source.xhtml#l00086">ClTensor.cpp:86</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1detail_xhtml_a5d2ed5b1a1b431473e20ccffb16876be"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a5d2ed5b1a1b431473e20ccffb16876be">arm_compute::detail::convert_to_legacy_tensor_info</a></div><div class="ttdeci">TensorInfo convert_to_legacy_tensor_info(const AclTensorDescriptor &amp;desc)</div><div class="ttdoc">Convert a descriptor to a legacy format one. </div><div class="ttdef"><b>Definition:</b> <a href="_legacy_support_8cpp_source.xhtml#l00090">LegacySupport.cpp:90</a></div></div>
<div class="ttc" id="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor_xhtml_af89a62b8a4a4c1be1087489427eb2208"><div class="ttname"><a href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#af89a62b8a4a4c1be1087489427eb2208">arm_compute::gpu::opencl::ClTensor::map</a></div><div class="ttdeci">void * map() override</div><div class="ttdoc">Map tensor to a host pointer. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_cl_tensor_8cpp_source.xhtml#l00042">ClTensor.cpp:42</a></div></div>
<div class="ttc" id="src_2common_2utils_2_log_8h_xhtml_ada668c5c47184c0667c0b029d92d3b4f"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_ERROR_ACL(msg)</div><div class="ttdoc">Log an error message to the logger. </div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00077">Log.h:77</a></div></div>
<div class="ttc" id="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor_xhtml_a0f5d2e0f5a8dfcc27736d5a6ca78dce5"><div class="ttname"><a href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#a0f5d2e0f5a8dfcc27736d5a6ca78dce5">arm_compute::gpu::opencl::ClTensor::allocate</a></div><div class="ttdeci">StatusCode allocate()</div><div class="ttdoc">Allocates tensor. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_cl_tensor_8cpp_source.xhtml#l00070">ClTensor.cpp:70</a></div></div>
<div class="ttc" id="_legacy_support_8h_xhtml"><div class="ttname"><a href="_legacy_support_8h.xhtml">LegacySupport.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml">arm_compute::IContext</a></div><div class="ttdoc">Context interface. </div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00050">IContext.h:50</a></div></div>
<div class="ttc" id="gemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00259">gemm_interleaved.hpp:259</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="struct_acl_tensor_descriptor_xhtml"><div class="ttname"><a href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00191">AclTypes.h:191</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113aa334b8fdd25f8fb3e632228494604ee1"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113aa334b8fdd25f8fb3e632228494604ee1">arm_compute::StatusCode::RuntimeError</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="src_2gpu_2cl_2_c_l_tensor_8h_xhtml"><div class="ttname"><a href="src_2gpu_2cl_2_c_l_tensor_8h.xhtml">ClTensor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">arm_compute::StatusCode::Success</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">arm_compute::StatusCode</a></div><div class="ttdeci">StatusCode</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_types_8h_source.xhtml#l00032">Types.h:32</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_context_xhtml_a054cc89f738468abed5544c63c5b6c21"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml#a054cc89f738468abed5544c63c5b6c21">arm_compute::IContext::type</a></div><div class="ttdeci">Target type() const</div><div class="ttdoc">Target type accessor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00066">IContext.h:66</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2829e9ffdb98c900b4bf5af09c2bb85b"><div class="ttname"><a href="namespacearm__compute.xhtml#a2829e9ffdb98c900b4bf5af09c2bb85b">arm_compute::ImportMemoryType</a></div><div class="ttdeci">ImportMemoryType</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_types_8h_source.xhtml#l00057">Types.h:57</a></div></div>
<div class="ttc" id="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor_xhtml_af56b5210bba49de73ceda72c10adcf74"><div class="ttname"><a href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml#af56b5210bba49de73ceda72c10adcf74">arm_compute::gpu::opencl::ClTensor::ClTensor</a></div><div class="ttdeci">ClTensor(IContext *ctx, const AclTensorDescriptor &amp;desc)</div><div class="ttdoc">Construct a new OpenCL Tensor object. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_cl_tensor_8cpp_source.xhtml#l00034">ClTensor.cpp:34</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3">arm_compute::Target::GpuOcl</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_cf895c1ed808af158264b2f3d8d7f8f0.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_3fd6b49eea07a5dd89d90722d8b4e77f.xhtml">cl</a></li><li class="navelem"><a class="el" href="gpu_2cl_2_cl_tensor_8cpp.xhtml">ClTensor.cpp</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:53 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
