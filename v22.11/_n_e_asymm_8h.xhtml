<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/NEAsymm.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_n_e_asymm_8h.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">NEAsymm.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_n_e_math_8h_source.xhtml">src/core/NEON/NEMath.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="intrinsics_8h_source.xhtml">src/core/NEON/wrapper/intrinsics/intrinsics.h</a>&quot;</code><br />
<code>#include &lt;arm_neon.h&gt;</code><br />
<code>#include &quot;<a class="el" href="_n_e_asymm_8inl_source.xhtml">src/core/NEON/NEAsymm.inl</a>&quot;</code><br />
</div>
<p><a href="_n_e_asymm_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2022 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a70ecc99f2f6b646579b58463dc026671"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a70ecc99f2f6b646579b58463dc026671">qasymm8x8_t</a> = uint8x8_t</td></tr>
<tr class="memdesc:a70ecc99f2f6b646579b58463dc026671"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 bit quantized asymmetric vector with 8 elements  <a href="namespacearm__compute.xhtml#a70ecc99f2f6b646579b58463dc026671">More...</a><br /></td></tr>
<tr class="separator:a70ecc99f2f6b646579b58463dc026671"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a805d740633d70a5f0b019d72c517e67d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a805d740633d70a5f0b019d72c517e67d">qasymm8x8x2_t</a> = uint8x8x2_t</td></tr>
<tr class="memdesc:a805d740633d70a5f0b019d72c517e67d"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 bit quantized asymmetric vector with 16 elements  <a href="namespacearm__compute.xhtml#a805d740633d70a5f0b019d72c517e67d">More...</a><br /></td></tr>
<tr class="separator:a805d740633d70a5f0b019d72c517e67d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c6e16826765130b480af53eda3635be"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a0c6e16826765130b480af53eda3635be">qasymm8x8x3_t</a> = uint8x8x3_t</td></tr>
<tr class="memdesc:a0c6e16826765130b480af53eda3635be"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 bit quantized asymmetric vector with 24 elements  <a href="namespacearm__compute.xhtml#a0c6e16826765130b480af53eda3635be">More...</a><br /></td></tr>
<tr class="separator:a0c6e16826765130b480af53eda3635be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41d3460ff424e2e21c629b3f27386a8b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a41d3460ff424e2e21c629b3f27386a8b">qasymm8x8x4_t</a> = uint8x8x4_t</td></tr>
<tr class="memdesc:a41d3460ff424e2e21c629b3f27386a8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 bit quantized asymmetric vector with 32 elements  <a href="namespacearm__compute.xhtml#a41d3460ff424e2e21c629b3f27386a8b">More...</a><br /></td></tr>
<tr class="separator:a41d3460ff424e2e21c629b3f27386a8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7e1832b8c58f07a98fc8d390b16ac27"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#ac7e1832b8c58f07a98fc8d390b16ac27">qasymm8x16_t</a> = uint8x16_t</td></tr>
<tr class="memdesc:ac7e1832b8c58f07a98fc8d390b16ac27"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 bit quantized asymmetric vector with 16 elements  <a href="namespacearm__compute.xhtml#ac7e1832b8c58f07a98fc8d390b16ac27">More...</a><br /></td></tr>
<tr class="separator:ac7e1832b8c58f07a98fc8d390b16ac27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25af73d07023d565ec84adc58aedfb80"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a25af73d07023d565ec84adc58aedfb80">qasymm8x8_signed_t</a> = int8x8_t</td></tr>
<tr class="memdesc:a25af73d07023d565ec84adc58aedfb80"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 bit quantized signed asymmetric vector with 8 elements  <a href="namespacearm__compute.xhtml#a25af73d07023d565ec84adc58aedfb80">More...</a><br /></td></tr>
<tr class="separator:a25af73d07023d565ec84adc58aedfb80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa972284529f4dd47b3ae1d5d68ab1b71"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#aa972284529f4dd47b3ae1d5d68ab1b71">qasymm8x8x2_signed_t</a> = int8x8x2_t</td></tr>
<tr class="memdesc:aa972284529f4dd47b3ae1d5d68ab1b71"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 bit quantized signed asymmetric vector with 16 elements  <a href="namespacearm__compute.xhtml#aa972284529f4dd47b3ae1d5d68ab1b71">More...</a><br /></td></tr>
<tr class="separator:aa972284529f4dd47b3ae1d5d68ab1b71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf0890e0e5842a84a6af5800d2bdcd78"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#aaf0890e0e5842a84a6af5800d2bdcd78">qasymm8x8x3_signed_t</a> = int8x8x3_t</td></tr>
<tr class="memdesc:aaf0890e0e5842a84a6af5800d2bdcd78"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 bit quantized signed asymmetric vector with 24 elements  <a href="namespacearm__compute.xhtml#aaf0890e0e5842a84a6af5800d2bdcd78">More...</a><br /></td></tr>
<tr class="separator:aaf0890e0e5842a84a6af5800d2bdcd78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f90599aecfeb44aed19db16d407c1c5"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a9f90599aecfeb44aed19db16d407c1c5">qasymm8x8x4_signed_t</a> = int8x8x4_t</td></tr>
<tr class="memdesc:a9f90599aecfeb44aed19db16d407c1c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 bit quantized signed asymmetric vector with 32 elements  <a href="namespacearm__compute.xhtml#a9f90599aecfeb44aed19db16d407c1c5">More...</a><br /></td></tr>
<tr class="separator:a9f90599aecfeb44aed19db16d407c1c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc8234d074c193f521029e81cda80bb2"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#adc8234d074c193f521029e81cda80bb2">qasymm8x16_signed_t</a> = int8x16_t</td></tr>
<tr class="memdesc:adc8234d074c193f521029e81cda80bb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 bit quantized signed asymmetric vector with 16 elements  <a href="namespacearm__compute.xhtml#adc8234d074c193f521029e81cda80bb2">More...</a><br /></td></tr>
<tr class="separator:adc8234d074c193f521029e81cda80bb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aba8de9eaa10a7cb45c5aa603585d0e4c"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#aba8de9eaa10a7cb45c5aa603585d0e4c">vmlaq_qasymm8</a> (qasymm8x16_t vd, float32x4_t vs, float32x4_t vo)</td></tr>
<tr class="memdesc:aba8de9eaa10a7cb45c5aa603585d0e4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a multiply-accumulate on all 16 components of a QASYMM8 vector.  <a href="namespacearm__compute.xhtml#aba8de9eaa10a7cb45c5aa603585d0e4c">More...</a><br /></td></tr>
<tr class="separator:aba8de9eaa10a7cb45c5aa603585d0e4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54c0b3b26b7e2588af93ac27f7724279"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a54c0b3b26b7e2588af93ac27f7724279">vmlaq_qasymm8_signed</a> (qasymm8x16_signed_t vd, float32x4_t vs, float32x4_t vo)</td></tr>
<tr class="memdesc:a54c0b3b26b7e2588af93ac27f7724279"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a multiply-accumulate on all 16 components of a QASYMM8_SIGNED vector.  <a href="namespacearm__compute.xhtml#a54c0b3b26b7e2588af93ac27f7724279">More...</a><br /></td></tr>
<tr class="separator:a54c0b3b26b7e2588af93ac27f7724279"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3479355ca4b6fb389a3aae4da266bd0e"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a3479355ca4b6fb389a3aae4da266bd0e">finalize_quantization</a> (int32x4x4_t &amp;in_s32, int result_fixedpoint_multiplier, int32_t result_shift, int32x4_t result_offset_after_shift_s32, uint8x16_t min_u8, uint8x16_t max_u8, bool is_bounded_relu)</td></tr>
<tr class="memdesc:a3479355ca4b6fb389a3aae4da266bd0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs final quantization step on 16 elements.  <a href="namespacearm__compute.xhtml#a3479355ca4b6fb389a3aae4da266bd0e">More...</a><br /></td></tr>
<tr class="separator:a3479355ca4b6fb389a3aae4da266bd0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85083e9ceeceacbf1afe9dca946c0d7a"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a85083e9ceeceacbf1afe9dca946c0d7a">finalize_quantization</a> (int32x4x4_t &amp;in_s32, int result_fixedpoint_multiplier, int32_t result_shift, int32x4_t result_offset_after_shift_s32, int8x16_t min_s8, int8x16_t max_s8, bool is_bounded_relu)</td></tr>
<tr class="memdesc:a85083e9ceeceacbf1afe9dca946c0d7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs final quantization step on 16 elements.  <a href="namespacearm__compute.xhtml#a85083e9ceeceacbf1afe9dca946c0d7a">More...</a><br /></td></tr>
<tr class="separator:a85083e9ceeceacbf1afe9dca946c0d7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac45cafa8ee6ec21f435a6a9af190e40a"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#ac45cafa8ee6ec21f435a6a9af190e40a">finalize_quantization_symm</a> (int32x4x4_t &amp;in_s32, const int32x4x4_t &amp;result_fixedpoint_multiplier, const int32x4x4_t &amp;result_shift, const int32x4_t &amp;result_offset_after_shift_s32, const int8x16_t &amp;min_s8, const int8x16_t &amp;max_s8, const bool is_bounded_relu)</td></tr>
<tr class="memdesc:ac45cafa8ee6ec21f435a6a9af190e40a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs final quantization step on 16 elements for symmetric quantization.  <a href="namespacearm__compute.xhtml#ac45cafa8ee6ec21f435a6a9af190e40a">More...</a><br /></td></tr>
<tr class="separator:ac45cafa8ee6ec21f435a6a9af190e40a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a9dd002faea6691d344f60563f8b499"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a9a9dd002faea6691d344f60563f8b499">finalize_quantization</a> (int32_t in_value, int result_fixedpoint_multiplier, int32_t result_shift, int32_t result_offset_after_shift_s32, uint8_t min_u8, uint8_t max_u8, bool is_bounded_relu)</td></tr>
<tr class="memdesc:a9a9dd002faea6691d344f60563f8b499"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs final quantization step on single element.  <a href="namespacearm__compute.xhtml#a9a9dd002faea6691d344f60563f8b499">More...</a><br /></td></tr>
<tr class="separator:a9a9dd002faea6691d344f60563f8b499"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a583648c2034fae18cf48b7177586da4f"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a583648c2034fae18cf48b7177586da4f">finalize_quantization</a> (int32_t in_value, int result_fixedpoint_multiplier, int32_t result_shift, int32_t result_offset_after_shift_s32, int8_t min_s8, int8_t max_s8, bool is_bounded_relu)</td></tr>
<tr class="memdesc:a583648c2034fae18cf48b7177586da4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs final quantization step on single element.  <a href="namespacearm__compute.xhtml#a583648c2034fae18cf48b7177586da4f">More...</a><br /></td></tr>
<tr class="separator:a583648c2034fae18cf48b7177586da4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a485ae62f3ade6c8d33c5c2e85b29c3a7"><td class="memItemLeft" align="right" valign="top">float32x4x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">vdequantize</a> (const uint8x8_t &amp;qv, const UniformQuantizationInfo &amp;qi)</td></tr>
<tr class="memdesc:a485ae62f3ade6c8d33c5c2e85b29c3a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dequantize a neon vector holding 8 quantized values.  <a href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">More...</a><br /></td></tr>
<tr class="separator:a485ae62f3ade6c8d33c5c2e85b29c3a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4fe1191d25bb6608257e3f4ea868801"><td class="memItemLeft" align="right" valign="top">float32x4x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#ad4fe1191d25bb6608257e3f4ea868801">vdequantize</a> (const int8x8_t &amp;qv, const UniformQuantizationInfo &amp;qi)</td></tr>
<tr class="memdesc:ad4fe1191d25bb6608257e3f4ea868801"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dequantize a neon vector holding 8 singed quantized values.  <a href="namespacearm__compute.xhtml#ad4fe1191d25bb6608257e3f4ea868801">More...</a><br /></td></tr>
<tr class="separator:ad4fe1191d25bb6608257e3f4ea868801"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7048ece2af58ce75587256d7980db171"><td class="memItemLeft" align="right" valign="top">float32x4x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a7048ece2af58ce75587256d7980db171">vdequantize</a> (const uint8x16_t &amp;qv, const UniformQuantizationInfo &amp;qi)</td></tr>
<tr class="memdesc:a7048ece2af58ce75587256d7980db171"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dequantize a neon vector holding 16 quantized values.  <a href="namespacearm__compute.xhtml#a7048ece2af58ce75587256d7980db171">More...</a><br /></td></tr>
<tr class="separator:a7048ece2af58ce75587256d7980db171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeff642b4f4d86ed575032d944b9576a4"><td class="memItemLeft" align="right" valign="top">float32x4x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#aeff642b4f4d86ed575032d944b9576a4">vdequantize</a> (const int8x16_t &amp;qv, const UniformQuantizationInfo &amp;qi)</td></tr>
<tr class="memdesc:aeff642b4f4d86ed575032d944b9576a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dequantize a neon vector holding 16 signed quantized values.  <a href="namespacearm__compute.xhtml#aeff642b4f4d86ed575032d944b9576a4">More...</a><br /></td></tr>
<tr class="separator:aeff642b4f4d86ed575032d944b9576a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afefd32b0cf61750c523e6d15790a561e"><td class="memItemLeft" align="right" valign="top">float32x4x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#afefd32b0cf61750c523e6d15790a561e">vdequantize</a> (const uint8x16_t &amp;qv, float scale, int32_t <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)</td></tr>
<tr class="memdesc:afefd32b0cf61750c523e6d15790a561e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dequantize following an asymmetric quantization scheme a neon vector holding 16 quantized values.  <a href="namespacearm__compute.xhtml#afefd32b0cf61750c523e6d15790a561e">More...</a><br /></td></tr>
<tr class="separator:afefd32b0cf61750c523e6d15790a561e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac01c85f71885edddd3fc10ea41d2d54f"><td class="memItemLeft" align="right" valign="top">float32x4x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#ac01c85f71885edddd3fc10ea41d2d54f">vdequantize</a> (const int8x16_t &amp;qv, float scale, int32_t <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)</td></tr>
<tr class="memdesc:ac01c85f71885edddd3fc10ea41d2d54f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dequantize a vector of 16 values stored as signed asymmetric.  <a href="namespacearm__compute.xhtml#ac01c85f71885edddd3fc10ea41d2d54f">More...</a><br /></td></tr>
<tr class="separator:ac01c85f71885edddd3fc10ea41d2d54f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3838d1ee6a765a3b7ff52dc040edf5c0"><td class="memItemLeft" align="right" valign="top">float32x4x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a3838d1ee6a765a3b7ff52dc040edf5c0">vdequantize</a> (const int8x16_t &amp;qv, const float32x4x4_t vscale)</td></tr>
<tr class="memdesc:a3838d1ee6a765a3b7ff52dc040edf5c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dequantize following symmetric quantization scheme a neon vector holding 16 quantized values.  <a href="namespacearm__compute.xhtml#a3838d1ee6a765a3b7ff52dc040edf5c0">More...</a><br /></td></tr>
<tr class="separator:a3838d1ee6a765a3b7ff52dc040edf5c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a496aa10035fdc8a0e86dde37b64f8228"><td class="memItemLeft" align="right" valign="top">float32x4x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a496aa10035fdc8a0e86dde37b64f8228">vdequantize</a> (const int8x16_t &amp;qv, float scale)</td></tr>
<tr class="memdesc:a496aa10035fdc8a0e86dde37b64f8228"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dequantize following a symmetric quantization scheme a neon vector holding 16 quantized values.  <a href="namespacearm__compute.xhtml#a496aa10035fdc8a0e86dde37b64f8228">More...</a><br /></td></tr>
<tr class="separator:a496aa10035fdc8a0e86dde37b64f8228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ff1249e423ae9bfab075f5317c4d004"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a4ff1249e423ae9bfab075f5317c4d004">vquantize</a> (const float32x4x2_t &amp;qv, const UniformQuantizationInfo &amp;qi)</td></tr>
<tr class="memdesc:a4ff1249e423ae9bfab075f5317c4d004"><td class="mdescLeft">&#160;</td><td class="mdescRight">Quantize a neon vector holding 8 floating point values.  <a href="namespacearm__compute.xhtml#a4ff1249e423ae9bfab075f5317c4d004">More...</a><br /></td></tr>
<tr class="separator:a4ff1249e423ae9bfab075f5317c4d004"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76f394ac7b594f233f6fd13ad8bd99d5"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a76f394ac7b594f233f6fd13ad8bd99d5">vquantize_signed</a> (const float32x4x2_t &amp;qv, const UniformQuantizationInfo &amp;qi)</td></tr>
<tr class="memdesc:a76f394ac7b594f233f6fd13ad8bd99d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Quantize a neon vector holding 8 floating point values.  <a href="namespacearm__compute.xhtml#a76f394ac7b594f233f6fd13ad8bd99d5">More...</a><br /></td></tr>
<tr class="separator:a76f394ac7b594f233f6fd13ad8bd99d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3109788e20d3a6113e4b7d2d937c1f64"><td class="memItemLeft" align="right" valign="top">int32x4x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a3109788e20d3a6113e4b7d2d937c1f64">vquantize_internal</a> (const float32x4x4_t &amp;qv, float scale, int32_t <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)</td></tr>
<tr class="separator:a3109788e20d3a6113e4b7d2d937c1f64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42c040989e7f451dd9f2efa7384b89f6"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a42c040989e7f451dd9f2efa7384b89f6">vquantize</a> (const float32x4x4_t &amp;qv, const UniformQuantizationInfo &amp;qi)</td></tr>
<tr class="memdesc:a42c040989e7f451dd9f2efa7384b89f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Quantize a neon vector holding 16 floating point values.  <a href="namespacearm__compute.xhtml#a42c040989e7f451dd9f2efa7384b89f6">More...</a><br /></td></tr>
<tr class="separator:a42c040989e7f451dd9f2efa7384b89f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3460d476add70f38e1d56fb9cccd0f3a"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a3460d476add70f38e1d56fb9cccd0f3a">vquantize_signed</a> (const float32x4x4_t &amp;qv, const UniformQuantizationInfo &amp;qi)</td></tr>
<tr class="memdesc:a3460d476add70f38e1d56fb9cccd0f3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Signed quantize a neon vector holding 16 floating point values.  <a href="namespacearm__compute.xhtml#a3460d476add70f38e1d56fb9cccd0f3a">More...</a><br /></td></tr>
<tr class="separator:a3460d476add70f38e1d56fb9cccd0f3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a687dee3fd66555374211e3ff676ce5f1"><td class="memItemLeft" align="right" valign="top">uint16x8x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml#a687dee3fd66555374211e3ff676ce5f1">vquantize_qasymm16</a> (const float32x4x4_t &amp;qv, const UniformQuantizationInfo &amp;qi)</td></tr>
<tr class="memdesc:a687dee3fd66555374211e3ff676ce5f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Quantize to QASYMM16 a neon vector holding 16 floating point values.  <a href="namespacearm__compute.xhtml#a687dee3fd66555374211e3ff676ce5f1">More...</a><br /></td></tr>
<tr class="separator:a687dee3fd66555374211e3ff676ce5f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_asymm_8h.xhtml">NEAsymm.h</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:57 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
