var searchData=
[
  ['data',['data',['../classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a3884d6c46a68636a526bdfd8ab131895',1,'arm_compute::utils::mmap_io::MMappedFile::data()'],['../classarm__compute_1_1_c_l_tensor_allocator.xhtml#a99c07c946023f413991a249db8b99ab0',1,'arm_compute::CLTensorAllocator::data()'],['../classarm__compute_1_1_tensor_allocator.xhtml#a344325f71f51323330de47f307ebecfd',1,'arm_compute::TensorAllocator::data()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a332a750ed35277f0bc297fbfecce598f',1,'arm_compute::test::CLAccessor::data() const'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020',1,'arm_compute::test::CLAccessor::data()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a332a750ed35277f0bc297fbfecce598f',1,'arm_compute::test::Accessor::data() const'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020',1,'arm_compute::test::Accessor::data()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a4ae7e1f6885eb47c11062cc74e6a6e19',1,'arm_compute::test::SimpleTensor::data() const'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#adc1e16b293a89a9ccc9541058b5ca560',1,'arm_compute::test::SimpleTensor::data()'],['../classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a332a750ed35277f0bc297fbfecce598f',1,'arm_compute::test::SimpleTensorAccessor::data() const'],['../classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020',1,'arm_compute::test::SimpleTensorAccessor::data()']]],
  ['data_5flayout',['data_layout',['../structarm__compute_1_1_scale_kernel_info.xhtml#a317508a148d55ca7e093b9447c3366e7',1,'arm_compute::ScaleKernelInfo::data_layout()'],['../structarm__compute_1_1_pooling_layer_info.xhtml#a317508a148d55ca7e093b9447c3366e7',1,'arm_compute::PoolingLayerInfo::data_layout()'],['../structarm__compute_1_1utils_1_1_example_params.xhtml#aa56f0562febf49bc0e29a4257551191b',1,'arm_compute::utils::ExampleParams::data_layout()'],['../structarm__compute_1_1utils_1_1_common_graph_params.xhtml#aa56f0562febf49bc0e29a4257551191b',1,'arm_compute::utils::CommonGraphParams::data_layout()'],['../classarm__compute_1_1utils_1_1_common_graph_options.xhtml#aa276d896db24e95060047eb2f886614d',1,'arm_compute::utils::CommonGraphOptions::data_layout()'],['../classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1',1,'arm_compute::ITensorInfo::data_layout()'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::SubTensorInfo::data_layout()'],['../classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::TensorInfo::data_layout()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::CLAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_i_accessor.xhtml#a367b5090ab432bc7de2c32369e087ab1',1,'arm_compute::test::IAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::Accessor::data_layout()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::SimpleTensor::data_layout()'],['../classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::SimpleTensorAccessor::data_layout()'],['../namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f',1,'arm_compute::test::validation::data_layout()']]],
  ['data_5flayout_2edox',['data_layout.dox',['../data__layout_8dox.xhtml',1,'']]],
  ['data_5flayout_5ffrom_5fname',['data_layout_from_name',['../namespacearm__compute.xhtml#a834b76c7d21af898f39def3b787d7530',1,'arm_compute']]],
  ['data_20layout_20support',['Data Layout Support',['../data_layout_support.xhtml',1,'']]],
  ['data_5flayout_5fvalues',['data_layout_values',['../namespacearm__compute_1_1test_1_1validation.xhtml#a82687748fc468719298beec965c726b0',1,'arm_compute::test::validation']]],
  ['data_5fpath',['data_path',['../structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a30a81dbc66a8e9eeb693a75046b4655d',1,'arm_compute::utils::CommonGraphParams::data_path()'],['../classarm__compute_1_1utils_1_1_common_graph_options.xhtml#a10f94123b5c23f4d0ee7362c2617d812',1,'arm_compute::utils::CommonGraphOptions::data_path()']]],
  ['data_5fsize_5ffrom_5ftype',['data_size_from_type',['../namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab',1,'arm_compute']]],
  ['data_5ftest_5fcase',['DATA_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a43b1925356e3d36a468e104d798c60ec',1,'DATA_TEST_CASE():&#160;Macros.h'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a146990bdb7bc1df6e90e6dca4eaa764c',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::SQRT), })), framework::dataset::make(&quot;Expected&quot;, { false, true, true, true, false, false, true, true, false })), input_info, output_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a18d4b3db59b5a48e882653468bbaad13',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 1U, 2U), 1, DataType::U32) })), framework::dataset::make(&quot;Axis&quot;, { 4, 0, 2, 0, 2 })), framework::dataset::make(&quot;Operation&quot;, { ReductionOperation::ARG_IDX_MAX, ReductionOperation::ARG_IDX_MAX, ReductionOperation::ARG_IDX_MAX, ReductionOperation::MEAN_SUM, ReductionOperation::ARG_IDX_MAX })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, false, false })), input_info, output_info, axis, operation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a183e95e56ab3eaf97f3c7b3c54f06e16',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7e8aececa5bcce3578adc1cdcc8af732',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae13b3bd20d4afa4999be1526b77c89f6',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;, { TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(20U, 27U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 26U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 3U, 6U), 1, DataType::F32) }), framework::dataset::make(&quot;InputInfo2&quot;, { TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 3U, 3U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 3U, 6U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F16), TensorInfo(TensorShape(23U, 12U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 20U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 3U, 12U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac25e2030754af10983828182e0deaeed',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;MVBGInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(5U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 2.f, 6.f), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false, false})), input_info, output_info, mvbg_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abd882221d3e19c8d42c07fa2090e90b8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeInfo&quot;,{ TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 4U), 1, DataType::S32), TensorInfo(TensorShape(4U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false})), input_info, block_shape_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#acd3373f5012f4cd375600dafb843c965',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateStatic, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 4U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeX&quot;, { 2, 4, 2, 2, 2, 2 })), framework::dataset::make(&quot;BlockShapeY&quot;, { 2, 2, 4, 2, -2, 2 })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(64U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F16), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false})), input_info, block_shape_x, block_shape_y, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a60102ab0c50068c455a6769f188c274b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;BoxesInfo&quot;, { TensorInfo(TensorShape(4U, 128U), 1, DataType::F32), TensorInfo(TensorShape(5U, 128U), 1, DataType::F32), TensorInfo(TensorShape(4U, 128U), 1, DataType::F16), TensorInfo(TensorShape(4U, 128U), 1, DataType::F32), TensorInfo(TensorShape(4U, 128U), 1, DataType::F32), TensorInfo(TensorShape(4U, 128U), 1, DataType::F32)}), framework::dataset::make(&quot;PredBoxesInfo&quot;,{ TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(127U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 100U), 1, DataType::F32), TensorInfo(TensorShape(128U, 100U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32)})), framework::dataset::make(&quot;DeltasInfo&quot;, { TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(127U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 100U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32)})), framework::dataset::make(&quot;BoundingBoxTransofmInfo&quot;, { BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 0.f)})), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false})), boxes_info, pred_boxes_info, deltas_info, bbox_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a17a8f5af696f2a516279c6a9ed7c8c82',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::U8), TensorInfo(TensorShape(4U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;NumGroups&quot;,{ 1, 2, 2, 4, 3, 2, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true})), input_info, output_info, num_groups, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9ffd8a361da1357b6142d3858ca1b76e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a482f48e436d396077b8b6eef81b05dd8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 42U), 1, DataType::F32), TensorInfo(TensorShape(32U, 42U), 1, DataType::F32), TensorInfo(TensorShape(27U, 42U), 1, DataType::F32), TensorInfo(TensorShape(27U, 42U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 42U), 1, DataType::F16), TensorInfo(TensorShape(32U, 42U), 1, DataType::F32), TensorInfo(TensorShape(32U, 42U), 1, DataType::F32), TensorInfo(TensorShape(32U, 42U), 1, DataType::F32), })), framework::dataset::make(&quot;OriginalInput&quot;, { TensorShape(7U, 3U, 2U), TensorShape(7U, 3U, 2U), TensorShape(7U, 3U, 2U), TensorShape(7U, 3U, 2U), })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NCHW, DataLayout::NCHW, DataLayout::UNKNOWN, })), framework::dataset::make(&quot;Expected&quot;, { false, true, false, false})), input_info, output_info, original_input_shape, data_layout, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a16d43ef62d0b413636dfc209d3eff059',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputShape&quot;, { TensorShape(27U, 13U, 5U, 3U), TensorShape(27U, 13U, 5U, 3U), TensorShape(27U, 13U, 5U, 3U), TensorShape(27U, 13U, 5U, 3U), TensorShape(27U, 13U, 5U, 3U), TensorShape(27U, 13U, 5U, 3U), TensorShape(27U, 13U, 5U, 3U), TensorShape(27U, 13U, 5U, 3U), TensorShape(27U, 13U, 5U, 3U), TensorShape(27U, 13U, 5U, 3U), TensorShape(27U, 13U, 5U, 3U) }), framework::dataset::make(&quot;WeightsShape&quot;, { TensorShape(4U, 27U, 3U, 3U, 3U), TensorShape(4U, 27U, 3U, 3U, 3U), TensorShape(4U, 27U, 3U, 3U, 3U), TensorShape(4U, 27U, 3U, 3U, 3U), TensorShape(4U, 32U, 3U, 3U, 3U), TensorShape(8U, 27U, 3U, 3U, 3U), TensorShape(4U, 27U, 3U, 3U, 3U), TensorShape(4U, 27U, 3U, 3U, 3U, 2U), TensorShape(4U, 27U, 3U, 3U, 3U), TensorShape(4U, 27U, 3U, 3U, 3U), TensorShape(4U, 27U, 3U, 3U, 3U) })), framework::dataset::make(&quot;BiasesShape&quot;, { TensorShape(4U), TensorShape(4U), TensorShape(4U), TensorShape(4U), TensorShape(4U), TensorShape(4U), TensorShape(8U), TensorShape(4U), TensorShape(4U), TensorShape(4U), TensorShape(4U) })), framework::dataset::make(&quot;OutputShape&quot;, { TensorShape(4U, 13U, 5U, 3U), TensorShape(4U, 13U, 5U, 3U), TensorShape(4U, 13U, 5U, 3U), TensorShape(4U, 13U, 5U, 3U), TensorShape(4U, 13U, 5U, 3U), TensorShape(4U, 13U, 5U, 3U), TensorShape(4U, 13U, 5U, 3U), TensorShape(4U, 13U, 5U, 3U), TensorShape(4U, 13U, 5U, 3U, 2U), TensorShape(4U, 11U, 5U, 3U), TensorShape(4U, 13U, 5U, 3U) })), framework::dataset::make(&quot;Conv3dInfo&quot;, { Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false), Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false), Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false), Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false), Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false), Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false), Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false), Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false), Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false), Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false), Conv3dInfo(Size3D(1U, 1U, 1U), Padding3D(1U, 1U, 1U), ActivationLayerInfo(), Size3D(1U, 1U, 1U), DimensionRoundingType::FLOOR, false) })), framework::dataset::make(&quot;SrcDataType&quot;, { DataType::F32, DataType::F32, DataType::F32, DataType::U32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32 })), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::F32, DataType::F32, DataType::F16, DataType::U32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCDHW, DataLayout::NDHWC, DataLayout::NDHWC, DataLayout::NDHWC, DataLayout::NDHWC, DataLayout::NDHWC, DataLayout::NDHWC, DataLayout::NDHWC, DataLayout::NDHWC, DataLayout::NDHWC, DataLayout::NDHWC })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, true })), input_shape, weights_shape, biases_shape, output_shape, conv3d_info, src_data_type, weights_data_type, data_layout, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a648a276a30f541e70bdbc8406340c71a',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 31U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 32U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 31U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 32U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2), })), framework::dataset::make(&quot;GpuTarget&quot;, { GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 1U), Size2D(2U, 1U), })), framework::dataset::make(&quot;EnableFastMath&quot;, { false, false, false, false, false, false, true, true, true })), framework::dataset::make(&quot;Expected&quot;,{ ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, })), input_info, weights_info, output_info, conv_info, gpu_target, dilation, enable_fast_math, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4584310779fb779a3ca630be76bc4117',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidatePostOpSupportInConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(2U, 17U, 31U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(17U, 31U, 32U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(27U, 27U, 48U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(27U, 27U, 48U), 1, DataType::F32, DataLayout::NCHW), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(2U, 1U, 1U, 19U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(5U, 5U, 32U, 19U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(5U, 5U, 48U, 128U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(11U, 11U, 48U, 24), 1, DataType::F32, DataLayout::NCHW), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(19U, 17U, 31U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(27U, 27U, 128U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(27U, 27U, 24U), 1, DataType::F32, DataLayout::NCHW), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1U, 1U, 0U, 0U), PadStrideInfo(1U, 1U, 2U, 2U), PadStrideInfo(1U, 1U, 2U, 2U), PadStrideInfo(1U, 1U, 5U, 5U), })), framework::dataset::make(&quot;EnableFastMath&quot;, { false, true, false, false})), framework::dataset::make(&quot;ExpectedMethod&quot;,{ ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::DIRECT, ConvolutionMethod::FFT, })), framework::dataset::make(&quot;PostOpSupported&quot;,{ true, false, false, false })), input_info, weights_info, output_info, conv_info, enable_fast_math, expected_method, post_op_supported)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4bab17c8bcb938748793bc1634691642',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(14U, 13U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 11U, 2U), 1, DataType::U8), TensorInfo(TensorShape(14U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3bc43924a7c78f8c77649280f2388b59',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), }), framework::dataset::make(&quot;BoxesInfo&quot;,{ TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(3, 20), 1, DataType::F32), })), framework::dataset::make(&quot;BoxIndInfo&quot;,{ TensorInfo(TensorShape(20), 1, DataType::S32), TensorInfo(TensorShape(10), 1, DataType::S32), TensorInfo(TensorShape(20), 1, DataType::S32), TensorInfo(TensorShape(20), 1, DataType::S32), TensorInfo(TensorShape(20), 1, DataType::S32), TensorInfo(TensorShape(20), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(15U, 5, 5, 20U), 1, DataType::F32), TensorInfo(TensorShape(15U, 5, 5, 20U), 1, DataType::F32), TensorInfo(TensorShape(15U, 5, 5, 10U), 1, DataType::F32), TensorInfo(TensorShape(15U, 5, 5, 20U), 1, DataType::S32), TensorInfo(TensorShape(5U, 5, 5, 20U), 1, DataType::F32), TensorInfo(TensorShape(15U, 5, 5, 20U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false})), input, boxes, box_ind, output, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a95c478c006e63c72518290848226de43',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 11U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 2U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(1U), 1, DataType::F16), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 9U, 1U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;PadStrideInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, weights_info, bias_info, output_info, pad_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a378b53971fc5c47dc3205c5cbe769a24',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;, { TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(24U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 3U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 6U), 1, DataType::F32) }), framework::dataset::make(&quot;InputInfo2&quot;, { TensorInfo(TensorShape(23U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 6U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(23U, 27U, 9U), 1, DataType::F16), TensorInfo(TensorShape(25U, 12U, 9U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 8U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 12U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ace4c3942b851ad043b4d6f73ccddaf77',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 32U, 2U), 1, DataType::U16), })), framework::dataset::make(&quot;Policy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Shift&quot;,{ 0, 0, 0, 1, 1, 0, })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, true})), input_info, output_info, policy, shift, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3e4970f770f23aaa759017adf107da3e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 8U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 4U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShape&quot;, { 2, 1, 2, 2, 2 })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 16U, 1U, 4U), 1, DataType::F32), TensorInfo(TensorShape(64U, 16U, 1U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F16), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false})), input_info, block_shape, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a225f4144ab99e394753507e385516198',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 8U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(24U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 11U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(20U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, true, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0750b0083a02540a4f6f3b7215795db9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 2U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(17U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::U8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(17U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad4fdf7f045788a948ee31e97a076d639',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 23U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 23U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0) })), framework::dataset::make(&quot;GpuTarget&quot;, { GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 2U), Size2D(3U, 3U) })), framework::dataset::make(&quot;Expected&quot;, { ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM })), input_info, weights_info, output_info, conv_info, gpu_target, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2984963251e0e13f3b22490d7d903c85',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;,{ TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(26U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(3, 3, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, true })), input_info, weights_info, biases_info, output_info, conv_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aaf14759031e053a9198b536675e6e36f',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2604ded7a830d2303eb8da67ee96ca22',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab37148025c4b5386101d63de885e8c9c',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a125a57a33ba8fbeae87a14ce35b20112',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 3, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(11U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(25U, 13U, 2U), 2, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F16), TensorInfo(TensorShape(16U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(11U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(25U, 13U, 2U), 2, DataType::F32), })), framework::dataset::make(&quot;Axis&quot;, { 0, 0, 0, 2, 0, 0 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6977e5dada34102dfca07ad1bd3acc63',1,'arm_compute::test::validation::DATA_TEST_CASE(FillBorder, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallShapes(), datasets::BorderModes()), BorderSizesDataset), PaddingSizesDataset), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, border_mode, size, padding, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad42b3661977e6e85dee15bc48bab2b05',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa3affe19462bcddbd9d6ca29c1e47594',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(315U, 271U), 1, DataType::F16), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(217U, 231U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;,{ TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), })), framework::dataset::make(&quot;TransposeWeights&quot;,{ true, true, false, true, true })), framework::dataset::make(&quot;ReshapedWeights&quot;,{ false, false, false, false, false})), framework::dataset::make(&quot;Expected&quot;, { false, true, true, false, false })), input_info, weights_info, bias_info, output_info, transpose_weights, reshaped_weights, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a79ab40d66042668672184704ffc8b86e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 5U, 5U, 5U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), }), framework::dataset::make(&quot;IndicesInfo&quot;, { TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U8), TensorInfo(TensorShape(10U, 10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(10U, 27U), 1, DataType::F16), TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(10U, 27U), 1, DataType::F32), TensorInfo(TensorShape(10U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(10U, 5U, 5U, 5U, 5U), 1, DataType::F32), TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), })), framework::dataset::make(&quot;Axis&quot;, { 0, 1, -2, 0, 1, 0, 1, 2, -3, })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false, false, false, false })), input_info, indices_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2cb5fce5ffa69c47e521b86411496d3b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(m_values, n_values), k_values), framework::dataset::make(&quot;batch_size&quot;, 1)), m0_values_precommit_1), n0_values_precommit), k0_values_precommit), h0_values_precommit), i_values_rhs), m_value, n_value, k_value, b_value, m0_value, n0_value, k0_value, h0_value, i_value_rhs)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac4c0c267a79f01ec58170c4f6f11955e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;Input0Info&quot;, { TensorInfo(TensorShape(64U, 5U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 5U, 2U), 1, DataType::F16), TensorInfo(TensorShape(64U, 5U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 5U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 5U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 5U, 2U), 1, DataType::F16), TensorInfo(TensorShape(64U, 5U, 2U), 1, DataType::F16), TensorInfo(TensorShape(64U, 5U, 2U), 1, DataType::F16), }), framework::dataset::make(&quot;Input1Info&quot;,{ TensorInfo(TensorShape(64U, 6U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 6U, 2U), 1, DataType::F16), TensorInfo(TensorShape(64U, 5U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(64U, 6U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 6U, 2U), 1, DataType::F16), TensorInfo(TensorShape(64U, 6U, 2U), 1, DataType::F16), TensorInfo(TensorShape(128U, 3U, 2U), 1, DataType::F16), })), framework::dataset::make(&quot;Input2Info&quot;, { TensorInfo(TensorShape(21U), 1, DataType::F32), TensorInfo(TensorShape(21U), 1, DataType::F16), TensorInfo(TensorShape(21U), 1, DataType::QASYMM8), TensorInfo(TensorShape(21U), 1, DataType::F32), TensorInfo(TensorShape(21U), 1, DataType::F32), TensorInfo(TensorShape(21U, 17U), 1, DataType::F16), TensorInfo(TensorShape(21U, 17U), 1, DataType::F16), TensorInfo(TensorShape(21U, 17U, 2U), 1, DataType::F16), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(21U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(21U, 17U, 2U), 1, DataType::F16), TensorInfo(TensorShape(21U, 17U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(21U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(21U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(21U, 17U, 2U), 1, DataType::F16), TensorInfo(TensorShape(21U, 17U, 2U), 1, DataType::F16), TensorInfo(TensorShape(21U, 17U, 2U), 1, DataType::F16), })), framework::dataset::make(&quot;LHSMInfo&quot;,{ GEMMLHSMatrixInfo(4, 4, 1, false, true), GEMMLHSMatrixInfo(4, 4, 1, false, true), GEMMLHSMatrixInfo(4, 4, 1, false, true), GEMMLHSMatrixInfo(4, 2, 4, false, false), GEMMLHSMatrixInfo(4, 2, 4, false, false), GEMMLHSMatrixInfo(4, 4, 1, false, true), GEMMLHSMatrixInfo(4, 4, 1, false, true), GEMMLHSMatrixInfo(4, 4, 1, false, true), })), framework::dataset::make(&quot;RHSMInfo&quot;,{ GEMMRHSMatrixInfo(4, 4, 1, true, true, false), GEMMRHSMatrixInfo(4, 4, 1, true, true, false), GEMMRHSMatrixInfo(4, 4, 1, true, true, false), GEMMRHSMatrixInfo(2, 2, 1, true, false, false), GEMMRHSMatrixInfo(2, 2, 1, true, false, false), GEMMRHSMatrixInfo(4, 4, 1, true, true, false), GEMMRHSMatrixInfo(4, 4, 1, true, true, false), GEMMRHSMatrixInfo(4, 4, 2, true, false, false), })), framework::dataset::make(&quot;GEMMInfo&quot;,{ GEMMKernelInfo(17, 21, 13, 0, false, true, false, false, ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 1, 1, GEMMLHSMatrixInfo(4, 4, 1, false, true), GEMMRHSMatrixInfo(4, 4, 1, true, true, false), 0, 0), GEMMKernelInfo(17, 21, 13, 0, false, true, false, false, ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 1, 1, GEMMLHSMatrixInfo(4, 4, 1, false, true), GEMMRHSMatrixInfo(4, 4, 1, true, true, false), 0, 0), GEMMKernelInfo(), GEMMKernelInfo(), GEMMKernelInfo(), GEMMKernelInfo(17, 21, 13, 0, false, false, false, false, ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 1, 1, GEMMLHSMatrixInfo(4, 4, 1, false, true), GEMMRHSMatrixInfo(4, 4, 1, true, true, false), 0, 0), GEMMKernelInfo(17, 21, 13, 0, false, false, true, true, ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 1, 1, GEMMLHSMatrixInfo(4, 4, 1, false, true), GEMMRHSMatrixInfo(4, 4, 1, true, true, false), 0, 0), GEMMKernelInfo(17, 21, 13, 0, false, false, false, false, ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 1, 1, GEMMLHSMatrixInfo(4, 4, 1, false, true), GEMMRHSMatrixInfo(4, 4, 2, true, false, false), 0, 0), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, true, true, true})), input0_info, input1_info, input2_info, output_info, lhs_info, rhs_info, gemm_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a04ca3b3e2eea6c731c7e577006f6865b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;batch_size&quot;, { 1, 1, 1, 1, 1, 1, 2, 1, 1, 1 }), framework::dataset::make(&quot;M0&quot;, { 4, 9, 4, 4, 4, 4, 4, 4, 4, 4 })), framework::dataset::make(&quot;N0&quot;, { 4, 4, 18, 4, 4, 4, 4, 8, 2, 8 })), framework::dataset::make(&quot;K0&quot;, { 4, 4, 4, 1, 4, 4, 4, 4, 4, 4 })), framework::dataset::make(&quot;broadcast_bias&quot;, { false, false, false, false, false, true, true, false, false, false })), framework::dataset::make(&quot;input_as_3d&quot;, { 0, 0, 0, 0, 1, 0, 1, 0, 0, 0 })), framework::dataset::make(&quot;depth_output_gemm3d&quot;, { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 })), framework::dataset::make(&quot;export_to_cl_image&quot;, { false, false, false, false, false, false, false, true, true, true })), framework::dataset::make(&quot;data_type_input0&quot;, { DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F16})), framework::dataset::make(&quot;data_type_input1&quot;, { DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F16})), framework::dataset::make(&quot;data_type_input2&quot;, { DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F16})), framework::dataset::make(&quot;data_type_output&quot;, { DataType::F16, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F32, DataType::F16})), framework::dataset::make(&quot;Beta&quot;, { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f, 1.0f})), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, true, false, true })), b_value, m0_value, n0_value, k0_value, broadcast_bias, input_as_3d, depth_output_gemm3d, export_to_cl_image, dt_input0, dt_intpu1, dt_input2, dt_output, beta, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7ced2bf2829547fd8e3d0dd4ffa99df4',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(64U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;N0&quot;,{ 4, 0, 4, 4, 4, 17, 4, 4 })), framework::dataset::make(&quot;K0&quot;,{ 4, 4, 0, 4, 4, 4, 17, 1 })), framework::dataset::make(&quot;H0&quot;,{ 4, 4, 4, 0, 4, 4, 4, 4 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false})), input_info, output_info, n0, k0, h0, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6c6cf5ca9d325aecaec612551e73d764',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidatePadding, framework::DatasetMode::ALL, combine(combine(combine(combine(framework::dataset::make(&quot;InputShape&quot;, { TensorShape(32U, 16U, 1U), TensorShape(32U, 16U, 2U) }), framework::dataset::make(&quot;N0&quot;,{ 4 })), framework::dataset::make(&quot;K0&quot;,{ 4, 8, 16 })), framework::dataset::make(&quot;H0&quot;,{ 1, 2, 4 })), framework::dataset::make(&quot;DataType&quot;,{ DataType::F32, DataType::F16 })), input_shape, n0, k0, h0, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3bb599d35c61a90a1923890e1ec71bdb',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;scores&quot;, { TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16)}), framework::dataset::make(&quot;deltas&quot;,{ TensorInfo(TensorShape(100U, 100U, 36U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 36U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32)})), framework::dataset::make(&quot;anchors&quot;, { TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32)})), framework::dataset::make(&quot;proposals&quot;, { TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32)})), framework::dataset::make(&quot;scores_out&quot;, { TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32)})), framework::dataset::make(&quot;num_valid_proposals&quot;, { TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 10U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::F16)})), framework::dataset::make(&quot;generate_proposals_info&quot;, { GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f)})), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false })), scores, deltas, anchors, proposals, scores_out, num_valid_proposals, generate_proposals_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a50aded66249956a556f69c7d7cb09a64',1,'arm_compute::test::validation::DATA_TEST_CASE(IntegrationTestCaseAllAnchors, framework::DatasetMode::ALL, framework::dataset::make(&quot;DataType&quot;, { DataType::F32 }), data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa806b8b3e966200908042a36f14954f1',1,'arm_compute::test::validation::DATA_TEST_CASE(IntegrationTestCaseGenerateProposals, framework::DatasetMode::ALL, combine(framework::dataset::make(&quot;DataType&quot;, { DataType::F32 }), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), data_type, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af40d6e921c6b14bb0316fc56dd515ca9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F16), TensorInfo(TensorShape(256U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true, true, true, true, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae42ced23c3e427fa851c1ce7fcabfb60',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F16), TensorInfo(TensorShape(256U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 0, 0, 0, 0, static_cast&lt; int &gt;(TensorShape::num_max_dimensions), 3, -2, 0 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true, true, true })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aff993409f5489af4dec6bea2971170d0',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(8U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;InputWeightsInfo&quot;, { TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;, { TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;CellBiasInfo&quot;, { TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(30U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), })), framework::dataset::make(&quot;ProjectionBiasInfo&quot;, { TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), })), framework::dataset::make(&quot;CellStateInfo&quot;, { TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ScratchInfo&quot;, { TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(12U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false })), input_info, input_weights_info, recurrent_weights_info, cell_bias_info, projection_bias_info, cell_state_info, output_info, scratch_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a315ab8ee116b2cafc206479b69d09edb',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa42871f009d1b70a8ddb07d513684431',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;NormInfo&quot;, { NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 4), NormalizationLayerInfo(NormType::IN_MAP_2D, 5), NormalizationLayerInfo(NormType::CROSS_MAP, 5), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, norm_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a478a9010906dfa0ee3f1028135c96777',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 16U, 8U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 16U, 8U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;MSTDInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::U8), TensorInfo(TensorShape(8U), 1, DataType::F16), TensorInfo(TensorShape(6U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, false, false })), input_info, output_info, msd_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2d71e39df0aafa07a1c09ed645a7dcb9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(28U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 15U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(29U, 15U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(29U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32) })), framework::dataset::make(&quot;PaddingSize&quot;, { PaddingList{{0, 0}}, PaddingList{{1, 1}}, PaddingList{{1, 1}, {2, 2}}, PaddingList{{1, 1}, {1, 1}, {1, 1}, {1, 1}}, PaddingList{{1, 1}, {1, 1}, {1, 1}}, PaddingList{{1, 1}, {2, 2}}, PaddingList{{0, 0}, {0, 0}, {1, 1}} })), framework::dataset::make(&quot;PaddingMode&quot;, { PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::SYMMETRIC, PaddingMode::REFLECT, PaddingMode::REFLECT })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, false, false, true, false })), input_info, output_info, padding, mode, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8e1a7450818e0f8fb66a78cb023096f6',1,'arm_compute::test::validation::DATA_TEST_CASE(CheckFusingWithConvolution, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NCHW, DataLayout::NCHW, DataLayout::NCHW, DataLayout::NCHW, DataLayout::NCHW, DataLayout::NCHW, DataLayout::NCHW, DataLayout::NHWC, DataLayout::NHWC, DataLayout::NHWC, DataLayout::NHWC, DataLayout::NHWC, DataLayout::NHWC, DataLayout::NHWC, DataLayout::UNKNOWN }), framework::dataset::make(&quot;PaddingList&quot;, { PaddingList({{0, 0}, {1, 1}, {1, 1}}), PaddingList({{1, 1}, {1, 1}, {0, 0}, {0, 0}}), PaddingList({{1, 1}, {1, 1}}), PaddingList({}), PaddingList({{0, 0}}), PaddingList({{0, 0}, {0, 0}, {0, 0}, {0, 0}}), PaddingList({{0, 0}, {0, 0}, {0, 0}, {1, 0}}), PaddingList({{0, 1}}), PaddingList({{0, 0}, {1, 1}, {1, 1}}), PaddingList({{0, 0}, {0, 0}, {1, 1}, {1, 1}}), PaddingList({{0, 0}, {1, 0}, {1, 1}, {0, 0}}), PaddingList({}), PaddingList({{0, 0}}), PaddingList({{0, 1}}), PaddingList({{0, 0}, {1, 1}}), PaddingList({{0, 0}}) })), framework::dataset::make(&quot;Expected&quot;, { false, true, true, true, true, true, false, true, true, false, true, true, true, false, true, false })), data_layout, padding_list, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9830b21da051c2c7724923c6729e5fd9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(1U, 7U), 1, DataType::U8), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::S16), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(5U, 7U), 1, DataType::U8), TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(13U, 37U, 27U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(3U, 5U, 7U, 7U), 1, DataType::S16), TensorInfo(TensorShape(13U, 37U, 27U, 2U), 1, DataType::F32), TensorInfo(TensorShape(37U, 2U, 13U, 27U), 1, DataType::F32), TensorInfo(TensorShape(37U, 2U, 13U, 27U), 1, DataType::F32) })), framework::dataset::make(&quot;PermutationVector&quot;, { PermutationVector(2U, 1U, 0U), PermutationVector(2U, 2U, 1U), PermutationVector(1U, 1U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(1U, 2U, 0U), PermutationVector(3U, 2U, 0U, 1U), PermutationVector(3U, 2U, 0U, 1U), PermutationVector(2U, 3U, 1U, 0U), PermutationVector(2U, 3U, 1U, 0U), PermutationVector(0U, 0U, 0U, 1000U) })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, true, true, false, true, false, true, false })), input_info, output_info, perm_vect, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9881bc071586036bd6b8f033bd8d5c22',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Scale&quot;,{ 2.f, 2.f, -1.f, 1.f, 1.f})), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false})), input1_info, input2_info, output_info, scale, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa718239ac5c7d47561d2da6140b90792',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(2U, 27U, 13U, 4U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 27U, 13U, 4U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 27U, 13U, 4U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 27U, 13U, 4U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 15U, 2U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(13U, 13U, 5U, 1U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 5U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(1U, 16U, 1U, 3U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 3U), 1, DataType::F32, DataLayout::NDHWC), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(2U, 25U, 11U, 3U, 3U), 1, DataType::F16, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 30U, 11U, 3U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 25U, 16U, 3U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 27U, 13U, 3U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 1U, 1U, 1U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 2U, 2U, 2U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 12U, 12U, 3U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 12U, 12U, 3U, 4U), 1, DataType::QASYMM8, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 1U, 1U, 1U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(1U, 15U, 1U, 2U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 6U, 6U, 2U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 6U, 6U, 2U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 6U, 6U, 2U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 6U, 6U, 2U, 3U), 1, DataType::F32, DataLayout::NDHWC), })), framework::dataset::make(&quot;PoolInfo&quot;, { Pooling3dLayerInfo(PoolingType::AVG, 3, Size3D(1, 1, 1), Padding3D(0, 0, 0)), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(1, 1, 1), Padding3D(2, 0, 0)), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(1, 1, 1), Padding3D(0, 0, 0)), Pooling3dLayerInfo(PoolingType::L2, 3, Size3D(1, 1, 1), Padding3D(0, 0, 0)), Pooling3dLayerInfo(PoolingType::AVG), Pooling3dLayerInfo(PoolingType::MAX), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(), Padding3D(), false), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(1U, 1U, 1U), Padding3D(), false), Pooling3dLayerInfo(PoolingType::AVG), Pooling3dLayerInfo(PoolingType::MAX, 2, Size3D(1, 1, 2), Padding3D(0, 0, 0), false), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(2U, 2U, 2U), Padding3D(), false), Pooling3dLayerInfo(PoolingType::AVG, 1, Size3D(2U, 2U, 2U), Padding3D(2, 2, 2), true), Pooling3dLayerInfo(PoolingType::AVG, 1, Size3D(2U, 2U, 2U), Padding3D(2, 2, 2), false), Pooling3dLayerInfo(PoolingType::AVG, 3, Size3D(2U, 2U, 2U), Padding3D(2, 1, 2, 2, 1, 2), false, false, DimensionRoundingType::CEIL), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, false, false, false, true, false, true, false, false, false})), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a01de42242e1ed8883be598d6e1b3d306',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(1U, 16U, 1U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32), TensorInfo(TensorShape(12U, 12U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), TensorInfo(TensorShape(1U, 15U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NCHW, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::L2, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, DataLayout::NCHW), PoolingLayerInfo(PoolingType::MAX, DataLayout::NCHW), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NHWC, PadStrideInfo(), false), PoolingLayerInfo(PoolingType::AVG, DataLayout::NCHW), PoolingLayerInfo(PoolingType::MAX, 2, DataLayout::NHWC, PadStrideInfo(1, 1, 0, 0), false), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, false, true, true, false})), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2b516efb7bc8c9fb42dab11c1237dda2',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(1200U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1000U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;PriorBoxInfo&quot;,{ PriorBoxLayerInfo(std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), 0, true, true, std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), Coordinates2D{8, 8}, std::array&lt; float, 2 &gt;()), PriorBoxLayerInfo(std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), 0, true, true, std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), Coordinates2D{8, 8}, std::array&lt; float, 2 &gt;()), })), framework::dataset::make(&quot;Expected&quot;, { true, false})), input1_info, input2_info, output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa9fd1f6ca645d5e6f565a195b45651a8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(correct_input_shape, tensor_num_channel, DataType::F16), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(TensorShape(15U, 2U, 2U), tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), }), framework::dataset::make(&quot;WeightInfo&quot;, { TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), TensorInfo(correct_weight_shape, tensor_num_channel, DataType::F16), TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), TensorInfo(TensorShape(15U, 2U), tensor_num_channel, correct_weight_dt), TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), TensorInfo(TensorShape(14U), tensor_num_channel, correct_weight_dt), TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(correct_bias_shape, tensor_num_channel, DataType::QSYMM16), TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(TensorShape(15U, 2U), tensor_num_channel, correct_bias_dt), TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(TensorShape(14U), tensor_num_channel, correct_bias_dt), })), input_info, weight_info, bias_info)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6f73439f86a03a533e8dcca2644e965b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 2U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::U16), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aae54270fd6f7436ab14dfef4910984a5',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::U8), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::F32), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(10U), 1, DataType::U8), }), framework::dataset::make(&quot;Start&quot;,{ 0.0f, 15.0f, 1500.0f, 100.0f, -15.0f, 0.2f, 2.0f, 10.0f})), framework::dataset::make(&quot;End&quot;,{ 100.0f, 15.0f, 2500.0f, -1000.0f, 15.0f, 10.0f, 10.0f, 100.0f })), framework::dataset::make(&quot;Step&quot;,{ 100.0f, 15.0f, 10.0f, 100.0f, -15.0f, 1.0f, 0.0f, 10.0f })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, true, })), output_info, start, end, step, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac3a959e8858670660de7a55f1760c721',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape{228U, 19U, 2U, 2U}, 1, DataType::F32), TensorInfo(TensorShape{228U, 19U, 2U, 1U}, 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(19U), 1, DataType::F32), TensorInfo(TensorShape(19U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { Coordinates(4), Coordinates(0, 2), Coordinates(2), Coordinates(3, 2, 0), Coordinates(3, 2, 0) })), framework::dataset::make(&quot;Keep&quot;, { true, true, true, false, false })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, true, false })), input_info, output_info, axis, keep, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abf3b57190e3ed42a68eb213b435039e3',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 3, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::QASYMM8), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(1U, 64U), 1, DataType::F16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::S16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::QASYMM8), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 0U, 0U, 0U, static_cast&lt; unsigned int &gt;(TensorShape::num_max_dimensions), 1U, 0U, 0U })), framework::dataset::make(&quot;KeepDims&quot;, { true, true, true, true, true, true, false })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true, false })), input_info, output_info, axis, keep_dims, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afb0b52b4f9be21c5363b9843ba2b496e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::S64), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 12U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 12U, 4U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::S64), TensorInfo(TensorShape(5U, 6U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 6U, 2, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 4U, 36U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 4U, 36U, 2U), 1, DataType::F16), })), framework::dataset::make(&quot;Stride&quot;, { 2, 2, 4, 3 })), framework::dataset::make(&quot;Expected&quot;, { false, true, false, true, false })), input_info, output_info, stride, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af8870dc8041b8433f43da5ec26e5dada',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F16), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(8U, 24U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 21U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#affdcdb0eb8b772707770affb973a6efe',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U), 1, DataType::U8), })), framework::dataset::make(&quot;AxisInfo&quot;,{ TensorInfo(TensorShape(3U), 1, DataType::U8), TensorInfo(TensorShape(2U, 10U), 1, DataType::U32), TensorInfo(TensorShape(8U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true})), src_info, dst_info, axis_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae9a599036cbe43ea19a36c05257d5f87',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), })), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;, { TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(30U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), })), framework::dataset::make(&quot;HiddenStateInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false })), input_info, weights_info, recurrent_weights_info, bias_info, output_info, hidden_output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a46e9ee2763c04c1908e7fe84eea3ef84',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 2U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255.f, 127)), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255.f, 127)), }), framework::dataset::make(&quot;RoisInfo&quot;, { TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F16), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 10U), 1, DataType::F32), TensorInfo(TensorShape(4, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::QASYMM16, QuantizationInfo(0.2f, 0)), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F16), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255.f, 120)), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255.f, 120)), })), framework::dataset::make(&quot;PoolInfo&quot;, { ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false, false, false, false })), input_info, rois_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4b2c909652159cb57a226ed64db0762d',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 2U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), }), framework::dataset::make(&quot;RoisInfo&quot;, { TensorInfo(TensorShape(5, 4U), 1, DataType::U16), TensorInfo(TensorShape(5, 4U), 1, DataType::U16), TensorInfo(TensorShape(5, 4U), 1, DataType::F16), TensorInfo(TensorShape(5, 4U), 1, DataType::U16), TensorInfo(TensorShape(5, 4U), 1, DataType::U16), TensorInfo(TensorShape(5, 10U), 1, DataType::U16), TensorInfo(TensorShape(4, 4U), 1, DataType::U16), TensorInfo(TensorShape(5, 4U), 1, DataType::U16), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::QASYMM8), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F16), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 3U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, false, false })), input_info, rois_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1191ea29766e411ab8173ae62e84a69e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, true, false })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aebc10ebaa1aa56ca405a5bc8b7e11026',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;CInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(13U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U), 1, DataType::U8), }), framework::dataset::make(&quot;XInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;YInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true})), c_info, x_info, y_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a87d9f386f53d15a1403514f8dcc059bd',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 2U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Starts&quot;, { Coordinates(3, 1, 0), Coordinates(-3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0) })), framework::dataset::make(&quot;Ends&quot;, { Coordinates(13, 3, 0), Coordinates(13, 3, 1), Coordinates(13, 3, 1, 1), Coordinates(13, 3, 1) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, starts, ends, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a69d1ac4dfe608bba88bbe41f1fc105a5',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(1.f/256, 12)) }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 0)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(1.f/256, -128)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(1.f/256, -128)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(1.f/256, -128)), })), framework::dataset::make(&quot;beta&quot;, { 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, })), framework::dataset::make(&quot;axis&quot;, { 0, 0, 0, 1, 0, -1, 2, -3, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true, true, false, false })), input_info, output_info, beta, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa74a3f0a9e477b5898cf4d90d62be712',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::S32), })), framework::dataset::make(&quot;PaddingsShapeInfo&quot;,{ TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input_info, block_shape_info, paddings_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af3755ce4968ad7506cb512f5b236330e',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateStatic, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeX&quot;, { 2, 2, 2, 2, 2 })), framework::dataset::make(&quot;BlockShapeY&quot;, { 2, 2, -2, 2, 2 })), framework::dataset::make(&quot;PadLeft&quot;, { Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(3, 11) })), framework::dataset::make(&quot;PadRight&quot;, { Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(3, 11) })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F16), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false})), input_info, block_shape_x, block_shape_y, padding_left, padding_right, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aaae24f1bccebf8119e41f18e1c7fd8d5',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 8U, 8U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F16), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;BlockShape&quot;, { 2, 2, -2, 2 })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input_info, output_info, block_shape, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af0b36b976c5b2f378f229b4c9db95170',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Axis&quot;, { 4, 2, 2 })), framework::dataset::make(&quot;Splits&quot;, { 4, 5, 4 })), framework::dataset::make(&quot;Expected&quot;, { false, false, true })), input_info, axis, splits, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab920f8b777413b1e0b153eeba0e6ec3c',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateSplitShapes, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Axis&quot;, { 2, 2 })), framework::dataset::make(&quot;Splits&quot;, { std::vector&lt; TensorInfo &gt;{TensorInfo(TensorShape(27U, 3U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 8U, 2U), 1, DataType::F32)}, std::vector&lt; TensorInfo &gt;{TensorInfo(TensorShape(27U, 3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 13U, 2U), 1, DataType::F32)} })), framework::dataset::make(&quot;Expected&quot;, { true, true })), input_info, axis, splits, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa592247e90b4ec742ec8d73842c391e1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::U8) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(1U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U), 1, DataType::U8)}, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(2U, 3U), 1, DataType::S32) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(7U, 5U, 3U, 8U, 2U), 1, DataType::S32), TensorInfo(TensorShape(7U, 5U, 3U, 8U, 2U), 1, DataType::S32)}, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::S32) }, }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(1U, 9U, 8U), 1, DataType::U8), TensorInfo(TensorShape(1U, 3U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::S32), TensorInfo(TensorShape(3U, 7U, 5U), 1, DataType::S32), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::U8), })), framework::dataset::make(&quot;Axis&quot;, { -3, 1, -4, -3, 1 })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afcdb062eabf45af9f84aa11d0f74dc6d',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 2U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Starts&quot;, { Coordinates(3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0) })), framework::dataset::make(&quot;Ends&quot;, { Coordinates(13, 3, 0), Coordinates(13, 3, 1), Coordinates(13, 3, 1, 1), Coordinates(13, -1, 1), Coordinates(13, 3, 1) })), framework::dataset::make(&quot;Strides&quot;, { BiStrides(2, 1, 1), BiStrides(2, 0, 1), BiStrides(2, 1, 1), BiStrides(2, -1, 1), BiStrides(2, 1, 1) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, starts, ends, strides, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4e33546f75c1de3f66b180c270465d66',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10, 10), 1, DataType::F32), TensorInfo(TensorShape(10, 10), 1, DataType::F32), TensorInfo(TensorShape(10, 10), 1, DataType::F16), TensorInfo(TensorShape(10, 10), 1, DataType::F32)}), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(10, 20), 1, DataType::F32), TensorInfo(TensorShape(20, 20), 1, DataType::F32), TensorInfo(TensorShape(20, 20), 1, DataType::F32), TensorInfo(TensorShape(10, 20), 1, DataType::F32)})), framework::dataset::make(&quot;Multiples&quot;,{ Multiples{1, 2}, Multiples{1, 2}, Multiples{0, 1} })), framework::dataset::make(&quot;Expected&quot;, {true, false, false, false })), input_info, output_info, multiples, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abd2bb6abd91de18037f6a4892c77df3f',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(20U, 13U), 1, DataType::U8), TensorInfo(TensorShape(20U, 16U), 1, DataType::U32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(13U, 20U), 1, DataType::U32), TensorInfo(TensorShape(31U, 20U), 1, DataType::U16), TensorInfo(TensorShape(16U, 20U), 1, DataType::U32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true })), a_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0ccbbd6a9efa693cbd9ad13cafef40f1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(1U, 9U, 8U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::S32), TensorInfo(TensorShape(3U, 7U, 5U), 1, DataType::S32), TensorInfo(TensorShape(13U, 7U, 5U), 1, DataType::S16), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;, { std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::U8) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(2U, 3U), 1, DataType::U8) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(2U, 3U), 1, DataType::S32) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(7U, 5U), 1, DataType::S32), TensorInfo(TensorShape(7U, 5U), 1, DataType::S32), TensorInfo(TensorShape(7U, 5U), 1, DataType::S32) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(7U, 5U), 1, DataType::S16) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::S32) }, })), framework::dataset::make(&quot;Axis&quot;, { -3, 3, -4, -3, 1, 1 })), framework::dataset::make(&quot;Num&quot;, { 1, 1, 1, 1, 0, 1 })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, true, false, false })), input_info, output_info, axis, num, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab0405d6980bbc49a0775da88b91dbc02',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(3U, 3U, 2U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(4U), 1, DataType::F16), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::QASYMM8), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(4U, 19U), 1, DataType::F32), TensorInfo(TensorShape(4U, 19U), 1, DataType::F16), TensorInfo(TensorShape(4U, 19U), 1, DataType::QASYMM8), TensorInfo(TensorShape(4U, 19U), 1, DataType::F32), TensorInfo(TensorShape(4U, 19U), 1, DataType::F32), TensorInfo(TensorShape(4U, 19U), 1, DataType::F32), })), framework::dataset::make(&quot;NumGroups&quot;, { 1, 1, 1, 2, 1, 2 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false })), input_info, biases_info, output_info, num_groups, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afb8240666f7c1c72ff9cd4c38a0b7971',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;, { TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(21U, 35U, 5U), 1, DataType::F32) }), framework::dataset::make(&quot;InputInfo2&quot;, { TensorInfo(TensorShape(24U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(52U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(52U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(10U, 35U, 5U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(47U, 27U, 5U), 1, DataType::F16), TensorInfo(TensorShape(75U, 12U, 5U), 1, DataType::F32), TensorInfo(TensorShape(11U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(32U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(31U, 35U, 5U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true })), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aac048516f77e38ab5265d5baaa3422c5',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F16), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 8U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 19U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 19U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(19U), 1, DataType::F16), TensorInfo(TensorShape(19U), 1, DataType::F32), TensorInfo(TensorShape(21U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F16), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 2, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 1, 0) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false })), input_info, weights_info, bias_info, output_info, conv_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a50cc7b8c62d270338c86b6c4cda2b4ca',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;BoxEncodingsInfo&quot;, { TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::S8), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::QASYMM8), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::QASYMM8_SIGNED)}), framework::dataset::make(&quot;ClassPredsInfo&quot;,{ TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 10U), 1, DataType::QASYMM8_SIGNED)})), framework::dataset::make(&quot;AnchorsInfo&quot;,{ TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::QASYMM8), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::QASYMM8_SIGNED)})), framework::dataset::make(&quot;OutputBoxInfo&quot;, { TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::S8), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(1U, 5U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32)})), framework::dataset::make(&quot;OuputClassesInfo&quot;,{ TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(6U, 1U), 1, DataType::F32)})), framework::dataset::make(&quot;OutputScoresInfo&quot;,{ TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(6U, 1U), 1, DataType::F32)})), framework::dataset::make(&quot;NumDetectionsInfo&quot;,{ TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32)})), framework::dataset::make(&quot;DetectionPostProcessLayerInfo&quot;,{ DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 1.5f, 2, {0.0f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f})})), framework::dataset::make(&quot;Expected&quot;, {true, false, false, false, false, false })), box_encodings_info, classes_info, anchors_info, output_boxes_info, output_classes_info, output_scores_info, num_detection_info, detect_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af2967f780bdc7641cc752b34ab56dcfe',1,'arm_compute::test::validation::DATA_TEST_CASE(Real, framework::DatasetMode::ALL, shapes_1d_dft, shape)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7911504775931fa5b66c9a446dd9f83a',1,'arm_compute::test::validation::DATA_TEST_CASE(Complex, framework::DatasetMode::ALL, shapes_1d_dft, shape)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aee1e1d413bf240fdc67ee001d37f3854',1,'arm_compute::test::validation::DATA_TEST_CASE(Complex, framework::DatasetMode::ALL, shapes_2d_dft, shape)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5c04187b148810b65acce6528c9b83be',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;BoundingBox&quot;,{ TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), TensorInfo(TensorShape(1U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 2U), 1, DataType::S32), TensorInfo(TensorShape(4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 66U), 1, DataType::F32), TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), }), framework::dataset::make(&quot;Scores&quot;, { TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(37U, 2U, 13U, 27U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(3U), 1, DataType::U8), TensorInfo(TensorShape(66U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::F32), })), framework::dataset::make(&quot;Indices&quot;, { TensorInfo(TensorShape(100U), 1, DataType::S32), TensorInfo(TensorShape(100U), 1, DataType::S32), TensorInfo(TensorShape(4U), 1, DataType::S32), TensorInfo(TensorShape(3U), 1, DataType::S32), TensorInfo(TensorShape(200U), 1, DataType::S32), TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::S32), TensorInfo(TensorShape(100U), 1, DataType::S32), TensorInfo(TensorShape(100U), 1, DataType::S32), TensorInfo(TensorShape(100U), 1, DataType::S32), })), framework::dataset::make(&quot;max_output&quot;, { 10U, 2U, 4U, 3U, 66U, 1U, 0U, 10000U, 100U, 10U, })), framework::dataset::make(&quot;score_threshold&quot;, { 0.1f, 0.4f, 0.2f, 0.8f, 0.3f, 0.01f, 0.5f, 0.45f, -1.f, 0.5f, })), framework::dataset::make(&quot;nms_threshold&quot;, { 0.3f, 0.7f, 0.1f, 0.13f, 0.2f, 0.97f, 0.76f, 0.87f, 0.1f, 10.f, })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, true, false, false, true, false, false })), bbox_info, scores_info, indices_info, max_out, score_threshold, nms_threshold, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a822e5814a7ccc966d5bac4d5f2fb0ebe',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;PredictionsInfo&quot;, { TensorInfo(TensorShape(20, 10), 1, DataType::F32), TensorInfo(TensorShape(10, 20), 1, DataType::F16), TensorInfo(TensorShape(20, 10), 1, DataType::S8), TensorInfo(TensorShape(10, 10, 10), 1, DataType::F32), TensorInfo(TensorShape(20, 10), 1, DataType::F32)}), framework::dataset::make(&quot;TargetsInfo&quot;,{ TensorInfo(TensorShape(10), 1, DataType::U32), TensorInfo(TensorShape(10), 1, DataType::U32), TensorInfo(TensorShape(10), 1, DataType::U32), TensorInfo(TensorShape(10), 1, DataType::U32), TensorInfo(TensorShape(10), 1, DataType::U32)})), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(10), 1, DataType::U8), TensorInfo(TensorShape(10), 1, DataType::U8), TensorInfo(TensorShape(10), 1, DataType::U8), TensorInfo(TensorShape(10), 1, DataType::U8), TensorInfo(TensorShape(1), 1, DataType::U8)})), framework::dataset::make(&quot;k&quot;,{ 0, 1, 2, 3, 4 })), framework::dataset::make(&quot;Expected&quot;, {true, false, false, false, false })), prediction_info, targets_info, output_info, k, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a29fea97db54d4560d46d8752ec59eb07',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, true, false})), input_info, output_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af5932b425ed57045b1608b5c9ce4d9ce',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection, framework::DatasetMode::ALL, concat(concat(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::QASYMM8, DataType::QASYMM8_SIGNED, DataType::QSYMM16 })), combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, }))), combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE2&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8, DataType::QASYMM8_SIGNED, DataType::QSYMM16 }))), cpu_ext, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2c9767fa8091d865f4ce1d8af0e88821',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 16U, 1U, 2U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 4, 0, 2, 0 })), framework::dataset::make(&quot;Operation&quot;, { ReductionOperation::ARG_IDX_MAX, ReductionOperation::ARG_IDX_MAX, ReductionOperation::ARG_IDX_MAX, ReductionOperation::MEAN_SUM })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, false })), input_info, output_info, axis, operation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2f3e26928066ef38392ff2f74c2aaa64',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a59d0db292f8877d681fd880daa389a71',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection, framework::DatasetMode::ALL, concat(concat(combine(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::U8, DataType::S16, DataType::S32, DataType::QASYMM8, DataType::QASYMM8_SIGNED, DataType::QSYMM16 })), framework::dataset::make(&quot;CanUseFixedpoint&quot;, {true, false})), combine(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::U8, DataType::S16, DataType::S32 })), framework::dataset::make(&quot;CanUseFixedpoint&quot;, {true, false}))), combine(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE2&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8, DataType::QASYMM8_SIGNED, DataType::QSYMM16 })), framework::dataset::make(&quot;CanUseFixedpoint&quot;, {true, false}))), cpu_ext, data_type, can_use_fixedpoint)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4f2304e22ec1c9c93f4841c000ededa7',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvertPolicy&quot;,{ ConvertPolicy::SATURATE, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false})), input1_info, input2_info, output_info, policy, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#acba694051a899ef36443271d33cb5760',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;MVBGInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(5U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 2.f, 6.f), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false})), input_info, output_info, mvbg_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6dfffa3ac67a2f59c9a5baee840651fd',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;Weights&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U, 1U), 1, DataType::F32), }), framework::dataset::make(&quot;MVBGInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(5U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), weights_info, mvbg_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae52bb8e9114b30c87b30348b1d4deab5',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeInfo&quot;,{ TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 4U), 1, DataType::S32), TensorInfo(TensorShape(4U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false})), input_info, block_shape_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a480bde659fe6248da6d871a20b2fbf7d',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelectionSrcFP32, framework::DatasetMode::ALL, combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::BFLOAT16, })), cpu_ext, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6febcfe6c8584f2def828a3cd49d1531',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::S64), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvolvedWidth&quot;, { 3, 3, 3, 3, 3 })), framework::dataset::make(&quot;ConvolvedHeight&quot;, { 4, 4, 4, 4, 4 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, convolved_width, convolved_height, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac16ee018eeceda8c06745acee046d421',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#acf4e44fb82eea09ec6e6b09234d1a891',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U, 4U), 1U, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(27U, 13U, 2U, 4U), 1U, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(27U, 13U, 2U, 4U), 1U, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(27U, 13U, 2U, 4U), 1U, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(27U, 13U, 2U, 4U), 1U, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(27U, 13U, 2U, 4U), 1U, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(27U, 13U, 2U, 4U), 1U, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(27U, 13U, 2U, 4U), 1U, DataType::U32, DataLayout::NDHWC), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(4U, 3U, 3U, 3U, 2U), 1U, DataType::F16), TensorInfo(TensorShape(4U, 3U, 3U, 3U, 3U), 1U, DataType::F32), TensorInfo(TensorShape(4U, 3U, 3U, 3U, 2U, 3U), 1U, DataType::F32), TensorInfo(TensorShape(4U, 3U, 3U, 3U, 2U), 1U, DataType::F32), TensorInfo(TensorShape(4U, 3U, 3U, 3U, 2U), 1U, DataType::F32), TensorInfo(TensorShape(4U, 3U, 3U, 3U, 2U), 1U, DataType::F32), TensorInfo(TensorShape(4U, 3U, 3U, 3U, 2U), 1U, DataType::F32), TensorInfo(TensorShape(4U, 3U, 3U, 3U, 2U), 1U, DataType::U32), })), framework::dataset::make(&quot;BiasesInfo&quot;,{ TensorInfo(TensorShape(4U), 1U, DataType::F32), TensorInfo(TensorShape(4U), 1U, DataType::F32), TensorInfo(TensorShape(4U), 1U, DataType::F32), TensorInfo(TensorShape(4U), 1U, DataType::F32), TensorInfo(TensorShape(3U), 1U, DataType::F32), TensorInfo(TensorShape(4U, 2U), 1U, DataType::F32), TensorInfo(TensorShape(4U), 1U, DataType::F32), TensorInfo(TensorShape(4U), 1U, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 4U), 1U, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1U, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1U, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1U, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1U, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1U, DataType::F32), TensorInfo(TensorShape(26U, 11U, 4U), 1U, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1U, DataType::U32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false})), input_info, weights_info, biases_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a53950503f84613370c1874e9ec36f738',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(18U, 18U, 32U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 32U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 32U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 21U), 1, DataType::F32), TensorInfo(TensorShape(19U, 23U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0) })), framework::dataset::make(&quot;FastMath&quot;, { true, true, false, false })), framework::dataset::make(&quot;Expected&quot;, { ConvolutionMethod::WINOGRAD, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM })), input_info, weights_info, output_info, conv_info, fast_math, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab44b66bad182905ba55f96ee494e8e73',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 11U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6b4259369deb494ba11d7a95322dc6d0',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 11U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 2U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(1U), 1, DataType::F16), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 9U, 1U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;PadStrideInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, weights_info, bias_info, output_info, pad_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa2d7a9f123e98cad9f150dde4e095c13',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Policy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Shift&quot;,{ 0, 0, 0, 1, 1, 1, 8, 1, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true})), input_info, output_info, policy, shift, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a13906c8cbe4233df5fef380802decdd9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate3x3, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(4, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(25U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9ae1d00b2c6524b3ae0299937b63a7f7',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateGeneric, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 1, 2, 2, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(25U, 1U), Size2D(0U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false})), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a910d136af8cde4e45c175316805a4f75',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection_mul_and_add, framework::DatasetMode::ALL, combine(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::QASYMM8_SIGNED, DataType::QASYMM8, DataType::QSYMM8_PER_CHANNEL })), framework::dataset::make(&quot;DataType_per_channel&quot;, { DataType::QASYMM8, DataType::QASYMM8_SIGNED })), cpu_ext, data_type, data_type_per_channel)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afc6d1fe58150b29f5ba3ac9d7b1385de',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 2U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(17U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::U8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(17U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9319d62cd0f2627f92929d302d685f38',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;BoxEncodingsInfo&quot;, { TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::S8), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::QASYMM8)}), framework::dataset::make(&quot;ClassPredsInfo&quot;,{ TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::QASYMM8)})), framework::dataset::make(&quot;AnchorsInfo&quot;,{ TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::QASYMM8)})), framework::dataset::make(&quot;OutputBoxInfo&quot;, { TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::S8), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(1U, 5U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32)})), framework::dataset::make(&quot;OuputClassesInfo&quot;,{ TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(6U, 1U), 1, DataType::F32)})), framework::dataset::make(&quot;OutputScoresInfo&quot;,{ TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(6U, 1U), 1, DataType::F32)})), framework::dataset::make(&quot;NumDetectionsInfo&quot;,{ TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32)})), framework::dataset::make(&quot;DetectionPostProcessLayerInfo&quot;,{ DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 1.5f, 2, {0.0f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f})})), framework::dataset::make(&quot;Expected&quot;, {true, false, false, false, false, false })), box_encodings_info, classes_info, anchors_info, output_boxes_info, output_classes_info, output_scores_info, num_detection_info, detect_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4393002100019a1d2fe5a825aaf2a966',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(8U, 8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(6U, 6U, 1U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0) })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 2U), Size2D(2U, 1U), Size2D(2U, 2U), Size2D(3U, 3U) })), framework::dataset::make(&quot;Expected&quot;, { ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM })), input_info, weights_info, output_info, conv_info, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aaa43dbb7a76a84c7eb77b6ec98c44e08',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection, framework::DatasetMode::ALL, concat(combine(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), combine(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW }))), cpu_ext, data_type, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5f7a673602a2af2aa5d494a5a7aa9764',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 9U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;,{ TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(26U, 11U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(3, 3, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false })), input_info, weights_info, biases_info, output_info, conv_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae909467d4225c5f11dc1fdb3bd990d32',1,'arm_compute::test::validation::DATA_TEST_CASE(NoPaddingNHWCKernel, framework::DatasetMode::ALL, combine(combine(combine(data_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), shape, stride_x, stride_y, pad_x, pad_y, kernel_size, num_kernels, data_type, act_info, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a283cdb9d06e3a1a3f1adfd69c8afa313',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae1563e1a8ab4229b77e523e9c2fc2053',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection_elementwise_unary, framework::DatasetMode::ALL, concat(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::S32 })), combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::S32 }))), cpu_ext, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aca72e2f3848e22fd14ad4c261ef29d3e',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection_elementwise_arithmetic, framework::DatasetMode::ALL, concat(concat(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::S32, DataType::S16, DataType::QASYMM8, DataType::QASYMM8_SIGNED })), combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::S32, DataType::S16 }))), combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE2&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8, DataType::QASYMM8_SIGNED }))), cpu_ext, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7c073c26692ad362f224818c4ba6bf08',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection_elementwise_comparison, framework::DatasetMode::ALL, concat(concat(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::S32, DataType::S16, DataType::U8, DataType::QASYMM8, DataType::QASYMM8_SIGNED })), combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::S32, DataType::S16, DataType::U8 }))), combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE2&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8, DataType::QASYMM8_SIGNED }))), cpu_ext, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afcf78e82d4aa6d9686fb5b315a9233ca',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, true, false, false })), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aba8ef0a680625d014603dcc3eb81a909',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, true, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6f55e62cd4d1ec78047593c9b98316a6',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U), 1, DataType::QASYMM8, QuantizationInfo(0.3f, 1)), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a02e4fa6ebedae23e8cd42c68038a489a',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::U8), TensorInfo(TensorShape(4U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(64U), 1, DataType::F32), TensorInfo(TensorShape(64U), 1, DataType::F32), TensorInfo(TensorShape(64U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aba4f6a9aca6b4c7df1c315e6d92a89fe',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection, framework::DatasetMode::ALL, combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, })), cpu_ext, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4fbf0e6a1c8356ad0918515bb1310e1b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(315U, 271U), 1, DataType::F16), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;,{ TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;TransposeWeights&quot;,{ true, true, false, true, true, true })), framework::dataset::make(&quot;ReshapedWeights&quot;,{ false, false, false, false, false, false})), framework::dataset::make(&quot;Expected&quot;, { false, true, true, false, false, true })), input_info, weights_info, bias_info, output_info, transpose_weights, reshaped_weights, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa1ce956bb3fa59263550acbad4f07423',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 5U, 5U, 5U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), }), framework::dataset::make(&quot;IndicesInfo&quot;, { TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U8), TensorInfo(TensorShape(10U, 10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(10U, 27U), 1, DataType::F32), TensorInfo(TensorShape(10U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(10U, 5U, 5U, 5U, 5U), 1, DataType::F32), TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), })), framework::dataset::make(&quot;Axis&quot;, { 0, 1, -2, 0, 1, 0, 1, 2, -3, })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, false, false, false })), input_info, indices_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1316e3a4a7aa30c0b95e0a78a0d94282',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection_mul_and_add, framework::DatasetMode::ALL, combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16 })), cpu_ext, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5d5cd5d1f0071ebaa3fe780f4ce23316',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateZeroPadding, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;N&quot;, { 1, 23, 63, 101 }), framework::dataset::make(&quot;K&quot;, { 1, 47, 29, 27 })), n_value, k_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afc856473ef94e57180f8401e9c84e595',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateZeroPadding, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;M&quot;, { 1, 23, 63, 101 }), framework::dataset::make(&quot;K&quot;, { 1, 47, 29, 27 })), m_value, k_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a80dc355719c2cc0031e149566210cf67',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateZeroPadding, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;In0&quot;, { TensorShape(21U, 13U), TensorShape(31U, 1U), TensorShape(31U, 1U), TensorShape(8U, 2U), TensorShape(38U, 12U), TensorShape(32U, 1U) }), framework::dataset::make(&quot;In1&quot;, { TensorShape(33U, 21U), TensorShape(23U, 31U), TensorShape(23U, 31U), TensorShape(16U, 8U), TensorShape(21U, 38U), TensorShape(17U, 32U) })), shape0, shape1)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa2492479cb961e36976a096e29d2b9d4',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, framework::dataset::concat(datasets::SmallGEMMLowpDataset(), datasets::LargeGEMMLowpDataset()), shape_a, shape_b, shape_c, a_offset, b_offset)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a28a0b98dfe74f25200282fa31a76478e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputAInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(20U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(16U, 32U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), }), framework::dataset::make(&quot;InputBInfo&quot;,{ TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(64U, 16U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(8U, 11U), 1, DataType::S32), TensorInfo(TensorShape(64U, 32U), 1, DataType::S32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, true })), a_info, b_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a38687ff5ecd0fb54fc81a36a3b28a32a',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;, { TensorInfo(TensorShape(23U, 15U, 5U), 1, DataType::F32), TensorInfo(TensorShape(22U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 25U, 5U), 1, DataType::F32), TensorInfo(TensorShape(35U, 21U, 5U), 1, DataType::F32) }), framework::dataset::make(&quot;InputInfo2&quot;, { TensorInfo(TensorShape(23U, 15U, 4U), 1, DataType::F32), TensorInfo(TensorShape(22U, 127U, 5U), 1, DataType::F32), TensorInfo(TensorShape(11U, 26U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 25U, 5U), 1, DataType::F32), TensorInfo(TensorShape(35U, 10U, 5U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(23U, 30U, 5U), 1, DataType::F16), TensorInfo(TensorShape(22U, 12U, 5U), 1, DataType::F32), TensorInfo(TensorShape(11U, 7U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 50U, 5U), 1, DataType::F32), TensorInfo(TensorShape(35U, 31U, 5U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true })), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afaa077b528557e3df09361e7a998f361',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::U8), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 12U, 2U, 2U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(18U, 80U, 1U, 2U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;HasBias&quot;, { true, true, true, false, false })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, has_bias, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a24c2d31a9713c93cac9bdd582639b30a',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;NormInfo&quot;, { NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 4), NormalizationLayerInfo(NormType::IN_MAP_2D, 5), NormalizationLayerInfo(NormType::CROSS_MAP, 1), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true })), input_info, output_info, norm_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4276fdfdcd468299e18b3046d019e760',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(28U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 15U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 14U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(28U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 15U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 14U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 3U), 1, DataType::F32) })), framework::dataset::make(&quot;PaddingSize&quot;, { PaddingList{{0, 0}}, PaddingList{{1, 1}}, PaddingList{{1, 1}, {2, 2}}, PaddingList{{1, 1}, {1, 1}, {1, 1}, {1, 1}}, PaddingList{{0, 0}, {1, 0}, {0, 1}, {1, 2}}, PaddingList{{0, 0}, {0, 0}, {0, 0}, {1, 1}}, PaddingList{{0, 0}}, PaddingList{{1, 1}}, PaddingList{{1, 1}, {2, 2}}, PaddingList{{1, 1}, {1, 1}, {1, 1}, {1, 1}}, PaddingList{{0, 0}, {1, 0}, {0, 1}, {1, 2}}, PaddingList{{0, 0}, {0, 0}, {0, 0}, {1, 1}} })), framework::dataset::make(&quot;PaddingMode&quot;, { PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::REFLECT, PaddingMode::REFLECT, PaddingMode::REFLECT, PaddingMode::REFLECT, PaddingMode::REFLECT, PaddingMode::SYMMETRIC })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, true, true, true, false, false, true, false, false, true })), input_info, output_info, padding, mode, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab6644b8f7d262c28de87ead4f4d6f264',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;Scale&quot;,{ scale_unity, scale_unity, scale_unity, -1.f, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_255})), framework::dataset::make(&quot;OverflowPolicy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false, false, false, true, false, false, true, false, false})), input1_info, input2_info, output_info, scale, policy, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0e911948ca7bc0ea53829f23b1095aa4',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(2U, 27U, 13U, 4U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 27U, 13U, 4U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 27U, 13U, 4U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 27U, 13U, 4U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 15U, 2U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(13U, 13U, 5U, 1U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(5U, 13U, 13U, 5U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(1U, 16U, 1U, 3U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 13U, 13U, 4U, 3U), 1, DataType::F32, DataLayout::NDHWC), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(2U, 25U, 11U, 3U, 3U), 1, DataType::F16, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 30U, 11U, 3U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 25U, 16U, 3U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(2U, 27U, 13U, 3U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 1U, 1U, 1U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 2U, 2U, 2U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 12U, 12U, 3U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 12U, 12U, 3U, 4U), 1, DataType::QASYMM8, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 12U, 12U, 3U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 1U, 1U, 1U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(1U, 15U, 1U, 2U, 4U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 6U, 6U, 2U, 3U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 6U, 6U, 2U, 2U), 1, DataType::F32, DataLayout::NDHWC), TensorInfo(TensorShape(5U, 6U, 6U, 2U, 3U), 1, DataType::F32, DataLayout::NDHWC), })), framework::dataset::make(&quot;PoolInfo&quot;, { Pooling3dLayerInfo(PoolingType::AVG, 3, Size3D(1, 1, 1), Padding3D(0, 0, 0)), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(1, 1, 1), Padding3D(2, 0, 0)), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(1, 1, 1), Padding3D(0, 0, 0)), Pooling3dLayerInfo(PoolingType::L2, 3, Size3D(1, 1, 1), Padding3D(0, 0, 0)), Pooling3dLayerInfo(PoolingType::AVG), Pooling3dLayerInfo(PoolingType::MAX), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(), Padding3D(), false), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(1U, 1U, 1U), Padding3D(), false), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(1U, 1U, 1U), Padding3D(), false), Pooling3dLayerInfo(PoolingType::AVG), Pooling3dLayerInfo(PoolingType::MAX, 2, Size3D(1, 1, 2), Padding3D(0, 0, 0), false), Pooling3dLayerInfo(PoolingType::AVG, 2, Size3D(2U, 2U, 2U), Padding3D(), false), Pooling3dLayerInfo(PoolingType::AVG, 1, Size3D(2U, 2U, 2U), Padding3D(2, 2, 2), true), Pooling3dLayerInfo(PoolingType::AVG, 1, Size3D(2U, 2U, 2U), Padding3D(2, 2, 2), false), Pooling3dLayerInfo(PoolingType::AVG, 3, Size3D(2U, 2U, 2U), Padding3D(2, 1, 2, 2, 1, 2), false, false, DimensionRoundingType::CEIL), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, false, false, false, false, true, false, true, false, false, false})), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad1f575ca2943721def6699610c4823cf',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(1U, 16U, 1U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32), TensorInfo(TensorShape(12U, 12U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 15U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NCHW, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::AVG, DataLayout::NCHW), PoolingLayerInfo(PoolingType::MAX, DataLayout::NCHW), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NHWC, PadStrideInfo(), false), PoolingLayerInfo(PoolingType::AVG, DataLayout::NCHW), PoolingLayerInfo(PoolingType::MAX, 2, DataLayout::NHWC, PadStrideInfo(1, 1, 0, 0), false), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, false, true, false, false})), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac1a02462daa15bbc731619263bdec41d',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a65104e52bd79edcec951b8b3dbbc769f',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Input2Info&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(1200U, 2U), 1, DataType::F32) })), framework::dataset::make(&quot;PriorBoxInfo&quot;,{ PriorBoxLayerInfo(std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), 0, true, true, std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), Coordinates2D{8, 8}, std::array&lt; float, 2 &gt;()) })), framework::dataset::make(&quot;Expected&quot;, { true})), input1_info, input2_info, output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af5f50727a79ff6665e94042e1ab50af1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(correct_input_shape, tensor_num_channel, DataType::F16), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(TensorShape(15U, 2U, 2U), tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), TensorInfo(correct_input_shape, tensor_num_channel, correct_input_dt), }), framework::dataset::make(&quot;WeightInfo&quot;, { TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), TensorInfo(correct_weight_shape, tensor_num_channel, DataType::F16), TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), TensorInfo(TensorShape(15U, 2U), tensor_num_channel, correct_weight_dt), TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), TensorInfo(TensorShape(14U), tensor_num_channel, correct_weight_dt), TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), TensorInfo(correct_weight_shape, tensor_num_channel, correct_weight_dt), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(correct_bias_shape, tensor_num_channel, DataType::QSYMM16), TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(TensorShape(15U, 2U), tensor_num_channel, correct_bias_dt), TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(TensorShape(14U), tensor_num_channel, correct_bias_dt), TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), TensorInfo(correct_bias_shape, tensor_num_channel, correct_bias_dt), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(correct_output_shape, tensor_num_channel, correct_output_dt), TensorInfo(correct_output_shape, tensor_num_channel, correct_output_dt), TensorInfo(correct_output_shape, tensor_num_channel, correct_output_dt), TensorInfo(correct_output_shape, tensor_num_channel, correct_output_dt), TensorInfo(correct_output_shape, tensor_num_channel, correct_output_dt), TensorInfo(correct_output_shape, tensor_num_channel, correct_output_dt), TensorInfo(correct_output_shape, tensor_num_channel, correct_output_dt), TensorInfo(correct_output_shape, tensor_num_channel, correct_output_dt), TensorInfo(TensorShape(15, 3), tensor_num_channel, correct_output_dt), TensorInfo(correct_output_shape, tensor_num_channel, DataType::S32), })), input_info, weight_info, bias_info, output_info)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3c57370131786b1f37e040ffd06bf477',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::U8), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::F32), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(10U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U), 1, DataType::U8), }), framework::dataset::make(&quot;Start&quot;,{ 0.0f, 15.0f, 1500.0f, 100.0f, -15.0f, 0.2f, 2.0f, 10.0f, 10.0f })), framework::dataset::make(&quot;End&quot;,{ 100.0f, 15.0f, 2500.0f, -1000.0f, 15.0f, 10.0f, 10.0f, 100.0f, 100.0f })), framework::dataset::make(&quot;Step&quot;,{ 100.0f, 15.0f, 10.0f, 100.0f, -15.0f, 1.0f, 0.0f, 10.0f, 10.0f })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, true, })), output_info, start, end, step, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afcd44243823dd1dc2a570434b3ab3049',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(1U, 64U), 1, DataType::F16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::S16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 0U, 0U, 0U, static_cast&lt; unsigned int &gt;(TensorShape::num_max_dimensions), 0U, 0U })), framework::dataset::make(&quot;KeepDims&quot;, { true, true, true, true, true, false})), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, false })), input_info, output_info, axis, keep_dims, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a96fd1cf2f889deba0370f156da126bfa',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateNoPadding, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::Small4DShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;Axis&quot;, { 0, 1 })), framework::dataset::make(&quot;ReductionOperation&quot;, {ReductionOperation::SUM,})), KeepDims), shape, data_type, axis, op, keep_dims)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad5f537351eac7d53069515570e9f600f',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U), 1, DataType::U8), })), framework::dataset::make(&quot;AxisInfo&quot;, { TensorInfo(TensorShape(3U), 1, DataType::U8), TensorInfo(TensorShape(2U, 10U), 1, DataType::U32), TensorInfo(TensorShape(8U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true})), src_info, dst_info, axis_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a71312f987688bcde305a812d35b13dd3',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;, { TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(30U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(32U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;HiddenStateInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, true })), input_info, weights_info, recurrent_weights_info, bias_info, output_info, hidden_output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a53125733acb5d4157ebb4b2f191433b3',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 2U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), }), framework::dataset::make(&quot;RoisInfo&quot;, { TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F16), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 10U), 1, DataType::F32), TensorInfo(TensorShape(4, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F16), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 3U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false, false })), input_info, rois_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a39fbfb580459ec0c94be751d8e39f470',1,'arm_compute::test::validation::DATA_TEST_CASE(CheckNoPaddingInterpAREA, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::Medium4DShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::U8 })), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::AREA })), framework::dataset::make(&quot;SamplingPolicy&quot;, { SamplingPolicy::CENTER, SamplingPolicy::TOP_LEFT })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), shape, data_type, interpolation_policy, sampling_policy, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a122fa3e8a7b8eac7c61d7bbaf45194cf',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 0)), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 0)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 0)), })), framework::dataset::make(&quot;beta&quot;, { 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, })), framework::dataset::make(&quot;axis&quot;, { 0, 0, 0, 1, 0, -1, 2, -3, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true, true, false, false })), input_info, output_info, beta, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a56a6bcabf02d83c23b45c756e5803fdc',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection_max_logits, framework::DatasetMode::ALL, concat(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::QASYMM8, DataType::QASYMM8_SIGNED })), combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::QASYMM8, DataType::QASYMM8_SIGNED }))), cpu_ext, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1d823d27cc2b998174ad72eb9111dc7b',1,'arm_compute::test::validation::DATA_TEST_CASE(KernelSelection_logits, framework::DatasetMode::ALL, concat(concat(combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;NEON&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::QASYMM8, DataType::QASYMM8_SIGNED })), combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16 }))), combine(framework::dataset::make(&quot;CpuExt&quot;, std::string(&quot;SVE2&quot;)), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8, DataType::QASYMM8_SIGNED }))), cpu_ext, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac9164334617e4215da6fc222697414b2',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateStatic, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 8U, 8U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F16), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;BlockShape&quot;, { 2, 2, -2, 2 })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input_info, output_info, block_shape, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa592247e90b4ec742ec8d73842c391e1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::U8) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(1U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U), 1, DataType::U8)}, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(2U, 3U), 1, DataType::S32) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(7U, 5U, 3U, 8U, 2U), 1, DataType::S32), TensorInfo(TensorShape(7U, 5U, 3U, 8U, 2U), 1, DataType::S32)}, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::S32) }, }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(1U, 9U, 8U), 1, DataType::U8), TensorInfo(TensorShape(1U, 3U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::S32), TensorInfo(TensorShape(3U, 7U, 5U), 1, DataType::S32), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::U8), })), framework::dataset::make(&quot;Axis&quot;, { -3, 1, -4, -3, 1 })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a022965c9293c8d3cae7422bdadd5ecc7',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(20U, 13U), 1, DataType::U8), TensorInfo(TensorShape(20U, 16U), 1, DataType::U16), TensorInfo(TensorShape(20U, 16U), 1, DataType::U32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(31U, 20U), 1, DataType::U16), TensorInfo(TensorShape(16U, 20U), 1, DataType::U16), TensorInfo(TensorShape(16U, 20U), 1, DataType::U32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, true })), a_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5c9d222c8e5c1ef02fa9f4b343f0a976',1,'arm_compute::test::validation::DATA_TEST_CASE(AutoPadding, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;TensorShape&quot;, { TensorShape{}, TensorShape{ 10U }, TensorShape{ 10U, 10U }, TensorShape{ 10U, 10U, 10U }, TensorShape{ 10U, 10U, 10U, 10U }, TensorShape{ 10U, 10U, 10U, 10U, 10U }, TensorShape{ 10U, 10U, 10U, 10U, 10U, 10U }}), framework::dataset::make(&quot;PaddingSize&quot;, { PaddingSize{ 0, 0, 0, 0 }, PaddingSize{ 0, 36, 0, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }})), framework::dataset::make(&quot;Strides&quot;, { Strides{}, Strides{ 1U, 50U }, Strides{ 1U, 50U }, Strides{ 1U, 50U, 900U }, Strides{ 1U, 50U, 900U, 9000U }, Strides{ 1U, 50U, 900U, 9000U, 90000U }, Strides{ 1U, 50U, 900U, 9000U, 90000U, 900000U }})), framework::dataset::make(&quot;Offset&quot;, { 0U, 4U, 204U, 204U, 204U, 204U, 204U })), shape, auto_padding, strides, offset)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aff7b127bdccdb0be89b5f18bf4fbf777',1,'arm_compute::test::validation::DATA_TEST_CASE(Construction, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;TensorShape&quot;, { TensorShape{}, TensorShape{ 1U }, TensorShape{ 2U }, TensorShape{ 2U, 3U }, TensorShape{ 2U, 3U, 5U }, TensorShape{ 2U, 3U, 5U, 7U }, TensorShape{ 2U, 3U, 5U, 7U, 11U }, TensorShape{ 2U, 3U, 5U, 7U, 11U, 13U }}), framework::dataset::make(&quot;NumDimensions&quot;, { 0U, 1U, 1U, 2U, 3U, 4U, 5U, 6U })), framework::dataset::make(&quot;TotalSize&quot;, { 0U, 1U, 2U, 6U, 30U, 210U, 2310U, 30030U })), shape, num_dimensions, total_size)'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a27db011848222cd739c833cd57537632',1,'DATA_TEST_CASE(RoundHalfUp, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 2.f, 3.f, 3.f, -3.f, -3.f, -4.f, -4.f, -4.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a6ef92b04d435ab565a26eeebcdced806',1,'DATA_TEST_CASE(RoundHalfEven, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 2.f, 2.f, 3.f, -3.f, -4.f, -4.f, -4.f, -4.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a4eaacf0c251a42054ef98ad17828ea1a',1,'DATA_TEST_CASE(Index2Coord, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;Shape&quot;, { TensorShape{ 1U }, TensorShape{ 2U }, TensorShape{ 2U, 3U } }), framework::dataset::make(&quot;Index&quot;, { 0, 1, 2 })), framework::dataset::make(&quot;Coordinates&quot;, { Coordinates{ 0 }, Coordinates{ 1 }, Coordinates{ 0, 1 } })), shape, index, ref_coordinate):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a1168f71fb63650656eed1a480243762d',1,'DATA_TEST_CASE(RoundFloatToZero, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 1.f, 2.f, 2.f, -3.f, -3.f, -3.f, -4.f, -4.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a627a856fabfe1b44438ed3cf5b741482',1,'DATA_TEST_CASE(RoundFloatToNearestUp, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 2.f, 3.f, 3.f, -3.f, -4.f, -4.f, -4.f, -5.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a694e9cd4762973da6bfc01e10c9e5313',1,'DATA_TEST_CASE(Coord2Index, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;Shape&quot;, { TensorShape{ 1U }, TensorShape{ 2U }, TensorShape{ 2U, 3U } }), framework::dataset::make(&quot;Coordinates&quot;, { Coordinates{ 0 }, Coordinates{ 1 }, Coordinates{ 0, 1 } })), framework::dataset::make(&quot;Index&quot;, { 0, 1, 2 })), shape, coordinate, ref_index):&#160;Utils.cpp'],['../_window_iterator_8cpp.xhtml#acd2ef152b1743c15de3f67238d0eac43',1,'DATA_TEST_CASE(WholeWindow, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;Window&quot;, { create_window(Window::Dimension(0, 1)), create_window(Window::Dimension(1, 5, 2), Window::Dimension(3, 5)), create_window(Window::Dimension(4, 16, 4), Window::Dimension(3, 13, 5), Window::Dimension(1, 3, 2)) }), framework::dataset::make(&quot;Expected&quot;, { create_vector({ Coordinates(0, 0) }), create_vector({ Coordinates(1, 3), Coordinates(3, 3), Coordinates(1, 4), Coordinates(3, 4) }), create_vector({ Coordinates(4, 3, 1), Coordinates(8, 3, 1), Coordinates(12, 3, 1), Coordinates(4, 8, 1), Coordinates(8, 8, 1), Coordinates(12, 8, 1) }) })), window, expected):&#160;WindowIterator.cpp'],['../_window_iterator_8cpp.xhtml#a73168adf798e300ad06a0341c1c9bd59',1,'DATA_TEST_CASE(PartialWindow2D, framework::DatasetMode::ALL, zip(zip(zip(combine(framework::dataset::make(&quot;Window&quot;, create_window(Window::Dimension(4, 20, 4), Window::Dimension(3, 32, 5), Window::Dimension(1, 2, 1))), framework::dataset::make(&quot;Start&quot;, { 0, 1, 3, 2, 4 })), framework::dataset::make(&quot;End&quot;, { 0, 2, 5, 8, 7 })), framework::dataset::make(&quot;RowSize&quot;, { create_vector({ 4 }), create_vector({ 8, 8 }), create_vector({ 4, 8, 8 }), create_vector({ 8, 8, 16, 16, 16, 16, 4 }), create_vector({ 16, 16, 16, 16 }), })), framework::dataset::make(&quot;Expected&quot;, { create_vector({ Coordinates(4, 3, 1) }), create_vector({ Coordinates(8, 3, 1), Coordinates(12, 3, 1) }), create_vector({ Coordinates(16, 3, 1), Coordinates(4, 8, 1), Coordinates(8, 8, 1) }), create_vector({ Coordinates(12, 3, 1), Coordinates(16, 3, 1), Coordinates(4, 8, 1), Coordinates(8, 8, 1), Coordinates(12, 8, 1), Coordinates(16, 8, 1), Coordinates(4, 13, 1) }), create_vector({ Coordinates(4, 8, 1), Coordinates(8, 8, 1), Coordinates(12, 8, 1), Coordinates(16, 8, 1) }) })), window, start, end, expected_row_size, expected):&#160;WindowIterator.cpp']]],
  ['data_5ftest_5fcase_5fconstructor',['DATA_TEST_CASE_CONSTRUCTOR',['../tests_2framework_2_macros_8h.xhtml#adbd9bcfdb4c52d5acf73ce39c232b5c8',1,'Macros.h']]],
  ['data_5ftest_5fcase_5fimpl',['DATA_TEST_CASE_IMPL',['../tests_2framework_2_macros_8h.xhtml#adf3ec4a62a3f0d3e74ebd35d59ddd097',1,'Macros.h']]],
  ['data_5ftest_5fregistrar',['DATA_TEST_REGISTRAR',['../tests_2framework_2_macros_8h.xhtml#aa4df8c1af6041bc017bd9fb943d5e5d6',1,'Macros.h']]],
  ['data_5ftype',['data_type',['../struct_acl_tensor_descriptor.xhtml#aeb8b7e1875910e807e1e4e59bf089dfb',1,'AclTensorDescriptor::data_type()'],['../structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a6118865e7371b107bd5fb4dd4a9e99a3',1,'arm_compute::graph::TensorDescriptor::data_type()'],['../structarm__compute_1_1_c_l_g_e_m_m_kernel_selection_params.xhtml#a6118865e7371b107bd5fb4dd4a9e99a3',1,'arm_compute::CLGEMMKernelSelectionParams::data_type()'],['../structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml#a6118865e7371b107bd5fb4dd4a9e99a3',1,'arm_compute::cl_gemm::auto_heuristics::CommonQuery::data_type()'],['../structarm__compute_1_1mlgo_1_1_query.xhtml#a6118865e7371b107bd5fb4dd4a9e99a3',1,'arm_compute::mlgo::Query::data_type()'],['../structgemm__tuner_1_1_common_gemm_example_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9',1,'gemm_tuner::CommonGemmExampleParams::data_type()'],['../classgemm__tuner_1_1_common_gemm_example_options.xhtml#a53ba011184520b6e32eef8e53bc84e6f',1,'gemm_tuner::CommonGemmExampleOptions::data_type()'],['../structarm__compute_1_1utils_1_1_common_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9',1,'arm_compute::utils::CommonParams::data_type()'],['../classarm__compute_1_1utils_1_1_common_graph_validate_options.xhtml#a07e18432725b2e2d3c0a5625a8aea8a8',1,'arm_compute::utils::CommonGraphValidateOptions::data_type()'],['../structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9',1,'arm_compute::utils::CommonGraphParams::data_type()'],['../classarm__compute_1_1utils_1_1_common_graph_options.xhtml#a07e18432725b2e2d3c0a5625a8aea8a8',1,'arm_compute::utils::CommonGraphOptions::data_type()'],['../classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba',1,'arm_compute::ITensorInfo::data_type()'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::SubTensorInfo::data_type()'],['../classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::TensorInfo::data_type()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::CLAccessor::data_type()'],['../classarm__compute_1_1test_1_1_i_accessor.xhtml#a7cfb31af63202568efef5214acfbf3ba',1,'arm_compute::test::IAccessor::data_type()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::Accessor::data_type()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::SimpleTensor::data_type()'],['../classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::SimpleTensorAccessor::data_type()'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc',1,'arm_compute::test::validation::data_type()'],['../namespacearm__compute_1_1mlgo_1_1parser.xhtml#a950f4163dda9bddb0a028b1356811c44',1,'arm_compute::mlgo::parser::data_type()']]],
  ['data_5ftype_2edox',['data_type.dox',['../data__type_8dox.xhtml',1,'']]],
  ['data_5ftype_5ffrom_5fformat',['data_type_from_format',['../namespacearm__compute.xhtml#a59846ef5ca75cd81cdb7e8a1ce08f9db',1,'arm_compute']]],
  ['data_5ftype_5ffrom_5fname',['data_type_from_name',['../namespacearm__compute.xhtml#a64e6501d564e950c3d527fb6b1f36f28',1,'arm_compute']]],
  ['data_20type_20support',['Data Type Support',['../data_type_support.xhtml',1,'']]],
  ['datalayervisitor',['DataLayerVisitor',['../classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml',1,'DataLayerVisitor'],['../classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#ab0d806bdc6aaacefe3952bf9a888e72c',1,'arm_compute::graph::DataLayerVisitor::DataLayerVisitor()']]],
  ['datalayervisitor_2ecpp',['DataLayerVisitor.cpp',['../_data_layer_visitor_8cpp.xhtml',1,'']]],
  ['datalayervisitor_2eh',['DataLayerVisitor.h',['../_data_layer_visitor_8h.xhtml',1,'']]],
  ['datalayout',['DataLayout',['../namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0',1,'arm_compute']]],
  ['datalayoutdimension',['DataLayoutDimension',['../namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02',1,'arm_compute']]],
  ['dataset',['Dataset',['../classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml',1,'Dataset'],['../classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml#a6c77d69d08daa8c99952d9e40de8d086',1,'arm_compute::test::framework::dataset::Dataset::Dataset()']]],
  ['dataset_2eh',['Dataset.h',['../_dataset_8h.xhtml',1,'']]],
  ['dataset_5fmode_5ffrom_5fname',['dataset_mode_from_name',['../namespacearm__compute_1_1test_1_1framework.xhtml#a1afd1c498fb3a1d2315e4c6d87d15754',1,'arm_compute::test::framework']]],
  ['datasetmode',['DatasetMode',['../namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf',1,'arm_compute::test::framework']]],
  ['datasetmodes_2ecpp',['DatasetModes.cpp',['../_dataset_modes_8cpp.xhtml',1,'']]],
  ['datasetmodes_2eh',['DatasetModes.h',['../_dataset_modes_8h.xhtml',1,'']]],
  ['datasets_2eh',['Datasets.h',['../_datasets_8h.xhtml',1,'']]],
  ['datatestcase',['DataTestCase',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28combine_28combine_28combine_28combine_28combine_28datasets_3a_3asmallimageshapes_28_29_2c_20framework_3a_3adataset_3a_3amake_28_22datatype_22_2c_20_7b_20datatype_3a_3af16_2c_20datatype_3a_3af32_20_7d_29_29_2c_20framework_3a_3adataset_3a_3amake_28_22datalayout_22_2c_20_7b_20datalayout_3a_3anchw_20_7d_29_29_2c_20interpolation_5ftypes_29_2c_20datasets_3a_3abordermodes_28_29_29_2c_20datasets_3a_3asamplingpolicies_28_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(combine(combine(combine(combine(combine(datasets::SmallImageShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), interpolation_types), datasets::BorderModes()), datasets::SamplingPolicies()))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcasefactory',['DataTestCaseFactory',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml',1,'DataTestCaseFactory&lt; T, D &gt;'],['../classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml#aacdf355fbfb7579c36e50c757809c148',1,'arm_compute::test::framework::DataTestCaseFactory::DataTestCaseFactory()']]],
  ['datatype',['DataType',['../namespaceacl.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6',1,'acl::DataType()'],['../namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6',1,'arm_compute::DataType()']]],
  ['datatypedatalayoutisaselectordata',['DataTypeDataLayoutISASelectorData',['../structarm__compute_1_1cpu_1_1kernels_1_1_data_type_data_layout_i_s_a_selector_data.xhtml',1,'arm_compute::cpu::kernels']]],
  ['datatypedatalayoutselectorptr',['DataTypeDataLayoutSelectorPtr',['../namespacearm__compute_1_1cpu_1_1kernels.xhtml#a1b21150c829c630e35e908b4fcbb76fd',1,'arm_compute::cpu::kernels']]],
  ['datatypeisaselectordata',['DataTypeISASelectorData',['../structarm__compute_1_1cpu_1_1kernels_1_1_data_type_i_s_a_selector_data.xhtml',1,'arm_compute::cpu::kernels']]],
  ['datatypeisaselectorptr',['DataTypeISASelectorPtr',['../namespacearm__compute_1_1cpu_1_1kernels.xhtml#aaaf57088b1cced4263da533eafa10034',1,'arm_compute::cpu::kernels']]],
  ['dataview',['DataView',['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml',1,'ClAuxTensorData::DataView'],['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml#a42eb163226d8647b5f975abdd777e249',1,'arm_compute::experimental::dynamic_fusion::ClAuxTensorData::DataView::DataView()=default'],['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml#ad412898402d8eb81b004c67a1d4734bc',1,'arm_compute::experimental::dynamic_fusion::ClAuxTensorData::DataView::DataView(CLTensor *tensor, const TensorInfo &amp;tensor_info, const AuxMemoryInfo &amp;memory_info)'],['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml#a3672334cd2f59df301d8d8b0ecb5ec54',1,'arm_compute::experimental::dynamic_fusion::ClAuxTensorData::DataView::DataView(const DataView &amp;other)=default'],['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml#aaa85587743bc54ecedc59642435bef54',1,'arm_compute::experimental::dynamic_fusion::ClAuxTensorData::DataView::DataView(DataView &amp;&amp;other)=default']]],
  ['datedecorator',['DateDecorator',['../classarm__compute_1_1logging_1_1_date_decorator.xhtml',1,'arm_compute::logging']]],
  ['ddk_5fversion',['ddk_version',['../structarm__compute_1_1_c_l_device_options.xhtml#ae19afa6eae26622a0068daa092b25f6a',1,'arm_compute::CLDeviceOptions']]],
  ['debug',['DEBUG',['../namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15',1,'arm_compute::test::framework']]],
  ['dec_5fref',['dec_ref',['../classarm__compute_1_1_i_context.xhtml#a15c32763f3230f7ac03c87b73b03d34b',1,'arm_compute::IContext']]],
  ['declare_5factivation_5fkernel',['DECLARE_ACTIVATION_KERNEL',['../cpu_2kernels_2activation_2list_8h.xhtml#a101bb9cae17942b21d2080f965d2c45f',1,'list.h']]],
  ['declare_5fadd_5fkernel',['DECLARE_ADD_KERNEL',['../cpu_2kernels_2add_2list_8h.xhtml#a579f0acd2e0f4e28d5d4c4a65e870ab6',1,'list.h']]],
  ['declare_5fbatch_5fnormalization_5fkernel',['DECLARE_BATCH_NORMALIZATION_KERNEL',['../core_2_n_e_o_n_2kernels_2batchnormalization_2impl_2list_8h.xhtml#a2e3ce51fd21989589b762adcf7e19911',1,'list.h']]],
  ['declare_5fboundingboxtranform_5fkernel',['DECLARE_BOUNDINGBOXTRANFORM_KERNEL',['../cpu_2kernels_2boundingboxtransform_2list_8h.xhtml#ab2ec0bb1202f57c27736067d666ac217',1,'list.h']]],
  ['declare_5fcast_5fkernel',['DECLARE_CAST_KERNEL',['../cpu_2kernels_2cast_2list_8h.xhtml#a4a1ea5a91169cebe73dc1519400bfeb8',1,'list.h']]],
  ['declare_5fcopmp_5felemetwise_5fbinary_5fkernel',['DECLARE_COPMP_ELEMETWISE_BINARY_KERNEL',['../cpu_2kernels_2elementwise__binary_2list_8h.xhtml#a203e70ca02319f5a11035e9a6476c792',1,'list.h']]],
  ['declare_5fcrop_5fkernel',['DECLARE_CROP_KERNEL',['../cpu_2kernels_2crop_2list_8h.xhtml#aa56ec5ccf4521a1d20f4029f0541c035',1,'list.h']]],
  ['declare_5fdepthwiseconv2d_5fkernel',['DECLARE_DEPTHWISECONV2D_KERNEL',['../cpu_2kernels_2depthwiseconv2d_2list_8h.xhtml#a62e94c94c82ce957a6a5fed6903b4468',1,'list.h']]],
  ['declare_5fdirect_5fconv2d_5fkernel',['DECLARE_DIRECT_CONV2D_KERNEL',['../cpu_2kernels_2directconv2d_2list_8h.xhtml#a9ef8b9772df98a5bb6423e66ca21dc3a',1,'list.h']]],
  ['declare_5felemetwise_5fbinary_5fkernel',['DECLARE_ELEMETWISE_BINARY_KERNEL',['../cpu_2kernels_2elementwise__binary_2list_8h.xhtml#a686cef988364af17fa598bfebb2b5906',1,'list.h']]],
  ['declare_5felemetwise_5funary_5fkernel',['DECLARE_ELEMETWISE_UNARY_KERNEL',['../cpu_2kernels_2elementwise__unary_2list_8h.xhtml#a1ef04d7e008e54ca7ff888917d243020',1,'list.h']]],
  ['declare_5ffloor_5fkernel',['DECLARE_FLOOR_KERNEL',['../cpu_2kernels_2floor_2list_8h.xhtml#aa88f32c442a6b41a3446ee72ec5a5900',1,'list.h']]],
  ['declare_5ffunction_5fptr',['DECLARE_FUNCTION_PTR',['../_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c',1,'OpenCL.h']]],
  ['declare_5ffuse_5fbatch_5fnormalize_5fconv_5fkernel',['DECLARE_FUSE_BATCH_NORMALIZE_CONV_KERNEL',['../cpu_2kernels_2fuse__batch__normalization_2list_8h.xhtml#acccc4a5f7daa0fe4c5c2845c100e9da6',1,'list.h']]],
  ['declare_5ffuse_5fbatch_5fnormalize_5fdwc_5fnchw_5fconv_5fkernel',['DECLARE_FUSE_BATCH_NORMALIZE_DWC_NCHW_CONV_KERNEL',['../cpu_2kernels_2fuse__batch__normalization_2list_8h.xhtml#a7cbd3c1f9b875975cc2d2c5a8e4f2fc8',1,'list.h']]],
  ['declare_5ffuse_5fbatch_5fnormalize_5fdwc_5fnhwc_5fconv_5fkernel',['DECLARE_FUSE_BATCH_NORMALIZE_DWC_NHWC_CONV_KERNEL',['../cpu_2kernels_2fuse__batch__normalization_2list_8h.xhtml#a45c5195bb3be7be1968985f97cdda101',1,'list.h']]],
  ['declare_5fgemmmatrixadd_5fkernel',['DECLARE_GEMMMATRIXADD_KERNEL',['../cpu_2kernels_2gemm__matrix__add_2list_8h.xhtml#a60678bc7aabe099b35439a4243455862',1,'list.h']]],
  ['declare_5fgemmmatrixmul_5fkernel',['DECLARE_GEMMMATRIXMUL_KERNEL',['../cpu_2kernels_2gemm__matrix__mul_2list_8h.xhtml#a40debc8263964e0b1ba465bcbe8a8825',1,'list.h']]],
  ['declare_5finstancenorm_5fkernel',['DECLARE_INSTANCENORM_KERNEL',['../cpu_2kernels_2instancenorm_2list_8h.xhtml#aeb5fad60f641cbd17e6c526522f1cabb',1,'list.h']]],
  ['declare_5fl2normlayer_5fkernel',['DECLARE_L2NORMLAYER_KERNEL',['../cpu_2kernels_2l2normlayer_2list_8h.xhtml#a5dc37ba6a2009a330f8501064f8e0016',1,'list.h']]],
  ['declare_5flogits_5fkernel',['DECLARE_LOGITS_KERNEL',['../cpu_2kernels_2softmax_2list_8h.xhtml#a613d45a35f863943f95f40e9b187ee58',1,'list.h']]],
  ['declare_5fmaxunpool_5fkernel',['DECLARE_MAXUNPOOL_KERNEL',['../cpu_2kernels_2maxunpool_2list_8h.xhtml#a14b95b34ec54986d35dc8fd22b3a50a6',1,'list.h']]],
  ['declare_5fmeanstddevnorm_5fkernel',['DECLARE_MEANSTDDEVNORM_KERNEL',['../cpu_2kernels_2meanstddevnorm_2list_8h.xhtml#abdf9bfb4a53322487174d1d18f39643b',1,'list.h']]],
  ['declare_5fnegenerateproposalslayerkernel_5fkernel',['DECLARE_NEGENERATEPROPOSALSLAYERKERNEL_KERNEL',['../cpu_2kernels_2genproposals_2list_8h.xhtml#a61b3fcfe423e3263d13d4a84258ef8a5',1,'list.h']]],
  ['declare_5fpooling_5fkernel',['DECLARE_POOLING_KERNEL',['../cpu_2kernels_2pool2d_2neon_2list_8h.xhtml#a64588bdf9212cb16469e8cdaea28d63e',1,'DECLARE_POOLING_KERNEL():&#160;list.h'],['../cpu_2kernels_2pool3d_2list_8h.xhtml#a64588bdf9212cb16469e8cdaea28d63e',1,'DECLARE_POOLING_KERNEL():&#160;list.h']]],
  ['declare_5frange_5fkernel',['DECLARE_RANGE_KERNEL',['../cpu_2kernels_2range_2list_8h.xhtml#aaf0889d59f2f0e834add155e6c58cb70',1,'list.h']]],
  ['declare_5froialign_5fkernel',['DECLARE_ROIALIGN_KERNEL',['../cpu_2kernels_2roialign_2list_8h.xhtml#a6dfe3df143ecb1f4282b10dd988bc113',1,'list.h']]],
  ['declare_5fscale_5fkernel',['DECLARE_SCALE_KERNEL',['../cpu_2kernels_2scale_2neon_2list_8h.xhtml#a7b7e4d4bab725fddfc0b8bc110efd60e',1,'DECLARE_SCALE_KERNEL():&#160;list.h'],['../cpu_2kernels_2scale_2sve_2list_8h.xhtml#a7b7e4d4bab725fddfc0b8bc110efd60e',1,'DECLARE_SCALE_KERNEL():&#160;list.h']]],
  ['declare_5fselect_5fkernel',['DECLARE_SELECT_KERNEL',['../cpu_2kernels_2select_2list_8h.xhtml#a6cd4451e47275b9cc30776c216a32a72',1,'list.h']]],
  ['declare_5fsoftmax_5fkernel',['DECLARE_SOFTMAX_KERNEL',['../cpu_2kernels_2softmax_2list_8h.xhtml#aa0e97f7d58bbe3440320c48a79d7d188',1,'list.h']]],
  ['declare_5fsub_5fkernel',['DECLARE_SUB_KERNEL',['../cpu_2kernels_2sub_2neon_2list_8h.xhtml#a6af0191b1e418aa5436ab5ff596db699',1,'list.h']]],
  ['declare_5fvariable',['declare_variable',['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#a084f68178aeb8d5a3f3155ff2dc52dae',1,'arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable']]],
  ['declare_5fvariables',['declare_variables',['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a24095ca4db22e95bd86cd88a8ff28615',1,'arm_compute::experimental::dynamic_fusion::ClTemplateDirectConv2d::declare_variables()'],['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_store.xhtml#a24095ca4db22e95bd86cd88a8ff28615',1,'arm_compute::experimental::dynamic_fusion::ClTemplateStore::declare_variables()'],['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ab4ca142dbeec40d6a4ab2a0b14b6f72f',1,'arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::declare_variables()']]],
  ['decompose_5fstages',['decompose_stages',['../namespacearm__compute_1_1helpers_1_1fft.xhtml#a359fcf05844c0a2f1aed6e4386a86aee',1,'arm_compute::helpers::fft']]],
  ['deconvolution_5finfo',['deconvolution_info',['../classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#ae304796bd723ec2b2d50b88236498bd1',1,'arm_compute::graph::DeconvolutionLayerNode']]],
  ['deconvolution_5flayer',['deconvolution_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a691998a1f1368aa5901a853369f643cf',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; TW &gt; &amp;weights, const SimpleTensor&lt; TB &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, QuantizationInfo out_qinfo=QuantizationInfo())'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a9eb944011e756d3d1f10775bf295cb8f',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; uint8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, QuantizationInfo out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a468407a578bed1733c77affd2584c954',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; int8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, QuantizationInfo out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a12d950a5b0a77bae3494d7afa7cc8b63',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; int8_t &gt; &amp;src, const SimpleTensor&lt; int8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, QuantizationInfo out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a4cc98103ee263a7712b630225c2a1c3c',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; float &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;weights, const SimpleTensor&lt; float &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, QuantizationInfo out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a2e6c6282b814592377e2505846d56e1d',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; half &gt; &amp;src, const SimpleTensor&lt; half &gt; &amp;weights, const SimpleTensor&lt; half &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, QuantizationInfo out_quant_info)']]],
  ['deconvolution_5flayer_2ecl',['deconvolution_layer.cl',['../deconvolution__layer_8cl.xhtml',1,'']]],
  ['deconvolution_5foutput_5fdimensions',['deconvolution_output_dimensions',['../namespacearm__compute.xhtml#a1a0b7ff66a946db6252d2a4c40c04fa7',1,'arm_compute']]],
  ['deconvolution_5fupsample',['deconvolution_upsample',['../deconvolution__layer_8cl.xhtml#ad247ccd3e1ca89af642c2b453db71dce',1,'deconvolution_layer.cl']]],
  ['deconvolutionlayer',['DeconvolutionLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_deconvolution_layer.xhtml',1,'DeconvolutionLayer'],['../classarm__compute_1_1graph_1_1frontend_1_1_deconvolution_layer.xhtml#a98c30ba91fe106a656f931077135fa1e',1,'arm_compute::graph::frontend::DeconvolutionLayer::DeconvolutionLayer()'],['../namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ac814c26a7c5317e2a2f58fe0e5a0d410',1,'arm_compute::graph::DeconvolutionLayer()']]],
  ['deconvolutionlayer_2ecpp',['DeconvolutionLayer.cpp',['../_c_l_2_deconvolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_deconvolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_deconvolution_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['deconvolutionlayer_2eh',['DeconvolutionLayer.h',['../_deconvolution_layer_8h.xhtml',1,'']]],
  ['deconvolutionlayerdescriptor',['DeconvolutionLayerDescriptor',['../structarm__compute_1_1graph_1_1descriptors_1_1_deconvolution_layer_descriptor.xhtml',1,'DeconvolutionLayerDescriptor'],['../structarm__compute_1_1graph_1_1descriptors_1_1_deconvolution_layer_descriptor.xhtml#ae5354aee14c93eb1b5e64ae252cb7a22',1,'arm_compute::graph::descriptors::DeconvolutionLayerDescriptor::DeconvolutionLayerDescriptor()']]],
  ['deconvolutionlayernode',['DeconvolutionLayerNode',['../classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml',1,'DeconvolutionLayerNode'],['../classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#a0167ec31c84b021c368541d4f2cfff2e',1,'arm_compute::graph::DeconvolutionLayerNode::DeconvolutionLayerNode()']]],
  ['deconvolutionlayernode_2ecpp',['DeconvolutionLayerNode.cpp',['../_deconvolution_layer_node_8cpp.xhtml',1,'']]],
  ['deconvolutionlayernode_2eh',['DeconvolutionLayerNode.h',['../_deconvolution_layer_node_8h.xhtml',1,'']]],
  ['deconvolutionmethod',['DeconvolutionMethod',['../namespacearm__compute.xhtml#a6f66ec167e002c7c0549ff6c8a8939ad',1,'arm_compute']]],
  ['decorate',['decorate',['../classarm__compute_1_1logging_1_1_i_decorator.xhtml#af7e99677086f647b50a1b4e4248f78f6',1,'arm_compute::logging::IDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_string_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::StringDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_date_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::DateDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_thread_id_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::ThreadIdDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_log_level_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::LogLevelDecorator::decorate()']]],
  ['decrease_5frefcount',['decrease_refcount',['../classarm__compute_1_1_i_transform_weights.xhtml#ab360283eef792af17ef4bb54fdf112e0',1,'arm_compute::ITransformWeights']]],
  ['deep_5funique_5fptr',['deep_unique_ptr',['../classarm__compute_1_1utils_1_1memory_1_1deep__unique__ptr.xhtml',1,'deep_unique_ptr&lt; Base &gt;'],['../classarm__compute_1_1utils_1_1memory_1_1deep__unique__ptr.xhtml#a2d9fa4ea2bb82870f30269acb158523f',1,'arm_compute::utils::memory::deep_unique_ptr::deep_unique_ptr(std::nullptr_t val=nullptr) noexcept'],['../classarm__compute_1_1utils_1_1memory_1_1deep__unique__ptr.xhtml#ae58d8465d2b804da4fb9e750e3947a38',1,'arm_compute::utils::memory::deep_unique_ptr::deep_unique_ptr(Derived *value, const CopyFuncDerived &amp;copy) noexcept'],['../classarm__compute_1_1utils_1_1memory_1_1deep__unique__ptr.xhtml#afca2b75d4d718e3f68845a383baaa551',1,'arm_compute::utils::memory::deep_unique_ptr::deep_unique_ptr(const deep_unique_ptr&lt; Base &gt; &amp;ptr)'],['../classarm__compute_1_1utils_1_1memory_1_1deep__unique__ptr.xhtml#ac841b53639b3e786a8ca6adf5a0f2380',1,'arm_compute::utils::memory::deep_unique_ptr::deep_unique_ptr(deep_unique_ptr&lt; Base &gt; &amp;&amp;ptr)=default']]],
  ['deepcopy_2eh',['DeepCopy.h',['../_deep_copy_8h.xhtml',1,'']]],
  ['default',['Default',['../structarm__compute_1_1_i_o_format_info.xhtml#a36c28b28da4e04d698d6b598fb1eaca6a7a1920d61156abc05a60135aefe8bc67',1,'arm_compute::IOFormatInfo::Default()'],['../namespace_gemm_tuner.xhtml#affb1327b18bf08a379d19eef89cf1ed1',1,'GemmTuner.default()'],['../namespacecaffe__mnist__image__extractor.xhtml#affb1327b18bf08a379d19eef89cf1ed1',1,'caffe_mnist_image_extractor.default()'],['../namespacetf__frozen__model__extractor.xhtml#affb1327b18bf08a379d19eef89cf1ed1',1,'tf_frozen_model_extractor.default()'],['../namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67',1,'arm_compute::graph::Default()'],['../namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa7a1920d61156abc05a60135aefe8bc67',1,'arm_compute::graph::Default()'],['../namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a5b39c8b553c821e7cddc6da64b5bd2ee',1,'arm_gemm::DEFAULT()']]],
  ['default_5fborder_5fmode',['default_border_mode',['../namespacearm__compute_1_1test_1_1validation.xhtml#ace38efb396a691943a75245a5cf8178d',1,'arm_compute::test::validation']]],
  ['default_5fdata_5flayout',['default_data_layout',['../namespacearm__compute_1_1test_1_1validation.xhtml#a948c5ab946718c1c6b7f2dc71780ddea',1,'arm_compute::test::validation']]],
  ['default_5fdata_5ftype',['default_data_type',['../namespacearm__compute_1_1test_1_1validation.xhtml#a4add26e73a50af3a831d2b183d14d81c',1,'arm_compute::test::validation']]],
  ['default_5finit',['default_init',['../classarm__compute_1_1_c_l_scheduler.xhtml#a56d8f451f6b30093a49f1b4978681b07',1,'arm_compute::CLScheduler']]],
  ['default_5finit_5fwith_5fcontext',['default_init_with_context',['../classarm__compute_1_1_c_l_scheduler.xhtml#ab74ade35e03d97dc260789e541a157ef',1,'arm_compute::CLScheduler']]],
  ['default_5finput_5fshape',['default_input_shape',['../namespacearm__compute_1_1test_1_1validation.xhtml#a40b0a0f162f7288154d5e526ef9159cf',1,'arm_compute::test::validation']]],
  ['default_5finterpolation_5fpolicy',['default_interpolation_policy',['../namespacearm__compute_1_1test_1_1validation.xhtml#aff76c86e2ae24c334170579ae37b7958',1,'arm_compute::test::validation']]],
  ['default_5fmws',['default_mws',['../classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6dda2ca87714e265e1521607c2fa7d0',1,'arm_compute::ICPPKernel']]],
  ['default_5fndrange',['default_ndrange',['../classarm__compute_1_1_c_l_compile_context.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8',1,'arm_compute::CLCompileContext::default_ndrange()'],['../classarm__compute_1_1_c_l_kernel_library.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8',1,'arm_compute::CLKernelLibrary::default_ndrange()']]],
  ['default_5foutput_5fshape',['default_output_shape',['../namespacearm__compute_1_1test_1_1validation.xhtml#af79fa3c5b1f569fa9c60a758f86436e2',1,'arm_compute::test::validation']]],
  ['default_5freinit',['default_reinit',['../classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1',1,'arm_compute::CLScheduler']]],
  ['default_5fsampling_5fpolicy',['default_sampling_policy',['../namespacearm__compute_1_1test_1_1validation.xhtml#aeffd5a0d37b930ce0676d973ae2046e1',1,'arm_compute::test::validation']]],
  ['default_5fuse_5fpadding',['default_use_padding',['../namespacearm__compute_1_1test_1_1validation.xhtml#a4b5c30271a9322c4e5d0cac5f3f586de',1,'arm_compute::test::validation']]],
  ['default_5fvalidate',['DEFAULT_VALIDATE',['../_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#aafb2ac305c1cfb580f29d538687f1fb5',1,'PixelWiseMultiplication.cpp']]],
  ['default_5fvisit',['default_visit',['../classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a7ae346d50c25d5008291185396e5c54e',1,'arm_compute::graph::DataLayerVisitor::default_visit()'],['../classarm__compute_1_1graph_1_1_default_node_visitor.xhtml#a5f7336fecd376c56e48449a647a6d552',1,'arm_compute::graph::DefaultNodeVisitor::default_visit()'],['../classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a7ae346d50c25d5008291185396e5c54e',1,'arm_compute::graph::DotGraphVisitor::default_visit()']]],
  ['defaultlwsheuristics_2ecpp',['DefaultLWSHeuristics.cpp',['../_default_l_w_s_heuristics_8cpp.xhtml',1,'']]],
  ['defaultlwsheuristics_2eh',['DefaultLWSHeuristics.h',['../_default_l_w_s_heuristics_8h.xhtml',1,'']]],
  ['defaultnodevisitor',['DefaultNodeVisitor',['../classarm__compute_1_1graph_1_1_default_node_visitor.xhtml',1,'arm_compute::graph']]],
  ['defaultoutputstage',['DefaultOutputStage',['../structarm__conv_1_1depthwise_1_1_default_output_stage.xhtml',1,'arm_conv::depthwise']]],
  ['defaultoutputstage_3c_20int8_5ft_20_3e',['DefaultOutputStage&lt; int8_t &gt;',['../structarm__conv_1_1depthwise_1_1_default_output_stage_3_01int8__t_01_4.xhtml',1,'arm_conv::depthwise']]],
  ['defaultoutputstage_3c_20uint8_5ft_20_3e',['DefaultOutputStage&lt; uint8_t &gt;',['../structarm__conv_1_1depthwise_1_1_default_output_stage_3_01uint8__t_01_4.xhtml',1,'arm_conv::depthwise']]],
  ['defaulttaccum',['DefaultTAccum',['../structarm__conv_1_1depthwise_1_1_default_t_accum.xhtml',1,'arm_conv::depthwise']]],
  ['defaulttaccum_3c_20int8_5ft_20_3e',['DefaultTAccum&lt; int8_t &gt;',['../structarm__conv_1_1depthwise_1_1_default_t_accum_3_01int8__t_01_4.xhtml',1,'arm_conv::depthwise']]],
  ['defaulttaccum_3c_20uint8_5ft_20_3e',['DefaultTAccum&lt; uint8_t &gt;',['../structarm__conv_1_1depthwise_1_1_default_t_accum_3_01uint8__t_01_4.xhtml',1,'arm_conv::depthwise']]],
  ['define_5fkernel',['DEFINE_KERNEL',['../comparisons_8cl.xhtml#ae9c11d005e6e6db7e1a736f07ed32bd7',1,'comparisons.cl']]],
  ['define_5fkernel_5fquantized',['DEFINE_KERNEL_QUANTIZED',['../comparisons_8cl.xhtml#a8ed8f939def9689f1ecfe79740f5fd2f',1,'comparisons.cl']]],
  ['define_5fkernel_5fquantized_5fstr',['DEFINE_KERNEL_QUANTIZED_STR',['../comparisons_8cl.xhtml#ac3bebd1fe5a5382f50c4b15d2d551b70',1,'comparisons.cl']]],
  ['define_5fkernel_5fstr',['DEFINE_KERNEL_STR',['../comparisons_8cl.xhtml#a09a9348f4f03ddf2d08ae98bb8d0418b',1,'comparisons.cl']]],
  ['delta',['delta',['../structarm__compute_1_1cpu_1_1_act_fp_impl_params.xhtml#a1ee4a05b54419bfadd66ee351d05812e',1,'arm_compute::cpu::ActFpImplParams']]],
  ['delta_5fbilinear',['delta_bilinear',['../namespacearm__compute_1_1scale__helpers.xhtml#aeb969d3b0e5ceb8597c39b708f0df6e8',1,'arm_compute::scale_helpers']]],
  ['delta_5fbilinear_5fc1_5fquantized',['delta_bilinear_c1_quantized',['../namespacearm__compute_1_1scale__helpers.xhtml#a808177a93b7ebfd3a999f16c5ff08111',1,'arm_compute::scale_helpers::delta_bilinear_c1_quantized(const uint8_t *pixel_ptr, size_t stride, float dx, float dy, UniformQuantizationInfo iq_info, UniformQuantizationInfo oq_info)'],['../namespacearm__compute_1_1scale__helpers.xhtml#a853a7e5acb69871859a9e087ac192a84',1,'arm_compute::scale_helpers::delta_bilinear_c1_quantized(const int8_t *pixel_ptr, size_t stride, float dx, float dy, UniformQuantizationInfo iq_info, UniformQuantizationInfo oq_info)']]],
  ['dependency',['Dependency',['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a86289b5f51647fbb77a76d05a63a6b7e',1,'arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation']]],
  ['dependencygraph',['DependencyGraph',['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml',1,'DependencyGraph'],['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a62293bb5739ed8756db079365187f720',1,'arm_compute::experimental::dynamic_fusion::DependencyGraph::DependencyGraph()=default'],['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a27e92839ccf8fcde3d505b69ff2fe68d',1,'arm_compute::experimental::dynamic_fusion::DependencyGraph::DependencyGraph(const std::vector&lt; Id &gt; &amp;imported_tensors)'],['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#abc209c5ad250e66e117dbafc74e7240d',1,'arm_compute::experimental::dynamic_fusion::DependencyGraph::DependencyGraph(const AdjList &amp;adj_src_tensors, const AdjList &amp;adj_dst_tensors, const AdjList &amp;adj_src_ops, const AdjList &amp;adj_dst_ops, std::map&lt; Id, Id &gt; merge_points={})'],['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a62293bb5739ed8756db079365187f720',1,'arm_compute::experimental::dynamic_fusion::DependencyGraph::DependencyGraph()=default']]],
  ['dependencygraph_2ecpp',['DependencyGraph.cpp',['../src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp.xhtml',1,'(Global Namespace)'],['../tests_2validation_2_c_l_2_u_n_i_t_2dynamic__fusion_2_dependency_graph_8cpp.xhtml',1,'(Global Namespace)']]],
  ['dependencygraph_2eh',['DependencyGraph.h',['../arm__compute_2core_2experimental_2_dependency_graph_8h.xhtml',1,'(Global Namespace)'],['../src_2dynamic__fusion_2sketch_2utils_2_dependency_graph_8h.xhtml',1,'(Global Namespace)']]],
  ['depth',['depth',['../classarm__compute_1_1_size3_d.xhtml#a820c167ceaaa9759b0ca2695d22db55c',1,'arm_compute::Size3D::depth()'],['../namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02aaa1780b4fcce2d5d9af13dc25386d111',1,'arm_compute::DEPTH()']]],
  ['depth_5fconvert',['depth_convert',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a742cdbdf3c1db76c9a189f1bcd745579',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; T1 &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a97ffa19c49dbe0b8d0e47b0ab15c51dd',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; uint8_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acad5a5cf179151895a976da050f213f4',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; int8_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ae8d5666de9f1ea545436d8dd3dac7b8a',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; uint16_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a968f4da89a68d28ad39d8e39d8d19f93',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; int16_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6b297a6ebf043fe0f8b2ad99a3d12062',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; uint32_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a2790b7ea17fe89ea8befa5a0c657f4ae',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; int32_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac1bf3510d884de3461b9024f798a11f2',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; bfloat16 &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac0a3b5445ea9e2835f0c0321a0afe9b1',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; half &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ae935ed88362563d0b974dc3fc11d69e8',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; float &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)']]],
  ['depth_5fconvolution_5fmethod',['depth_convolution_method',['../structarm__compute_1_1utils_1_1_example_params.xhtml#acf9c4d06fdffc57621c91a2755f678ab',1,'arm_compute::utils::ExampleParams']]],
  ['depth_5fdim',['depth_dim',['../_conv3_d_8cpp.xhtml#aac145e44968aa3f4c5c8ee8f27ec6baf',1,'Conv3D.cpp']]],
  ['depth_5fmultiplier',['depth_multiplier',['../structarm__compute_1_1_convolution_info.xhtml#adccaa3ddba466fa0857ec3c9f33a9db4',1,'arm_compute::ConvolutionInfo::depth_multiplier()'],['../structarm__compute_1_1utils_1_1_convolution_params.xhtml#ab65969d39b883173d7d0801893d51bc7',1,'arm_compute::utils::ConvolutionParams::depth_multiplier()'],['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a88e38a50a2e964b19521fe8f2e9a144f',1,'arm_compute::graph::DepthwiseConvolutionLayerNode::depth_multiplier()'],['../classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml#ac8cef0874f04203401b5d7f5a6fa2a34',1,'arm_compute::graph::FusedDepthwiseConvolutionBatchNormalizationNode::depth_multiplier()']]],
  ['depth_5foutput_5fgemm3d',['depth_output_gemm3d',['../structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a370d5ff7251d8d974c634c9ed0dde094',1,'arm_compute::GEMMKernelInfo::depth_output_gemm3d()'],['../structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a85c61a83d182e1aab4f2176250934857',1,'arm_compute::cpu::AsmGemmInfo::depth_output_gemm3d()'],['../classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#abbd888f118c2209bf7578eb4f8942a07',1,'arm_compute::GEMMReshapeInfo::depth_output_gemm3d()'],['../classarm__compute_1_1_g_e_m_m_info.xhtml#abbd888f118c2209bf7578eb4f8942a07',1,'arm_compute::GEMMInfo::depth_output_gemm3d()']]],
  ['depth_5fto_5fspace',['depth_to_space',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac5ebcd0b7af3ed4028f686bf7a4ab814',1,'arm_compute::test::validation::reference::depth_to_space(const SimpleTensor&lt; T &gt; &amp;src, const TensorShape &amp;dst_shape, int32_t block_shape)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac911b1992900602137e790cc89ddc8ac',1,'arm_compute::test::validation::reference::depth_to_space(const SimpleTensor&lt; float &gt; &amp;src, const TensorShape &amp;dst_shape, int32_t block_shape)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ab36b4f1c7136e731b56bcea1ba1f6674',1,'arm_compute::test::validation::reference::depth_to_space(const SimpleTensor&lt; half &gt; &amp;src, const TensorShape &amp;dst_shape, int32_t block_shape)']]],
  ['depth_5fto_5fspace_2ecl',['depth_to_space.cl',['../nchw_2depth__to__space_8cl.xhtml',1,'(Global Namespace)'],['../nhwc_2depth__to__space_8cl.xhtml',1,'(Global Namespace)']]],
  ['depthconcatenate_5flayer',['depthconcatenate_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a4e15b670980db455ad07397b2c34b610',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; T &gt;&gt; &amp;srcs, SimpleTensor&lt; T &gt; &amp;dst)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ae87f24b80ddc830b9911fcba89004686',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; uint8_t &gt;&gt; &amp;srcs, SimpleTensor&lt; uint8_t &gt; &amp;dst)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ab620d10e96dbaf31989ff11b490deef9',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; float &gt;&gt; &amp;srcs, SimpleTensor&lt; float &gt; &amp;dst)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a822ab49e0fc97c2687bb92c079ebf1f1',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; half &gt;&gt; &amp;srcs, SimpleTensor&lt; half &gt; &amp;dst)']]],
  ['depthconcatenatelayer_2ecpp',['DepthConcatenateLayer.cpp',['../_c_l_2_depth_concatenate_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_depth_concatenate_layer_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_depth_concatenate_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['depthconcatenatelayer_2eh',['DepthConcatenateLayer.h',['../_depth_concatenate_layer_8h.xhtml',1,'']]],
  ['depthconcatsubtensormutator',['DepthConcatSubTensorMutator',['../classarm__compute_1_1graph_1_1_depth_concat_sub_tensor_mutator.xhtml',1,'arm_compute::graph']]],
  ['depthconcatsubtensormutator_2ecpp',['DepthConcatSubTensorMutator.cpp',['../_depth_concat_sub_tensor_mutator_8cpp.xhtml',1,'']]],
  ['depthconcatsubtensormutator_2eh',['DepthConcatSubTensorMutator.h',['../_depth_concat_sub_tensor_mutator_8h.xhtml',1,'']]],
  ['depthconvertlayer_2ecpp',['DepthConvertLayer.cpp',['../_c_l_2_depth_convert_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_depth_convert_layer_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_depth_convert_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['depthconvertlayer_2eh',['DepthConvertLayer.h',['../_depth_convert_layer_8h.xhtml',1,'']]],
  ['depthfirst_5fdriver_2ehpp',['depthfirst_driver.hpp',['../depthwise_2depthfirst__driver_8hpp.xhtml',1,'(Global Namespace)'],['../pooling_2depthfirst__driver_8hpp.xhtml',1,'(Global Namespace)']]],
  ['depthfirstdriver',['DepthfirstDriver',['../classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml',1,'DepthfirstDriver&lt; TInput, TWeight, TOutput &gt;'],['../classarm__conv_1_1pooling_1_1_depthfirst_driver.xhtml',1,'DepthfirstDriver&lt; TInput, TOutput &gt;'],['../classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml#a3abb84f30e37dc3a3456eb8757672f34',1,'arm_conv::depthwise::DepthfirstDriver::DepthfirstDriver()'],['../classarm__conv_1_1pooling_1_1_depthfirst_driver.xhtml#a1cc73f031d4d21471113eb34e4124ffb',1,'arm_conv::pooling::DepthfirstDriver::DepthfirstDriver()']]],
  ['depthfirstmultiplierstrategy',['DepthfirstMultiplierStrategy',['../classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml',1,'arm_conv::depthwise']]],
  ['depthfirstmultiplierstrategy_3c_20tinput_2c_20tweight_2c_20toutput_2c_20int32_5ft_20_3e',['DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;',['../classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml',1,'arm_conv::depthwise']]],
  ['depthfirststrategy',['DepthfirstStrategy',['../classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml',1,'DepthfirstStrategy&lt; TInput, TOutput &gt;'],['../classarm__conv_1_1depthwise_1_1_depthfirst_strategy.xhtml',1,'DepthfirstStrategy&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;'],['../classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml#a26dc0ad0fae6ab8c89cff8c0d4739e77',1,'arm_conv::pooling::DepthfirstStrategy::DepthfirstStrategy()']]],
  ['depthfirststrategy_3c_20float_2c_20float_20_3e',['DepthfirstStrategy&lt; float, float &gt;',['../classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml',1,'arm_conv::pooling']]],
  ['depthfirststrategy_3c_20int8_5ft_2c_20int8_5ft_20_3e',['DepthfirstStrategy&lt; int8_t, int8_t &gt;',['../classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml',1,'arm_conv::pooling']]],
  ['depthfirststrategy_3c_20tinput_2c_20tweight_2c_20toutput_2c_20int32_5ft_2c_20arm_5fgemm_3a_3arequantize32_20_3e',['DepthfirstStrategy&lt; TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;',['../classarm__conv_1_1depthwise_1_1_depthfirst_strategy.xhtml',1,'arm_conv::depthwise']]],
  ['depthfirststrategy_3c_20tinput_2c_20tweight_2c_20toutput_2c_20taccum_2c_20nothing_20_3e',['DepthfirstStrategy&lt; TInput, TWeight, TOutput, TAccum, Nothing &gt;',['../classarm__conv_1_1depthwise_1_1_depthfirst_strategy.xhtml',1,'arm_conv::depthwise']]],
  ['depthfirststrategy_3c_20uint8_5ft_2c_20uint8_5ft_20_3e',['DepthfirstStrategy&lt; uint8_t, uint8_t &gt;',['../classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml',1,'arm_conv::pooling']]],
  ['depthfirststrategyuntyped',['DepthfirstStrategyUntyped',['../classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped.xhtml',1,'arm_conv::depthwise']]],
  ['depthtospacelayer',['DepthToSpaceLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_depth_to_space_layer.xhtml',1,'DepthToSpaceLayer'],['../classarm__compute_1_1graph_1_1frontend_1_1_depth_to_space_layer.xhtml#a7bb7a05b224ccc08e9a749d2a91aa22c',1,'arm_compute::graph::frontend::DepthToSpaceLayer::DepthToSpaceLayer()'],['../namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a2c77fe48e06dc15838adafc96eb07809',1,'arm_compute::graph::DepthToSpaceLayer()']]],
  ['depthtospacelayer_2ecpp',['DepthToSpaceLayer.cpp',['../_c_l_2_depth_to_space_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_depth_to_space_layer_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_depth_to_space_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['depthtospacelayer_2eh',['DepthToSpaceLayer.h',['../_depth_to_space_layer_8h.xhtml',1,'']]],
  ['depthtospacelayernode',['DepthToSpaceLayerNode',['../classarm__compute_1_1graph_1_1_depth_to_space_layer_node.xhtml',1,'DepthToSpaceLayerNode'],['../classarm__compute_1_1graph_1_1_depth_to_space_layer_node.xhtml#a302c23176344ab365246000f249310c5',1,'arm_compute::graph::DepthToSpaceLayerNode::DepthToSpaceLayerNode()']]],
  ['depthtospacelayernode_2ecpp',['DepthToSpaceLayerNode.cpp',['../_depth_to_space_layer_node_8cpp.xhtml',1,'']]],
  ['depthtospacelayernode_2eh',['DepthToSpaceLayerNode.h',['../_depth_to_space_layer_node_8h.xhtml',1,'']]],
  ['depthwise',['DEPTHWISE',['../namespacearm__compute.xhtml#a6df16a1b3b5af590a14f55e983d3428ea6d5ec5f6909788df3453f62a3bd6ad78',1,'arm_compute::DEPTHWISE()'],['../namespacearm__conv_1_1depthwise.xhtml#a301c401a1e9a5ac74367c4719a185aa4',1,'arm_conv::depthwise::depthwise(const DepthwiseArgs &amp;, const Nothing &amp;)'],['../namespacearm__conv_1_1depthwise.xhtml#a607746df44efd86b8559fe1b542968c6',1,'arm_conv::depthwise::depthwise(const DepthwiseArgs &amp;args, const OutputStage &amp;os)'],['../namespacearm__conv_1_1depthwise.xhtml#a28eddf4c346bba772ef39d719a8e48b2',1,'arm_conv::depthwise::depthwise(const DepthwiseArgs &amp;, const Requantize32 &amp;)']]],
  ['depthwise_5fargs',['depthwise_args',['../working__space_8hpp.xhtml#aeb766ec58e601759230928aaf344c597',1,'working_space.hpp']]],
  ['depthwise_5fconvolution',['depthwise_convolution',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aa8c74ba65c903552897b2158aed34c0f',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; float &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;weights, const SimpleTensor&lt; float &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aebdf8e3342c4288bd413cb07b88530f8',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; half &gt; &amp;src, const SimpleTensor&lt; half &gt; &amp;weights, const SimpleTensor&lt; half &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aec5c617012397c568660626f052fd23b',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; uint8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a57767f1ef2c2e1b61bb88c2e259701d3',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; int8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aaeb13fb32d7241047f289e783f45356d',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; int8_t &gt; &amp;src, const SimpleTensor&lt; int8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#afa25b85fdf3eb7960f4e6febd70909d0',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; TW &gt; &amp;weights, const SimpleTensor&lt; TB &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation=Size2D(1U, 1U), const QuantizationInfo &amp;out_quant_info=QuantizationInfo(0.0f, 0))']]],
  ['depthwise_5fconvolution_5fmethod',['depthwise_convolution_method',['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a8cefd89d2de49691e778c8d5a08ac92f',1,'arm_compute::graph::DepthwiseConvolutionLayerNode::depthwise_convolution_method()'],['../classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml#a8cefd89d2de49691e778c8d5a08ac92f',1,'arm_compute::graph::FusedDepthwiseConvolutionBatchNormalizationNode::depthwise_convolution_method()']]],
  ['depthwise_5fconvolution_5fmethod_5ffrom_5fname',['depthwise_convolution_method_from_name',['../namespacearm__compute_1_1graph.xhtml#a6dbaf2e51ef91725f852766f923fd5a6',1,'arm_compute::graph']]],
  ['depthwise_5fconvolution_5fmethod_5fhint',['depthwise_convolution_method_hint',['../structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a67ede056be3dfba6dfbb934a1b96661e',1,'arm_compute::graph::frontend::StreamHints']]],
  ['depthwise_5fdepthfirst_2ehpp',['depthwise_depthfirst.hpp',['../depthwise__depthfirst_8hpp.xhtml',1,'']]],
  ['depthwise_5fdepthfirst_5fgeneric_2ehpp',['depthwise_depthfirst_generic.hpp',['../depthwise__depthfirst__generic_8hpp.xhtml',1,'']]],
  ['depthwise_5fdepthfirst_5fgeneric_5fmultiplier_2ehpp',['depthwise_depthfirst_generic_multiplier.hpp',['../depthwise__depthfirst__generic__multiplier_8hpp.xhtml',1,'']]],
  ['depthwise_5fdepthfirst_5fgeneric_5fmultiplier_5fquantized_2ehpp',['depthwise_depthfirst_generic_multiplier_quantized.hpp',['../depthwise__depthfirst__generic__multiplier__quantized_8hpp.xhtml',1,'']]],
  ['depthwise_5fdepthfirst_5fgeneric_5fquantized_2ehpp',['depthwise_depthfirst_generic_quantized.hpp',['../depthwise__depthfirst__generic__quantized_8hpp.xhtml',1,'']]],
  ['depthwise_5fdepthfirst_5fmultiplier_2ehpp',['depthwise_depthfirst_multiplier.hpp',['../depthwise__depthfirst__multiplier_8hpp.xhtml',1,'']]],
  ['depthwise_5fdepthfirst_5fmultiplier_5fquantized_2ehpp',['depthwise_depthfirst_multiplier_quantized.hpp',['../depthwise__depthfirst__multiplier__quantized_8hpp.xhtml',1,'']]],
  ['depthwise_5fdepthfirst_5fquantized_2ehpp',['depthwise_depthfirst_quantized.hpp',['../depthwise__depthfirst__quantized_8hpp.xhtml',1,'']]],
  ['depthwise_5ffp16_2ecpp',['depthwise_fp16.cpp',['../depthwise__fp16_8cpp.xhtml',1,'']]],
  ['depthwise_5ffp32_2ecpp',['depthwise_fp32.cpp',['../depthwise__fp32_8cpp.xhtml',1,'']]],
  ['depthwise_5fimplementation_2ehpp',['depthwise_implementation.hpp',['../depthwise__implementation_8hpp.xhtml',1,'']]],
  ['depthwise_5fimplementation_5fconstraints_2ehpp',['depthwise_implementation_constraints.hpp',['../depthwise__implementation__constraints_8hpp.xhtml',1,'']]],
  ['depthwise_5fimplementation_5flist',['depthwise_implementation_list',['../namespacearm__conv_1_1depthwise.xhtml#afec3710e76721e485a73a6d577870a71',1,'arm_conv::depthwise::depthwise_implementation_list()'],['../namespacearm__conv_1_1depthwise.xhtml#ac2ad9593e306c173eafbeccaf46a7cfb',1,'arm_conv::depthwise::depthwise_implementation_list()'],['../namespacearm__conv_1_1depthwise.xhtml#aaca65b5325f10a6477f59f0c807487b4',1,'arm_conv::depthwise::depthwise_implementation_list()'],['../namespacearm__conv_1_1depthwise.xhtml#ae86061c4991854ca34cb28b4cd0f145a',1,'arm_conv::depthwise::depthwise_implementation_list()'],['../namespacearm__conv_1_1depthwise.xhtml#a4bd29428afa98755e71b9bc7f2f57799',1,'arm_conv::depthwise::depthwise_implementation_list()']]],
  ['depthwise_5fplanar_2ehpp',['depthwise_planar.hpp',['../depthwise__planar_8hpp.xhtml',1,'']]],
  ['depthwise_5fs8q_2ecpp',['depthwise_s8q.cpp',['../depthwise__s8q_8cpp.xhtml',1,'']]],
  ['depthwise_5fseparable_5fconvolution_5flayer',['depthwise_separable_convolution_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a79f9dfec3d4a3a6dfe7d084ee6b2b32e',1,'arm_compute::test::validation::reference']]],
  ['depthwise_5fstrategies_5fcommon_2ecpp',['depthwise_strategies_common.cpp',['../depthwise__strategies__common_8cpp.xhtml',1,'']]],
  ['depthwise_5fstrategies_5fcommon_2ehpp',['depthwise_strategies_common.hpp',['../depthwise__strategies__common_8hpp.xhtml',1,'']]],
  ['depthwise_5fu8q_2ecpp',['depthwise_u8q.cpp',['../depthwise__u8q_8cpp.xhtml',1,'']]],
  ['depthwise_5fu8s8u8q_2ecpp',['depthwise_u8s8u8q.cpp',['../depthwise__u8s8u8q_8cpp.xhtml',1,'']]],
  ['depthwiseconv2dnativedatatypeisaselectordata',['DepthwiseConv2dNativeDataTypeISASelectorData',['../structarm__compute_1_1cpu_1_1kernels_1_1_depthwise_conv2d_native_data_type_i_s_a_selector_data.xhtml',1,'arm_compute::cpu::kernels']]],
  ['depthwiseconv2dnativedatatypeisaselectorptr',['DepthwiseConv2dNativeDataTypeISASelectorPtr',['../namespacearm__compute_1_1cpu_1_1kernels.xhtml#ab43a8d80452e4e9e7590280b63440f1c',1,'arm_compute::cpu::kernels']]],
  ['depthwiseconv2dnativekernel',['DepthwiseConv2dNativeKernel',['../structarm__compute_1_1cpu_1_1kernels_1_1_cpu_depthwise_conv2d_native_kernel_1_1_depthwise_conv2d_native_kernel.xhtml',1,'arm_compute::cpu::kernels::CpuDepthwiseConv2dNativeKernel']]],
  ['depthwiseconvolution',['DEPTHWISECONVOLUTION',['../namespacearm__compute.xhtml#afb7e3dd8a833840aaaf618bd43ead0caa481bc07ed7c792045e8b277c0c88f8d4',1,'arm_compute']]],
  ['depthwiseconvolutionfunction',['DepthwiseConvolutionFunction',['../namespacearm__compute.xhtml#a0255421478a6f5ab8a2596d966411a5b',1,'arm_compute']]],
  ['depthwiseconvolutionlayer',['DepthwiseConvolutionLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml',1,'DepthwiseConvolutionLayer'],['../classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml#acd0aeefa8e7b1978d4c5ac5e238da9c7',1,'arm_compute::graph::frontend::DepthwiseConvolutionLayer::DepthwiseConvolutionLayer()'],['../namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8',1,'arm_compute::graph::DepthwiseConvolutionLayer()']]],
  ['depthwiseconvolutionlayer_2ecpp',['DepthwiseConvolutionLayer.cpp',['../_c_l_2_depthwise_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_depthwise_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_depthwise_convolution_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['depthwiseconvolutionlayer_2eh',['DepthwiseConvolutionLayer.h',['../_depthwise_convolution_layer_8h.xhtml',1,'']]],
  ['depthwiseconvolutionlayernative_2ecpp',['DepthwiseConvolutionLayerNative.cpp',['../_c_l_2_depthwise_convolution_layer_native_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_depthwise_convolution_layer_native_8cpp.xhtml',1,'(Global Namespace)']]],
  ['depthwiseconvolutionlayernode',['DepthwiseConvolutionLayerNode',['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml',1,'DepthwiseConvolutionLayerNode'],['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a29031f29e5d91bdd4f792c210b04a6cb',1,'arm_compute::graph::DepthwiseConvolutionLayerNode::DepthwiseConvolutionLayerNode()']]],
  ['depthwiseconvolutionlayernode_2ecpp',['DepthwiseConvolutionLayerNode.cpp',['../_depthwise_convolution_layer_node_8cpp.xhtml',1,'']]],
  ['depthwiseconvolutionlayernode_2eh',['DepthwiseConvolutionLayerNode.h',['../_depthwise_convolution_layer_node_8h.xhtml',1,'']]],
  ['depthwiseconvolutionmethod',['DepthwiseConvolutionMethod',['../namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f',1,'arm_compute::graph']]],
  ['depthwisedepthfirst',['DepthwiseDepthfirst',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst.xhtml',1,'DepthwiseDepthfirst&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst.xhtml#a845d5e2653405b36cb025f901f5f48fa',1,'arm_conv::depthwise::DepthwiseDepthfirst::DepthwiseDepthfirst(StratType *const strat, const DepthwiseArgs &amp;args, const OutputStage &amp;os={})'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst.xhtml#a9a00d451458b5aa9255c38532c78e376',1,'arm_conv::depthwise::DepthwiseDepthfirst::DepthwiseDepthfirst(DepthwiseDepthfirst &amp;)=delete']]],
  ['depthwisedepthfirstcommon',['DepthwiseDepthfirstCommon',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_common.xhtml',1,'DepthwiseDepthfirstCommon&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_common.xhtml#aef602333087c50ad0936c9d67506bce4',1,'arm_conv::depthwise::DepthwiseDepthfirstCommon::DepthwiseDepthfirstCommon(StratType *const strat, const DepthwiseArgs &amp;args, const OutputStage &amp;os)'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_common.xhtml#ae75d6e84c912cdd1a26f79db4b8d7aaa',1,'arm_conv::depthwise::DepthwiseDepthfirstCommon::DepthwiseDepthfirstCommon(DepthwiseDepthfirstCommon &amp;)=delete']]],
  ['depthwisedepthfirstgeneric',['DepthwiseDepthfirstGeneric',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic.xhtml',1,'DepthwiseDepthfirstGeneric&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic.xhtml#aca290c15be25f1c3bc9ba0f959f06022',1,'arm_conv::depthwise::DepthwiseDepthfirstGeneric::DepthwiseDepthfirstGeneric(StratType *const strat, const DepthwiseArgs &amp;args, const OutputStage &amp;os={})'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic.xhtml#a536572b7335b0c0be54411580d196c42',1,'arm_conv::depthwise::DepthwiseDepthfirstGeneric::DepthwiseDepthfirstGeneric(DepthwiseDepthfirstGeneric &amp;)=delete']]],
  ['depthwisedepthfirstgenerickernelcall',['DepthwiseDepthfirstGenericKernelCall',['../structarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_kernel_call.xhtml',1,'arm_conv::depthwise']]],
  ['depthwisedepthfirstgenerickernelcall_3c_20arm_5fgemm_3a_3arequantize32_20_3e',['DepthwiseDepthfirstGenericKernelCall&lt; arm_gemm::Requantize32 &gt;',['../structarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_kernel_call_3_01arm__gemm_1_1_requantize32_01_4.xhtml',1,'arm_conv::depthwise']]],
  ['depthwisedepthfirstgenerickernelcall_3c_20nothing_20_3e',['DepthwiseDepthfirstGenericKernelCall&lt; Nothing &gt;',['../structarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_kernel_call_3_01_nothing_01_4.xhtml',1,'arm_conv::depthwise']]],
  ['depthwisedepthfirstgenericquantized',['DepthwiseDepthfirstGenericQuantized',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_quantized.xhtml',1,'DepthwiseDepthfirstGenericQuantized&lt; Strategy, OutputRows, OutputCols &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_quantized.xhtml#ac915138441608ab13cdcf39e3b12f99d',1,'arm_conv::depthwise::DepthwiseDepthfirstGenericQuantized::DepthwiseDepthfirstGenericQuantized(const DepthwiseArgs &amp;args, const Requantize32 &amp;qp)'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_quantized.xhtml#a690ae2de34eedb9d9f6c8b8049ed74f8',1,'arm_conv::depthwise::DepthwiseDepthfirstGenericQuantized::DepthwiseDepthfirstGenericQuantized(DepthwiseDepthfirstGenericQuantized &amp;)=delete']]],
  ['depthwisedepthfirstgenericwithmultiplier',['DepthwiseDepthfirstGenericWithMultiplier',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml',1,'DepthwiseDepthfirstGenericWithMultiplier&lt; strategy &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml#a72ee4f347aaf509982f52539e066e67d',1,'arm_conv::depthwise::DepthwiseDepthfirstGenericWithMultiplier::DepthwiseDepthfirstGenericWithMultiplier(const DepthwiseArgs &amp;args)'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml#aaebfe1e43381d91c30fa920a27966c5a',1,'arm_conv::depthwise::DepthwiseDepthfirstGenericWithMultiplier::DepthwiseDepthfirstGenericWithMultiplier(DepthwiseDepthfirstGenericWithMultiplier &amp;)=delete']]],
  ['depthwisedepthfirstgenericwithmultiplierbase',['DepthwiseDepthfirstGenericWithMultiplierBase',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml',1,'DepthwiseDepthfirstGenericWithMultiplierBase&lt; strategy &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml#a6bac62814a47564dffbc3909cadf85d3',1,'arm_conv::depthwise::DepthwiseDepthfirstGenericWithMultiplierBase::DepthwiseDepthfirstGenericWithMultiplierBase(const DepthwiseArgs &amp;args)'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml#a1850f2bc8d0bc59ac88c28f8444d764d',1,'arm_conv::depthwise::DepthwiseDepthfirstGenericWithMultiplierBase::DepthwiseDepthfirstGenericWithMultiplierBase(DepthwiseDepthfirstGenericWithMultiplierBase &amp;)=delete']]],
  ['depthwisedepthfirstgenericwithmultiplierquantized',['DepthwiseDepthfirstGenericWithMultiplierQuantized',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_quantized.xhtml',1,'DepthwiseDepthfirstGenericWithMultiplierQuantized&lt; strategy &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_quantized.xhtml#a3d8d80cc47514e16eea9ce83153bbbf9',1,'arm_conv::depthwise::DepthwiseDepthfirstGenericWithMultiplierQuantized::DepthwiseDepthfirstGenericWithMultiplierQuantized(const DepthwiseArgs &amp;args, const arm_gemm::Requantize32 &amp;qp)'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_quantized.xhtml#ad264126371e71a747e2810c7e812b623',1,'arm_conv::depthwise::DepthwiseDepthfirstGenericWithMultiplierQuantized::DepthwiseDepthfirstGenericWithMultiplierQuantized(DepthwiseDepthfirstGenericWithMultiplierQuantized &amp;)=delete']]],
  ['depthwisedepthfirstmultiplier',['DepthwiseDepthfirstMultiplier',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml',1,'DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a8214e0e5ed09ebfc669544d7631e1b2d',1,'arm_conv::depthwise::DepthwiseDepthfirstMultiplier::DepthwiseDepthfirstMultiplier(StratType *const strat, const DepthwiseArgs &amp;args, const OutputStage &amp;os={})'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#aa42d27b8163085555b203f764268b5b3',1,'arm_conv::depthwise::DepthwiseDepthfirstMultiplier::DepthwiseDepthfirstMultiplier(DepthwiseDepthfirstMultiplier &amp;)=delete']]],
  ['depthwisedepthfirstquantized',['DepthwiseDepthfirstQuantized',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_quantized.xhtml',1,'DepthwiseDepthfirstQuantized&lt; strategy &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_quantized.xhtml#af51ac951fd5a027070f0207912768d9f',1,'arm_conv::depthwise::DepthwiseDepthfirstQuantized::DepthwiseDepthfirstQuantized(const DepthwiseArgs &amp;args, const arm_gemm::Requantize32 &amp;qp)'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_quantized.xhtml#a6f76aec3f36a188855265dccc029e7b5',1,'arm_conv::depthwise::DepthwiseDepthfirstQuantized::DepthwiseDepthfirstQuantized(DepthwiseDepthfirstQuantized &amp;)=delete']]],
  ['depthwisedepthfirststrategy',['DepthwiseDepthfirstStrategy',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy.xhtml',1,'arm_conv::depthwise']]],
  ['depthwisedepthfirststrategy_3c_20tinput_2c_20tweight_2c_20toutput_2c_20int32_5ft_20_3e',['DepthwiseDepthfirstStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml',1,'arm_conv::depthwise']]],
  ['depthwisedepthfirststrategycommon',['DepthwiseDepthfirstStrategyCommon',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml',1,'DepthwiseDepthfirstStrategyCommon&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#a4a878923ebd4aeef174cf38b1908d54f',1,'arm_conv::depthwise::DepthwiseDepthfirstStrategyCommon::DepthwiseDepthfirstStrategyCommon(unsigned int output_rows, unsigned int output_cols, unsigned int kernel_rows, unsigned int kernel_cols, unsigned int stride_rows=1, unsigned int stride_cols=1)'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#a72170f776a926a379e3dce69b7ade1c3',1,'arm_conv::depthwise::DepthwiseDepthfirstStrategyCommon::DepthwiseDepthfirstStrategyCommon(unsigned int output_size, unsigned int kernel_size, unsigned int stride=1)']]],
  ['depthwisedepthfirststrategycommon_3c_20tinput_2c_20tweight_2c_20toutput_2c_20int32_5ft_2c_20arm_5fgemm_3a_3arequantize32_20_3e',['DepthwiseDepthfirstStrategyCommon&lt; TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml',1,'arm_conv::depthwise']]],
  ['depthwisedepthfirststrategycommon_3c_20tinput_2c_20tweight_2c_20toutput_2c_20taccum_2c_20nothing_20_3e',['DepthwiseDepthfirstStrategyCommon&lt; TInput, TWeight, TOutput, TAccum, Nothing &gt;',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml',1,'arm_conv::depthwise']]],
  ['depthwisedepthfirstwithmultiplierquantized',['DepthwiseDepthfirstWithMultiplierQuantized',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_with_multiplier_quantized.xhtml',1,'DepthwiseDepthfirstWithMultiplierQuantized&lt; strategy &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_with_multiplier_quantized.xhtml#af239fdf11ba2140156ed20cf201a744a',1,'arm_conv::depthwise::DepthwiseDepthfirstWithMultiplierQuantized::DepthwiseDepthfirstWithMultiplierQuantized(const DepthwiseArgs &amp;args, const arm_gemm::Requantize32 &amp;qp)'],['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_with_multiplier_quantized.xhtml#a0950485145cb735b5b68c7ba7fc2f832',1,'arm_conv::depthwise::DepthwiseDepthfirstWithMultiplierQuantized::DepthwiseDepthfirstWithMultiplierQuantized(DepthwiseDepthfirstWithMultiplierQuantized &amp;)=delete']]],
  ['depthwiseimplementation',['DepthwiseImplementation',['../structarm__conv_1_1depthwise_1_1_depthwise_implementation.xhtml',1,'arm_conv::depthwise']]],
  ['depthwiseplanar',['DepthwisePlanar',['../classarm__conv_1_1depthwise_1_1_depthwise_planar.xhtml',1,'DepthwisePlanar&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;'],['../classarm__conv_1_1depthwise_1_1_depthwise_planar.xhtml#acdcfef4103a34e00f9b158dfd97086d8',1,'arm_conv::depthwise::DepthwisePlanar::DepthwisePlanar()']]],
  ['depthwiseseparableconvolutionlayer_2eh',['DepthwiseSeparableConvolutionLayer.h',['../_depthwise_separable_convolution_layer_8h.xhtml',1,'']]],
  ['dequantization_5flayer',['dequantization_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#abd43030e06efec1c26997107b7bd184d',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; TIn &gt; &amp;src)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a9b5c98302ac3ac376c23302a1f3beef2',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; uint8_t &gt; &amp;src)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#abede2427030c71627ea72c8eaee16fff',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; int8_t &gt; &amp;src)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#afb55c366bbc0df5025d95b736ac14ff4',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; int16_t &gt; &amp;src)']]],
  ['dequantization_5flayer_2ecl',['dequantization_layer.cl',['../common_2dequantization__layer_8cl.xhtml',1,'(Global Namespace)'],['../nchw_2dequantization__layer_8cl.xhtml',1,'(Global Namespace)'],['../nhwc_2dequantization__layer_8cl.xhtml',1,'(Global Namespace)']]],
  ['dequantizationlayer',['DequantizationLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_dequantization_layer.xhtml',1,'DequantizationLayer'],['../classarm__compute_1_1graph_1_1frontend_1_1_dequantization_layer.xhtml#a85ae01d4be6283bbfcbdc574d75ec528',1,'arm_compute::graph::frontend::DequantizationLayer::DequantizationLayer()'],['../namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a6dc16ed47490b9162258248a67a28149',1,'arm_compute::graph::DequantizationLayer()']]],
  ['dequantizationlayer_2ecpp',['DequantizationLayer.cpp',['../_c_l_2_dequantization_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_dequantization_layer_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_dequantization_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['dequantizationlayer_2eh',['DequantizationLayer.h',['../_dequantization_layer_8h.xhtml',1,'']]],
  ['dequantizationlayernode',['DequantizationLayerNode',['../classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml',1,'DequantizationLayerNode'],['../classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml#a0640290b167665812e7b981b663a5285',1,'arm_compute::graph::DequantizationLayerNode::DequantizationLayerNode()']]],
  ['dequantizationlayernode_2ecpp',['DequantizationLayerNode.cpp',['../_dequantization_layer_node_8cpp.xhtml',1,'']]],
  ['dequantizationlayernode_2eh',['DequantizationLayerNode.h',['../_dequantization_layer_node_8h.xhtml',1,'']]],
  ['dequantize',['dequantize',['../structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463',1,'arm_compute::Qasymm8QuantizationHelper::dequantize(QUANTIZED_TYPE value, const UniformQuantizationInfo &amp;qinfo)'],['../structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a98af9b87dcba1d283edb936c7cc3144b',1,'arm_compute::Qasymm8QuantizationHelper::dequantize(QUANTIZED_TYPE value, const QuantizationInfo &amp;qinfo)'],['../namespacearm__compute.xhtml#ab8005b943e23486a2000a7966d664df2',1,'arm_compute::dequantize(uint8_t value, float scale, int32_t offset)'],['../namespacearm__compute.xhtml#aa29442a61be1fbce3b22c28f403acef2',1,'arm_compute::dequantize(int8_t value, float scale)'],['../namespacearm__compute.xhtml#a22c3c5e2d63814320440a3ec9d73419c',1,'arm_compute::dequantize(int16_t value, float scale)'],['../namespacearm__compute.xhtml#acf7db09d2dff587cd58187ed58eeec68',1,'arm_compute::dequantize(uint16_t value, float scale, int32_t offset)'],['../helpers__asymm_8h.xhtml#a4f0a8fe9e57d31f7ca26a697ca140029',1,'DEQUANTIZE():&#160;helpers_asymm.h']]],
  ['dequantize_5fchar1',['dequantize_char1',['../helpers__asymm_8h.xhtml#aaeaa2ffe6aff77e6cc0289406678b3d1',1,'helpers_asymm.h']]],
  ['dequantize_5fchar16',['dequantize_char16',['../helpers__asymm_8h.xhtml#a52ea79d99e2dc0bf986efc815842847c',1,'helpers_asymm.h']]],
  ['dequantize_5fchar2',['dequantize_char2',['../helpers__asymm_8h.xhtml#a44a0c2b34191ade216dd1376a1318eb1',1,'helpers_asymm.h']]],
  ['dequantize_5fchar3',['dequantize_char3',['../helpers__asymm_8h.xhtml#a3160a3a4ac94471aa60881e9995c8c34',1,'helpers_asymm.h']]],
  ['dequantize_5fchar8',['dequantize_char8',['../helpers__asymm_8h.xhtml#ae5fc448fec0356907da502a57fdafeb5',1,'helpers_asymm.h']]],
  ['dequantize_5fimpl',['DEQUANTIZE_IMPL',['../helpers__asymm_8h.xhtml#ac5fe0200eafe2b88af574a2ed34c3c11',1,'helpers_asymm.h']]],
  ['dequantize_5fint1',['dequantize_int1',['../helpers__asymm_8h.xhtml#a186295336a93a0072b3f72d89a74b5c8',1,'helpers_asymm.h']]],
  ['dequantize_5fint16',['dequantize_int16',['../helpers__asymm_8h.xhtml#a103447344df3d2d2cfffc8ab997b6bcd',1,'helpers_asymm.h']]],
  ['dequantize_5fint2',['dequantize_int2',['../helpers__asymm_8h.xhtml#a2e92f04116fe7be2c98f8c7dc6ea89b5',1,'helpers_asymm.h']]],
  ['dequantize_5fint3',['dequantize_int3',['../helpers__asymm_8h.xhtml#a2bb5e2295b26974d3120c9fa88d3a4f1',1,'helpers_asymm.h']]],
  ['dequantize_5fint4',['dequantize_int4',['../helpers__asymm_8h.xhtml#a7ff63345b4d9b8872dcebf3fd5d06158',1,'helpers_asymm.h']]],
  ['dequantize_5fint8',['dequantize_int8',['../helpers__asymm_8h.xhtml#a3ab069e0d0324f7bfe4525a8e62ddeaf',1,'helpers_asymm.h']]],
  ['dequantize_5fqasymm16',['dequantize_qasymm16',['../namespacearm__compute.xhtml#a85310967abb447a1cb1167ba8f73eab0',1,'arm_compute::dequantize_qasymm16(uint16_t value, const UniformQuantizationInfo &amp;qinfo)'],['../namespacearm__compute.xhtml#a1b09fc16ab06a02188334c4b1f43e2ff',1,'arm_compute::dequantize_qasymm16(uint16_t value, const QuantizationInfo &amp;qinfo)']]],
  ['dequantize_5fqasymm8',['dequantize_qasymm8',['../namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd',1,'arm_compute::dequantize_qasymm8()'],['../helpers__asymm_8h.xhtml#afbec2094d42590b94e7eead93710411d',1,'dequantize_qasymm8():&#160;helpers_asymm.h']]],
  ['dequantize_5fqasymm8_5fsigned',['dequantize_qasymm8_signed',['../namespacearm__compute.xhtml#afe6fcf1a0c6f6c2d2cb10a8c14fa9131',1,'arm_compute::dequantize_qasymm8_signed()'],['../helpers__asymm_8h.xhtml#a3dc07539dda26f6cd2dcdc08a222292d',1,'dequantize_qasymm8_signed():&#160;helpers_asymm.h']]],
  ['dequantize_5fqsymm16',['dequantize_qsymm16',['../namespacearm__compute.xhtml#aae8583b382eaea109164f2f3e16380b1',1,'arm_compute::dequantize_qsymm16(int16_t value, const UniformQuantizationInfo &amp;qinfo)'],['../namespacearm__compute.xhtml#aae7ed4b777e2220a1959b79a7834042c',1,'arm_compute::dequantize_qsymm16(int16_t value, const QuantizationInfo &amp;qinfo)']]],
  ['dequantize_5fqsymm8',['dequantize_qsymm8',['../namespacearm__compute.xhtml#af7586ba11d82cc0232d4246a61a4a4f3',1,'arm_compute']]],
  ['dequantize_5fscores',['dequantize_scores',['../classarm__compute_1_1_detection_post_process_layer_info.xhtml#a9f94c4edaf37250de1a0403d0f929644',1,'arm_compute::DetectionPostProcessLayerInfo']]],
  ['dequantize_5fshort16',['dequantize_short16',['../helpers__asymm_8h.xhtml#ab4cd9c562aa288b7c2b54c22a60fba04',1,'helpers_asymm.h']]],
  ['dequantize_5fshort4',['dequantize_short4',['../helpers__asymm_8h.xhtml#a2b106b11a5f1e2e5b6a70e0afe1d9e5a',1,'helpers_asymm.h']]],
  ['dequantize_5fstr',['DEQUANTIZE_STR',['../helpers__asymm_8h.xhtml#ab98579b6a5e03ada17294034cbe4aa02',1,'helpers_asymm.h']]],
  ['dequantize_5fuchar1',['dequantize_uchar1',['../helpers__asymm_8h.xhtml#a3bb6724728c01a91aa349dba2a4edcc1',1,'helpers_asymm.h']]],
  ['dequantize_5fuchar16',['dequantize_uchar16',['../helpers__asymm_8h.xhtml#a2d9cac9c87356624d52b00c2e6950ec9',1,'helpers_asymm.h']]],
  ['dequantize_5fuchar2',['dequantize_uchar2',['../helpers__asymm_8h.xhtml#acce07bf2841793d71e74657df87a418a',1,'helpers_asymm.h']]],
  ['dequantize_5fuchar3',['dequantize_uchar3',['../helpers__asymm_8h.xhtml#a7e7ce9131ab54368aa14e70813cead1c',1,'helpers_asymm.h']]],
  ['dequantize_5fuchar4',['dequantize_uchar4',['../helpers__asymm_8h.xhtml#a951a47a7d1115404d183490f2aa11e40',1,'helpers_asymm.h']]],
  ['dequantize_5fuchar8',['dequantize_uchar8',['../helpers__asymm_8h.xhtml#af03067d79429a153b2651387e2416d30',1,'helpers_asymm.h']]],
  ['dequantize_5fuint1',['dequantize_uint1',['../helpers__asymm_8h.xhtml#ac870997ee5c5ea925bbe14f8b966f02e',1,'helpers_asymm.h']]],
  ['dequantize_5fuint16',['dequantize_uint16',['../helpers__asymm_8h.xhtml#ac4b7d00ffe62fa241cd5c3519467e6ac',1,'helpers_asymm.h']]],
  ['dequantize_5fuint2',['dequantize_uint2',['../helpers__asymm_8h.xhtml#aa60dc85c32e8f71828c64ecd233e2269',1,'helpers_asymm.h']]],
  ['dequantize_5fuint3',['dequantize_uint3',['../helpers__asymm_8h.xhtml#af46e3d25eb3d13dcb87093cc049aa0cc',1,'helpers_asymm.h']]],
  ['dequantize_5fuint8',['dequantize_uint8',['../helpers__asymm_8h.xhtml#a5a60fc65c9fa9eee2061799fd004a001',1,'helpers_asymm.h']]],
  ['dequantize_5fushort16',['dequantize_ushort16',['../helpers__asymm_8h.xhtml#ad554c256832e2b36d187912753c83b14',1,'helpers_asymm.h']]],
  ['dequantize_5fushort4',['dequantize_ushort4',['../helpers__asymm_8h.xhtml#a5cdb515b62ef19a88f83d779240a02f4',1,'helpers_asymm.h']]],
  ['desc',['desc',['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml#ad45cdfea4355c25b90549fc54f9a57c3',1,'arm_compute::experimental::dynamic_fusion::SharedVarTable::SharedVar::desc()'],['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#aaf16d8c575940cda81e904c1285b11c6',1,'arm_compute::experimental::dynamic_fusion::ClKernelTensor::desc()'],['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#ad00561059ebf182c4b98c816e495df09',1,'arm_compute::experimental::dynamic_fusion::ClDirectConv2dKernel::desc()'],['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml#af22f49b40ed5e43f4bcd3d11ae01c25d',1,'arm_compute::experimental::dynamic_fusion::ClElementwiseKernel::desc()'],['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml#a38d8c140ec24d21c91f71b4271c58e60',1,'arm_compute::experimental::dynamic_fusion::ClFloorKernel::desc()'],['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#aaf16d8c575940cda81e904c1285b11c6',1,'arm_compute::experimental::dynamic_fusion::OpTensorContent::desc()'],['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ab211a304154342c9b79855da938cbc88',1,'arm_compute::experimental::dynamic_fusion::Conv2dContent::desc()'],['../classarm__compute_1_1graph_1_1_tensor.xhtml#a0d3608f94078b90ab1ff9e9465d4ed3b',1,'arm_compute::graph::Tensor::desc()'],['../classarm__compute_1_1graph_1_1_tensor.xhtml#ae0a7a8139c09a2e0dbbaeb547fcbe9ea',1,'arm_compute::graph::Tensor::desc() const']]],
  ['description',['description',['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::CartesianProductDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::ContainerDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::InitializerListDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::JoinDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::RangeDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::SingletonDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::ZipDataset::iterator::description()']]],
  ['dest',['dest',['../namespace_gemm_tuner.xhtml#ab0bede79c5f4cbed9c2cd932a0ace201',1,'GemmTuner.dest()'],['../namespacecaffe__mnist__image__extractor.xhtml#ab0bede79c5f4cbed9c2cd932a0ace201',1,'caffe_mnist_image_extractor.dest()'],['../namespacetf__frozen__model__extractor.xhtml#ab0bede79c5f4cbed9c2cd932a0ace201',1,'tf_frozen_model_extractor.dest()']]],
  ['destroy',['Destroy',['../structacl_1_1detail_1_1_object_deleter_3_01_acl_context_01_4.xhtml#a5d46f145a53f86e4f3a36cd5c7fab965',1,'acl::detail::ObjectDeleter&lt; AclContext &gt;::Destroy()'],['../structacl_1_1detail_1_1_object_deleter_3_01_acl_queue_01_4.xhtml#ae1116e3c2c1ff8f374706ff2365e6528',1,'acl::detail::ObjectDeleter&lt; AclQueue &gt;::Destroy()'],['../structacl_1_1detail_1_1_object_deleter_3_01_acl_tensor_01_4.xhtml#aec486518c9ad7ef7933527a18097e7f4',1,'acl::detail::ObjectDeleter&lt; AclTensor &gt;::Destroy()'],['../structacl_1_1detail_1_1_object_deleter_3_01_acl_tensor_pack_01_4.xhtml#aa47d0509d69068f356877108b86e7d4e',1,'acl::detail::ObjectDeleter&lt; AclTensorPack &gt;::Destroy()'],['../structacl_1_1detail_1_1_object_deleter_3_01_acl_operator_01_4.xhtml#a5e56af816a8d6299dbd2376c738e1895',1,'acl::detail::ObjectDeleter&lt; AclOperator &gt;::Destroy()']]],
  ['detection_5foutput_5finfo',['detection_output_info',['../classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml#a4491336dccd18464fbbf617c981736cf',1,'arm_compute::graph::DetectionOutputLayerNode']]],
  ['detection_5fper_5fclass',['detection_per_class',['../classarm__compute_1_1_detection_post_process_layer_info.xhtml#a36e65a7f80a07a2393e6a1cadd974740',1,'arm_compute::DetectionPostProcessLayerInfo']]],
  ['detection_5fpost_5fprocess_5finfo',['detection_post_process_info',['../classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml#a23ab280af362e61b91763038fc3194f4',1,'arm_compute::graph::DetectionPostProcessLayerNode']]],
  ['detectionoutputaccessor',['DetectionOutputAccessor',['../classarm__compute_1_1graph__utils_1_1_detection_output_accessor.xhtml',1,'DetectionOutputAccessor'],['../classarm__compute_1_1graph__utils_1_1_detection_output_accessor.xhtml#a27dfee7cd6e032a9d766786a8e1e3c8f',1,'arm_compute::graph_utils::DetectionOutputAccessor::DetectionOutputAccessor(const std::string &amp;labels_path, std::vector&lt; TensorShape &gt; &amp;imgs_tensor_shapes, std::ostream &amp;output_stream=std::cout)'],['../classarm__compute_1_1graph__utils_1_1_detection_output_accessor.xhtml#a9d991af8ac7b4f3379daebd90fd33e58',1,'arm_compute::graph_utils::DetectionOutputAccessor::DetectionOutputAccessor(DetectionOutputAccessor &amp;&amp;)=default'],['../classarm__compute_1_1graph__utils_1_1_detection_output_accessor.xhtml#ad844e13f53bb8d546007d0607445e966',1,'arm_compute::graph_utils::DetectionOutputAccessor::DetectionOutputAccessor(const DetectionOutputAccessor &amp;)=delete']]],
  ['detectionoutputlayer',['DetectionOutputLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_detection_output_layer.xhtml',1,'DetectionOutputLayer'],['../classarm__compute_1_1graph_1_1frontend_1_1_detection_output_layer.xhtml#add9af3fe9c394a1994f926a6268260ed',1,'arm_compute::graph::frontend::DetectionOutputLayer::DetectionOutputLayer()'],['../namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ae1b0b91c003f871664a4e289977ef02e',1,'arm_compute::graph::DetectionOutputLayer()']]],
  ['detectionoutputlayercodetype',['DetectionOutputLayerCodeType',['../namespacearm__compute.xhtml#ad818ba0ecd4a87d8f1bb0d5b17f07830',1,'arm_compute']]],
  ['detectionoutputlayerinfo',['DetectionOutputLayerInfo',['../classarm__compute_1_1_detection_output_layer_info.xhtml',1,'DetectionOutputLayerInfo'],['../classarm__compute_1_1_detection_output_layer_info.xhtml#aba5c653899ad75de3548b6c60c08939c',1,'arm_compute::DetectionOutputLayerInfo::DetectionOutputLayerInfo()'],['../classarm__compute_1_1_detection_output_layer_info.xhtml#a13f922d9427581021eca1cc48faa431c',1,'arm_compute::DetectionOutputLayerInfo::DetectionOutputLayerInfo(int num_classes, bool share_location, DetectionOutputLayerCodeType code_type, int keep_top_k, float nms_threshold, int top_k=-1, int background_label_id=-1, float confidence_threshold=std::numeric_limits&lt; float &gt;::lowest(), bool variance_encoded_in_target=false, float eta=1)']]],
  ['detectionoutputlayernode',['DetectionOutputLayerNode',['../classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml',1,'DetectionOutputLayerNode'],['../classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml#a747fc2559359c5004e3034a30ec7579c',1,'arm_compute::graph::DetectionOutputLayerNode::DetectionOutputLayerNode()']]],
  ['detectionoutputlayernode_2ecpp',['DetectionOutputLayerNode.cpp',['../_detection_output_layer_node_8cpp.xhtml',1,'']]],
  ['detectionoutputlayernode_2eh',['DetectionOutputLayerNode.h',['../_detection_output_layer_node_8h.xhtml',1,'']]],
  ['detectionpostprocesslayer',['DetectionPostProcessLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_detection_post_process_layer.xhtml',1,'DetectionPostProcessLayer'],['../classarm__compute_1_1graph_1_1frontend_1_1_detection_post_process_layer.xhtml#a4c9b5e28705dc4e1b1b9418fc62bdedc',1,'arm_compute::graph::frontend::DetectionPostProcessLayer::DetectionPostProcessLayer()'],['../namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a0e5a1913b18dbe59dcbcf4e85148802d',1,'arm_compute::graph::DetectionPostProcessLayer()']]],
  ['detectionpostprocesslayer_2ecpp',['DetectionPostProcessLayer.cpp',['../_c_p_p_2_detection_post_process_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_detection_post_process_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['detectionpostprocesslayerinfo',['DetectionPostProcessLayerInfo',['../classarm__compute_1_1_detection_post_process_layer_info.xhtml',1,'DetectionPostProcessLayerInfo'],['../classarm__compute_1_1_detection_post_process_layer_info.xhtml#a6eaedc96f1e42852da9afbb0c33df4be',1,'arm_compute::DetectionPostProcessLayerInfo::DetectionPostProcessLayerInfo()'],['../classarm__compute_1_1_detection_post_process_layer_info.xhtml#ae90105aa70d36e539722ec84f94554cf',1,'arm_compute::DetectionPostProcessLayerInfo::DetectionPostProcessLayerInfo(unsigned int max_detections, unsigned int max_classes_per_detection, float nms_score_threshold, float iou_threshold, unsigned int num_classes, std::array&lt; float, 4 &gt; scales_values, bool use_regular_nms=false, unsigned int detection_per_class=100, bool dequantize_scores=true)']]],
  ['detectionpostprocesslayernode',['DetectionPostProcessLayerNode',['../classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml',1,'DetectionPostProcessLayerNode'],['../classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml#a5a5924785acf6009c34983a476fa3341',1,'arm_compute::graph::DetectionPostProcessLayerNode::DetectionPostProcessLayerNode()']]],
  ['detectionpostprocesslayernode_2ecpp',['DetectionPostProcessLayerNode.cpp',['../_detection_post_process_layer_node_8cpp.xhtml',1,'']]],
  ['detectionpostprocesslayernode_2eh',['DetectionPostProcessLayerNode.h',['../_detection_post_process_layer_node_8h.xhtml',1,'']]],
  ['detections_5fper_5fim',['detections_per_im',['../classarm__compute_1_1_box_n_m_s_limit_info.xhtml#af3ec399a9e0cea025fa9b37773a6eb13',1,'arm_compute::BoxNMSLimitInfo']]],
  ['detectionwindow',['DetectionWindow',['../struct_detection_window.xhtml',1,'DetectionWindow'],['../structarm__compute_1_1_detection_window.xhtml',1,'DetectionWindow'],['../src_2core_2_c_l_2cl__kernels_2_types_8h.xhtml#a978d6d1943577669ebbb535f9e4f284f',1,'DetectionWindow():&#160;types.h']]],
  ['device_5fsupports_5fextension',['device_supports_extension',['../namespacearm__compute.xhtml#a6c4a5ca34ebb51d4e2e119a110e4c8f0',1,'arm_compute']]],
  ['device_5fversion',['device_version',['../structarm__compute_1_1_c_l_device_options.xhtml#a00a31527219b80fd3cf88e02a46efa40',1,'arm_compute::CLDeviceOptions::device_version()'],['../classarm__compute_1_1_c_l_device.xhtml#a492b0f72e29930e8b74a866d5e21b31b',1,'arm_compute::CLDevice::device_version()']]],
  ['devicetype',['DeviceType',['../namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9',1,'arm_compute']]],
  ['dfs',['dfs',['../namespacearm__compute_1_1graph.xhtml#a14abdeb0f575e919aa6d586a95f23920',1,'arm_compute::graph']]],
  ['dft_2ecpp',['DFT.cpp',['../_c_p_p_2_d_f_t_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_d_f_t_8cpp.xhtml',1,'(Global Namespace)']]],
  ['dft_2eh',['DFT.h',['../_d_f_t_8h.xhtml',1,'']]],
  ['dft_5f1d',['dft_1d',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#afc02bc2a9b06db328e63c6bfbbdb23a8',1,'arm_compute::test::validation::reference::dft_1d(const SimpleTensor&lt; T &gt; &amp;src, FFTDirection direction)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a75345ce42cab379d55f2edf1b67ee4c2',1,'arm_compute::test::validation::reference::dft_1d(const SimpleTensor&lt; float &gt; &amp;src, FFTDirection direction)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a006b5f32fbc27508733e7ccc005b3fe1',1,'arm_compute::test::validation::reference::dft_1d(const SimpleTensor&lt; half &gt; &amp;src, FFTDirection direction)']]],
  ['dft_5f2d',['dft_2d',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#af7677c34292be2590038f7fe6e0a6de7',1,'arm_compute::test::validation::reference::dft_2d(const SimpleTensor&lt; T &gt; &amp;src, FFTDirection direction)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#af4053ac59fe39737f4c28329b56277d1',1,'arm_compute::test::validation::reference::dft_2d(const SimpleTensor&lt; float &gt; &amp;src, FFTDirection direction)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a52e3a7cfd0a9877a6a2fe72f864cd830',1,'arm_compute::test::validation::reference::dft_2d(const SimpleTensor&lt; half &gt; &amp;src, FFTDirection direction)']]],
  ['digit_5freverse_5findices',['digit_reverse_indices',['../namespacearm__compute_1_1helpers_1_1fft.xhtml#acf1aaf9a5a9f908f6df4f37ad76f8fcd',1,'arm_compute::helpers::fft']]],
  ['dilatedconvolutionlayer_2ecpp',['DilatedConvolutionLayer.cpp',['../_c_l_2_dilated_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_dilated_convolution_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['dilation',['dilation',['../structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a5159123bf7ffd6ecb44e7322a9b0492e',1,'arm_compute::experimental::dynamic_fusion::Conv2dDescriptor::dilation()'],['../structarm__compute_1_1_convolution_info.xhtml#a5159123bf7ffd6ecb44e7322a9b0492e',1,'arm_compute::ConvolutionInfo::dilation()'],['../structarm__compute_1_1_conv2d_info.xhtml#a5159123bf7ffd6ecb44e7322a9b0492e',1,'arm_compute::Conv2dInfo::dilation()'],['../structarm__compute_1_1_conv3d_info.xhtml#a883bafc097dfc9eb0a78b92154b759c4',1,'arm_compute::Conv3dInfo::dilation()'],['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#a5d4c902de99dd0a171d8407a20010093',1,'arm_compute::experimental::dynamic_fusion::Conv2dAttributes::dilation(const Size2D &amp;dilation)'],['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#a8f657bdf5b814d6e6d880698bc22a0e2',1,'arm_compute::experimental::dynamic_fusion::Conv2dAttributes::dilation() const']]],
  ['dimension',['Dimension',['../classarm__compute_1_1_window_1_1_dimension.xhtml',1,'Window::Dimension'],['../classarm__compute_1_1_window_1_1_dimension.xhtml#a2c532d398a5661ff04367252701fa3d4',1,'arm_compute::Window::Dimension::Dimension(int start=0, int end=1, int step=1)'],['../classarm__compute_1_1_window_1_1_dimension.xhtml#a3a4530d0f6701f6f2cf451f9ca52a864',1,'arm_compute::Window::Dimension::Dimension(const Dimension &amp;d)=default'],['../classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2',1,'arm_compute::ITensorInfo::dimension(size_t index) const =0'],['../classarm__compute_1_1_i_tensor_info.xhtml#ae3372a4569b4702a881b1606b0c144c4',1,'arm_compute::ITensorInfo::dimension(DataLayoutDimension dimension) const =0'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97',1,'arm_compute::SubTensorInfo::dimension(size_t index) const override'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a650247f9a828d1ef60135b01f8f77765',1,'arm_compute::SubTensorInfo::dimension(DataLayoutDimension dimension) const override'],['../classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97',1,'arm_compute::TensorInfo::dimension(size_t index) const override'],['../classarm__compute_1_1_tensor_info.xhtml#a650247f9a828d1ef60135b01f8f77765',1,'arm_compute::TensorInfo::dimension(DataLayoutDimension dimension) const override']]],
  ['dimensionroundingtype',['DimensionRoundingType',['../namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a',1,'arm_compute']]],
  ['dimensions',['Dimensions',['../classarm__compute_1_1_dimensions.xhtml',1,'Dimensions&lt; T &gt;'],['../classarm__compute_1_1_dimensions.xhtml#a669af0de951a474c4b443f7bc7c026e0',1,'arm_compute::Dimensions::Dimensions(Ts... dims)'],['../classarm__compute_1_1_dimensions.xhtml#a0d3c59537291735849c740364496a41c',1,'arm_compute::Dimensions::Dimensions(const Dimensions &amp;)=default'],['../classarm__compute_1_1_dimensions.xhtml#aa2c609345b3b6fa8da2486f75fff8ed8',1,'arm_compute::Dimensions::Dimensions(Dimensions &amp;&amp;)=default']]],
  ['dimensions_2eh',['Dimensions.h',['../_dimensions_8h.xhtml',1,'']]],
  ['dimensions_3c_20int_20_3e',['Dimensions&lt; int &gt;',['../classarm__compute_1_1_dimensions.xhtml',1,'arm_compute']]],
  ['dimensions_3c_20size_5ft_20_3e',['Dimensions&lt; size_t &gt;',['../classarm__compute_1_1_dimensions.xhtml',1,'arm_compute']]],
  ['dimensions_3c_20uint32_5ft_20_3e',['Dimensions&lt; uint32_t &gt;',['../classarm__compute_1_1_dimensions.xhtml',1,'arm_compute']]],
  ['dimv',['DimV',['../classarm__compute_1_1_window.xhtml#a92b721b1285e3bfc30c6739decc26fd4',1,'arm_compute::Window']]],
  ['dimw',['DimW',['../classarm__compute_1_1_window.xhtml#a60f2e7a76af978d4eb6be4ac6e8044d1',1,'arm_compute::Window']]],
  ['dimx',['DimX',['../classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d',1,'arm_compute::Window']]],
  ['dimy',['DimY',['../classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9',1,'arm_compute::Window']]],
  ['dimz',['DimZ',['../classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc',1,'arm_compute::Window']]],
  ['direct',['direct',['../structarm__gemm_1_1_indirect_output_arg.xhtml#a51afd78a4e9488e0069273f70738d9dd',1,'arm_gemm::IndirectOutputArg::direct()'],['../structarm__gemm_1_1_indirect_input_arg.xhtml#a16710682e159c0b996196e1ecb830340',1,'arm_gemm::IndirectInputArg::direct()'],['../structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_invoke.xhtml#a81e57f3556f9e9ef13ac6f76de7e2f8e',1,'arm_conv::depthwise::depthwise_depthfirst::Invoke::direct()'],['../structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_invoke_3_01_t_input_00_01_t_weight_00_1463cc7f15aa576f94b74f6b8930f46d.xhtml#ae092015cae6322ea2dfb81eeb23f5bb7',1,'arm_conv::depthwise::depthwise_depthfirst::Invoke&lt; TInput, TWeight, TOutput, TAccum, arm_gemm::Requantize32 &gt;::direct()'],['../namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517dafd1dd0c603be8170f9eae0be9f2f6afb',1,'arm_compute::graph::Direct()'],['../namespacearm__compute.xhtml#a6df16a1b3b5af590a14f55e983d3428ea1ea328a644e627283a35716a54108248',1,'arm_compute::DIRECT()'],['../namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76',1,'arm_compute::DIRECT()'],['../namespacearm__compute.xhtml#a6f66ec167e002c7c0549ff6c8a8939ada4c5d06b02c97731aaa976179c62dcf76',1,'arm_compute::DIRECT()']]],
  ['direct_5fconvolution_2ecl',['direct_convolution.cl',['../nchw_2direct__convolution_8cl.xhtml',1,'(Global Namespace)'],['../nhwc_2direct__convolution_8cl.xhtml',1,'(Global Namespace)']]],
  ['direct_5fconvolution3d_2ecl',['direct_convolution3d.cl',['../direct__convolution3d_8cl.xhtml',1,'']]],
  ['direct_5fconvolution3d_5fndhwc',['direct_convolution3d_ndhwc',['../direct__convolution3d_8cl.xhtml#ad0c87478355e0870d5b29497a0854d8f',1,'direct_convolution3d.cl']]],
  ['direct_5fconvolution_5fnchw',['direct_convolution_nchw',['../nchw_2direct__convolution_8cl.xhtml#ae68229a91bb627bad0219c556c0f9e32',1,'direct_convolution.cl']]],
  ['direct_5fconvolution_5fnhwc',['direct_convolution_nhwc',['../nhwc_2direct__convolution_8cl.xhtml#a5c798221b21e54e1e4eb1ce006310d98',1,'direct_convolution.cl']]],
  ['directconv2d_2ecpp',['DirectConv2d.cpp',['../_direct_conv2d_8cpp.xhtml',1,'']]],
  ['directconv2dkernel',['DirectConv2dKernel',['../structarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv2d_kernel_1_1_direct_conv2d_kernel.xhtml',1,'arm_compute::cpu::kernels::CpuDirectConv2dKernel']]],
  ['directconv3d_5ffloat_5fneon_5fndhwc',['directconv3d_float_neon_ndhwc',['../namespacearm__compute_1_1cpu.xhtml#afb624fed36c03d8e2aed044647a36900',1,'arm_compute::cpu']]],
  ['directconv3d_5fquantized_5fneon_5fndhwc',['directconv3d_quantized_neon_ndhwc',['../namespacearm__compute_1_1cpu.xhtml#a5332a2bdbe6989559614f8baff0b0df4',1,'arm_compute::cpu']]],
  ['directconv3dkernel',['DirectConv3dKernel',['../structarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv3d_kernel_1_1_direct_conv3d_kernel.xhtml',1,'arm_compute::cpu::kernels::CpuDirectConv3dKernel']]],
  ['directconvcomputekernelinfo',['DirectConvComputeKernelInfo',['../structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml',1,'arm_compute']]],
  ['directconvolutionlayer_2ecpp',['DirectConvolutionLayer.cpp',['../_c_l_2_direct_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_direct_convolution_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['directconvolutionlayeroutputstagekernelinfo',['DirectConvolutionLayerOutputStageKernelInfo',['../structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml',1,'arm_compute']]],
  ['direction',['direction',['../structarm__compute_1_1_f_f_t1_d_info.xhtml#a95156d4d94b2a8b7c429e05e546dc2c1',1,'arm_compute::FFT1DInfo::direction()'],['../structarm__compute_1_1_f_f_t2_d_info.xhtml#a95156d4d94b2a8b7c429e05e546dc2c1',1,'arm_compute::FFT2DInfo::direction()']]],
  ['directkerneltype',['DirectKernelType',['../classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy.xhtml#a74bbe6ac464d521bf9b2750799ea9ebc',1,'arm_conv::depthwise::DepthwiseDepthfirstStrategy']]],
  ['disabled',['DISABLED',['../classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b',1,'arm_compute::test::framework::TestCaseFactory::DISABLED()'],['../structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b',1,'arm_compute::test::framework::TestResult::DISABLED()'],['../namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241',1,'arm_compute::graph::Disabled()'],['../namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b',1,'arm_compute::test::framework::DISABLED()']]],
  ['disabled_5fdata_5ftest_5fcase',['DISABLED_DATA_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a2d0deff95a1325348da7d2a945982b59',1,'Macros.h']]],
  ['disabled_5ffixture_5fdata_5ftest_5fcase',['DISABLED_FIXTURE_DATA_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a7fb6c2e21b15474448e1f50d8acc854b',1,'Macros.h']]],
  ['disabled_5ffixture_5fdata_5ftest_5fcase_5fnew',['DISABLED_FIXTURE_DATA_TEST_CASE_NEW',['../tests_2framework_2_macros_8h.xhtml#aad0bc347eda11a18ce71dda6b5a3170c',1,'Macros.h']]],
  ['disabled_5ffixture_5ftest_5fcase',['DISABLED_FIXTURE_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a55d3bef40f09e56dc87e8f351a275385',1,'Macros.h']]],
  ['disabled_5fregister_5ffixture_5fdata_5ftest_5fcase',['DISABLED_REGISTER_FIXTURE_DATA_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a934ee9a7581b65523fd180c96b159fb8',1,'Macros.h']]],
  ['disabled_5fregister_5ffixture_5ftest_5fcase',['DISABLED_REGISTER_FIXTURE_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a55d2ae62838572e7be1c87128d02b493',1,'Macros.h']]],
  ['disabled_5ftest_5fcase',['DISABLED_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a89747ae30c60b9f052fbf9707c8301a9',1,'Macros.h']]],
  ['distribution',['distribution',['../class_gemm_tuner_1_1_g_e_m_m_config_distribution.xhtml#a0bcb25e557abee63ef4a75e0d639fdb0',1,'GemmTuner.GEMMConfigDistribution.distribution()'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a756aeab6b5c217b924c3cc70222c975d',1,'arm_compute::test::validation::distribution()']]],
  ['distribution_5fb',['distribution_b',['../namespacearm__compute_1_1test_1_1validation.xhtml#aae1ff03a5732814dd9ecd75e0de7e72f',1,'arm_compute::test::validation']]],
  ['div',['Div',['../namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a43d11850893d2fe84a1e618121c1cc0a',1,'arm_compute::graph::Div()'],['../elementwise__operation__quantized_8cl.xhtml#a49f6fecffd852cda3b0ece53dcbb2b87',1,'DIV():&#160;elementwise_operation_quantized.cl'],['../namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646',1,'arm_compute::DIV()']]],
  ['div_2eh',['div.h',['../div_8h.xhtml',1,'']]],
  ['div_5fceil',['DIV_CEIL',['../namespacearm__compute.xhtml#acac1575c0edd329ceb4a54d9fe8dcb08',1,'arm_compute']]],
  ['div_5fop',['DIV_OP',['../nchw_2normalization__layer_8cl.xhtml#a5db17889d824975fefb2ce2f4690637f',1,'DIV_OP():&#160;normalization_layer.cl'],['../nchw_2pooling__layer_8cl.xhtml#a5db17889d824975fefb2ce2f4690637f',1,'DIV_OP():&#160;pooling_layer.cl'],['../nhwc_2normalization__layer_8cl.xhtml#a5db17889d824975fefb2ce2f4690637f',1,'DIV_OP():&#160;normalization_layer.cl'],['../nhwc_2pooling__layer_8cl.xhtml#a5db17889d824975fefb2ce2f4690637f',1,'DIV_OP():&#160;pooling_layer.cl']]],
  ['dl',['dl',['../structarm__compute_1_1cpu_1_1kernels_1_1_data_type_data_layout_i_s_a_selector_data.xhtml#a6f725602583bcad27d0d2cad1e871128',1,'arm_compute::cpu::kernels::DataTypeDataLayoutISASelectorData::dl()'],['../structarm__compute_1_1cpu_1_1kernels_1_1_pool_data_type_i_s_a_selector_data.xhtml#a6f725602583bcad27d0d2cad1e871128',1,'arm_compute::cpu::kernels::PoolDataTypeISASelectorData::dl()'],['../_n_e_fuse_batch_normalization_kernel_8cpp.xhtml#a6f725602583bcad27d0d2cad1e871128',1,'dl():&#160;NEFuseBatchNormalizationKernel.cpp']]],
  ['do_5fcycle_5festimate',['do_cycle_estimate',['../structarm__gemm_1_1_gemm_implementation.xhtml#a5971607f96fa2af9922f71b730139d71',1,'arm_gemm::GemmImplementation::do_cycle_estimate()'],['../structarm__gemm_1_1_gemm_implementation_3_01_top_00_01_tret_00_01_nothing_01_4.xhtml#ac5d1df706ddf4a03b2906a4fadec045a',1,'arm_gemm::GemmImplementation&lt; Top, Tret, Nothing &gt;::do_cycle_estimate()']]],
  ['do_5finstantiate',['do_instantiate',['../structarm__gemm_1_1_gemm_implementation.xhtml#ac5b4f98c3c427b056b137dca65169eb9',1,'arm_gemm::GemmImplementation::do_instantiate()'],['../structarm__gemm_1_1_gemm_implementation_3_01_top_00_01_tret_00_01_nothing_01_4.xhtml#a5a95bc71fa8a96ca2d3f4001369dea53',1,'arm_gemm::GemmImplementation&lt; Top, Tret, Nothing &gt;::do_instantiate()']]],
  ['do_5fis_5fsupported',['do_is_supported',['../structarm__gemm_1_1_gemm_implementation.xhtml#aee0ab8a77c759d5e65f3987ff9fabdea',1,'arm_gemm::GemmImplementation::do_is_supported()'],['../structarm__gemm_1_1_gemm_implementation_3_01_top_00_01_tret_00_01_nothing_01_4.xhtml#aa3af9748daae0117fe4066ae1b3354a0',1,'arm_gemm::GemmImplementation&lt; Top, Tret, Nothing &gt;::do_is_supported()']]],
  ['do_5frun',['do_run',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a90b4bc2c4bae857bc3536f4a18e29772',1,'arm_compute::test::framework::TestCase::do_run()'],['../classarm__compute_1_1utils_1_1_graph_validate_example.xhtml#ab539da12e42174ad1a667f75b77a65c1',1,'arm_compute::utils::GraphValidateExample::do_run()'],['../classarm__compute_1_1utils_1_1_validate_example.xhtml#a90b4bc2c4bae857bc3536f4a18e29772',1,'arm_compute::utils::ValidateExample::do_run()'],['../classarm__compute_1_1utils_1_1_example.xhtml#a90b4bc2c4bae857bc3536f4a18e29772',1,'arm_compute::utils::Example::do_run()']]],
  ['do_5fsetup',['do_setup',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a5bf6aaa253bb8a13013294d33e168c45',1,'arm_compute::test::framework::TestCase::do_setup()'],['../classarm__compute_1_1utils_1_1_graph_validate_example.xhtml#aca0c669baad0b2ff3c1bdb38fdd77185',1,'arm_compute::utils::GraphValidateExample::do_setup()'],['../classarm__compute_1_1utils_1_1_validate_example.xhtml#ae678db013a8393ad2799a7de8b2b9304',1,'arm_compute::utils::ValidateExample::do_setup()'],['../classarm__compute_1_1utils_1_1_example.xhtml#ae678db013a8393ad2799a7de8b2b9304',1,'arm_compute::utils::Example::do_setup()']]],
  ['do_5fsync',['do_sync',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a197634795f22ff5c0d7789f5ccb3f9bd',1,'arm_compute::test::framework::TestCase']]],
  ['do_5fteardown',['do_teardown',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a9b3acd6be09cf86066760caaa89f7be5',1,'arm_compute::test::framework::TestCase::do_teardown()'],['../classarm__compute_1_1utils_1_1_graph_validate_example.xhtml#ad661ffd89241c1465c142b9d1f22f3d3',1,'arm_compute::utils::GraphValidateExample::do_teardown()'],['../classarm__compute_1_1utils_1_1_validate_example.xhtml#a9b3acd6be09cf86066760caaa89f7be5',1,'arm_compute::utils::ValidateExample::do_teardown()'],['../classarm__compute_1_1utils_1_1_example.xhtml#a9b3acd6be09cf86066760caaa89f7be5',1,'arm_compute::utils::Example::do_teardown()']]],
  ['do_5fvalidate',['do_validate',['../classarm__compute_1_1utils_1_1_validate_example.xhtml#a69a49661f6327627d02e346dbb844665',1,'arm_compute::utils::ValidateExample']]],
  ['dot',['dot',['../structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml#aa9a6bf94935dd333e9337fdccc119616',1,'arm_compute::cpuinfo::CpuIsaInfo']]],
  ['dot8_5facc_5fsupported',['dot8_acc_supported',['../namespacearm__compute.xhtml#a4878daab91c6d7173de20283766e0c2c',1,'arm_compute']]],
  ['dot8_5fsupported',['dot8_supported',['../namespacearm__compute.xhtml#ac07e02c0066cf540a5a2665fa7d54934',1,'arm_compute']]],
  ['dot_5fproduct10_5finteger8',['DOT_PRODUCT10_INTEGER8',['../tile__helpers_8h.xhtml#aa05d065b702d093b92afe70d6fe5a371',1,'tile_helpers.h']]],
  ['dot_5fproduct11_5finteger8',['DOT_PRODUCT11_INTEGER8',['../tile__helpers_8h.xhtml#a89b86f72e9dcf2daad3a5acde76204a3',1,'tile_helpers.h']]],
  ['dot_5fproduct12_5finteger8',['DOT_PRODUCT12_INTEGER8',['../tile__helpers_8h.xhtml#ad46e619f5a1bc69b6c5b4a60c23198af',1,'tile_helpers.h']]],
  ['dot_5fproduct13_5finteger8',['DOT_PRODUCT13_INTEGER8',['../tile__helpers_8h.xhtml#a2bfabbbfd2e2b4bbaa93de555e0792d7',1,'tile_helpers.h']]],
  ['dot_5fproduct14_5finteger8',['DOT_PRODUCT14_INTEGER8',['../tile__helpers_8h.xhtml#aea8af75114d0f9f5b5b2b77376313720',1,'tile_helpers.h']]],
  ['dot_5fproduct15_5finteger8',['DOT_PRODUCT15_INTEGER8',['../tile__helpers_8h.xhtml#ae2593e2110d9971621ddda3e4f61a7ee',1,'tile_helpers.h']]],
  ['dot_5fproduct16_5finteger8',['DOT_PRODUCT16_INTEGER8',['../tile__helpers_8h.xhtml#a47274fce9533dc026a154eac74259f31',1,'tile_helpers.h']]],
  ['dot_5fproduct1_5finteger8',['DOT_PRODUCT1_INTEGER8',['../tile__helpers_8h.xhtml#a0f53d2ca2e4064e036d02c840ac24e07',1,'tile_helpers.h']]],
  ['dot_5fproduct2_5finteger8',['DOT_PRODUCT2_INTEGER8',['../tile__helpers_8h.xhtml#a67b73cd99bac1d74128f6601ca4074ec',1,'tile_helpers.h']]],
  ['dot_5fproduct3_5finteger8',['DOT_PRODUCT3_INTEGER8',['../tile__helpers_8h.xhtml#aadc3bfc3d71c86b04eed06001a51a1f9',1,'tile_helpers.h']]],
  ['dot_5fproduct4_5finteger8',['DOT_PRODUCT4_INTEGER8',['../tile__helpers_8h.xhtml#a43dcca5c53dde0299bb551a4cfcc9284',1,'tile_helpers.h']]],
  ['dot_5fproduct5_5finteger8',['DOT_PRODUCT5_INTEGER8',['../tile__helpers_8h.xhtml#ad7f7a6c98b6fa22296c0287757b00fcb',1,'tile_helpers.h']]],
  ['dot_5fproduct6_5finteger8',['DOT_PRODUCT6_INTEGER8',['../tile__helpers_8h.xhtml#a0a67f50cb1184ee9881636c77c1e4973',1,'tile_helpers.h']]],
  ['dot_5fproduct7_5finteger8',['DOT_PRODUCT7_INTEGER8',['../tile__helpers_8h.xhtml#a61904a1a8ce88a26f6aa6512bc730a13',1,'tile_helpers.h']]],
  ['dot_5fproduct8_5finteger8',['DOT_PRODUCT8_INTEGER8',['../tile__helpers_8h.xhtml#a3d4d250702ba77dd758b9d98fc81357a',1,'tile_helpers.h']]],
  ['dot_5fproduct9_5finteger8',['DOT_PRODUCT9_INTEGER8',['../tile__helpers_8h.xhtml#a904e62f5650d6a0372598e4de9a51938',1,'tile_helpers.h']]],
  ['dot_5fproduct_5finteger8',['DOT_PRODUCT_INTEGER8',['../tile__helpers_8h.xhtml#a517e852b82d5acb73cb5735194a606d7',1,'tile_helpers.h']]],
  ['dot_5fproduct_5finteger8_5fstr',['DOT_PRODUCT_INTEGER8_STR',['../tile__helpers_8h.xhtml#acb378f5ea819c225d16b792ec1086190',1,'tile_helpers.h']]],
  ['dotgraphprinter',['DotGraphPrinter',['../classarm__compute_1_1graph_1_1_dot_graph_printer.xhtml',1,'arm_compute::graph']]],
  ['dotgraphprinter_2ecpp',['DotGraphPrinter.cpp',['../_dot_graph_printer_8cpp.xhtml',1,'']]],
  ['dotgraphprinter_2eh',['DotGraphPrinter.h',['../_dot_graph_printer_8h.xhtml',1,'']]],
  ['dotgraphvisitor',['DotGraphVisitor',['../classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml',1,'DotGraphVisitor'],['../classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#aba079420016162d60cc142401885db44',1,'arm_compute::graph::DotGraphVisitor::DotGraphVisitor()']]],
  ['double1',['double1',['../src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#adc30a7690418156dd429314c58634328',1,'helpers.h']]],
  ['draw_5fdetection_5frectangle',['draw_detection_rectangle',['../namespacearm__compute_1_1utils.xhtml#ad1b5373f466a3945e1f0ef1c9943c357',1,'arm_compute::utils']]],
  ['dst',['dst',['../namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4',1,'arm_compute::test::validation']]],
  ['dst_5fdt',['dst_dt',['../structarm__compute_1_1cpu_1_1kernels_1_1_cast_data_type_i_s_a_selector_data.xhtml#a9fad2c14662f4f75f59b2c0cc0bc525a',1,'arm_compute::cpu::kernels::CastDataTypeISASelectorData']]],
  ['dst_5fops',['dst_ops',['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af8a6f5f77bc64f863bbd2ff194ba9696',1,'arm_compute::experimental::dynamic_fusion::DependencyGraph']]],
  ['dst_5fops_5ffrom_5ftensor',['dst_ops_from_tensor',['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a02db2fef0720798c881f6a929b765369',1,'arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_ops_from_tensor(Id tensor) const'],['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aa6cf5d3ba596288789eb3f85b87f97ba',1,'arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_ops_from_tensor(TensorId tensor) const']]],
  ['dst_5fref',['dst_ref',['../namespacearm__compute_1_1test_1_1validation.xhtml#a4ec422f21ff26135c1d63dc00729cdbd',1,'arm_compute::test::validation']]],
  ['dst_5fshape',['dst_shape',['../namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2',1,'arm_compute::test::validation']]],
  ['dst_5ftarget',['dst_target',['../namespacearm__compute_1_1test_1_1validation.xhtml#a1c74930b174776b4ef6f1abce3ba2a85',1,'arm_compute::test::validation']]],
  ['dst_5ftensors',['dst_tensors',['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e',1,'arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_tensors(Id op) const'],['../classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a3ae00f571426a9c55804b0591646b396',1,'arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_tensors() const']]],
  ['dt',['DT',['../classarm__compute_1_1utils_1_1random_1_1_ranged_uniform_distribution.xhtml#a9866a921ffb2f3d3d7345b55d1a09c73',1,'arm_compute::utils::random::RangedUniformDistribution::DT()'],['../structarm__compute_1_1cpu_1_1kernels_1_1_data_type_i_s_a_selector_data.xhtml#aa36901a4911e511f25f42e191df3526d',1,'arm_compute::cpu::kernels::DataTypeISASelectorData::dt()'],['../structarm__compute_1_1cpu_1_1kernels_1_1_data_type_data_layout_i_s_a_selector_data.xhtml#aa36901a4911e511f25f42e191df3526d',1,'arm_compute::cpu::kernels::DataTypeDataLayoutISASelectorData::dt()'],['../structarm__compute_1_1cpu_1_1kernels_1_1_pool_data_type_i_s_a_selector_data.xhtml#aa36901a4911e511f25f42e191df3526d',1,'arm_compute::cpu::kernels::PoolDataTypeISASelectorData::dt()'],['../structarm__compute_1_1cpu_1_1kernels_1_1_elementwise_data_type_i_s_a_selector_data.xhtml#aa36901a4911e511f25f42e191df3526d',1,'arm_compute::cpu::kernels::ElementwiseDataTypeISASelectorData::dt()'],['../structarm__compute_1_1cpu_1_1kernels_1_1_activation_data_type_i_s_a_selector_data.xhtml#aa36901a4911e511f25f42e191df3526d',1,'arm_compute::cpu::kernels::ActivationDataTypeISASelectorData::dt()'],['../structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_data_type_i_s_a_selector_data.xhtml#aa36901a4911e511f25f42e191df3526d',1,'arm_compute::cpu::kernels::CpuAddKernelDataTypeISASelectorData::dt()'],['../structarm__compute_1_1cpu_1_1kernels_1_1_scale_kernel_data_type_i_s_a_selector_data.xhtml#aa36901a4911e511f25f42e191df3526d',1,'arm_compute::cpu::kernels::ScaleKernelDataTypeISASelectorData::dt()'],['../_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d',1,'dt():&#160;NEBatchNormalizationLayerKernel.cpp'],['../_n_e_bounding_box_transform_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d',1,'dt():&#160;NEBoundingBoxTransformKernel.cpp'],['../_n_e_crop_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d',1,'dt():&#160;NECropKernel.cpp'],['../_n_e_fuse_batch_normalization_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d',1,'dt():&#160;NEFuseBatchNormalizationKernel.cpp'],['../_n_e_generate_proposals_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d',1,'dt():&#160;NEGenerateProposalsLayerKernel.cpp'],['../_n_e_instance_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d',1,'dt():&#160;NEInstanceNormalizationLayerKernel.cpp'],['../_n_e_mean_std_dev_normalization_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d',1,'dt():&#160;NEMeanStdDevNormalizationKernel.cpp'],['../_n_e_range_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d',1,'dt():&#160;NERangeKernel.cpp'],['../_n_e_r_o_i_align_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d',1,'dt():&#160;NEROIAlignLayerKernel.cpp'],['../_n_e_select_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d',1,'dt():&#160;NESelectKernel.cpp']]],
  ['dt_5ff16',['DT_F16',['../classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_config_array.xhtml#a07c7bc621ed3cb8d0c7dfee6fee000f7',1,'arm_compute::cl_direct_conv::ClDirectConvConfigArray::DT_F16()'],['../classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_c_l_g_e_m_m_config_array.xhtml#a07c7bc621ed3cb8d0c7dfee6fee000f7',1,'arm_compute::opencl::kernels::gemm::CLGEMMConfigArray::DT_F16()']]],
  ['dt_5ff32',['DT_F32',['../classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_config_array.xhtml#a16f35b735dfa5eeee03f6be452559a97',1,'arm_compute::cl_direct_conv::ClDirectConvConfigArray::DT_F32()'],['../classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_c_l_g_e_m_m_config_array.xhtml#a16f35b735dfa5eeee03f6be452559a97',1,'arm_compute::opencl::kernels::gemm::CLGEMMConfigArray::DT_F32()']]],
  ['dt_5fint8',['DT_INT8',['../classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_config_array.xhtml#a314438cbe63e89df467e8505f2ffb513',1,'arm_compute::cl_direct_conv::ClDirectConvConfigArray::DT_INT8()'],['../classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_c_l_g_e_m_m_config_array.xhtml#a314438cbe63e89df467e8505f2ffb513',1,'arm_compute::opencl::kernels::gemm::CLGEMMConfigArray::DT_INT8()']]],
  ['dummy',['dummy',['../structarm__compute_1_1detail_1_1dummy.xhtml',1,'dummy&lt; T, S &gt;'],['../structarm__compute_1_1detail_1_1dummy.xhtml#a9459460908c5314f6ea5333a397fea5b',1,'arm_compute::detail::dummy::dummy()'],['../namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16abcf036b6f33e182d4705f4f5b1af13ac',1,'arm_compute::graph::Dummy()']]],
  ['dummyaccessor',['DummyAccessor',['../classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml',1,'DummyAccessor'],['../classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml#ac5ae9597ba20e5581726743fe7c154b5',1,'arm_compute::graph_utils::DummyAccessor::DummyAccessor(unsigned int maximum=1)'],['../classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml#a4a48cd865f33e4a907338c42d652d80f',1,'arm_compute::graph_utils::DummyAccessor::DummyAccessor(DummyAccessor &amp;&amp;)=default']]],
  ['dummylayer',['DummyLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_dummy_layer.xhtml',1,'DummyLayer'],['../classarm__compute_1_1graph_1_1frontend_1_1_dummy_layer.xhtml#a3ec4fedf20ceaf0c7bc62be065150f40',1,'arm_compute::graph::frontend::DummyLayer::DummyLayer()']]],
  ['dummynode',['DummyNode',['../classarm__compute_1_1graph_1_1_dummy_node.xhtml',1,'DummyNode'],['../classarm__compute_1_1graph_1_1_dummy_node.xhtml#aefa24b710045e042672a5e887c3efaef',1,'arm_compute::graph::DummyNode::DummyNode()']]],
  ['dummynode_2ecpp',['DummyNode.cpp',['../_dummy_node_8cpp.xhtml',1,'']]],
  ['dummynode_2eh',['DummyNode.h',['../_dummy_node_8h.xhtml',1,'']]],
  ['dump_5fjson',['dump_json',['../namespace_gemm_tuner.xhtml#a70ce377ea8b5202ced8079196c6841ed',1,'GemmTuner']]],
  ['dup_5fn_2eh',['dup_n.h',['../dup__n_8h.xhtml',1,'']]],
  ['duplicate',['duplicate',['../classarm__compute_1_1_blob_memory_pool.xhtml#a1854bcee41d35bbd99a3ff7b274e3819',1,'arm_compute::BlobMemoryPool::duplicate()'],['../classarm__compute_1_1_i_memory_pool.xhtml#af6c6c5e675fab42e482d11d02df2a79e',1,'arm_compute::IMemoryPool::duplicate()'],['../classarm__compute_1_1_offset_memory_pool.xhtml#a1854bcee41d35bbd99a3ff7b274e3819',1,'arm_compute::OffsetMemoryPool::duplicate()']]],
  ['dwc_5fnative_5ffp_5fnhwc_2ecl',['dwc_native_fp_nhwc.cl',['../dwc__native__fp__nhwc_8cl.xhtml',1,'']]],
  ['dwc_5fnative_5fquantized_5fnhwc_2ecl',['dwc_native_quantized_nhwc.cl',['../dwc__native__quantized__nhwc_8cl.xhtml',1,'']]],
  ['dwccomputekernelinfo',['DWCComputeKernelInfo',['../structarm__compute_1_1_d_w_c_compute_kernel_info.xhtml',1,'arm_compute']]],
  ['dynamic',['DYNAMIC',['../classarm__compute_1_1_i_scheduler.xhtml#ad3ab921e075d1edd827faf95870aa808a0fcc90da4811c877ba9f9c12f7d60bc9',1,'arm_compute::IScheduler']]],
  ['dynamicfusiongpuconv2dfixture',['DynamicFusionGpuConv2dFixture',['../namespacearm__compute_1_1test_1_1validation.xhtml#af6bc52d53c62d2063bdd8307ed9a4a05',1,'arm_compute::test::validation']]],
  ['dynamictensor_2ecpp',['DynamicTensor.cpp',['../_c_l_2_u_n_i_t_2_dynamic_tensor_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_u_n_i_t_2_dynamic_tensor_8cpp.xhtml',1,'(Global Namespace)']]],
  ['dynamic_20fusion_20example_3a_20conv2d_20_2b_20elementwise_20addition_20_28opencl_20target_29',['Dynamic Fusion Example: Conv2d + Elementwise Addition (OpenCL target)',['../example_dynamic_fusion_cl_conv2d_elementwise_add.xhtml',1,'']]]
];
