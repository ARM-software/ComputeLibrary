<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/dynamic_fusion/gpu/Integration.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_integration_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Integration.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_integration_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h.xhtml">arm_compute/core/CL/CLKernelLibrary.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_workload_runtime_8h.xhtml">arm_compute/dynamic_fusion/runtime/gpu/cl/ClWorkloadRuntime.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_operator_attributes_8h.xhtml">arm_compute/dynamic_fusion/sketch/OperatorAttributes.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_workload_sketch_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/GpuWorkloadSketch.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_conv2d_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/operators/GpuConv2d.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_add_8h.xhtml">src/gpu/cl/operators/ClAdd.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_conv2d_8h.xhtml">src/gpu/cl/operators/ClConv2d.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_accessor_8h.xhtml">tests/CL/CLAccessor.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_asserts_8h.xhtml">tests/framework/Asserts.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_macros_8h.xhtml">tests/framework/Macros.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2validation_2_c_l_2_u_n_i_t_2dynamic__fusion_2_utils_8h.xhtml">tests/validation/CL/UNIT/dynamic_fusion/Utils.h</a>&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validation_8h.xhtml">tests/validation/Validation.h</a>&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_convolution_layer_8h.xhtml">tests/validation/reference/ConvolutionLayer.h</a>&quot;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_elementwise_operations_8h.xhtml">tests/validation/reference/ElementwiseOperations.h</a>&quot;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_permute_8h.xhtml">tests/validation/reference/Permute.h</a>&quot;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_ASSERTS_ENABLED</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_simple_tensor_printer_8h.xhtml">tests/SimpleTensorPrinter.h</a>&quot;</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_ASSERTS_ENABLED */</span><span class="preprocessor"></span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1utils.xhtml">arm_compute::test::validation::utils</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">namespace </span>validation</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(CL)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(INTEGRATION)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(DYNAMIC_FUSION)</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#acfb6e71b954dc5703d74e6c10f774dd3">   61</a></span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a846b2e70d2ba2180ccb81045c88b8409">TEST_CASE</a>(Conv2d, framework::<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>::ALL)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">/* Computation:</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * out = conv2d1x1(direct_conv)(input, weights, bias)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">default_reinit</a>();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>      = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>    = <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_input_shape  = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(384, 12, 12);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_weight_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(384, 1, 1, 16);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_dst_shape    = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(16, 12, 12);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">// Create a new workload sketch</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">auto</span>              cl_compile_ctx = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a>();</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">auto</span>              gpu_ctx        = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a>{ &amp;cl_compile_ctx };</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> sketch{ &amp;gpu_ctx };</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">// Fuse conv2d</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">Conv2dAttributes</a> conv2d_attr{};</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">auto</span>             <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>  = sketch.create_tensor_info(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">auto</span>             weight_info = sketch.create_tensor_info(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(t_weight_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">auto</span>             dst_info    = sketch.create_tensor_info();</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a99d8b244629172d1bcf7d3098894ad6d">GpuConv2d::create_op</a>(sketch, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>, &amp;weight_info, <span class="keyword">nullptr</span>, &amp;dst_info, conv2d_attr);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Configure runtime</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml">ClWorkloadRuntime</a> runtime;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a8665c744767b2ab05d269ef0980ff3aa">configure</a>(sketch);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// (Important) Allocate auxiliary tensor memory if there are any</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// Instead of using ACL allocated memory, the user can choose to import memory into the tensors</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;data : runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a0417d9034e569939abfc3306228fc849">get_auxiliary_tensors</a>())</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>     *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>      = data.first;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> aux_mem_req = data.second;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        tensor-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(*data.first-&gt;info(), aux_mem_req.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3afda29223eeda35afd21a6c5e121ba2">alignment</a>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        tensor-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>(); <span class="comment">// Use ACL allocated memory</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="comment">// auto buf = cl::Buffer();</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment">// tensor-&gt;allocator()-&gt;import_memory(buf);  // Or, import external memory</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    }</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="comment">// Construct user tensors</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_input{};</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_weight{};</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_dst{};</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// Initialize user tensors</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    t_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    t_weight.allocator()-&gt;init(weight_info);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    t_dst.allocator()-&gt;init(dst_info);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">// Allocate and fill user tensors</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="comment">// Instead of using ACL allocator, the user can choose to import memory into the tensors</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    t_input.allocator()-&gt;allocate();</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    t_weight.allocator()-&gt;allocate();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    t_dst.allocator()-&gt;allocate();</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_input), 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_weight), 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// Run runtime</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a1eacb2b8ed3b14e66998a37c1decefc2">run</a>({ &amp;t_input, &amp;t_weight, &amp;t_dst });</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// Create reference</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_input{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a> };</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_weight{ t_weight_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), DataLayout::NHWC };</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_bias_placeholder{ t_dst_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), DataLayout::NHWC };</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment">// Fill reference</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    fill&lt;float&gt;(ref_t_input, 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    fill&lt;float&gt;(ref_t_weight, 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">auto</span> ref_t_input_nchw            = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_t_input, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">auto</span> ref_t_weight_nchw           = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_t_weight, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">auto</span> ref_t_bias_placeholder_nchw = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_t_bias_placeholder, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">auto</span> t_dst_shape_nchw            = t_dst_shape;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">permute</a>(t_dst_shape_nchw, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> legacy_pad_stride(conv2d_attr.stride().x(), conv2d_attr.stride().y(), conv2d_attr.pad().left, conv2d_attr.pad().right, conv2d_attr.pad().top, conv2d_attr.pad().bottom,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                    <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a>{});</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">auto</span>       ref_t_dst_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a06499781c05df8148544ecffbd6b7192">reference::convolution_layer</a>(ref_t_input_nchw, ref_t_weight_nchw, ref_t_bias_placeholder_nchw, t_dst_shape_nchw, legacy_pad_stride, conv2d_attr.dilation());</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_t_dst      = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_t_dst_nchw, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance&lt;float&gt;</a> <a class="code" href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a>(0.001f); <span class="comment">/**&lt; Tolerance value for comparing reference&#39;s output against implementation&#39;s output for floating point data types */</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_dst), ref_t_dst_nchw, tolerance_f32);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;}</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(Invalid_Fusion_Should_Fail)</div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e4b859e2b12a827b4c239703ebafac6">  147</a></span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a846b2e70d2ba2180ccb81045c88b8409">TEST_CASE</a>(Multiple_Complex_Ops_0, framework::<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>::ALL)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="comment">/* Computation:</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     * out = conv2d(conv2d(l0_input, l0_weight), l1_weight)</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">default_reinit</a>();</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>      = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>    = <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_input_shape  = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(384, 12, 12);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_weight_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(384, 1, 1, 16);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keyword">auto</span>       t_input_info   = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keyword">auto</span>       t_weight_info  = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(t_weight_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keyword">auto</span>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a>     = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>();</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">Conv2dAttributes</a> conv2d_attr{};</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// Create a new workload sketch</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keyword">auto</span>              cl_compile_ctx = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a>();</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keyword">auto</span>              gpu_ctx        = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a>{ &amp;cl_compile_ctx };</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> sketch{ &amp;gpu_ctx };</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="comment">// Create tensor infos</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>  = sketch.create_tensor_info(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keyword">auto</span> weight_info = sketch.create_tensor_info(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(t_weight_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">auto</span> dst_info    = sketch.create_tensor_info();</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">// Fuse conv2d into the workload</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="comment">// Validate operator</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d4e55a769c00f49c595e282f5f3b1cd">success</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ad92944d020375212448213080e669ba1">GpuConv2d::validate_op</a>(sketch, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>, &amp;weight_info, <span class="keyword">nullptr</span>, &amp;dst_info, conv2d_attr);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(<span class="keywordtype">bool</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d4e55a769c00f49c595e282f5f3b1cd">success</a>), framework::LogLevel::ERRORS);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a99d8b244629172d1bcf7d3098894ad6d">GpuConv2d::create_op</a>(sketch, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>, &amp;weight_info, <span class="keyword">nullptr</span>, &amp;dst_info, conv2d_attr);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="comment">// Create tensor infos</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keyword">auto</span> weight_info_2 = sketch.create_tensor_info(t_weight_info);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keyword">auto</span> dst_info_2    = sketch.create_tensor_info();</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="comment">// Fuse conv2d into the workload</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    {</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="comment">// Validate operator, should fail</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d4e55a769c00f49c595e282f5f3b1cd">success</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ad92944d020375212448213080e669ba1">GpuConv2d::validate_op</a>(sketch, &amp;dst_info, &amp;weight_info_2, <span class="keyword">nullptr</span>, &amp;dst_info_2, conv2d_attr);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(!<span class="keywordtype">bool</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d4e55a769c00f49c595e282f5f3b1cd">success</a>), framework::LogLevel::ERRORS);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// Invalid_Fusion_Should_Fail</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// DYNAMIC_FUSION</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// INTEGRATION</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// CL</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;} <span class="comment">// namespace validation</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="tests_2validation_2_c_l_2_u_n_i_t_2dynamic__fusion_2_utils_8h_xhtml"><div class="ttname"><a href="tests_2validation_2_c_l_2_u_n_i_t_2dynamic__fusion_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a048af4e9fc68526bf6d39e80e043a456"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">arm_compute::experimental::dynamic_fusion::validate</a></div><div class="ttdeci">Status validate(const OperatorGraph &amp;op_graph)</div><div class="ttdoc">Return the validity of op_graph, usually after performing an operation (e.g. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00121">OperatorGraph.cpp:121</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acf5f12bbab64dd614bd8220c97fe484f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00403">ConvolutionLayer.cpp:403</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a038d136792f815c57fcdf93b0a59f5f1"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">arm_compute::CLScheduler::default_reinit</a></div><div class="ttdeci">void default_reinit(ICLTuner *cl_tuner=nullptr, CLGEMMHeuristicsHandle *gemm_h=nullptr, CLBackendType cl_backend_type=CLBackendType::Native)</div><div class="ttdoc">Re-initializes the context and command queue used by the scheduler to default values and sets a defau...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00145">CLScheduler.cpp:145</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1utils.xhtml">arm_compute::test::validation::utils</a></div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_c_l_2_u_n_i_t_2dynamic__fusion_2_utils_8h_source.xhtml#l00040">Utils.h:40</a></div></div>
<div class="ttc" id="cl__gemm_8cpp_xhtml_ae7f215e412cfa0dae5a983b0bf4071a1"><div class="ttname"><a href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a></div><div class="ttdeci">RelativeTolerance&lt; float &gt; tolerance_f32(0.001f)</div><div class="ttdoc">F32 Tolerance value for comparing reference&amp;#39;s output against implementation&amp;#39;s output for floating poi...</div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">arm_compute::experimental::dynamic_fusion::Conv2dAttributes</a></div><div class="ttdoc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator...</div><div class="ttdef"><b>Definition:</b> <a href="_operator_attributes_8h_source.xhtml#l00041">OperatorAttributes.h:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkloadRuntime</a></div><div class="ttdoc">OpenCL runtime to run a workload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8h_source.xhtml#l00045">ClWorkloadRuntime.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d_xhtml_ad92944d020375212448213080e669ba1"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ad92944d020375212448213080e669ba1">arm_compute::experimental::dynamic_fusion::GpuConv2d::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *src, const ITensorInfo *wei, const ITensorInfo *bia, const ITensorInfo *dst, const Attributes &amp;attributes)</div><div class="ttdoc">Validate the operator and check if it can be fused into the workload sketch. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_conv2d_8cpp_source.xhtml#l00092">GpuConv2d.cpp:92</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849a"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">arm_compute::DimensionRoundingType</a></div><div class="ttdeci">DimensionRoundingType</div><div class="ttdoc">Dimension rounding type when down-scaling on CNNs. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00550">Types.h:550</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a33e65be485104e2e9e69fca551d6f492"><div class="ttname"><a href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">arm_compute::PermutationVector</a></div><div class="ttdeci">Strides PermutationVector</div><div class="ttdoc">Permutation vector. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00051">Types.h:51</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00039">CLKernelLibrary.cpp:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor&amp;#39;s allocator. </div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="_operator_attributes_8h_xhtml"><div class="ttname"><a href="_operator_attributes_8h.xhtml">OperatorAttributes.h</a></div></div>
<div class="ttc" id="_simple_tensor_printer_8h_xhtml"><div class="ttname"><a href="_simple_tensor_printer_8h.xhtml">SimpleTensorPrinter.h</a></div></div>
<div class="ttc" id="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h.xhtml">CLKernelLibrary.h</a></div><div class="ttdoc">Manages all the OpenCL kernels compilation and caching, provides accessors for the OpenCL Context...</div></div>
<div class="ttc" id="_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a10a0137545ce1771423fbde2ce494a81"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">arm_compute::CLKernelLibrary::get_compile_context</a></div><div class="ttdeci">CLCompileContext &amp; get_compile_context()</div><div class="ttdoc">Gets the compile context used. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00130">CLKernelLibrary.cpp:130</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_allocator_xhtml_af36143939a43fa124312e395975091ed"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">arm_compute::ITensorAllocator::init</a></div><div class="ttdeci">void init(const TensorInfo &amp;input, size_t alignment=0)</div><div class="ttdoc">Initialize a tensor based on the passed TensorInfo. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator.cpp:33</a></div></div>
<div class="ttc" id="_c_l_accessor_8h_xhtml"><div class="ttname"><a href="_c_l_accessor_8h.xhtml">CLAccessor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime_xhtml_a0417d9034e569939abfc3306228fc849"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a0417d9034e569939abfc3306228fc849">arm_compute::experimental::dynamic_fusion::ClWorkloadRuntime::get_auxiliary_tensors</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; CLTensor *, AuxMemoryInfo &gt; &gt; get_auxiliary_tensors()</div><div class="ttdoc">Get auxiliary tensors of the workload and their memory requirement. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00345">ClWorkloadRuntime.cpp:345</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml_acd09bed517e43d28823e69494f259835"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a></div><div class="ttdeci">#define TEST_SUITE(SUITE_NAME)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00034">Macros.h:34</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml_a846b2e70d2ba2180ccb81045c88b8409"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#a846b2e70d2ba2180ccb81045c88b8409">TEST_CASE</a></div><div class="ttdeci">#define TEST_CASE(TEST_NAME, MODE)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00180">Macros.h:180</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a21c3e11887f3acf9284ca763372c7da0"><div class="ttname"><a href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">arm_compute::permute</a></div><div class="ttdeci">void permute(Dimensions&lt; T &gt; &amp;dimensions, const PermutationVector &amp;perm)</div><div class="ttdoc">Permutes given Dimensions according to a permutation vector. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00125">Helpers.h:125</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml_a3afda29223eeda35afd21a6c5e121ba2"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3afda29223eeda35afd21a6c5e121ba2">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo::alignment</a></div><div class="ttdeci">size_t alignment</div><div class="ttdoc">Memory alignment in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00093">IWorkload.h:93</a></div></div>
<div class="ttc" id="_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5847c3506e79d3ceecc471581a7fda4b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">arm_compute::test::validation::t_dst_info</a></div><div class="ttdeci">auto t_dst_info</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00251">Integration_OperatorFuseMovenetSubGraph1.cpp:251</a></div></div>
<div class="ttc" id="_elementwise_operations_8h_xhtml"><div class="ttname"><a href="_elementwise_operations_8h.xhtml">ElementwiseOperations.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00071">QuantizationInfo.h:71</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes. </div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_a71326f0909d77386e29b511e1990a11f"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">arm_compute::test::library</a></div><div class="ttdeci">std::unique_ptr&lt; AssetsLibrary &gt; library</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00076">main.cpp:76</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ae008e90eb6906fa3526213bc860f6cc5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">arm_compute::test::validation::input_info</a></div><div class="ttdeci">input_info</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_c_l_2fft_8cpp_source.xhtml#l00145">FFT.cpp:145</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_c_l_accessor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">arm_compute::test::CLAccessor</a></div><div class="ttdoc">Accessor implementation for CLTensor objects. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_accessor_8h_source.xhtml#l00036">CLAccessor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00669">Types.h:669</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8h_xhtml"><div class="ttname"><a href="_cl_workload_runtime_8h.xhtml">ClWorkloadRuntime.h</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00041">ClWorkload.h:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::CLTensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of OpenCL memory. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00127">CLTensorAllocator.cpp:127</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_simple_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor</a></div><div class="ttdoc">Simple tensor object that stores elements in a consecutive chunk of memory. </div><div class="ttdef"><b>Definition:</b> <a href="_simple_tensor_8h_source.xhtml#l00058">SimpleTensor.h:58</a></div></div>
<div class="ttc" id="_cl_conv2d_8h_xhtml"><div class="ttname"><a href="_cl_conv2d_8h.xhtml">ClConv2d.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a06499781c05df8148544ecffbd6b7192"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a06499781c05df8148544ecffbd6b7192">arm_compute::test::validation::reference::convolution_layer</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; convolution_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; TW &gt; &amp;weights, const SimpleTensor&lt; TB &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, const Size2D &amp;dilation, unsigned int num_groups, QuantizationInfo out_quant_info)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_convolution_layer_8cpp_source.xhtml#l00111">ConvolutionLayer.cpp:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch</a></div><div class="ttdoc">A descriptor of a workload of operators. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_8h_source.xhtml#l00043">GpuWorkloadSketch.h:43</a></div></div>
<div class="ttc" id="_cl_add_8h_xhtml"><div class="ttname"><a href="_cl_add_8h.xhtml">ClAdd.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">arm_compute::test::validation::RelativeTolerance</a></div><div class="ttdoc">Class reprensenting a relative tolerance value. </div><div class="ttdef"><b>Definition:</b> <a href="_validation_8h_source.xhtml#l00097">Validation.h:97</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo</a></div><div class="ttdoc">Memory Info for a WorkloadTensor of Auxiliary memory type. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00070">IWorkload.h:70</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext</a></div><div class="ttdoc">Provide context necessary for the creation and configuration of a workload e.g. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8h_source.xhtml#l00056">GpuWorkloadContext.h:56</a></div></div>
<div class="ttc" id="_gpu_workload_sketch_8h_xhtml"><div class="ttname"><a href="_gpu_workload_sketch_8h.xhtml">GpuWorkloadSketch.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels. </div></div>
<div class="ttc" id="_validation_8h_xhtml"><div class="ttname"><a href="_validation_8h.xhtml">Validation.h</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00043">TensorInfo.h:43</a></div></div>
<div class="ttc" id="_asserts_8h_xhtml_adc60af942e951dc93e22b97b41809b51"><div class="ttname"><a href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a></div><div class="ttdeci">#define ARM_COMPUTE_EXPECT(X, LEVEL)</div><div class="ttdef"><b>Definition:</b> <a href="_asserts_8h_source.xhtml#l00131">Asserts.h:131</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime_xhtml_a1eacb2b8ed3b14e66998a37c1decefc2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a1eacb2b8ed3b14e66998a37c1decefc2">arm_compute::experimental::dynamic_fusion::ClWorkloadRuntime::run</a></div><div class="ttdeci">Status run(const std::vector&lt; CLTensor *&gt; &amp;tensors)</div><div class="ttdoc">Perform run workload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00327">ClWorkloadRuntime.cpp:327</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">Cast.cpp:203</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime_xhtml_a8665c744767b2ab05d269ef0980ff3aa"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a8665c744767b2ab05d269ef0980ff3aa">arm_compute::experimental::dynamic_fusion::ClWorkloadRuntime::configure</a></div><div class="ttdeci">Status configure(const GpuWorkloadSketch &amp;sketch)</div><div class="ttdoc">Configure ClWorkloadRuntime. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00273">ClWorkloadRuntime.cpp:273</a></div></div>
<div class="ttc" id="_convolution_layer_8h_xhtml"><div class="ttname"><a href="_convolution_layer_8h.xhtml">ConvolutionLayer.h</a></div></div>
<div class="ttc" id="_permute_8h_xhtml"><div class="ttname"><a href="_permute_8h.xhtml">Permute.h</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml_a603cb7f45efd81606e51686da9aeebd9"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a></div><div class="ttdeci">#define TEST_SUITE_END()</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00039">Macros.h:39</a></div></div>
<div class="ttc" id="_asserts_8h_xhtml"><div class="ttname"><a href="_asserts_8h.xhtml">Asserts.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a2d4e55a769c00f49c595e282f5f3b1cd"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d4e55a769c00f49c595e282f5f3b1cd">arm_compute::test::validation::success</a></div><div class="ttdeci">const auto success</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00267">Integration_OperatorFuseMovenetSubGraph1.cpp:267</a></div></div>
<div class="ttc" id="_gpu_conv2d_8h_xhtml"><div class="ttname"><a href="_gpu_conv2d_8h.xhtml">GpuConv2d.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml">arm_compute::CLTensor</a></div><div class="ttdoc">Basic implementation of the OpenCL tensor interface. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml#l00041">CLTensor.h:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d_xhtml_a99d8b244629172d1bcf7d3098894ad6d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a99d8b244629172d1bcf7d3098894ad6d">arm_compute::experimental::dynamic_fusion::GpuConv2d::create_op</a></div><div class="ttdeci">static void create_op(GpuWorkloadSketch &amp;sketch, ITensorInfo *src, ITensorInfo *wei, ITensorInfo *bia, ITensorInfo *dst, const Attributes &amp;attributes)</div><div class="ttdoc">Create an operator and fuse it into the workload sketch. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_conv2d_8cpp_source.xhtml#l00172">GpuConv2d.cpp:172</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_d178b4fe845b8ce36c704432820c8c40.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_36525c4f440e1302e710dd3570052bdf.xhtml">gpu</a></li><li class="navelem"><a class="el" href="_integration_8cpp.xhtml">Integration.cpp</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:56 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
