<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/experimental/ClCompositeOperator.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_composite_operator_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClCompositeOperator.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_composite_operator_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_EXPERIMENTAL_DYNAMIC_FUSION_CLCOMPOSITEOPERATOR_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_EXPERIMENTAL_DYNAMIC_FUSION_CLCOMPOSITEOPERATOR_H</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h.xhtml">arm_compute/core/CL/CLCompileContext.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_i_operator_8h.xhtml">arm_compute/runtime/IOperator.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_workload_8h.xhtml">arm_compute/core/experimental/ClWorkload.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">/** Map OpTensor handles to their corresponding ITensor memory</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7c2a91a85b564dbc8e52229582e982a9">   44</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7c2a91a85b564dbc8e52229582e982a9">OpTensorBinding</a> = std::map&lt;OpTensor, ITensor *&gt;;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">/** Map a kernel (as identified by its unit workload id) to its corresponding tensor pack</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> * @note External user should not use the add_tensor_pack method to alter this tensor pack map, and should only use the map returned by @ref bind_tensors</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">   50</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /** Find a tensor pack associated with the unit workload Id @p uwk_id</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     * @param[in] uwk_id unit workload Id associated with the tensor pack</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     * @return ITensorPack*</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> *<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml#a637d4986b2e87832c31bd7e3f8f50e5a">find_tensor_pack</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">UnitWorkload::Id</a> uwk_id);<span class="comment"></span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">    /** Get a tensor pack associated with @p uwk_id. Throws a exception if it cannot be found.</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     * @param[in] uwk_id unit workload Id associated with the tensor pack</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * @return ITensorPack*</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml#abb4cea8e05bb7718ee9cef7b5ff0ab53">get_tensor_pack</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">UnitWorkload::Id</a> uwk_id);<span class="comment"></span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /** Add a tensor pack and associate it with unit workload Id @p uwk_id</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * @note Should not be used by external user</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     * @param[in] uwk_id      unit workload Id associated with the tensor pack</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     * @param[in] tensor_pack Tensor Pack to be added</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml#a6e541f2b9b593e460de6448086f95c51">add_tensor_pack</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">UnitWorkload::Id</a> uwk_id, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensor_pack);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    std::map&lt;UnitWorkload::Id, ITensorPack&gt; _tensor_packs{};</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;};</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">/** Holder of any auxiliary CLTensors required by a ClWorkload.</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"> * @note The tensors are not allocated by default, and require the user to explicitly allocate them using the TensorInfo and AuxMemoryInfo</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"> * @note This data holder must remain valid until the ClCompositeOperator that it&#39;s passed to is out of scope</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"> * @note External user should not use the add_aux_tensor method, and should only use the data returned by @ref bind_tensors</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data.xhtml">   87</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data.xhtml">ClAuxTensorData</a></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">    /** A view of a single auxiliary data and the associated TensorInfo and AuxMemoryInfo</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">   92</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml#ad412898402d8eb81b004c67a1d4734bc">   95</a></span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml#ad412898402d8eb81b004c67a1d4734bc">DataView</a>(<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a>)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            : tensor{ tensor }, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>{ <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a> }, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a>{ <a class="code" href="_cl_workload_runtime_8cpp.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a> }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a>()                     = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a> &amp;other) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a> &amp;other) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a> &amp;&amp;other)                 = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a> &amp;operator=(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">DataView</a> &amp;&amp;other) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml#a5555e1497e9b84ade322d8ad8b503598">  104</a></span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>     *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>{};      <span class="comment">/**&lt; Pointer to the auxiliary tensor */</span></div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml#a84d9f260af89712132849ff260487ea0">  105</a></span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>    <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>{}; <span class="comment">/**&lt; Associated TensorInfo */</span></div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml#abd1839b751c3e3abfec78177d70b8cb4">  106</a></span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a>{}; <span class="comment">/**&lt; Memory requirement */</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    };</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">    /** Add auxiliary tensor.</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     * @note Should not be used by external user</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     * @param[in] tensor_id   Any Id that can uniquely identify an auxiliary tensor. Usually ClWorkloadTensor Id</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     * @param[in] tensor_info TensorInfo associated with the tensor</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     * @param[in] memory_info Memory requirements</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     * @return CLTensor*  if successfully added, otherwise nullptr</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> *add_aux_tensor(<span class="keywordtype">int</span> tensor_id, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a>);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">    /** Get views of all auxiliary tensors. This is mainly used for allocating the auxiliary tensors.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * @return std::vector&lt;DataView&gt;&amp;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    std::vector&lt;DataView&gt; &amp;get_tensors();</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    std::map&lt;int, std::unique_ptr&lt;CLTensor&gt;&gt; _owned_tensors{};</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    std::vector&lt;DataView&gt; _tensors{};</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;};</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">/** Bind tensor memory to packs used by prepare and run methods. Create auxiliary tensor objects and their memory requirements if needed</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment"> * @note This is the only method for external user to create ClAuxTensorData, and the prepare and run TensorPackMaps</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"> * @param[out] aux_tensor_data  Auxiliary Tensors required by the workload</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment"> * @param[out] prepare_pack_map TensorPackMap used by the prepare method</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"> * @param[out] run_pack_map     TensorPackMap used by the run method</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"> * @param[in]  workload         ClWorkload to bind the tensors to</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"> * @param[in]  op_tensors       CLTensor memory objects mapped from Core OpTensors</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"> * @return Status</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0d7c1c3d9ad0be83d4dd2dc9d444ad32">bind_tensors</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data.xhtml">ClAuxTensorData</a> &amp;aux_tensor_data, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a> &amp;prepare_pack_map, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a> &amp;run_pack_map, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>, <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7c2a91a85b564dbc8e52229582e982a9">OpTensorBinding</a> &amp;op_tensors);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">/** Operator runtime to run a @ref ClWorkload</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"> * @note User must explicitly call prepare before run otherwise run will fail.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">  151</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;{</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a>();</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    ~<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a>();<span class="comment"></span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">    /** Configures a @ref ClCompositeOperator with a @ref ClWorkload</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">     * This includes the compilation of Cl kernels inside the @ref ClWorkload</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     * @param[in] ctx      CLCompileContext</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     * @param[in] workload ClWorkload to configure with</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5357bacf3b395353bef0acf15487b92b">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;ctx, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;workload);<span class="comment"></span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">    /** Validate ClWorkload @p workload</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">     * @param[in] workload ClWorkload to be validated</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">     * @return Status</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">validate</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;workload);<span class="comment"></span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">    /** Enqueue prepare workloads</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">     * @param tensor_pack_map Tensors required by the prepare workloads</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordtype">void</span> prepare(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a> &amp;tensor_pack_map);<span class="comment"></span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">    /** Enqueue run workloads</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">     * @param tensor_pack_map Tensors required by the run workloads</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">run</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a> &amp;tensor_pack_map);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">struct </span>Implementation;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    std::unique_ptr&lt;Implementation&gt; _impl;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;};</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor">#endif //ARM_COMPUTE_EXPERIMENTAL_DYNAMIC_FUSION_CLCOMPOSITEOPERATOR_H</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkload</a></div><div class="ttdoc">Workload for Cl backend. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00173">ClWorkload.h:173</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view_xhtml_ad412898402d8eb81b004c67a1d4734bc"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml#ad412898402d8eb81b004c67a1d4734bc">arm_compute::experimental::dynamic_fusion::ClAuxTensorData::DataView::DataView</a></div><div class="ttdeci">DataView(CLTensor *tensor, const TensorInfo &amp;tensor_info, const AuxMemoryInfo &amp;memory_info)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8h_source.xhtml#l00095">ClCompositeOperator.h:95</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a048af4e9fc68526bf6d39e80e043a456"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">arm_compute::experimental::dynamic_fusion::validate</a></div><div class="ttdeci">Status validate(const OperatorGraph &amp;op_graph)</div><div class="ttdoc">Return the validity of op_graph, usually after performing an operation (e.g. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00121">OperatorGraph.cpp:121</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::UnitWorkload::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00111">IWorkload.h:111</a></div></div>
<div class="ttc" id="_cl_workload_8h_xhtml"><div class="ttname"><a href="_cl_workload_8h.xhtml">ClWorkload.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map_xhtml_a6e541f2b9b593e460de6448086f95c51"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml#a6e541f2b9b593e460de6448086f95c51">arm_compute::experimental::dynamic_fusion::TensorPackMap::add_tensor_pack</a></div><div class="ttdeci">void add_tensor_pack(UnitWorkload::Id uwk_id, const ITensorPack &amp;tensor_pack)</div><div class="ttdoc">Add a tensor pack and associate it with unit workload Id uwk_id. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8cpp_source.xhtml#l00099">ClCompositeOperator.cpp:99</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h.xhtml">CLCompileContext.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_1_1_data_view.xhtml">arm_compute::experimental::dynamic_fusion::ClAuxTensorData::DataView</a></div><div class="ttdoc">A view of a single auxiliary data and the associated TensorInfo and AuxMemoryInfo. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8h_source.xhtml#l00092">ClCompositeOperator.h:92</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a84d9f260af89712132849ff260487ea0"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a></div><div class="ttdeci">TensorInfo tensor_info</div><div class="ttdoc">Associated tensor info. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_abd1839b751c3e3abfec78177d70b8cb4"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a></div><div class="ttdeci">AuxMemoryInfo memory_info</div><div class="ttdoc">Memory requirement. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00068">ClWorkloadRuntime.cpp:68</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml">arm_compute::CLCompileContext</a></div><div class="ttdoc">CLCompileContext class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00204">CLCompileContext.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a06403ad5596b5405787cfca12e5b815e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">arm_compute::test::validation::run</a></div><div class="ttdeci">lstmq run()</div></div>
<div class="ttc" id="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h.xhtml">CLTensor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad001edc7e4d1ea972be09f232c6e7729"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">arm_compute::test::validation::workload</a></div><div class="ttdeci">ClWorkload workload</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00266">Integration_OperatorFuseMovenetSubGraph1.cpp:266</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo</a></div><div class="ttdoc">Memory Info for a WorkloadTensor of Auxiliary memory type. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00070">IWorkload.h:70</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a7c2a91a85b564dbc8e52229582e982a9"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7c2a91a85b564dbc8e52229582e982a9">arm_compute::experimental::dynamic_fusion::OpTensorBinding</a></div><div class="ttdeci">std::map&lt; OpTensor, ITensor * &gt; OpTensorBinding</div><div class="ttdoc">Map OpTensor handles to their corresponding ITensor memory. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8h_source.xhtml#l00044">ClCompositeOperator.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00043">TensorInfo.h:43</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5357bacf3b395353bef0acf15487b92b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5357bacf3b395353bef0acf15487b92b">arm_compute::test::validation::configure</a></div><div class="ttdeci">im2col_func configure(src_target.info(), dst_target.info(), spatial_kernel, conv_info, has_bias)</div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data.xhtml">arm_compute::experimental::dynamic_fusion::ClAuxTensorData</a></div><div class="ttdoc">Holder of any auxiliary CLTensors required by a ClWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8h_source.xhtml#l00087">ClCompositeOperator.h:87</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">arm_compute::experimental::dynamic_fusion::TensorPackMap</a></div><div class="ttdoc">Map a kernel (as identified by its unit workload id) to its corresponding tensor pack. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8h_source.xhtml#l00050">ClCompositeOperator.h:50</a></div></div>
<div class="ttc" id="arm__compute_2runtime_2_i_operator_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_i_operator_8h.xhtml">IOperator.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">arm_compute::experimental::dynamic_fusion::ClCompositeOperator</a></div><div class="ttdoc">Operator runtime to run a ClWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8h_source.xhtml#l00151">ClCompositeOperator.h:151</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0d7c1c3d9ad0be83d4dd2dc9d444ad32"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0d7c1c3d9ad0be83d4dd2dc9d444ad32">arm_compute::experimental::dynamic_fusion::bind_tensors</a></div><div class="ttdeci">Status bind_tensors(ClAuxTensorData &amp;aux_tensor_data, TensorPackMap &amp;prepare_pack_map, TensorPackMap &amp;run_pack_map, const ClWorkload &amp;workload, const OpTensorBinding &amp;op_tensors)</div><div class="ttdoc">Bind tensor memory to packs used by prepare and run methods. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8cpp_source.xhtml#l00104">ClCompositeOperator.cpp:104</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map_xhtml_abb4cea8e05bb7718ee9cef7b5ff0ab53"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml#abb4cea8e05bb7718ee9cef7b5ff0ab53">arm_compute::experimental::dynamic_fusion::TensorPackMap::get_tensor_pack</a></div><div class="ttdeci">ITensorPack &amp; get_tensor_pack(UnitWorkload::Id uwk_id)</div><div class="ttdoc">Get a tensor pack associated with uwk_id. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8cpp_source.xhtml#l00094">ClCompositeOperator.cpp:94</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map_xhtml_a637d4986b2e87832c31bd7e3f8f50e5a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml#a637d4986b2e87832c31bd7e3f8f50e5a">arm_compute::experimental::dynamic_fusion::TensorPackMap::find_tensor_pack</a></div><div class="ttdeci">ITensorPack * find_tensor_pack(UnitWorkload::Id uwk_id)</div><div class="ttdoc">Find a tensor pack associated with the unit workload Id uwk_id. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8cpp_source.xhtml#l00084">ClCompositeOperator.cpp:84</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml">arm_compute::CLTensor</a></div><div class="ttdoc">Basic implementation of the OpenCL tensor interface. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml#l00041">CLTensor.h:41</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_f65747a71076b8acf344f803a66a39b1.xhtml">experimental</a></li><li class="navelem"><a class="el" href="_cl_composite_operator_8h.xhtml">ClCompositeOperator.h</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:48 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
