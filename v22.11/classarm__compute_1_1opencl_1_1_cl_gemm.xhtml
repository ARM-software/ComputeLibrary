<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClGemm Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1opencl_1_1_cl_gemm.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClGemm Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to execute GEMM on OpenCL.  
 <a href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_8h_source.xhtml">ClGemm.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ClGemm:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1opencl_1_1_cl_gemm__coll__graph.svg" width="107" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad3baf86a525a58e0a8438ca310dc7741"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#ad3baf86a525a58e0a8438ca310dc7741">ClGemm</a> ()</td></tr>
<tr class="memdesc:ad3baf86a525a58e0a8438ca310dc7741"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ad3baf86a525a58e0a8438ca310dc7741">More...</a><br /></td></tr>
<tr class="separator:ad3baf86a525a58e0a8438ca310dc7741"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a477c92242621385e4427e30b373968ca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a477c92242621385e4427e30b373968ca">configure</a> (const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;compile_context, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, float alpha, float beta, const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info)</td></tr>
<tr class="memdesc:a477c92242621385e4427e30b373968ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the kernel's inputs and output.  <a href="#a477c92242621385e4427e30b373968ca">More...</a><br /></td></tr>
<tr class="separator:a477c92242621385e4427e30b373968ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684a54d1fb1634a348a585c6b5e76df0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a684a54d1fb1634a348a585c6b5e76df0">run</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) override</td></tr>
<tr class="memdesc:a684a54d1fb1634a348a585c6b5e76df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#a684a54d1fb1634a348a585c6b5e76df0">More...</a><br /></td></tr>
<tr class="separator:a684a54d1fb1634a348a585c6b5e76df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;constants) override</td></tr>
<tr class="memdesc:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="#aff8f5e4223fd2a3020c8b252c8982d3a">More...</a><br /></td></tr>
<tr class="separator:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74ae0d6e96f38fecd38471431786b870"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a74ae0d6e96f38fecd38471431786b870">workspace</a> () const override</td></tr>
<tr class="memdesc:a74ae0d6e96f38fecd38471431786b870"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the memory requirements required by the workspace.  <a href="#a74ae0d6e96f38fecd38471431786b870">More...</a><br /></td></tr>
<tr class="separator:a74ae0d6e96f38fecd38471431786b870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a></td></tr>
<tr class="memitem:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#ac4ed47b6e86464a36585094de41f1bc4">ICLOperator</a> (<a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#ac4ed47b6e86464a36585094de41f1bc4">More...</a><br /></td></tr>
<tr class="separator:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a219a51d9e81ee889a97cf4fdceb70dca">ICLOperator</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a219a51d9e81ee889a97cf4fdceb70dca">More...</a><br /></td></tr>
<tr class="separator:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a4f9ec2decc6780c6fd9b67f3e9ef9e77">ICLOperator</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a4f9ec2decc6780c6fd9b67f3e9ef9e77">More...</a><br /></td></tr>
<tr class="separator:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a3acfe6ff0d707c408bd2d8a111e2a7c4">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a3acfe6ff0d707c408bd2d8a111e2a7c4">More...</a><br /></td></tr>
<tr class="separator:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#af2f26be13d5bb74bf2ac7e8b3bd65b17">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#af2f26be13d5bb74bf2ac7e8b3bd65b17">More...</a><br /></td></tr>
<tr class="separator:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a></td></tr>
<tr class="memitem:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">~IOperator</a> ()=default</td></tr>
<tr class="memdesc:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">More...</a><br /></td></tr>
<tr class="separator:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9f6cb7cb1ae1f9a3260abea993ef8608"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a9f6cb7cb1ae1f9a3260abea993ef8608">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, float alpha, float beta, const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info)</td></tr>
<tr class="memdesc:a9f6cb7cb1ae1f9a3260abea993ef8608"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration.  <a href="#a9f6cb7cb1ae1f9a3260abea993ef8608">More...</a><br /></td></tr>
<tr class="separator:a9f6cb7cb1ae1f9a3260abea993ef8608"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to execute GEMM on OpenCL. </p>
<p>This function calls the following OpenCL kernels:</p>
<ol type="1">
<li><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_lhs_matrix_kernel.xhtml">kernels::ClGemmReshapeLhsMatrixKernel</a> (only if the RESHAPED is selected by the heuristic model)</li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_rhs_matrix_kernel.xhtml">kernels::ClGemmReshapeRhsMatrixKernel</a> (only if either the RESHAPED or RESHAPED_ONLY_RHS is selected by the select_gemm_kernel method())</li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_native_kernel.xhtml">kernels::ClGemmMatrixMultiplyNativeKernel</a> (only if NATIVE is selected by the select_gemm_kernel method())</li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_kernel.xhtml">kernels::ClGemmMatrixMultiplyReshapedKernel</a> (only if RESHAPED is selected by the select_gemm_kernel method())</li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_only_rhs_kernel.xhtml">kernels::ClGemmMatrixMultiplyReshapedOnlyRhsKernel</a> (only if RESHAPED_ONLY_RHS is selected by the select_gemm_kernel method())</li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel.xhtml">kernels::ClGemmMatrixMultiplyReshapedOnlyRhsMMULKernel</a> (only if RESHAPED_ONLY_RHS_MMUL is selected by the select_gemm_kernel method()) </li>
</ol>

<p class="definition">Definition at line <a class="el" href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_8h_source.xhtml#l00056">56</a> of file <a class="el" href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_8h_source.xhtml">ClGemm.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad3baf86a525a58e0a8438ca310dc7741"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3baf86a525a58e0a8438ca310dc7741">&#9670;&nbsp;</a></span>ClGemm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml">ClGemm</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00188">188</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml">ClGemm.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">arm_compute::NATIVE</a>.</p>
<div class="fragment"><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    : _reshape_lhs_kernel(std::make_unique&lt;ClGemmReshapeLhsMatrixKernel&gt;()),</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      _reshape_rhs_kernel(std::make_unique&lt;ClGemmReshapeRhsMatrixKernel&gt;()),</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      _mm_native_kernel(std::make_unique&lt;ClGemmMatrixMultiplyNativeKernel&gt;()),</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      _mm_reshaped_kernel(std::make_unique&lt;ClGemmMatrixMultiplyReshapedKernel&gt;()),</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      _mm_reshaped_only_rhs_kernel(std::make_unique&lt;ClGemmMatrixMultiplyReshapedOnlyRhsKernel&gt;()),</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      _mm_reshaped_only_rhs_mmul_kernel(std::make_unique&lt;ClGemmMatrixMultiplyReshapedOnlyRhsMMULKernel&gt;()),</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      _tmp_a(),</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      _tmp_b(),</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      _reshape_b_only_on_first_run(<span class="keyword">false</span>),</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      _gemm_kernel_type(<a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">CLGEMMKernelType::NATIVE</a>),</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      _is_prepared(<span class="keyword">false</span>),</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      _aux_mem(AuxTensorIdx::Count)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;{</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">arm_compute::CLGEMMKernelType::NATIVE</a></div><div class="ttdoc">Native GEMM kernel with configurable block size. </div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a477c92242621385e4427e30b373968ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a477c92242621385e4427e30b373968ca">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;&#160;</td>
          <td class="paramname"><em>compile_context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>gemm_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the kernel's inputs and output. </p>
<p>Valid data layouts:</p><ul>
<li>All</li>
</ul>
<p>Valid data type configurations: </p><table class="doxtable">
<tr>
<th align="left">src0 </th><th align="left">src1 </th><th align="left">src2 </th><th align="left">dst  </th></tr>
<tr>
<td align="left">F32 </td><td align="left">F32 </td><td align="left">F32 </td><td align="left">F32 </td></tr>
<tr>
<td align="left">F16 </td><td align="left">F16 </td><td align="left">F16 </td><td align="left">F16 </td></tr>
</table>
<dl class="section note"><dt>Note</dt><dd>GEMM: General Matrix Multiply - [alpha * A * B + beta * C].</dd>
<dd>
All tensors must have the same data type.</dd>
<dd>
Whilst the first input tensor can be a vector, the second input tensor must be at least a matrix</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">compile_context</td><td>The compile context to be used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">a</td><td>First input tensor (Matrix or <a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> A). Data types supported: F16/F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>Second input tensor (Matrix B). Data type supported: same as <code>a</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>Third input tensor (Matrix C). It can be a nullptr if just the multiplication between <code>a</code> and <code>b</code> is needed. Data type supported: same as <code>a</code>. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Output tensor. Data type supported: same as <code>a</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">alpha</td><td>Weight of the matrix product </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">beta</td><td>Weight of matrix C </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">gemm_info</td><td>(Optional) Specifies if the matrix A and/or matrix B have been reshaped and if the reshape of matrix B should happen only for the first run. <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml" title="GEMM information class. ">GEMMInfo</a> also contains information about the reshaping in case matrix A and matrix B have been already transformed. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00557">557</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml">ClGemm.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">ITensorInfo::are_values_constant()</a>, <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler::get()</a>, <a class="el" href="float__ops_8h_source.xhtml#l00109">arm_compute::helpers::float_ops::is_zero()</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">arm_compute::test::validation::k</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00359">arm_compute::test::validation::m</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">arm_compute::test::validation::n</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">arm_compute::NATIVE</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02441">GEMMInfo::reinterpret_input_as_3d()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02425">GEMMInfo::reshape_b_only_on_first_run()</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6">arm_compute::RESHAPED</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">arm_compute::RESHAPED_ONLY_RHS</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">arm_compute::RESHAPED_ONLY_RHS_MMUL</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02449">GEMMInfo::retain_internal_weights()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00049">CLScheduler::target()</a>, and <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00612">ClGemm::validate()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00174">ClWinogradConv2d::configure()</a>.</p>
<div class="fragment"><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;{</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, output);</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="comment">// Perform validation step</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a9f6cb7cb1ae1f9a3260abea993ef8608">validate</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c, output, alpha, beta, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>));</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c, output, alpha, beta, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>);</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <span class="comment">// Check if we need to reshape the matrix B only on the first run</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    _reshape_b_only_on_first_run = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>.reshape_b_only_on_first_run();</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    _is_prepared                 = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>.retain_internal_weights();</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <span class="keywordtype">bool</span>               reinterpret_input_as_3d = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>.reinterpret_input_as_3d();</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a>                       = reinterpret_input_as_3d ? (a-&gt;dimension(1) * a-&gt;dimension(2)) : a-&gt;dimension(1);</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>                       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;dimension(0);</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>                       = a-&gt;dimension(0);</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batch_size              = reinterpret_input_as_3d ? a-&gt;dimension(3) : a-&gt;dimension(2);</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="comment">// Select GEMMType</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    _gemm_kernel_type = auto_select_gemm_kernel(<a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a>{ <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>(), a-&gt;data_type(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>, batch_size }, _reshape_b_only_on_first_run,</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                                                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;are_values_constant());</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> fuse_add_c = (!(<a class="code" href="namespacearm__compute_1_1helpers_1_1float__ops.xhtml#a3bd19352aed7410633d1f9b95d74a809">helpers::float_ops::is_zero</a>(beta)) &amp;&amp; c != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    ITensorInfo *c_to_use = fuse_add_c ? c : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    <span class="keywordflow">switch</span>(_gemm_kernel_type)</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    {</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">CLGEMMKernelType::NATIVE</a>:</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        {</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            configure_native(compile_context, a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c_to_use, output, alpha, beta, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>);</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        }</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6">CLGEMMKernelType::RESHAPED</a>:</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        {</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            configure_reshaped(compile_context, a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c_to_use, output, alpha, beta, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>);</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        }</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">CLGEMMKernelType::RESHAPED_ONLY_RHS</a>:</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        {</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            configure_reshaped_only_rhs(compile_context, a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c_to_use, output, alpha, beta, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>);</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        }</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a>:</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        {</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            configure_reshaped_only_rhs_mmul(compile_context, a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c_to_use, output, alpha, beta, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>);</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        }</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        {</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;GEMMType not supported&quot;</span>);</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        }</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    }</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a27561688e2fc60176608ef725a4ecb30"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">arm_compute::CLScheduler::target</a></div><div class="ttdeci">GPUTarget target() const</div><div class="ttdoc">Get the target GPU. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00049">CLScheduler.cpp:49</a></div></div>
<div class="ttc" id="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query_xhtml"><div class="ttname"><a href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">arm_compute::cl_gemm::auto_heuristics::CommonQuery</a></div><div class="ttdoc">A collection of adaptor functions that enable the auto selection between mlgo-based heuristics and de...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_auto_heuristics_8h_source.xhtml#l00040">CLGEMMAutoHeuristics.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">arm_compute::CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a></div><div class="ttdoc">Reshaped GEMM kernel where only the rhs matrix is reshaped. </div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">arm_compute::CLGEMMKernelType::RESHAPED_ONLY_RHS</a></div><div class="ttdoc">Reshaped GEMM kernel where only the rhs matrix is reshaped. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6">arm_compute::CLGEMMKernelType::RESHAPED</a></div><div class="ttdoc">Reshaped GEMM kernel where both lhs and rhs matrices are reshaped. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa08a9b7cf30c1c3e56ca1d2060313408"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">arm_compute::test::validation::gemm_info</a></div><div class="ttdeci">gemm_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00862">GEMMMatrixMultiplyReshaped.cpp:862</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a73aa59d7b088082ec257a1c65edbf1d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">arm_compute::test::validation::k</a></div><div class="ttdeci">const unsigned int k</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">GEMMMatrixMultiplyNative.cpp:361</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">arm_compute::CLGEMMKernelType::NATIVE</a></div><div class="ttdoc">Native GEMM kernel with configurable block size. </div></div>
<div class="ttc" id="namespacearm__compute_1_1helpers_1_1float__ops_xhtml_a3bd19352aed7410633d1f9b95d74a809"><div class="ttname"><a href="namespacearm__compute_1_1helpers_1_1float__ops.xhtml#a3bd19352aed7410633d1f9b95d74a809">arm_compute::helpers::float_ops::is_zero</a></div><div class="ttdeci">bool is_zero(float a, float epsilon=0.00001f)</div><div class="ttdoc">Checks if the input floating point number is 0.0f checking if the difference is within a range define...</div><div class="ttdef"><b>Definition:</b> <a href="float__ops_8h_source.xhtml#l00109">float_ops.h:109</a></div></div>
<div class="ttc" id="src_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1opencl_1_1_cl_gemm_xhtml_a9f6cb7cb1ae1f9a3260abea993ef8608"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a9f6cb7cb1ae1f9a3260abea993ef8608">arm_compute::opencl::ClGemm::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *output, float alpha, float beta, const GEMMInfo &amp;gemm_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00612">ClGemm.cpp:612</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a545be126d77ec11a9824249de111def9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">arm_compute::test::validation::m</a></div><div class="ttdeci">const unsigned int m</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00359">GEMMMatrixMultiplyNative.cpp:359</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aff8f5e4223fd2a3020c8b252c8982d3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff8f5e4223fd2a3020c8b252c8982d3a">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>constants</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepare the function for executing. </p>
<p>Any one off pre-processing step required by the function is handled here</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">constants</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> that contains the constants tensors.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Prepare stage might not need all the function's buffers' backing memory to be available in order to execute </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00771">771</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml">ClGemm.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00099">ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL</a>, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a1fb4c50755a0ef424652246838ed91a6">ICLTensor::cl_buffer()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00243">CLScheduler::enqueue_op()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler::get()</a>, <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00094">CLAuxTensorHandler::get()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00054">ITensorPack::get_const_tensor()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00064">ITensorPack::get_tensor()</a>, and <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00279">ClWinogradConv2d::prepare()</a>, and <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00663">ClGemm::run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;{</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    <span class="keywordflow">if</span>(!_is_prepared)</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    {</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        <span class="keyword">const</span> ITensor *src1    = constants.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>);</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;        ICLTensor     *rhs_aux = utils::cast::polymorphic_downcast&lt;ICLTensor *&gt;(constants.get_tensor(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(RhsReshape)));</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        <span class="comment">// If memory for RHS is persistent and src1 is provided re-transform else assume that RHS is transformed</span></div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        <span class="keywordflow">if</span>((_aux_mem[AuxTensorIdx::RhsReshape].lifetime == MemoryLifetime::Persistent) &amp;&amp; (src1 != <span class="keyword">nullptr</span> &amp;&amp; rhs_aux != <span class="keyword">nullptr</span>) &amp;&amp; rhs_aux)</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;        {</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;            <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a9711076575f7df473c6e0214334687f3">ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL</a>(<span class="stringliteral">&quot;Transforming RHS Matrix!&quot;</span>);</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            CLAuxTensorHandler rhs_reshaped(_tmp_b, *rhs_aux);</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(rhs_reshaped.get()-&gt;cl_buffer().get() == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;            ITensorPack reshape_rhs_pack{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, src1 }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, rhs_reshaped.get() } };</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_reshape_rhs_kernel, reshape_rhs_pack, <span class="keyword">true</span>);</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        }</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        _is_prepared = <span class="keyword">true</span>;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    }</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="src_2common_2utils_2_log_8h_xhtml_a9711076575f7df473c6e0214334687f3"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a9711076575f7df473c6e0214334687f3">ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL(msg)</div><div class="ttdoc">Log an information message to the logger with function name before the message. </div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00099">Log.h:99</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a5c0fc6f465cae029d60ffdfc7f3e99d9"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">arm_compute::CLScheduler::enqueue_op</a></div><div class="ttdeci">void enqueue_op(ICLKernel &amp;kernel, ITensorPack &amp;tensors, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00243">CLScheduler.cpp:243</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a324d709e8fb5568ada56ba4999dfb2f1"><div class="ttname"><a href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">arm_compute::offset_int_vec</a></div><div class="ttdeci">int offset_int_vec(int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_memory_helpers_8h_source.xhtml#l00038">MemoryHelpers.h:38</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a684a54d1fb1634a348a585c6b5e76df0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a684a54d1fb1634a348a585c6b5e76df0">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> that contains the tensors to operate on. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00663">663</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml">ClGemm.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">arm_compute::ACL_SRC_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00049">ITensorPack::add_const_tensor()</a>, <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00392">BorderSize::bottom</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00243">CLScheduler::enqueue_op()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler::get()</a>, <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00094">CLAuxTensorHandler::get()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00054">ITensorPack::get_const_tensor()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00064">ITensorPack::get_tensor()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">arm_compute::NATIVE</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">ITensorInfo::padding()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00771">ClGemm::prepare()</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6">arm_compute::RESHAPED</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">arm_compute::RESHAPED_ONLY_RHS</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">arm_compute::RESHAPED_ONLY_RHS_MMUL</a>, and <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00390">BorderSize::top</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00239">ClWinogradConv2d::run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;{</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    <span class="keyword">const</span> ITensor *lhs = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>);</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    <span class="keyword">const</span> ITensor *rhs = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>);</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    ITensor       *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = tensors.get_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>);</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(lhs, dst);</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    CLAuxTensorHandler lhs_reshaped(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(LhsReshape), _tmp_a, tensors, <span class="keyword">true</span>);</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    CLAuxTensorHandler rhs_reshaped(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(RhsReshape), _tmp_b, tensors, <span class="keyword">true</span>);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    <span class="comment">// Prepare the consts if needed</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a>(tensors);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    <span class="comment">// Run matrix multiply kernel</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    <span class="keywordflow">switch</span>(_gemm_kernel_type)</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    {</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">CLGEMMKernelType::NATIVE</a>:</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        {</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mm_native_kernel, tensors, <span class="keyword">true</span>);</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        }</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6">CLGEMMKernelType::RESHAPED</a>:</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        {</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;            <span class="comment">// Run interleave kernel</span></div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;            ITensorPack reshape_lhs_pack{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, lhs }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, lhs_reshaped.get() } };</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_reshape_lhs_kernel, reshape_lhs_pack, <span class="keyword">false</span>);</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;            <span class="keywordflow">if</span>(!_reshape_b_only_on_first_run)</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;            {</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                <span class="comment">// Run transpose kernel</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                ITensorPack reshape_rhs_pack{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, rhs }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, rhs_reshaped.get() } };</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_reshape_rhs_kernel, reshape_rhs_pack, <span class="keyword">false</span>);</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;            }</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;            <span class="comment">// Copy original tensor pack and overwrite lhs and rhs with reshaped counterparts</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;            ITensorPack gemm_reshaped_pack(tensors);</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;            gemm_reshaped_pack.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, lhs_reshaped.get());</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;            gemm_reshaped_pack.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, rhs_reshaped.get());</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;            <span class="keywordflow">if</span>(_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6">CLGEMMKernelType::RESHAPED</a>)</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;            {</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mm_reshaped_kernel, gemm_reshaped_pack, <span class="keyword">true</span>);</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;            }</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        }</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">CLGEMMKernelType::RESHAPED_ONLY_RHS</a>:</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        {</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;            <span class="keywordflow">if</span>(!_reshape_b_only_on_first_run)</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;            {</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                <span class="comment">// Run transpose kernel</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                ITensorPack reshape_rhs_pack{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, rhs }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, rhs_reshaped.get() } };</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_reshape_rhs_kernel, reshape_rhs_pack, <span class="keyword">false</span>);</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;            }</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;            <span class="comment">// In case of RESHAPED_ONLY_RHS, we need to check the padding requirement</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;            <span class="comment">// Check if the lhs or dst tensors have padding</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> cross_plane_pad_lhs = lhs-&gt;info()-&gt;padding().top + lhs-&gt;info()-&gt;padding().bottom;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> cross_plane_pad_dst = dst-&gt;info()-&gt;padding().top + dst-&gt;info()-&gt;padding().bottom;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;            <span class="keywordtype">bool</span>               has_pad_y           = (cross_plane_pad_lhs != 0) || (cross_plane_pad_dst != 0);</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;            <span class="comment">// Copy original tensor pack and overwrite rhs with reshaped counterpart</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;            ITensorPack gemm_reshaped_onlyrhs_pack(tensors);</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;            gemm_reshaped_onlyrhs_pack.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, rhs_reshaped.get());</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;            <span class="keywordflow">if</span>(has_pad_y)</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;            {</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(has_pad_y);</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;            }</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;            {</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mm_reshaped_only_rhs_kernel, gemm_reshaped_onlyrhs_pack, <span class="keyword">true</span>);</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;            }</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        }</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a>:</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        {</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;            <span class="keywordflow">if</span>(!_reshape_b_only_on_first_run)</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            {</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                <span class="comment">// Run transpose kernel</span></div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                ITensorPack reshape_rhs_pack{ { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, rhs }, { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, rhs_reshaped.get() } };</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_reshape_rhs_kernel, reshape_rhs_pack, <span class="keyword">false</span>);</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            }</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;            <span class="comment">// In case of RESHAPED_ONLY_RHS, we need to check the padding requirement</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;            <span class="comment">// Check if the lhs or dst tensors have padding</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> cross_plane_pad_lhs = lhs-&gt;info()-&gt;padding().top + lhs-&gt;info()-&gt;padding().bottom;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> cross_plane_pad_dst = dst-&gt;info()-&gt;padding().top + dst-&gt;info()-&gt;padding().bottom;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;            <span class="keywordtype">bool</span>               has_pad_y           = (cross_plane_pad_lhs != 0) || (cross_plane_pad_dst != 0);</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;            <span class="comment">// Copy original tensor pack and overwrite rhs with reshaped counterpart</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;            ITensorPack gemm_reshaped_onlyrhs_pack(tensors);</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;            gemm_reshaped_onlyrhs_pack.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, rhs_reshaped.get());</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;            <span class="keywordflow">if</span>(has_pad_y)</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;            {</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(has_pad_y);</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;            }</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;            {</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mm_reshaped_only_rhs_mmul_kernel, gemm_reshaped_onlyrhs_pack, <span class="keyword">true</span>);</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;            }</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        }</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        {</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;GEMMType not supported&quot;</span>);</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        }</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    }</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">arm_compute::CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a></div><div class="ttdoc">Reshaped GEMM kernel where only the rhs matrix is reshaped. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">arm_compute::CLGEMMKernelType::RESHAPED_ONLY_RHS</a></div><div class="ttdoc">Reshaped GEMM kernel where only the rhs matrix is reshaped. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6">arm_compute::CLGEMMKernelType::RESHAPED</a></div><div class="ttdoc">Reshaped GEMM kernel where both lhs and rhs matrices are reshaped. </div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a5c0fc6f465cae029d60ffdfc7f3e99d9"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">arm_compute::CLScheduler::enqueue_op</a></div><div class="ttdeci">void enqueue_op(ICLKernel &amp;kernel, ITensorPack &amp;tensors, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00243">CLScheduler.cpp:243</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">arm_compute::CLGEMMKernelType::NATIVE</a></div><div class="ttdoc">Native GEMM kernel with configurable block size. </div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1opencl_1_1_cl_gemm_xhtml_aff8f5e4223fd2a3020c8b252c8982d3a"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">arm_compute::opencl::ClGemm::prepare</a></div><div class="ttdeci">void prepare(ITensorPack &amp;constants) override</div><div class="ttdoc">Prepare the function for executing. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00771">ClGemm.cpp:771</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a324d709e8fb5568ada56ba4999dfb2f1"><div class="ttname"><a href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">arm_compute::offset_int_vec</a></div><div class="ttdeci">int offset_int_vec(int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_memory_helpers_8h_source.xhtml#l00038">MemoryHelpers.h:38</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9f6cb7cb1ae1f9a3260abea993ef8608"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f6cb7cb1ae1f9a3260abea993ef8608">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>gemm_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration. </p>
<p>Similar to <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a477c92242621385e4427e30b373968ca" title="Initialise the kernel&#39;s inputs and output. ">ClGemm::configure()</a></p>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00612">612</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml">ClGemm.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">ITensorInfo::are_values_constant()</a>, <a class="el" href="_error_8h_source.xhtml#l00194">ARM_COMPUTE_RETURN_ERROR_MSG</a>, <a class="el" href="_error_8h_source.xhtml#l00204">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler::get()</a>, <a class="el" href="float__ops_8h_source.xhtml#l00109">arm_compute::helpers::float_ops::is_zero()</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">arm_compute::test::validation::k</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00359">arm_compute::test::validation::m</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">arm_compute::test::validation::n</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">arm_compute::NATIVE</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02441">GEMMInfo::reinterpret_input_as_3d()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02425">GEMMInfo::reshape_b_only_on_first_run()</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6">arm_compute::RESHAPED</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">arm_compute::RESHAPED_ONLY_RHS</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">arm_compute::RESHAPED_ONLY_RHS_MMUL</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00049">CLScheduler::target()</a>.</p>

<p class="reference">Referenced by <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00557">ClGemm::configure()</a>, <a class="el" href="_n_e_elementwise_unary_layer_8cpp_source.xhtml#l00062">NEElementwiseUnaryLayer&lt; op &gt;::validate()</a>, <a class="el" href="_n_e_p_relu_layer_8cpp_source.xhtml#l00067">NEPReluLayer::validate()</a>, <a class="el" href="_c_l_p_relu_layer_8cpp_source.xhtml#l00064">CLPReluLayer::validate()</a>, <a class="el" href="_c_l_softmax_layer_8cpp_source.xhtml#l00082">CLSoftmaxLayerGeneric&lt; IS_LOG &gt;::validate()</a>, <a class="el" href="_n_e_g_e_m_m_conv2d_8cpp_source.xhtml#l00072">NEGEMMConv2d::validate()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_8cpp_source.xhtml#l00094">CLGEMM::validate()</a>, and <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00095">CLGEMMLowpMatrixMultiplyCore::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;{</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="comment">// Get the GPU target</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    <span class="keywordtype">bool</span>               reinterpret_input_as_3d = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>.reinterpret_input_as_3d();</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a>                       = reinterpret_input_as_3d ? (a-&gt;dimension(1) * a-&gt;dimension(2)) : a-&gt;dimension(1);</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>                       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;dimension(0);</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>                       = a-&gt;dimension(0);</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batch_size              = reinterpret_input_as_3d ? a-&gt;dimension(3) : a-&gt;dimension(2);</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <span class="comment">// Select GEMMType</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612a">CLGEMMKernelType</a> gemm_kernel_type = auto_select_gemm_kernel(<a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    {</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>(), a-&gt;data_type(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>, batch_size,</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    },</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>.reshape_b_only_on_first_run(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;are_values_constant());</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> fuse_add_c = (!(<a class="code" href="namespacearm__compute_1_1helpers_1_1float__ops.xhtml#a3bd19352aed7410633d1f9b95d74a809">helpers::float_ops::is_zero</a>(beta)) &amp;&amp; c != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    <span class="keyword">const</span> ITensorInfo *c_to_use = fuse_add_c ? c : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    <span class="keywordflow">switch</span>(gemm_kernel_type)</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    {</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">CLGEMMKernelType::NATIVE</a>:</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        {</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_native(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c_to_use, output, alpha, beta, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>));</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        }</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6">CLGEMMKernelType::RESHAPED</a>:</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        {</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_reshaped(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c_to_use, output, alpha, beta, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>));</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        }</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">CLGEMMKernelType::RESHAPED_ONLY_RHS</a>:</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        {</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_reshaped_only_rhs(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c_to_use, output, alpha, beta, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>));</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        }</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a>:</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        {</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_reshaped_only_rhs_mmul(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c_to_use, output, alpha, beta, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>));</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        }</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        {</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;            <a class="code" href="_error_8h.xhtml#a9561091f3566e78ad3aa39259bc4126a">ARM_COMPUTE_RETURN_ERROR_MSG</a>(<span class="stringliteral">&quot;GEMMType not supported&quot;</span>);</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        }</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    }</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a27561688e2fc60176608ef725a4ecb30"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">arm_compute::CLScheduler::target</a></div><div class="ttdeci">GPUTarget target() const</div><div class="ttdoc">Get the target GPU. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00049">CLScheduler.cpp:49</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query_xhtml"><div class="ttname"><a href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">arm_compute::cl_gemm::auto_heuristics::CommonQuery</a></div><div class="ttdoc">A collection of adaptor functions that enable the auto selection between mlgo-based heuristics and de...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_auto_heuristics_8h_source.xhtml#l00040">CLGEMMAutoHeuristics.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">arm_compute::CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a></div><div class="ttdoc">Reshaped GEMM kernel where only the rhs matrix is reshaped. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">arm_compute::CLGEMMKernelType::RESHAPED_ONLY_RHS</a></div><div class="ttdoc">Reshaped GEMM kernel where only the rhs matrix is reshaped. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612a"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612a">arm_compute::CLGEMMKernelType</a></div><div class="ttdeci">CLGEMMKernelType</div><div class="ttdoc">OpenCL GEMM kernel types. </div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_c_l_types_8h_source.xhtml#l00031">CLTypes.h:31</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa6cee782c1c68991f5738005f33558df6">arm_compute::CLGEMMKernelType::RESHAPED</a></div><div class="ttdoc">Reshaped GEMM kernel where both lhs and rhs matrices are reshaped. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa08a9b7cf30c1c3e56ca1d2060313408"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">arm_compute::test::validation::gemm_info</a></div><div class="ttdeci">gemm_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00862">GEMMMatrixMultiplyReshaped.cpp:862</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a73aa59d7b088082ec257a1c65edbf1d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">arm_compute::test::validation::k</a></div><div class="ttdeci">const unsigned int k</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">GEMMMatrixMultiplyNative.cpp:361</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a9561091f3566e78ad3aa39259bc4126a"><div class="ttname"><a href="_error_8h.xhtml#a9561091f3566e78ad3aa39259bc4126a">ARM_COMPUTE_RETURN_ERROR_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_MSG(...)</div><div class="ttdoc">An error is returned with the given description. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00194">Error.h:194</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aaf78504d96ba7177dc0c6784905ac8743">arm_compute::CLGEMMKernelType::NATIVE</a></div><div class="ttdoc">Native GEMM kernel with configurable block size. </div></div>
<div class="ttc" id="namespacearm__compute_1_1helpers_1_1float__ops_xhtml_a3bd19352aed7410633d1f9b95d74a809"><div class="ttname"><a href="namespacearm__compute_1_1helpers_1_1float__ops.xhtml#a3bd19352aed7410633d1f9b95d74a809">arm_compute::helpers::float_ops::is_zero</a></div><div class="ttdeci">bool is_zero(float a, float epsilon=0.00001f)</div><div class="ttdoc">Checks if the input floating point number is 0.0f checking if the difference is within a range define...</div><div class="ttdef"><b>Definition:</b> <a href="float__ops_8h_source.xhtml#l00109">float_ops.h:109</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a545be126d77ec11a9824249de111def9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">arm_compute::test::validation::m</a></div><div class="ttdeci">const unsigned int m</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00359">GEMMMatrixMultiplyNative.cpp:359</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a74ae0d6e96f38fecd38471431786b870"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74ae0d6e96f38fecd38471431786b870">&#9670;&nbsp;</a></span>workspace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> workspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the memory requirements required by the workspace. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aea714e0b46ed9e9d14440dbc0ece4013">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00793">793</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml">ClGemm.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00174">ClWinogradConv2d::configure()</a>.</p>
<div class="fragment"><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;{</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    <span class="keywordflow">return</span> _aux_mem;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gpu/cl/operators/<a class="el" href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_8h_source.xhtml">ClGemm.h</a></li>
<li>src/gpu/cl/operators/<a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml">ClGemm.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1opencl.xhtml">opencl</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml">ClGemm</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:57:05 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
