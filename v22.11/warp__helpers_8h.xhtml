<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/warp_helpers.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('warp__helpers_8h.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">warp_helpers.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml">helpers.h</a>&quot;</code><br />
</div>
<p><a href="warp__helpers_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aaef9851523cbc6f833700f0eb572002b"><td class="memItemLeft" align="right" valign="top">const float8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="warp__helpers_8h.xhtml#aaef9851523cbc6f833700f0eb572002b">clamp_to_border_with_size</a> (float8 coords, const float width, const float height, const float border_size)</td></tr>
<tr class="memdesc:aaef9851523cbc6f833700f0eb572002b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clamps the given coordinates to the borders according to the border size.  <a href="#aaef9851523cbc6f833700f0eb572002b">More...</a><br /></td></tr>
<tr class="separator:aaef9851523cbc6f833700f0eb572002b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbdf2ca9e8fe0b67f9359929ef743126"><td class="memItemLeft" align="right" valign="top">const float8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="warp__helpers_8h.xhtml#adbdf2ca9e8fe0b67f9359929ef743126">clamp_to_border</a> (float8 coords, const float width, const float height)</td></tr>
<tr class="memdesc:adbdf2ca9e8fe0b67f9359929ef743126"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clamps the given coordinates to the borders.  <a href="#adbdf2ca9e8fe0b67f9359929ef743126">More...</a><br /></td></tr>
<tr class="separator:adbdf2ca9e8fe0b67f9359929ef743126"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba42442a4c991cdbb52727fa370676f1"><td class="memItemLeft" align="right" valign="top">const DATA_TYPE4&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="warp__helpers_8h.xhtml#aba42442a4c991cdbb52727fa370676f1">read_texels4</a> (const <a class="el" href="struct_image.xhtml">Image</a> *in, const int8 coords)</td></tr>
<tr class="memdesc:aba42442a4c991cdbb52727fa370676f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads four texels from the input image.  <a href="#aba42442a4c991cdbb52727fa370676f1">More...</a><br /></td></tr>
<tr class="separator:aba42442a4c991cdbb52727fa370676f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d8047717d6464cad02c5979d09576db"><td class="memItemLeft" align="right" valign="top">const float8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="warp__helpers_8h.xhtml#a2d8047717d6464cad02c5979d09576db">get_neighbour_coords</a> (const float2 coord)</td></tr>
<tr class="memdesc:a2d8047717d6464cad02c5979d09576db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Given a texel coordinates this function will return the following array of coordinates: [ P, right neighbour, below neighbour, below right neighbour ].  <a href="#a2d8047717d6464cad02c5979d09576db">More...</a><br /></td></tr>
<tr class="separator:a2d8047717d6464cad02c5979d09576db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eda58d341afa44da00ebf47f9349499"><td class="memItemLeft" align="right" valign="top">const DATA_TYPE4&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="warp__helpers_8h.xhtml#a8eda58d341afa44da00ebf47f9349499">bilinear_interpolate_with_border</a> (const <a class="el" href="struct_image.xhtml">Image</a> *in, const float8 coords, const float width, const float height, const float border_size)</td></tr>
<tr class="memdesc:a8eda58d341afa44da00ebf47f9349499"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the bilinear interpolation for each set of coordinates in the vector coords and returns the values.  <a href="#a8eda58d341afa44da00ebf47f9349499">More...</a><br /></td></tr>
<tr class="separator:a8eda58d341afa44da00ebf47f9349499"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abea9f226daf3e0ad741d03cf7417d353"><td class="memItemLeft" align="right" valign="top">const DATA_TYPE4&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="warp__helpers_8h.xhtml#abea9f226daf3e0ad741d03cf7417d353">bilinear_interpolate</a> (const <a class="el" href="struct_image.xhtml">Image</a> *in, const float8 coords, const float width, const float height)</td></tr>
<tr class="memdesc:abea9f226daf3e0ad741d03cf7417d353"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the bilinear interpolation for each set of coordinates in the vector coords and returns the values.  <a href="#abea9f226daf3e0ad741d03cf7417d353">More...</a><br /></td></tr>
<tr class="separator:abea9f226daf3e0ad741d03cf7417d353"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="abea9f226daf3e0ad741d03cf7417d353"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abea9f226daf3e0ad741d03cf7417d353">&#9670;&nbsp;</a></span>bilinear_interpolate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const DATA_TYPE4 bilinear_interpolate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_image.xhtml">Image</a> *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float8&#160;</td>
          <td class="paramname"><em>coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Computes the bilinear interpolation for each set of coordinates in the vector coords and returns the values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>Pointer to the source image. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">coords</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> of four 2D coordinates. Even pos is x and odd y. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">width</td><td>Width of the image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">height</td><td>Height of the image </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="warp__helpers_8h_source.xhtml#l00129">129</a> of file <a class="el" href="warp__helpers_8h_source.xhtml">warp_helpers.h</a>.</p>

<p class="reference">References <a class="el" href="warp__helpers_8h_source.xhtml#l00088">bilinear_interpolate_with_border()</a>.</p>
<div class="fragment"><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="warp__helpers_8h.xhtml#a8eda58d341afa44da00ebf47f9349499">bilinear_interpolate_with_border</a>(in, coords, width, height, 1);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="ttc" id="warp__helpers_8h_xhtml_a8eda58d341afa44da00ebf47f9349499"><div class="ttname"><a href="warp__helpers_8h.xhtml#a8eda58d341afa44da00ebf47f9349499">bilinear_interpolate_with_border</a></div><div class="ttdeci">const DATA_TYPE4 bilinear_interpolate_with_border(const Image *in, const float8 coords, const float width, const float height, const float border_size)</div><div class="ttdoc">Computes the bilinear interpolation for each set of coordinates in the vector coords and returns the ...</div><div class="ttdef"><b>Definition:</b> <a href="warp__helpers_8h_source.xhtml#l00088">warp_helpers.h:88</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8eda58d341afa44da00ebf47f9349499"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8eda58d341afa44da00ebf47f9349499">&#9670;&nbsp;</a></span>bilinear_interpolate_with_border()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const DATA_TYPE4 bilinear_interpolate_with_border </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_image.xhtml">Image</a> *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float8&#160;</td>
          <td class="paramname"><em>coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>border_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Computes the bilinear interpolation for each set of coordinates in the vector coords and returns the values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>Pointer to the source image. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">coords</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> of four 2D coordinates. Even pos is x and odd y. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">width</td><td>Width of the image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">height</td><td>Height of the image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">border_size</td><td>Border size </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="warp__helpers_8h_source.xhtml#l00088">88</a> of file <a class="el" href="warp__helpers_8h_source.xhtml">warp_helpers.h</a>.</p>

<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="warp__helpers_8h_source.xhtml#l00034">clamp_to_border_with_size()</a>, <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00731">CONVERT</a>, <a class="el" href="warp__helpers_8h_source.xhtml#l00075">get_neighbour_coords()</a>, <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01084">offset()</a>, <a class="el" href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor::t</a>, and <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00728">VEC_DATA_TYPE</a>.</p>

<p class="reference">Referenced by <a class="el" href="warp__helpers_8h_source.xhtml#l00129">bilinear_interpolate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// If any of the 4 texels is out of the image&#39;s boundaries we use the border value (REPLICATE or CONSTANT) for any texel out of the image.</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="comment">// Sets the 4x4 coordinates for each of the four input texels</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">const</span> float8  fc = floor(coords);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keyword">const</span> float16 c1 = (float16)(</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                           <a class="code" href="warp__helpers_8h.xhtml#aaef9851523cbc6f833700f0eb572002b">clamp_to_border_with_size</a>(<a class="code" href="warp__helpers_8h.xhtml#a2d8047717d6464cad02c5979d09576db">get_neighbour_coords</a>((float2)(fc.s0, fc.s1)), width, height, border_size),</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                           <a class="code" href="warp__helpers_8h.xhtml#aaef9851523cbc6f833700f0eb572002b">clamp_to_border_with_size</a>(<a class="code" href="warp__helpers_8h.xhtml#a2d8047717d6464cad02c5979d09576db">get_neighbour_coords</a>((float2)(fc.s2, fc.s3)), width, height, border_size));</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keyword">const</span> float16 c2 = (float16)(</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                           <a class="code" href="warp__helpers_8h.xhtml#aaef9851523cbc6f833700f0eb572002b">clamp_to_border_with_size</a>(<a class="code" href="warp__helpers_8h.xhtml#a2d8047717d6464cad02c5979d09576db">get_neighbour_coords</a>((float2)(fc.s4, fc.s5)), width, height, border_size),</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                           <a class="code" href="warp__helpers_8h.xhtml#aaef9851523cbc6f833700f0eb572002b">clamp_to_border_with_size</a>(<a class="code" href="warp__helpers_8h.xhtml#a2d8047717d6464cad02c5979d09576db">get_neighbour_coords</a>((float2)(fc.s6, fc.s7)), width, height, border_size));</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="comment">// Loads the values from the input image</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">const</span> float16 <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> = (float16)(</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                          <span class="comment">/* tl, tr, bl, br */</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                          * ((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c1.s0, c1.s1)), *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c1.s2, c1.s3)),</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                          *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c1.s4, c1.s5)), *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c1.s6, c1.s7)),</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                          *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c1.s8, c1.s9)), *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c1.sa, c1.sb)),</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                          *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c1.sc, c1.sd)), *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c1.se, c1.sf)),</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                          *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c2.s0, c2.s1)), *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c2.s2, c2.s3)),</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                          *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c2.s4, c2.s5)), *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c2.s6, c2.s7)),</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                          *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c2.s8, c2.s9)), *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c2.sa, c2.sb)),</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                          *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c2.sc, c2.sd)), *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, c2.se, c2.sf)));</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">const</span> float8 a  = coords - fc;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">const</span> float8 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>  = ((float8)(1.f)) - a;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">const</span> float4 fr = (float4)(</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                          ((t.s0 * b.s0 * b.s1) + (t.s1 * a.s0 * b.s1) + (t.s2 * b.s0 * a.s1) + (t.s3 * a.s0 * a.s1)),</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                          ((t.s4 * b.s2 * b.s3) + (t.s5 * a.s2 * b.s3) + (t.s6 * b.s2 * a.s3) + (t.s7 * a.s2 * a.s3)),</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                          ((t.s8 * b.s4 * b.s5) + (t.s9 * a.s4 * b.s5) + (t.sa * b.s4 * a.s5) + (t.sb * a.s4 * a.s5)),</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                          ((t.sc * b.s6 * b.s7) + (t.sd * a.s6 * b.s7) + (t.se * b.s6 * a.s7) + (t.sf * a.s6 * a.s7)));</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(fr, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 4));</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div><div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01084">helpers.h:1084</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_aa8d95ba04fc73845abc6045952cae5be"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a></div><div class="ttdeci">#define CONVERT(x, type)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00731">helpers.h:731</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="warp__helpers_8h_xhtml_a2d8047717d6464cad02c5979d09576db"><div class="ttname"><a href="warp__helpers_8h.xhtml#a2d8047717d6464cad02c5979d09576db">get_neighbour_coords</a></div><div class="ttdeci">const float8 get_neighbour_coords(const float2 coord)</div><div class="ttdoc">Given a texel coordinates this function will return the following array of coordinates: [ P...</div><div class="ttdef"><b>Definition:</b> <a href="warp__helpers_8h_source.xhtml#l00075">warp_helpers.h:75</a></div></div>
<div class="ttc" id="warp__helpers_8h_xhtml_aaef9851523cbc6f833700f0eb572002b"><div class="ttname"><a href="warp__helpers_8h.xhtml#aaef9851523cbc6f833700f0eb572002b">clamp_to_border_with_size</a></div><div class="ttdeci">const float8 clamp_to_border_with_size(float8 coords, const float width, const float height, const float border_size)</div><div class="ttdoc">Clamps the given coordinates to the borders according to the border size. </div><div class="ttdef"><b>Definition:</b> <a href="warp__helpers_8h_source.xhtml#l00034">warp_helpers.h:34</a></div></div>
<div class="ttc" id="namespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a36f754c05b6fddf6df0d8d0a74f8159f"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a></div><div class="ttdeci">#define VEC_DATA_TYPE(type, size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00728">helpers.h:728</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adbdf2ca9e8fe0b67f9359929ef743126"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbdf2ca9e8fe0b67f9359929ef743126">&#9670;&nbsp;</a></span>clamp_to_border()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const float8 clamp_to_border </td>
          <td>(</td>
          <td class="paramtype">float8&#160;</td>
          <td class="paramname"><em>coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clamps the given coordinates to the borders. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">coords</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> of 2D coordinates to clamp. Even positions are X coords, odd positions are Y coords. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">width</td><td>Width of the image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">height</td><td>Height of the image </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="warp__helpers_8h_source.xhtml#l00048">48</a> of file <a class="el" href="warp__helpers_8h_source.xhtml">warp_helpers.h</a>.</p>

<p class="reference">References <a class="el" href="warp__helpers_8h_source.xhtml#l00034">clamp_to_border_with_size()</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="warp__helpers_8h.xhtml#aaef9851523cbc6f833700f0eb572002b">clamp_to_border_with_size</a>(coords, width, height, 1);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="ttc" id="warp__helpers_8h_xhtml_aaef9851523cbc6f833700f0eb572002b"><div class="ttname"><a href="warp__helpers_8h.xhtml#aaef9851523cbc6f833700f0eb572002b">clamp_to_border_with_size</a></div><div class="ttdeci">const float8 clamp_to_border_with_size(float8 coords, const float width, const float height, const float border_size)</div><div class="ttdoc">Clamps the given coordinates to the borders according to the border size. </div><div class="ttdef"><b>Definition:</b> <a href="warp__helpers_8h_source.xhtml#l00034">warp_helpers.h:34</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aaef9851523cbc6f833700f0eb572002b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaef9851523cbc6f833700f0eb572002b">&#9670;&nbsp;</a></span>clamp_to_border_with_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const float8 clamp_to_border_with_size </td>
          <td>(</td>
          <td class="paramtype">float8&#160;</td>
          <td class="paramname"><em>coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>border_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clamps the given coordinates to the borders according to the border size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">coords</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> of 2D coordinates to clamp. Even positions are X coords, odd positions are Y coords. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">width</td><td>Width of the image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">height</td><td>Height of the image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">border_size</td><td>Border size of the image </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="warp__helpers_8h_source.xhtml#l00034">34</a> of file <a class="el" href="warp__helpers_8h_source.xhtml">warp_helpers.h</a>.</p>

<p class="reference">References <a class="el" href="_utility_8h_source.xhtml#l00101">arm_compute::utility::clamp()</a>.</p>

<p class="reference">Referenced by <a class="el" href="warp__helpers_8h_source.xhtml#l00088">bilinear_interpolate_with_border()</a>, and <a class="el" href="warp__helpers_8h_source.xhtml#l00048">clamp_to_border()</a>.</p>
<div class="fragment"><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">const</span> float4 clamped_x = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a96efecf997f13a914609ddf1eb67f624">clamp</a>(coords.even, 0.0f - border_size, width - 1 + border_size);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">const</span> float4 clamped_y = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a96efecf997f13a914609ddf1eb67f624">clamp</a>(coords.odd, 0.0f - border_size, height - 1 + border_size);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">return</span> (float8)(clamped_x.s0, clamped_y.s0, clamped_x.s1, clamped_y.s1, clamped_x.s2, clamped_y.s2, clamped_x.s3, clamped_y.s3);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1utility_xhtml_a96efecf997f13a914609ddf1eb67f624"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#a96efecf997f13a914609ddf1eb67f624">arm_compute::utility::clamp</a></div><div class="ttdeci">DataType clamp(const DataType &amp;n, const DataType &amp;lower=std::numeric_limits&lt; RangeType &gt;::lowest(), const DataType &amp;upper=std::numeric_limits&lt; RangeType &gt;::max())</div><div class="ttdoc">Performs clamping among a lower and upper value. </div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00101">Utility.h:101</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2d8047717d6464cad02c5979d09576db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d8047717d6464cad02c5979d09576db">&#9670;&nbsp;</a></span>get_neighbour_coords()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const float8 get_neighbour_coords </td>
          <td>(</td>
          <td class="paramtype">const float2&#160;</td>
          <td class="paramname"><em>coord</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Given a texel coordinates this function will return the following array of coordinates: [ P, right neighbour, below neighbour, below right neighbour ]. </p>
<dl class="section note"><dt>Note</dt><dd>No checks to see if the coordinates are out of the image are done here.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">coord</td><td>Input coordinates</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>vector of 8 floats with the coordinates, even positions are x and odd y. </dd></dl>

<p class="definition">Definition at line <a class="el" href="warp__helpers_8h_source.xhtml#l00075">75</a> of file <a class="el" href="warp__helpers_8h_source.xhtml">warp_helpers.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="warp__helpers_8h_source.xhtml#l00088">bilinear_interpolate_with_border()</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> (float8)(<span class="comment">/*tl*/</span> coord.s0, coord.s1, <span class="comment">/*tr*/</span> coord.s0 + 1, coord.s1, <span class="comment">/*bl*/</span> coord.s0, coord.s1 + 1, <span class="comment">/*br*/</span> coord.s0 + 1, coord.s1 + 1);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aba42442a4c991cdbb52727fa370676f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba42442a4c991cdbb52727fa370676f1">&#9670;&nbsp;</a></span>read_texels4()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const DATA_TYPE4 read_texels4 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_image.xhtml">Image</a> *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8&#160;</td>
          <td class="paramname"><em>coords</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads four texels from the input image. </p>
<p>The coords vector is used to determine which texels to be read.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>Pointer to the source image. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">coords</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> of coordinates to be read from the image. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="warp__helpers_8h_source.xhtml#l00058">58</a> of file <a class="el" href="warp__helpers_8h_source.xhtml">warp_helpers.h</a>.</p>

<p class="reference">References <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01084">offset()</a>, and <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00728">VEC_DATA_TYPE</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">return</span> (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 4))(*((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, coords.s0, coords.s1)),</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                         *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, coords.s2, coords.s3)),</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                         *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, coords.s4, coords.s5)),</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                         *((__global DATA_TYPE *)<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(in, coords.s6, coords.s7)));</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01084">helpers.h:1084</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a36f754c05b6fddf6df0d8d0a74f8159f"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a></div><div class="ttdeci">#define VEC_DATA_TYPE(type, size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00728">helpers.h:728</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="warp__helpers_8h.xhtml">warp_helpers.h</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:57 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
