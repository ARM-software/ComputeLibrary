<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: DepthwiseDepthfirstGenericWithMultiplier&lt; strategy &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">DepthwiseDepthfirstGenericWithMultiplier&lt; strategy &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="depthwise__depthfirst__generic__multiplier_8hpp_source.xhtml">depthwise_depthfirst_generic_multiplier.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for DepthwiseDepthfirstGenericWithMultiplier&lt; strategy &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier__coll__graph.svg" width="760" height="82"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a72ee4f347aaf509982f52539e066e67d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml#a72ee4f347aaf509982f52539e066e67d">DepthwiseDepthfirstGenericWithMultiplier</a> (const DepthwiseArgs &amp;args)</td></tr>
<tr class="separator:a72ee4f347aaf509982f52539e066e67d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaebfe1e43381d91c30fa920a27966c5a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml#aaebfe1e43381d91c30fa920a27966c5a">DepthwiseDepthfirstGenericWithMultiplier</a> (<a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml">DepthwiseDepthfirstGenericWithMultiplier</a> &amp;)=delete</td></tr>
<tr class="separator:aaebfe1e43381d91c30fa920a27966c5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac23dc3da8e31018d9d897b31ebfa9af2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml">DepthwiseDepthfirstGenericWithMultiplier</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml#ac23dc3da8e31018d9d897b31ebfa9af2">operator=</a> (<a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml">DepthwiseDepthfirstGenericWithMultiplier</a> &amp;)=delete</td></tr>
<tr class="separator:ac23dc3da8e31018d9d897b31ebfa9af2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e86e96b1933ec8bd8eae5f55654d111"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml#a4e86e96b1933ec8bd8eae5f55654d111">pack_parameters</a> (void *buffer, const void *biases, const void *weights, size_t ld_weight_col, size_t ld_weight_row) override</td></tr>
<tr class="separator:a4e86e96b1933ec8bd8eae5f55654d111"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5039576663a8b9a8ed58e927c040b20"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml#ad5039576663a8b9a8ed58e927c040b20">execute</a> (const unsigned int <a class="el" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#adfc4722fbfd74f4e995ddd6929ba02a5">batches</a>, const unsigned int <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8cpp.xhtml#ab6fe700b6dad064ab5478be3dadcf88b">input_height</a>, const unsigned int <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8cpp.xhtml#a12b51e0ffb6e0b213a91b2067180e647">input_width</a>, const unsigned int input_channels, const PaddingValues &amp;padding, const void *const _input, const size_t ld_input_col, const size_t ld_input_row, const size_t ld_input_batch, const void *const parameters, const unsigned int output_height, const unsigned int output_width, void *const _output, const size_t ld_output_col, const size_t ld_output_row, const size_t ld_output_batch, void *const _working_space, const unsigned int thread_id, const unsigned int n_threads) const override</td></tr>
<tr class="separator:ad5039576663a8b9a8ed58e927c040b20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml">DepthwiseDepthfirstGenericWithMultiplierBase&lt; strategy &gt;</a></td></tr>
<tr class="memitem:a6bac62814a47564dffbc3909cadf85d3 inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml#a6bac62814a47564dffbc3909cadf85d3">DepthwiseDepthfirstGenericWithMultiplierBase</a> (const DepthwiseArgs &amp;args)</td></tr>
<tr class="separator:a6bac62814a47564dffbc3909cadf85d3 inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1850f2bc8d0bc59ac88c28f8444d764d inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml#a1850f2bc8d0bc59ac88c28f8444d764d">DepthwiseDepthfirstGenericWithMultiplierBase</a> (<a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml">DepthwiseDepthfirstGenericWithMultiplierBase</a> &amp;)=delete</td></tr>
<tr class="separator:a1850f2bc8d0bc59ac88c28f8444d764d inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71774855dc5b8830ad974a3937ebf45c inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml">DepthwiseDepthfirstGenericWithMultiplierBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml#a71774855dc5b8830ad974a3937ebf45c">operator=</a> (<a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml">DepthwiseDepthfirstGenericWithMultiplierBase</a> &amp;)=delete</td></tr>
<tr class="separator:a71774855dc5b8830ad974a3937ebf45c inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6de6182e7c12d5492f092057f5b32d30 inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml#a6de6182e7c12d5492f092057f5b32d30">get_storage_size</a> (void) const override</td></tr>
<tr class="separator:a6de6182e7c12d5492f092057f5b32d30 inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75e1cc96fb24afdaf053389218d889c7 inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml#a75e1cc96fb24afdaf053389218d889c7">get_working_size</a> (const unsigned int n_threads, const unsigned int n_channels) const override</td></tr>
<tr class="separator:a75e1cc96fb24afdaf053389218d889c7 inherit pub_methods_classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class strategy&gt;<br />
class arm_conv::depthwise::DepthwiseDepthfirstGenericWithMultiplier&lt; strategy &gt;</h3>


<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__generic__multiplier_8hpp_source.xhtml#l00373">373</a> of file <a class="el" href="depthwise__depthfirst__generic__multiplier_8hpp_source.xhtml">depthwise_depthfirst_generic_multiplier.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a72ee4f347aaf509982f52539e066e67d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72ee4f347aaf509982f52539e066e67d">&#9670;&nbsp;</a></span>DepthwiseDepthfirstGenericWithMultiplier() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml">DepthwiseDepthfirstGenericWithMultiplier</a> </td>
          <td>(</td>
          <td class="paramtype">const DepthwiseArgs &amp;&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__generic__multiplier_8hpp_source.xhtml#l00385">385</a> of file <a class="el" href="depthwise__depthfirst__generic__multiplier_8hpp_source.xhtml">depthwise_depthfirst_generic_multiplier.hpp</a>.</p>

<p class="reference">References <a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier_base.xhtml#a71774855dc5b8830ad974a3937ebf45c">DepthwiseDepthfirstGenericWithMultiplierBase&lt; strategy &gt;::operator=()</a>.</p>
<div class="fragment"><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    : Parent(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>), m_biases(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  {</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;  }</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aaebfe1e43381d91c30fa920a27966c5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaebfe1e43381d91c30fa920a27966c5a">&#9670;&nbsp;</a></span>DepthwiseDepthfirstGenericWithMultiplier() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml">DepthwiseDepthfirstGenericWithMultiplier</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml">DepthwiseDepthfirstGenericWithMultiplier</a>&lt; <a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a> &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad5039576663a8b9a8ed58e927c040b20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5039576663a8b9a8ed58e927c040b20">&#9670;&nbsp;</a></span>execute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void execute </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>batches</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>input_height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>input_width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>input_channels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const PaddingValues &amp;&#160;</td>
          <td class="paramname"><em>padding</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *const&#160;</td>
          <td class="paramname"><em>_input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>ld_input_col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>ld_input_row</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>ld_input_batch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *const&#160;</td>
          <td class="paramname"><em>parameters</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>output_height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>output_width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *const&#160;</td>
          <td class="paramname"><em>_output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>ld_output_col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>ld_output_row</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>ld_output_batch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *const&#160;</td>
          <td class="paramname"><em>_working_space</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>thread_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>n_threads</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__generic__multiplier_8hpp_source.xhtml#l00400">400</a> of file <a class="el" href="depthwise__depthfirst__generic__multiplier_8hpp_source.xhtml">depthwise_depthfirst_generic_multiplier.hpp</a>.</p>

<p class="reference">References <a class="el" href="working__space_8hpp_source.xhtml#l00145">activation_max</a>, <a class="el" href="working__space_8hpp_source.xhtml#l00145">activation_min</a>, <a class="el" href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7ad07333cf360612093b94effed734829c">Activation::BoundedReLU</a>, <a class="el" href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7add10d919fa85cf27fc78c0e06fe0b378">Activation::ReLU</a>, and <a class="el" href="working__space_8hpp_source.xhtml#l00105">strategy</a>.</p>
<div class="fragment"><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  {</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    <a class="code" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a> strat(this-&gt;m_args.cpu_info);</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    arm_gemm::profiler prof;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="comment">// Compute activation values</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    TAccum <a class="code" href="working__space_8hpp.xhtml#a08360bdcd98b37c2a036a52f4fd25adf">activation_min</a>, <a class="code" href="working__space_8hpp.xhtml#a1a2a4f08423b36533dee1fd7e8eebdf8">activation_max</a>;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    std::tie(activation_min, activation_max) = get_default_activation_values&lt;TAccum&gt;();</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keywordflow">switch</span> (this-&gt;m_args.activation.type)</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    {</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      <span class="keywordflow">case</span> <a class="code" href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7ad07333cf360612093b94effed734829c">arm_gemm::Activation::Type::BoundedReLU</a>:</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        activation_max = <span class="keyword">static_cast&lt;</span>TAccum<span class="keyword">&gt;</span>(this-&gt;m_args.activation.param1);</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        <span class="comment">// Fall through</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;      <span class="keywordflow">case</span> <a class="code" href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7add10d919fa85cf27fc78c0e06fe0b378">arm_gemm::Activation::Type::ReLU</a>:</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        activation_min = <span class="keyword">static_cast&lt;</span>TAccum<span class="keyword">&gt;</span>(0);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      <span class="keywordflow">default</span>:</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    }</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="comment">// Get a function to call for each point of the output</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="keyword">auto</span> tile_fn = [&amp;] (<span class="keyword">const</span> TInput **inptrs,</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                        TOutput **outptrs,</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                        <span class="keyword">const</span> TWeight *weights,</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> int,</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> start_output_channel) {</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      <span class="keyword">auto</span> p = prof.ScopedProfiler(PROFILE_KERNEL, (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>)(strategy::output_rows() * strategy::output_cols() * this-&gt;m_args.channel_multiplier * this-&gt;m_args.kernel_rows * this-&gt;m_args.kernel_cols));</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      strat.kernel(</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        inptrs, outptrs, weights,</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        m_biases ? m_biases + start_output_channel : <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        this-&gt;kernel_points(), this-&gt;m_args.channel_multiplier,</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        activation_min, activation_max</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      );</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    };</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    Parent::execute_tiles(</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;      tile_fn, 0.0f,</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;      <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#adfc4722fbfd74f4e995ddd6929ba02a5">batches</a>, <a class="code" href="depthwiseconv2d_2generic_2neon_2impl_8cpp.xhtml#ab6fe700b6dad064ab5478be3dadcf88b">input_height</a>, <a class="code" href="depthwiseconv2d_2generic_2neon_2impl_8cpp.xhtml#a12b51e0ffb6e0b213a91b2067180e647">input_width</a>, input_channels, padding,</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;      _input, ld_input_col, ld_input_row, ld_input_batch,</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;      <a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>,</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      output_height, output_width,</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;      _output, ld_output_col, ld_output_row, ld_output_batch,</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;      _working_space, thread_id, n_threads</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    );</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;  }</div><div class="ttc" id="working__space_8hpp_xhtml_a08360bdcd98b37c2a036a52f4fd25adf"><div class="ttname"><a href="working__space_8hpp.xhtml#a08360bdcd98b37c2a036a52f4fd25adf">activation_min</a></div><div class="ttdeci">T activation_min</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00145">working_space.hpp:145</a></div></div>
<div class="ttc" id="depthwiseconv2d_2generic_2neon_2impl_8cpp_xhtml_ab6fe700b6dad064ab5478be3dadcf88b"><div class="ttname"><a href="depthwiseconv2d_2generic_2neon_2impl_8cpp.xhtml#ab6fe700b6dad064ab5478be3dadcf88b">input_height</a></div><div class="ttdeci">const size_t input_height</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8cpp_source.xhtml#l00061">impl.cpp:61</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_activation_xhtml_a1d1cfd8ffb84e947f82999c682b666a7add10d919fa85cf27fc78c0e06fe0b378"><div class="ttname"><a href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7add10d919fa85cf27fc78c0e06fe0b378">arm_gemm::Activation::Type::ReLU</a></div></div>
<div class="ttc" id="depthwiseconv2d_2generic_2neon_2impl_8cpp_xhtml_a12b51e0ffb6e0b213a91b2067180e647"><div class="ttname"><a href="depthwiseconv2d_2generic_2neon_2impl_8cpp.xhtml#a12b51e0ffb6e0b213a91b2067180e647">input_width</a></div><div class="ttdeci">const size_t input_width</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8cpp_source.xhtml#l00062">impl.cpp:62</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_abb222b6342b2b9056ec65056984d5e21"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">arm_compute::test::parameters</a></div><div class="ttdeci">std::unique_ptr&lt; ParametersLibrary &gt; parameters</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00046">Framework.cpp:46</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_af96bef5f590df4bd6149576c22be99bb"><div class="ttname"><a href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a></div><div class="ttdeci">const StratType * strategy</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00105">working_space.hpp:105</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_a1a2a4f08423b36533dee1fd7e8eebdf8"><div class="ttname"><a href="working__space_8hpp.xhtml#a1a2a4f08423b36533dee1fd7e8eebdf8">activation_max</a></div><div class="ttdeci">T activation_max</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00145">working_space.hpp:145</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_activation_xhtml_a1d1cfd8ffb84e947f82999c682b666a7ad07333cf360612093b94effed734829c"><div class="ttname"><a href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7ad07333cf360612093b94effed734829c">arm_gemm::Activation::Type::BoundedReLU</a></div></div>
<div class="ttc" id="_cpu_gemm_assembly_dispatch_8cpp_xhtml_adfc4722fbfd74f4e995ddd6929ba02a5"><div class="ttname"><a href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#adfc4722fbfd74f4e995ddd6929ba02a5">batches</a></div><div class="ttdeci">unsigned int batches</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00058">CpuGemmAssemblyDispatch.cpp:58</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac23dc3da8e31018d9d897b31ebfa9af2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac23dc3da8e31018d9d897b31ebfa9af2">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml">DepthwiseDepthfirstGenericWithMultiplier</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml">DepthwiseDepthfirstGenericWithMultiplier</a>&lt; <a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a> &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4e86e96b1933ec8bd8eae5f55654d111"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e86e96b1933ec8bd8eae5f55654d111">&#9670;&nbsp;</a></span>pack_parameters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void pack_parameters </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>ld_weight_col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>ld_weight_row</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="depthwise__depthfirst__generic__multiplier_8hpp_source.xhtml#l00393">393</a> of file <a class="el" href="depthwise__depthfirst__generic__multiplier_8hpp_source.xhtml">depthwise_depthfirst_generic_multiplier.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;  {</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    m_biases = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>TAccum *<span class="keyword">&gt;</span>(biases);</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    Parent::pack_weights(static_cast&lt;TAccum *&gt;(buffer), static_cast&lt;const TWeight *&gt;(weights), ld_weight_col, ld_weight_row);</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/core/NEON/kernels/arm_conv/depthwise/<a class="el" href="depthwise__depthfirst__generic__multiplier_8hpp_source.xhtml">depthwise_depthfirst_generic_multiplier.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__conv.xhtml">arm_conv</a></li><li class="navelem"><a class="el" href="namespacearm__conv_1_1depthwise.xhtml">depthwise</a></li><li class="navelem"><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_with_multiplier.xhtml">DepthwiseDepthfirstGenericWithMultiplier</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:57:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
