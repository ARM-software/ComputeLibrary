<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: format_doxygen Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespaceformat__doxygen.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">format_doxygen Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0f82b9801e9e1efd94c9c7cb2f3f955b"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceformat__doxygen.xhtml#a0f82b9801e9e1efd94c9c7cb2f3f955b">process_comment</a> (fd, <a class="el" href="namespaceformat__doxygen.xhtml#a8c0288707ed90c2275d70e22bd1f16d9">comment</a>, <a class="el" href="namespaceformat__doxygen.xhtml#a62ce1089f60022203804ed7418ea39e8">first_param</a>, <a class="el" href="namespaceformat__doxygen.xhtml#ab794587cd8309d35dafb5d86569354ff">last_param</a>)</td></tr>
<tr class="separator:a0f82b9801e9e1efd94c9c7cb2f3f955b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:aaa3cab7a9bd1427b93fab510347b21ef"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceformat__doxygen.xhtml#aaa3cab7a9bd1427b93fab510347b21ef">n_file</a> = 0</td></tr>
<tr class="separator:aaa3cab7a9bd1427b93fab510347b21ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33b7040110dd4515d69b9d314e372439"><td class="memItemLeft" align="right" valign="top">list&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceformat__doxygen.xhtml#a33b7040110dd4515d69b9d314e372439">paths</a> = []</td></tr>
<tr class="separator:a33b7040110dd4515d69b9d314e372439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1000d1f2ea9878f60bc119650013894"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceformat__doxygen.xhtml#ab1000d1f2ea9878f60bc119650013894">encoding</a></td></tr>
<tr class="separator:ab1000d1f2ea9878f60bc119650013894"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c0288707ed90c2275d70e22bd1f16d9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceformat__doxygen.xhtml#a8c0288707ed90c2275d70e22bd1f16d9">comment</a> = list()</td></tr>
<tr class="separator:a8c0288707ed90c2275d70e22bd1f16d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62ce1089f60022203804ed7418ea39e8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceformat__doxygen.xhtml#a62ce1089f60022203804ed7418ea39e8">first_param</a> = -1</td></tr>
<tr class="separator:a62ce1089f60022203804ed7418ea39e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab794587cd8309d35dafb5d86569354ff"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceformat__doxygen.xhtml#ab794587cd8309d35dafb5d86569354ff">last_param</a> = -1</td></tr>
<tr class="separator:ab794587cd8309d35dafb5d86569354ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69c10e7cc243f2a29fd63e7cebaa18c6"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceformat__doxygen.xhtml#a69c10e7cc243f2a29fd63e7cebaa18c6">n_line</a> = 0</td></tr>
<tr class="separator:a69c10e7cc243f2a29fd63e7cebaa18c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22ea78f101680108434cb132f12afa0a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceformat__doxygen.xhtml#a22ea78f101680108434cb132f12afa0a">lines</a> = fd.readlines()</td></tr>
<tr class="separator:a22ea78f101680108434cb132f12afa0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a0f82b9801e9e1efd94c9c7cb2f3f955b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f82b9801e9e1efd94c9c7cb2f3f955b">&#9670;&nbsp;</a></span>process_comment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def format_doxygen.process_comment </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>comment</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>first_param</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>last_param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format__doxygen_8py_source.xhtml#l00006">6</a> of file <a class="el" href="format__doxygen_8py_source.xhtml">format_doxygen.py</a>.</p>

<p class="reference">References <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00093">arm_compute::test.join()</a>, and <a class="el" href="reference_2_range_8cpp_source.xhtml#l00050">arm_compute::test::validation::reference.range()</a>.</p>
<div class="fragment"><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceformat__doxygen.xhtml#a0f82b9801e9e1efd94c9c7cb2f3f955b">process_comment</a>(fd, comment, first_param, last_param):</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    <span class="keywordflow">if</span> first_param &lt; 0:</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;        <span class="comment"># Nothing to do: just copy the comment</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;        fd.write(<span class="stringliteral">&quot;&quot;</span>.<a class="code" href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">join</a>(comment))</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    <span class="keywordflow">else</span>:</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;        params = list()</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;        <span class="comment"># Measure the indentation of the first param and use that to create an empty comment line string:</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;        m = re.match(<span class="stringliteral">r&quot; */&quot;</span>, comment[0])</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> m:</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;{}: Not a comment ? &#39;{}&#39;&quot;</span>.format(path,comment[first_param]))</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        line_prefix = <span class="stringliteral">&quot; &quot;</span> * len(m.group(0)) + <span class="stringliteral">&quot;*&quot;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        empty_line =  line_prefix +<span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        fd.write(comment[0])</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="comment"># Copy the non param lines with the correct indentation:</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keywordflow">for</span> comment_line <span class="keywordflow">in</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87f09c74765be18a99038478f96daf9b">range</a>(1,first_param):</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            line = comment[comment_line]</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            m = re.match(<span class="stringliteral">&quot; *\*(.*)&quot;</span>, line)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> m:</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;{}:{}: Not a comment line ? &quot;</span>.format(path, n_line - len(comment) + comment_line + 1))</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            fd.write(line_prefix+ m.group(1)+<span class="stringliteral">&quot;\n&quot;</span>)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="comment"># For each param split the line into 3 columns: param, param_name, description</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordflow">for</span> param <span class="keywordflow">in</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87f09c74765be18a99038478f96daf9b">range</a>(first_param, last_param):</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            m = re.match(<span class="stringliteral">r&quot;[^@]+(@param\[[^\]]+\]) +(\S+) +(.+)&quot;</span>, comment[param])</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="keywordflow">if</span> m:</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                params.append( (<span class="stringliteral">&quot; &quot;</span>+m.group(1), m.group(2), m.group(3)) )</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                <span class="comment"># If it&#39;s not a match then it must be a multi-line param description:</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                m = re.match(<span class="stringliteral">&quot; *\* +(.*)&quot;</span>, comment[param])</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> m:</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                    <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;{}:{}: Not a comment line ? &quot;</span>.format(path, n_line - len(comment) + param + 1))</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                params.append( (<span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;&quot;</span>, m.group(1)) )</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="comment"># Now that we&#39;ve got a list of params, find what is the longest string for each column:</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        max_len = [0, 0]</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">for</span> p <span class="keywordflow">in</span> params:</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="keywordflow">for</span> l <span class="keywordflow">in</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87f09c74765be18a99038478f96daf9b">range</a>(len(max_len)):</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                max_len[l] = max(max_len[l], len(p[l]))</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="comment"># Insert an empty line if needed before the first param to make it easier to read:</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        m = re.match(<span class="stringliteral">r&quot; *\* *$&quot;</span>, comment[first_param - 1])</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> m:</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="comment"># insert empty line</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            fd.write(empty_line)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="comment"># Write out the formatted list of params:</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">for</span> p <span class="keywordflow">in</span> params:</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            fd.write(<span class="stringliteral">&quot;{}{}{} {}{} {}\n&quot;</span>.format( line_prefix,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    p[0], <span class="stringliteral">&quot; &quot;</span> * (max_len[0] - len(p[0])),</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    p[1], <span class="stringliteral">&quot; &quot;</span> * (max_len[1] - len(p[1])),</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    p[2]))</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="comment"># If the next line after the list of params is a command (@return, @note, @warning, etc), insert an empty line to separate it from the list of params</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">if</span> last_param &lt; len(comment) - 1:</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="keywordflow">if</span> re.match(<span class="stringliteral">r&quot; *\* *@\w+&quot;</span>, comment[last_param]):</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                <span class="comment"># insert empty line</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                fd.write(empty_line)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="comment"># Copy the remaining of the comment with the correct indentation:</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">for</span> comment_line <span class="keywordflow">in</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87f09c74765be18a99038478f96daf9b">range</a>(last_param,len(comment)):</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            line = comment[comment_line]</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            m = re.match(<span class="stringliteral">&quot; *\*(.*)&quot;</span>, line)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> m:</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;{}:{}: Not a comment line ? &quot;</span>.format(path, n_line - len(comment) + comment_line + 1))</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            fd.write(line_prefix+ m.group(1)+<span class="stringliteral">&quot;\n&quot;</span>)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="ttc" id="namespacearm__compute_1_1test_xhtml_aa18932675cbb5eb9c9dbf8ff4d7106c7"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">arm_compute::test::join</a></div><div class="ttdeci">std::string join(T first, T last, const std::string &amp;separator)</div><div class="ttdoc">Helper function to concatenate multiple strings. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_utils_8h_source.xhtml#l00093">Utils.h:93</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a87f09c74765be18a99038478f96daf9b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87f09c74765be18a99038478f96daf9b">arm_compute::test::validation::reference::range</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; range(SimpleTensor&lt; T &gt; &amp;dst, float start, const size_t num_of_elements, float step)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_range_8cpp_source.xhtml#l00050">Range.cpp:50</a></div></div>
<div class="ttc" id="namespaceformat__doxygen_xhtml_a0f82b9801e9e1efd94c9c7cb2f3f955b"><div class="ttname"><a href="namespaceformat__doxygen.xhtml#a0f82b9801e9e1efd94c9c7cb2f3f955b">format_doxygen.process_comment</a></div><div class="ttdeci">def process_comment(fd, comment, first_param, last_param)</div><div class="ttdef"><b>Definition:</b> <a href="format__doxygen_8py_source.xhtml#l00006">format_doxygen.py:6</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a8c0288707ed90c2275d70e22bd1f16d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c0288707ed90c2275d70e22bd1f16d9">&#9670;&nbsp;</a></span>comment</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">comment = list()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format__doxygen_8py_source.xhtml#l00105">105</a> of file <a class="el" href="format__doxygen_8py_source.xhtml">format_doxygen.py</a>.</p>

</div>
</div>
<a id="ab1000d1f2ea9878f60bc119650013894"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1000d1f2ea9878f60bc119650013894">&#9670;&nbsp;</a></span>encoding</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">encoding</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format__doxygen_8py_source.xhtml#l00104">104</a> of file <a class="el" href="format__doxygen_8py_source.xhtml">format_doxygen.py</a>.</p>

</div>
</div>
<a id="a62ce1089f60022203804ed7418ea39e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62ce1089f60022203804ed7418ea39e8">&#9670;&nbsp;</a></span>first_param</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int first_param = -1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format__doxygen_8py_source.xhtml#l00106">106</a> of file <a class="el" href="format__doxygen_8py_source.xhtml">format_doxygen.py</a>.</p>

</div>
</div>
<a id="ab794587cd8309d35dafb5d86569354ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab794587cd8309d35dafb5d86569354ff">&#9670;&nbsp;</a></span>last_param</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int last_param = -1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format__doxygen_8py_source.xhtml#l00107">107</a> of file <a class="el" href="format__doxygen_8py_source.xhtml">format_doxygen.py</a>.</p>

</div>
</div>
<a id="a22ea78f101680108434cb132f12afa0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22ea78f101680108434cb132f12afa0a">&#9670;&nbsp;</a></span>lines</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">lines = fd.readlines()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format__doxygen_8py_source.xhtml#l00110">110</a> of file <a class="el" href="format__doxygen_8py_source.xhtml">format_doxygen.py</a>.</p>

</div>
</div>
<a id="aaa3cab7a9bd1427b93fab510347b21ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa3cab7a9bd1427b93fab510347b21ef">&#9670;&nbsp;</a></span>n_file</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int n_file = 0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format__doxygen_8py_source.xhtml#l00082">82</a> of file <a class="el" href="format__doxygen_8py_source.xhtml">format_doxygen.py</a>.</p>

</div>
</div>
<a id="a69c10e7cc243f2a29fd63e7cebaa18c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69c10e7cc243f2a29fd63e7cebaa18c6">&#9670;&nbsp;</a></span>n_line</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int n_line = 0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format__doxygen_8py_source.xhtml#l00108">108</a> of file <a class="el" href="format__doxygen_8py_source.xhtml">format_doxygen.py</a>.</p>

</div>
</div>
<a id="a33b7040110dd4515d69b9d314e372439"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33b7040110dd4515d69b9d314e372439">&#9670;&nbsp;</a></span>paths</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">paths = []</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format__doxygen_8py_source.xhtml#l00085">85</a> of file <a class="el" href="format__doxygen_8py_source.xhtml">format_doxygen.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="src_2dynamic__fusion_2sketch_2utils_2_dependency_graph_8h_source.xhtml#l00247">DependencyGraph.find_independent_paths()</a>, <a class="el" href="src_2dynamic__fusion_2sketch_2utils_2_dependency_graph_8h_source.xhtml#l00220">DependencyGraph.find_independent_paths_util()</a>, and <a class="el" href="src_2dynamic__fusion_2sketch_2utils_2_dependency_graph_8h_source.xhtml#l00259">DependencyGraph.find_longest_independent_path()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceformat__doxygen.xhtml">format_doxygen</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:57:09 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
