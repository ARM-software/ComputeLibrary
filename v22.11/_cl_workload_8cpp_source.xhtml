<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/experimental/dynamic_fusion/WorkloadImpl/ClWorkload.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_workload_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClWorkload.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_workload_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_workload_8h.xhtml">arm_compute/core/experimental/ClWorkload.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_fused_kernel_graph_8h.xhtml">src/core/experimental/dynamic_fusion/WorkloadImpl/ClFusedKernelGraph.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_kernel_graph_8h.xhtml">src/core/experimental/dynamic_fusion/WorkloadImpl/ClKernelGraph.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_operator_graph_impl_8h.xhtml">src/core/experimental/dynamic_fusion/WorkloadImpl/OperatorGraphImpl.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ba70c7ef99250a96e87378c163f2b0e">   36</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ba70c7ef99250a96e87378c163f2b0e">build</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">op_graph</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a> &amp;ctx)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa28ea900b6115f17781179e998959e23">context</a> = ctx;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> kernel_graph;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">validate</a>(op_graph);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a>);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7d17b6e1662f7d156474fbb3d2288347">translate</a>(kernel_graph, *op_graph.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#abfc12bb496964f0d83301d79db02f510">impl</a>());</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a>);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> fused_k_graph;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    std::tie(workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a>, fused_k_graph) = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a124185cc0f16b8bc162cf4845c91d1d2">init_fusion_graph</a>(kernel_graph);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa11c975459908699abf6078773ae19b3">fuse</a>(fused_k_graph);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a>);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ee8e10e12b8d521a028c681b8ba31ad">generate</a>(workload, ctx, fused_k_graph);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// Get operator tensor id to workload tensor id map</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_tensor_to_kernel_tensor       = fused_k_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a1c4b6c76accd8db4b0d6492bfccd75f7">original_graph</a>-&gt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#ae3766947577b0cc4b1ea4ad86630c90a">get_merge_points</a>();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> kernel_tensor_to_workload_tensor = workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#ae3766947577b0cc4b1ea4ad86630c90a">get_merge_points</a>();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> op_t : op_graph.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#abfc12bb496964f0d83301d79db02f510">impl</a>()-&gt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a49509a42eb2f3dfac81faeb4fa4e82b3">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a911f45bf464369c75141cb4b8e34643f">src_tensors</a>())</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> kernel_t                   = op_tensor_to_kernel_tensor.at(op_t);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> workload_t                 = kernel_tensor_to_workload_tensor.at(kernel_t);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a7bdd9d30fbc23162fdfc14df8822fee5">op_tensor_id_lut</a>[workload_t] = op_t;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> op_t : op_graph.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#abfc12bb496964f0d83301d79db02f510">impl</a>()-&gt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a49509a42eb2f3dfac81faeb4fa4e82b3">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">dst_tensors</a>())</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> kernel_t                   = op_tensor_to_kernel_tensor.at(op_t);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> workload_t                 = kernel_tensor_to_workload_tensor.at(kernel_t);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a7bdd9d30fbc23162fdfc14df8822fee5">op_tensor_id_lut</a>[workload_t] = op_t;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> workload.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_a1c4b6c76accd8db4b0d6492bfccd75f7"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a1c4b6c76accd8db4b0d6492bfccd75f7">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::original_graph</a></div><div class="ttdeci">const ClKernelGraph * original_graph</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00402">ClFusedKernelGraph.h:402</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkload</a></div><div class="ttdoc">Workload for Cl backend. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00173">ClWorkload.h:173</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a048af4e9fc68526bf6d39e80e043a456"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">arm_compute::experimental::dynamic_fusion::validate</a></div><div class="ttdeci">Status validate(const OperatorGraph &amp;op_graph)</div><div class="ttdoc">Return the validity of op_graph, usually after performing an operation (e.g. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00121">OperatorGraph.cpp:121</a></div></div>
<div class="ttc" id="_cl_fused_kernel_graph_8h_xhtml"><div class="ttname"><a href="_cl_fused_kernel_graph_8h.xhtml">ClFusedKernelGraph.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml_adda92e981d244d14d1266f9746bccc6d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">arm_compute::experimental::dynamic_fusion::IWorkload::graph</a></div><div class="ttdeci">DependencyGraph graph</div><div class="ttdoc">Dependency graph of the workload tensors and the unit workloads. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00125">IWorkload.h:125</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelGraph</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00182">ClKernelGraph.h:182</a></div></div>
<div class="ttc" id="_cl_workload_8h_xhtml"><div class="ttname"><a href="_cl_workload_8h.xhtml">ClWorkload.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_ae3766947577b0cc4b1ea4ad86630c90a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#ae3766947577b0cc4b1ea4ad86630c90a">arm_compute::experimental::dynamic_fusion::DependencyGraph::get_merge_points</a></div><div class="ttdeci">std::map&lt; Id, Id &gt; get_merge_points() const</div><div class="ttdoc">Get the merge points object. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00140">DependencyGraph.cpp:140</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkloadContext</a></div><div class="ttdoc">Context (device capabilities, platform details) associated with a ClWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00162">ClWorkload.h:162</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">arm_compute::experimental::dynamic_fusion::OperatorGraph</a></div><div class="ttdoc">Graph of operators to execute within a Workload. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00042">OperatorGraph.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_aa28ea900b6115f17781179e998959e23"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa28ea900b6115f17781179e998959e23">arm_compute::experimental::dynamic_fusion::ClWorkload::context</a></div><div class="ttdeci">ClWorkloadContext context</div><div class="ttdoc">Workload context. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00198">ClWorkload.h:198</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a7d17b6e1662f7d156474fbb3d2288347"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7d17b6e1662f7d156474fbb3d2288347">arm_compute::experimental::dynamic_fusion::translate</a></div><div class="ttdeci">Status translate(ClKernelGraph &amp;kernel_graph, const OperatorGraph::Implementation &amp;op_graph)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00410">OperatorGraphImpl.cpp:410</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0ee8e10e12b8d521a028c681b8ba31ad"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ee8e10e12b8d521a028c681b8ba31ad">arm_compute::experimental::dynamic_fusion::generate</a></div><div class="ttdeci">Status generate(ClWorkload &amp;workload, const ClWorkloadContext &amp;ctx, const ClFusedKernelGraph &amp;fused_kernel_graph)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00170">ClFusedKernelGraph.cpp:170</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a911f45bf464369c75141cb4b8e34643f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a911f45bf464369c75141cb4b8e34643f">arm_compute::experimental::dynamic_fusion::DependencyGraph::src_tensors</a></div><div class="ttdeci">std::vector&lt; Id &gt; src_tensors(Id op) const</div><div class="ttdoc">Get source tensors to an operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00175">DependencyGraph.cpp:175</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_a49509a42eb2f3dfac81faeb4fa4e82b3"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a49509a42eb2f3dfac81faeb4fa4e82b3">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::graph</a></div><div class="ttdeci">Dependency graph</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00235">OperatorGraphImpl.h:235</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aa11c975459908699abf6078773ae19b3"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa11c975459908699abf6078773ae19b3">arm_compute::experimental::dynamic_fusion::fuse</a></div><div class="ttdeci">Status fuse(ClFusedKernelGraph &amp;fused_kernel_graph)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00096">ClFusedKernelGraph.cpp:96</a></div></div>
<div class="ttc" id="_operator_graph_impl_8h_xhtml"><div class="ttname"><a href="_operator_graph_impl_8h.xhtml">OperatorGraphImpl.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_adda92e981d244d14d1266f9746bccc6d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#adda92e981d244d14d1266f9746bccc6d">arm_compute::experimental::dynamic_fusion::ClKernelGraph::graph</a></div><div class="ttdeci">DependencyGraph graph</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00246">ClKernelGraph.h:246</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a09a3e533a331d82635595317d822247e"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_tensors</a></div><div class="ttdeci">std::vector&lt; Id &gt; dst_tensors(Id op) const</div><div class="ttdoc">Get destination tensors to an operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00181">DependencyGraph.cpp:181</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_ae29aa2d4ae440022daaed1107eb306b3"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">arm_compute::experimental::dynamic_fusion::ClWorkload::status</a></div><div class="ttdeci">Status status</div><div class="ttdoc">For compatibility with the IOperator validate method. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00202">ClWorkload.h:202</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0ba70c7ef99250a96e87378c163f2b0e"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ba70c7ef99250a96e87378c163f2b0e">arm_compute::experimental::dynamic_fusion::build</a></div><div class="ttdeci">Status build(ClWorkload &amp;workload, const OperatorGraph &amp;op_graph, const ClWorkloadContext &amp;ctx)</div><div class="ttdoc">Build a ClWorkload from an OperatorGraph. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8cpp_source.xhtml#l00036">ClWorkload.cpp:36</a></div></div>
<div class="ttc" id="_cl_kernel_graph_8h_xhtml"><div class="ttname"><a href="_cl_kernel_graph_8h.xhtml">ClKernelGraph.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad001edc7e4d1ea972be09f232c6e7729"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">arm_compute::test::validation::workload</a></div><div class="ttdeci">ClWorkload workload</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00266">Integration_OperatorFuseMovenetSubGraph1.cpp:266</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_a7bdd9d30fbc23162fdfc14df8822fee5"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a7bdd9d30fbc23162fdfc14df8822fee5">arm_compute::experimental::dynamic_fusion::ClWorkload::op_tensor_id_lut</a></div><div class="ttdeci">std::map&lt; Tid, OpTensor::Id &gt; op_tensor_id_lut</div><div class="ttdoc">Map from ClWorkloadTensor to SRC and DST Operator Tensors (no need to store &quot;intermediate&quot; Operator T...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00201">ClWorkload.h:201</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad471f4eec82e65ca35e1cf32bda90200"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">arm_compute::test::validation::op_graph</a></div><div class="ttdeci">OperatorGraph op_graph</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00253">Integration_OperatorFuseMovenetSubGraph1.cpp:253</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_xhtml_abfc12bb496964f0d83301d79db02f510"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#abfc12bb496964f0d83301d79db02f510">arm_compute::experimental::dynamic_fusion::OperatorGraph::impl</a></div><div class="ttdeci">Implementation * impl()</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00111">OperatorGraph.cpp:111</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a124185cc0f16b8bc162cf4845c91d1d2"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a124185cc0f16b8bc162cf4845c91d1d2">arm_compute::experimental::dynamic_fusion::init_fusion_graph</a></div><div class="ttdeci">std::pair&lt; Status, ClFusedKernelGraph &gt; init_fusion_graph(const ClKernelGraph &amp;kernel_graph)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00083">ClFusedKernelGraph.cpp:83</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00134">ClFusedKernelGraph.h:134</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_b7458c46e3e273561b07052265b89043.xhtml">experimental</a></li><li class="navelem"><a class="el" href="dir_4ba1de0cc05164046c8a7675a91253dd.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_4a5d79691feea64a5adaad9e433740c9.xhtml">WorkloadImpl</a></li><li class="navelem"><a class="el" href="_cl_workload_8cpp.xhtml">ClWorkload.cpp</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:49 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
