<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/common/utils/Log.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('src_2common_2utils_2_log_8h.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Log.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_error_8h_source.xhtml">arm_compute/core/Error.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2utils_2logging_2_macros_8h_source.xhtml">arm_compute/core/utils/logging/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="utils_2_type_printer_8h_source.xhtml">utils/TypePrinter.h</a>&quot;</code><br />
</div>
<p><a href="src_2common_2utils_2_log_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:afd897311b2e3e2f31addabca31890d84"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="src_2common_2utils_2_log_8h.xhtml#afd897311b2e3e2f31addabca31890d84">ARM_COMPUTE_CREATE_ACL_LOGGER</a>()</td></tr>
<tr class="separator:afd897311b2e3e2f31addabca31890d84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c0dc059d43c9dd93a331565d5039faf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="src_2common_2utils_2_log_8h.xhtml#a5c0dc059d43c9dd93a331565d5039faf">ARM_COMPUTE_LOG_MSG_ACL</a>(log_level,  msg)</td></tr>
<tr class="memdesc:a5c0dc059d43c9dd93a331565d5039faf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Log a message to the logger.  <a href="#a5c0dc059d43c9dd93a331565d5039faf">More...</a><br /></td></tr>
<tr class="separator:a5c0dc059d43c9dd93a331565d5039faf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4771170bf901ba7933ec637e1003fcf6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="src_2common_2utils_2_log_8h.xhtml#a4771170bf901ba7933ec637e1003fcf6">ARM_COMPUTE_LOG_MSG_WITH_FORMAT_ACL</a>(log_level,  fmt, ...)</td></tr>
<tr class="memdesc:a4771170bf901ba7933ec637e1003fcf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Log a message with format to the logger.  <a href="#a4771170bf901ba7933ec637e1003fcf6">More...</a><br /></td></tr>
<tr class="separator:a4771170bf901ba7933ec637e1003fcf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada668c5c47184c0667c0b029d92d3b4f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(msg)</td></tr>
<tr class="memdesc:ada668c5c47184c0667c0b029d92d3b4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Log an error message to the logger.  <a href="#ada668c5c47184c0667c0b029d92d3b4f">More...</a><br /></td></tr>
<tr class="separator:ada668c5c47184c0667c0b029d92d3b4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4031f58cfc5d279b039fa0e167511b7e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="src_2common_2utils_2_log_8h.xhtml#a4031f58cfc5d279b039fa0e167511b7e">ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</a>(msg)</td></tr>
<tr class="memdesc:a4031f58cfc5d279b039fa0e167511b7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Log an error message to the logger with function name before the message.  <a href="#a4031f58cfc5d279b039fa0e167511b7e">More...</a><br /></td></tr>
<tr class="separator:a4031f58cfc5d279b039fa0e167511b7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9711076575f7df473c6e0214334687f3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="src_2common_2utils_2_log_8h.xhtml#a9711076575f7df473c6e0214334687f3">ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL</a>(msg)</td></tr>
<tr class="memdesc:a9711076575f7df473c6e0214334687f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Log an information message to the logger with function name before the message.  <a href="#a9711076575f7df473c6e0214334687f3">More...</a><br /></td></tr>
<tr class="separator:a9711076575f7df473c6e0214334687f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ae35e22a098d589ff54ed85647ed87e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(...)</td></tr>
<tr class="separator:a3ae35e22a098d589ff54ed85647ed87e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a49df6c8b2f9687f0666c24f72384d357"><td class="memTemplParams" colspan="2">template&lt;std::size_t Index, typename... Tp&gt; </td></tr>
<tr class="memitem:a49df6c8b2f9687f0666c24f72384d357"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; Index==sizeof...(Tp), void &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="src_2common_2utils_2_log_8h.xhtml#a49df6c8b2f9687f0666c24f72384d357">logParamsImpl</a> (std::vector&lt; std::string &gt; &amp;data_registry, const std::tuple&lt; Tp... &gt; &amp;in_params_tuple)</td></tr>
<tr class="memdesc:a49df6c8b2f9687f0666c24f72384d357"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function template specialization for the out of bound element at index = tuple_size.  <a href="#a49df6c8b2f9687f0666c24f72384d357">More...</a><br /></td></tr>
<tr class="separator:a49df6c8b2f9687f0666c24f72384d357"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="afd897311b2e3e2f31addabca31890d84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd897311b2e3e2f31addabca31890d84">&#9670;&nbsp;</a></span>ARM_COMPUTE_CREATE_ACL_LOGGER</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_CREATE_ACL_LOGGER</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00045">45</a> of file <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml">Log.h</a>.</p>

</div>
</div>
<a id="ada668c5c47184c0667c0b029d92d3b4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada668c5c47184c0667c0b029d92d3b4f">&#9670;&nbsp;</a></span>ARM_COMPUTE_LOG_ERROR_ACL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_LOG_ERROR_ACL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                     \</div><div class="line">    {                                                                                      \</div><div class="line">        ARM_COMPUTE_CREATE_ACL_LOGGER();                                                   \</div><div class="line">        ARM_COMPUTE_LOG_MSG(<span class="stringliteral">&quot;ComputeLibrary&quot;</span>, <a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9abb1ca97ec761fc37101737ba0aa2e7c5">arm_compute::logging::LogLevel::ERROR</a>, msg); \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="namespacearm__compute_1_1logging_xhtml_aca1fd1d8935433e6ba2e3918214e07f9abb1ca97ec761fc37101737ba0aa2e7c5"><div class="ttname"><a href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9abb1ca97ec761fc37101737ba0aa2e7c5">arm_compute::logging::LogLevel::ERROR</a></div><div class="ttdoc">Error log level. </div></div>
</div><!-- fragment -->
<p>Log an error message to the logger. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to log </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00077">77</a> of file <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml">Log.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_queue_8cpp_source.xhtml#l00045">AclCreateQueue()</a>, <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00068">AclCreateTensor()</a>, <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00097">AclMapTensor()</a>, <a class="el" href="_cpu_activation_8cpp_source.xhtml#l00057">CpuContext::create_activation()</a>, <a class="el" href="_cl_activation_8cpp_source.xhtml#l00056">ClContext::create_activation()</a>, <a class="el" href="_cpu_tensor_8cpp_source.xhtml#l00040">CpuTensor::map()</a>, <a class="el" href="gpu_2cl_2_cl_tensor_8cpp_source.xhtml#l00042">ClTensor::map()</a>, <a class="el" href="gpu_2cl_2_cl_tensor_8cpp_source.xhtml#l00056">ClTensor::unmap()</a>, <a class="el" href="_i_context_8h_source.xhtml#l00140">arm_compute::detail::validate_internal_context()</a>, <a class="el" href="src_2common_2_i_operator_8h_source.xhtml#l00125">arm_compute::detail::validate_internal_operator()</a>, <a class="el" href="_tensor_pack_8h_source.xhtml#l00119">arm_compute::detail::validate_internal_pack()</a>, <a class="el" href="_i_queue_8h_source.xhtml#l00089">arm_compute::detail::validate_internal_queue()</a>, and <a class="el" href="_i_tensor_v2_8h_source.xhtml#l00129">arm_compute::detail::validate_internal_tensor()</a>.</p>

</div>
</div>
<a id="a4031f58cfc5d279b039fa0e167511b7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4031f58cfc5d279b039fa0e167511b7e">&#9670;&nbsp;</a></span>ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                                   \</div><div class="line">    {                                                                                                    \</div><div class="line">        ARM_COMPUTE_CREATE_ACL_LOGGER();                                                                 \</div><div class="line">        ARM_COMPUTE_LOG_MSG_WITH_FUNCNAME(<span class="stringliteral">&quot;ComputeLibrary&quot;</span>, <a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9abb1ca97ec761fc37101737ba0aa2e7c5">arm_compute::logging::LogLevel::ERROR</a>, msg); \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="namespacearm__compute_1_1logging_xhtml_aca1fd1d8935433e6ba2e3918214e07f9abb1ca97ec761fc37101737ba0aa2e7c5"><div class="ttname"><a href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9abb1ca97ec761fc37101737ba0aa2e7c5">arm_compute::logging::LogLevel::ERROR</a></div><div class="ttdoc">Error log level. </div></div>
</div><!-- fragment -->
<p>Log an error message to the logger with function name before the message. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to log </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00088">88</a> of file <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml">Log.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_context_8cpp_source.xhtml#l00078">AclCreateContext()</a>, <a class="el" href="_acl_tensor_pack_8cpp_source.xhtml#l00050">AclCreateTensorPack()</a>, and <a class="el" href="_acl_context_8cpp_source.xhtml#l00105">AclDestroyContext()</a>.</p>

</div>
</div>
<a id="a9711076575f7df473c6e0214334687f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9711076575f7df473c6e0214334687f3">&#9670;&nbsp;</a></span>ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                                  \</div><div class="line">    {                                                                                                   \</div><div class="line">        ARM_COMPUTE_CREATE_ACL_LOGGER();                                                                \</div><div class="line">        ARM_COMPUTE_LOG_MSG_WITH_FUNCNAME(<span class="stringliteral">&quot;ComputeLibrary&quot;</span>, <a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a551b723eafd6a31d444fcb2f5920fbd3">arm_compute::logging::LogLevel::INFO</a>, msg); \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div><div class="ttc" id="namespacearm__compute_1_1logging_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a551b723eafd6a31d444fcb2f5920fbd3"><div class="ttname"><a href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a551b723eafd6a31d444fcb2f5920fbd3">arm_compute::logging::LogLevel::INFO</a></div><div class="ttdoc">Information log level. </div></div>
</div><!-- fragment -->
<p>Log an information message to the logger with function name before the message. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to log </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00099">99</a> of file <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml">Log.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00042">CLAuxTensorHandler::CLAuxTensorHandler()</a>, <a class="el" href="_cpu_aux_tensor_handler_8h_source.xhtml#l00042">CpuAuxTensorHandler::CpuAuxTensorHandler()</a>, <a class="el" href="_graph_manager_8cpp_source.xhtml#l00125">GraphManager::execute_graph()</a>, <a class="el" href="_graph_manager_8cpp_source.xhtml#l00047">GraphManager::finalize_graph()</a>, and <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00771">ClGemm::prepare()</a>.</p>

</div>
</div>
<a id="a5c0dc059d43c9dd93a331565d5039faf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c0dc059d43c9dd93a331565d5039faf">&#9670;&nbsp;</a></span>ARM_COMPUTE_LOG_MSG_ACL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_LOG_MSG_ACL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">log_level, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                         \</div><div class="line">    {                                                          \</div><div class="line">        ARM_COMPUTE_CREATE_ACL_LOGGER();                       \</div><div class="line">        ARM_COMPUTE_LOG_MSG(<span class="stringliteral">&quot;ComputeLibrary&quot;</span>, log_level, msg); \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div></div><!-- fragment -->
<p>Log a message to the logger. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">log_level</td><td>Logging level </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to log </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00053">53</a> of file <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml">Log.h</a>.</p>

</div>
</div>
<a id="a4771170bf901ba7933ec637e1003fcf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4771170bf901ba7933ec637e1003fcf6">&#9670;&nbsp;</a></span>ARM_COMPUTE_LOG_MSG_WITH_FORMAT_ACL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_LOG_MSG_WITH_FORMAT_ACL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">log_level, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">fmt, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                  \</div><div class="line">    {                                                                                   \</div><div class="line">        ARM_COMPUTE_CREATE_ACL_LOGGER();                                                \</div><div class="line">        ARM_COMPUTE_LOG_MSG_WITH_FORMAT(<span class="stringliteral">&quot;ComputeLibrary&quot;</span>, log_level, fmt, __VA_ARGS__); \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div></div><!-- fragment -->
<p>Log a message with format to the logger. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">log_level</td><td>Logging level </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fmt</td><td>String format (printf style) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>Message arguments </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00066">66</a> of file <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml">Log.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00162">CpuWinogradConv2d::configure()</a>, and <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00291">CpuWinogradConv2d::validate()</a>.</p>

</div>
</div>
<a id="a3ae35e22a098d589ff54ed85647ed87e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ae35e22a098d589ff54ed85647ed87e">&#9670;&nbsp;</a></span>ARM_COMPUTE_LOG_PARAMS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARM_COMPUTE_LOG_PARAMS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span>                                                                                        \</div><div class="line">    {                                                                                         \</div><div class="line">        ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL(constructDataLog(getParamsNames(#__VA_ARGS__), \</div><div class="line">                                                                logParams(__VA_ARGS__)));     \</div><div class="line">    } <span class="keywordflow">while</span>(<span class="keyword">false</span>)</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cpu_copy_8cpp_source.xhtml#l00034">CpuCopy::configure()</a>, <a class="el" href="_cpu_dequantize_8cpp_source.xhtml#l00036">CpuDequantize::configure()</a>, <a class="el" href="_cpu_fill_8cpp_source.xhtml#l00034">CpuFill::configure()</a>, <a class="el" href="_cpu_quantize_8cpp_source.xhtml#l00043">CpuQuantize::configure()</a>, <a class="el" href="_cpu_reshape_8cpp_source.xhtml#l00034">CpuReshape::configure()</a>, <a class="el" href="_cpu_transpose_8cpp_source.xhtml#l00034">CpuTranspose::configure()</a>, <a class="el" href="_cpu_floor_8cpp_source.xhtml#l00034">CpuFloor::configure()</a>, <a class="el" href="_cpu_elementwise_unary_8cpp_source.xhtml#l00035">CpuElementwiseUnary::configure()</a>, <a class="el" href="_cpu_activation_8cpp_source.xhtml#l00037">CpuActivation::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_floor_8cpp_source.xhtml#l00035">ClFloor::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_logical_not_8cpp_source.xhtml#l00035">ClLogicalNot::configure()</a>, <a class="el" href="_cl_reshape_8cpp_source.xhtml#l00035">ClReshape::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_transpose_8cpp_source.xhtml#l00035">ClTranspose::configure()</a>, <a class="el" href="_cl_dequantize_8cpp_source.xhtml#l00037">ClDequantize::configure()</a>, <a class="el" href="_cpu_convert_fully_connected_weights_8cpp_source.xhtml#l00034">CpuConvertFullyConnectedWeights::configure()</a>, <a class="el" href="_cl_elementwise_unary_8cpp_source.xhtml#l00034">ClRsqrt::configure()</a>, <a class="el" href="_c_p_p_permute_8cpp_source.xhtml#l00032">CPPPermute::configure()</a>, <a class="el" href="_c_p_p_upsample_8cpp_source.xhtml#l00032">CPPUpsample::configure()</a>, <a class="el" href="_cl_activation_8cpp_source.xhtml#l00038">ClActivation::configure()</a>, <a class="el" href="_cpu_permute_8cpp_source.xhtml#l00034">CpuPermute::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_fill_8cpp_source.xhtml#l00035">ClFill::configure()</a>, <a class="el" href="_c_p_p_top_k_v_8cpp_source.xhtml#l00032">CPPTopKV::configure()</a>, <a class="el" href="_cl_quantize_8cpp_source.xhtml#l00037">ClQuantize::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_convert_fully_connected_weights_8cpp_source.xhtml#l00035">ClConvertFullyConnectedWeights::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_permute_8cpp_source.xhtml#l00035">ClPermute::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_copy_8cpp_source.xhtml#l00035">ClCopy::configure()</a>, <a class="el" href="_cpu_max_unpooling_8cpp_source.xhtml#l00032">CpuMaxUnpooling::configure()</a>, <a class="el" href="_n_e_bitwise_not_8cpp_source.xhtml#l00034">NEBitwiseNot::configure()</a>, <a class="el" href="_cl_p_relu_8cpp_source.xhtml#l00035">ClPRelu::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_elementwise_operations_8cpp_source.xhtml#l00034">ClElementwiseDivision::configure()</a>, <a class="el" href="_c_p_p_non_maximum_suppression_8cpp_source.xhtml#l00032">CPPNonMaximumSuppression::configure()</a>, <a class="el" href="_cpu_scale_8cpp_source.xhtml#l00087">CpuScale::configure()</a>, <a class="el" href="_n_e_bitwise_or_8cpp_source.xhtml#l00034">NEBitwiseOr::configure()</a>, <a class="el" href="_n_e_bitwise_xor_8cpp_source.xhtml#l00034">NEBitwiseXor::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_scale_8cpp_source.xhtml#l00038">ClScale::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_crop_8cpp_source.xhtml#l00035">ClCrop::configure()</a>, <a class="el" href="_cl_pool2d_8cpp_source.xhtml#l00037">ClPool2d::configure()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_dispatch_8cpp_source.xhtml#l00056">CpuDepthwiseConv2dAssemblyDispatch::configure()</a>, <a class="el" href="_cpu_flatten_8cpp_source.xhtml#l00034">CpuFlatten::configure()</a>, <a class="el" href="_cpu_pool3d_8cpp_source.xhtml#l00045">CpuPool3d::configure()</a>, <a class="el" href="_cl_pool3d_8cpp_source.xhtml#l00037">ClPool3d::configure()</a>, <a class="el" href="_n_e_reverse_8cpp_source.xhtml#l00032">NEReverse::configure()</a>, <a class="el" href="_cpu_elementwise_8cpp_source.xhtml#l00049">CpuElementwiseArithmetic&lt; op &gt;::configure()</a>, <a class="el" href="_n_e_tile_8cpp_source.xhtml#l00032">NETile::configure()</a>, <a class="el" href="_cl_flatten_8cpp_source.xhtml#l00035">ClFlatten::configure()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00393">CPPDetectionOutputLayer::configure()</a>, <a class="el" href="_cpu_sub_8cpp_source.xhtml#l00036">CpuSub::configure()</a>, <a class="el" href="_cl_softmax_8cpp_source.xhtml#l00055">ClSoftmax::configure()</a>, <a class="el" href="_n_e_prior_box_layer_8cpp_source.xhtml#l00038">NEPriorBoxLayer::configure()</a>, <a class="el" href="_n_e_select_8cpp_source.xhtml#l00032">NESelect::configure()</a>, <a class="el" href="_n_e_reorg_layer_8cpp_source.xhtml#l00032">NEReorgLayer::configure()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00046">CpuConcatenate::configure()</a>, <a class="el" href="_cpu_add_8cpp_source.xhtml#l00036">CpuAdd::configure()</a>, <a class="el" href="_n_e_gather_8cpp_source.xhtml#l00034">NEGather::configure()</a>, <a class="el" href="_cpu_depthwise_conv2d_8cpp_source.xhtml#l00444">CpuDepthwiseConv2d::configure()</a>, <a class="el" href="_n_e_bounding_box_transform_8cpp_source.xhtml#l00030">NEBoundingBoxTransform::configure()</a>, <a class="el" href="_n_e_channel_shuffle_layer_8cpp_source.xhtml#l00032">NEChannelShuffleLayer::configure()</a>, <a class="el" href="_n_e_fill_border_8cpp_source.xhtml#l00038">NEFillBorder::configure()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00047">ClConcatenate::configure()</a>, <a class="el" href="_cpu_cast_8cpp_source.xhtml#l00034">CpuCast::configure()</a>, <a class="el" href="_cpu_pool2d_8cpp_source.xhtml#l00051">CpuPool2d::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_cast_8cpp_source.xhtml#l00035">ClCast::configure()</a>, <a class="el" href="_c_l_bitwise_not_8cpp_source.xhtml#l00039">CLBitwiseNot::configure()</a>, <a class="el" href="_cl_direct_conv2d_8cpp_source.xhtml#l00068">ClDirectConv2d::configure()</a>, <a class="el" href="_c_l_reverse_8cpp_source.xhtml#l00038">CLReverse::configure()</a>, <a class="el" href="_c_l_tile_8cpp_source.xhtml#l00037">CLTile::configure()</a>, <a class="el" href="_n_e_bitwise_and_8cpp_source.xhtml#l00034">NEBitwiseAnd::configure()</a>, <a class="el" href="_c_l_depth_to_space_layer_8cpp_source.xhtml#l00039">CLDepthToSpaceLayer::configure()</a>, <a class="el" href="_cpu_mul_8cpp_source.xhtml#l00043">CpuMul::configure()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00135">CPPBoxWithNonMaximaSuppressionLimit::configure()</a>, <a class="el" href="_c_l_bitwise_and_8cpp_source.xhtml#l00039">CLBitwiseAnd::configure()</a>, <a class="el" href="_c_l_bitwise_or_8cpp_source.xhtml#l00039">CLBitwiseOr::configure()</a>, <a class="el" href="_c_l_bitwise_xor_8cpp_source.xhtml#l00039">CLBitwiseXor::configure()</a>, <a class="el" href="_n_e_r_o_i_align_layer_8cpp_source.xhtml#l00039">NEROIAlignLayer::configure()</a>, <a class="el" href="_cl_elementwise_unary_8cpp_source.xhtml#l00047">ClExp::configure()</a>, <a class="el" href="_c_l_select_8cpp_source.xhtml#l00041">CLSelect::configure()</a>, <a class="el" href="_c_l_gather_8cpp_source.xhtml#l00038">CLGather::configure()</a>, <a class="el" href="_c_l_normalize_planar_y_u_v_layer_8cpp_source.xhtml#l00040">CLNormalizePlanarYUVLayer::configure()</a>, <a class="el" href="_cl_mul_8cpp_source.xhtml#l00036">ClMul::configure()</a>, <a class="el" href="_cl_add_8cpp_source.xhtml#l00035">ClAdd::configure()</a>, <a class="el" href="_cl_sub_8cpp_source.xhtml#l00035">ClSub::configure()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00218">CPPDetectionPostProcessLayer::configure()</a>, <a class="el" href="_n_e_batch_to_space_layer_8cpp_source.xhtml#l00036">NEBatchToSpaceLayer::configure()</a>, <a class="el" href="_c_l_channel_shuffle_layer_8cpp_source.xhtml#l00038">CLChannelShuffleLayer::configure()</a>, <a class="el" href="_n_e_transpose_8cpp_source.xhtml#l00046">NETranspose::configure()</a>, <a class="el" href="_c_l_mean_std_dev_normalization_layer_8cpp_source.xhtml#l00038">CLMeanStdDevNormalizationLayer::configure()</a>, <a class="el" href="_c_l_prior_box_layer_8cpp_source.xhtml#l00049">CLPriorBoxLayer::configure()</a>, <a class="el" href="_n_e_mean_std_dev_normalization_layer_8cpp_source.xhtml#l00034">NEMeanStdDevNormalizationLayer::configure()</a>, <a class="el" href="_n_e_depth_to_space_layer_8cpp_source.xhtml#l00036">NEDepthToSpaceLayer::configure()</a>, <a class="el" href="_n_e_logical_8cpp_source.xhtml#l00048">NELogicalAnd::configure()</a>, <a class="el" href="_c_l_comparison_8cpp_source.xhtml#l00040">CLComparison::configure()</a>, <a class="el" href="_n_e_space_to_depth_layer_8cpp_source.xhtml#l00044">NESpaceToDepthLayer::configure()</a>, <a class="el" href="_c_l_reorg_layer_8cpp_source.xhtml#l00043">CLReorgLayer::configure()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00059">CpuSoftmaxGeneric&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00039">CpuGemmLowpOutputStage::configure()</a>, <a class="el" href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00110">CpuGemmDirectConv2d::configure()</a>, <a class="el" href="_n_e_f_f_t2_d_8cpp_source.xhtml#l00040">NEFFT2D::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00040">ClGemmLowpOutputStage::configure()</a>, <a class="el" href="_n_e_unstack_8cpp_source.xhtml#l00063">NEUnstack::configure()</a>, <a class="el" href="_n_e_space_to_batch_layer_8cpp_source.xhtml#l00045">NESpaceToBatchLayer::configure()</a>, <a class="el" href="_c_l_unstack_8cpp_source.xhtml#l00069">CLUnstack::configure()</a>, <a class="el" href="_n_e_reduce_mean_8cpp_source.xhtml#l00114">NEReduceMean::configure()</a>, <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00072">NERNNLayer::configure()</a>, <a class="el" href="_c_l_range_8cpp_source.xhtml#l00041">CLRange::configure()</a>, <a class="el" href="_n_e_stack_layer_8cpp_source.xhtml#l00047">NEStackLayer::configure()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00162">CpuWinogradConv2d::configure()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_8cpp_source.xhtml#l00044">NEROIPoolingLayer::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_elementwise_operations_8cpp_source.xhtml#l00047">ClElementwiseMax::configure()</a>, <a class="el" href="_c_l_reduce_mean_8cpp_source.xhtml#l00114">CLReduceMean::configure()</a>, <a class="el" href="_n_e_max_unpooling_layer_8cpp_source.xhtml#l00051">NEMaxUnpoolingLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_copy_8cpp_source.xhtml#l00059">CLCopy::configure()</a>, <a class="el" href="_n_e_fuse_batch_normalization_8cpp_source.xhtml#l00043">NEFuseBatchNormalization::configure()</a>, <a class="el" href="_c_l_space_to_depth_layer_8cpp_source.xhtml#l00050">CLSpaceToDepthLayer::configure()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00048">NEScale::configure()</a>, <a class="el" href="_cpu_direct_conv2d_8cpp_source.xhtml#l00044">CpuDirectConv2d::configure()</a>, <a class="el" href="_n_e_l2_normalize_layer_8cpp_source.xhtml#l00045">NEL2NormalizeLayer::configure()</a>, <a class="el" href="_n_e_reduction_operation_8cpp_source.xhtml#l00105">NEReductionOperation::configure()</a>, <a class="el" href="_n_e_f_f_t1_d_8cpp_source.xhtml#l00044">NEFFT1D::configure()</a>, <a class="el" href="_n_e_cast_8cpp_source.xhtml#l00047">NECast::configure()</a>, <a class="el" href="_n_e_conv3_d_8cpp_source.xhtml#l00049">NEConv3D::configure()</a>, <a class="el" href="_c_l_batch_to_space_layer_8cpp_source.xhtml#l00051">CLBatchToSpaceLayer::configure()</a>, <a class="el" href="_cpu_direct_conv3d_8cpp_source.xhtml#l00043">CpuDirectConv3d::configure()</a>, <a class="el" href="_c_l_bounding_box_transform_8cpp_source.xhtml#l00037">CLBoundingBoxTransform::configure()</a>, <a class="el" href="_n_e_instance_normalization_layer_8cpp_source.xhtml#l00041">NEInstanceNormalizationLayer::configure()</a>, <a class="el" href="_n_e_range_8cpp_source.xhtml#l00039">NERange::configure()</a>, <a class="el" href="_n_e_normalization_layer_8cpp_source.xhtml#l00044">NENormalizationLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_permute_8cpp_source.xhtml#l00056">CLPermute::configure()</a>, <a class="el" href="_n_e_detection_post_process_layer_8cpp_source.xhtml#l00042">NEDetectionPostProcessLayer::configure()</a>, <a class="el" href="_c_l_dequantization_layer_8cpp_source.xhtml#l00054">CLDequantizationLayer::configure()</a>, <a class="el" href="_c_l_f_f_t2_d_8cpp_source.xhtml#l00049">CLFFT2D::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_8cpp_source.xhtml#l00053">CLDeconvolutionLayer::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00310">NEDepthwiseConvolutionLayer::configure()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_8cpp_source.xhtml#l00042">CLROIPoolingLayer::configure()</a>, <a class="el" href="_n_e_arg_min_max_layer_8cpp_source.xhtml#l00044">NEArgMinMaxLayer::configure()</a>, <a class="el" href="_n_e_batch_normalization_layer_8cpp_source.xhtml#l00044">NEBatchNormalizationLayer::configure()</a>, <a class="el" href="_c_l_r_n_n_layer_8cpp_source.xhtml#l00082">CLRNNLayer::configure()</a>, <a class="el" href="_cl_elementwise_unary_8cpp_source.xhtml#l00060">ClNeg::configure()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00173">NEPadLayer::configure()</a>, <a class="el" href="_cl_fully_connected_8cpp_source.xhtml#l00227">ClFullyConnected::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_8cpp_source.xhtml#l00055">CLDeconvolutionLayerUpsample::configure()</a>, <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00057">CLFFT1D::configure()</a>, <a class="el" href="_cpu_elementwise_8cpp_source.xhtml#l00068">CpuElementwiseDivision::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_convert_fully_connected_weights_8cpp_source.xhtml#l00055">CLConvertFullyConnectedWeights::configure()</a>, <a class="el" href="_c_l_space_to_batch_layer_8cpp_source.xhtml#l00052">CLSpaceToBatchLayer::configure()</a>, <a class="el" href="_c_l_r_o_i_align_layer_8cpp_source.xhtml#l00046">CLROIAlignLayer::configure()</a>, <a class="el" href="_c_l_stack_layer_8cpp_source.xhtml#l00055">CLStackLayer::configure()</a>, <a class="el" href="_cpu_fully_connected_8cpp_source.xhtml#l00234">CpuFullyConnected::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_crop_8cpp_source.xhtml#l00060">CLCrop::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00557">ClGemm::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00202">CLDepthwiseConvolutionLayer::configure()</a>, <a class="el" href="_c_l_pad_layer_8cpp_source.xhtml#l00045">CLPadLayer::configure()</a>, <a class="el" href="_cpu_mul_8cpp_source.xhtml#l00067">CpuComplexMul::configure()</a>, <a class="el" href="_c_l_normalization_layer_8cpp_source.xhtml#l00053">CLNormalizationLayer::configure()</a>, <a class="el" href="_c_l_l2_normalize_layer_8cpp_source.xhtml#l00060">CLL2NormalizeLayer::configure()</a>, <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00060">CpuGemm::configure()</a>, <a class="el" href="_c_l_reduction_operation_8cpp_source.xhtml#l00111">CLReductionOperation::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00121">CLArgMinMaxLayer::configure()</a>, <a class="el" href="_c_l_max_unpooling_layer_8cpp_source.xhtml#l00049">CLMaxUnpoolingLayer::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00256">ClGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00174">ClWinogradConv2d::configure()</a>, <a class="el" href="_c_l_direct_convolution_layer_8cpp_source.xhtml#l00060">CLDirectConvolutionLayer::configure()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00105">NEFFTConvolutionLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_cast_8cpp_source.xhtml#l00058">CLCast::configure()</a>, <a class="el" href="_n_e_generate_proposals_layer_8cpp_source.xhtml#l00071">NEGenerateProposalsLayer::configure()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00059">CLConcatenateLayer::configure()</a>, <a class="el" href="_c_l_instance_normalization_layer_8cpp_source.xhtml#l00054">CLInstanceNormalizationLayer::configure()</a>, <a class="el" href="_c_l_depth_convert_layer_8cpp_source.xhtml#l00058">CLDepthConvertLayer::configure()</a>, <a class="el" href="_c_l_fuse_batch_normalization_8cpp_source.xhtml#l00052">CLFuseBatchNormalization::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_elementwise_operations_8cpp_source.xhtml#l00060">ClElementwiseMin::configure()</a>, <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00092">CLCropResize::configure()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="_cl_elementwise_unary_8cpp_source.xhtml#l00073">ClSin::configure()</a>, <a class="el" href="_cpu_conv2d_8cpp_source.xhtml#l00045">CpuConv2d::configure()</a>, <a class="el" href="_c_l_batch_normalization_layer_8cpp_source.xhtml#l00052">CLBatchNormalizationLayer::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00060">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00057">NELSTMLayer::configure()</a>, <a class="el" href="_cpu_gemm_conv2d_8cpp_source.xhtml#l00256">CpuGemmConv2d::configure()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00109">CpuGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_cpu_elementwise_8cpp_source.xhtml#l00081">CpuElementwisePower::configure()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00156">NEDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_logical_and_8cpp_source.xhtml#l00036">CLLogicalAnd::configure()</a>, <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00083">ClConv2d::configure()</a>, <a class="el" href="_c_l_logical_or_8cpp_source.xhtml#l00036">CLLogicalOr::configure()</a>, <a class="el" href="_n_e_slice_8cpp_source.xhtml#l00037">NESlice::configure()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00113">CLFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_logical_8cpp_source.xhtml#l00081">NELogicalOr::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_8cpp_source.xhtml#l00080">CLGenerateProposalsLayer::configure()</a>, <a class="el" href="_n_e_convolution_layer_8cpp_source.xhtml#l00062">NEConvolutionLayer::configure()</a>, <a class="el" href="_cl_elementwise_unary_8cpp_source.xhtml#l00099">ClLog::configure()</a>, <a class="el" href="_n_e_strided_slice_8cpp_source.xhtml#l00035">NEStridedSlice::configure()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00224">CLGEMMDeconvolutionLayer::configure()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00063">NEFullyConnectedLayer::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_elementwise_operations_8cpp_source.xhtml#l00073">ClElementwiseSquaredDiff::configure()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00121">CLDirectDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00072">CLLSTMLayerQuantized::configure()</a>, <a class="el" href="_c_l_slice_8cpp_source.xhtml#l00037">CLSlice::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_cpu_elementwise_8cpp_source.xhtml#l00109">CpuElementwiseComparison::configure()</a>, <a class="el" href="_cl_elementwise_unary_8cpp_source.xhtml#l00086">ClAbs::configure()</a>, <a class="el" href="_c_l_strided_slice_8cpp_source.xhtml#l00036">CLStridedSlice::configure()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00069">CLConvolutionLayer::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_elementwise_operations_8cpp_source.xhtml#l00086">ClElementwisePower::configure()</a>, <a class="el" href="_cpu_elementwise_8cpp_source.xhtml#l00095">CpuElementwiseComparisonStatic&lt; op &gt;::configure()</a>, <a class="el" href="_cl_elementwise_unary_8cpp_source.xhtml#l00112">ClRound::configure()</a>, <a class="el" href="_n_e_logical_8cpp_source.xhtml#l00114">NELogicalNot::configure()</a>, <a class="el" href="_c_l_l_s_t_m_layer_8cpp_source.xhtml#l00073">CLLSTMLayer::configure()</a>, and <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00172">CLQLSTMLayer::configure()</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a49df6c8b2f9687f0666c24f72384d357"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49df6c8b2f9687f0666c24f72384d357">&#9670;&nbsp;</a></span>logParamsImpl()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;Index == sizeof...(Tp), void&gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> logParamsImpl </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>data_registry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::tuple&lt; Tp... &gt; &amp;&#160;</td>
          <td class="paramname"><em>in_params_tuple</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function template specialization for the out of bound element at index = tuple_size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">data_registry</td><td>Reference to the input parameters data in a string format </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in_params_tuple</td><td>Tuple of different input data types </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00113">113</a> of file <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml">Log.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">name</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l00080">arm_compute::to_string()</a>, and <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00259">type</a>.</p>
<div class="fragment"><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="comment">// Because it is out of bound index so do nothing</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(data_registry);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(in_params_tuple);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_fdedb0aba14d44ce9d99bc100e026e6a.xhtml">common</a></li><li class="navelem"><a class="el" href="dir_c3d33904e581c7b40f74ea903e639ce2.xhtml">utils</a></li><li class="navelem"><a class="el" href="src_2common_2utils_2_log_8h.xhtml">Log.h</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:57 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
