<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/dynamic_fusion/sketch/gpu/GpuWorkloadSketchImpl.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_gpu_workload_sketch_impl_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GpuWorkloadSketchImpl.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_gpu_workload_sketch_impl_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef SRC_DYNAMIC_FUSION_SKETCH_GPU_GPUWORKLOADSKETCHIMPL</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define SRC_DYNAMIC_FUSION_SKETCH_GPU_GPUWORKLOADSKETCHIMPL</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_workload_sketch_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/GpuWorkloadSketch.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_component_services_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuComponentServices.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_component_graph_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuKernelComponentGraph.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_operator_group_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuOperatorGroup.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/** Internal implementation of @ref GpuWorkloadSketch */</span></div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">   39</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">GpuWorkloadSketch::Implementation</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">    /** Constructor</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">     * @param[in] context global workload creation context</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#acf94eb610fe8006b99837d880e4e7ac5">   46</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#acf94eb610fe8006b99837d880e4e7ac5">Implementation</a>(</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">Context</a> *<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        : _context{ context },</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;          _comp_services{},</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;          _component_graph{ &amp;_comp_services },</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;          _operator_group{}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">    /** Prevent instances of this class from being copy constructed */</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#acf94eb610fe8006b99837d880e4e7ac5">Implementation</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;impl) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied */</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeaf80439a5c87912150e770e20d2c7d6">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;impl) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">    /** Allow instances of this class to be move constructed */</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#acf94eb610fe8006b99837d880e4e7ac5">Implementation</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&amp;impl) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeaf80439a5c87912150e770e20d2c7d6">operator=</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&amp;impl) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">    /** Get workload context */</span></div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">   63</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">Context</a> *<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">return</span> _context;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /** Get component graph */</span></div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">   68</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">component_graph</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">return</span> _component_graph;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /** Get component graph */</span></div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7b2d6961c405c49f005fbc77aba3733a">   73</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7b2d6961c405c49f005fbc77aba3733a">component_graph</a>()</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> _component_graph;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">    /** Get operator group */</span></div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">   78</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a> &amp;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> _operator_group;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">    /** Get operator group */</span></div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab05bc2988232ebd54d7a2f66526469fa">   83</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a> &amp;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab05bc2988232ebd54d7a2f66526469fa">operator_group</a>()</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">return</span> _operator_group;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aea42870fd33398b3d52774719e843297">   87</a></span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aea42870fd33398b3d52774719e843297">allocate_new_tensor_id</a>()</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">return</span> ++_next_id;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">    /** Generate @ref GpuWorkloadSourceCode from the workload sketch</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     * @note The sketch must be valid. Any error encountered during the building of the code will be thrown.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     * @return GpuWorkloadSourceCode  The generated workload code</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a503d1467801eeb14035d6421c39e74f1">   96</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">GpuWorkloadSourceCode</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a503d1467801eeb14035d6421c39e74f1">generate_source_code</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">component_graph</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#abba9024ebb27161d77bd0e74e5b0f779">fuse</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml#a402c56e36acaa4905e85616bda2f287f">write_workload_code</a>();</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">Context</a>                *_context;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services.xhtml">GpuComponentServices</a>    _comp_services;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> _component_graph;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a>        _operator_group;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a>         _next_id{ <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a181af6ddf1729f06e92859babef277f0">ITensorInfo::invalid_tensor_id</a> };</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;};</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* SRC_DYNAMIC_FUSION_SKETCH_GPU_GPUWORKLOADSKETCHIMPL */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a503d1467801eeb14035d6421c39e74f1"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a503d1467801eeb14035d6421c39e74f1">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::generate_source_code</a></div><div class="ttdeci">GpuWorkloadSourceCode generate_source_code() const</div><div class="ttdoc">Generate GpuWorkloadSourceCode from the workload sketch. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00096">GpuWorkloadSketchImpl.h:96</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">arm_compute::experimental::dynamic_fusion::GpuWorkloadSourceCode</a></div><div class="ttdoc">Hold the generated kernel source code and other information required to compile and run the workload...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_source_code_8h_source.xhtml#l00172">GpuWorkloadSourceCode.h:172</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGraph</a></div><div class="ttdoc">A multi-input (tensors), multi-output (tensors) acyclic directed graph of gpu kernel components Its m...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_graph_8h_source.xhtml#l00047">GpuKernelComponentGraph.h:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">arm_compute::experimental::dynamic_fusion::GpuOperatorGroup</a></div><div class="ttdoc">A linear sequence of operators to be fused in a workload For the time being, this class is only used ...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_operator_group_8h_source.xhtml#l00074">GpuOperatorGroup.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a7b2d6961c405c49f005fbc77aba3733a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7b2d6961c405c49f005fbc77aba3733a">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::component_graph</a></div><div class="ttdeci">GpuKernelComponentGraph &amp; component_graph()</div><div class="ttdoc">Get component graph. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00073">GpuWorkloadSketchImpl.h:73</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a181af6ddf1729f06e92859babef277f0"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a181af6ddf1729f06e92859babef277f0">arm_compute::ITensorInfo::invalid_tensor_id</a></div><div class="ttdeci">static constexpr Id invalid_tensor_id</div><div class="ttdoc">An invalid tensor id within a domain. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00048">ITensorInfo.h:48</a></div></div>
<div class="ttc" id="_gpu_component_services_8h_xhtml"><div class="ttname"><a href="_gpu_component_services_8h.xhtml">GpuComponentServices.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_af5d6e63adc08ff38e747e2884d4f4cef"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::context</a></div><div class="ttdeci">const Context * context() const</div><div class="ttdoc">Get workload context. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00063">GpuWorkloadSketchImpl.h:63</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_aea42870fd33398b3d52774719e843297"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aea42870fd33398b3d52774719e843297">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::allocate_new_tensor_id</a></div><div class="ttdeci">ITensorInfo::Id allocate_new_tensor_id()</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00087">GpuWorkloadSketchImpl.h:87</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a53a99846286646c8e36726c50407b5c3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::component_graph</a></div><div class="ttdeci">const GpuKernelComponentGraph &amp; component_graph() const</div><div class="ttdoc">Get component graph. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00068">GpuWorkloadSketchImpl.h:68</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph_xhtml_abba9024ebb27161d77bd0e74e5b0f779"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#abba9024ebb27161d77bd0e74e5b0f779">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGraph::fuse</a></div><div class="ttdeci">GpuKernelComponentStream fuse() const</div><div class="ttdoc">Perform component fusion and serialize the graph into a stream of component groups. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_graph_8cpp_source.xhtml#l00083">GpuKernelComponentGraph.cpp:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_acf94eb610fe8006b99837d880e4e7ac5"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#acf94eb610fe8006b99837d880e4e7ac5">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::Implementation</a></div><div class="ttdeci">Implementation(Context *context)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00046">GpuWorkloadSketchImpl.h:46</a></div></div>
<div class="ttc" id="_gpu_operator_group_8h_xhtml"><div class="ttname"><a href="_gpu_operator_group_8h.xhtml">GpuOperatorGroup.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext</a></div><div class="ttdoc">Provide context necessary for the creation and configuration of a workload e.g. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8h_source.xhtml#l00056">GpuWorkloadContext.h:56</a></div></div>
<div class="ttc" id="_gpu_workload_sketch_8h_xhtml"><div class="ttname"><a href="_gpu_workload_sketch_8h.xhtml">GpuWorkloadSketch.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_ab05bc2988232ebd54d7a2f66526469fa"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab05bc2988232ebd54d7a2f66526469fa">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::operator_group</a></div><div class="ttdeci">GpuOperatorGroup &amp; operator_group()</div><div class="ttdoc">Get operator group. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00083">GpuWorkloadSketchImpl.h:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation</a></div><div class="ttdoc">Internal implementation of GpuWorkloadSketch. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00039">GpuWorkloadSketchImpl.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services.xhtml">arm_compute::experimental::dynamic_fusion::GpuComponentServices</a></div><div class="ttdoc">Services that are used throughout the creation phase of workload code. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_component_services_8h_source.xhtml#l00037">GpuComponentServices.h:37</a></div></div>
<div class="ttc" id="_gpu_kernel_component_graph_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_component_graph_8h.xhtml">GpuKernelComponentGraph.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream_xhtml_a402c56e36acaa4905e85616bda2f287f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml#a402c56e36acaa4905e85616bda2f287f">arm_compute::experimental::dynamic_fusion::GpuKernelComponentStream::write_workload_code</a></div><div class="ttdeci">GpuWorkloadSourceCode write_workload_code()</div><div class="ttdoc">Generate and assemble GpuWorkloadSourceCode from the stream. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_stream_8cpp_source.xhtml#l00041">GpuKernelComponentStream.cpp:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_aeaf80439a5c87912150e770e20d2c7d6"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeaf80439a5c87912150e770e20d2c7d6">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::operator=</a></div><div class="ttdeci">Implementation &amp; operator=(const Implementation &amp;impl)=delete</div><div class="ttdoc">Prevent instances of this class from being copied. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a1fafaeb6e3ab8c0bc772532cc3fcff1a"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">arm_compute::ITensorInfo::Id</a></div><div class="ttdeci">int32_t Id</div><div class="ttdoc">An id that uniquely identifies an ITensorInfo within some domain (e.g. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00046">ITensorInfo.h:46</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_aeca25ed142be5cb241f375c6f79638e0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::operator_group</a></div><div class="ttdeci">const GpuOperatorGroup &amp; operator_group() const</div><div class="ttdoc">Get operator group. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00078">GpuWorkloadSketchImpl.h:78</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_5ff8356557e4f59c6a20c3735e8d2267.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_729ca8b25cabcdcb8b11b571ea7b237a.xhtml">sketch</a></li><li class="navelem"><a class="el" href="dir_df94d166e0e6f49d063cb29fea25a88b.xhtml">gpu</a></li><li class="navelem"><a class="el" href="_gpu_workload_sketch_impl_8h.xhtml">GpuWorkloadSketchImpl.h</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:53 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
