<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/UNIT/dynamic_fusion/ArbitraryElementwiseFusion.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_arbitrary_elementwise_fusion_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ArbitraryElementwiseFusion.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_arbitrary_elementwise_fusion_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_kernel_building_a_p_i_8h.xhtml">src/core/experimental/dynamic_fusion/ClKernelBuildingAPI.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="float__ops_8h.xhtml">src/core/utils/helpers/float_ops.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_accessor_8h.xhtml">tests/CL/CLAccessor.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_macros_8h.xhtml">tests/framework/Macros.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validation_8h.xhtml">tests/validation/Validation.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_convolution_layer_8h.xhtml">tests/validation/reference/ConvolutionLayer.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_elementwise_operations_8h.xhtml">tests/validation/reference/ElementwiseOperations.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_permute_8h.xhtml">tests/validation/reference/Permute.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_composite_operator_8h.xhtml">arm_compute/runtime/experimental/ClCompositeOperator.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_floor_8h.xhtml">tests/validation/reference/Floor.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_8h.xhtml">arm_compute/core/ITensor.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2validation_2_c_l_2_u_n_i_t_2dynamic__fusion_2_utils_8h.xhtml">tests/validation/CL/UNIT/dynamic_fusion/Utils.h</a>&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1utils.xhtml">arm_compute::test::validation::utils</a>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">namespace </span>validation</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(CL)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(UNIT)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(DYNAMIC_FUSION)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(ArbitraryFusion)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7e86bab0828728540589e4471132bf91">   56</a></span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a846b2e70d2ba2180ccb81045c88b8409">TEST_CASE</a>(ElementwiseBroadcasting, framework::<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>::ALL)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// Test elementwise broadcasting</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>   = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> = <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">input_shape</a> = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(7, 9, 5);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> rhs_shape   = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(7, 1, 1);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>   = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(7, 9, 5);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">// Tensor Info</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>  = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">input_shape</a>, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">auto</span> addend_info = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(rhs_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">auto</span> dst_info    = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a> add_desc{ <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a> };</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">default_reinit</a>();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>    cl_compile_ctx = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a>();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">op_graph</a>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_input  = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_addend = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, addend_info);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_dst    = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, dst_info);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6ddaa43fa5e752d3a4804654ef17890b">add_op_elementwise_op</a>(op_graph, add_desc, op_input, op_addend, op_dst);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a08e850b331ef9cf5122b021b85f27af6">workload_ctx</a>{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml">GpuInfo</a>{ <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>() } };</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a>              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ba70c7ef99250a96e87378c163f2b0e">build</a>(workload, op_graph, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a08e850b331ef9cf5122b021b85f27af6">workload_ctx</a>);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a> op;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    op.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#aaafe061c90d7bcd5b9a573e841fd4e4a">configure</a>(cl_compile_ctx, workload);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// Construct tensors</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_input{};</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_addend{};</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_dst{};</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="comment">// Init tensors</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    t_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    t_addend.allocator()-&gt;init(addend_info);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    t_dst.allocator()-&gt;init(dst_info);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="comment">// Allocate and fill tensors</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    t_input.allocator()-&gt;allocate();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    t_addend.allocator()-&gt;allocate();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    t_dst.allocator()-&gt;allocate();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">// Fill</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_input), 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_addend), 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="comment">// Pack tensors</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7c2a91a85b564dbc8e52229582e982a9">OpTensorBinding</a> bp_tensors({ { op_input, &amp;t_input },</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        { op_addend, &amp;t_addend },</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        { op_dst, &amp;t_dst }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    });</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="comment">// Populate prepare and run pack-maps (including allocating aux tensors)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data.xhtml">ClAuxTensorData</a> aux_tensor_data{};</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a>   prepare_pack_map{};</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a>   run_pack_map{};</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0d7c1c3d9ad0be83d4dd2dc9d444ad32">bind_tensors</a>(aux_tensor_data, prepare_pack_map, run_pack_map, workload, bp_tensors);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    op.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#aab9ab60672d5e3feefa1d02c028a8bcc">prepare</a>(prepare_pack_map);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    op.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#a3871efa4a6ba468a7a931707f49afe50">run</a>(run_pack_map);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">// Create reference</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_input{ <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">input_shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a> };</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_addend{ rhs_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), DataLayout::NHWC };</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment">// Fill reference</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    fill&lt;float&gt;(ref_input, 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    fill&lt;float&gt;(ref_addend, 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">auto</span> ref_input_nchw  = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_input, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">auto</span> ref_addend_nchw = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_addend, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">auto</span> dst_shape_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">permute</a>(dst_shape_nchw, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">auto</span> ref_t_dst_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acf9af191573bdcb8e1b0be4b10ba5954">reference::arithmetic_operation</a>(</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                              <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a>,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                              ref_input_nchw,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                              ref_addend_nchw,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                              <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a>{});</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_t_dst = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_t_dst_nchw, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance&lt;float&gt;</a> <a class="code" href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a>(0.001f);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_dst), ref_t_dst_nchw, tolerance_f32);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a758f5516b263837236ba69e937369f9a">  150</a></span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a846b2e70d2ba2180ccb81045c88b8409">TEST_CASE</a>(DivFloor, framework::DatasetMode::ALL)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">// x = floor(div(input, input2))</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>    = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> eltwise_info = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a>{ <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">ArithmeticOperation::DIV</a> };</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="comment">// Tensor Values</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> width  = 7<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> height = 6<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="comment">// Shapes</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input1_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(width, height);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input2_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(width, height);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>    = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(width, height);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// Create reference</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_src_nhwc{ input1_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a> };</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_src2_nhwc{ input2_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), DataLayout::NHWC };</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="comment">// Fill reference</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    fill&lt;float&gt;(ref_src_nhwc, 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    fill&lt;float&gt;(ref_src2_nhwc, 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">auto</span> ref_src  = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_src_nhwc, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">auto</span> ref_src2 = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_src2_nhwc, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> dst_shape_nchw{ <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a> };</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">permute</a>(dst_shape_nchw, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_dst_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6c81be98812b8cb462be45d9e3d21464">reference::floor_layer</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acf9af191573bdcb8e1b0be4b10ba5954">reference::arithmetic_operation</a>(</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">ArithmeticOperation::DIV</a>,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                                         ref_src,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                                         ref_src2,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                                         <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_t_dst = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_dst_nchw, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="comment">// Tensor Info</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f334d02ed8e75a635b186f01ba8e69">input1_info</a> = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(input1_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, DataLayout::NHWC);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae4cee3f5e7f05fd98ef454c1d2ef5a46">input2_info</a> = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(input2_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, DataLayout::NHWC);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keyword">auto</span> dst_info    = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>();</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keyword">auto</span> acc_info    = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(); <span class="comment">// Intermediate tensor for division</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="comment">// Initialise Scheduler</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">default_reinit</a>();</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>    cl_compile_ctx = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a>();</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">op_graph</a>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="comment">// add tensors</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keyword">auto</span> op_input1 = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f334d02ed8e75a635b186f01ba8e69">input1_info</a>);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keyword">auto</span> op_input2 = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae4cee3f5e7f05fd98ef454c1d2ef5a46">input2_info</a>);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keyword">auto</span> op_acc    = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, acc_info);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keyword">auto</span> op_dst    = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, dst_info);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6ddaa43fa5e752d3a4804654ef17890b">add_op_elementwise_op</a>(op_graph, eltwise_info, op_input1, op_input2, op_acc);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a3f7c5a493aa563a630eaec1042f95071">add_op_floor</a>(op_graph, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">FloorDescriptor</a>(), op_acc, op_dst);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a08e850b331ef9cf5122b021b85f27af6">workload_ctx</a>{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml">GpuInfo</a>{ <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>() } };</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a>              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ba70c7ef99250a96e87378c163f2b0e">build</a>(workload, op_graph, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a08e850b331ef9cf5122b021b85f27af6">workload_ctx</a>);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a> op;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    op.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#aaafe061c90d7bcd5b9a573e841fd4e4a">configure</a>(cl_compile_ctx, workload);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="comment">// Configure and add tensors.</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_input1{};</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_input2{};</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_dst{};</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="comment">// Init Tensors</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    t_input1.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f334d02ed8e75a635b186f01ba8e69">input1_info</a>);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    t_input2.allocator()-&gt;init(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae4cee3f5e7f05fd98ef454c1d2ef5a46">input2_info</a>);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    t_dst.allocator()-&gt;init(dst_info);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="comment">// Allocate and fill tensors</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    t_input1.allocator()-&gt;allocate();</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    t_input2.allocator()-&gt;allocate();</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    t_dst.allocator()-&gt;allocate();</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_input1), 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_input2), 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="comment">// &quot;Pack&quot; tensors</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7c2a91a85b564dbc8e52229582e982a9">OpTensorBinding</a> bp_tensors({ { op_input1, &amp;t_input1 },</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        { op_input2, &amp;t_input2 },</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        { op_dst, &amp;t_dst }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    });</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="comment">// Populate prepare and run pack-maps (including allocating aux tensors)</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data.xhtml">ClAuxTensorData</a> aux_tensor_data{};</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a>   prepare_pack_map{};</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a>   run_pack_map{};</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0d7c1c3d9ad0be83d4dd2dc9d444ad32">bind_tensors</a>(aux_tensor_data, prepare_pack_map, run_pack_map, workload, bp_tensors);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    op.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#aab9ab60672d5e3feefa1d02c028a8bcc">prepare</a>(prepare_pack_map);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    op.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#a3871efa4a6ba468a7a931707f49afe50">run</a>(run_pack_map);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance&lt;float&gt;</a> <a class="code" href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a>(0.001f); <span class="comment">/**&lt; Tolerance value for comparing reference&#39;s output against implementation&#39;s output for floating point data types */</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_dst), ref_dst_nchw, tolerance_f32);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;}</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a217e2354190778a69bd1cab72952b629">  251</a></span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a846b2e70d2ba2180ccb81045c88b8409">TEST_CASE</a>(Dconv2dAddDiv, framework::DatasetMode::ALL)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;{</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="comment">// output = div(divend, add(addend, conv2d1x1(direct_conv)(input, weights, bias)))</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>   = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> = <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">input_shape</a>  = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(384, 12, 12);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> weight_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(384, 1, 1, 16);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>    = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(16, 12, 12);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="comment">// Tensor Info</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>  = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">input_shape</a>, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keyword">auto</span> weight_info = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(weight_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">auto</span> addend_info = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keyword">auto</span> divend_info = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keyword">auto</span> acc_info    = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(); <span class="comment">// Intermediate tensor for conv</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keyword">auto</span> acc_1_info  = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>();</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">auto</span> dst_info    = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>();</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a>      <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>{};</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a> add_desc{ <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a> };</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a> div_desc{ <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">ArithmeticOperation::DIV</a> };</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">default_reinit</a>();</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>    cl_compile_ctx = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a>();</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">op_graph</a>;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_input  = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_weight = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, weight_info);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_addend = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, addend_info);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_divend = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, divend_info);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_acc    = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, acc_info);   <span class="comment">// temp accumulator; TensorInfo to be inferred</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_acc_1  = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, acc_1_info); <span class="comment">// temp accumulator; TensorInfo to be inferred</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op_dst    = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(op_graph, dst_info);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keyword">auto</span> conv2d = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a859ce0f92e55dabcfe0ce42b4d0be85e">add_op_conv2d</a>(op_graph, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>, op_input, op_weight, op_acc);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0500494c1c88e005019c1046023207b9">force_conv2d_method</a>(op_graph, conv2d, <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6ddaa43fa5e752d3a4804654ef17890b">add_op_elementwise_op</a>(op_graph, add_desc, op_acc, op_addend, op_acc_1);</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6ddaa43fa5e752d3a4804654ef17890b">add_op_elementwise_op</a>(op_graph, div_desc, op_acc_1, op_divend, op_dst);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a08e850b331ef9cf5122b021b85f27af6">workload_ctx</a>{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml">GpuInfo</a>{ <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>() } };</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a>              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ba70c7ef99250a96e87378c163f2b0e">build</a>(workload, op_graph, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a08e850b331ef9cf5122b021b85f27af6">workload_ctx</a>);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a> op;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    op.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#aaafe061c90d7bcd5b9a573e841fd4e4a">configure</a>(cl_compile_ctx, workload);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="comment">// Construct tensors</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_input{};</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_weight{};</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_addend{};</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_divend{};</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_dst{};</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="comment">// Init tensors</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    t_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    t_weight.allocator()-&gt;init(weight_info);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    t_divend.allocator()-&gt;init(divend_info);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    t_addend.allocator()-&gt;init(addend_info);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    t_dst.allocator()-&gt;init(dst_info);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="comment">// Allocate and fill tensors</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    t_input.allocator()-&gt;allocate();</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    t_weight.allocator()-&gt;allocate();</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    t_divend.allocator()-&gt;allocate();</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    t_addend.allocator()-&gt;allocate();</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    t_dst.allocator()-&gt;allocate();</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="comment">// Fill</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_input), 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_weight), 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_addend), 2, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_divend), 3, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="comment">// Pack tensors</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7c2a91a85b564dbc8e52229582e982a9">OpTensorBinding</a> bp_tensors({ { op_input, &amp;t_input },</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        { op_weight, &amp;t_weight },</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        { op_addend, &amp;t_addend },</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        { op_divend, &amp;t_divend },</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        { op_dst, &amp;t_dst }</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    });</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="comment">// Populate prepare and run pack-maps (including allocating aux tensors)</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data.xhtml">ClAuxTensorData</a> aux_tensor_data{};</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a>   prepare_pack_map{};</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a>   run_pack_map{};</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0d7c1c3d9ad0be83d4dd2dc9d444ad32">bind_tensors</a>(aux_tensor_data, prepare_pack_map, run_pack_map, workload, bp_tensors);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    op.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#aab9ab60672d5e3feefa1d02c028a8bcc">prepare</a>(prepare_pack_map);</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    op.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#a3871efa4a6ba468a7a931707f49afe50">run</a>(run_pack_map);</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="comment">// Create reference</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_input{ <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">input_shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a> };</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_weight{ weight_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), DataLayout::NHWC };</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_bias_placeholder{ <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), DataLayout::NHWC };</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_addend{ <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), DataLayout::NHWC };</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_divend{ <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), DataLayout::NHWC };</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="comment">// Fill reference</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    fill&lt;float&gt;(ref_input, 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    fill&lt;float&gt;(ref_weight, 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    fill&lt;float&gt;(ref_addend, 2, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    fill&lt;float&gt;(ref_divend, 3, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keyword">auto</span> ref_input_nchw            = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_input, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">auto</span> ref_weight_nchw           = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_weight, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keyword">auto</span> ref_bias_placeholder_nchw = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_bias_placeholder, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keyword">auto</span> ref_addend_nchw           = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_addend, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keyword">auto</span> ref_divend_nchw           = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_divend, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keyword">auto</span> dst_shape_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">permute</a>(dst_shape_nchw, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> legacy_pad_stride(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>.stride.x(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>.stride.y(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>.pad.left, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>.pad.right, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>.pad.top, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>.pad.bottom, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a>{});</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keyword">auto</span>          ref_acc_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acf9af191573bdcb8e1b0be4b10ba5954">reference::arithmetic_operation</a>(</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                                     <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a>,</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                                     ref_addend_nchw,</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                                     <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a06499781c05df8148544ecffbd6b7192">reference::convolution_layer</a>(ref_input_nchw, ref_weight_nchw, ref_bias_placeholder_nchw, dst_shape_nchw, legacy_pad_stride, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>.dilation),</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                                     <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>,</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                                     <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a>{});</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keyword">auto</span> ref_t_dst_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acf9af191573bdcb8e1b0be4b10ba5954">reference::arithmetic_operation</a>(</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                              <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">ArithmeticOperation::DIV</a>,</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                              ref_acc_nchw,</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                              ref_divend_nchw,</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>,</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                              <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a>{});</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_t_dst = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_t_dst_nchw, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>));</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance&lt;float&gt;</a> <a class="code" href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a>(0.001f);</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_dst), ref_t_dst_nchw, tolerance_f32);</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;}</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// ArbitraryFusion</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// DYNAMIC_FUSION</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// UNIT</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// CL</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;} <span class="comment">// namespace validation</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ae4cee3f5e7f05fd98ef454c1d2ef5a46"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae4cee3f5e7f05fd98ef454c1d2ef5a46">arm_compute::test::validation::input2_info</a></div><div class="ttdeci">input2_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00862">GEMMMatrixMultiplyReshaped.cpp:862</a></div></div>
<div class="ttc" id="tests_2validation_2_c_l_2_u_n_i_t_2dynamic__fusion_2_utils_8h_xhtml"><div class="ttname"><a href="tests_2validation_2_c_l_2_u_n_i_t_2dynamic__fusion_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkload</a></div><div class="ttdoc">Workload for Cl backend. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00173">ClWorkload.h:173</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a048af4e9fc68526bf6d39e80e043a456"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">arm_compute::experimental::dynamic_fusion::validate</a></div><div class="ttdeci">Status validate(const OperatorGraph &amp;op_graph)</div><div class="ttdoc">Return the validity of op_graph, usually after performing an operation (e.g. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00121">OperatorGraph.cpp:121</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acf5f12bbab64dd614bd8220c97fe484f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00403">ConvolutionLayer.cpp:403</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a038d136792f815c57fcdf93b0a59f5f1"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">arm_compute::CLScheduler::default_reinit</a></div><div class="ttdeci">void default_reinit(ICLTuner *cl_tuner=nullptr, CLGEMMHeuristicsHandle *gemm_h=nullptr, CLBackendType cl_backend_type=CLBackendType::Native)</div><div class="ttdoc">Re-initializes the context and command queue used by the scheduler to default values and sets a defau...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00145">CLScheduler.cpp:145</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1utils.xhtml">arm_compute::test::validation::utils</a></div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_c_l_2_u_n_i_t_2dynamic__fusion_2_utils_8h_source.xhtml#l00040">Utils.h:40</a></div></div>
<div class="ttc" id="cl__gemm_8cpp_xhtml_ae7f215e412cfa0dae5a983b0bf4071a1"><div class="ttname"><a href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a></div><div class="ttdeci">RelativeTolerance&lt; float &gt; tolerance_f32(0.001f)</div><div class="ttdoc">F32 Tolerance value for comparing reference&amp;#39;s output against implementation&amp;#39;s output for floating poi...</div></div>
<div class="ttc" id="_i_tensor_8h_xhtml"><div class="ttname"><a href="_i_tensor_8h.xhtml">ITensor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">arm_compute::ArithmeticOperation::DIV</a></div><div class="ttdoc">(x / y) </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a96f334d02ed8e75a635b186f01ba8e69"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f334d02ed8e75a635b186f01ba8e69">arm_compute::test::validation::input1_info</a></div><div class="ttdeci">input1_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00862">GEMMMatrixMultiplyReshaped.cpp:862</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a27561688e2fc60176608ef725a4ecb30"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">arm_compute::CLScheduler::target</a></div><div class="ttdeci">GPUTarget target() const</div><div class="ttdoc">Get the target GPU. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00049">CLScheduler.cpp:49</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af22d91f65b56b795fd28f3b302cd3ad2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">arm_compute::test::validation::dst_shape</a></div><div class="ttdeci">TensorShape dst_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00164">DFT.cpp:164</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">arm_compute::ArithmeticOperation::ADD</a></div><div class="ttdoc">(x + y) </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkloadContext</a></div><div class="ttdoc">Context (device capabilities, platform details) associated with a ClWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00162">ClWorkload.h:162</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6ddaa43fa5e752d3a4804654ef17890b"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6ddaa43fa5e752d3a4804654ef17890b">arm_compute::experimental::dynamic_fusion::add_op_elementwise_op</a></div><div class="ttdeci">Operator add_op_elementwise_op(OperatorGraph &amp;graph, const ElementwiseDescriptor &amp;desc, OpTensor lhs, OpTensor rhs, OpTensor dst)</div><div class="ttdoc">Add op Elementwise to graph, and optionally describes fusion through passing of intermediate OpTensor...</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00201">OperatorGraph.cpp:201</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">arm_compute::experimental::dynamic_fusion::OperatorGraph</a></div><div class="ttdoc">Graph of operators to execute within a Workload. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00042">OperatorGraph.h:42</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849a"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">arm_compute::DimensionRoundingType</a></div><div class="ttdeci">DimensionRoundingType</div><div class="ttdoc">Dimension rounding type when down-scaling on CNNs. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00550">Types.h:550</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a33e65be485104e2e9e69fca551d6f492"><div class="ttname"><a href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">arm_compute::PermutationVector</a></div><div class="ttdeci">Strides PermutationVector</div><div class="ttdoc">Permutation vector. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00051">Types.h:51</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00039">CLKernelLibrary.cpp:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor&amp;#39;s allocator. </div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a10a0137545ce1771423fbde2ce494a81"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">arm_compute::CLKernelLibrary::get_compile_context</a></div><div class="ttdeci">CLCompileContext &amp; get_compile_context()</div><div class="ttdoc">Gets the compile context used. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00130">CLKernelLibrary.cpp:130</a></div></div>
<div class="ttc" id="_floor_8h_xhtml"><div class="ttname"><a href="_floor_8h.xhtml">Floor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0500494c1c88e005019c1046023207b9"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0500494c1c88e005019c1046023207b9">arm_compute::experimental::dynamic_fusion::force_conv2d_method</a></div><div class="ttdeci">void force_conv2d_method(OperatorGraph &amp;graph, Operator conv2d, ConvolutionMethod method)</div><div class="ttdoc">(Only for Debuging and Testing) Force a conv2d method </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00195">OperatorGraph.cpp:195</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_acf9af191573bdcb8e1b0be4b10ba5954"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acf9af191573bdcb8e1b0be4b10ba5954">arm_compute::test::validation::reference::arithmetic_operation</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; arithmetic_operation(ArithmeticOperation op, const SimpleTensor&lt; T &gt; &amp;src1, const SimpleTensor&lt; T &gt; &amp;src2, SimpleTensor&lt; T &gt; &amp;dst, ConvertPolicy convert_policy)</div><div class="ttdef"><b>Definition:</b> <a href="_arithmetic_operations_8cpp_source.xhtml#l00092">ArithmeticOperations.cpp:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_allocator_xhtml_af36143939a43fa124312e395975091ed"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">arm_compute::ITensorAllocator::init</a></div><div class="ttdeci">void init(const TensorInfo &amp;input, size_t alignment=0)</div><div class="ttdoc">Initialize a tensor based on the passed TensorInfo. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator.cpp:33</a></div></div>
<div class="ttc" id="_c_l_accessor_8h_xhtml"><div class="ttname"><a href="_c_l_accessor_8h.xhtml">CLAccessor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::FloorDescriptor</a></div><div class="ttdoc">Descriptor for Floor operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00190">OperatorGraph.h:190</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml_acd09bed517e43d28823e69494f259835"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a></div><div class="ttdeci">#define TEST_SUITE(SUITE_NAME)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00034">Macros.h:34</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml_a846b2e70d2ba2180ccb81045c88b8409"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#a846b2e70d2ba2180ccb81045c88b8409">TEST_CASE</a></div><div class="ttdeci">#define TEST_CASE(TEST_NAME, MODE)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00180">Macros.h:180</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a21c3e11887f3acf9284ca763372c7da0"><div class="ttname"><a href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">arm_compute::permute</a></div><div class="ttdeci">void permute(Dimensions&lt; T &gt; &amp;dimensions, const PermutationVector &amp;perm)</div><div class="ttdoc">Permutes given Dimensions according to a permutation vector. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00125">Helpers.h:125</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">arm_compute::ConvolutionMethod::DIRECT</a></div><div class="ttdoc">Direct convolution. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a6c81be98812b8cb462be45d9e3d21464"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6c81be98812b8cb462be45d9e3d21464">arm_compute::test::validation::reference::floor_layer</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; floor_layer(const SimpleTensor&lt; T &gt; &amp;src)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_floor_8cpp_source.xhtml#l00039">Floor.cpp:39</a></div></div>
<div class="ttc" id="_elementwise_operations_8h_xhtml"><div class="ttname"><a href="_elementwise_operations_8h.xhtml">ElementwiseOperations.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00071">QuantizationInfo.h:71</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af78b3c8c9ad65dcb4bfa1d2fee424308"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">arm_compute::test::validation::input_shape</a></div><div class="ttdeci">const auto input_shape</div><div class="ttdoc">Validate test suite is to test ARM_COMPUTE_RETURN_ON_* macros we use to check the validity of given a...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00405">ConvolutionLayer.cpp:405</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes. </div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator_xhtml_a3871efa4a6ba468a7a931707f49afe50"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#a3871efa4a6ba468a7a931707f49afe50">arm_compute::experimental::dynamic_fusion::ClCompositeOperator::run</a></div><div class="ttdeci">void run(TensorPackMap &amp;tensor_pack_map)</div><div class="ttdoc">Enqueue run workloads. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8cpp_source.xhtml#l00224">ClCompositeOperator.cpp:224</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_a71326f0909d77386e29b511e1990a11f"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">arm_compute::test::library</a></div><div class="ttdeci">std::unique_ptr&lt; AssetsLibrary &gt; library</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00076">main.cpp:76</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ae008e90eb6906fa3526213bc860f6cc5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">arm_compute::test::validation::input_info</a></div><div class="ttdeci">input_info</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_c_l_2fft_8cpp_source.xhtml#l00145">FFT.cpp:145</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_c_l_accessor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">arm_compute::test::CLAccessor</a></div><div class="ttdoc">Accessor implementation for CLTensor objects. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_accessor_8h_source.xhtml#l00036">CLAccessor.h:36</a></div></div>
<div class="ttc" id="float__ops_8h_xhtml"><div class="ttname"><a href="float__ops_8h.xhtml">float_ops.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a08e850b331ef9cf5122b021b85f27af6"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a08e850b331ef9cf5122b021b85f27af6">arm_compute::test::validation::workload_ctx</a></div><div class="ttdeci">const ClWorkloadContext workload_ctx</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00265">Integration_OperatorFuseMovenetSubGraph1.cpp:265</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00669">Types.h:669</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ElementwiseDescriptor</a></div><div class="ttdoc">Descriptor for Elementwise binary operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00167">OperatorGraph.h:167</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00041">ClWorkload.h:41</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::Conv2dDescriptor</a></div><div class="ttdoc">Descriptor for Conv2dDescriptor operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00133">OperatorGraph.h:133</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a3f7c5a493aa563a630eaec1042f95071"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a3f7c5a493aa563a630eaec1042f95071">arm_compute::experimental::dynamic_fusion::add_op_floor</a></div><div class="ttdeci">Operator add_op_floor(OperatorGraph &amp;graph, const FloorDescriptor &amp;desc, OpTensor src, OpTensor dst)</div><div class="ttdoc">Add op Floor to graph, and optionally describes fusion through passing of intermediate OpTensor s...</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00233">OperatorGraph.cpp:233</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_simple_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor</a></div><div class="ttdoc">Simple tensor object that stores elements in a consecutive chunk of memory. </div><div class="ttdef"><b>Definition:</b> <a href="_simple_tensor_8h_source.xhtml#l00058">SimpleTensor.h:58</a></div></div>
<div class="ttc" id="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h.xhtml">CLTensor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0ba70c7ef99250a96e87378c163f2b0e"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ba70c7ef99250a96e87378c163f2b0e">arm_compute::experimental::dynamic_fusion::build</a></div><div class="ttdeci">Status build(ClWorkload &amp;workload, const OperatorGraph &amp;op_graph, const ClWorkloadContext &amp;ctx)</div><div class="ttdoc">Build a ClWorkload from an OperatorGraph. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8cpp_source.xhtml#l00036">ClWorkload.cpp:36</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml">arm_compute::experimental::dynamic_fusion::GpuInfo</a></div><div class="ttdoc">GPU information for ClWorkloadContext. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00149">ClWorkload.h:149</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a06499781c05df8148544ecffbd6b7192"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a06499781c05df8148544ecffbd6b7192">arm_compute::test::validation::reference::convolution_layer</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; convolution_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; TW &gt; &amp;weights, const SimpleTensor&lt; TB &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, const Size2D &amp;dilation, unsigned int num_groups, QuantizationInfo out_quant_info)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_convolution_layer_8cpp_source.xhtml#l00111">ConvolutionLayer.cpp:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator_xhtml_aab9ab60672d5e3feefa1d02c028a8bcc"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#aab9ab60672d5e3feefa1d02c028a8bcc">arm_compute::experimental::dynamic_fusion::ClCompositeOperator::prepare</a></div><div class="ttdeci">void prepare(TensorPackMap &amp;tensor_pack_map)</div><div class="ttdoc">Enqueue prepare workloads. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8cpp_source.xhtml#l00208">ClCompositeOperator.cpp:208</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad001edc7e4d1ea972be09f232c6e7729"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">arm_compute::test::validation::workload</a></div><div class="ttdeci">ClWorkload workload</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00266">Integration_OperatorFuseMovenetSubGraph1.cpp:266</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a8aad35ee7c2bfa06456fade719732d21"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">arm_compute::experimental::dynamic_fusion::add_tensor</a></div><div class="ttdeci">OpTensor add_tensor(OperatorGraph &amp;graph, ITensorInfo &amp;info)</div><div class="ttdoc">Associate a TensorInfo with a newly created OpTensor in the graph. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00126">OperatorGraph.cpp:126</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">arm_compute::test::validation::RelativeTolerance</a></div><div class="ttdoc">Class reprensenting a relative tolerance value. </div><div class="ttdef"><b>Definition:</b> <a href="_validation_8h_source.xhtml#l00097">Validation.h:97</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a7c2a91a85b564dbc8e52229582e982a9"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7c2a91a85b564dbc8e52229582e982a9">arm_compute::experimental::dynamic_fusion::OpTensorBinding</a></div><div class="ttdeci">std::map&lt; OpTensor, ITensor * &gt; OpTensorBinding</div><div class="ttdoc">Map OpTensor handles to their corresponding ITensor memory. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8h_source.xhtml#l00044">ClCompositeOperator.h:44</a></div></div>
<div class="ttc" id="_cl_composite_operator_8h_xhtml"><div class="ttname"><a href="_cl_composite_operator_8h.xhtml">ClCompositeOperator.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels. </div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator_xhtml_aaafe061c90d7bcd5b9a573e841fd4e4a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#aaafe061c90d7bcd5b9a573e841fd4e4a">arm_compute::experimental::dynamic_fusion::ClCompositeOperator::configure</a></div><div class="ttdeci">void configure(const CLCompileContext &amp;ctx, const ClWorkload &amp;workload)</div><div class="ttdoc">Configures a ClCompositeOperator with a ClWorkload This includes the compilation of Cl kernels inside...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8cpp_source.xhtml#l00174">ClCompositeOperator.cpp:174</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a562285808c3bd1107ae49be79d24d41f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">arm_compute::test::validation::conv2d_desc</a></div><div class="ttdeci">const auto conv2d_desc</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00254">Integration_OperatorFuseMovenetSubGraph1.cpp:254</a></div></div>
<div class="ttc" id="_validation_8h_xhtml"><div class="ttname"><a href="_validation_8h.xhtml">Validation.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00043">TensorInfo.h:43</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">Cast.cpp:203</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad471f4eec82e65ca35e1cf32bda90200"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">arm_compute::test::validation::op_graph</a></div><div class="ttdeci">OperatorGraph op_graph</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00253">Integration_OperatorFuseMovenetSubGraph1.cpp:253</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_aux_tensor_data.xhtml">arm_compute::experimental::dynamic_fusion::ClAuxTensorData</a></div><div class="ttdoc">Holder of any auxiliary CLTensors required by a ClWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8h_source.xhtml#l00087">ClCompositeOperator.h:87</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::ConvertPolicy::SATURATE</a></div><div class="ttdoc">Saturate. </div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">arm_compute::experimental::dynamic_fusion::TensorPackMap</a></div><div class="ttdoc">Map a kernel (as identified by its unit workload id) to its corresponding tensor pack. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8h_source.xhtml#l00050">ClCompositeOperator.h:50</a></div></div>
<div class="ttc" id="_convolution_layer_8h_xhtml"><div class="ttname"><a href="_convolution_layer_8h.xhtml">ConvolutionLayer.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6f"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">arm_compute::ConvertPolicy</a></div><div class="ttdeci">ConvertPolicy</div><div class="ttdoc">Policy to handle integer overflow. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00404">Types.h:404</a></div></div>
<div class="ttc" id="_permute_8h_xhtml"><div class="ttname"><a href="_permute_8h.xhtml">Permute.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a859ce0f92e55dabcfe0ce42b4d0be85e"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a859ce0f92e55dabcfe0ce42b4d0be85e">arm_compute::experimental::dynamic_fusion::add_op_conv2d</a></div><div class="ttdeci">Operator add_op_conv2d(OperatorGraph &amp;graph, const Conv2dDescriptor &amp;desc, OpTensor input, OpTensor weights, OpTensor bias, OpTensor dst)</div><div class="ttdoc">Add op Conv2d to graph. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00134">OperatorGraph.cpp:134</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml_a603cb7f45efd81606e51686da9aeebd9"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a></div><div class="ttdeci">#define TEST_SUITE_END()</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00039">Macros.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">arm_compute::experimental::dynamic_fusion::ClCompositeOperator</a></div><div class="ttdoc">Operator runtime to run a ClWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8h_source.xhtml#l00151">ClCompositeOperator.h:151</a></div></div>
<div class="ttc" id="_cl_kernel_building_a_p_i_8h_xhtml"><div class="ttname"><a href="_cl_kernel_building_a_p_i_8h.xhtml">ClKernelBuildingAPI.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0d7c1c3d9ad0be83d4dd2dc9d444ad32"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0d7c1c3d9ad0be83d4dd2dc9d444ad32">arm_compute::experimental::dynamic_fusion::bind_tensors</a></div><div class="ttdeci">Status bind_tensors(ClAuxTensorData &amp;aux_tensor_data, TensorPackMap &amp;prepare_pack_map, TensorPackMap &amp;run_pack_map, const ClWorkload &amp;workload, const OpTensorBinding &amp;op_tensors)</div><div class="ttdoc">Bind tensor memory to packs used by prepare and run methods. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8cpp_source.xhtml#l00104">ClCompositeOperator.cpp:104</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml">arm_compute::CLTensor</a></div><div class="ttdoc">Basic implementation of the OpenCL tensor interface. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml#l00041">CLTensor.h:41</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_4fe3055359cf5438733b5e64b064b197.xhtml">UNIT</a></li><li class="navelem"><a class="el" href="dir_1841df5e0440ca053396ba06955277a7.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="_arbitrary_elementwise_fusion_8cpp.xhtml">ArbitraryElementwiseFusion.cpp</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:56 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
