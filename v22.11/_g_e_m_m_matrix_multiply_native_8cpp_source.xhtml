<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/GEMMMatrixMultiplyNative.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GEMMMatrixMultiplyNative.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_g_e_m_m_matrix_multiply_native_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_kernel_descriptors_8h.xhtml">arm_compute/core/KernelDescriptors.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_tensor_allocator_8h.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_gemm_matrix_multiply_native_kernel_8h.xhtml">src/gpu/cl/kernels/ClGemmMatrixMultiplyNativeKernel.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_accessor_8h.xhtml">tests/CL/CLAccessor.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_2_helper_8h.xhtml">tests/CL/Helper.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_padding_calculator_8h.xhtml">tests/PaddingCalculator.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;tests/datasets/ShapeDatasets.h&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_asserts_8h.xhtml">tests/framework/Asserts.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_macros_8h.xhtml">tests/framework/Macros.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_datasets_8h.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validation_8h.xhtml">tests/validation/Validation.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;tests/validation/fixtures/GEMMFixture.h&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace </span>validation</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml">arm_compute::misc::shape_calculator</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">// Create function for ClGemmMatrixMultiplyNativeKernel</span></div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa19c9648e1f7547c40fcbaf67889483f">   50</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml">CLGEMMMatrixMultiplyNative</a> = <a class="code" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml">CLSynthetizeOperator&lt;ClGemmMatrixMultiplyNativeKernel&gt;</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">// Fixture for CLGEMMMatrixMultiplyNative</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4793952e8a68280d40a8a970963bdc0b">   54</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4793952e8a68280d40a8a970963bdc0b">CLGEMMMatrixMultiplyNativeFixture</a> = GEMMMatrixMultiplyNativeValidationFixture&lt;CLTensor, CLAccessor, T, CLGEMMMatrixMultiplyNative&gt;;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">// Fixture for CLGEMMMatrixMultiplyNative with post ops</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae636fb992e2eb369abdc56b3ffbd401e">CLGEMMMatrixMultiplyNativeWithPostOpsFixture</a> =</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae636fb992e2eb369abdc56b3ffbd401e">   59</a></span>&#160;    GEMMMatrixMultiplyNativeWithPostOpsValidationFixture&lt;CLTensor, CLAccessor, T, CLGEMMMatrixMultiplyNative&gt;;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">// Fixture for CLGEMMMatrixMultiplyNative3D</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0945cf440bbfbc3f45b026783e7dd8ca">   63</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0945cf440bbfbc3f45b026783e7dd8ca">CLGEMMMatrixMultiplyNative3DFixture</a> = GEMMMatrixMultiplyNative3DValidationFixture&lt;CLTensor, CLAccessor, T, CLGEMMMatrixMultiplyNative&gt;;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">// *INDENT-OFF*</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">// clang-format off</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<a class="code" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance&lt;float&gt;</a> rel_tolerance_f32(0.001f);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;constexpr <span class="keywordtype">float</span>          <a class="code" href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a>(0.0001f);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">/** Alpha values to test - Precommit */</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> a_values = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;alpha&quot;</span>, {1.0f, -0.75f} );</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">/** Beta values to test - Precommit */</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> beta_values = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;beta&quot;</span>, {-0.75f, 0.0f} );</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">/** M values to test */</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> m_values = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;M&quot;</span>, 37);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">/** M_W values to test */</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> m_w_values = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;M_W&quot;</span>, 5);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">/** M_H values to test */</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> m_h_values = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;M_H&quot;</span>, 7);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">/** N values to test */</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> n_values = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;N&quot;</span>, 51);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">/** K values to test */</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> k_values = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;K&quot;</span>, 23);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">/** Batch size values to test */</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> b_values = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;batch_size&quot;</span>, 1, 3);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">/** Activation values to test */</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> act_values = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Activation&quot;</span>,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>, 8.f, 2.f),</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa5b44c930bf0ddeef48b50ef11e5ddd58">ActivationLayerInfo::ActivationFunction::ELU</a>),</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;});</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">/** M0 values to test - Precommit */</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> m0_values_precommit = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;M0&quot;</span>, { 4, 6 });</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">/** N0 values to test - Precommit */</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> n0_values_precommit = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;N0&quot;</span>, { 4 });</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">/** K0 values to test - Precommit */</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> k0_values_precommit = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;K0&quot;</span>, { 4 });</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">/** H0 values to test - Precommit */</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> h0_values_precommit = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;H0&quot;</span>, 1, 3);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">/** M0 values to test - Nightly */</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> m0_values_nightly = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;M0&quot;</span>, 1, 8);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">/** N0 values to test - Nightly */</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> n0_values_nightly = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;N0&quot;</span>, { 2, 3, 4, 8 });</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">/** K0 values to test - Nightly */</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> k0_values_nightly = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;K0&quot;</span>, { 2, 3, 4, 8 });</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">/** Broadcast bias from vector to matrix */</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> broadcast_bias_values = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;broadcast_bias&quot;</span>, { <span class="keyword">false</span>, <span class="keyword">true</span> } );</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">/** Boundary handling cases for testing partial/non-partial (full) block dimensions, resulting from different combinations</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"> * of M, M0, N and N0 values.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"> * M0 and N0 are kept constant, while the different test cases need to vary M and N.</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment"> * Eg. M = 64 and N = 33 result in a block dimension that has no partial blocks (all full blocks) in Y dimension and</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"> * parital blocks in X dimension.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> boundary_handling_cases = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                    <span class="comment">// Large k to force potential out-of-bound reads on input0</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;K&quot;</span>, 315),</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                    <span class="comment">// Batch size == 1 to force potential out-of-bound reads on input0</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;batch_size&quot;</span>, 1)),</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;M0&quot;</span>, 4)),</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;N0&quot;</span>, 4)),</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;K0&quot;</span>, 4)),</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                                    <span class="comment">// Only need to test F32 as F16 shares identical boundary handling logics</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)),</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;alpha&quot;</span>, -0.75f )),</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;beta&quot;</span>, -0.35f )),</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                    broadcast_bias_values),</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                    <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Activation&quot;</span>, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>()));</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">/** Post Ops */</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">using</span> PostOpArgBroadcast =  <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae636fb992e2eb369abdc56b3ffbd401e">CLGEMMMatrixMultiplyNativeWithPostOpsFixture&lt;float&gt;::PostOpArgBroadcast</a>;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;PostOpArgBroadcast&gt;</a> post_ops_1()</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;{</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;PostOpArgBroadcast&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_act.xhtml">experimental::PostOpAct&lt;PostOpArgBroadcast&gt;</a>&gt;(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046">ActivationLayerInfo::ActivationFunction::LINEAR</a>, 0.5F, 0.0F});</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">experimental::PostOpEltwiseAdd&lt;PostOpArgBroadcast&gt;</a>&gt;(</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        std::make_tuple(<span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">false</span>),   <span class="comment">// If broadcast in dims 0, 1 and 2</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        0,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_act.xhtml">experimental::PostOpAct&lt;PostOpArgBroadcast&gt;</a>&gt;(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>, 2.1F, 1.3F});</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;PostOpArgBroadcast&gt;</a> post_ops_2()</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;PostOpArgBroadcast&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">experimental::PostOpEltwiseAdd&lt;PostOpArgBroadcast&gt;</a>&gt;(</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        std::make_tuple(<span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">true</span>),   <span class="comment">// If broadcast in dims 0, 1 and 2</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        1,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_act.xhtml">experimental::PostOpAct&lt;PostOpArgBroadcast&gt;</a>&gt;(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>, 2.1F, 1.3F});</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;PostOpArgBroadcast&gt;</a> post_ops_3()</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;PostOpArgBroadcast&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="comment">// post_ops.push_back_op&lt;experimental::PostOpAct&lt;PostOpArgBroadcast&gt;&gt;(ActivationLayerInfo{ActivationLayerInfo::ActivationFunction::RELU, 2.1F, 1.3F});</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">experimental::PostOpEltwiseAdd&lt;PostOpArgBroadcast&gt;</a>&gt;(</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        std::make_tuple(<span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>),  <span class="comment">// If broadcast in dims 0, 1 and 2</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        1,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">// To test that the output of the main op is the first parameter in prelu post op</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;PostOpArgBroadcast&gt;</a> post_ops_4()</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;{</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;PostOpArgBroadcast&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_act.xhtml">experimental::PostOpAct&lt;PostOpArgBroadcast&gt;</a>&gt;(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046">ActivationLayerInfo::ActivationFunction::LINEAR</a>, 0.5F, 0.0F});</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_p_relu.xhtml">experimental::PostOpEltwisePRelu&lt;PostOpArgBroadcast&gt;</a>&gt;(</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        std::make_tuple(<span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">true</span>),   <span class="comment">// If true, broadcast in corresponding dim: 0, 1 or 2</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        0,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_act.xhtml">experimental::PostOpAct&lt;PostOpArgBroadcast&gt;</a>&gt;(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>, 2.1F, 1.3F});</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">// To test that the output of the main op is the second parameter in prelu post op i.e. it is the alpha_param</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;PostOpArgBroadcast&gt;</a> post_ops_5()</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;{</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;PostOpArgBroadcast&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_act.xhtml">experimental::PostOpAct&lt;PostOpArgBroadcast&gt;</a>&gt;(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046">ActivationLayerInfo::ActivationFunction::LINEAR</a>, 0.5F, 0.0F});</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_p_relu.xhtml">experimental::PostOpEltwisePRelu&lt;PostOpArgBroadcast&gt;</a>&gt;(</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        std::make_tuple(<span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>),   <span class="comment">// If true, broadcast in corresponding dim: 0, 1 or 2</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        1,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_act.xhtml">experimental::PostOpAct&lt;PostOpArgBroadcast&gt;</a>&gt;(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>{<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>, 2.1F, 1.3F});</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}<span class="comment"></span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">/** Different Post Op Lists */</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keyword">const</span> <span class="keyword">auto</span> post_op_lists = <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;post_op_lists&quot;</span>, {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    post_ops_1(),</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    post_ops_2(),</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    post_ops_3(),</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    post_ops_4(),</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    post_ops_5()</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; } );</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordtype">bool</span> is_post_op_list_valid(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;ITensorInfo*&gt;</a>&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;{</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9f9ebacf4b044525b8cfefbc8795a9cc">lhs_info</a> = <a class="code" href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml">GEMMLHSMatrixInfo</a>(4,4,1,<span class="keyword">false</span>,<span class="keyword">true</span>);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a226889ea88d5691bdcbfba8243ed96b4">rhs_info</a> = <a class="code" href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml">GEMMRHSMatrixInfo</a>(4,4,1,<span class="keyword">true</span>,<span class="keyword">true</span>,<span class="keyword">false</span>);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="comment">// Create TensorInfo for post op arguments</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac144ed206d6acabd65cb87ee3d8bd2d3">input0_info</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(k, m, batch), 1, data_type);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f334d02ed8e75a635b186f01ba8e69">input1_info</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(n, k, batch), 1, data_type);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae4cee3f5e7f05fd98ef454c1d2ef5a46">input2_info</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(n), 1, data_type);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25cae7166733a51d1354f3f395652782">output_info</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(n, m, batch), 1, data_type);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml">GEMMKernelInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>(m, n, k, 0 <span class="comment">/**&lt; Depth of the output tensor in case is reinterpreted as 3D */</span>,</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;             <span class="keyword">false</span> <span class="comment">/**&lt; reinterpret the input as 3D */</span>,</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;             <span class="keyword">true</span>  <span class="comment">/**&lt; Flag used to broadcast the bias addition */</span>,</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;             <span class="keyword">false</span> <span class="comment">/**&lt; wider accumm */</span>,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;             <span class="keyword">false</span> <span class="comment">/**&lt; has pad y */</span>,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;           <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b">ActivationLayerInfo::ActivationFunction::IDENTITY</a>,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;             1   <span class="comment">/**&lt; Multiplication factor for the width of the 1xW transposed block */</span>,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;             1   <span class="comment">/**&lt; Multiplication factor for the height of the 4x4 interleaved block */</span>,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;             <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9f9ebacf4b044525b8cfefbc8795a9cc">lhs_info</a>,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;             <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a226889ea88d5691bdcbfba8243ed96b4">rhs_info</a>,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;             0  <span class="comment">/**&lt; Offset to be added to each element of the matrix A */</span>,</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;             0 <span class="comment">/**&lt; Offset to be added to each element of the matrix B */</span>,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;             post_ops);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keywordflow">return</span> bool(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_native_kernel.xhtml#a25b570ae9f7b5ac05f0c0ac27e3b86e3">ClGemmMatrixMultiplyNativeKernel::validate</a>(&amp;input0_info.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#afbc359bde9be72a6edab175978e56662">clone</a>()-&gt;set_is_resizable(<span class="keyword">true</span>),</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                                                          &amp;input1_info.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#afbc359bde9be72a6edab175978e56662">clone</a>()-&gt;set_is_resizable(<span class="keyword">true</span>),</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                                                          &amp;input2_info.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#afbc359bde9be72a6edab175978e56662">clone</a>()-&gt;set_is_resizable(<span class="keyword">true</span>),</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                                          &amp;output_info.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#afbc359bde9be72a6edab175978e56662">clone</a>()-&gt;set_is_resizable(<span class="keyword">true</span>),1.f,1.f,</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                                                          <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9f9ebacf4b044525b8cfefbc8795a9cc">lhs_info</a>,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                                                          <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a226889ea88d5691bdcbfba8243ed96b4">rhs_info</a>,</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                                                          <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">gemm_info</a>));</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;}</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">/** Configuration test */</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keywordtype">void</span> validate_configuration(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace7fb89653b30b411529cb0f84028c20">m_value</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace392e14f6f0148a565774535491bdd8">n_value</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acd41307aa18a9cb5100eeb72219dbd38">k_value</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a22cfc6948997672855a2ee16e45cef71">b_value</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aceda8c228bbcc0e305cc66b0c24f433d">m0_value</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaa3e12dad9db2e8b0789060f795c0471">n0_value</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2f1eccdb6a9f54d08868ca08cdc6d4a8">k0_value</a>, <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af964802a181e4f401a7a38950bdefb24">broadcast_bias</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;{</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a68dc0bf731afd0463b8e8cc4ed81c0f8">M</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace7fb89653b30b411529cb0f84028c20">m_value</a>;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace392e14f6f0148a565774535491bdd8">n_value</a>;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a42247993f81d6a8f73d2e0cb805c663b">K</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acd41307aa18a9cb5100eeb72219dbd38">k_value</a>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml">GEMMLHSMatrixInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9f9ebacf4b044525b8cfefbc8795a9cc">lhs_info</a>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    lhs_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml#a41618231c7d7b990c42fe6846b4dde27">m0</a>         = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aceda8c228bbcc0e305cc66b0c24f433d">m0_value</a>;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    lhs_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml#a9bca3aa421b5fa7c07b0aa751b39b25f">k0</a>         = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2f1eccdb6a9f54d08868ca08cdc6d4a8">k0_value</a>;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml">GEMMRHSMatrixInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a226889ea88d5691bdcbfba8243ed96b4">rhs_info</a>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    rhs_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml#ac0c87b58d0d04796c81d8138231dccda">n0</a>         = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaa3e12dad9db2e8b0789060f795c0471">n0_value</a>;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    rhs_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml#a9bca3aa421b5fa7c07b0aa751b39b25f">k0</a>         = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2f1eccdb6a9f54d08868ca08cdc6d4a8">k0_value</a>;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml">GEMMKernelInfo</a> kernel_info;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    kernel_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a4033037df26775dd60840e66d38a08ba">m</a>               = <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a68dc0bf731afd0463b8e8cc4ed81c0f8">M</a>;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    kernel_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a7d46b74409bd32b539089ef4721ea544">n</a>               = <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    kernel_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a90e096a39cfc6da042e02d27a346f2d3">k</a>               = <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a42247993f81d6a8f73d2e0cb805c663b">K</a>;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    kernel_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#aab96468aedb59e7a2a19c6eea2f4b055">broadcast_bias</a>  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af964802a181e4f401a7a38950bdefb24">broadcast_bias</a>;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    kernel_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a> = act_info;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> lhs_shape(K, M, b_value);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> rhs_shape(N, K, b_value);</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a79820c7442073b8eb22fb3eaef6fd6ba">bias_shape</a>(N,</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                 broadcast_bias? 1 : M,</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                                 broadcast_bias? 1 : b_value);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a> = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#adca241b012a5e00ddfcdc5a8db05a2a3">compute_mm_shape</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(lhs_shape, 1, data_type),</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                                                   <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(rhs_shape, 1, data_type),</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                                   kernel_info);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="comment">// Create tensors</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> lhs  = create_tensor&lt;CLTensor&gt;(lhs_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> rhs  = create_tensor&lt;CLTensor&gt;(rhs_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a> = create_tensor&lt;CLTensor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a79820c7442073b8eb22fb3eaef6fd6ba">bias_shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>  = create_tensor&lt;CLTensor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(lhs.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">is_resizable</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(rhs.info()-&gt;is_resizable(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(bias.info()-&gt;is_resizable(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(dst.info()-&gt;is_resizable(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="comment">// Create and configure function</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml">CLGEMMMatrixMultiplyNative</a> <a class="code" href="namespacearm__gemm.xhtml#ad851e586ace898ed415d2377c8b2e85b">gemm</a>;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    gemm.configure(lhs.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>(), rhs.info(), bias.info(), dst.info(), 1.0f, 1.0f, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9f9ebacf4b044525b8cfefbc8795a9cc">lhs_info</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a226889ea88d5691bdcbfba8243ed96b4">rhs_info</a>, kernel_info);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">TEST_SUITE</a>(<a class="code" href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9a5bc574a47246f122016869b32a6aa6f0">CL</a>)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">TEST_SUITE</a>(GEMMMatrixMultiplyNative)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">TEST_SUITE</a>(ValidateFusedPostOpsConfigs)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">TEST_SUITE</a>(Invalid)</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(UnsupportedPostOpSequence, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;{</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a> = 17;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> = 1;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a> = 13;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> = 2;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> post_op_arg0_shape(n, m, batch);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> post_op_arg_info(post_op_arg0_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keyword">auto</span> post_op_arg1_info = post_op_arg_info.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#afbc359bde9be72a6edab175978e56662">clone</a>();</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="comment">// Unsupported sequence of post ops</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;ITensorInfo*&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">experimental::PostOpEltwiseAdd&lt;ITensorInfo*&gt;</a>&gt;(</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        &amp;post_op_arg_info,</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        1,</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">experimental::PostOpEltwiseAdd&lt;ITensorInfo*&gt;</a>&gt;(</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        post_op_arg1_info.get(),</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        0,</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(is_post_op_list_valid(m, n, k, batch, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>) == <span class="keyword">false</span>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;}</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa1dfd744a995530bdbb8a0d44caaff30">  324</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(OutputWidened, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;{</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="comment">// Invalid broadcast: post op tensors &quot;widen&quot; the output tensor</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a> = 1;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> = 18;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a> = 13;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> = 2;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> post_op_arg_shape(n, m + 1, batch); <span class="comment">// output&#39;s Y dimension (m) is &quot;widened&quot;, which is not allowed</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> post_op_arg_info(post_op_arg_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;ITensorInfo*&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">experimental::PostOpEltwiseAdd&lt;ITensorInfo*&gt;</a>&gt;( &amp;post_op_arg_info, 0, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(is_post_op_list_valid(m, n, k, batch, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>) == <span class="keyword">false</span>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5fa7f10905022af063da7a1e41b18761">  339</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(BroadcastInXDimOnly, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;{</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="comment">// Invalid broadcast: post op tensors broadcast in the first dimension (X) only</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a> = 22;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> = 16;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a> = 15;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> = 3;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> post_op_arg_shape(1, m, batch);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> post_op_arg_info(post_op_arg_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;ITensorInfo*&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">experimental::PostOpEltwiseAdd&lt;ITensorInfo*&gt;</a>&gt;( &amp;post_op_arg_info, 0, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(is_post_op_list_valid(m, n, k, batch, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>) == <span class="keyword">false</span>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;}</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// Invalid</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">TEST_SUITE</a>(Valid)</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(EmptyPostOpList, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;{</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00359"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">  359</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a> = 22;</div><div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">  360</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> = 16;</div><div class="line"><a name="l00361"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">  361</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a> = 15;</div><div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">  362</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> = 3;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;ITensorInfo*&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(is_post_op_list_valid(m, n, k, batch, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>) == <span class="keyword">true</span>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;}</div><div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1684181e55d770e61044b5d4edb22dd">  367</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(BroadcastInYDimOnly, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;{</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a> = 22;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> = 16;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a> = 15;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> = 3;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> post_op_arg_shape(n, 1, batch);</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> post_op_arg_info(post_op_arg_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;ITensorInfo*&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">experimental::PostOpEltwiseAdd&lt;ITensorInfo*&gt;</a>&gt;( &amp;post_op_arg_info, 0, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(is_post_op_list_valid(m, n, k, batch, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>) == <span class="keyword">true</span>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;}</div><div class="line"><a name="l00381"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a39619ec987a245ee2ce2b34c9222431f">  381</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(BroadcastInBothXandYDims, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;{</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a> = 22;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> = 16;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a> = 15;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> = 3;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> post_op_arg_shape(1, 1, batch);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> post_op_arg_info(post_op_arg_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;ITensorInfo*&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">experimental::PostOpEltwiseAdd&lt;ITensorInfo*&gt;</a>&gt;( &amp;post_op_arg_info, 0, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(is_post_op_list_valid(m, n, k, batch, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>) == <span class="keyword">true</span>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;}</div><div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a427f60747127756273c6d78ab56af236">  395</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(BroadcastInAllDims, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;{</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a> = 22;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> = 16;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a> = 15;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a> = 3;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> post_op_arg_shape(1, 1, 1);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> post_op_arg_info(post_op_arg_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList&lt;ITensorInfo*&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>{};</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>.push_back_op&lt;<a class="code" href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">experimental::PostOpEltwiseAdd&lt;ITensorInfo*&gt;</a>&gt;( &amp;post_op_arg_info, 0, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(is_post_op_list_valid(m, n, k, batch, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a>) == <span class="keyword">true</span>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;}</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// Valid</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// ValidateFusedPostOps</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">TEST_SUITE</a>(Float)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">TEST_SUITE</a>(FP32)</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a146990bdb7bc1df6e90e6dca4eaa764c">DATA_TEST_CASE</a>(Configuration, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                                                                   m_values,</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                                                                   n_values),</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                                                                   k_values),</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                                                                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;batch_size&quot;</span>, 1)),</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                                                                   m0_values_precommit),</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                                                   n0_values_precommit),</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                                                                   k0_values_precommit),</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                                                   broadcast_bias_values),</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                                                   act_values),</div><div class="line"><a name="l00423"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace392e14f6f0148a565774535491bdd8">  423</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace7fb89653b30b411529cb0f84028c20">m_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace392e14f6f0148a565774535491bdd8">n_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acd41307aa18a9cb5100eeb72219dbd38">k_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a22cfc6948997672855a2ee16e45cef71">b_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aceda8c228bbcc0e305cc66b0c24f433d">m0_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaa3e12dad9db2e8b0789060f795c0471">n0_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2f1eccdb6a9f54d08868ca08cdc6d4a8">k0_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af964802a181e4f401a7a38950bdefb24">broadcast_bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0c83c1ecb560e0541b792eaaf3d739b5">act_value</a>)</div><div class="line"><a name="l00424"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0c83c1ecb560e0541b792eaaf3d739b5">  424</a></span>&#160;{</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    validate_configuration(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace7fb89653b30b411529cb0f84028c20">m_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace392e14f6f0148a565774535491bdd8">n_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acd41307aa18a9cb5100eeb72219dbd38">k_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a22cfc6948997672855a2ee16e45cef71">b_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aceda8c228bbcc0e305cc66b0c24f433d">m0_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaa3e12dad9db2e8b0789060f795c0471">n0_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2f1eccdb6a9f54d08868ca08cdc6d4a8">k0_value</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af964802a181e4f401a7a38950bdefb24">broadcast_bias</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0c83c1ecb560e0541b792eaaf3d739b5">act_value</a>);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;}</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5c1759e028c8eb6ce4d8172f20a12889">  428</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac95a886daa65a1813ffe9498074d2f39">FIXTURE_DATA_TEST_CASE</a>(RunSmallBoundaryHandlingPartialInXPartialInY, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4793952e8a68280d40a8a970963bdc0b">CLGEMMMatrixMultiplyNativeFixture&lt;float&gt;</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>,</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;M&quot;</span>, 3),</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;N&quot;</span>, 1)),</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                        boundary_handling_cases))</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;{</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="comment">// Validate output</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(_target), _reference, rel_tolerance_f32, 0.f, <a class="code" href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a>);</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;}</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6179a2b5a029036dba64cd070f798ad5">  438</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac95a886daa65a1813ffe9498074d2f39">FIXTURE_DATA_TEST_CASE</a>(RunSmallBoundaryHandlingPartialInXFullInY, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4793952e8a68280d40a8a970963bdc0b">CLGEMMMatrixMultiplyNativeFixture&lt;float&gt;</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>,</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;M&quot;</span>, 64),</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;N&quot;</span>, 51)),</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                        boundary_handling_cases))</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;{</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="comment">// Validate output</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(_target), _reference, rel_tolerance_f32, 0.f, <a class="code" href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a>);</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;}</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a791f75ad34b2ae375f698935c0ce14f6">  448</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac95a886daa65a1813ffe9498074d2f39">FIXTURE_DATA_TEST_CASE</a>(RunSmallBoundaryHandlingFullInXFullInY, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4793952e8a68280d40a8a970963bdc0b">CLGEMMMatrixMultiplyNativeFixture&lt;float&gt;</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>,</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;M&quot;</span>, 64),</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;N&quot;</span>, 32)),</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                        boundary_handling_cases))</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;{</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="comment">// Validate output</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(_target), _reference, rel_tolerance_f32, 0.f, <a class="code" href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a>);</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;}</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a483935a167630bbdb2e073dfc33657ac">  458</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac95a886daa65a1813ffe9498074d2f39">FIXTURE_DATA_TEST_CASE</a>(RunSmallBoundaryHandlingFullInXPartialInY, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4793952e8a68280d40a8a970963bdc0b">CLGEMMMatrixMultiplyNativeFixture&lt;float&gt;</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>,</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;M&quot;</span>, 37),</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;N&quot;</span>, 32)),</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                        boundary_handling_cases))</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;{</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="comment">// Validate output</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(_target), _reference, rel_tolerance_f32, 0.f, <a class="code" href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a>);</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;}</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cb628d5163afe421549c3e720cdaab7">  468</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac95a886daa65a1813ffe9498074d2f39">FIXTURE_DATA_TEST_CASE</a>(RunSmall, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4793952e8a68280d40a8a970963bdc0b">CLGEMMMatrixMultiplyNativeFixture&lt;float&gt;</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>,</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                                                                   m_values,</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                                                                   n_values),</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                                                                   k_values),</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                                                                   b_values),</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                                                                   m0_values_precommit),</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                                                                   n0_values_precommit),</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                                                                   k0_values_precommit),</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                                                                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)),</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                                                   a_values),</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                                                                   beta_values),</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                                                                   broadcast_bias_values),</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                                                                   act_values))</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;{</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="comment">// Validate output</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(_target), _reference, rel_tolerance_f32, 0.f, <a class="code" href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a>);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;}</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a44ab1fd2f879b3b6de09ae80e16ba80d">  487</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac95a886daa65a1813ffe9498074d2f39">FIXTURE_DATA_TEST_CASE</a>(RunLarge, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4793952e8a68280d40a8a970963bdc0b">CLGEMMMatrixMultiplyNativeFixture&lt;float&gt;</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b">framework::DatasetMode::DISABLED</a>,</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                                                                   m_values,</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                                                                   n_values),</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                                                   k_values),</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                                                                   b_values),</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                                                                   m0_values_nightly),</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                                                                   n0_values_nightly),</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                                                                   k0_values_nightly),</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                                                                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)),</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                                                                   a_values),</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                                                                   beta_values),</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                                                                   broadcast_bias_values),</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                                                                   act_values))</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;{</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="comment">// Validate output</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(_target), _reference, rel_tolerance_f32, 0.f, <a class="code" href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a>);</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;}</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8a122e8b3e9b9fa40074790641304d04">  506</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac95a886daa65a1813ffe9498074d2f39">FIXTURE_DATA_TEST_CASE</a>(RunSmall3D, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0945cf440bbfbc3f45b026783e7dd8ca">CLGEMMMatrixMultiplyNative3DFixture&lt;float&gt;</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>,</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                                                                   m_w_values,</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                                                                   m_h_values),</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                                                                   n_values),</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                                                                   k_values),</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                                                                   b_values),</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                                                                   m0_values_precommit),</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                                                                   n0_values_precommit),</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                                                                   k0_values_precommit),</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                                                                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)),</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                                                                   a_values),</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                                                                   beta_values),</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                                                                   act_values))</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;{</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="comment">// Validate output</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(_target), _reference, rel_tolerance_f32, 0.f, <a class="code" href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a>);</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;}</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae554e6f9e7495eedecaac2e1ff3fc0cd">  525</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac95a886daa65a1813ffe9498074d2f39">FIXTURE_DATA_TEST_CASE</a>(RunLarge3D, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0945cf440bbfbc3f45b026783e7dd8ca">CLGEMMMatrixMultiplyNative3DFixture&lt;float&gt;</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b">framework::DatasetMode::DISABLED</a>,</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                                                                   m_w_values,</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                                                                   m_h_values),</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                                                                   n_values),</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                                                                   k_values),</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                                                                   b_values),</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                                                                   m0_values_nightly),</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                                                                   n0_values_nightly),</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                                                                   k0_values_nightly),</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                                                                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)),</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                                                                   a_values),</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                                                                   beta_values),</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                                                                   act_values))</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;{</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <span class="comment">// Validate output</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(_target), _reference, rel_tolerance_f32, 0.f, <a class="code" href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a>);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;}</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">TEST_SUITE</a>(FusedPostOps)</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae6496283285f117ed83bd0e69fc4d183">  546</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac95a886daa65a1813ffe9498074d2f39">FIXTURE_DATA_TEST_CASE</a>(RunSmall, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae636fb992e2eb369abdc56b3ffbd401e">CLGEMMMatrixMultiplyNativeWithPostOpsFixture</a>&lt;<span class="keywordtype">float</span>&gt;, framework::<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>::ALL,</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">combine</a>(</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                                                                   m_values,</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                                                                   n_values),</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                                                                   k_values),</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                                                                   b_values),</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                                                                   framework::dataset::<a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">make</a>(&quot;M0&quot;, { 4 })),</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                                                                   n0_values_precommit),</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                                                                   k0_values_precommit),</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                                                                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)),</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                                                                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;alpha&quot;</span>, {1.0f} )),</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                                                                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;beta&quot;</span>, {1.0f} )),</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                                                                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;broadcast_bias&quot;</span>, { <span class="keyword">false</span>, <span class="keyword">true</span> } )),</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                                                                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Activation&quot;</span>, { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>() })),</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                                                                   post_op_lists)</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                                                                   )</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;{</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <span class="comment">// Validate output</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(_target), _reference, rel_tolerance_f32, 0.f, <a class="code" href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a>);</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;}</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">//  FusedPostOps</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// FP32</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// Float</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// GEMMMatrixMulipltyNative</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// CL</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;} <span class="comment">// namespace validation</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ae4cee3f5e7f05fd98ef454c1d2ef5a46"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae4cee3f5e7f05fd98ef454c1d2ef5a46">arm_compute::test::validation::input2_info</a></div><div class="ttdeci">input2_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00862">GEMMMatrixMultiplyReshaped.cpp:862</a></div></div>
<div class="ttc" id="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_native_kernel_xhtml_a25b570ae9f7b5ac05f0c0ac27e3b86e3"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_native_kernel.xhtml#a25b570ae9f7b5ac05f0c0ac27e3b86e3">arm_compute::opencl::kernels::ClGemmMatrixMultiplyNativeKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *src2, const ITensorInfo *dst, float alpha, float beta, const GEMMLHSMatrixInfo &amp;lhs_info, const GEMMRHSMatrixInfo &amp;rhs_info, const GEMMKernelInfo &amp;gemm_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_matrix_multiply_native_kernel_8cpp_source.xhtml#l00348">ClGemmMatrixMultiplyNativeKernel.cpp:348</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_aab96468aedb59e7a2a19c6eea2f4b055"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#aab96468aedb59e7a2a19c6eea2f4b055">arm_compute::GEMMKernelInfo::broadcast_bias</a></div><div class="ttdeci">bool broadcast_bias</div><div class="ttdoc">Flag used to broadcast the bias addition. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00089">KernelDescriptors.h:89</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ace392e14f6f0148a565774535491bdd8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ace392e14f6f0148a565774535491bdd8">arm_compute::test::validation::n_value</a></div><div class="ttdeci">n_value</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00423">GEMMMatrixMultiplyNative.cpp:423</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1_post_op_eltwise_add_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_post_op_eltwise_add.xhtml">arm_compute::experimental::PostOpEltwiseAdd</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00080">PostOps.h:80</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8cd3187b8cbe01fb39012663c3f93aa5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">arm_compute::test::validation::post_ops</a></div><div class="ttdeci">experimental::PostOpList&lt; ITensorInfo * &gt; post_ops</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00410">ConvolutionLayer.cpp:410</a></div></div>
<div class="ttc" id="_cl_gemm_matrix_multiply_native_kernel_8h_xhtml"><div class="ttname"><a href="_cl_gemm_matrix_multiply_native_kernel_8h.xhtml">ClGemmMatrixMultiplyNativeKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_afbc359bde9be72a6edab175978e56662"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#afbc359bde9be72a6edab175978e56662">arm_compute::TensorInfo::clone</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorInfo &gt; clone() const override</div><div class="ttdoc">Provide a clone of the current object of class T. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_tensor_info_8cpp_source.xhtml#l00302">TensorInfo.cpp:302</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml_ad45f0c01a0713dfb6bd7232c7f396fc4"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">arm_compute::CLTensor::info</a></div><div class="ttdeci">TensorInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00041">CLTensor.cpp:41</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml">arm_compute::GEMMKernelInfo</a></div><div class="ttdoc">Descriptor used by the GEMM kernels. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00058">KernelDescriptors.h:58</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_aaee6555ace43b03173844b1a228a3fc3"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">arm_compute::TensorInfo::is_resizable</a></div><div class="ttdeci">bool is_resizable() const override</div><div class="ttdoc">Flag indicating whether the size of the tensor can be changed. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00262">TensorInfo.h:262</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a96f334d02ed8e75a635b186f01ba8e69"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f334d02ed8e75a635b186f01ba8e69">arm_compute::test::validation::input1_info</a></div><div class="ttdeci">input1_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00862">GEMMMatrixMultiplyReshaped.cpp:862</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">arm_compute::ActivationLayerInfo::ActivationFunction::RELU</a></div><div class="ttdoc">Rectifier (  ) </div></div>
<div class="ttc" id="_padding_calculator_8h_xhtml"><div class="ttname"><a href="_padding_calculator_8h.xhtml">PaddingCalculator.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af22d91f65b56b795fd28f3b302cd3ad2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">arm_compute::test::validation::dst_shape</a></div><div class="ttdeci">TensorShape dst_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00164">DFT.cpp:164</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac144ed206d6acabd65cb87ee3d8bd2d3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac144ed206d6acabd65cb87ee3d8bd2d3">arm_compute::test::validation::input0_info</a></div><div class="ttdeci">input0_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00862">GEMMMatrixMultiplyReshaped.cpp:862</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_adca241b012a5e00ddfcdc5a8db05a2a3"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#adca241b012a5e00ddfcdc5a8db05a2a3">arm_compute::misc::shape_calculator::compute_mm_shape</a></div><div class="ttdeci">TensorShape compute_mm_shape(const ITensorInfo &amp;input0, const ITensorInfo &amp;input1, bool is_interleaved_transposed, const GEMMReshapeInfo &amp;reshape_info)</div><div class="ttdoc">Calculate the matrix multiplication output shape of two tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00876">ShapeCalculator.h:876</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a3c8562a1f05d23f44aed87545b7892cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">arm_compute::test::validation::ARM_COMPUTE_EXPECT</a></div><div class="ttdeci">ARM_COMPUTE_EXPECT(has_error==expected, framework::LogLevel::ERRORS)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a25cae7166733a51d1354f3f395652782"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a25cae7166733a51d1354f3f395652782">arm_compute::test::validation::output_info</a></div><div class="ttdeci">output_info</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_c_l_2fft_8cpp_source.xhtml#l00145">FFT.cpp:145</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml">arm_compute::GEMMLHSMatrixInfo</a></div><div class="ttdoc">GEMM LHS (Left Hand Side) matrix information. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02303">Types.h:2303</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset. </div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00160">ContainerDataset.h:160</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad258d4c51629346fceac4679b3209ad9a5bc574a47246f122016869b32a6aa6f0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9a5bc574a47246f122016869b32a6aa6f0">arm_compute::DeviceType::CL</a></div></div>
<div class="ttc" id="_cpu_gemm_assembly_dispatch_8cpp_xhtml_a68dc0bf731afd0463b8e8cc4ed81c0f8"><div class="ttname"><a href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a68dc0bf731afd0463b8e8cc4ed81c0f8">M</a></div><div class="ttdeci">unsigned int M</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00055">CpuGemmAssemblyDispatch.cpp:55</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4793952e8a68280d40a8a970963bdc0b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4793952e8a68280d40a8a970963bdc0b">arm_compute::test::validation::CLGEMMMatrixMultiplyNativeFixture</a></div><div class="ttdeci">GEMMMatrixMultiplyNativeValidationFixture&lt; CLTensor, CLAccessor, T, CLGEMMMatrixMultiplyNative &gt; CLGEMMMatrixMultiplyNativeFixture</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00054">GEMMMatrixMultiplyNative.cpp:54</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_ad5f55d98fbe268b4eb6225aca14a2403"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">arm_compute::GEMMKernelInfo::activation_info</a></div><div class="ttdeci">ActivationLayerInfo activation_info</div><div class="ttdoc">Activation function to perform after the matrix multiplication. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00092">KernelDescriptors.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01639">Types.h:1639</a></div></div>
<div class="ttc" id="_c_l_accessor_8h_xhtml"><div class="ttname"><a href="_c_l_accessor_8h.xhtml">CLAccessor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a79820c7442073b8eb22fb3eaef6fd6ba"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a79820c7442073b8eb22fb3eaef6fd6ba">arm_compute::test::validation::bias_shape</a></div><div class="ttdeci">TensorShape bias_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00470">LSTMLayerQuantized.cpp:470</a></div></div>
<div class="ttc" id="_c_l_tensor_allocator_8h_xhtml"><div class="ttname"><a href="_c_l_tensor_allocator_8h.xhtml">CLTensorAllocator.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info_xhtml_a9bca3aa421b5fa7c07b0aa751b39b25f"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml#a9bca3aa421b5fa7c07b0aa751b39b25f">arm_compute::GEMMRHSMatrixInfo::k0</a></div><div class="ttdeci">unsigned int k0</div><div class="ttdoc">Number of partial accumulations performed by the matrix multiplication. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02326">Types.h:2326</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_a4033037df26775dd60840e66d38a08ba"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a4033037df26775dd60840e66d38a08ba">arm_compute::GEMMKernelInfo::m</a></div><div class="ttdeci">unsigned int m</div><div class="ttdoc">Number of LHS rows. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00084">KernelDescriptors.h:84</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a146990bdb7bc1df6e90e6dca4eaa764c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a146990bdb7bc1df6e90e6dca4eaa764c">arm_compute::test::validation::DATA_TEST_CASE</a></div><div class="ttdeci">DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::SQRT), })), framework::dataset::make(&quot;Expected&quot;, { false, true, true, true, false, false, true, true, false })), input_info, output_info, act_info, expected)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_activation_layer_8cpp_source.xhtml#l00100">ActivationLayer.cpp:100</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_a7d46b74409bd32b539089ef4721ea544"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a7d46b74409bd32b539089ef4721ea544">arm_compute::GEMMKernelInfo::n</a></div><div class="ttdeci">unsigned int n</div><div class="ttdoc">Number of RHS columns. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00085">KernelDescriptors.h:85</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1_post_op_eltwise_p_relu_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_post_op_eltwise_p_relu.xhtml">arm_compute::experimental::PostOpEltwisePRelu</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00121">PostOps.h:121</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes. </div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a2f1eccdb6a9f54d08868ca08cdc6d4a8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a2f1eccdb6a9f54d08868ca08cdc6d4a8">arm_compute::test::validation::k0_value</a></div><div class="ttdeci">k0_value</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00423">GEMMMatrixMultiplyNative.cpp:423</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa5b44c930bf0ddeef48b50ef11e5ddd58"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa5b44c930bf0ddeef48b50ef11e5ddd58">arm_compute::ActivationLayerInfo::ActivationFunction::ELU</a></div><div class="ttdoc">Exponential Linear Unit (  ) </div></div>
<div class="ttc" id="_datasets_8h_xhtml"><div class="ttname"><a href="_datasets_8h.xhtml">Datasets.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml">arm_compute::GEMMRHSMatrixInfo</a></div><div class="ttdoc">GEMM RHS (Right Hand Side) matrix information. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02318">Types.h:2318</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a512eb649fdb115f2dee5df9f1d156b16"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">arm_compute::test::validation::TEST_SUITE_END</a></div><div class="ttdeci">TEST_SUITE_END() FIXTURE_DATA_TEST_CASE(RunSmall</div><div class="ttdoc">[CLActivationLayer Test snippet] </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_dequantization_layer_8cpp_source.xhtml#l00111">DequantizationLayer.cpp:111</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a9f9ebacf4b044525b8cfefbc8795a9cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a9f9ebacf4b044525b8cfefbc8795a9cc">arm_compute::test::validation::lhs_info</a></div><div class="ttdeci">lhs_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00862">GEMMMatrixMultiplyReshaped.cpp:862</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info_xhtml_ac0c87b58d0d04796c81d8138231dccda"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml#ac0c87b58d0d04796c81d8138231dccda">arm_compute::GEMMRHSMatrixInfo::n0</a></div><div class="ttdeci">unsigned int n0</div><div class="ttdoc">Number of columns processed by the matrix multiplication. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02325">Types.h:2325</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_c_l_accessor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">arm_compute::test::CLAccessor</a></div><div class="ttdoc">Accessor implementation for CLTensor objects. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_accessor_8h_source.xhtml#l00036">CLAccessor.h:36</a></div></div>
<div class="ttc" id="_cpu_gemm_assembly_dispatch_8cpp_xhtml_ae8b170dcb376fe60270f4675f84e4477"><div class="ttname"><a href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a></div><div class="ttdeci">unsigned int N</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00056">CpuGemmAssemblyDispatch.cpp:56</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ae636fb992e2eb369abdc56b3ffbd401e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae636fb992e2eb369abdc56b3ffbd401e">arm_compute::test::validation::CLGEMMMatrixMultiplyNativeWithPostOpsFixture</a></div><div class="ttdeci">GEMMMatrixMultiplyNativeWithPostOpsValidationFixture&lt; CLTensor, CLAccessor, T, CLGEMMMatrixMultiplyNative &gt; CLGEMMMatrixMultiplyNativeWithPostOpsFixture</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00059">GEMMMatrixMultiplyNative.cpp:59</a></div></div>
<div class="ttc" id="_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a975901e0b4d6e387107c4d785c22edd5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">arm_compute::test::validation::validate</a></div><div class="ttdeci">validate(CLAccessor(output_state), expected_output)</div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_ad851e586ace898ed415d2377c8b2e85b"><div class="ttname"><a href="namespacearm__gemm.xhtml#ad851e586ace898ed415d2377c8b2e85b">arm_gemm::gemm</a></div><div class="ttdeci">UniqueGemmCommon&lt; Top, Tret &gt; gemm(const GemmArgs &amp;args, const OutputStage &amp;os)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__implementation_8hpp_source.xhtml#l00318">gemm_implementation.hpp:318</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_c_l_synthetize_operator_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml">arm_compute::test::CLSynthetizeOperator&lt; ClGemmMatrixMultiplyNativeKernel &gt;</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a22cfc6948997672855a2ee16e45cef71"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a22cfc6948997672855a2ee16e45cef71">arm_compute::test::validation::b_value</a></div><div class="ttdeci">b_value</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00423">GEMMMatrixMultiplyNative.cpp:423</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af964802a181e4f401a7a38950bdefb24"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af964802a181e4f401a7a38950bdefb24">arm_compute::test::validation::broadcast_bias</a></div><div class="ttdeci">broadcast_bias</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00423">GEMMMatrixMultiplyNative.cpp:423</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa08a9b7cf30c1c3e56ca1d2060313408"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa08a9b7cf30c1c3e56ca1d2060313408">arm_compute::test::validation::gemm_info</a></div><div class="ttdeci">gemm_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00862">GEMMMatrixMultiplyReshaped.cpp:862</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a73aa59d7b088082ec257a1c65edbf1d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">arm_compute::test::validation::k</a></div><div class="ttdeci">const unsigned int k</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">GEMMMatrixMultiplyNative.cpp:361</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">arm_compute::ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a></div><div class="ttdoc">Lower and Upper Bounded Rectifier (  ) </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac95a886daa65a1813ffe9498074d2f39"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac95a886daa65a1813ffe9498074d2f39">arm_compute::test::validation::FIXTURE_DATA_TEST_CASE</a></div><div class="ttdeci">FIXTURE_DATA_TEST_CASE(RunSmall, CLAbsLayerFixture&lt; half &gt;, framework::DatasetMode::PRECOMMIT, combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::F16)))</div><div class="ttdef"><b>Definition:</b> <a href="_abs_layer_8cpp_source.xhtml#l00050">AbsLayer.cpp:50</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acd41307aa18a9cb5100eeb72219dbd38"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acd41307aa18a9cb5100eeb72219dbd38">arm_compute::test::validation::k_value</a></div><div class="ttdeci">k_value</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00423">GEMMMatrixMultiplyNative.cpp:423</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b">arm_compute::test::framework::DatasetMode::DISABLED</a></div></div>
<div class="ttc" id="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h.xhtml">CLTensor.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b">arm_compute::ActivationLayerInfo::ActivationFunction::IDENTITY</a></div><div class="ttdoc">Identity (  ) </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aceda8c228bbcc0e305cc66b0c24f433d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aceda8c228bbcc0e305cc66b0c24f433d">arm_compute::test::validation::m0_value</a></div><div class="ttdeci">m0_value</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00423">GEMMMatrixMultiplyNative.cpp:423</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">arm_compute::test::validation::RelativeTolerance</a></div><div class="ttdoc">Class reprensenting a relative tolerance value. </div><div class="ttdef"><b>Definition:</b> <a href="_validation_8h_source.xhtml#l00097">Validation.h:97</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046">arm_compute::ActivationLayerInfo::ActivationFunction::LINEAR</a></div><div class="ttdoc">Linear (  ) </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a226889ea88d5691bdcbfba8243ed96b4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a226889ea88d5691bdcbfba8243ed96b4">arm_compute::test::validation::rhs_info</a></div><div class="ttdeci">rhs_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00862">GEMMMatrixMultiplyReshaped.cpp:862</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a59c0fe7170dec3dfc80b80a33fc48955"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">arm_compute::test::validation::batch</a></div><div class="ttdeci">const unsigned int batch</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00362">GEMMMatrixMultiplyNative.cpp:362</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_a90e096a39cfc6da042e02d27a346f2d3"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a90e096a39cfc6da042e02d27a346f2d3">arm_compute::GEMMKernelInfo::k</a></div><div class="ttdeci">unsigned int k</div><div class="ttdoc">Number of LHS columns or RHS rows. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00086">KernelDescriptors.h:86</a></div></div>
<div class="ttc" id="_validation_8h_xhtml"><div class="ttname"><a href="_validation_8h.xhtml">Validation.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aaa3e12dad9db2e8b0789060f795c0471"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaa3e12dad9db2e8b0789060f795c0471">arm_compute::test::validation::n0_value</a></div><div class="ttdeci">n0_value</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00423">GEMMMatrixMultiplyNative.cpp:423</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00043">TensorInfo.h:43</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">arm_compute::test::framework::LogLevel::ERRORS</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a0945cf440bbfbc3f45b026783e7dd8ca"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a0945cf440bbfbc3f45b026783e7dd8ca">arm_compute::test::validation::CLGEMMMatrixMultiplyNative3DFixture</a></div><div class="ttdeci">GEMMMatrixMultiplyNative3DValidationFixture&lt; CLTensor, CLAccessor, T, CLGEMMMatrixMultiplyNative &gt; CLGEMMMatrixMultiplyNative3DFixture</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00063">GEMMMatrixMultiplyNative.cpp:63</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml">arm_compute::misc::shape_calculator</a></div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00041">ShapeCalculator.h:41</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info_xhtml_a9bca3aa421b5fa7c07b0aa751b39b25f"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml#a9bca3aa421b5fa7c07b0aa751b39b25f">arm_compute::GEMMLHSMatrixInfo::k0</a></div><div class="ttdeci">unsigned int k0</div><div class="ttdoc">Number of partial accumulations performed by the matrix multiplication. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02311">Types.h:2311</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info_xhtml_a41618231c7d7b990c42fe6846b4dde27"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml#a41618231c7d7b990c42fe6846b4dde27">arm_compute::GEMMLHSMatrixInfo::m0</a></div><div class="ttdeci">unsigned int m0</div><div class="ttdoc">Number of rows processed by the matrix multiplication. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02310">Types.h:2310</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1opencl_1_1kernels_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00052">CLLSTMLayer.h:52</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad1506e225a5eac0b0b0a4b98b38750df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">arm_compute::test::validation::TEST_CASE</a></div><div class="ttdeci">TEST_CASE(FusedActivation, framework::DatasetMode::ALL)</div><div class="ttdoc">Validate fused activation expecting the following behaviours: </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_arithmetic_addition_8cpp_source.xhtml#l00090">ArithmeticAddition.cpp:90</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ace7fb89653b30b411529cb0f84028c20"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ace7fb89653b30b411529cb0f84028c20">arm_compute::test::validation::m_value</a></div><div class="ttdeci">m_value</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00423">GEMMMatrixMultiplyNative.cpp:423</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">Cast.cpp:203</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::ConvertPolicy::SATURATE</a></div><div class="ttdoc">Saturate. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a6cedfa50a34b1c89477ba0d8e7bb4c3c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">arm_compute::test::validation::TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(QASYMM8_to_F32) FIXTURE_DATA_TEST_CASE(RunSmall</div></div>
<div class="ttc" id="arm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
<div class="ttc" id="_kernel_descriptors_8h_xhtml"><div class="ttname"><a href="_kernel_descriptors_8h.xhtml">KernelDescriptors.h</a></div></div>
<div class="ttc" id="cl__gemm_8cpp_xhtml_a320923ca5107cdfc05823e2ad588ac59"><div class="ttname"><a href="cl__gemm_8cpp.xhtml#a320923ca5107cdfc05823e2ad588ac59">abs_tolerance_f32</a></div><div class="ttdeci">constexpr float abs_tolerance_f32(0.0001f)</div><div class="ttdoc">F32 Absolute tolerance value for comparing reference&amp;#39;s output against implementation&amp;#39;s output for flo...</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1_post_op_list_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">arm_compute::experimental::PostOpList</a></div><div class="ttdoc">A sequence of PostOps that can be appended to the end of other operators. </div><div class="ttdef"><b>Definition:</b> <a href="_i_post_op_8h_source.xhtml#l00119">IPostOp.h:119</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a545be126d77ec11a9824249de111def9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">arm_compute::test::validation::m</a></div><div class="ttdeci">const unsigned int m</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00359">GEMMMatrixMultiplyNative.cpp:359</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ae7b9eaebbc5f863aec87551728eba105"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7b9eaebbc5f863aec87551728eba105">arm_compute::test::validation::combine</a></div><div class="ttdeci">combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::F32)))</div><div class="ttdef"><b>Definition:</b> <a href="_abs_layer_8cpp_source.xhtml#l00065">AbsLayer.cpp:65</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1_post_op_act_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_post_op_act.xhtml">arm_compute::experimental::PostOpAct</a></div><div class="ttdoc">(EXPERIMENTAL_POST_OPS) Implementation of specific IPostOps </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml#l00042">PostOps.h:42</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a0c83c1ecb560e0541b792eaaf3d739b5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a0c83c1ecb560e0541b792eaaf3d739b5">arm_compute::test::validation::act_value</a></div><div class="ttdeci">act_value</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00424">GEMMMatrixMultiplyNative.cpp:424</a></div></div>
<div class="ttc" id="_asserts_8h_xhtml"><div class="ttname"><a href="_asserts_8h.xhtml">Asserts.h</a></div></div>
<div class="ttc" id="_c_l_2_helper_8h_xhtml"><div class="ttname"><a href="_c_l_2_helper_8h.xhtml">Helper.h</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00292">working_space.hpp:292</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml">arm_compute::CLTensor</a></div><div class="ttdoc">Basic implementation of the OpenCL tensor interface. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml#l00041">CLTensor.h:41</a></div></div>
<div class="ttc" id="_cpu_gemm_assembly_dispatch_8cpp_xhtml_a42247993f81d6a8f73d2e0cb805c663b"><div class="ttname"><a href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a42247993f81d6a8f73d2e0cb805c663b">K</a></div><div class="ttdeci">unsigned int K</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00057">CpuGemmAssemblyDispatch.cpp:57</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp.xhtml">GEMMMatrixMultiplyNative.cpp</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:56:55 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
