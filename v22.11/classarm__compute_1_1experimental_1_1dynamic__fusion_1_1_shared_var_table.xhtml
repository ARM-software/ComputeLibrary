<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: SharedVarTable Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">SharedVarTable Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A table of all the variables used in the kernel / blueprint Because we limit the <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml" title="The dependency graph of a workload, where the nodes are of 2 types: Tensor or Operator Represented as...">DependencyGraph</a> in the blueprint to a Linear Sequence for now, we only allow ** a single global variable (the accumulator) **.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_arguments.xhtml">Arguments</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml">SharedVar</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A fully realized <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml" title="Specifies a shared variable link for a component. ">SharedVarLink</a>.  <a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aaa0377e50e51d555dac6c6adda393c51"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#aaa0377e50e51d555dac6c6adda393c51">add</a> (<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">SharedVarLink</a> var_link, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4">SharedVarGroup</a> group, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a> runtime_desc, const std::string &amp;<a class="el" href="_n_e_select_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>=&quot;unnamed&quot;)</td></tr>
<tr class="memdesc:aaa0377e50e51d555dac6c6adda393c51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml" title="A fully realized SharedVarLink. ">SharedVar</a> for a corresponding <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml" title="Specifies a shared variable link for a component. ">SharedVarLink</a> (contains ArgumentID).  <a href="#aaa0377e50e51d555dac6c6adda393c51">More...</a><br /></td></tr>
<tr class="separator:aaa0377e50e51d555dac6c6adda393c51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ea07c1841c26cf6f395ba4b3887bda0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml">SharedVar</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a> (const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">SharedVarLink</a> &amp;var_link) const</td></tr>
<tr class="memdesc:a8ea07c1841c26cf6f395ba4b3887bda0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml" title="A fully realized SharedVarLink. ">SharedVar</a> associated with <code>var_link</code>.  <a href="#a8ea07c1841c26cf6f395ba4b3887bda0">More...</a><br /></td></tr>
<tr class="separator:a8ea07c1841c26cf6f395ba4b3887bda0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dbf3531a263761c5a5bfae1fd8c4532"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_arguments.xhtml">Arguments</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a5dbf3531a263761c5a5bfae1fd8c4532">get_kernel_arguments</a> () const</td></tr>
<tr class="separator:a5dbf3531a263761c5a5bfae1fd8c4532"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A table of all the variables used in the kernel / blueprint Because we limit the <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml" title="The dependency graph of a workload, where the nodes are of 2 types: Tensor or Operator Represented as...">DependencyGraph</a> in the blueprint to a Linear Sequence for now, we only allow ** a single global variable (the accumulator) **. </p>
<p>NOTE: the order they appear in the table is the order of their "declaration" in the component code, and is also their ID NOTE: the variables all have the scope of the full kernel function </p>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00092">92</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="aaa0377e50e51d555dac6c6adda393c51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa0377e50e51d555dac6c6adda393c51">&#9670;&nbsp;</a></span>add()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">SharedVarLink</a>&#160;</td>
          <td class="paramname"><em>var_link</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4">SharedVarGroup</a>&#160;</td>
          <td class="paramname"><em>group</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a>&#160;</td>
          <td class="paramname"><em>runtime_desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em> = <code>&quot;unnamed&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml" title="A fully realized SharedVarLink. ">SharedVar</a> for a corresponding <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml" title="Specifies a shared variable link for a component. ">SharedVarLink</a> (contains ArgumentID). </p>
<p>If one has already been created for the <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml" title="Specifies a shared variable link for a component. ">SharedVarLink</a>, simply return it instead of creating a new one</p>
<dl class="section note"><dt>Note</dt><dd>: The order of insertion is important. There is one precondition: PRECOND: The components have been sorted topologically / is being traversed in topological order This ensures that all the consumer var links (Output, Automatic Links) can consume (return) the producer var links when they're referred </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00153">153</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00078">SharedVarLink::arg_id</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">arm_compute::experimental::dynamic_fusion::Argument</a>, <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a086247a9b57fde6eefee2a0c4752242d">arm_compute::experimental::dynamic_fusion::Automatic</a>, <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00079">SharedVarLink::io</a>, <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00080">SharedVarLink::is_empty()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">name</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a72fd310d933d46bd03b9d33fbb283ee9a29c2c02a361c9d7028472e5d92cd4a54">arm_compute::experimental::dynamic_fusion::Output</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_store_kernel_components_8cpp_source.xhtml#l00086">ClStoreBlockBoundaryAwareKernelComponent::allocate_shared_vars()</a>, <a class="el" href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00328">ClDirectConvolutionKernelComponent::allocate_shared_vars()</a>, <a class="el" href="_cl_floor_kernel_component_8cpp_source.xhtml#l00124">ClFloorKernelComponent::allocate_shared_vars()</a>, <a class="el" href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00165">ClElementwiseKernelComponent::allocate_shared_vars()</a>, and <a class="el" href="_cl_store_kernel_components_8cpp_source.xhtml#l00145">ClStoreIndirectWidthSelectKernelComponent::allocate_shared_vars()</a>.</p>
<div class="fragment"><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(var_link.is_empty(), <span class="stringliteral">&quot;Non-empty SharedVarLink expected&quot;</span>);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">if</span>(!<span class="keyword">get</span>(var_link).is_empty())</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        }</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keyword">auto</span>              var_id = _num_var;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        ss &lt;&lt; <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a> &lt;&lt; <span class="stringliteral">&quot;_&quot;</span> &lt;&lt; var_id;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> uniq_name = ss.str();</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        SharedVar  var{ var_link.arg_id, var_link.io, group, uniq_name, runtime_desc };</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">if</span>(group == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">SharedVarGroup::Argument</a>)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            _arguments.emplace(var_id, var);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            _arg_id_map.emplace(var_link.arg_id, var_id);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            _num_var++;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(group == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a086247a9b57fde6eefee2a0c4752242d">SharedVarGroup::Automatic</a>)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">if</span>(_global_vars.empty())</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            {</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                <span class="keywordflow">if</span>(var_link.io == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a72fd310d933d46bd03b9d33fbb283ee9a29c2c02a361c9d7028472e5d92cd4a54">SharedVarIO::Output</a>)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    _global_vars.emplace(var_id, var);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    _arg_id_map.emplace(var_link.arg_id, var_id);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    _num_var++;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">else</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Component likely not traversed in topological order&quot;</span>);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            }</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="comment">// Associate additional SharedVarLinks with the single global shared variable</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> global_var_id     = _global_vars.begin()-&gt;first;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                _arg_id_map[var_link.arg_id] = global_var_id;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            }</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        {</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unrecognised SharedVarGroup&quot;</span>);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        }</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    }</div><div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a72fd310d933d46bd03b9d33fbb283ee9a29c2c02a361c9d7028472e5d92cd4a54"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a72fd310d933d46bd03b9d33fbb283ee9a29c2c02a361c9d7028472e5d92cd4a54">arm_compute::experimental::dynamic_fusion::SharedVarIO::Output</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ae4b4b738b88d9f339fa9154f4305f6d4a086247a9b57fde6eefee2a0c4752242d"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a086247a9b57fde6eefee2a0c4752242d">arm_compute::experimental::dynamic_fusion::SharedVarGroup::Automatic</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">arm_compute::experimental::dynamic_fusion::SharedVarGroup::Argument</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8ea07c1841c26cf6f395ba4b3887bda0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ea07c1841c26cf6f395ba4b3887bda0">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml">SharedVar</a> get </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">SharedVarLink</a> &amp;&#160;</td>
          <td class="paramname"><em>var_link</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml" title="A fully realized SharedVarLink. ">SharedVar</a> associated with <code>var_link</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">var_link</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml" title="A fully realized SharedVarLink. ">SharedVar</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00206">206</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_store_kernel_components_8cpp_source.xhtml#l00092">ClStoreBlockBoundaryAwareKernelComponent::get_tag_lut()</a>, <a class="el" href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00347">ClDirectConvolutionKernelComponent::get_tag_lut()</a>, <a class="el" href="_cl_floor_kernel_component_8cpp_source.xhtml#l00129">ClFloorKernelComponent::get_tag_lut()</a>, <a class="el" href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00176">ClElementwiseKernelComponent::get_tag_lut()</a>, and <a class="el" href="_cl_store_kernel_components_8cpp_source.xhtml#l00151">ClStoreIndirectWidthSelectKernelComponent::get_tag_lut()</a>.</p>
<div class="fragment"><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keyword">const</span> SharedVar empty_var{};</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">if</span>(_arg_id_map.find(var_link.arg_id) != _arg_id_map.end())</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> var_id  = _arg_id_map.at(var_link.arg_id);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> arg_var = _arguments.find(var_id);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordflow">if</span>(arg_var != _arguments.end())</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keywordflow">return</span> arg_var-&gt;second;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            }</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            {</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                <span class="keywordflow">return</span> _global_vars.at(var_id);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            }</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">return</span> empty_var;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a5dbf3531a263761c5a5bfae1fd8c4532"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5dbf3531a263761c5a5bfae1fd8c4532">&#9670;&nbsp;</a></span>get_kernel_arguments()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_arguments.xhtml">Arguments</a> get_kernel_arguments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section note"><dt>Note</dt><dd>The arguments are returned in the order they are added </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00227">227</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>.</p>
<div class="fragment"><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        Arguments <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>{};</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;a : _arguments)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.add_var(a.second);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        }</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    }</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/core/experimental/dynamic_fusion/ClKernelBuildingImpl/<a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 10:57:04 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
