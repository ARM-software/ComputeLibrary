<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute::wrapper Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespacearm__compute_1_1wrapper.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">arm_compute::wrapper Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute_1_1wrapper_1_1traits"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">traits</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a4c1fe3150ad2ca29262dc6403605e65c"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4c1fe3150ad2ca29262dc6403605e65c">vabs</a> (const int8x8_t &amp;a)</td></tr>
<tr class="separator:a4c1fe3150ad2ca29262dc6403605e65c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a484e302d4944d7edcb7b206690251474"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a484e302d4944d7edcb7b206690251474">vabs</a> (const int16x4_t &amp;a)</td></tr>
<tr class="separator:a484e302d4944d7edcb7b206690251474"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27386b9187cc0bba9c21769c0731a72a"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a27386b9187cc0bba9c21769c0731a72a">vabs</a> (const int32x2_t &amp;a)</td></tr>
<tr class="separator:a27386b9187cc0bba9c21769c0731a72a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af39453b73d1958aa8a0ea58ca86efaff"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af39453b73d1958aa8a0ea58ca86efaff">vabs</a> (const float32x2_t &amp;a)</td></tr>
<tr class="separator:af39453b73d1958aa8a0ea58ca86efaff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8275425767f39b246862f11cef3328d"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad8275425767f39b246862f11cef3328d">vabs</a> (const int8x16_t &amp;a)</td></tr>
<tr class="separator:ad8275425767f39b246862f11cef3328d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a054ba55607f82d2bcee3a9bc5d3a7251"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a054ba55607f82d2bcee3a9bc5d3a7251">vabs</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a054ba55607f82d2bcee3a9bc5d3a7251"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa400d422f18b0210e84a04c03cb4ffa"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aaa400d422f18b0210e84a04c03cb4ffa">vabs</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:aaa400d422f18b0210e84a04c03cb4ffa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab935e0aae10321cfed3ff126ec52aa86"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab935e0aae10321cfed3ff126ec52aa86">vabs</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:ab935e0aae10321cfed3ff126ec52aa86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab568def82c6d63d62a6736692a0bf97b"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab568def82c6d63d62a6736692a0bf97b">vqabs</a> (const int8x8_t &amp;a)</td></tr>
<tr class="separator:ab568def82c6d63d62a6736692a0bf97b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af639c9e81e3a5d57b1f1443da4503d77"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af639c9e81e3a5d57b1f1443da4503d77">vqabs</a> (const int16x4_t &amp;a)</td></tr>
<tr class="separator:af639c9e81e3a5d57b1f1443da4503d77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab219f58f3a2dc02e7c8d3db795713bc2"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab219f58f3a2dc02e7c8d3db795713bc2">vqabs</a> (const int32x2_t &amp;a)</td></tr>
<tr class="separator:ab219f58f3a2dc02e7c8d3db795713bc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa19cbaeed1496296b1ea6e638541f1e9"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa19cbaeed1496296b1ea6e638541f1e9">vqabs</a> (const int8x16_t &amp;a)</td></tr>
<tr class="separator:aa19cbaeed1496296b1ea6e638541f1e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1ce2ba81004fec53962d992d17eb67d"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac1ce2ba81004fec53962d992d17eb67d">vqabs</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:ac1ce2ba81004fec53962d992d17eb67d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13ac476fb950eb66f403ce700c6344da"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a13ac476fb950eb66f403ce700c6344da">vqabs</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a13ac476fb950eb66f403ce700c6344da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1894e825a225f3b2013f594cbffdae73"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">vadd</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a1894e825a225f3b2013f594cbffdae73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c573cf41e883d4d37bd8dff8fcbd0f2"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7c573cf41e883d4d37bd8dff8fcbd0f2">vadd</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a7c573cf41e883d4d37bd8dff8fcbd0f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73d9b74710e651e7cdbf4cfafb944d8a"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a73d9b74710e651e7cdbf4cfafb944d8a">vadd</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a73d9b74710e651e7cdbf4cfafb944d8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51ed0d744f6dca340bc175241a2653d4"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a51ed0d744f6dca340bc175241a2653d4">vadd</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a51ed0d744f6dca340bc175241a2653d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de26ff774cac4d14a9a99760139a379"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1de26ff774cac4d14a9a99760139a379">vadd</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a1de26ff774cac4d14a9a99760139a379"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbc3286703ea68773578b2601a3fd797"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#adbc3286703ea68773578b2601a3fd797">vadd</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:adbc3286703ea68773578b2601a3fd797"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44649f1c855e68e4cab5f7f72daeb30b"><td class="memItemLeft" align="right" valign="top">uint64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a44649f1c855e68e4cab5f7f72daeb30b">vadd</a> (const uint64x1_t &amp;a, const uint64x1_t &amp;b)</td></tr>
<tr class="separator:a44649f1c855e68e4cab5f7f72daeb30b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa295c4e77f9e2ccd31f0fa815a9e4231"><td class="memItemLeft" align="right" valign="top">int64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa295c4e77f9e2ccd31f0fa815a9e4231">vadd</a> (const int64x1_t &amp;a, const int64x1_t &amp;b)</td></tr>
<tr class="separator:aa295c4e77f9e2ccd31f0fa815a9e4231"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04549b1ddb03008ac1c0ff3fc18ff335"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a04549b1ddb03008ac1c0ff3fc18ff335">vadd</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:a04549b1ddb03008ac1c0ff3fc18ff335"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08ed369986c867b850a74635764e3764"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a08ed369986c867b850a74635764e3764">vadd</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a08ed369986c867b850a74635764e3764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00611d18ac6548c52d5f3e5eec52f3fc"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a00611d18ac6548c52d5f3e5eec52f3fc">vadd</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:a00611d18ac6548c52d5f3e5eec52f3fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a001774f1457ef953dce3cbfd7ca3a720"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a001774f1457ef953dce3cbfd7ca3a720">vadd</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a001774f1457ef953dce3cbfd7ca3a720"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b3548ff67e64b1b559f005728643115"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7b3548ff67e64b1b559f005728643115">vadd</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a7b3548ff67e64b1b559f005728643115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38f13009919fa0bb1bf096aca2fc2b52"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a38f13009919fa0bb1bf096aca2fc2b52">vadd</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a38f13009919fa0bb1bf096aca2fc2b52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6e61403aa3b1ea42cb8623235a060d2"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae6e61403aa3b1ea42cb8623235a060d2">vadd</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:ae6e61403aa3b1ea42cb8623235a060d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4be8554b097bb191efca07c064500b0a"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4be8554b097bb191efca07c064500b0a">vadd</a> (const uint64x2_t &amp;a, const uint64x2_t &amp;b)</td></tr>
<tr class="separator:a4be8554b097bb191efca07c064500b0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85bff4b042de6d354194fd5faec611b2"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a85bff4b042de6d354194fd5faec611b2">vadd</a> (const int64x2_t &amp;a, const int64x2_t &amp;b)</td></tr>
<tr class="separator:a85bff4b042de6d354194fd5faec611b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5facaa0c056dc73dfa6a49cde91240c4"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5facaa0c056dc73dfa6a49cde91240c4">vadd</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a5facaa0c056dc73dfa6a49cde91240c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3ec2db417aa33bc7d68ad6e1ff7952"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4b3ec2db417aa33bc7d68ad6e1ff7952">vqadd</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a4b3ec2db417aa33bc7d68ad6e1ff7952"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af965181ce04747ee66db6df4d874b950"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af965181ce04747ee66db6df4d874b950">vqadd</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:af965181ce04747ee66db6df4d874b950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb5f5a2209cf45d306488d289d6054de"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afb5f5a2209cf45d306488d289d6054de">vqadd</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:afb5f5a2209cf45d306488d289d6054de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbe862c2646ecdf3849eff8bd570e5dc"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acbe862c2646ecdf3849eff8bd570e5dc">vqadd</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:acbe862c2646ecdf3849eff8bd570e5dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a762716e74212d443b77d5bc95264a884"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a762716e74212d443b77d5bc95264a884">vqadd</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a762716e74212d443b77d5bc95264a884"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a789d9bb65ffa618b4675ebf422e96e94"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a789d9bb65ffa618b4675ebf422e96e94">vqadd</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a789d9bb65ffa618b4675ebf422e96e94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a297de761eb0705e6059856e4a8e6e1d2"><td class="memItemLeft" align="right" valign="top">uint64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a297de761eb0705e6059856e4a8e6e1d2">vqadd</a> (const uint64x1_t &amp;a, const uint64x1_t &amp;b)</td></tr>
<tr class="separator:a297de761eb0705e6059856e4a8e6e1d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72f70b1a6486a6f618c84d2d9c82668f"><td class="memItemLeft" align="right" valign="top">int64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a72f70b1a6486a6f618c84d2d9c82668f">vqadd</a> (const int64x1_t &amp;a, const int64x1_t &amp;b)</td></tr>
<tr class="separator:a72f70b1a6486a6f618c84d2d9c82668f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7c46b130d392febff53d84a9b7bc567"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad7c46b130d392febff53d84a9b7bc567">vqadd</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:ad7c46b130d392febff53d84a9b7bc567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe0c6273a56abe65f9dcc46a4bd97bf9"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#abe0c6273a56abe65f9dcc46a4bd97bf9">vqadd</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:abe0c6273a56abe65f9dcc46a4bd97bf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af753dd3e0b525e5e0c058d52eee053c6"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af753dd3e0b525e5e0c058d52eee053c6">vqadd</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:af753dd3e0b525e5e0c058d52eee053c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e5010d0f62bd2a226b0372d2dcea8d3"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0e5010d0f62bd2a226b0372d2dcea8d3">vqadd</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a0e5010d0f62bd2a226b0372d2dcea8d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a751d2fad3faaac0746d7c592a31d17d7"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a751d2fad3faaac0746d7c592a31d17d7">vqadd</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a751d2fad3faaac0746d7c592a31d17d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820fc5b16f2d54dc9af247818404ca38"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a820fc5b16f2d54dc9af247818404ca38">vqadd</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a820fc5b16f2d54dc9af247818404ca38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac33aa1b8ca7945804c5ca05939a878ad"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac33aa1b8ca7945804c5ca05939a878ad">vqadd</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:ac33aa1b8ca7945804c5ca05939a878ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ca96f83ef1f8a5b8c24b21e0026acc2"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1ca96f83ef1f8a5b8c24b21e0026acc2">vqadd</a> (const uint64x2_t &amp;a, const uint64x2_t &amp;b)</td></tr>
<tr class="separator:a1ca96f83ef1f8a5b8c24b21e0026acc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39bba706f09450defce7cb2b63a21301"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a39bba706f09450defce7cb2b63a21301">vqadd</a> (const int64x2_t &amp;a, const int64x2_t &amp;b)</td></tr>
<tr class="separator:a39bba706f09450defce7cb2b63a21301"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32bfd06741edea5bbf2b98302bb929e8"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a32bfd06741edea5bbf2b98302bb929e8">vqadd</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a32bfd06741edea5bbf2b98302bb929e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa58ed08eab6c63a3afd3fe48ad06a8fa"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa58ed08eab6c63a3afd3fe48ad06a8fa">vaddw</a> (const uint16x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:aa58ed08eab6c63a3afd3fe48ad06a8fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa90fec328b2dfe2d401434c53cfb40f"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aaa90fec328b2dfe2d401434c53cfb40f">vaddw</a> (const int16x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:aaa90fec328b2dfe2d401434c53cfb40f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a807bb9a31778033dad7160708b5dc34e"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a807bb9a31778033dad7160708b5dc34e">vaddw</a> (const uint32x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a807bb9a31778033dad7160708b5dc34e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fbc189b385c8ae600b10a133a7eead5"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0fbc189b385c8ae600b10a133a7eead5">vaddw</a> (const int32x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a0fbc189b385c8ae600b10a133a7eead5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71dafd2b464c557b576244f9da4d5d93"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a71dafd2b464c557b576244f9da4d5d93">vaddw</a> (const uint64x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a71dafd2b464c557b576244f9da4d5d93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae94dc819b7d614de3fe69104b2933127"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae94dc819b7d614de3fe69104b2933127">vaddw</a> (const int64x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:ae94dc819b7d614de3fe69104b2933127"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a297a9b20b8f2244b28ba43ffe6db7112"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a297a9b20b8f2244b28ba43ffe6db7112">vaddl</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a297a9b20b8f2244b28ba43ffe6db7112"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a412bc86708543e9b3a2097b383bd923c"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a412bc86708543e9b3a2097b383bd923c">vaddl</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a412bc86708543e9b3a2097b383bd923c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07b983e43fe318e47497d08ff33f4641"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a07b983e43fe318e47497d08ff33f4641">vaddl</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a07b983e43fe318e47497d08ff33f4641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4be37f0a0e879f36b80265d6df48b871"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4be37f0a0e879f36b80265d6df48b871">vaddl</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a4be37f0a0e879f36b80265d6df48b871"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8ea760ecff5021a9791fde1914e998b"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af8ea760ecff5021a9791fde1914e998b">vaddl</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:af8ea760ecff5021a9791fde1914e998b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44d67b33f2fb02b3b7f8dd09406d6caa"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a44d67b33f2fb02b3b7f8dd09406d6caa">vaddl</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a44d67b33f2fb02b3b7f8dd09406d6caa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36fc78bb7edfcc94ed2ab7436c00906e"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a36fc78bb7edfcc94ed2ab7436c00906e">vpaddl</a> (const uint8x8_t &amp;a)</td></tr>
<tr class="separator:a36fc78bb7edfcc94ed2ab7436c00906e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31076534df372c72a6bbf15e03cfc0df"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a31076534df372c72a6bbf15e03cfc0df">vpaddl</a> (const int8x8_t &amp;a)</td></tr>
<tr class="separator:a31076534df372c72a6bbf15e03cfc0df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa60752185eeb6a473de795ed0ffae48"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aaa60752185eeb6a473de795ed0ffae48">vpaddl</a> (const uint16x4_t &amp;a)</td></tr>
<tr class="separator:aaa60752185eeb6a473de795ed0ffae48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eacbad36e5d666ac75d29097e5b755a"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5eacbad36e5d666ac75d29097e5b755a">vpaddl</a> (const int16x4_t &amp;a)</td></tr>
<tr class="separator:a5eacbad36e5d666ac75d29097e5b755a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a346a40343893dce572c328170f17dfd1"><td class="memItemLeft" align="right" valign="top">uint64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a346a40343893dce572c328170f17dfd1">vpaddl</a> (const uint32x2_t &amp;a)</td></tr>
<tr class="separator:a346a40343893dce572c328170f17dfd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb8df4f2339b96cc44570afc5f7f9f5d"><td class="memItemLeft" align="right" valign="top">int64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aeb8df4f2339b96cc44570afc5f7f9f5d">vpaddl</a> (const int32x2_t &amp;a)</td></tr>
<tr class="separator:aeb8df4f2339b96cc44570afc5f7f9f5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeebcfc675f18ba13675d966d3d6fba90"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aeebcfc675f18ba13675d966d3d6fba90">vpaddl</a> (const uint8x16_t &amp;a)</td></tr>
<tr class="separator:aeebcfc675f18ba13675d966d3d6fba90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acee8d3f186fd9c4a6164c2bd92a22b39"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acee8d3f186fd9c4a6164c2bd92a22b39">vpaddl</a> (const int8x16_t &amp;a)</td></tr>
<tr class="separator:acee8d3f186fd9c4a6164c2bd92a22b39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab06d40a0fb87232e7b5b4ed9a9f68d57"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab06d40a0fb87232e7b5b4ed9a9f68d57">vpaddl</a> (const uint16x8_t &amp;a)</td></tr>
<tr class="separator:ab06d40a0fb87232e7b5b4ed9a9f68d57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a178df68e11c78824756e95c4a74690ed"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a178df68e11c78824756e95c4a74690ed">vpaddl</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a178df68e11c78824756e95c4a74690ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f3b7a799d294a3dc8caa490f1073e2b"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6f3b7a799d294a3dc8caa490f1073e2b">vpaddl</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:a6f3b7a799d294a3dc8caa490f1073e2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa9a7b7c482d5926aaab4933cae8392e"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afa9a7b7c482d5926aaab4933cae8392e">vpaddl</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:afa9a7b7c482d5926aaab4933cae8392e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a475ee3c8ef70a2e4f18effd1d527a63a"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">vpadd</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a475ee3c8ef70a2e4f18effd1d527a63a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a484740aa6942805e042822fb7cef12ec"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a484740aa6942805e042822fb7cef12ec">vpadd</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a484740aa6942805e042822fb7cef12ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7354b0a019a54faca6951b03d9cf766"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af7354b0a019a54faca6951b03d9cf766">vpadd</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:af7354b0a019a54faca6951b03d9cf766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd6493e8a191146e3455134723c495d1"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#abd6493e8a191146e3455134723c495d1">vpadd</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:abd6493e8a191146e3455134723c495d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac025e9eb7cd72f6ef016cb928b51b02d"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac025e9eb7cd72f6ef016cb928b51b02d">vpadd</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:ac025e9eb7cd72f6ef016cb928b51b02d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac061b47e13fa4832ee51b203de487325"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac061b47e13fa4832ee51b203de487325">vpadd</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:ac061b47e13fa4832ee51b203de487325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adae782aae6d44f1f87f624b31a544c59"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#adae782aae6d44f1f87f624b31a544c59">vpadd</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:adae782aae6d44f1f87f624b31a544c59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac071623f14587f7cc6c4aea757d4378b"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">vand</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:ac071623f14587f7cc6c4aea757d4378b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace696b022d783c4a3e84f6aa23b9ec72"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ace696b022d783c4a3e84f6aa23b9ec72">vand</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:ace696b022d783c4a3e84f6aa23b9ec72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a364a30327f38b955216af9b5ac4367db"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a364a30327f38b955216af9b5ac4367db">vand</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a364a30327f38b955216af9b5ac4367db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bfe76fc6cc188b7e32c6944772f7125"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5bfe76fc6cc188b7e32c6944772f7125">vand</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a5bfe76fc6cc188b7e32c6944772f7125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17104b7f34998fcd36ad45f0594678ab"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a17104b7f34998fcd36ad45f0594678ab">vand</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a17104b7f34998fcd36ad45f0594678ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa12949a2a2d6873da017181f7941232f"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa12949a2a2d6873da017181f7941232f">vand</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:aa12949a2a2d6873da017181f7941232f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88f7ebc42b23820a9ba0b8ac05d70d37"><td class="memItemLeft" align="right" valign="top">uint64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a88f7ebc42b23820a9ba0b8ac05d70d37">vand</a> (const uint64x1_t &amp;a, const uint64x1_t &amp;b)</td></tr>
<tr class="separator:a88f7ebc42b23820a9ba0b8ac05d70d37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2865027ccc7e291a55d03e18a80f2341"><td class="memItemLeft" align="right" valign="top">int64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2865027ccc7e291a55d03e18a80f2341">vand</a> (const int64x1_t &amp;a, const int64x1_t &amp;b)</td></tr>
<tr class="separator:a2865027ccc7e291a55d03e18a80f2341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42a53b1fb8523ad84bb686cf83b2eeff"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a42a53b1fb8523ad84bb686cf83b2eeff">vand</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a42a53b1fb8523ad84bb686cf83b2eeff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09aa0f0336703a4ac289525882f81bc5"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a09aa0f0336703a4ac289525882f81bc5">vand</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:a09aa0f0336703a4ac289525882f81bc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac36121fb64569e4d6b12eea9473e41a3"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac36121fb64569e4d6b12eea9473e41a3">vand</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:ac36121fb64569e4d6b12eea9473e41a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9601217868077e3ecf9c2dab5e8d7da2"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9601217868077e3ecf9c2dab5e8d7da2">vand</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a9601217868077e3ecf9c2dab5e8d7da2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a770a458f188ed6e66be390082eca8aed"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a770a458f188ed6e66be390082eca8aed">vand</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a770a458f188ed6e66be390082eca8aed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f5ad185828729587ebd0356cd0ca275"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1f5ad185828729587ebd0356cd0ca275">vand</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a1f5ad185828729587ebd0356cd0ca275"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2913668b4791bdc393393ca60a078a7f"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2913668b4791bdc393393ca60a078a7f">vand</a> (const uint64x2_t &amp;a, const uint64x2_t &amp;b)</td></tr>
<tr class="separator:a2913668b4791bdc393393ca60a078a7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae36ea08250992deca7c68f523fb95842"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae36ea08250992deca7c68f523fb95842">vand</a> (const int64x2_t &amp;a, const int64x2_t &amp;b)</td></tr>
<tr class="separator:ae36ea08250992deca7c68f523fb95842"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e5924674eee0f441d54eb75d656700f"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">vbsl</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b, const uint8x8_t &amp;c)</td></tr>
<tr class="separator:a8e5924674eee0f441d54eb75d656700f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d67e14ffa7491f6e7855ca784f8bc1c"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1d67e14ffa7491f6e7855ca784f8bc1c">vbsl</a> (const uint8x8_t &amp;a, const int8x8_t &amp;b, const int8x8_t &amp;c)</td></tr>
<tr class="separator:a1d67e14ffa7491f6e7855ca784f8bc1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2a026522ed9848e50efc0d0c1c983d2"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab2a026522ed9848e50efc0d0c1c983d2">vbsl</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b, const uint16x4_t &amp;c)</td></tr>
<tr class="separator:ab2a026522ed9848e50efc0d0c1c983d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d3343de117c4813f5d4abb2e3e3c03e"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8d3343de117c4813f5d4abb2e3e3c03e">vbsl</a> (const uint16x4_t &amp;a, const int16x4_t &amp;b, const int16x4_t &amp;c)</td></tr>
<tr class="separator:a8d3343de117c4813f5d4abb2e3e3c03e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff81fbbae785bed39470fd5b7bd84f74"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aff81fbbae785bed39470fd5b7bd84f74">vbsl</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b, const uint32x2_t &amp;c)</td></tr>
<tr class="separator:aff81fbbae785bed39470fd5b7bd84f74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f0ea6d9c08f2754df5dfd3b1a2cadfc"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4f0ea6d9c08f2754df5dfd3b1a2cadfc">vbsl</a> (const uint32x2_t &amp;a, const int32x2_t &amp;b, const int32x2_t &amp;c)</td></tr>
<tr class="separator:a4f0ea6d9c08f2754df5dfd3b1a2cadfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e9ab5ba6651382da60a866eb25c2a21"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6e9ab5ba6651382da60a866eb25c2a21">vbsl</a> (const uint32x2_t &amp;a, const float32x2_t &amp;b, const float32x2_t &amp;c)</td></tr>
<tr class="separator:a6e9ab5ba6651382da60a866eb25c2a21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47c89dc854078a34bda04d7b23db1f3c"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a47c89dc854078a34bda04d7b23db1f3c">vbsl</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b, const uint8x16_t &amp;c)</td></tr>
<tr class="separator:a47c89dc854078a34bda04d7b23db1f3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a944da63e855c56b8b7e22df3c253f674"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a944da63e855c56b8b7e22df3c253f674">vbsl</a> (const uint8x16_t &amp;a, const int8x16_t &amp;b, const int8x16_t &amp;c)</td></tr>
<tr class="separator:a944da63e855c56b8b7e22df3c253f674"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae31efd18eb1c63c27a020ffcf0b74b53"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae31efd18eb1c63c27a020ffcf0b74b53">vbsl</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b, const uint16x8_t &amp;c)</td></tr>
<tr class="separator:ae31efd18eb1c63c27a020ffcf0b74b53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ebe0d613e398016f0314e60a2ff39bb"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5ebe0d613e398016f0314e60a2ff39bb">vbsl</a> (const uint16x8_t &amp;a, const int16x8_t &amp;b, const int16x8_t &amp;c)</td></tr>
<tr class="separator:a5ebe0d613e398016f0314e60a2ff39bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab65be4b474b777b1bd7c384af4113f54"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab65be4b474b777b1bd7c384af4113f54">vbsl</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b, const uint32x4_t &amp;c)</td></tr>
<tr class="separator:ab65be4b474b777b1bd7c384af4113f54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c7d27ea76fe8e31e3e0b29f8b3be4ac"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7c7d27ea76fe8e31e3e0b29f8b3be4ac">vbsl</a> (const uint32x4_t &amp;a, const int32x4_t &amp;b, const int32x4_t &amp;c)</td></tr>
<tr class="separator:a7c7d27ea76fe8e31e3e0b29f8b3be4ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a534d9f21641f05eed5e896ad40e01e19"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a534d9f21641f05eed5e896ad40e01e19">vbsl</a> (const uint32x4_t &amp;a, const float32x4_t &amp;b, const float32x4_t &amp;c)</td></tr>
<tr class="separator:a534d9f21641f05eed5e896ad40e01e19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7ccd655f600847f9d471604ed47e810"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa7ccd655f600847f9d471604ed47e810">vceq</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:aa7ccd655f600847f9d471604ed47e810"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7eecdf642e1d3ce41a63c170d5a641a"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa7eecdf642e1d3ce41a63c170d5a641a">vceq</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:aa7eecdf642e1d3ce41a63c170d5a641a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90c57b01e394acf5a813e3535070c724"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a90c57b01e394acf5a813e3535070c724">vceq</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a90c57b01e394acf5a813e3535070c724"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fea33664b226a254510c31de8b42787"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6fea33664b226a254510c31de8b42787">vceq</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a6fea33664b226a254510c31de8b42787"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac71b5829594d3bcaa593293e0e64fd8f"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac71b5829594d3bcaa593293e0e64fd8f">vceq</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:ac71b5829594d3bcaa593293e0e64fd8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab69f1749451b264048d3fb30e6fdf562"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab69f1749451b264048d3fb30e6fdf562">vceq</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:ab69f1749451b264048d3fb30e6fdf562"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea0132b50c5f202b9d5da3c2da3e04c1"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aea0132b50c5f202b9d5da3c2da3e04c1">vceq</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:aea0132b50c5f202b9d5da3c2da3e04c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c4302ad9250f68a9ad28658a23232b6"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9c4302ad9250f68a9ad28658a23232b6">vceq</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a9c4302ad9250f68a9ad28658a23232b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3097ab044eb611fd19da4376fb3eabff"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3097ab044eb611fd19da4376fb3eabff">vceq</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:a3097ab044eb611fd19da4376fb3eabff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a136b782f75e2fa44ab5aad96d7e05e86"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a136b782f75e2fa44ab5aad96d7e05e86">vceq</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a136b782f75e2fa44ab5aad96d7e05e86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e2ed0c96cb4d10bbaf41d4e3e14cdd3"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9e2ed0c96cb4d10bbaf41d4e3e14cdd3">vceq</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a9e2ed0c96cb4d10bbaf41d4e3e14cdd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad44d06b749b9821ef909a498ee939416"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad44d06b749b9821ef909a498ee939416">vceq</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:ad44d06b749b9821ef909a498ee939416"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4739dd4ecb08dc6585170498d31bb40"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae4739dd4ecb08dc6585170498d31bb40">vceq</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:ae4739dd4ecb08dc6585170498d31bb40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84c7602398a05f06678734d051d4c0a8"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a84c7602398a05f06678734d051d4c0a8">vceq</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a84c7602398a05f06678734d051d4c0a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f777df8db31568a3436995df958714c"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1f777df8db31568a3436995df958714c">vcge</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a1f777df8db31568a3436995df958714c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8495f1866e7b0cec7c408608e1e45a7b"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8495f1866e7b0cec7c408608e1e45a7b">vcge</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a8495f1866e7b0cec7c408608e1e45a7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f97e216d76733d97b278af3234ff077"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9f97e216d76733d97b278af3234ff077">vcge</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a9f97e216d76733d97b278af3234ff077"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc93fc63908d04bf8bfb29a3206b6526"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#adc93fc63908d04bf8bfb29a3206b6526">vcge</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:adc93fc63908d04bf8bfb29a3206b6526"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc9261bb4aa1452020b79ce918c07369"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#abc9261bb4aa1452020b79ce918c07369">vcge</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:abc9261bb4aa1452020b79ce918c07369"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed06c8595807184acaeac3075dc9495a"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aed06c8595807184acaeac3075dc9495a">vcge</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:aed06c8595807184acaeac3075dc9495a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac447f541ba304b3dd139c59ab6fbf895"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac447f541ba304b3dd139c59ab6fbf895">vcge</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:ac447f541ba304b3dd139c59ab6fbf895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab249f24fb4bdb558c0fe7b05059489d4"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab249f24fb4bdb558c0fe7b05059489d4">vcge</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:ab249f24fb4bdb558c0fe7b05059489d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb188018f0f750e7b0146cf0e4e8f889"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aeb188018f0f750e7b0146cf0e4e8f889">vcge</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:aeb188018f0f750e7b0146cf0e4e8f889"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f2d1df8cd90eb7c2cd18b8bcddb0f2a"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5f2d1df8cd90eb7c2cd18b8bcddb0f2a">vcge</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a5f2d1df8cd90eb7c2cd18b8bcddb0f2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba7f10b6a312bc77326c8c179d54fbba"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aba7f10b6a312bc77326c8c179d54fbba">vcge</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:aba7f10b6a312bc77326c8c179d54fbba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a773ec4965160a27a9ca5aca6dd9d309b"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a773ec4965160a27a9ca5aca6dd9d309b">vcge</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a773ec4965160a27a9ca5aca6dd9d309b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7288c2585a571dc1c76facf725f1cc96"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7288c2585a571dc1c76facf725f1cc96">vcge</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a7288c2585a571dc1c76facf725f1cc96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a823281ae3735f04eed2a82e9ec87acc3"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a823281ae3735f04eed2a82e9ec87acc3">vcge</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a823281ae3735f04eed2a82e9ec87acc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7eedba29396b0db728bffdf5f202d85c"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">vcgt</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a7eedba29396b0db728bffdf5f202d85c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4eee4b00c664f1efba03321b2d4c947"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab4eee4b00c664f1efba03321b2d4c947">vcgt</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:ab4eee4b00c664f1efba03321b2d4c947"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b659245eca180dcfcc57e75438a11d9"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5b659245eca180dcfcc57e75438a11d9">vcgt</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a5b659245eca180dcfcc57e75438a11d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96e5521a7f298420945cce5c15f41e08"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a96e5521a7f298420945cce5c15f41e08">vcgt</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a96e5521a7f298420945cce5c15f41e08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a812e0b95bd587b9a75fb9b78a925ebd8"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a812e0b95bd587b9a75fb9b78a925ebd8">vcgt</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a812e0b95bd587b9a75fb9b78a925ebd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a2952af3b1ef3386c8b6a01c2533bfe"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8a2952af3b1ef3386c8b6a01c2533bfe">vcgt</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a8a2952af3b1ef3386c8b6a01c2533bfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8209ea6835bd064d2465f6011478aa25"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8209ea6835bd064d2465f6011478aa25">vcgt</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:a8209ea6835bd064d2465f6011478aa25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe2118060eaf61848b82bbb7bc818c47"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afe2118060eaf61848b82bbb7bc818c47">vcgt</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:afe2118060eaf61848b82bbb7bc818c47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab91bb6fea68f22bbfb9b6104674c682a"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab91bb6fea68f22bbfb9b6104674c682a">vcgt</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:ab91bb6fea68f22bbfb9b6104674c682a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ab6755d5dc8868470a81ed1ae10ec56"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2ab6755d5dc8868470a81ed1ae10ec56">vcgt</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a2ab6755d5dc8868470a81ed1ae10ec56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af273d8dbdf46749c29ec45f1e17a8311"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af273d8dbdf46749c29ec45f1e17a8311">vcgt</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:af273d8dbdf46749c29ec45f1e17a8311"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a828dc9fb08c9f630de36b40f2d46f603"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a828dc9fb08c9f630de36b40f2d46f603">vcgt</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a828dc9fb08c9f630de36b40f2d46f603"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e6106b8bb67299f1a8e89111d12de59"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0e6106b8bb67299f1a8e89111d12de59">vcgt</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a0e6106b8bb67299f1a8e89111d12de59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1386cfcfc641b29ab70221552e99e36d"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1386cfcfc641b29ab70221552e99e36d">vcgt</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a1386cfcfc641b29ab70221552e99e36d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade8ef2aabdef6cc165fb29e380803dbb"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ade8ef2aabdef6cc165fb29e380803dbb">vcle</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:ade8ef2aabdef6cc165fb29e380803dbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a630bfb00ca8a60b1cd23c238460f95e3"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a630bfb00ca8a60b1cd23c238460f95e3">vcle</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a630bfb00ca8a60b1cd23c238460f95e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9debdb09f605f8f1184fa2b1fd595c7a"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9debdb09f605f8f1184fa2b1fd595c7a">vcle</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a9debdb09f605f8f1184fa2b1fd595c7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dcb9ff917413af14c61029d62c57eab"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8dcb9ff917413af14c61029d62c57eab">vcle</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a8dcb9ff917413af14c61029d62c57eab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7af8624f887e67abd202165fdc28314e"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7af8624f887e67abd202165fdc28314e">vcle</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a7af8624f887e67abd202165fdc28314e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16ee06976fdb3e055d6211f12efd216d"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a16ee06976fdb3e055d6211f12efd216d">vcle</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a16ee06976fdb3e055d6211f12efd216d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d0a0116ff87b5dd3f2368c344a6f6b5"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4d0a0116ff87b5dd3f2368c344a6f6b5">vcle</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:a4d0a0116ff87b5dd3f2368c344a6f6b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31d923b92adfb12789848041cc018350"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a31d923b92adfb12789848041cc018350">vcle</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a31d923b92adfb12789848041cc018350"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad017b1ac31f22d387980cf548e0cb0b2"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad017b1ac31f22d387980cf548e0cb0b2">vcle</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:ad017b1ac31f22d387980cf548e0cb0b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a2b927f8ba6624d975d0964c16da876"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3a2b927f8ba6624d975d0964c16da876">vcle</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a3a2b927f8ba6624d975d0964c16da876"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad912b88249080faf5e66e00cf95270f2"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad912b88249080faf5e66e00cf95270f2">vcle</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:ad912b88249080faf5e66e00cf95270f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95609b9c5eebcc6ddefa4da061c0786f"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a95609b9c5eebcc6ddefa4da061c0786f">vcle</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a95609b9c5eebcc6ddefa4da061c0786f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b9a899084b967845f1ee4bc1a88e655"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6b9a899084b967845f1ee4bc1a88e655">vcle</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a6b9a899084b967845f1ee4bc1a88e655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07e5f33135522467de768bd5229c594b"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a07e5f33135522467de768bd5229c594b">vcle</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a07e5f33135522467de768bd5229c594b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d7eabdb6566ec547d8ce0a42ab0efd8"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0d7eabdb6566ec547d8ce0a42ab0efd8">vclt</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a0d7eabdb6566ec547d8ce0a42ab0efd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59bcab004f65b3b616eabccd8779cf4f"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a59bcab004f65b3b616eabccd8779cf4f">vclt</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a59bcab004f65b3b616eabccd8779cf4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac12bc897546e007e7fbc5e4ab26afd4a"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac12bc897546e007e7fbc5e4ab26afd4a">vclt</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:ac12bc897546e007e7fbc5e4ab26afd4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a036831b7f3e40812c7b93c8f9d036be0"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a036831b7f3e40812c7b93c8f9d036be0">vclt</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a036831b7f3e40812c7b93c8f9d036be0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77b8ad7b953f4e0a390cd7dc508b1133"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a77b8ad7b953f4e0a390cd7dc508b1133">vclt</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a77b8ad7b953f4e0a390cd7dc508b1133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4c6df5eb5a837e07ece2c67ee0d252e"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad4c6df5eb5a837e07ece2c67ee0d252e">vclt</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:ad4c6df5eb5a837e07ece2c67ee0d252e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2704ccccdee6bc4868e6397c4913cf8a"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2704ccccdee6bc4868e6397c4913cf8a">vclt</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:a2704ccccdee6bc4868e6397c4913cf8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28724874f41631f5dacaacc8fc145e66"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a28724874f41631f5dacaacc8fc145e66">vclt</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a28724874f41631f5dacaacc8fc145e66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad3b023704fa8d76dc390c73bb895ee"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2ad3b023704fa8d76dc390c73bb895ee">vclt</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:a2ad3b023704fa8d76dc390c73bb895ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8955d9746e67e644d21715b5a42ca3d2"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8955d9746e67e644d21715b5a42ca3d2">vclt</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a8955d9746e67e644d21715b5a42ca3d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29668afee86d27397debe995348257a0"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a29668afee86d27397debe995348257a0">vclt</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a29668afee86d27397debe995348257a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a996d2f54a37f806fe7009425d36a9242"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a996d2f54a37f806fe7009425d36a9242">vclt</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a996d2f54a37f806fe7009425d36a9242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ac0840b4d3059d922706c1dab27ae08"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2ac0840b4d3059d922706c1dab27ae08">vclt</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a2ac0840b4d3059d922706c1dab27ae08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b9e94da3ecd5b5999c8f8f165a42e8a"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2b9e94da3ecd5b5999c8f8f165a42e8a">vclt</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a2b9e94da3ecd5b5999c8f8f165a42e8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1598e7eb12a58fc53559332cd0c3ab6f"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">vcombine</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a1598e7eb12a58fc53559332cd0c3ab6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0a3fb58591449faff844901e8191027"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac0a3fb58591449faff844901e8191027">vcombine</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:ac0a3fb58591449faff844901e8191027"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad79f020ea8e8362b8e10a887fe9c17a8"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad79f020ea8e8362b8e10a887fe9c17a8">vcombine</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:ad79f020ea8e8362b8e10a887fe9c17a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ecc5a0a28fc965a30a32e3374a67380"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4ecc5a0a28fc965a30a32e3374a67380">vcombine</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a4ecc5a0a28fc965a30a32e3374a67380"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a1bcc88546eed0bce0a3c3bc741131b"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0a1bcc88546eed0bce0a3c3bc741131b">vcombine</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a0a1bcc88546eed0bce0a3c3bc741131b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7c5d0c64de20d3eeb2328e0151195f6"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad7c5d0c64de20d3eeb2328e0151195f6">vcombine</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:ad7c5d0c64de20d3eeb2328e0151195f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a344cb8b780ba6f78a5a785786cbcaa43"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a344cb8b780ba6f78a5a785786cbcaa43">vcombine</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:a344cb8b780ba6f78a5a785786cbcaa43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9df7e5ee2b5eab813cacfb7e3f91b8f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ae9df7e5ee2b5eab813cacfb7e3f91b8f"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_same&lt; T, float &gt;::value, float32x4_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae9df7e5ee2b5eab813cacfb7e3f91b8f">vcvt</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:ae9df7e5ee2b5eab813cacfb7e3f91b8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a696cf8ba596c8c6b6ee8c782ba6c07"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a6a696cf8ba596c8c6b6ee8c782ba6c07"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_same&lt; T, float &gt;::value, float32x4_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6a696cf8ba596c8c6b6ee8c782ba6c07">vcvt</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a6a696cf8ba596c8c6b6ee8c782ba6c07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac700b241bc76e93b57c1975e1fa5364"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aac700b241bc76e93b57c1975e1fa5364"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_same&lt; T, uint8_t &gt;::value||std::is_same&lt; T, uint32_t &gt;::value, uint32x4_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aac700b241bc76e93b57c1975e1fa5364">vcvt</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:aac700b241bc76e93b57c1975e1fa5364"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec59b713155c797f9711fb1422401744"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aec59b713155c797f9711fb1422401744"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_same&lt; T, int8_t &gt;::value||std::is_same&lt; T, int32_t &gt;::value, int32x4_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aec59b713155c797f9711fb1422401744">vcvt</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:aec59b713155c797f9711fb1422401744"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a533635332a3a17c16d8f21c77e15e907"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">vdiv</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:a533635332a3a17c16d8f21c77e15e907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93d09fb9635ef6275df8b1ee334d62b4"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a93d09fb9635ef6275df8b1ee334d62b4">vdiv</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a93d09fb9635ef6275df8b1ee334d62b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39e87435be178fba49b76f49426ef873"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">vdup_n</a> (uint8_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:a39e87435be178fba49b76f49426ef873"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae96f63b38824187da108a09448e7b7f1"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae96f63b38824187da108a09448e7b7f1">vdup_n</a> (int8_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:ae96f63b38824187da108a09448e7b7f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ddcfbfe730c340aec577f57ccf389da"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2ddcfbfe730c340aec577f57ccf389da">vdup_n</a> (uint16_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:a2ddcfbfe730c340aec577f57ccf389da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa30db793e7c1fd082609ab7a6d5f165"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afa30db793e7c1fd082609ab7a6d5f165">vdup_n</a> (int16_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:afa30db793e7c1fd082609ab7a6d5f165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7a046ee9be293d9b823ddaed7138ea1"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab7a046ee9be293d9b823ddaed7138ea1">vdup_n</a> (uint32_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:ab7a046ee9be293d9b823ddaed7138ea1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fb0be6f60ff8e0f3df96993f7227aac"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3fb0be6f60ff8e0f3df96993f7227aac">vdup_n</a> (int32_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:a3fb0be6f60ff8e0f3df96993f7227aac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae63f6b8b4a2ec47485921709b85563f"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aae63f6b8b4a2ec47485921709b85563f">vdup_n</a> (float value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:aae63f6b8b4a2ec47485921709b85563f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab38dbdbc1cddb9806cd5eb7c8e5369bf"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab38dbdbc1cddb9806cd5eb7c8e5369bf">vdup_n</a> (uint8_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:ab38dbdbc1cddb9806cd5eb7c8e5369bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0140b10717610c7716b37e0706bef65c"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0140b10717610c7716b37e0706bef65c">vdup_n</a> (int8_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:a0140b10717610c7716b37e0706bef65c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac31dce4d78e068f2d10c266685de46cc"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac31dce4d78e068f2d10c266685de46cc">vdup_n</a> (uint16_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:ac31dce4d78e068f2d10c266685de46cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a138a0ca63e4bfb6e81326b7f29f9f26f"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a138a0ca63e4bfb6e81326b7f29f9f26f">vdup_n</a> (int16_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:a138a0ca63e4bfb6e81326b7f29f9f26f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cab0757ae9983d6f81120e1eeb0d495"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5cab0757ae9983d6f81120e1eeb0d495">vdup_n</a> (uint32_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:a5cab0757ae9983d6f81120e1eeb0d495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e4d95343b6703aa6502310fc041085d"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1e4d95343b6703aa6502310fc041085d">vdup_n</a> (int32_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:a1e4d95343b6703aa6502310fc041085d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d78cef5ffacdd18e233f2911fcaf3cc"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1d78cef5ffacdd18e233f2911fcaf3cc">vdup_n</a> (float value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:a1d78cef5ffacdd18e233f2911fcaf3cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a996e5381fd71f0d24c41099f3b92909a"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a996e5381fd71f0d24c41099f3b92909a">veor</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a996e5381fd71f0d24c41099f3b92909a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7094b05c49dedf690f00b743c32c5ee5"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7094b05c49dedf690f00b743c32c5ee5">veor</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a7094b05c49dedf690f00b743c32c5ee5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8c7bcf85e2ea68888ac3c78f7354a7a"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad8c7bcf85e2ea68888ac3c78f7354a7a">veor</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:ad8c7bcf85e2ea68888ac3c78f7354a7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abce35529031ff849903e1230227d2c60"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#abce35529031ff849903e1230227d2c60">veor</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:abce35529031ff849903e1230227d2c60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b63be858f17ab40ef5d793fb0fa360b"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9b63be858f17ab40ef5d793fb0fa360b">veor</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a9b63be858f17ab40ef5d793fb0fa360b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a434c200be83ed75ab327fb1dbb4971d8"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a434c200be83ed75ab327fb1dbb4971d8">veor</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a434c200be83ed75ab327fb1dbb4971d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc2ac3e5a58be02afa589519a218c0c3"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acc2ac3e5a58be02afa589519a218c0c3">veor</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:acc2ac3e5a58be02afa589519a218c0c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab044feb65ede9e64751ca907b8cf3cce"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab044feb65ede9e64751ca907b8cf3cce">veor</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:ab044feb65ede9e64751ca907b8cf3cce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab95586bdeab17029c23704ae9edebcea"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab95586bdeab17029c23704ae9edebcea">veor</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:ab95586bdeab17029c23704ae9edebcea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e2a0fcc75060eac7a5185b07275f8b4"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5e2a0fcc75060eac7a5185b07275f8b4">veor</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a5e2a0fcc75060eac7a5185b07275f8b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad52743627c3b86406474c71e736dcae4"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad52743627c3b86406474c71e736dcae4">veor</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:ad52743627c3b86406474c71e736dcae4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a959726e6269ec231f3a7ed22edff736b"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a959726e6269ec231f3a7ed22edff736b">veor</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a959726e6269ec231f3a7ed22edff736b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a5bd58601c5ec1fb14709c6361dfe2f"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8a5bd58601c5ec1fb14709c6361dfe2f">verf</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:a8a5bd58601c5ec1fb14709c6361dfe2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d35fe714076b40450ba6ba870fae322"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">vexpq</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:a3d35fe714076b40450ba6ba870fae322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f2a99d1524d3d96b294b3f647a54089"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2f2a99d1524d3d96b294b3f647a54089">vexpq</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a2f2a99d1524d3d96b294b3f647a54089"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f61df728949636afc38761f6ab319d3"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4f61df728949636afc38761f6ab319d3">vext_1</a> (uint8x8_t value_a, uint8x8_t value_b)</td></tr>
<tr class="separator:a4f61df728949636afc38761f6ab319d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa247597303350172b1bf018e34402d47"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa247597303350172b1bf018e34402d47">vext_2</a> (uint8x8_t value_a, uint8x8_t value_b)</td></tr>
<tr class="separator:aa247597303350172b1bf018e34402d47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab761bbfa7f68227c8955cd74d2efc2cd"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab761bbfa7f68227c8955cd74d2efc2cd">vext_1</a> (int8x8_t value_a, int8x8_t value_b)</td></tr>
<tr class="separator:ab761bbfa7f68227c8955cd74d2efc2cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85911be61d1494a276206a8109423065"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a85911be61d1494a276206a8109423065">vext_2</a> (int8x8_t value_a, int8x8_t value_b)</td></tr>
<tr class="separator:a85911be61d1494a276206a8109423065"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25ea224ad6ec0910c0517f6d157498f9"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a25ea224ad6ec0910c0517f6d157498f9">vext_1</a> (uint16x4_t value_a, uint16x4_t value_b)</td></tr>
<tr class="separator:a25ea224ad6ec0910c0517f6d157498f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75f2ece30fddc460ded2a3af6b871df4"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a75f2ece30fddc460ded2a3af6b871df4">vext_2</a> (uint16x4_t value_a, uint16x4_t value_b)</td></tr>
<tr class="separator:a75f2ece30fddc460ded2a3af6b871df4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0a685e4e886d2007545259041518dd7"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae0a685e4e886d2007545259041518dd7">vext_1</a> (int16x4_t value_a, int16x4_t value_b)</td></tr>
<tr class="separator:ae0a685e4e886d2007545259041518dd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada151f0ba21251cb0fa5fda6057d89f1"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ada151f0ba21251cb0fa5fda6057d89f1">vext_2</a> (int16x4_t value_a, int16x4_t value_b)</td></tr>
<tr class="separator:ada151f0ba21251cb0fa5fda6057d89f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1d2677f16ec52283c1b50c825a1b380"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae1d2677f16ec52283c1b50c825a1b380">vext_1</a> (uint8x16_t value_a, uint8x16_t value_b)</td></tr>
<tr class="separator:ae1d2677f16ec52283c1b50c825a1b380"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5828792e7318d3d3021610a48cefb60a"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5828792e7318d3d3021610a48cefb60a">vext_2</a> (uint8x16_t value_a, uint8x16_t value_b)</td></tr>
<tr class="separator:a5828792e7318d3d3021610a48cefb60a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a694a1aba4483c429da1b839dc4daaeb1"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a694a1aba4483c429da1b839dc4daaeb1">vext_1</a> (int8x16_t value_a, int8x16_t value_b)</td></tr>
<tr class="separator:a694a1aba4483c429da1b839dc4daaeb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac976b9ccf24c45244b661d766ef3115f"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac976b9ccf24c45244b661d766ef3115f">vext_2</a> (int8x16_t value_a, int8x16_t value_b)</td></tr>
<tr class="separator:ac976b9ccf24c45244b661d766ef3115f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dfb10a7c9048059b57521082b885d80"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6dfb10a7c9048059b57521082b885d80">vext_1</a> (uint16x8_t value_a, uint16x8_t value_b)</td></tr>
<tr class="separator:a6dfb10a7c9048059b57521082b885d80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b3e4e21663548cc29ab40e1110225e3"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6b3e4e21663548cc29ab40e1110225e3">vext_2</a> (uint16x8_t value_a, uint16x8_t value_b)</td></tr>
<tr class="separator:a6b3e4e21663548cc29ab40e1110225e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa52c0f4f257bb4e045c6413df8fcf4c6"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa52c0f4f257bb4e045c6413df8fcf4c6">vext_1</a> (int16x8_t value_a, int16x8_t value_b)</td></tr>
<tr class="separator:aa52c0f4f257bb4e045c6413df8fcf4c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a100d5ae064e415a393694edef2330736"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a100d5ae064e415a393694edef2330736">vext_2</a> (int16x8_t value_a, int16x8_t value_b)</td></tr>
<tr class="separator:a100d5ae064e415a393694edef2330736"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76c9f2ea33c37886ee16da496b1a023d"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a76c9f2ea33c37886ee16da496b1a023d">vext_1</a> (int32x4_t value_a, int32x4_t value_b)</td></tr>
<tr class="separator:a76c9f2ea33c37886ee16da496b1a023d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e9c1dbd0ee2a44f88c364abcf011cda"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6e9c1dbd0ee2a44f88c364abcf011cda">vext_2</a> (int32x4_t value_a, int32x4_t value_b)</td></tr>
<tr class="separator:a6e9c1dbd0ee2a44f88c364abcf011cda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95ee388aa7c5bccab918235dc538a6b3"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">vgethigh</a> (const uint8x16_t val)</td></tr>
<tr class="separator:a95ee388aa7c5bccab918235dc538a6b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9c024a301326584e832c4a48504b8bf"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac9c024a301326584e832c4a48504b8bf">vgethigh</a> (const int8x16_t val)</td></tr>
<tr class="separator:ac9c024a301326584e832c4a48504b8bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbcf39b840489f643bc83778d43f6335"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afbcf39b840489f643bc83778d43f6335">vgethigh</a> (const uint16x8_t val)</td></tr>
<tr class="separator:afbcf39b840489f643bc83778d43f6335"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bb43c0a3ad727d1ee1af90103a8829b"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4bb43c0a3ad727d1ee1af90103a8829b">vgethigh</a> (const int16x8_t val)</td></tr>
<tr class="separator:a4bb43c0a3ad727d1ee1af90103a8829b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2f8b38aa056a162e85852f0c6761289"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab2f8b38aa056a162e85852f0c6761289">vgethigh</a> (const uint32x4_t val)</td></tr>
<tr class="separator:ab2f8b38aa056a162e85852f0c6761289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd21e55cfb947d64570a61c1faf5ecc6"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afd21e55cfb947d64570a61c1faf5ecc6">vgethigh</a> (const int32x4_t val)</td></tr>
<tr class="separator:afd21e55cfb947d64570a61c1faf5ecc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a141bed2170a24f4fa5ec39a7c19d5d61"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a141bed2170a24f4fa5ec39a7c19d5d61">vgethigh</a> (const float32x4_t val)</td></tr>
<tr class="separator:a141bed2170a24f4fa5ec39a7c19d5d61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa16ace001ab8287faa46d6962f369219"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">vgetlane</a> (const uint8x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:aa16ace001ab8287faa46d6962f369219"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58856d5e33204b7d362cea988ba3f608"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a58856d5e33204b7d362cea988ba3f608">vgetlane</a> (const int8x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a58856d5e33204b7d362cea988ba3f608"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6a155bca7827cfe94fd04a0d3fa0f36"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad6a155bca7827cfe94fd04a0d3fa0f36">vgetlane</a> (const uint16x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:ad6a155bca7827cfe94fd04a0d3fa0f36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58f917e11f37590fcfa3391e1e1e06ee"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a58f917e11f37590fcfa3391e1e1e06ee">vgetlane</a> (const int16x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a58f917e11f37590fcfa3391e1e1e06ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9f16a1518f6a2a4bad0532bf6080a1c"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab9f16a1518f6a2a4bad0532bf6080a1c">vgetlane</a> (const uint32x2_t vector, const unsigned int lane)</td></tr>
<tr class="separator:ab9f16a1518f6a2a4bad0532bf6080a1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a948fe39abb6ce89ffb87de8d332c87aa"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a948fe39abb6ce89ffb87de8d332c87aa">vgetlane</a> (const int32x2_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a948fe39abb6ce89ffb87de8d332c87aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f43a3bdf084f33d306eb6e050a682be"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3f43a3bdf084f33d306eb6e050a682be">vgetlane</a> (const float32x2_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a3f43a3bdf084f33d306eb6e050a682be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affd20ad81488509d2c826f989d4e69b8"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#affd20ad81488509d2c826f989d4e69b8">vgetlane</a> (const uint8x16_t vector, const unsigned int lane)</td></tr>
<tr class="separator:affd20ad81488509d2c826f989d4e69b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bd3e6cd567d645ad6a1788764ccaa9d"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0bd3e6cd567d645ad6a1788764ccaa9d">vgetlane</a> (const int8x16_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a0bd3e6cd567d645ad6a1788764ccaa9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a865f7d46d623ca9f2a56bc69c25fb319"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a865f7d46d623ca9f2a56bc69c25fb319">vgetlane</a> (const uint16x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a865f7d46d623ca9f2a56bc69c25fb319"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5abca006a0d9d71f42c12425c6cb9e9b"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5abca006a0d9d71f42c12425c6cb9e9b">vgetlane</a> (const int16x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a5abca006a0d9d71f42c12425c6cb9e9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a903fd5324e155c0f864cb244a3eff50d"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a903fd5324e155c0f864cb244a3eff50d">vgetlane</a> (const uint32x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a903fd5324e155c0f864cb244a3eff50d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f67032361df236ca59f9bc806589971"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8f67032361df236ca59f9bc806589971">vgetlane</a> (const int32x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a8f67032361df236ca59f9bc806589971"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66b37188df7f842a57621e343dfe1129"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a66b37188df7f842a57621e343dfe1129">vgetlane</a> (const float32x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a66b37188df7f842a57621e343dfe1129"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a551139294623efd3e40455b113bffc42"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a551139294623efd3e40455b113bffc42">vgetlane</a> (const int64x2_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a551139294623efd3e40455b113bffc42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2902775707bc7bf7d6da1bda1cc15783"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">vgetlow</a> (const uint8x16_t val)</td></tr>
<tr class="separator:a2902775707bc7bf7d6da1bda1cc15783"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b68d30ce46c4c3194066823acacd442"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6b68d30ce46c4c3194066823acacd442">vgetlow</a> (const int8x16_t val)</td></tr>
<tr class="separator:a6b68d30ce46c4c3194066823acacd442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9acd645854ecc2a492de10a5999034d"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac9acd645854ecc2a492de10a5999034d">vgetlow</a> (const uint16x8_t val)</td></tr>
<tr class="separator:ac9acd645854ecc2a492de10a5999034d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd2ae064582b5d27d7f3df420fef03eb"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afd2ae064582b5d27d7f3df420fef03eb">vgetlow</a> (const int16x8_t val)</td></tr>
<tr class="separator:afd2ae064582b5d27d7f3df420fef03eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a274a067e78d261385119acb19ebc7053"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a274a067e78d261385119acb19ebc7053">vgetlow</a> (const uint32x4_t val)</td></tr>
<tr class="separator:a274a067e78d261385119acb19ebc7053"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a958c1d3f88b393fc31f68d19f1a718"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6a958c1d3f88b393fc31f68d19f1a718">vgetlow</a> (const int32x4_t val)</td></tr>
<tr class="separator:a6a958c1d3f88b393fc31f68d19f1a718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a745d994b7c62f971cd7023839b784ff2"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a745d994b7c62f971cd7023839b784ff2">vgetlow</a> (const float32x4_t val)</td></tr>
<tr class="separator:a745d994b7c62f971cd7023839b784ff2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ac8135a2c0a60f10448be0057543ed7"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5ac8135a2c0a60f10448be0057543ed7">vinv</a> (const float32x2_t &amp;a)</td></tr>
<tr class="separator:a5ac8135a2c0a60f10448be0057543ed7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9774774ca4af2449263acd0d9bcab43c"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9774774ca4af2449263acd0d9bcab43c">vinv</a> (const int32x2_t &amp;a)</td></tr>
<tr class="separator:a9774774ca4af2449263acd0d9bcab43c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fab00cf10194f860fbe0facb245df77"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9fab00cf10194f860fbe0facb245df77">vinv</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:a9fab00cf10194f860fbe0facb245df77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3520eb056004bb255ef24cbd43e8d60a"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3520eb056004bb255ef24cbd43e8d60a">vinv</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a3520eb056004bb255ef24cbd43e8d60a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a569988c8e1a2619532b8f4d0394d5d79"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a569988c8e1a2619532b8f4d0394d5d79">vinvsqrt</a> (const float32x2_t &amp;a)</td></tr>
<tr class="separator:a569988c8e1a2619532b8f4d0394d5d79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3625e88e165b798c50ee214a6636dc4"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac3625e88e165b798c50ee214a6636dc4">vinvsqrt</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:ac3625e88e165b798c50ee214a6636dc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca22c6207d1ef0aa5ad1ff392ce56917"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aca22c6207d1ef0aa5ad1ff392ce56917">vinvsqrt</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:aca22c6207d1ef0aa5ad1ff392ce56917"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1a6f6dde14fc3b0470cd0b08041ea9f"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae1a6f6dde14fc3b0470cd0b08041ea9f">vload</a> (const uint8_t *ptr)</td></tr>
<tr class="separator:ae1a6f6dde14fc3b0470cd0b08041ea9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87e91f0ee3ecea4a152f7db51451be32"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a87e91f0ee3ecea4a152f7db51451be32">vload</a> (const int8_t *ptr)</td></tr>
<tr class="separator:a87e91f0ee3ecea4a152f7db51451be32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a554bda13751c47b20fb50246f99c601a"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a554bda13751c47b20fb50246f99c601a">vload</a> (const uint16_t *ptr)</td></tr>
<tr class="separator:a554bda13751c47b20fb50246f99c601a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f1e8ab5f43a0bd6c5f12b8b8d2847ba"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9f1e8ab5f43a0bd6c5f12b8b8d2847ba">vload</a> (const int16_t *ptr)</td></tr>
<tr class="separator:a9f1e8ab5f43a0bd6c5f12b8b8d2847ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c0ebb40f71661ff1396b6cab9c4d168"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8c0ebb40f71661ff1396b6cab9c4d168">vload</a> (const uint32_t *ptr)</td></tr>
<tr class="separator:a8c0ebb40f71661ff1396b6cab9c4d168"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac315df13b4a8667730a6b3f0e774d66a"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac315df13b4a8667730a6b3f0e774d66a">vload</a> (const int32_t *ptr)</td></tr>
<tr class="separator:ac315df13b4a8667730a6b3f0e774d66a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34d952ba7147dd78ef05879bfead78f5"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a34d952ba7147dd78ef05879bfead78f5">vload</a> (const float *ptr)</td></tr>
<tr class="separator:a34d952ba7147dd78ef05879bfead78f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77f54eded7fef436d3a4f21ad5a00da6"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">vloadq</a> (const uint8_t *ptr)</td></tr>
<tr class="separator:a77f54eded7fef436d3a4f21ad5a00da6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdcc9846d94853fcbddb817879de1a34"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#abdcc9846d94853fcbddb817879de1a34">vloadq</a> (const int8_t *ptr)</td></tr>
<tr class="separator:abdcc9846d94853fcbddb817879de1a34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aace1a8b4ba67c412574180dd492e480b"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aace1a8b4ba67c412574180dd492e480b">vloadq</a> (const uint16_t *ptr)</td></tr>
<tr class="separator:aace1a8b4ba67c412574180dd492e480b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae189872ea41a0947dd06f560aaca3fbb"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae189872ea41a0947dd06f560aaca3fbb">vloadq</a> (const int16_t *ptr)</td></tr>
<tr class="separator:ae189872ea41a0947dd06f560aaca3fbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ea1791012d4495628c21706e031a1eb"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3ea1791012d4495628c21706e031a1eb">vloadq</a> (const uint32_t *ptr)</td></tr>
<tr class="separator:a3ea1791012d4495628c21706e031a1eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68cae5637e21bb5bc7563a5a89c27764"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a68cae5637e21bb5bc7563a5a89c27764">vloadq</a> (const int32_t *ptr)</td></tr>
<tr class="separator:a68cae5637e21bb5bc7563a5a89c27764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbe3f94e4c5f2a89be3c5fff7c87a1c2"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#adbe3f94e4c5f2a89be3c5fff7c87a1c2">vloadq</a> (const float *ptr)</td></tr>
<tr class="separator:adbe3f94e4c5f2a89be3c5fff7c87a1c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23cc34c6476b7df556284c718c44e65c"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a23cc34c6476b7df556284c718c44e65c">vlog</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:a23cc34c6476b7df556284c718c44e65c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35b9469125b02ced64f6f351ba18127f"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a35b9469125b02ced64f6f351ba18127f">vlog</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a35b9469125b02ced64f6f351ba18127f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d1d14000c959f1146a8a64e1dafae5f"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">vmax</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a8d1d14000c959f1146a8a64e1dafae5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f7649f2ee606cf842115341b7571aab"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8f7649f2ee606cf842115341b7571aab">vmax</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a8f7649f2ee606cf842115341b7571aab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf5ce125cc789021a3d24f5707d711ec"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#adf5ce125cc789021a3d24f5707d711ec">vmax</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:adf5ce125cc789021a3d24f5707d711ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7afbbd0a831ad31c1a75e48b7d93324a"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7afbbd0a831ad31c1a75e48b7d93324a">vmax</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a7afbbd0a831ad31c1a75e48b7d93324a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b553699a7c1e9d9cb109a49ad3c5727"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6b553699a7c1e9d9cb109a49ad3c5727">vmax</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a6b553699a7c1e9d9cb109a49ad3c5727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ca7ae9e30647c4643b1eb31f6517791"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5ca7ae9e30647c4643b1eb31f6517791">vmax</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a5ca7ae9e30647c4643b1eb31f6517791"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2e5d4eb72295c6454bbd4a051cb32d6"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae2e5d4eb72295c6454bbd4a051cb32d6">vmax</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:ae2e5d4eb72295c6454bbd4a051cb32d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a650538c522d3fd73c30e39cd170d02f9"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a650538c522d3fd73c30e39cd170d02f9">vmax</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a650538c522d3fd73c30e39cd170d02f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae30d6367801c1cba0e1e24b5e8a664b8"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae30d6367801c1cba0e1e24b5e8a664b8">vmax</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:ae30d6367801c1cba0e1e24b5e8a664b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afda337d70b92b77d4bb0601cd5673230"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afda337d70b92b77d4bb0601cd5673230">vmax</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:afda337d70b92b77d4bb0601cd5673230"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5e87ca36a247c28d04b4bf992f5dd9a"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae5e87ca36a247c28d04b4bf992f5dd9a">vmax</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:ae5e87ca36a247c28d04b4bf992f5dd9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b5bb4293c6cf9406b10543f2af45cae"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3b5bb4293c6cf9406b10543f2af45cae">vmax</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a3b5bb4293c6cf9406b10543f2af45cae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5305cd57eda646455fa9e5638d828db9"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5305cd57eda646455fa9e5638d828db9">vmax</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a5305cd57eda646455fa9e5638d828db9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a705920c79ac05f91ac30842627e97a"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4a705920c79ac05f91ac30842627e97a">vmax</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a4a705920c79ac05f91ac30842627e97a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab026a1aeec48074092f548c130c323f4"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">vmin</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:ab026a1aeec48074092f548c130c323f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51eb407b34af91654602ed8f03e244d0"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a51eb407b34af91654602ed8f03e244d0">vmin</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a51eb407b34af91654602ed8f03e244d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f9729c21d22cf563cfea46cf475102f"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5f9729c21d22cf563cfea46cf475102f">vmin</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a5f9729c21d22cf563cfea46cf475102f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab638eca3c44bec3263d05c09708c62f"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aab638eca3c44bec3263d05c09708c62f">vmin</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:aab638eca3c44bec3263d05c09708c62f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57673ef73ff89d5a1b3fe00447d13e5b"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a57673ef73ff89d5a1b3fe00447d13e5b">vmin</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a57673ef73ff89d5a1b3fe00447d13e5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d9f1c86402d06b9b6565d090e6c8516"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8d9f1c86402d06b9b6565d090e6c8516">vmin</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a8d9f1c86402d06b9b6565d090e6c8516"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab810d1d59b9ae09dd6c4f829fb50b6e9"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab810d1d59b9ae09dd6c4f829fb50b6e9">vmin</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:ab810d1d59b9ae09dd6c4f829fb50b6e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1ee5e3e73a507eccc2ae66ba7e6fdc6"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab1ee5e3e73a507eccc2ae66ba7e6fdc6">vmin</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:ab1ee5e3e73a507eccc2ae66ba7e6fdc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af67a7cc27575ee4da73c711225c51b53"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af67a7cc27575ee4da73c711225c51b53">vmin</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:af67a7cc27575ee4da73c711225c51b53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1572d51ddecf974abf037055a1e5c334"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1572d51ddecf974abf037055a1e5c334">vmin</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a1572d51ddecf974abf037055a1e5c334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a435329432b5a078c141b0cbc8c0ce0ec"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a435329432b5a078c141b0cbc8c0ce0ec">vmin</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a435329432b5a078c141b0cbc8c0ce0ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48871d33cc9dbec5947efe4a5f180712"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a48871d33cc9dbec5947efe4a5f180712">vmin</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a48871d33cc9dbec5947efe4a5f180712"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0342e5fbea4e9b848a20f8ff8d365456"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0342e5fbea4e9b848a20f8ff8d365456">vmin</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a0342e5fbea4e9b848a20f8ff8d365456"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aded29dd88bb45804ea08fe7e4959368e"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aded29dd88bb45804ea08fe7e4959368e">vmin</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:aded29dd88bb45804ea08fe7e4959368e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4287931a2912ecb6cece71219ca5478c"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">vmla</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b, const uint8x8_t &amp;c)</td></tr>
<tr class="separator:a4287931a2912ecb6cece71219ca5478c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37f88ce34194adf857254339a0dcf79b"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a37f88ce34194adf857254339a0dcf79b">vmla</a> (const int8x8_t &amp;a, const int8x8_t &amp;b, const int8x8_t &amp;c)</td></tr>
<tr class="separator:a37f88ce34194adf857254339a0dcf79b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42223331ada67c8e42296d82f84892bb"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a42223331ada67c8e42296d82f84892bb">vmla</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b, const uint16x4_t &amp;c)</td></tr>
<tr class="separator:a42223331ada67c8e42296d82f84892bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfa9b0883aa3181f35138d1334cb6254"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#abfa9b0883aa3181f35138d1334cb6254">vmla</a> (const int16x4_t &amp;a, const int16x4_t &amp;b, const int16x4_t &amp;c)</td></tr>
<tr class="separator:abfa9b0883aa3181f35138d1334cb6254"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0d3c9db71218e51620b55f1c65bee02"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac0d3c9db71218e51620b55f1c65bee02">vmla</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b, const uint32x2_t &amp;c)</td></tr>
<tr class="separator:ac0d3c9db71218e51620b55f1c65bee02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0885e9c52aa46752544466bc926f38a"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae0885e9c52aa46752544466bc926f38a">vmla</a> (const int32x2_t &amp;a, const int32x2_t &amp;b, const int32x2_t &amp;c)</td></tr>
<tr class="separator:ae0885e9c52aa46752544466bc926f38a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a303b6b566f2673b81e3ec38ae63c6e9e"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a303b6b566f2673b81e3ec38ae63c6e9e">vmla</a> (const float32x2_t &amp;a, const float32x2_t &amp;b, const float32x2_t &amp;c)</td></tr>
<tr class="separator:a303b6b566f2673b81e3ec38ae63c6e9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1a53ae8a71f3589b9af290a8a181c14"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac1a53ae8a71f3589b9af290a8a181c14">vmla</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b, const uint8x16_t &amp;c)</td></tr>
<tr class="separator:ac1a53ae8a71f3589b9af290a8a181c14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d83113a1e94bf011cf09a8e4e41e298"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9d83113a1e94bf011cf09a8e4e41e298">vmla</a> (const int8x16_t &amp;a, const int8x16_t &amp;b, const int8x16_t &amp;c)</td></tr>
<tr class="separator:a9d83113a1e94bf011cf09a8e4e41e298"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab87d76495291fa17d8227360e5d3df40"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab87d76495291fa17d8227360e5d3df40">vmla</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b, const uint16x8_t &amp;c)</td></tr>
<tr class="separator:ab87d76495291fa17d8227360e5d3df40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1ab258613e35189ff0d2aaeaf88382c"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad1ab258613e35189ff0d2aaeaf88382c">vmla</a> (const int16x8_t &amp;a, const int16x8_t &amp;b, const int16x8_t &amp;c)</td></tr>
<tr class="separator:ad1ab258613e35189ff0d2aaeaf88382c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c7b807fd519b6cc6944585b13c02141"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8c7b807fd519b6cc6944585b13c02141">vmla</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b, const uint32x4_t &amp;c)</td></tr>
<tr class="separator:a8c7b807fd519b6cc6944585b13c02141"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1e660abafdcb4d69d264f85aa48c2c7"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac1e660abafdcb4d69d264f85aa48c2c7">vmla</a> (const int32x4_t &amp;a, const int32x4_t &amp;b, const int32x4_t &amp;c)</td></tr>
<tr class="separator:ac1e660abafdcb4d69d264f85aa48c2c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae38f1d4af6841a054a793640eff009b3"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae38f1d4af6841a054a793640eff009b3">vmla</a> (const float32x4_t &amp;a, const float32x4_t &amp;b, const float32x4_t &amp;c)</td></tr>
<tr class="separator:ae38f1d4af6841a054a793640eff009b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66d15db8e989b58b61603ce73d8696b5"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a66d15db8e989b58b61603ce73d8696b5">vmlal</a> (const uint16x8_t &amp;a, const uint8x8_t &amp;b, const uint8x8_t &amp;c)</td></tr>
<tr class="separator:a66d15db8e989b58b61603ce73d8696b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb536caf0ef8e63c06b4cb39079affaa"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acb536caf0ef8e63c06b4cb39079affaa">vmlal</a> (const int16x8_t &amp;a, const int8x8_t &amp;b, const int8x8_t &amp;c)</td></tr>
<tr class="separator:acb536caf0ef8e63c06b4cb39079affaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ebea4d8367ca937d067f107a5702ebc"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6ebea4d8367ca937d067f107a5702ebc">vmlal</a> (const uint32x4_t &amp;a, const uint16x4_t &amp;b, const uint16x4_t &amp;c)</td></tr>
<tr class="separator:a6ebea4d8367ca937d067f107a5702ebc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b4e4bcb480131f82d3a456c14a74c8f"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8b4e4bcb480131f82d3a456c14a74c8f">vmlal</a> (const int32x4_t &amp;a, const int16x4_t &amp;b, const int16x4_t &amp;c)</td></tr>
<tr class="separator:a8b4e4bcb480131f82d3a456c14a74c8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bc07457f01ec1c85d8e0ad1c5078b0f"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8bc07457f01ec1c85d8e0ad1c5078b0f">vmlal</a> (const uint64x2_t &amp;a, const uint32x2_t &amp;b, const uint32x2_t &amp;c)</td></tr>
<tr class="separator:a8bc07457f01ec1c85d8e0ad1c5078b0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fb631b0b31b31f1abd35cba5be16a38"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9fb631b0b31b31f1abd35cba5be16a38">vmlal</a> (const int64x2_t &amp;a, const int32x2_t &amp;b, const int32x2_t &amp;c)</td></tr>
<tr class="separator:a9fb631b0b31b31f1abd35cba5be16a38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dbba1731c32d176ae6635be1c65cbd6"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">vmovl</a> (const uint8x8_t &amp;a)</td></tr>
<tr class="separator:a8dbba1731c32d176ae6635be1c65cbd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa929d20322303880b8b6429b19eeea21"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa929d20322303880b8b6429b19eeea21">vmovl</a> (const int8x8_t &amp;a)</td></tr>
<tr class="separator:aa929d20322303880b8b6429b19eeea21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c3fe657db220619affef40899e7a3d3"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7c3fe657db220619affef40899e7a3d3">vmovl</a> (const uint16x4_t &amp;a)</td></tr>
<tr class="separator:a7c3fe657db220619affef40899e7a3d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9301713b642622ad8891b0917e98fc2a"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9301713b642622ad8891b0917e98fc2a">vmovl</a> (const int16x4_t &amp;a)</td></tr>
<tr class="separator:a9301713b642622ad8891b0917e98fc2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8d18c4574de6d24cf727f83081e9a52"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab8d18c4574de6d24cf727f83081e9a52">vmovl</a> (const uint32x2_t &amp;a)</td></tr>
<tr class="separator:ab8d18c4574de6d24cf727f83081e9a52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fa6221077a840ac278fe21fdcaeca2a"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8fa6221077a840ac278fe21fdcaeca2a">vmovl</a> (const int32x2_t &amp;a)</td></tr>
<tr class="separator:a8fa6221077a840ac278fe21fdcaeca2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea0b656edc428c1f7702d86bbb97df6b"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aea0b656edc428c1f7702d86bbb97df6b">vmovn</a> (const uint64x2_t &amp;a)</td></tr>
<tr class="separator:aea0b656edc428c1f7702d86bbb97df6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab31fa5f935432afeae5e4c873b6bb8fd"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab31fa5f935432afeae5e4c873b6bb8fd">vmovn</a> (const int64x2_t &amp;a)</td></tr>
<tr class="separator:ab31fa5f935432afeae5e4c873b6bb8fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89a44d45022193bc148089fec401d437"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a89a44d45022193bc148089fec401d437">vmovn</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:a89a44d45022193bc148089fec401d437"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9b48bf24969c71d62ab2837957a3b93"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac9b48bf24969c71d62ab2837957a3b93">vmovn</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:ac9b48bf24969c71d62ab2837957a3b93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fee192f80eebcf368ee4e662c455d7d"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9fee192f80eebcf368ee4e662c455d7d">vmovn</a> (const uint16x8_t &amp;a)</td></tr>
<tr class="separator:a9fee192f80eebcf368ee4e662c455d7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36c832fbcec771dae0fe1b8b215399f2"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a36c832fbcec771dae0fe1b8b215399f2">vmovn</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a36c832fbcec771dae0fe1b8b215399f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55bc37be5f14e4c561d3ca93b2a34aa9"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">vqmovn</a> (const uint64x2_t &amp;a)</td></tr>
<tr class="separator:a55bc37be5f14e4c561d3ca93b2a34aa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7154843230482bb0b779d95621541003"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7154843230482bb0b779d95621541003">vqmovn</a> (const int64x2_t &amp;a)</td></tr>
<tr class="separator:a7154843230482bb0b779d95621541003"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57941a547a0cfad979bd6b8fa9e030b7"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a57941a547a0cfad979bd6b8fa9e030b7">vqmovn</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:a57941a547a0cfad979bd6b8fa9e030b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1128ee038af1aeb3df753bd4958e2009"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1128ee038af1aeb3df753bd4958e2009">vqmovn</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a1128ee038af1aeb3df753bd4958e2009"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03d244df122ac5030119baa1dfe319c6"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a03d244df122ac5030119baa1dfe319c6">vqmovn</a> (const uint16x8_t &amp;a)</td></tr>
<tr class="separator:a03d244df122ac5030119baa1dfe319c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaca6eb034c8564ecc9b32f50e85349ea"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aaca6eb034c8564ecc9b32f50e85349ea">vqmovn</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:aaca6eb034c8564ecc9b32f50e85349ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66c8dd218a4863a14fec363e3dd13dc4"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">vmul</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a66c8dd218a4863a14fec363e3dd13dc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66a7fd5e2104da748fdb7665e3505b3c"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a66a7fd5e2104da748fdb7665e3505b3c">vmul</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a66a7fd5e2104da748fdb7665e3505b3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1aefc54a525724581b1a09f3b9e33111"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1aefc54a525724581b1a09f3b9e33111">vmul</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a1aefc54a525724581b1a09f3b9e33111"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32c397e73d2083c8f48aaf0afcdd81c8"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a32c397e73d2083c8f48aaf0afcdd81c8">vmul</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a32c397e73d2083c8f48aaf0afcdd81c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2579d7197d661c7e483c2b4079c5037"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa2579d7197d661c7e483c2b4079c5037">vmul</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:aa2579d7197d661c7e483c2b4079c5037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace213c51916a0c2f979f3082663765e1"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ace213c51916a0c2f979f3082663765e1">vmul</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:ace213c51916a0c2f979f3082663765e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa99c51650860bee18dc2a1c6259c661"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aaa99c51650860bee18dc2a1c6259c661">vmul</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:aaa99c51650860bee18dc2a1c6259c661"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e6e6496807b9c330c9a21749f442a6d"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1e6e6496807b9c330c9a21749f442a6d">vmul</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a1e6e6496807b9c330c9a21749f442a6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34bb12fc418530504162b300bf417ee9"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a34bb12fc418530504162b300bf417ee9">vmul</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:a34bb12fc418530504162b300bf417ee9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f2e93cec76891a55fde0d4ead3f7728"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4f2e93cec76891a55fde0d4ead3f7728">vmul</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a4f2e93cec76891a55fde0d4ead3f7728"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f1fb2425af2afc3bcfb2ee0c8a68119"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3f1fb2425af2afc3bcfb2ee0c8a68119">vmul</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a3f1fb2425af2afc3bcfb2ee0c8a68119"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af797877175d454cbaa6b25b19fb6c7e1"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af797877175d454cbaa6b25b19fb6c7e1">vmul</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:af797877175d454cbaa6b25b19fb6c7e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab8ce1a283f1649a3a7763c0600dd7f7"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aab8ce1a283f1649a3a7763c0600dd7f7">vmul</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:aab8ce1a283f1649a3a7763c0600dd7f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04525a80382277955944902464f660e4"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a04525a80382277955944902464f660e4">vmul</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a04525a80382277955944902464f660e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa24da6d1c1ce97217bab0291ce404fa7"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">vneg</a> (const int8x8_t &amp;a)</td></tr>
<tr class="separator:aa24da6d1c1ce97217bab0291ce404fa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c6508f2e9aa4b8832aa4e05716a436f"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2c6508f2e9aa4b8832aa4e05716a436f">vneg</a> (const int16x4_t &amp;a)</td></tr>
<tr class="separator:a2c6508f2e9aa4b8832aa4e05716a436f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fcdbb04887f4009d8eaf423260d862e"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1fcdbb04887f4009d8eaf423260d862e">vneg</a> (const int32x2_t &amp;a)</td></tr>
<tr class="separator:a1fcdbb04887f4009d8eaf423260d862e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f8675538052849d9a77195dcb2a0475"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3f8675538052849d9a77195dcb2a0475">vneg</a> (const float32x2_t &amp;a)</td></tr>
<tr class="separator:a3f8675538052849d9a77195dcb2a0475"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4a2420279b0278307ecbb5f37591bce"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab4a2420279b0278307ecbb5f37591bce">vneg</a> (const int8x16_t &amp;a)</td></tr>
<tr class="separator:ab4a2420279b0278307ecbb5f37591bce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28971f157797cbfb899157085c6c56cf"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a28971f157797cbfb899157085c6c56cf">vneg</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a28971f157797cbfb899157085c6c56cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4b0bebb0fa5dbbe06e2480f87a1ae1d"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac4b0bebb0fa5dbbe06e2480f87a1ae1d">vneg</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:ac4b0bebb0fa5dbbe06e2480f87a1ae1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bd7d04c076d2e2dce7c70df98916539"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1bd7d04c076d2e2dce7c70df98916539">vneg</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:a1bd7d04c076d2e2dce7c70df98916539"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed661d4bd9a14812355576773982eb7a"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aed661d4bd9a14812355576773982eb7a">vnot</a> (const uint8x8_t &amp;a)</td></tr>
<tr class="separator:aed661d4bd9a14812355576773982eb7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc1b2a3caf3433ec566f47ce39de7e69"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afc1b2a3caf3433ec566f47ce39de7e69">vnot</a> (const int8x8_t &amp;a)</td></tr>
<tr class="separator:afc1b2a3caf3433ec566f47ce39de7e69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a406944d21fe0860048958cb4a5802752"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a406944d21fe0860048958cb4a5802752">vnot</a> (const uint16x4_t &amp;a)</td></tr>
<tr class="separator:a406944d21fe0860048958cb4a5802752"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd57145d7cad49cf89cd79633bcd2340"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acd57145d7cad49cf89cd79633bcd2340">vnot</a> (const int16x4_t &amp;a)</td></tr>
<tr class="separator:acd57145d7cad49cf89cd79633bcd2340"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8bfb7550a2cda0cacd83945b9222d9e"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab8bfb7550a2cda0cacd83945b9222d9e">vnot</a> (const uint32x2_t &amp;a)</td></tr>
<tr class="separator:ab8bfb7550a2cda0cacd83945b9222d9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76e5ae3c725c70789557192e3546df27"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a76e5ae3c725c70789557192e3546df27">vnot</a> (const int32x2_t &amp;a)</td></tr>
<tr class="separator:a76e5ae3c725c70789557192e3546df27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa39a80bee981969fc846d403028b5f3f"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa39a80bee981969fc846d403028b5f3f">vnot</a> (const float32x2_t &amp;a)</td></tr>
<tr class="separator:aa39a80bee981969fc846d403028b5f3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a278a9fc4819273bf361fa978ebe448f8"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a278a9fc4819273bf361fa978ebe448f8">vnot</a> (const uint8x16_t &amp;a)</td></tr>
<tr class="separator:a278a9fc4819273bf361fa978ebe448f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0df250cea56a8740e8a975eefa787ba2"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0df250cea56a8740e8a975eefa787ba2">vnot</a> (const int8x16_t &amp;a)</td></tr>
<tr class="separator:a0df250cea56a8740e8a975eefa787ba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d7b69561da7e6895eabeeab862fe28b"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3d7b69561da7e6895eabeeab862fe28b">vnot</a> (const uint16x8_t &amp;a)</td></tr>
<tr class="separator:a3d7b69561da7e6895eabeeab862fe28b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9725668a8840d7402f0ab6ba20610fc4"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9725668a8840d7402f0ab6ba20610fc4">vnot</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a9725668a8840d7402f0ab6ba20610fc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18f2b6ebfa0c3d0cc784351c199c8fae"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a18f2b6ebfa0c3d0cc784351c199c8fae">vnot</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:a18f2b6ebfa0c3d0cc784351c199c8fae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a6c9a5080b8ae0edd2cec9feb92a089"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9a6c9a5080b8ae0edd2cec9feb92a089">vnot</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a9a6c9a5080b8ae0edd2cec9feb92a089"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75153e22804bc49ce6c34b0116e584ff"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a75153e22804bc49ce6c34b0116e584ff">vnot</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:a75153e22804bc49ce6c34b0116e584ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd68f4669bdf3bfe0ec26c6a1825e248"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">vorr</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:afd68f4669bdf3bfe0ec26c6a1825e248"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e4d79fc5d8ce9434a8ee55a2fb69d05"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9e4d79fc5d8ce9434a8ee55a2fb69d05">vorr</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a9e4d79fc5d8ce9434a8ee55a2fb69d05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a890824d4840294e482a1cb80d3f93972"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a890824d4840294e482a1cb80d3f93972">vorr</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a890824d4840294e482a1cb80d3f93972"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae37968041962a0906bd348df28d07fef"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae37968041962a0906bd348df28d07fef">vorr</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:ae37968041962a0906bd348df28d07fef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5dad3d69ec8ed5cee464869327ee189"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae5dad3d69ec8ed5cee464869327ee189">vorr</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:ae5dad3d69ec8ed5cee464869327ee189"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9538681eef113da4bc7192eae24d9d29"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9538681eef113da4bc7192eae24d9d29">vorr</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a9538681eef113da4bc7192eae24d9d29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8c49d92c97299ca7a1d4d558ab4fe4c"><td class="memItemLeft" align="right" valign="top">uint64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac8c49d92c97299ca7a1d4d558ab4fe4c">vorr</a> (const uint64x1_t &amp;a, const uint64x1_t &amp;b)</td></tr>
<tr class="separator:ac8c49d92c97299ca7a1d4d558ab4fe4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f7ab02073d80a11d6dc31165ef4e408"><td class="memItemLeft" align="right" valign="top">int64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5f7ab02073d80a11d6dc31165ef4e408">vorr</a> (const int64x1_t &amp;a, const int64x1_t &amp;b)</td></tr>
<tr class="separator:a5f7ab02073d80a11d6dc31165ef4e408"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85a500565f56a89cc48ee9bfa6de5bb6"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a85a500565f56a89cc48ee9bfa6de5bb6">vorr</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a85a500565f56a89cc48ee9bfa6de5bb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9b568258be29fdc84f839e4c6dca869"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa9b568258be29fdc84f839e4c6dca869">vorr</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:aa9b568258be29fdc84f839e4c6dca869"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad22503a8a86c698298bd18d30c7e1c0f"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad22503a8a86c698298bd18d30c7e1c0f">vorr</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:ad22503a8a86c698298bd18d30c7e1c0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ca21e1f83192cb137031766f20a0c88"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1ca21e1f83192cb137031766f20a0c88">vorr</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a1ca21e1f83192cb137031766f20a0c88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55363e655ba94b3b37d4e5665e79c794"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a55363e655ba94b3b37d4e5665e79c794">vorr</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a55363e655ba94b3b37d4e5665e79c794"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7810dc5de2d4ed31b3536183f354798f"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7810dc5de2d4ed31b3536183f354798f">vorr</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a7810dc5de2d4ed31b3536183f354798f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac30e27438ac5473a439d231eed39882b"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac30e27438ac5473a439d231eed39882b">vorr</a> (const uint64x2_t &amp;a, const uint64x2_t &amp;b)</td></tr>
<tr class="separator:ac30e27438ac5473a439d231eed39882b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47a3a49930632d95dda54fe073458b63"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a47a3a49930632d95dda54fe073458b63">vorr</a> (const int64x2_t &amp;a, const int64x2_t &amp;b)</td></tr>
<tr class="separator:a47a3a49930632d95dda54fe073458b63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab799fd9cd5fc5989593e69c55bc400f9"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">vpmax</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:ab799fd9cd5fc5989593e69c55bc400f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77e7bf27d6c698eeb78c6e59c7736ff3"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a77e7bf27d6c698eeb78c6e59c7736ff3">vpmax</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a77e7bf27d6c698eeb78c6e59c7736ff3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d9100f677c0c26000fbe7f1142a0169"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5d9100f677c0c26000fbe7f1142a0169">vpmax</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a5d9100f677c0c26000fbe7f1142a0169"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a084c3b19f25619ec9a4f6a28edb4849b"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a084c3b19f25619ec9a4f6a28edb4849b">vpmax</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a084c3b19f25619ec9a4f6a28edb4849b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95f30695a9984559b5b4330be93fb4f5"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a95f30695a9984559b5b4330be93fb4f5">vpmax</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a95f30695a9984559b5b4330be93fb4f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39ff87169325e42bcec4e8b72aebac16"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a39ff87169325e42bcec4e8b72aebac16">vpmax</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a39ff87169325e42bcec4e8b72aebac16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abae9be70c52a197549e33b022ddd488f"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#abae9be70c52a197549e33b022ddd488f">vpmax</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:abae9be70c52a197549e33b022ddd488f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab82845d16e532ba6603e1b960a79384b"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">vpmin</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:ab82845d16e532ba6603e1b960a79384b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f1295502983abdaece250516b8e564e"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7f1295502983abdaece250516b8e564e">vpmin</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a7f1295502983abdaece250516b8e564e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14642064b6d61c95588ff03d2bf3e522"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a14642064b6d61c95588ff03d2bf3e522">vpmin</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a14642064b6d61c95588ff03d2bf3e522"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90e2e64fc6298266c08a915c77fca4b3"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a90e2e64fc6298266c08a915c77fca4b3">vpmin</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a90e2e64fc6298266c08a915c77fca4b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53afd5e9a5ce60ef6cf7426f4998fed8"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a53afd5e9a5ce60ef6cf7426f4998fed8">vpmin</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a53afd5e9a5ce60ef6cf7426f4998fed8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f1bc2edd11ddc6647c50e9f52ef64e5"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3f1bc2edd11ddc6647c50e9f52ef64e5">vpmin</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a3f1bc2edd11ddc6647c50e9f52ef64e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab12ca96a30ec693404ee462fa9972441"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab12ca96a30ec693404ee462fa9972441">vpmin</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:ab12ca96a30ec693404ee462fa9972441"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a566497df1ac44164eb8643f5d469afae"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a566497df1ac44164eb8643f5d469afae">vpow</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a566497df1ac44164eb8643f5d469afae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0386dd9c2ae7ad11a07ee3def84b96c1"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a0386dd9c2ae7ad11a07ee3def84b96c1"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_same&lt; T, uint8_t &gt;::value, uint8x8_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0386dd9c2ae7ad11a07ee3def84b96c1">vqmov</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a0386dd9c2ae7ad11a07ee3def84b96c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a299e0769213850d7bc6bfdc3bf2d53df"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a299e0769213850d7bc6bfdc3bf2d53df"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_same&lt; T, int8_t &gt;::value, int8x8_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a299e0769213850d7bc6bfdc3bf2d53df">vqmov</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a299e0769213850d7bc6bfdc3bf2d53df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf3df57c0d3884368a0da2a6e306e4bc"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aaf3df57c0d3884368a0da2a6e306e4bc">vqmovun</a> (const int64x2_t &amp;a)</td></tr>
<tr class="separator:aaf3df57c0d3884368a0da2a6e306e4bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a191cd29ca1f6d36a715d36cddb34a33a"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a191cd29ca1f6d36a715d36cddb34a33a">vqmovun</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a191cd29ca1f6d36a715d36cddb34a33a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af726e8f1d6b81ca6383a2100c9e40a87"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af726e8f1d6b81ca6383a2100c9e40a87">vqmovun</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:af726e8f1d6b81ca6383a2100c9e40a87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57b24ba39d5191e1946dcc87a7e88b10"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a57b24ba39d5191e1946dcc87a7e88b10">vreinterpret</a> (const uint16x4_t &amp;a)</td></tr>
<tr class="separator:a57b24ba39d5191e1946dcc87a7e88b10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87a249805030d40cfed4e369d8d26334"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a87a249805030d40cfed4e369d8d26334">vreinterpret</a> (const int16x4_t &amp;a)</td></tr>
<tr class="separator:a87a249805030d40cfed4e369d8d26334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa66f9aabea563dcaaa28931d2325c1f9"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa66f9aabea563dcaaa28931d2325c1f9">vreinterpret</a> (const uint16x8_t &amp;a)</td></tr>
<tr class="separator:aa66f9aabea563dcaaa28931d2325c1f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ae6a96cfcc864446e9807754c5f1da4"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8ae6a96cfcc864446e9807754c5f1da4">vreinterpret</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a8ae6a96cfcc864446e9807754c5f1da4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34eaaf6ffbf37abcaa83887289b4bd10"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a34eaaf6ffbf37abcaa83887289b4bd10">vreinterpret</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:a34eaaf6ffbf37abcaa83887289b4bd10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cd5f9fc8ea49bd3d8309ccecc2a68e3"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6cd5f9fc8ea49bd3d8309ccecc2a68e3">vreinterpret</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a6cd5f9fc8ea49bd3d8309ccecc2a68e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7a641703a9c98932d775d915bf7a3e5"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa7a641703a9c98932d775d915bf7a3e5">vrev64</a> (const uint8x8_t &amp;a)</td></tr>
<tr class="separator:aa7a641703a9c98932d775d915bf7a3e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0540a3dcbe54b53aa63f839d68489c8f"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0540a3dcbe54b53aa63f839d68489c8f">vrev64</a> (const int8x8_t &amp;a)</td></tr>
<tr class="separator:a0540a3dcbe54b53aa63f839d68489c8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab00e48a754ea292c76df472860f58d41"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab00e48a754ea292c76df472860f58d41">vrev64</a> (const uint16x4_t &amp;a)</td></tr>
<tr class="separator:ab00e48a754ea292c76df472860f58d41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77b10f14845f83d937ac88959aee2f53"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a77b10f14845f83d937ac88959aee2f53">vrev64</a> (const int16x4_t &amp;a)</td></tr>
<tr class="separator:a77b10f14845f83d937ac88959aee2f53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f8f72bda25ed0b65d693f610e85bd9d"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7f8f72bda25ed0b65d693f610e85bd9d">vrev64</a> (const uint32x2_t &amp;a)</td></tr>
<tr class="separator:a7f8f72bda25ed0b65d693f610e85bd9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50ff385c1f05f515248bcf254c821594"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a50ff385c1f05f515248bcf254c821594">vrev64</a> (const int32x2_t &amp;a)</td></tr>
<tr class="separator:a50ff385c1f05f515248bcf254c821594"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd2b502712f706b76d2e8daa866d9755"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afd2b502712f706b76d2e8daa866d9755">vrev64</a> (const float32x2_t &amp;a)</td></tr>
<tr class="separator:afd2b502712f706b76d2e8daa866d9755"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ff423602b2a8b90c171821634966821"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3ff423602b2a8b90c171821634966821">vrev64</a> (const uint8x16_t &amp;a)</td></tr>
<tr class="separator:a3ff423602b2a8b90c171821634966821"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd05ffb53527cc219bdd39cdf00d3b10"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acd05ffb53527cc219bdd39cdf00d3b10">vrev64</a> (const int8x16_t &amp;a)</td></tr>
<tr class="separator:acd05ffb53527cc219bdd39cdf00d3b10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a965877a2762592da21615f712c80e078"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a965877a2762592da21615f712c80e078">vrev64</a> (const uint16x8_t &amp;a)</td></tr>
<tr class="separator:a965877a2762592da21615f712c80e078"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08eab42fbe6d87171c070fe0741637c0"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a08eab42fbe6d87171c070fe0741637c0">vrev64</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a08eab42fbe6d87171c070fe0741637c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bf14ce2affa893fff3415233391316e"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5bf14ce2affa893fff3415233391316e">vrev64</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:a5bf14ce2affa893fff3415233391316e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cc8db9abd0cf482e2215ac5a5912b81"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9cc8db9abd0cf482e2215ac5a5912b81">vrev64</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a9cc8db9abd0cf482e2215ac5a5912b81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf40a436440668bca238d2c728ae7158"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aaf40a436440668bca238d2c728ae7158">vrev64</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:aaf40a436440668bca238d2c728ae7158"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98c8805795fb292b29f4967621cd8189"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a98c8805795fb292b29f4967621cd8189">vround</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:a98c8805795fb292b29f4967621cd8189"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bd77ac69edf7cd373b4fdf5317c16ee"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4bd77ac69edf7cd373b4fdf5317c16ee">vround</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a4bd77ac69edf7cd373b4fdf5317c16ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ee3531f4293703c9b32e28421bfc061"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6ee3531f4293703c9b32e28421bfc061">vsetlane</a> (const uint8_t value, const uint8x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a6ee3531f4293703c9b32e28421bfc061"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affa58b394277f910e9ee3c74c1d92f4f"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#affa58b394277f910e9ee3c74c1d92f4f">vsetlane</a> (const int8_t value, const int8x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:affa58b394277f910e9ee3c74c1d92f4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0160f519b1fe681e083a2b43975e340e"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0160f519b1fe681e083a2b43975e340e">vsetlane</a> (const uint16_t value, const uint16x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a0160f519b1fe681e083a2b43975e340e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a289ff28c038d8d2f4f34bc77bf9d7337"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a289ff28c038d8d2f4f34bc77bf9d7337">vsetlane</a> (const int16_t value, const int16x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a289ff28c038d8d2f4f34bc77bf9d7337"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab312ab1d815f0ab12b174aad45e73163"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab312ab1d815f0ab12b174aad45e73163">vsetlane</a> (const uint32_t value, const uint32x2_t vector, const unsigned int lane)</td></tr>
<tr class="separator:ab312ab1d815f0ab12b174aad45e73163"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e06d386c6840a2e151e9bb512116672"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3e06d386c6840a2e151e9bb512116672">vsetlane</a> (const int32_t value, const int32x2_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a3e06d386c6840a2e151e9bb512116672"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9d3b040097aabee689838e632cda0d8"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad9d3b040097aabee689838e632cda0d8">vsetlane</a> (const float value, const float32x2_t vector, const unsigned int lane)</td></tr>
<tr class="separator:ad9d3b040097aabee689838e632cda0d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8d6919caaf76e0ccf623776d4f8ff11"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad8d6919caaf76e0ccf623776d4f8ff11">vsetlane</a> (const uint8_t value, const uint8x16_t vector, const unsigned int lane)</td></tr>
<tr class="separator:ad8d6919caaf76e0ccf623776d4f8ff11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f433afab16132e121382bb146e7e5c8"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9f433afab16132e121382bb146e7e5c8">vsetlane</a> (const int8_t value, const int8x16_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a9f433afab16132e121382bb146e7e5c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e430a73e202fe5fe0c8d7144154f31"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa6e430a73e202fe5fe0c8d7144154f31">vsetlane</a> (const uint16_t value, const uint16x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:aa6e430a73e202fe5fe0c8d7144154f31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa73970167535f639cd8ddc192af4645b"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa73970167535f639cd8ddc192af4645b">vsetlane</a> (const int16_t value, const int16x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:aa73970167535f639cd8ddc192af4645b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee2ebe404fede9d44de77843aacef5e6"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aee2ebe404fede9d44de77843aacef5e6">vsetlane</a> (const uint32_t value, const uint32x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:aee2ebe404fede9d44de77843aacef5e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fb7bcbe12d35286550150bcfa7bd0c6"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0fb7bcbe12d35286550150bcfa7bd0c6">vsetlane</a> (const int32_t value, const int32x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a0fb7bcbe12d35286550150bcfa7bd0c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7afef15d1a2161dd098cc72cbea32fe"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">vsetlane</a> (const float value, const float32x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:ac7afef15d1a2161dd098cc72cbea32fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a701023985a16e9be00eda98ca62b1ff0"><td class="memTemplParams" colspan="2">template&lt;int b&gt; </td></tr>
<tr class="memitem:a701023985a16e9be00eda98ca62b1ff0"><td class="memTemplItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a701023985a16e9be00eda98ca62b1ff0">vqrshrn</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a701023985a16e9be00eda98ca62b1ff0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff736d99c68f0fea0ef0732864ef40ed"><td class="memTemplParams" colspan="2">template&lt;int b&gt; </td></tr>
<tr class="memitem:aff736d99c68f0fea0ef0732864ef40ed"><td class="memTemplItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aff736d99c68f0fea0ef0732864ef40ed">vqrshrn</a> (const uint16x8_t &amp;a)</td></tr>
<tr class="separator:aff736d99c68f0fea0ef0732864ef40ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab8a47b2c25b408353e9315274b8903c"><td class="memTemplParams" colspan="2">template&lt;int b&gt; </td></tr>
<tr class="memitem:aab8a47b2c25b408353e9315274b8903c"><td class="memTemplItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aab8a47b2c25b408353e9315274b8903c">vqrshrn</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:aab8a47b2c25b408353e9315274b8903c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a148cfcfd26fd4770318168ee60feda04"><td class="memTemplParams" colspan="2">template&lt;int b&gt; </td></tr>
<tr class="memitem:a148cfcfd26fd4770318168ee60feda04"><td class="memTemplItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a148cfcfd26fd4770318168ee60feda04">vqrshrn</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:a148cfcfd26fd4770318168ee60feda04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04164bace8f1614e3cdd1c8b808a87ce"><td class="memTemplParams" colspan="2">template&lt;int b&gt; </td></tr>
<tr class="memitem:a04164bace8f1614e3cdd1c8b808a87ce"><td class="memTemplItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a04164bace8f1614e3cdd1c8b808a87ce">vqrshrn</a> (const int64x2_t &amp;a)</td></tr>
<tr class="separator:a04164bace8f1614e3cdd1c8b808a87ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac48035cdc7e1b7b6e68b0f84bd15d433"><td class="memTemplParams" colspan="2">template&lt;int b&gt; </td></tr>
<tr class="memitem:ac48035cdc7e1b7b6e68b0f84bd15d433"><td class="memTemplItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac48035cdc7e1b7b6e68b0f84bd15d433">vqrshrn</a> (const uint64x2_t &amp;a)</td></tr>
<tr class="separator:ac48035cdc7e1b7b6e68b0f84bd15d433"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e03197379d65bf7f5c22077f18333da"><td class="memTemplParams" colspan="2">template&lt;int b, typename T &gt; </td></tr>
<tr class="memitem:a6e03197379d65bf7f5c22077f18333da"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_integral&lt; T &gt;::value &amp;&amp;std::is_signed&lt; T &gt;::value, int8x8_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6e03197379d65bf7f5c22077f18333da">vqrshrn_ex</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a6e03197379d65bf7f5c22077f18333da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbee47ff5600ce13f5f6e4741e0c2d56"><td class="memTemplParams" colspan="2">template&lt;int b, typename T &gt; </td></tr>
<tr class="memitem:acbee47ff5600ce13f5f6e4741e0c2d56"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_integral&lt; T &gt;::value &amp;&amp;!std::is_signed&lt; T &gt;::value, uint8x8_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acbee47ff5600ce13f5f6e4741e0c2d56">vqrshrn_ex</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:acbee47ff5600ce13f5f6e4741e0c2d56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45a3fd171b278eab9e393f1fa40d2f90"><td class="memTemplParams" colspan="2">template&lt;int b, typename T &gt; </td></tr>
<tr class="memitem:a45a3fd171b278eab9e393f1fa40d2f90"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_integral&lt; T &gt;::value &amp;&amp;std::is_signed&lt; T &gt;::value, int16x4_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a45a3fd171b278eab9e393f1fa40d2f90">vqrshrn_ex</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a45a3fd171b278eab9e393f1fa40d2f90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0569e98c172b22ab02223e49619e0738"><td class="memTemplParams" colspan="2">template&lt;int b, typename T &gt; </td></tr>
<tr class="memitem:a0569e98c172b22ab02223e49619e0738"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_integral&lt; T &gt;::value &amp;&amp;!std::is_signed&lt; T &gt;::value, uint16x4_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0569e98c172b22ab02223e49619e0738">vqrshrn_ex</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a0569e98c172b22ab02223e49619e0738"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53e93d049a90318096be498e355f4b45"><td class="memTemplParams" colspan="2">template&lt;int b, typename T &gt; </td></tr>
<tr class="memitem:a53e93d049a90318096be498e355f4b45"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_integral&lt; T &gt;::value &amp;&amp;std::is_signed&lt; T &gt;::value, int32x2_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a53e93d049a90318096be498e355f4b45">vqrshrn_ex</a> (const int64x2_t &amp;a)</td></tr>
<tr class="separator:a53e93d049a90318096be498e355f4b45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8969aa464755343434996477be5215b0"><td class="memTemplParams" colspan="2">template&lt;int b, typename T &gt; </td></tr>
<tr class="memitem:a8969aa464755343434996477be5215b0"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_integral&lt; T &gt;::value &amp;&amp;!std::is_signed&lt; T &gt;::value, uint32x2_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8969aa464755343434996477be5215b0">vqrshrn_ex</a> (const int64x2_t &amp;a)</td></tr>
<tr class="separator:a8969aa464755343434996477be5215b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab79161ad1deb12de294a220ae2b112d5"><td class="memTemplParams" colspan="2">template&lt;int b&gt; </td></tr>
<tr class="memitem:ab79161ad1deb12de294a220ae2b112d5"><td class="memTemplItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab79161ad1deb12de294a220ae2b112d5">vshr_n</a> (const uint8x8_t &amp;a)</td></tr>
<tr class="separator:ab79161ad1deb12de294a220ae2b112d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a513c4b70b1ef98fe65b62a8278040218"><td class="memTemplParams" colspan="2">template&lt;int b&gt; </td></tr>
<tr class="memitem:a513c4b70b1ef98fe65b62a8278040218"><td class="memTemplItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a513c4b70b1ef98fe65b62a8278040218">vshr_n</a> (const int8x8_t &amp;a)</td></tr>
<tr class="separator:a513c4b70b1ef98fe65b62a8278040218"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5894bf412cdefc06449a88c5c47c1cf9"><td class="memTemplParams" colspan="2">template&lt;int b&gt; </td></tr>
<tr class="memitem:a5894bf412cdefc06449a88c5c47c1cf9"><td class="memTemplItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5894bf412cdefc06449a88c5c47c1cf9">vshrq_n</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:a5894bf412cdefc06449a88c5c47c1cf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacf892ca109f9e2a9f5d967fc16b480d"><td class="memTemplParams" colspan="2">template&lt;int b&gt; </td></tr>
<tr class="memitem:aacf892ca109f9e2a9f5d967fc16b480d"><td class="memTemplItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aacf892ca109f9e2a9f5d967fc16b480d">vshrq_n</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:aacf892ca109f9e2a9f5d967fc16b480d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac57024ac39a9f06f1e5bb37807c0e362"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac57024ac39a9f06f1e5bb37807c0e362">vsin</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:ac57024ac39a9f06f1e5bb37807c0e362"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20fc7b01c3664a91c51b9f7e6d74d5f4"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a20fc7b01c3664a91c51b9f7e6d74d5f4">vsin</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a20fc7b01c3664a91c51b9f7e6d74d5f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7943ea9c1f74dc72c62d4cc3966a459"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">vstore</a> (uint8_t *ptr, uint8x8_t val)</td></tr>
<tr class="separator:ae7943ea9c1f74dc72c62d4cc3966a459"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc33d70f4aa4ba22e19177febcf67e3e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acc33d70f4aa4ba22e19177febcf67e3e">vstore</a> (uint8_t *ptr, uint8x8x2_t val)</td></tr>
<tr class="separator:acc33d70f4aa4ba22e19177febcf67e3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a256a55d40b65c0a2a22b3f64045716be"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a256a55d40b65c0a2a22b3f64045716be">vstore</a> (int8_t *ptr, int8x8_t val)</td></tr>
<tr class="separator:a256a55d40b65c0a2a22b3f64045716be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07e94869e50439dbe78060ec374939e7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a07e94869e50439dbe78060ec374939e7">vstore</a> (int8_t *ptr, int8x8x2_t val)</td></tr>
<tr class="separator:a07e94869e50439dbe78060ec374939e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2a18e2f73c6066ec4af6ff793dc854c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab2a18e2f73c6066ec4af6ff793dc854c">vstore</a> (uint16_t *ptr, uint16x4_t val)</td></tr>
<tr class="separator:ab2a18e2f73c6066ec4af6ff793dc854c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbd85567ac69618d6ac0fe06fb72af44"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acbd85567ac69618d6ac0fe06fb72af44">vstore</a> (int16_t *ptr, int16x4_t val)</td></tr>
<tr class="separator:acbd85567ac69618d6ac0fe06fb72af44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65e75ff8f4d05960e50761a5a58dd386"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a65e75ff8f4d05960e50761a5a58dd386">vstore</a> (uint32_t *ptr, uint32x2_t val)</td></tr>
<tr class="separator:a65e75ff8f4d05960e50761a5a58dd386"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01875212af1a5ab754c818415f8df88d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a01875212af1a5ab754c818415f8df88d">vstore</a> (int32_t *ptr, int32x2_t val)</td></tr>
<tr class="separator:a01875212af1a5ab754c818415f8df88d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad417a154c619b3568b9eb97fc475a20c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad417a154c619b3568b9eb97fc475a20c">vstore</a> (float *ptr, float32x2_t val)</td></tr>
<tr class="separator:ad417a154c619b3568b9eb97fc475a20c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23d6ee788a3fdc90cfe7455e6c567aa9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a23d6ee788a3fdc90cfe7455e6c567aa9">vstore</a> (uint8_t *ptr, uint8x16_t val)</td></tr>
<tr class="separator:a23d6ee788a3fdc90cfe7455e6c567aa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a18c21e0fa9aea77c824091f2121f53"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0a18c21e0fa9aea77c824091f2121f53">vstore</a> (int8_t *ptr, int8x16_t val)</td></tr>
<tr class="separator:a0a18c21e0fa9aea77c824091f2121f53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68347843dccc0dda3b8d96400782a1d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a68347843dccc0dda3b8d96400782a1d4">vstore</a> (uint16_t *ptr, uint16x8_t val)</td></tr>
<tr class="separator:a68347843dccc0dda3b8d96400782a1d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea6948f7d0bf41e8db92807708860a81"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aea6948f7d0bf41e8db92807708860a81">vstore</a> (int16_t *ptr, int16x8_t val)</td></tr>
<tr class="separator:aea6948f7d0bf41e8db92807708860a81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03ba7288457603cf531d82704aae5115"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a03ba7288457603cf531d82704aae5115">vstore</a> (uint32_t *ptr, uint32x4_t val)</td></tr>
<tr class="separator:a03ba7288457603cf531d82704aae5115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefc551995598c813e0e9bd5a0a32821b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aefc551995598c813e0e9bd5a0a32821b">vstore</a> (int32_t *ptr, int32x4_t val)</td></tr>
<tr class="separator:aefc551995598c813e0e9bd5a0a32821b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d16581b2d731ab0217ba7bd77b573d8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9d16581b2d731ab0217ba7bd77b573d8">vstore</a> (float *ptr, float32x4_t val)</td></tr>
<tr class="separator:a9d16581b2d731ab0217ba7bd77b573d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acae4ec59246f93845fa78120d83d7c1e"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">vsub</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:acae4ec59246f93845fa78120d83d7c1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace6024107f3c7f23e71fb8f562b8d5c7"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ace6024107f3c7f23e71fb8f562b8d5c7">vsub</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:ace6024107f3c7f23e71fb8f562b8d5c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a468586c56d3e28a0b1492191f93e3114"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a468586c56d3e28a0b1492191f93e3114">vsub</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a468586c56d3e28a0b1492191f93e3114"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19c9afcb37c1acbc0ea0dca7d69cfecd"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a19c9afcb37c1acbc0ea0dca7d69cfecd">vsub</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a19c9afcb37c1acbc0ea0dca7d69cfecd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a882d823737e7f02891f551b327f09018"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a882d823737e7f02891f551b327f09018">vsub</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a882d823737e7f02891f551b327f09018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ace7ee33e6139e6f4ff6b957491873e"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0ace7ee33e6139e6f4ff6b957491873e">vsub</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a0ace7ee33e6139e6f4ff6b957491873e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9929a9e0155db97ec6ace69ca9aa9285"><td class="memItemLeft" align="right" valign="top">uint64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9929a9e0155db97ec6ace69ca9aa9285">vsub</a> (const uint64x1_t &amp;a, const uint64x1_t &amp;b)</td></tr>
<tr class="separator:a9929a9e0155db97ec6ace69ca9aa9285"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55b34f6398f9cd94e56726cecceda89c"><td class="memItemLeft" align="right" valign="top">int64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a55b34f6398f9cd94e56726cecceda89c">vsub</a> (const int64x1_t &amp;a, const int64x1_t &amp;b)</td></tr>
<tr class="separator:a55b34f6398f9cd94e56726cecceda89c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad4cc552d226849f40a3497d26210462"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aad4cc552d226849f40a3497d26210462">vsub</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:aad4cc552d226849f40a3497d26210462"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99988978e94a874acdba8d9c207a2ddc"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a99988978e94a874acdba8d9c207a2ddc">vsub</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a99988978e94a874acdba8d9c207a2ddc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34df49b41bb7529a2f645b8585b011a4"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a34df49b41bb7529a2f645b8585b011a4">vsub</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:a34df49b41bb7529a2f645b8585b011a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae7a048314067322874e692c4395b47d"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aae7a048314067322874e692c4395b47d">vsub</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:aae7a048314067322874e692c4395b47d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52c4e22cefb4dfaacd4cc37abf11737b"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a52c4e22cefb4dfaacd4cc37abf11737b">vsub</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a52c4e22cefb4dfaacd4cc37abf11737b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a381c61234684f00b9864d869c493977c"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a381c61234684f00b9864d869c493977c">vsub</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a381c61234684f00b9864d869c493977c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a599bbc343ffe0caccd7bc63f704ed0bf"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a599bbc343ffe0caccd7bc63f704ed0bf">vsub</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a599bbc343ffe0caccd7bc63f704ed0bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c6f1fc5cee6436ff4ccce4d621156b3"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2c6f1fc5cee6436ff4ccce4d621156b3">vsub</a> (const uint64x2_t &amp;a, const uint64x2_t &amp;b)</td></tr>
<tr class="separator:a2c6f1fc5cee6436ff4ccce4d621156b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa55414dc3d6ed3856a2c843eed3e2eb5"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa55414dc3d6ed3856a2c843eed3e2eb5">vsub</a> (const int64x2_t &amp;a, const int64x2_t &amp;b)</td></tr>
<tr class="separator:aa55414dc3d6ed3856a2c843eed3e2eb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e554b12444e93f60796f1762e67edd7"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8e554b12444e93f60796f1762e67edd7">vsub</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a8e554b12444e93f60796f1762e67edd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e5f2a88728fcb05b92a1291fa7fd7ea"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5e5f2a88728fcb05b92a1291fa7fd7ea">vqsub</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a5e5f2a88728fcb05b92a1291fa7fd7ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a758528af603105944d45c8dea4e7da"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6a758528af603105944d45c8dea4e7da">vqsub</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a6a758528af603105944d45c8dea4e7da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad98fadaf1b9de13fa7a1dac70bd44121"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad98fadaf1b9de13fa7a1dac70bd44121">vqsub</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:ad98fadaf1b9de13fa7a1dac70bd44121"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4c18726cb2a16695dca5a4fb2eb80d4"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac4c18726cb2a16695dca5a4fb2eb80d4">vqsub</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:ac4c18726cb2a16695dca5a4fb2eb80d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b62b4d3615e30f52e09d06928e69856"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5b62b4d3615e30f52e09d06928e69856">vqsub</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a5b62b4d3615e30f52e09d06928e69856"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4191a8767eadbce568684fc1f75a3d33"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4191a8767eadbce568684fc1f75a3d33">vqsub</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a4191a8767eadbce568684fc1f75a3d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1fc018d68814040da8d139381b6842f"><td class="memItemLeft" align="right" valign="top">uint64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad1fc018d68814040da8d139381b6842f">vqsub</a> (const uint64x1_t &amp;a, const uint64x1_t &amp;b)</td></tr>
<tr class="separator:ad1fc018d68814040da8d139381b6842f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1227356292a78dfaf502ee07f1a0f41f"><td class="memItemLeft" align="right" valign="top">int64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1227356292a78dfaf502ee07f1a0f41f">vqsub</a> (const int64x1_t &amp;a, const int64x1_t &amp;b)</td></tr>
<tr class="separator:a1227356292a78dfaf502ee07f1a0f41f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48b2dc37ac9b6c1ef0cebed4a4d123ce"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a48b2dc37ac9b6c1ef0cebed4a4d123ce">vqsub</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:a48b2dc37ac9b6c1ef0cebed4a4d123ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d58243035c990f12641e8f3c250e411"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2d58243035c990f12641e8f3c250e411">vqsub</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a2d58243035c990f12641e8f3c250e411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a360674343289270b10428881bfa10aed"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a360674343289270b10428881bfa10aed">vqsub</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:a360674343289270b10428881bfa10aed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebd1594c71be240939a1b59851743c3d"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aebd1594c71be240939a1b59851743c3d">vqsub</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:aebd1594c71be240939a1b59851743c3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d4fb387eac336f22a4a65ba1bec409f"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4d4fb387eac336f22a4a65ba1bec409f">vqsub</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a4d4fb387eac336f22a4a65ba1bec409f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64890c70fe3242e87eb81145a1057642"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a64890c70fe3242e87eb81145a1057642">vqsub</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a64890c70fe3242e87eb81145a1057642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab66835fc01f4cce8a44813e07f2c4938"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab66835fc01f4cce8a44813e07f2c4938">vqsub</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:ab66835fc01f4cce8a44813e07f2c4938"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d1800d5ef8636858acba37cdef50afa"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9d1800d5ef8636858acba37cdef50afa">vqsub</a> (const uint64x2_t &amp;a, const uint64x2_t &amp;b)</td></tr>
<tr class="separator:a9d1800d5ef8636858acba37cdef50afa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1460bae722b17b5fd41ccc42d6434e68"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1460bae722b17b5fd41ccc42d6434e68">vqsub</a> (const int64x2_t &amp;a, const int64x2_t &amp;b)</td></tr>
<tr class="separator:a1460bae722b17b5fd41ccc42d6434e68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62d239b3d75fe5281ff199561767fd43"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a62d239b3d75fe5281ff199561767fd43">vqsub</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a62d239b3d75fe5281ff199561767fd43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3f7b591c3d178847a92ea92c4bb1d43"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af3f7b591c3d178847a92ea92c4bb1d43">vsubl</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:af3f7b591c3d178847a92ea92c4bb1d43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c6da7a8f8b3aa775ac705568fe2a12d"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8c6da7a8f8b3aa775ac705568fe2a12d">vsubl</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a8c6da7a8f8b3aa775ac705568fe2a12d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72de68cdbeaae862e5e106658c82107f"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a72de68cdbeaae862e5e106658c82107f">vsubl</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a72de68cdbeaae862e5e106658c82107f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a236e5ed9e7f4944ba5d389dff57857c2"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a236e5ed9e7f4944ba5d389dff57857c2">vsubl</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a236e5ed9e7f4944ba5d389dff57857c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af439af3f74e5114cd71950ec66ec6460"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af439af3f74e5114cd71950ec66ec6460">vsubl</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:af439af3f74e5114cd71950ec66ec6460"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a72a6f69c0c829f5c82212683832b41"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6a72a6f69c0c829f5c82212683832b41">vsubl</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a6a72a6f69c0c829f5c82212683832b41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbccd6a89f4cdd679773ce30f7959db0"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">vtanh</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:acbccd6a89f4cdd679773ce30f7959db0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ce3371ad153ba79ace2475e7832b81e"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1ce3371ad153ba79ace2475e7832b81e">vtbl</a> (const uint8x8x2_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a1ce3371ad153ba79ace2475e7832b81e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a230ea3527f48b002a8ea9ea08aa840"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0a230ea3527f48b002a8ea9ea08aa840">vtbl</a> (const int8x8x2_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a0a230ea3527f48b002a8ea9ea08aa840"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4358b7409261f013124bd6068aeee79"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac4358b7409261f013124bd6068aeee79">add_sat</a> (const uint8_t &amp;a, const uint8_t &amp;b)</td></tr>
<tr class="separator:ac4358b7409261f013124bd6068aeee79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a782c9af673065e72ac33de6a95cb49"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8a782c9af673065e72ac33de6a95cb49">add_sat</a> (const int16_t &amp;a, const int16_t &amp;b)</td></tr>
<tr class="separator:a8a782c9af673065e72ac33de6a95cb49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80b7f0b35b696ae041606d5c73e746b1"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a80b7f0b35b696ae041606d5c73e746b1">add_sat</a> (const int32_t &amp;a, const int32_t &amp;b)</td></tr>
<tr class="separator:a80b7f0b35b696ae041606d5c73e746b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a350f25870874602bdc7de9630397bdd0"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a350f25870874602bdc7de9630397bdd0">add_sat</a> (const float &amp;a, const float &amp;b)</td></tr>
<tr class="separator:a350f25870874602bdc7de9630397bdd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1737829276757f7640dd77e6b6c8d1f5"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1737829276757f7640dd77e6b6c8d1f5">sub_sat</a> (const uint8_t &amp;a, const uint8_t &amp;b)</td></tr>
<tr class="separator:a1737829276757f7640dd77e6b6c8d1f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a97cc45eb837e19110c5e906544e77c"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1a97cc45eb837e19110c5e906544e77c">sub_sat</a> (const int16_t &amp;a, const int16_t &amp;b)</td></tr>
<tr class="separator:a1a97cc45eb837e19110c5e906544e77c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d660241d925f27ef00513e59a7a027c"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5d660241d925f27ef00513e59a7a027c">sub_sat</a> (const int32_t &amp;a, const int32_t &amp;b)</td></tr>
<tr class="separator:a5d660241d925f27ef00513e59a7a027c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aed7b31489859c7ff5c5f5695a88a58"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2aed7b31489859c7ff5c5f5695a88a58">sub_sat</a> (const float &amp;a, const float &amp;b)</td></tr>
<tr class="separator:a2aed7b31489859c7ff5c5f5695a88a58"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a350f25870874602bdc7de9630397bdd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a350f25870874602bdc7de9630397bdd0">&#9670;&nbsp;</a></span>add_sat() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float arm_compute::wrapper::add_sat </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="scalar_2add_8h_source.xhtml#l00054">54</a> of file <a class="el" href="scalar_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="comment">// No notion of saturation exists in floating point</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> a + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

</div>
</div>
<a id="a8a782c9af673065e72ac33de6a95cb49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a782c9af673065e72ac33de6a95cb49">&#9670;&nbsp;</a></span>add_sat() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16_t arm_compute::wrapper::add_sat </td>
          <td>(</td>
          <td class="paramtype">const int16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="scalar_2add_8h_source.xhtml#l00040">40</a> of file <a class="el" href="scalar_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">const</span> int16x4_t va = {a, 0, 0, 0};</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">const</span> int16x4_t vb = {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, 0, 0, 0};</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> vget_lane_s16(vqadd_s16(va, vb), 0);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

</div>
</div>
<a id="a80b7f0b35b696ae041606d5c73e746b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80b7f0b35b696ae041606d5c73e746b1">&#9670;&nbsp;</a></span>add_sat() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32_t arm_compute::wrapper::add_sat </td>
          <td>(</td>
          <td class="paramtype">const int32_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="scalar_2add_8h_source.xhtml#l00047">47</a> of file <a class="el" href="scalar_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> int32x2_t va = {a, 0};</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">const</span> int32x2_t vb = {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, 0};</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">return</span> vget_lane_s32(vqadd_s32(va, vb), 0);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

</div>
</div>
<a id="ac4358b7409261f013124bd6068aeee79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4358b7409261f013124bd6068aeee79">&#9670;&nbsp;</a></span>add_sat() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t arm_compute::wrapper::add_sat </td>
          <td>(</td>
          <td class="paramtype">const uint8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="scalar_2add_8h_source.xhtml#l00033">33</a> of file <a class="el" href="scalar_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keyword">const</span> uint8x8_t va = {a, 0, 0, 0, 0, 0, 0, 0};</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">const</span> uint8x8_t vb = {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, 0, 0, 0, 0, 0, 0, 0};</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">return</span> vget_lane_u8(vqadd_u8(va, vb), 0);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::add_same_neon()</a>.</p>

</div>
</div>
<a id="a2aed7b31489859c7ff5c5f5695a88a58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2aed7b31489859c7ff5c5f5695a88a58">&#9670;&nbsp;</a></span>sub_sat() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float arm_compute::wrapper::sub_sat </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="scalar_2sub_8h_source.xhtml#l00054">54</a> of file <a class="el" href="scalar_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="comment">// No notion of saturation exists in floating point</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> a - <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

</div>
</div>
<a id="a1a97cc45eb837e19110c5e906544e77c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a97cc45eb837e19110c5e906544e77c">&#9670;&nbsp;</a></span>sub_sat() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16_t arm_compute::wrapper::sub_sat </td>
          <td>(</td>
          <td class="paramtype">const int16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="scalar_2sub_8h_source.xhtml#l00040">40</a> of file <a class="el" href="scalar_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">const</span> int16x4_t va = {a, 0, 0, 0};</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">const</span> int16x4_t vb = {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, 0, 0, 0};</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> vget_lane_s16(vqsub_s16(va, vb), 0);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

</div>
</div>
<a id="a5d660241d925f27ef00513e59a7a027c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d660241d925f27ef00513e59a7a027c">&#9670;&nbsp;</a></span>sub_sat() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32_t arm_compute::wrapper::sub_sat </td>
          <td>(</td>
          <td class="paramtype">const int32_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="scalar_2sub_8h_source.xhtml#l00047">47</a> of file <a class="el" href="scalar_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> int32x2_t va = {a, 0};</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">const</span> int32x2_t vb = {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, 0};</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">return</span> vget_lane_s32(vqsub_s32(va, vb), 0);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

</div>
</div>
<a id="a1737829276757f7640dd77e6b6c8d1f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1737829276757f7640dd77e6b6c8d1f5">&#9670;&nbsp;</a></span>sub_sat() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t arm_compute::wrapper::sub_sat </td>
          <td>(</td>
          <td class="paramtype">const uint8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="scalar_2sub_8h_source.xhtml#l00033">33</a> of file <a class="el" href="scalar_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keyword">const</span> uint8x8_t va = {a, 0, 0, 0, 0, 0, 0, 0};</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">const</span> uint8x8_t vb = {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, 0, 0, 0, 0, 0, 0, 0};</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">return</span> vget_lane_u8(vqsub_u8(va, vb), 0);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

<p class="reference">Referenced by <a class="el" href="sub_2neon_2impl_8h_source.xhtml#l00042">arm_compute::cpu::sub_same_neon()</a>.</p>

</div>
</div>
<a id="af39453b73d1958aa8a0ea58ca86efaff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af39453b73d1958aa8a0ea58ca86efaff">&#9670;&nbsp;</a></span>vabs() <span class="overload">[1/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vabs </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00049">49</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="ab935e0aae10321cfed3ff126ec52aa86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab935e0aae10321cfed3ff126ec52aa86">&#9670;&nbsp;</a></span>vabs() <span class="overload">[2/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vabs </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00057">57</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="a484e302d4944d7edcb7b206690251474"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a484e302d4944d7edcb7b206690251474">&#9670;&nbsp;</a></span>vabs() <span class="overload">[3/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vabs </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00047">47</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="a054ba55607f82d2bcee3a9bc5d3a7251"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a054ba55607f82d2bcee3a9bc5d3a7251">&#9670;&nbsp;</a></span>vabs() <span class="overload">[4/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vabs </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00055">55</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="a27386b9187cc0bba9c21769c0731a72a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27386b9187cc0bba9c21769c0731a72a">&#9670;&nbsp;</a></span>vabs() <span class="overload">[5/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vabs </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00048">48</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="aaa400d422f18b0210e84a04c03cb4ffa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa400d422f18b0210e84a04c03cb4ffa">&#9670;&nbsp;</a></span>vabs() <span class="overload">[6/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vabs </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00056">56</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="ad8275425767f39b246862f11cef3328d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8275425767f39b246862f11cef3328d">&#9670;&nbsp;</a></span>vabs() <span class="overload">[7/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vabs </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00054">54</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="a4c1fe3150ad2ca29262dc6403605e65c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c1fe3150ad2ca29262dc6403605e65c">&#9670;&nbsp;</a></span>vabs() <span class="overload">[8/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vabs </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00046">46</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00062">arm_compute::cpu::elementwise_op_imp()</a>, and <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>.</p>

</div>
</div>
<a id="a04549b1ddb03008ac1c0ff3fc18ff335"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04549b1ddb03008ac1c0ff3fc18ff335">&#9670;&nbsp;</a></span>vadd() <span class="overload">[1/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00047">47</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5facaa0c056dc73dfa6a49cde91240c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5facaa0c056dc73dfa6a49cde91240c4">&#9670;&nbsp;</a></span>vadd() <span class="overload">[2/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00060">60</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a51ed0d744f6dca340bc175241a2653d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51ed0d744f6dca340bc175241a2653d4">&#9670;&nbsp;</a></span>vadd() <span class="overload">[3/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00042">42</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a7b3548ff67e64b1b559f005728643115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b3548ff67e64b1b559f005728643115">&#9670;&nbsp;</a></span>vadd() <span class="overload">[4/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00055">55</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="adbc3286703ea68773578b2601a3fd797"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbc3286703ea68773578b2601a3fd797">&#9670;&nbsp;</a></span>vadd() <span class="overload">[5/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00044">44</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae6e61403aa3b1ea42cb8623235a060d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6e61403aa3b1ea42cb8623235a060d2">&#9670;&nbsp;</a></span>vadd() <span class="overload">[6/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00057">57</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aa295c4e77f9e2ccd31f0fa815a9e4231"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa295c4e77f9e2ccd31f0fa815a9e4231">&#9670;&nbsp;</a></span>vadd() <span class="overload">[7/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x1_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00046">46</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a85bff4b042de6d354194fd5faec611b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85bff4b042de6d354194fd5faec611b2">&#9670;&nbsp;</a></span>vadd() <span class="overload">[8/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00059">59</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a00611d18ac6548c52d5f3e5eec52f3fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00611d18ac6548c52d5f3e5eec52f3fc">&#9670;&nbsp;</a></span>vadd() <span class="overload">[9/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00053">53</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a7c573cf41e883d4d37bd8dff8fcbd0f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c573cf41e883d4d37bd8dff8fcbd0f2">&#9670;&nbsp;</a></span>vadd() <span class="overload">[10/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00040">40</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a73d9b74710e651e7cdbf4cfafb944d8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73d9b74710e651e7cdbf4cfafb944d8a">&#9670;&nbsp;</a></span>vadd() <span class="overload">[11/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00041">41</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a001774f1457ef953dce3cbfd7ca3a720"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a001774f1457ef953dce3cbfd7ca3a720">&#9670;&nbsp;</a></span>vadd() <span class="overload">[12/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00054">54</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a1de26ff774cac4d14a9a99760139a379"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1de26ff774cac4d14a9a99760139a379">&#9670;&nbsp;</a></span>vadd() <span class="overload">[13/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00043">43</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a38f13009919fa0bb1bf096aca2fc2b52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38f13009919fa0bb1bf096aca2fc2b52">&#9670;&nbsp;</a></span>vadd() <span class="overload">[14/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00056">56</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a44649f1c855e68e4cab5f7f72daeb30b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44649f1c855e68e4cab5f7f72daeb30b">&#9670;&nbsp;</a></span>vadd() <span class="overload">[15/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x1_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00045">45</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4be8554b097bb191efca07c064500b0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4be8554b097bb191efca07c064500b0a">&#9670;&nbsp;</a></span>vadd() <span class="overload">[16/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00058">58</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a08ed369986c867b850a74635764e3764"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08ed369986c867b850a74635764e3764">&#9670;&nbsp;</a></span>vadd() <span class="overload">[17/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00052">52</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a1894e825a225f3b2013f594cbffdae73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1894e825a225f3b2013f594cbffdae73">&#9670;&nbsp;</a></span>vadd() <span class="overload">[18/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00039">39</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{                                                  \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::add_same_neon()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00039">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00036">arm_compute::cpu::batch_normalization_nchw()</a>, <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00114">arm_compute::cpu::depthwise_loop_multiplier1_fp()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00154">arm_compute::cpu::fused_batch_normalization_conv()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00266">arm_compute::cpu::fused_batch_normalization_dwc_nchw()</a>, <a class="el" href="fuse__batch__normalization_2nhwc_2neon_2impl_8h_source.xhtml#l00036">arm_compute::cpu::fused_batch_normalization_dwc_nhwc()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::mean_stddev_normalization()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qsymm16_activation()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00171">logistic&lt; T, S &gt;::operator()()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00043">arm_compute::cpu::vector_float_norm()</a>, and <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00035">arm_compute::cpu::vector_float_sum()</a>.</p>

</div>
</div>
<a id="a4be37f0a0e879f36b80265d6df48b871"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4be37f0a0e879f36b80265d6df48b871">&#9670;&nbsp;</a></span>vaddl() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vaddl </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00125">125</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a44d67b33f2fb02b3b7f8dd09406d6caa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44d67b33f2fb02b3b7f8dd09406d6caa">&#9670;&nbsp;</a></span>vaddl() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vaddl </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00127">127</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a412bc86708543e9b3a2097b383bd923c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a412bc86708543e9b3a2097b383bd923c">&#9670;&nbsp;</a></span>vaddl() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vaddl </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00123">123</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a07b983e43fe318e47497d08ff33f4641"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07b983e43fe318e47497d08ff33f4641">&#9670;&nbsp;</a></span>vaddl() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vaddl </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00124">124</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="af8ea760ecff5021a9791fde1914e998b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8ea760ecff5021a9791fde1914e998b">&#9670;&nbsp;</a></span>vaddl() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vaddl </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00126">126</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a297a9b20b8f2244b28ba43ffe6db7112"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a297a9b20b8f2244b28ba43ffe6db7112">&#9670;&nbsp;</a></span>vaddl() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vaddl </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00122">122</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aaa90fec328b2dfe2d401434c53cfb40f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa90fec328b2dfe2d401434c53cfb40f">&#9670;&nbsp;</a></span>vaddw() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vaddw </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00108">108</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0fbc189b385c8ae600b10a133a7eead5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fbc189b385c8ae600b10a133a7eead5">&#9670;&nbsp;</a></span>vaddw() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vaddw </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00110">110</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae94dc819b7d614de3fe69104b2933127"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae94dc819b7d614de3fe69104b2933127">&#9670;&nbsp;</a></span>vaddw() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vaddw </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00112">112</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aa58ed08eab6c63a3afd3fe48ad06a8fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa58ed08eab6c63a3afd3fe48ad06a8fa">&#9670;&nbsp;</a></span>vaddw() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vaddw </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00107">107</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{                                                  \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>, and <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00428">arm_compute::detail::single_convolve_3x3_dilation()</a>.</p>

</div>
</div>
<a id="a807bb9a31778033dad7160708b5dc34e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a807bb9a31778033dad7160708b5dc34e">&#9670;&nbsp;</a></span>vaddw() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vaddw </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00109">109</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a71dafd2b464c557b576244f9da4d5d93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71dafd2b464c557b576244f9da4d5d93">&#9670;&nbsp;</a></span>vaddw() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vaddw </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00111">111</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5bfe76fc6cc188b7e32c6944772f7125"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bfe76fc6cc188b7e32c6944772f7125">&#9670;&nbsp;</a></span>vand() <span class="overload">[1/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00042">42</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a9601217868077e3ecf9c2dab5e8d7da2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9601217868077e3ecf9c2dab5e8d7da2">&#9670;&nbsp;</a></span>vand() <span class="overload">[2/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00051">51</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="aa12949a2a2d6873da017181f7941232f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa12949a2a2d6873da017181f7941232f">&#9670;&nbsp;</a></span>vand() <span class="overload">[3/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00044">44</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a1f5ad185828729587ebd0356cd0ca275"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f5ad185828729587ebd0356cd0ca275">&#9670;&nbsp;</a></span>vand() <span class="overload">[4/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00053">53</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a2865027ccc7e291a55d03e18a80f2341"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2865027ccc7e291a55d03e18a80f2341">&#9670;&nbsp;</a></span>vand() <span class="overload">[5/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x1_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00046">46</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="ae36ea08250992deca7c68f523fb95842"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae36ea08250992deca7c68f523fb95842">&#9670;&nbsp;</a></span>vand() <span class="overload">[6/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00055">55</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a09aa0f0336703a4ac289525882f81bc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09aa0f0336703a4ac289525882f81bc5">&#9670;&nbsp;</a></span>vand() <span class="overload">[7/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00049">49</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="ace696b022d783c4a3e84f6aa23b9ec72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace696b022d783c4a3e84f6aa23b9ec72">&#9670;&nbsp;</a></span>vand() <span class="overload">[8/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00040">40</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a364a30327f38b955216af9b5ac4367db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a364a30327f38b955216af9b5ac4367db">&#9670;&nbsp;</a></span>vand() <span class="overload">[9/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00041">41</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="ac36121fb64569e4d6b12eea9473e41a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac36121fb64569e4d6b12eea9473e41a3">&#9670;&nbsp;</a></span>vand() <span class="overload">[10/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00050">50</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a17104b7f34998fcd36ad45f0594678ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17104b7f34998fcd36ad45f0594678ab">&#9670;&nbsp;</a></span>vand() <span class="overload">[11/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00043">43</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a770a458f188ed6e66be390082eca8aed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a770a458f188ed6e66be390082eca8aed">&#9670;&nbsp;</a></span>vand() <span class="overload">[12/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00052">52</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a88f7ebc42b23820a9ba0b8ac05d70d37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88f7ebc42b23820a9ba0b8ac05d70d37">&#9670;&nbsp;</a></span>vand() <span class="overload">[13/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x1_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00045">45</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a2913668b4791bdc393393ca60a078a7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2913668b4791bdc393393ca60a078a7f">&#9670;&nbsp;</a></span>vand() <span class="overload">[14/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00054">54</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a42a53b1fb8523ad84bb686cf83b2eeff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42a53b1fb8523ad84bb686cf83b2eeff">&#9670;&nbsp;</a></span>vand() <span class="overload">[15/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00048">48</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="ac071623f14587f7cc6c4aea757d4378b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac071623f14587f7cc6c4aea757d4378b">&#9670;&nbsp;</a></span>vand() <span class="overload">[16/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00039">39</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00045">arm_compute::cpu::mask_float_vector()</a>.</p>

</div>
</div>
<a id="a8d3343de117c4813f5d4abb2e3e3c03e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d3343de117c4813f5d4abb2e3e3c03e">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00042">42</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="ab2a026522ed9848e50efc0d0c1c983d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2a026522ed9848e50efc0d0c1c983d2">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00041">41</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="a5ebe0d613e398016f0314e60a2ff39bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ebe0d613e398016f0314e60a2ff39bb">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00053">53</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="ae31efd18eb1c63c27a020ffcf0b74b53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae31efd18eb1c63c27a020ffcf0b74b53">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00052">52</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="a6e9ab5ba6651382da60a866eb25c2a21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e9ab5ba6651382da60a866eb25c2a21">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00045">45</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="a4f0ea6d9c08f2754df5dfd3b1a2cadfc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f0ea6d9c08f2754df5dfd3b1a2cadfc">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00044">44</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="aff81fbbae785bed39470fd5b7bd84f74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff81fbbae785bed39470fd5b7bd84f74">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00043">43</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="a534d9f21641f05eed5e896ad40e01e19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a534d9f21641f05eed5e896ad40e01e19">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00056">56</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="a7c7d27ea76fe8e31e3e0b29f8b3be4ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c7d27ea76fe8e31e3e0b29f8b3be4ac">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00055">55</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="ab65be4b474b777b1bd7c384af4113f54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab65be4b474b777b1bd7c384af4113f54">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00054">54</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="a944da63e855c56b8b7e22df3c253f674"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a944da63e855c56b8b7e22df3c253f674">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00051">51</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="a47c89dc854078a34bda04d7b23db1f3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47c89dc854078a34bda04d7b23db1f3c">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00050">50</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="a1d67e14ffa7491f6e7855ca784f8bc1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d67e14ffa7491f6e7855ca784f8bc1c">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00040">40</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

</div>
</div>
<a id="a8e5924674eee0f441d54eb75d656700f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e5924674eee0f441d54eb75d656700f">&#9670;&nbsp;</a></span>vbsl() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vbsl </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bsl_8h_source.xhtml#l00039">39</a> of file <a class="el" href="bsl_8h_source.xhtml">bsl.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00034">arm_compute::cpu::elementwise_arithm_op()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, and <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00041">arm_compute::cpu::select_op()</a>.</p>

</div>
</div>
<a id="aea0132b50c5f202b9d5da3c2da3e04c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea0132b50c5f202b9d5da3c2da3e04c1">&#9670;&nbsp;</a></span>vceq() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00045">45</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="a84c7602398a05f06678734d051d4c0a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84c7602398a05f06678734d051d4c0a8">&#9670;&nbsp;</a></span>vceq() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00056">56</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="a6fea33664b226a254510c31de8b42787"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fea33664b226a254510c31de8b42787">&#9670;&nbsp;</a></span>vceq() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00042">42</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="a9e2ed0c96cb4d10bbaf41d4e3e14cdd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e2ed0c96cb4d10bbaf41d4e3e14cdd3">&#9670;&nbsp;</a></span>vceq() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00053">53</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="ab69f1749451b264048d3fb30e6fdf562"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab69f1749451b264048d3fb30e6fdf562">&#9670;&nbsp;</a></span>vceq() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00044">44</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="ae4739dd4ecb08dc6585170498d31bb40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4739dd4ecb08dc6585170498d31bb40">&#9670;&nbsp;</a></span>vceq() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00055">55</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="a3097ab044eb611fd19da4376fb3eabff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3097ab044eb611fd19da4376fb3eabff">&#9670;&nbsp;</a></span>vceq() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00051">51</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="aa7eecdf642e1d3ce41a63c170d5a641a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7eecdf642e1d3ce41a63c170d5a641a">&#9670;&nbsp;</a></span>vceq() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00040">40</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="a90c57b01e394acf5a813e3535070c724"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90c57b01e394acf5a813e3535070c724">&#9670;&nbsp;</a></span>vceq() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00041">41</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="a136b782f75e2fa44ab5aad96d7e05e86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a136b782f75e2fa44ab5aad96d7e05e86">&#9670;&nbsp;</a></span>vceq() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00052">52</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="ac71b5829594d3bcaa593293e0e64fd8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac71b5829594d3bcaa593293e0e64fd8f">&#9670;&nbsp;</a></span>vceq() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00043">43</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="ad44d06b749b9821ef909a498ee939416"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad44d06b749b9821ef909a498ee939416">&#9670;&nbsp;</a></span>vceq() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00054">54</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="a9c4302ad9250f68a9ad28658a23232b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c4302ad9250f68a9ad28658a23232b6">&#9670;&nbsp;</a></span>vceq() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00050">50</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

</div>
</div>
<a id="aa7ccd655f600847f9d471604ed47e810"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7ccd655f600847f9d471604ed47e810">&#9670;&nbsp;</a></span>vceq() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vceq </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ceq_8h_source.xhtml#l00039">39</a> of file <a class="el" href="ceq_8h_source.xhtml">ceq.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00343">arm_compute::cpu::elementwise_comp_op()</a>, and <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>.</p>

</div>
</div>
<a id="ac447f541ba304b3dd139c59ab6fbf895"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac447f541ba304b3dd139c59ab6fbf895">&#9670;&nbsp;</a></span>vcge() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00045">45</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="a823281ae3735f04eed2a82e9ec87acc3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a823281ae3735f04eed2a82e9ec87acc3">&#9670;&nbsp;</a></span>vcge() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00056">56</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="adc93fc63908d04bf8bfb29a3206b6526"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc93fc63908d04bf8bfb29a3206b6526">&#9670;&nbsp;</a></span>vcge() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00042">42</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="aba7f10b6a312bc77326c8c179d54fbba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba7f10b6a312bc77326c8c179d54fbba">&#9670;&nbsp;</a></span>vcge() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00053">53</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="aed06c8595807184acaeac3075dc9495a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed06c8595807184acaeac3075dc9495a">&#9670;&nbsp;</a></span>vcge() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00044">44</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="a7288c2585a571dc1c76facf725f1cc96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7288c2585a571dc1c76facf725f1cc96">&#9670;&nbsp;</a></span>vcge() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00055">55</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="aeb188018f0f750e7b0146cf0e4e8f889"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb188018f0f750e7b0146cf0e4e8f889">&#9670;&nbsp;</a></span>vcge() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00051">51</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="a8495f1866e7b0cec7c408608e1e45a7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8495f1866e7b0cec7c408608e1e45a7b">&#9670;&nbsp;</a></span>vcge() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00040">40</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="a9f97e216d76733d97b278af3234ff077"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f97e216d76733d97b278af3234ff077">&#9670;&nbsp;</a></span>vcge() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00041">41</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="a5f2d1df8cd90eb7c2cd18b8bcddb0f2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f2d1df8cd90eb7c2cd18b8bcddb0f2a">&#9670;&nbsp;</a></span>vcge() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00052">52</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="abc9261bb4aa1452020b79ce918c07369"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc9261bb4aa1452020b79ce918c07369">&#9670;&nbsp;</a></span>vcge() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00043">43</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="a773ec4965160a27a9ca5aca6dd9d309b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a773ec4965160a27a9ca5aca6dd9d309b">&#9670;&nbsp;</a></span>vcge() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00054">54</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="ab249f24fb4bdb558c0fe7b05059489d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab249f24fb4bdb558c0fe7b05059489d4">&#9670;&nbsp;</a></span>vcge() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00050">50</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

</div>
</div>
<a id="a1f777df8db31568a3436995df958714c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f777df8db31568a3436995df958714c">&#9670;&nbsp;</a></span>vcge() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vcge </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cge_8h_source.xhtml#l00039">39</a> of file <a class="el" href="cge_8h_source.xhtml">cge.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00343">arm_compute::cpu::elementwise_comp_op()</a>, and <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>.</p>

</div>
</div>
<a id="a8209ea6835bd064d2465f6011478aa25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8209ea6835bd064d2465f6011478aa25">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00045">45</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="a1386cfcfc641b29ab70221552e99e36d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1386cfcfc641b29ab70221552e99e36d">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00056">56</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="a96e5521a7f298420945cce5c15f41e08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96e5521a7f298420945cce5c15f41e08">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00042">42</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="af273d8dbdf46749c29ec45f1e17a8311"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af273d8dbdf46749c29ec45f1e17a8311">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00053">53</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="a8a2952af3b1ef3386c8b6a01c2533bfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a2952af3b1ef3386c8b6a01c2533bfe">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00044">44</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="a0e6106b8bb67299f1a8e89111d12de59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e6106b8bb67299f1a8e89111d12de59">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00055">55</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="ab91bb6fea68f22bbfb9b6104674c682a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab91bb6fea68f22bbfb9b6104674c682a">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00051">51</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="ab4eee4b00c664f1efba03321b2d4c947"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4eee4b00c664f1efba03321b2d4c947">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00040">40</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="a5b659245eca180dcfcc57e75438a11d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b659245eca180dcfcc57e75438a11d9">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00041">41</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="a2ab6755d5dc8868470a81ed1ae10ec56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ab6755d5dc8868470a81ed1ae10ec56">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00052">52</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="a812e0b95bd587b9a75fb9b78a925ebd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a812e0b95bd587b9a75fb9b78a925ebd8">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00043">43</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="a828dc9fb08c9f630de36b40f2d46f603"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a828dc9fb08c9f630de36b40f2d46f603">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00054">54</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="afe2118060eaf61848b82bbb7bc818c47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe2118060eaf61848b82bbb7bc818c47">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00050">50</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

</div>
</div>
<a id="a7eedba29396b0db728bffdf5f202d85c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7eedba29396b0db728bffdf5f202d85c">&#9670;&nbsp;</a></span>vcgt() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vcgt </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cgt_8h_source.xhtml#l00039">39</a> of file <a class="el" href="cgt_8h_source.xhtml">cgt.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00034">arm_compute::cpu::elementwise_arithm_op()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00343">arm_compute::cpu::elementwise_comp_op()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00106">arm_compute::cpu::select_op_16()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00123">arm_compute::cpu::select_op_32()</a>, and <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00089">arm_compute::cpu::select_op_8()</a>.</p>

</div>
</div>
<a id="a4d0a0116ff87b5dd3f2368c344a6f6b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d0a0116ff87b5dd3f2368c344a6f6b5">&#9670;&nbsp;</a></span>vcle() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00045">45</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a07e5f33135522467de768bd5229c594b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07e5f33135522467de768bd5229c594b">&#9670;&nbsp;</a></span>vcle() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00056">56</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a8dcb9ff917413af14c61029d62c57eab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dcb9ff917413af14c61029d62c57eab">&#9670;&nbsp;</a></span>vcle() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00042">42</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="ad912b88249080faf5e66e00cf95270f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad912b88249080faf5e66e00cf95270f2">&#9670;&nbsp;</a></span>vcle() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00053">53</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a16ee06976fdb3e055d6211f12efd216d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16ee06976fdb3e055d6211f12efd216d">&#9670;&nbsp;</a></span>vcle() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00044">44</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a6b9a899084b967845f1ee4bc1a88e655"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b9a899084b967845f1ee4bc1a88e655">&#9670;&nbsp;</a></span>vcle() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00055">55</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="ad017b1ac31f22d387980cf548e0cb0b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad017b1ac31f22d387980cf548e0cb0b2">&#9670;&nbsp;</a></span>vcle() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00051">51</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a630bfb00ca8a60b1cd23c238460f95e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a630bfb00ca8a60b1cd23c238460f95e3">&#9670;&nbsp;</a></span>vcle() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00040">40</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a9debdb09f605f8f1184fa2b1fd595c7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9debdb09f605f8f1184fa2b1fd595c7a">&#9670;&nbsp;</a></span>vcle() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00041">41</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a3a2b927f8ba6624d975d0964c16da876"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a2b927f8ba6624d975d0964c16da876">&#9670;&nbsp;</a></span>vcle() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00052">52</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a7af8624f887e67abd202165fdc28314e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7af8624f887e67abd202165fdc28314e">&#9670;&nbsp;</a></span>vcle() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00043">43</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a95609b9c5eebcc6ddefa4da061c0786f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95609b9c5eebcc6ddefa4da061c0786f">&#9670;&nbsp;</a></span>vcle() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00054">54</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a31d923b92adfb12789848041cc018350"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31d923b92adfb12789848041cc018350">&#9670;&nbsp;</a></span>vcle() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00050">50</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="ade8ef2aabdef6cc165fb29e380803dbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade8ef2aabdef6cc165fb29e380803dbb">&#9670;&nbsp;</a></span>vcle() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vcle </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cle_8h_source.xhtml#l00039">39</a> of file <a class="el" href="cle_8h_source.xhtml">cle.h</a>.</p>

</div>
</div>
<a id="a2704ccccdee6bc4868e6397c4913cf8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2704ccccdee6bc4868e6397c4913cf8a">&#9670;&nbsp;</a></span>vclt() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00045">45</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a2b9e94da3ecd5b5999c8f8f165a42e8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b9e94da3ecd5b5999c8f8f165a42e8a">&#9670;&nbsp;</a></span>vclt() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00056">56</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a036831b7f3e40812c7b93c8f9d036be0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a036831b7f3e40812c7b93c8f9d036be0">&#9670;&nbsp;</a></span>vclt() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00042">42</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a29668afee86d27397debe995348257a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29668afee86d27397debe995348257a0">&#9670;&nbsp;</a></span>vclt() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00053">53</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="ad4c6df5eb5a837e07ece2c67ee0d252e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4c6df5eb5a837e07ece2c67ee0d252e">&#9670;&nbsp;</a></span>vclt() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00044">44</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a2ac0840b4d3059d922706c1dab27ae08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ac0840b4d3059d922706c1dab27ae08">&#9670;&nbsp;</a></span>vclt() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00055">55</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a2ad3b023704fa8d76dc390c73bb895ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ad3b023704fa8d76dc390c73bb895ee">&#9670;&nbsp;</a></span>vclt() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00051">51</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a59bcab004f65b3b616eabccd8779cf4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59bcab004f65b3b616eabccd8779cf4f">&#9670;&nbsp;</a></span>vclt() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00040">40</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="ac12bc897546e007e7fbc5e4ab26afd4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac12bc897546e007e7fbc5e4ab26afd4a">&#9670;&nbsp;</a></span>vclt() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00041">41</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a8955d9746e67e644d21715b5a42ca3d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8955d9746e67e644d21715b5a42ca3d2">&#9670;&nbsp;</a></span>vclt() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00052">52</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a77b8ad7b953f4e0a390cd7dc508b1133"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77b8ad7b953f4e0a390cd7dc508b1133">&#9670;&nbsp;</a></span>vclt() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00043">43</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a996d2f54a37f806fe7009425d36a9242"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a996d2f54a37f806fe7009425d36a9242">&#9670;&nbsp;</a></span>vclt() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00054">54</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a28724874f41631f5dacaacc8fc145e66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28724874f41631f5dacaacc8fc145e66">&#9670;&nbsp;</a></span>vclt() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00050">50</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a0d7eabdb6566ec547d8ce0a42ab0efd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d7eabdb6566ec547d8ce0a42ab0efd8">&#9670;&nbsp;</a></span>vclt() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vclt </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="clt_8h_source.xhtml#l00039">39</a> of file <a class="el" href="clt_8h_source.xhtml">clt.h</a>.</p>

</div>
</div>
<a id="a344cb8b780ba6f78a5a785786cbcaa43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a344cb8b780ba6f78a5a785786cbcaa43">&#9670;&nbsp;</a></span>vcombine() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vcombine </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="combine_8h_source.xhtml#l00045">45</a> of file <a class="el" href="combine_8h_source.xhtml">combine.h</a>.</p>

</div>
</div>
<a id="a4ecc5a0a28fc965a30a32e3374a67380"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ecc5a0a28fc965a30a32e3374a67380">&#9670;&nbsp;</a></span>vcombine() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vcombine </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="combine_8h_source.xhtml#l00042">42</a> of file <a class="el" href="combine_8h_source.xhtml">combine.h</a>.</p>

</div>
</div>
<a id="ad7c5d0c64de20d3eeb2328e0151195f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7c5d0c64de20d3eeb2328e0151195f6">&#9670;&nbsp;</a></span>vcombine() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vcombine </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="combine_8h_source.xhtml#l00044">44</a> of file <a class="el" href="combine_8h_source.xhtml">combine.h</a>.</p>

</div>
</div>
<a id="ac0a3fb58591449faff844901e8191027"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0a3fb58591449faff844901e8191027">&#9670;&nbsp;</a></span>vcombine() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vcombine </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="combine_8h_source.xhtml#l00040">40</a> of file <a class="el" href="combine_8h_source.xhtml">combine.h</a>.</p>

</div>
</div>
<a id="ad79f020ea8e8362b8e10a887fe9c17a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad79f020ea8e8362b8e10a887fe9c17a8">&#9670;&nbsp;</a></span>vcombine() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vcombine </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="combine_8h_source.xhtml#l00041">41</a> of file <a class="el" href="combine_8h_source.xhtml">combine.h</a>.</p>

</div>
</div>
<a id="a0a1bcc88546eed0bce0a3c3bc741131b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a1bcc88546eed0bce0a3c3bc741131b">&#9670;&nbsp;</a></span>vcombine() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vcombine </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="combine_8h_source.xhtml#l00043">43</a> of file <a class="el" href="combine_8h_source.xhtml">combine.h</a>.</p>

</div>
</div>
<a id="a1598e7eb12a58fc53559332cd0c3ab6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1598e7eb12a58fc53559332cd0c3ab6f">&#9670;&nbsp;</a></span>vcombine() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vcombine </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="combine_8h_source.xhtml#l00039">39</a> of file <a class="el" href="combine_8h_source.xhtml">combine.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00085">arm_compute::cpu::add_sub_q8_neon_fixedpoint()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00039">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00491">arm_compute::cpu::elementwise_comp_op_32_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00422">arm_compute::cpu::elementwise_comp_op_broadcast_32_loop()</a>, <a class="el" href="crop_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::in_bounds_crop_window()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, and <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00096">arm_compute::run_reverse()</a>.</p>

</div>
</div>
<a id="aac700b241bc76e93b57c1975e1fa5364"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac700b241bc76e93b57c1975e1fa5364">&#9670;&nbsp;</a></span>vcvt() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_same&lt;T, uint8_t&gt;::value || std::is_same&lt;T, uint32_t&gt;::value, uint32x4_t&gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vcvt </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cvt_8h_source.xhtml#l00061">61</a> of file <a class="el" href="cvt_8h_source.xhtml">cvt.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> vcvtq_u32_f32(a);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aec59b713155c797f9711fb1422401744"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec59b713155c797f9711fb1422401744">&#9670;&nbsp;</a></span>vcvt() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_same&lt;T, int8_t&gt;::value || std::is_same&lt;T, int32_t&gt;::value, int32x4_t&gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vcvt </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cvt_8h_source.xhtml#l00068">68</a> of file <a class="el" href="cvt_8h_source.xhtml">cvt.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">return</span> vcvtq_s32_f32(a);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6a696cf8ba596c8c6b6ee8c782ba6c07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a696cf8ba596c8c6b6ee8c782ba6c07">&#9670;&nbsp;</a></span>vcvt() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_same&lt;T, float&gt;::value, float32x4_t&gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vcvt </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cvt_8h_source.xhtml#l00041">41</a> of file <a class="el" href="cvt_8h_source.xhtml">cvt.h</a>.</p>

</div>
</div>
<a id="ae9df7e5ee2b5eab813cacfb7e3f91b8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9df7e5ee2b5eab813cacfb7e3f91b8f">&#9670;&nbsp;</a></span>vcvt() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_same&lt;T, float&gt;::value, float32x4_t&gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vcvt </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cvt_8h_source.xhtml#l00040">40</a> of file <a class="el" href="cvt_8h_source.xhtml">cvt.h</a>.</p>

</div>
</div>
<a id="a533635332a3a17c16d8f21c77e15e907"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a533635332a3a17c16d8f21c77e15e907">&#9670;&nbsp;</a></span>vdiv() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vdiv </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="div_8h_source.xhtml#l00059">59</a> of file <a class="el" href="div_8h_source.xhtml">div.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00232">arm_compute::cpu::elementwise_arithm_op&lt; ArithmeticOperation::DIV, typename wrapper::traits::neon_vector&lt; float, 4 &gt; &gt;()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00224">arm_compute::cpu::elementwise_arithm_op&lt; ArithmeticOperation::DIV, typename wrapper::traits::neon_vector&lt; int32_t, 4 &gt; &gt;()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, and <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qsymm16_activation()</a>.</p>

</div>
</div>
<a id="a93d09fb9635ef6275df8b1ee334d62b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93d09fb9635ef6275df8b1ee334d62b4">&#9670;&nbsp;</a></span>vdiv() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vdiv </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="div_8h_source.xhtml#l00064">64</a> of file <a class="el" href="div_8h_source.xhtml">div.h</a>.</p>

</div>
</div>
<a id="a1d78cef5ffacdd18e233f2911fcaf3cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d78cef5ffacdd18e233f2911fcaf3cc">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00058">58</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="aae63f6b8b4a2ec47485921709b85563f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae63f6b8b4a2ec47485921709b85563f">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00047">47</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a138a0ca63e4bfb6e81326b7f29f9f26f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a138a0ca63e4bfb6e81326b7f29f9f26f">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00055">55</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="afa30db793e7c1fd082609ab7a6d5f165"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa30db793e7c1fd082609ab7a6d5f165">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00044">44</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a1e4d95343b6703aa6502310fc041085d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e4d95343b6703aa6502310fc041085d">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00057">57</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a3fb0be6f60ff8e0f3df96993f7227aac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fb0be6f60ff8e0f3df96993f7227aac">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00046">46</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a0140b10717610c7716b37e0706bef65c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0140b10717610c7716b37e0706bef65c">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00053">53</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="ae96f63b38824187da108a09448e7b7f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae96f63b38824187da108a09448e7b7f1">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00042">42</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="ac31dce4d78e068f2d10c266685de46cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac31dce4d78e068f2d10c266685de46cc">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00054">54</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a2ddcfbfe730c340aec577f57ccf389da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ddcfbfe730c340aec577f57ccf389da">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00043">43</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a5cab0757ae9983d6f81120e1eeb0d495"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cab0757ae9983d6f81120e1eeb0d495">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00056">56</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="ab7a046ee9be293d9b823ddaed7138ea1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7a046ee9be293d9b823ddaed7138ea1">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00045">45</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="ab38dbdbc1cddb9806cd5eb7c8e5369bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab38dbdbc1cddb9806cd5eb7c8e5369bf">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00052">52</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a39e87435be178fba49b76f49426ef873"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39e87435be178fba49b76f49426ef873">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00041">41</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::add_same_neon()</a>, <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00085">arm_compute::cpu::add_sub_q8_neon_fixedpoint()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00039">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00036">arm_compute::cpu::batch_normalization_nchw()</a>, <a class="el" href="cpu_2kernels_2scale_2neon_2list_8h_source.xhtml#l00315">arm_compute::cpu::bilinear_neon_scale()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>, <a class="el" href="directconv2d_2nchw_2impl_8h_source.xhtml#l00047">arm_compute::cpu::kernels::convolve_nchw()</a>, <a class="el" href="directconv2d_2nhwc_2neon_2impl_8cpp_source.xhtml#l00058">arm_compute::cpu::kernels::convolve_nhwc()</a>, <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00114">arm_compute::cpu::depthwise_loop_multiplier1_fp()</a>, <a class="el" href="cpu_2kernels_2conv3d_2neon_2list_8h_source.xhtml#l00040">arm_compute::cpu::directconv3d_float_neon_ndhwc()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00034">arm_compute::cpu::elementwise_arithm_op()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00074">arm_compute::cpu::elementwise_arithm_op_broadcast()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00376">arm_compute::cpu::elementwise_comp_op_broadcast()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00154">arm_compute::cpu::fused_batch_normalization_conv()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00266">arm_compute::cpu::fused_batch_normalization_dwc_nchw()</a>, <a class="el" href="fuse__batch__normalization_2nhwc_2neon_2impl_8h_source.xhtml#l00036">arm_compute::cpu::fused_batch_normalization_dwc_nhwc()</a>, <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00049">arm_compute::cpu::instance_normalization_nchw()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8h_source.xhtml#l00040">arm_compute::cpu::l2_normalize_x()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8h_source.xhtml#l00083">arm_compute::cpu::l2_normalize_yz()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00232">arm_compute::cpu::max_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::mean_stddev_normalization()</a>, <a class="el" href="cpu_2kernels_2mul_2generic_2neon_2fp32_8cpp_source.xhtml#l00036">arm_compute::cpu::mul_F32_F32_F32()</a>, <a class="el" href="range_2generic_2neon_2impl_8h_source.xhtml#l00038">arm_compute::cpu::neon_range_function()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::neon_softmax_quantized()</a>, <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="_cpu_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00093">CpuConvertQuantizedSignednessKernel::run_op()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00106">arm_compute::cpu::select_op_16()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00123">arm_compute::cpu::select_op_32()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00089">arm_compute::cpu::select_op_8()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00428">arm_compute::detail::single_convolve_3x3_dilation()</a>, and <a class="el" href="sub_2neon_2impl_8h_source.xhtml#l00042">arm_compute::cpu::sub_same_neon()</a>.</p>

</div>
</div>
<a id="abce35529031ff849903e1230227d2c60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abce35529031ff849903e1230227d2c60">&#9670;&nbsp;</a></span>veor() <span class="overload">[1/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00042">42</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="a5e2a0fcc75060eac7a5185b07275f8b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e2a0fcc75060eac7a5185b07275f8b4">&#9670;&nbsp;</a></span>veor() <span class="overload">[2/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00049">49</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="a434c200be83ed75ab327fb1dbb4971d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a434c200be83ed75ab327fb1dbb4971d8">&#9670;&nbsp;</a></span>veor() <span class="overload">[3/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00044">44</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="a959726e6269ec231f3a7ed22edff736b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a959726e6269ec231f3a7ed22edff736b">&#9670;&nbsp;</a></span>veor() <span class="overload">[4/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00051">51</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="ab044feb65ede9e64751ca907b8cf3cce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab044feb65ede9e64751ca907b8cf3cce">&#9670;&nbsp;</a></span>veor() <span class="overload">[5/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00047">47</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="a7094b05c49dedf690f00b743c32c5ee5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7094b05c49dedf690f00b743c32c5ee5">&#9670;&nbsp;</a></span>veor() <span class="overload">[6/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00040">40</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="ad8c7bcf85e2ea68888ac3c78f7354a7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8c7bcf85e2ea68888ac3c78f7354a7a">&#9670;&nbsp;</a></span>veor() <span class="overload">[7/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00041">41</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="ab95586bdeab17029c23704ae9edebcea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab95586bdeab17029c23704ae9edebcea">&#9670;&nbsp;</a></span>veor() <span class="overload">[8/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00048">48</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="a9b63be858f17ab40ef5d793fb0fa360b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b63be858f17ab40ef5d793fb0fa360b">&#9670;&nbsp;</a></span>veor() <span class="overload">[9/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00043">43</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="ad52743627c3b86406474c71e736dcae4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad52743627c3b86406474c71e736dcae4">&#9670;&nbsp;</a></span>veor() <span class="overload">[10/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00050">50</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="acc2ac3e5a58be02afa589519a218c0c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc2ac3e5a58be02afa589519a218c0c3">&#9670;&nbsp;</a></span>veor() <span class="overload">[11/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00046">46</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

</div>
</div>
<a id="a996e5381fd71f0d24c41099f3b92909a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a996e5381fd71f0d24c41099f3b92909a">&#9670;&nbsp;</a></span>veor() <span class="overload">[12/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::veor </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eor_8h_source.xhtml#l00039">39</a> of file <a class="el" href="eor_8h_source.xhtml">eor.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00093">CpuConvertQuantizedSignednessKernel::run_op()</a>.</p>

</div>
</div>
<a id="a8a5bd58601c5ec1fb14709c6361dfe2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a5bd58601c5ec1fb14709c6361dfe2f">&#9670;&nbsp;</a></span>verf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::verf </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="erf_8h_source.xhtml#l00042">42</a> of file <a class="el" href="erf_8h_source.xhtml">erf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, and <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>.</p>

</div>
</div>
<a id="a3d35fe714076b40450ba6ba870fae322"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d35fe714076b40450ba6ba870fae322">&#9670;&nbsp;</a></span>vexpq() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vexpq </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="exp_8h_source.xhtml#l00048">48</a> of file <a class="el" href="exp_8h_source.xhtml">exp.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00062">arm_compute::cpu::elementwise_op_imp()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qsymm16_activation()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, and <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00171">logistic&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a2f2a99d1524d3d96b294b3f647a54089"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f2a99d1524d3d96b294b3f647a54089">&#9670;&nbsp;</a></span>vexpq() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vexpq </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="exp_8h_source.xhtml#l00052">52</a> of file <a class="el" href="exp_8h_source.xhtml">exp.h</a>.</p>

</div>
</div>
<a id="ae0a685e4e886d2007545259041518dd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0a685e4e886d2007545259041518dd7">&#9670;&nbsp;</a></span>vext_1() <span class="overload">[1/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vext_1 </td>
          <td>(</td>
          <td class="paramtype">int16x4_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16x4_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00045">45</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="aa52c0f4f257bb4e045c6413df8fcf4c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa52c0f4f257bb4e045c6413df8fcf4c6">&#9670;&nbsp;</a></span>vext_1() <span class="overload">[2/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vext_1 </td>
          <td>(</td>
          <td class="paramtype">int16x8_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16x8_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00054">54</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a76c9f2ea33c37886ee16da496b1a023d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76c9f2ea33c37886ee16da496b1a023d">&#9670;&nbsp;</a></span>vext_1() <span class="overload">[3/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vext_1 </td>
          <td>(</td>
          <td class="paramtype">int32x4_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32x4_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00056">56</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a694a1aba4483c429da1b839dc4daaeb1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a694a1aba4483c429da1b839dc4daaeb1">&#9670;&nbsp;</a></span>vext_1() <span class="overload">[4/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vext_1 </td>
          <td>(</td>
          <td class="paramtype">int8x16_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8x16_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00050">50</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="ab761bbfa7f68227c8955cd74d2efc2cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab761bbfa7f68227c8955cd74d2efc2cd">&#9670;&nbsp;</a></span>vext_1() <span class="overload">[5/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vext_1 </td>
          <td>(</td>
          <td class="paramtype">int8x8_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8x8_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00041">41</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a25ea224ad6ec0910c0517f6d157498f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25ea224ad6ec0910c0517f6d157498f9">&#9670;&nbsp;</a></span>vext_1() <span class="overload">[6/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vext_1 </td>
          <td>(</td>
          <td class="paramtype">uint16x4_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16x4_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00043">43</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a6dfb10a7c9048059b57521082b885d80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dfb10a7c9048059b57521082b885d80">&#9670;&nbsp;</a></span>vext_1() <span class="overload">[7/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vext_1 </td>
          <td>(</td>
          <td class="paramtype">uint16x8_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16x8_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00052">52</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="ae1d2677f16ec52283c1b50c825a1b380"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1d2677f16ec52283c1b50c825a1b380">&#9670;&nbsp;</a></span>vext_1() <span class="overload">[8/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vext_1 </td>
          <td>(</td>
          <td class="paramtype">uint8x16_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8x16_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00048">48</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a4f61df728949636afc38761f6ab319d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f61df728949636afc38761f6ab319d3">&#9670;&nbsp;</a></span>vext_1() <span class="overload">[9/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vext_1 </td>
          <td>(</td>
          <td class="paramtype">uint8x8_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8x8_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00039">39</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>.</p>

</div>
</div>
<a id="ada151f0ba21251cb0fa5fda6057d89f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada151f0ba21251cb0fa5fda6057d89f1">&#9670;&nbsp;</a></span>vext_2() <span class="overload">[1/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vext_2 </td>
          <td>(</td>
          <td class="paramtype">int16x4_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16x4_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00046">46</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a100d5ae064e415a393694edef2330736"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a100d5ae064e415a393694edef2330736">&#9670;&nbsp;</a></span>vext_2() <span class="overload">[2/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vext_2 </td>
          <td>(</td>
          <td class="paramtype">int16x8_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16x8_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00055">55</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a6e9c1dbd0ee2a44f88c364abcf011cda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e9c1dbd0ee2a44f88c364abcf011cda">&#9670;&nbsp;</a></span>vext_2() <span class="overload">[3/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vext_2 </td>
          <td>(</td>
          <td class="paramtype">int32x4_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32x4_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00057">57</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="ac976b9ccf24c45244b661d766ef3115f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac976b9ccf24c45244b661d766ef3115f">&#9670;&nbsp;</a></span>vext_2() <span class="overload">[4/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vext_2 </td>
          <td>(</td>
          <td class="paramtype">int8x16_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8x16_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00051">51</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a85911be61d1494a276206a8109423065"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85911be61d1494a276206a8109423065">&#9670;&nbsp;</a></span>vext_2() <span class="overload">[5/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vext_2 </td>
          <td>(</td>
          <td class="paramtype">int8x8_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8x8_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00042">42</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a75f2ece30fddc460ded2a3af6b871df4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75f2ece30fddc460ded2a3af6b871df4">&#9670;&nbsp;</a></span>vext_2() <span class="overload">[6/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vext_2 </td>
          <td>(</td>
          <td class="paramtype">uint16x4_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16x4_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00044">44</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a6b3e4e21663548cc29ab40e1110225e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b3e4e21663548cc29ab40e1110225e3">&#9670;&nbsp;</a></span>vext_2() <span class="overload">[7/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vext_2 </td>
          <td>(</td>
          <td class="paramtype">uint16x8_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16x8_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00053">53</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="a5828792e7318d3d3021610a48cefb60a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5828792e7318d3d3021610a48cefb60a">&#9670;&nbsp;</a></span>vext_2() <span class="overload">[8/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vext_2 </td>
          <td>(</td>
          <td class="paramtype">uint8x16_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8x16_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00049">49</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

</div>
</div>
<a id="aa247597303350172b1bf018e34402d47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa247597303350172b1bf018e34402d47">&#9670;&nbsp;</a></span>vext_2() <span class="overload">[9/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vext_2 </td>
          <td>(</td>
          <td class="paramtype">uint8x8_t&#160;</td>
          <td class="paramname"><em>value_a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8x8_t&#160;</td>
          <td class="paramname"><em>value_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="ext_8h_source.xhtml#l00040">40</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>.</p>

</div>
</div>
<a id="a141bed2170a24f4fa5ec39a7c19d5d61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a141bed2170a24f4fa5ec39a7c19d5d61">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00045">45</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="a4bb43c0a3ad727d1ee1af90103a8829b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bb43c0a3ad727d1ee1af90103a8829b">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00042">42</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="afd21e55cfb947d64570a61c1faf5ecc6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd21e55cfb947d64570a61c1faf5ecc6">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00044">44</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="ac9c024a301326584e832c4a48504b8bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9c024a301326584e832c4a48504b8bf">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00040">40</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="afbcf39b840489f643bc83778d43f6335"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbcf39b840489f643bc83778d43f6335">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00041">41</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="ab2f8b38aa056a162e85852f0c6761289"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2f8b38aa056a162e85852f0c6761289">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00043">43</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="a95ee388aa7c5bccab918235dc538a6b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95ee388aa7c5bccab918235dc538a6b3">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00039">39</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00085">arm_compute::cpu::add_sub_q8_neon_fixedpoint()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00039">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="crop_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::in_bounds_crop_window()</a>, <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00049">arm_compute::cpu::instance_normalization_nchw()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00232">arm_compute::cpu::max_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::mean_stddev_normalization()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::neon_softmax_quantized()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, and <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00096">arm_compute::run_reverse()</a>.</p>

</div>
</div>
<a id="a3f43a3bdf084f33d306eb6e050a682be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f43a3bdf084f33d306eb6e050a682be">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[1/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00097">97</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a66b37188df7f842a57621e343dfe1129"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66b37188df7f842a57621e343dfe1129">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[2/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00208">208</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="a58f917e11f37590fcfa3391e1e1e06ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58f917e11f37590fcfa3391e1e1e06ee">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[3/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00094">94</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5abca006a0d9d71f42c12425c6cb9e9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5abca006a0d9d71f42c12425c6cb9e9b">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[4/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00205">205</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="a948fe39abb6ce89ffb87de8d332c87aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a948fe39abb6ce89ffb87de8d332c87aa">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[5/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00096">96</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8f67032361df236ca59f9bc806589971"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f67032361df236ca59f9bc806589971">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[6/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00207">207</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="a551139294623efd3e40455b113bffc42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a551139294623efd3e40455b113bffc42">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[7/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00209">209</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="a0bd3e6cd567d645ad6a1788764ccaa9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bd3e6cd567d645ad6a1788764ccaa9d">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[8/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00203">203</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="a58856d5e33204b7d362cea988ba3f608"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58856d5e33204b7d362cea988ba3f608">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[9/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00092">92</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad6a155bca7827cfe94fd04a0d3fa0f36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6a155bca7827cfe94fd04a0d3fa0f36">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[10/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00093">93</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a865f7d46d623ca9f2a56bc69c25fb319"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a865f7d46d623ca9f2a56bc69c25fb319">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[11/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00204">204</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="ab9f16a1518f6a2a4bad0532bf6080a1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9f16a1518f6a2a4bad0532bf6080a1c">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[12/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00095">95</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a903fd5324e155c0f864cb244a3eff50d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a903fd5324e155c0f864cb244a3eff50d">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[13/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00206">206</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="affd20ad81488509d2c826f989d4e69b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affd20ad81488509d2c826f989d4e69b8">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[14/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00202">202</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="aa16ace001ab8287faa46d6962f369219"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa16ace001ab8287faa46d6962f369219">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[15/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00091">91</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                  \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00036">arm_compute::cpu::batch_normalization_nchw()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00494">arm_compute::detail::convolve_3x3_dilation()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00491">arm_compute::cpu::elementwise_comp_op_32_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00422">arm_compute::cpu::elementwise_comp_op_broadcast_32_loop()</a>, <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00049">arm_compute::cpu::instance_normalization_nchw()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::mean_stddev_normalization()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, and <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::neon_softmax_quantized()</a>.</p>

</div>
</div>
<a id="a745d994b7c62f971cd7023839b784ff2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a745d994b7c62f971cd7023839b784ff2">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00045">45</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="afd2ae064582b5d27d7f3df420fef03eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd2ae064582b5d27d7f3df420fef03eb">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00042">42</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="a6a958c1d3f88b393fc31f68d19f1a718"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a958c1d3f88b393fc31f68d19f1a718">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00044">44</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="a6b68d30ce46c4c3194066823acacd442"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b68d30ce46c4c3194066823acacd442">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00040">40</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="ac9acd645854ecc2a492de10a5999034d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9acd645854ecc2a492de10a5999034d">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00041">41</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="a274a067e78d261385119acb19ebc7053"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a274a067e78d261385119acb19ebc7053">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00043">43</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="a2902775707bc7bf7d6da1bda1cc15783"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2902775707bc7bf7d6da1bda1cc15783">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00039">39</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00085">arm_compute::cpu::add_sub_q8_neon_fixedpoint()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00039">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="crop_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::in_bounds_crop_window()</a>, <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00049">arm_compute::cpu::instance_normalization_nchw()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00232">arm_compute::cpu::max_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::mean_stddev_normalization()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::neon_softmax_quantized()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00096">arm_compute::run_reverse()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00123">arm_compute::cpu::select_op_32()</a>, and <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00428">arm_compute::detail::single_convolve_3x3_dilation()</a>.</p>

</div>
</div>
<a id="a5ac8135a2c0a60f10448be0057543ed7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ac8135a2c0a60f10448be0057543ed7">&#9670;&nbsp;</a></span>vinv() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vinv </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="inv_8h_source.xhtml#l00048">48</a> of file <a class="el" href="inv_8h_source.xhtml">inv.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>, and <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00171">logistic&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a9fab00cf10194f860fbe0facb245df77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fab00cf10194f860fbe0facb245df77">&#9670;&nbsp;</a></span>vinv() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vinv </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="inv_8h_source.xhtml#l00054">54</a> of file <a class="el" href="inv_8h_source.xhtml">inv.h</a>.</p>

</div>
</div>
<a id="a9774774ca4af2449263acd0d9bcab43c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9774774ca4af2449263acd0d9bcab43c">&#9670;&nbsp;</a></span>vinv() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vinv </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="inv_8h_source.xhtml#l00049">49</a> of file <a class="el" href="inv_8h_source.xhtml">inv.h</a>.</p>

</div>
</div>
<a id="a3520eb056004bb255ef24cbd43e8d60a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3520eb056004bb255ef24cbd43e8d60a">&#9670;&nbsp;</a></span>vinv() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vinv </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="inv_8h_source.xhtml#l00055">55</a> of file <a class="el" href="inv_8h_source.xhtml">inv.h</a>.</p>

</div>
</div>
<a id="a569988c8e1a2619532b8f4d0394d5d79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a569988c8e1a2619532b8f4d0394d5d79">&#9670;&nbsp;</a></span>vinvsqrt() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vinvsqrt </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="invsqrt_8h_source.xhtml#l00048">48</a> of file <a class="el" href="invsqrt_8h_source.xhtml">invsqrt.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00036">arm_compute::cpu::batch_normalization_nchw()</a>, <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00062">arm_compute::cpu::elementwise_op_imp()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00154">arm_compute::cpu::fused_batch_normalization_conv()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00266">arm_compute::cpu::fused_batch_normalization_dwc_nchw()</a>, <a class="el" href="fuse__batch__normalization_2nhwc_2neon_2impl_8h_source.xhtml#l00036">arm_compute::cpu::fused_batch_normalization_dwc_nhwc()</a>, and <a class="el" href="l2normlayer_2generic_2neon_2impl_8h_source.xhtml#l00083">arm_compute::cpu::l2_normalize_yz()</a>.</p>

</div>
</div>
<a id="aca22c6207d1ef0aa5ad1ff392ce56917"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca22c6207d1ef0aa5ad1ff392ce56917">&#9670;&nbsp;</a></span>vinvsqrt() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vinvsqrt </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="invsqrt_8h_source.xhtml#l00054">54</a> of file <a class="el" href="invsqrt_8h_source.xhtml">invsqrt.h</a>.</p>

</div>
</div>
<a id="ac3625e88e165b798c50ee214a6636dc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3625e88e165b798c50ee214a6636dc4">&#9670;&nbsp;</a></span>vinvsqrt() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vinvsqrt </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="invsqrt_8h_source.xhtml#l00052">52</a> of file <a class="el" href="invsqrt_8h_source.xhtml">invsqrt.h</a>.</p>

</div>
</div>
<a id="a34d952ba7147dd78ef05879bfead78f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34d952ba7147dd78ef05879bfead78f5">&#9670;&nbsp;</a></span>vload() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00047">47</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9f1e8ab5f43a0bd6c5f12b8b8d2847ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f1e8ab5f43a0bd6c5f12b8b8d2847ba">&#9670;&nbsp;</a></span>vload() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const int16_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00042">42</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac315df13b4a8667730a6b3f0e774d66a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac315df13b4a8667730a6b3f0e774d66a">&#9670;&nbsp;</a></span>vload() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00044">44</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a87e91f0ee3ecea4a152f7db51451be32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87e91f0ee3ecea4a152f7db51451be32">&#9670;&nbsp;</a></span>vload() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const int8_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00040">40</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a554bda13751c47b20fb50246f99c601a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a554bda13751c47b20fb50246f99c601a">&#9670;&nbsp;</a></span>vload() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const uint16_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00041">41</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8c0ebb40f71661ff1396b6cab9c4d168"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c0ebb40f71661ff1396b6cab9c4d168">&#9670;&nbsp;</a></span>vload() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const uint32_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00043">43</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae1a6f6dde14fc3b0470cd0b08041ea9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1a6f6dde14fc3b0470cd0b08041ea9f">&#9670;&nbsp;</a></span>vload() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00039">39</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>, <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00114">arm_compute::cpu::depthwise_loop_multiplier1_fp()</a>, <a class="el" href="crop__helper_8h_source.xhtml#l00067">arm_compute::cpu::load_as_f32()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00232">arm_compute::cpu::max_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00106">arm_compute::cpu::select_op_16()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00123">arm_compute::cpu::select_op_32()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00140">arm_compute::cpu::select_op_not_same_rank()</a>, and <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00428">arm_compute::detail::single_convolve_3x3_dilation()</a>.</p>

</div>
</div>
<a id="adbe3f94e4c5f2a89be3c5fff7c87a1c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbe3f94e4c5f2a89be3c5fff7c87a1c2">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00066">66</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="ae189872ea41a0947dd06f560aaca3fbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae189872ea41a0947dd06f560aaca3fbb">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const int16_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00061">61</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="a68cae5637e21bb5bc7563a5a89c27764"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68cae5637e21bb5bc7563a5a89c27764">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00063">63</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="abdcc9846d94853fcbddb817879de1a34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdcc9846d94853fcbddb817879de1a34">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const int8_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00059">59</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="aace1a8b4ba67c412574180dd492e480b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aace1a8b4ba67c412574180dd492e480b">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const uint16_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00060">60</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="a3ea1791012d4495628c21706e031a1eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ea1791012d4495628c21706e031a1eb">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const uint32_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00062">62</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="a77f54eded7fef436d3a4f21ad5a00da6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77f54eded7fef436d3a4f21ad5a00da6">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00058">58</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::add_same_neon()</a>, <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00085">arm_compute::cpu::add_sub_q8_neon_fixedpoint()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00039">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00036">arm_compute::cpu::batch_normalization_nchw()</a>, <a class="el" href="cpu_2kernels_2scale_2neon_2list_8h_source.xhtml#l00315">arm_compute::cpu::bilinear_neon_scale()</a>, <a class="el" href="directconv2d_2nchw_2impl_8h_source.xhtml#l00047">arm_compute::cpu::kernels::convolve_nchw()</a>, <a class="el" href="directconv2d_2nhwc_2neon_2impl_8cpp_source.xhtml#l00058">arm_compute::cpu::kernels::convolve_nhwc()</a>, <a class="el" href="cpu_2kernels_2conv3d_2neon_2list_8h_source.xhtml#l00040">arm_compute::cpu::directconv3d_float_neon_ndhwc()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00282">arm_compute::cpu::elementwise_arithm_op_broadcast_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00264">arm_compute::cpu::elementwise_arithm_op_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00472">arm_compute::cpu::elementwise_comp_op_16_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00491">arm_compute::cpu::elementwise_comp_op_32_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00453">arm_compute::cpu::elementwise_comp_op_8_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00403">arm_compute::cpu::elementwise_comp_op_broadcast_16_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00422">arm_compute::cpu::elementwise_comp_op_broadcast_32_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00384">arm_compute::cpu::elementwise_comp_op_broadcast_8_loop()</a>, <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00086">arm_compute::cpu::elementwise_op()</a>, <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00119">arm_compute::cpu::elementwise_op&lt; int8_t &gt;()</a>, <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00211">arm_compute::cpu::elementwise_op&lt; uint8_t &gt;()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00154">arm_compute::cpu::fused_batch_normalization_conv()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00266">arm_compute::cpu::fused_batch_normalization_dwc_nchw()</a>, <a class="el" href="fuse__batch__normalization_2nhwc_2neon_2impl_8h_source.xhtml#l00036">arm_compute::cpu::fused_batch_normalization_dwc_nhwc()</a>, <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00049">arm_compute::cpu::instance_normalization_nchw()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8h_source.xhtml#l00040">arm_compute::cpu::l2_normalize_x()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8h_source.xhtml#l00083">arm_compute::cpu::l2_normalize_yz()</a>, <a class="el" href="crop__helper_8h_source.xhtml#l00049">arm_compute::cpu::load_as_f32()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00232">arm_compute::cpu::max_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::mean_stddev_normalization()</a>, <a class="el" href="cpu_2kernels_2mul_2generic_2neon_2fp32_8cpp_source.xhtml#l00036">arm_compute::cpu::mul_F32_F32_F32()</a>, <a class="el" href="cpu_2kernels_2scale_2neon_2list_8h_source.xhtml#l00219">arm_compute::cpu::nearest_neon_scale()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qsymm16_activation()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::neon_softmax_quantized()</a>, <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00085">CpuConcatenateHeightKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_width_kernel_8cpp_source.xhtml#l00079">CpuConcatenateWidthKernel::run_op()</a>, <a class="el" href="_cpu_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00093">CpuConvertQuantizedSignednessKernel::run_op()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00096">arm_compute::run_reverse()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00041">arm_compute::cpu::select_op()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00089">arm_compute::cpu::select_op_8()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00140">arm_compute::cpu::select_op_not_same_rank()</a>, and <a class="el" href="sub_2neon_2impl_8h_source.xhtml#l00042">arm_compute::cpu::sub_same_neon()</a>.</p>

</div>
</div>
<a id="a23cc34c6476b7df556284c718c44e65c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23cc34c6476b7df556284c718c44e65c">&#9670;&nbsp;</a></span>vlog() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vlog </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="src_2core_2_n_e_o_n_2wrapper_2intrinsics_2_log_8h_source.xhtml#l00048">48</a> of file <a class="el" href="src_2core_2_n_e_o_n_2wrapper_2intrinsics_2_log_8h_source.xhtml">log.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00062">arm_compute::cpu::elementwise_op_imp()</a>, and <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>.</p>

</div>
</div>
<a id="a35b9469125b02ced64f6f351ba18127f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35b9469125b02ced64f6f351ba18127f">&#9670;&nbsp;</a></span>vlog() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vlog </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="src_2core_2_n_e_o_n_2wrapper_2intrinsics_2_log_8h_source.xhtml#l00052">52</a> of file <a class="el" href="src_2core_2_n_e_o_n_2wrapper_2intrinsics_2_log_8h_source.xhtml">log.h</a>.</p>

</div>
</div>
<a id="ae2e5d4eb72295c6454bbd4a051cb32d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2e5d4eb72295c6454bbd4a051cb32d6">&#9670;&nbsp;</a></span>vmax() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00045">45</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4a705920c79ac05f91ac30842627e97a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a705920c79ac05f91ac30842627e97a">&#9670;&nbsp;</a></span>vmax() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00056">56</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a7afbbd0a831ad31c1a75e48b7d93324a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7afbbd0a831ad31c1a75e48b7d93324a">&#9670;&nbsp;</a></span>vmax() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00042">42</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae5e87ca36a247c28d04b4bf992f5dd9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5e87ca36a247c28d04b4bf992f5dd9a">&#9670;&nbsp;</a></span>vmax() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00053">53</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5ca7ae9e30647c4643b1eb31f6517791"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ca7ae9e30647c4643b1eb31f6517791">&#9670;&nbsp;</a></span>vmax() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00044">44</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5305cd57eda646455fa9e5638d828db9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5305cd57eda646455fa9e5638d828db9">&#9670;&nbsp;</a></span>vmax() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00055">55</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae30d6367801c1cba0e1e24b5e8a664b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae30d6367801c1cba0e1e24b5e8a664b8">&#9670;&nbsp;</a></span>vmax() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00051">51</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8f7649f2ee606cf842115341b7571aab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f7649f2ee606cf842115341b7571aab">&#9670;&nbsp;</a></span>vmax() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00040">40</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="adf5ce125cc789021a3d24f5707d711ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf5ce125cc789021a3d24f5707d711ec">&#9670;&nbsp;</a></span>vmax() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00041">41</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="afda337d70b92b77d4bb0601cd5673230"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afda337d70b92b77d4bb0601cd5673230">&#9670;&nbsp;</a></span>vmax() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00052">52</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6b553699a7c1e9d9cb109a49ad3c5727"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b553699a7c1e9d9cb109a49ad3c5727">&#9670;&nbsp;</a></span>vmax() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00043">43</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a3b5bb4293c6cf9406b10543f2af45cae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b5bb4293c6cf9406b10543f2af45cae">&#9670;&nbsp;</a></span>vmax() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00054">54</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a650538c522d3fd73c30e39cd170d02f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a650538c522d3fd73c30e39cd170d02f9">&#9670;&nbsp;</a></span>vmax() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00050">50</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8d1d14000c959f1146a8a64e1dafae5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d1d14000c959f1146a8a64e1dafae5f">&#9670;&nbsp;</a></span>vmax() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00039">39</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{                                             \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00034">arm_compute::cpu::elementwise_arithm_op()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8h_source.xhtml#l00083">arm_compute::cpu::l2_normalize_yz()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00232">arm_compute::cpu::max_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qsymm16_activation()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::neon_softmax_quantized()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00210">relu&lt; T, S &gt;::operator()()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00251">brelu&lt; T, S &gt;::operator()()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00294">lubrelu&lt; T, S &gt;::operator()()</a>, and <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>.</p>

</div>
</div>
<a id="ab810d1d59b9ae09dd6c4f829fb50b6e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab810d1d59b9ae09dd6c4f829fb50b6e9">&#9670;&nbsp;</a></span>vmin() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00045">45</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="aded29dd88bb45804ea08fe7e4959368e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aded29dd88bb45804ea08fe7e4959368e">&#9670;&nbsp;</a></span>vmin() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00056">56</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="aab638eca3c44bec3263d05c09708c62f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab638eca3c44bec3263d05c09708c62f">&#9670;&nbsp;</a></span>vmin() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00042">42</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a435329432b5a078c141b0cbc8c0ce0ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a435329432b5a078c141b0cbc8c0ce0ec">&#9670;&nbsp;</a></span>vmin() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00053">53</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a8d9f1c86402d06b9b6565d090e6c8516"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d9f1c86402d06b9b6565d090e6c8516">&#9670;&nbsp;</a></span>vmin() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00044">44</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a0342e5fbea4e9b848a20f8ff8d365456"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0342e5fbea4e9b848a20f8ff8d365456">&#9670;&nbsp;</a></span>vmin() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00055">55</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="af67a7cc27575ee4da73c711225c51b53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af67a7cc27575ee4da73c711225c51b53">&#9670;&nbsp;</a></span>vmin() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00051">51</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a51eb407b34af91654602ed8f03e244d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51eb407b34af91654602ed8f03e244d0">&#9670;&nbsp;</a></span>vmin() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00040">40</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a5f9729c21d22cf563cfea46cf475102f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f9729c21d22cf563cfea46cf475102f">&#9670;&nbsp;</a></span>vmin() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00041">41</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a1572d51ddecf974abf037055a1e5c334"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1572d51ddecf974abf037055a1e5c334">&#9670;&nbsp;</a></span>vmin() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00052">52</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a57673ef73ff89d5a1b3fe00447d13e5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57673ef73ff89d5a1b3fe00447d13e5b">&#9670;&nbsp;</a></span>vmin() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00043">43</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a48871d33cc9dbec5947efe4a5f180712"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48871d33cc9dbec5947efe4a5f180712">&#9670;&nbsp;</a></span>vmin() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00054">54</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="ab1ee5e3e73a507eccc2ae66ba7e6fdc6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1ee5e3e73a507eccc2ae66ba7e6fdc6">&#9670;&nbsp;</a></span>vmin() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00050">50</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="ab026a1aeec48074092f548c130c323f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab026a1aeec48074092f548c130c323f4">&#9670;&nbsp;</a></span>vmin() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00039">39</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00034">arm_compute::cpu::elementwise_arithm_op()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qsymm16_activation()</a>, <a class="el" href="_cpu_info_8cpp_source.xhtml#l00398">arm_compute::cpuinfo::num_threads_hint()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00251">brelu&lt; T, S &gt;::operator()()</a>, and <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00294">lubrelu&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a303b6b566f2673b81e3ec38ae63c6e9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a303b6b566f2673b81e3ec38ae63c6e9e">&#9670;&nbsp;</a></span>vmla() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00052">52</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae38f1d4af6841a054a793640eff009b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae38f1d4af6841a054a793640eff009b3">&#9670;&nbsp;</a></span>vmla() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00063">63</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="abfa9b0883aa3181f35138d1334cb6254"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfa9b0883aa3181f35138d1334cb6254">&#9670;&nbsp;</a></span>vmla() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00049">49</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad1ab258613e35189ff0d2aaeaf88382c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1ab258613e35189ff0d2aaeaf88382c">&#9670;&nbsp;</a></span>vmla() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00060">60</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae0885e9c52aa46752544466bc926f38a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0885e9c52aa46752544466bc926f38a">&#9670;&nbsp;</a></span>vmla() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00051">51</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac1e660abafdcb4d69d264f85aa48c2c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1e660abafdcb4d69d264f85aa48c2c7">&#9670;&nbsp;</a></span>vmla() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00062">62</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9d83113a1e94bf011cf09a8e4e41e298"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d83113a1e94bf011cf09a8e4e41e298">&#9670;&nbsp;</a></span>vmla() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00058">58</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a37f88ce34194adf857254339a0dcf79b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37f88ce34194adf857254339a0dcf79b">&#9670;&nbsp;</a></span>vmla() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00047">47</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a42223331ada67c8e42296d82f84892bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42223331ada67c8e42296d82f84892bb">&#9670;&nbsp;</a></span>vmla() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00048">48</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab87d76495291fa17d8227360e5d3df40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab87d76495291fa17d8227360e5d3df40">&#9670;&nbsp;</a></span>vmla() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00059">59</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac0d3c9db71218e51620b55f1c65bee02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0d3c9db71218e51620b55f1c65bee02">&#9670;&nbsp;</a></span>vmla() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00050">50</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8c7b807fd519b6cc6944585b13c02141"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c7b807fd519b6cc6944585b13c02141">&#9670;&nbsp;</a></span>vmla() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00061">61</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac1a53ae8a71f3589b9af290a8a181c14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1a53ae8a71f3589b9af290a8a181c14">&#9670;&nbsp;</a></span>vmla() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00057">57</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4287931a2912ecb6cece71219ca5478c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4287931a2912ecb6cece71219ca5478c">&#9670;&nbsp;</a></span>vmla() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00046">46</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{                                                                                \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00039">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00036">arm_compute::cpu::batch_normalization_nchw()</a>, <a class="el" href="cpu_2kernels_2scale_2neon_2list_8h_source.xhtml#l00315">arm_compute::cpu::bilinear_neon_scale()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>, <a class="el" href="directconv2d_2nchw_2impl_8h_source.xhtml#l00047">arm_compute::cpu::kernels::convolve_nchw()</a>, <a class="el" href="directconv2d_2nhwc_2neon_2impl_8cpp_source.xhtml#l00058">arm_compute::cpu::kernels::convolve_nhwc()</a>, <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00114">arm_compute::cpu::depthwise_loop_multiplier1_fp()</a>, <a class="el" href="cpu_2kernels_2conv3d_2neon_2list_8h_source.xhtml#l00040">arm_compute::cpu::directconv3d_float_neon_ndhwc()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="range_2generic_2neon_2impl_8h_source.xhtml#l00038">arm_compute::cpu::neon_range_function()</a>, <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00094">linear&lt; T, S &gt;::operator()()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, and <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00428">arm_compute::detail::single_convolve_3x3_dilation()</a>.</p>

</div>
</div>
<a id="acb536caf0ef8e63c06b4cb39079affaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb536caf0ef8e63c06b4cb39079affaa">&#9670;&nbsp;</a></span>vmlal() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmlal </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00077">77</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="a8b4e4bcb480131f82d3a456c14a74c8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b4e4bcb480131f82d3a456c14a74c8f">&#9670;&nbsp;</a></span>vmlal() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmlal </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00079">79</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="a9fb631b0b31b31f1abd35cba5be16a38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fb631b0b31b31f1abd35cba5be16a38">&#9670;&nbsp;</a></span>vmlal() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vmlal </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00081">81</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="a66d15db8e989b58b61603ce73d8696b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66d15db8e989b58b61603ce73d8696b5">&#9670;&nbsp;</a></span>vmlal() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmlal </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00076">76</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00085">arm_compute::cpu::add_sub_q8_neon_fixedpoint()</a>.</p>

</div>
</div>
<a id="a6ebea4d8367ca937d067f107a5702ebc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ebea4d8367ca937d067f107a5702ebc">&#9670;&nbsp;</a></span>vmlal() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmlal </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00078">78</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="a8bc07457f01ec1c85d8e0ad1c5078b0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bc07457f01ec1c85d8e0ad1c5078b0f">&#9670;&nbsp;</a></span>vmlal() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vmlal </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00080">80</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="a9301713b642622ad8891b0917e98fc2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9301713b642622ad8891b0917e98fc2a">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00042">42</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="a8fa6221077a840ac278fe21fdcaeca2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fa6221077a840ac278fe21fdcaeca2a">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00044">44</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="aa929d20322303880b8b6429b19eeea21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa929d20322303880b8b6429b19eeea21">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00040">40</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="a7c3fe657db220619affef40899e7a3d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c3fe657db220619affef40899e7a3d3">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00041">41</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="ab8d18c4574de6d24cf727f83081e9a52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8d18c4574de6d24cf727f83081e9a52">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00043">43</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="a8dbba1731c32d176ae6635be1c65cbd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dbba1731c32d176ae6635be1c65cbd6">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00039">39</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00085">arm_compute::cpu::add_sub_q8_neon_fixedpoint()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00039">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00106">arm_compute::cpu::select_op_16()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00123">arm_compute::cpu::select_op_32()</a>, and <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00428">arm_compute::detail::single_convolve_3x3_dilation()</a>.</p>

</div>
</div>
<a id="a36c832fbcec771dae0fe1b8b215399f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36c832fbcec771dae0fe1b8b215399f2">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00044">44</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac9b48bf24969c71d62ab2837957a3b93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9b48bf24969c71d62ab2837957a3b93">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00042">42</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab31fa5f935432afeae5e4c873b6bb8fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab31fa5f935432afeae5e4c873b6bb8fd">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00040">40</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9fee192f80eebcf368ee4e662c455d7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fee192f80eebcf368ee4e662c455d7d">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00043">43</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a89a44d45022193bc148089fec401d437"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89a44d45022193bc148089fec401d437">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00041">41</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aea0b656edc428c1f7702d86bbb97df6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea0b656edc428c1f7702d86bbb97df6b">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00039">39</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00039">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00472">arm_compute::cpu::elementwise_comp_op_16_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00491">arm_compute::cpu::elementwise_comp_op_32_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00403">arm_compute::cpu::elementwise_comp_op_broadcast_16_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00422">arm_compute::cpu::elementwise_comp_op_broadcast_32_loop()</a>, and <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>.</p>

</div>
</div>
<a id="aaa99c51650860bee18dc2a1c6259c661"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa99c51650860bee18dc2a1c6259c661">&#9670;&nbsp;</a></span>vmul() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00045">45</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a04525a80382277955944902464f660e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04525a80382277955944902464f660e4">&#9670;&nbsp;</a></span>vmul() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00056">56</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a32c397e73d2083c8f48aaf0afcdd81c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32c397e73d2083c8f48aaf0afcdd81c8">&#9670;&nbsp;</a></span>vmul() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00042">42</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a3f1fb2425af2afc3bcfb2ee0c8a68119"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f1fb2425af2afc3bcfb2ee0c8a68119">&#9670;&nbsp;</a></span>vmul() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00053">53</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="ace213c51916a0c2f979f3082663765e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace213c51916a0c2f979f3082663765e1">&#9670;&nbsp;</a></span>vmul() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00044">44</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="aab8ce1a283f1649a3a7763c0600dd7f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab8ce1a283f1649a3a7763c0600dd7f7">&#9670;&nbsp;</a></span>vmul() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00055">55</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a34bb12fc418530504162b300bf417ee9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34bb12fc418530504162b300bf417ee9">&#9670;&nbsp;</a></span>vmul() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00051">51</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a66a7fd5e2104da748fdb7665e3505b3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66a7fd5e2104da748fdb7665e3505b3c">&#9670;&nbsp;</a></span>vmul() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00040">40</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a1aefc54a525724581b1a09f3b9e33111"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1aefc54a525724581b1a09f3b9e33111">&#9670;&nbsp;</a></span>vmul() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00041">41</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a4f2e93cec76891a55fde0d4ead3f7728"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f2e93cec76891a55fde0d4ead3f7728">&#9670;&nbsp;</a></span>vmul() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00052">52</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="aa2579d7197d661c7e483c2b4079c5037"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2579d7197d661c7e483c2b4079c5037">&#9670;&nbsp;</a></span>vmul() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00043">43</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="af797877175d454cbaa6b25b19fb6c7e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af797877175d454cbaa6b25b19fb6c7e1">&#9670;&nbsp;</a></span>vmul() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00054">54</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a1e6e6496807b9c330c9a21749f442a6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e6e6496807b9c330c9a21749f442a6d">&#9670;&nbsp;</a></span>vmul() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00050">50</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a66c8dd218a4863a14fec363e3dd13dc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66c8dd218a4863a14fec363e3dd13dc4">&#9670;&nbsp;</a></span>vmul() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00039">39</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00036">arm_compute::cpu::batch_normalization_nchw()</a>, <a class="el" href="cpu_2kernels_2scale_2neon_2list_8h_source.xhtml#l00315">arm_compute::cpu::bilinear_neon_scale()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00034">arm_compute::cpu::elementwise_arithm_op()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00154">arm_compute::cpu::fused_batch_normalization_conv()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00266">arm_compute::cpu::fused_batch_normalization_dwc_nchw()</a>, <a class="el" href="fuse__batch__normalization_2nhwc_2neon_2impl_8h_source.xhtml#l00036">arm_compute::cpu::fused_batch_normalization_dwc_nhwc()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8h_source.xhtml#l00040">arm_compute::cpu::l2_normalize_x()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8h_source.xhtml#l00083">arm_compute::cpu::l2_normalize_yz()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::mean_stddev_normalization()</a>, <a class="el" href="cpu_2kernels_2mul_2generic_2neon_2fp32_8cpp_source.xhtml#l00036">arm_compute::cpu::mul_F32_F32_F32()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qsymm16_activation()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00135">square&lt; T, S &gt;::operator()()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00428">arm_compute::detail::single_convolve_3x3_dilation()</a>, <a class="el" href="sub_2neon_2impl_8h_source.xhtml#l00042">arm_compute::cpu::sub_same_neon()</a>, <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00043">arm_compute::cpu::vector_float_norm()</a>, and <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00035">arm_compute::cpu::vector_float_sum()</a>.</p>

</div>
</div>
<a id="a3f8675538052849d9a77195dcb2a0475"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f8675538052849d9a77195dcb2a0475">&#9670;&nbsp;</a></span>vneg() <span class="overload">[1/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00042">42</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

</div>
</div>
<a id="a1bd7d04c076d2e2dce7c70df98916539"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bd7d04c076d2e2dce7c70df98916539">&#9670;&nbsp;</a></span>vneg() <span class="overload">[2/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00050">50</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

</div>
</div>
<a id="a2c6508f2e9aa4b8832aa4e05716a436f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c6508f2e9aa4b8832aa4e05716a436f">&#9670;&nbsp;</a></span>vneg() <span class="overload">[3/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00040">40</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

</div>
</div>
<a id="a28971f157797cbfb899157085c6c56cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28971f157797cbfb899157085c6c56cf">&#9670;&nbsp;</a></span>vneg() <span class="overload">[4/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00048">48</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

</div>
</div>
<a id="a1fcdbb04887f4009d8eaf423260d862e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fcdbb04887f4009d8eaf423260d862e">&#9670;&nbsp;</a></span>vneg() <span class="overload">[5/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00041">41</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

</div>
</div>
<a id="ac4b0bebb0fa5dbbe06e2480f87a1ae1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4b0bebb0fa5dbbe06e2480f87a1ae1d">&#9670;&nbsp;</a></span>vneg() <span class="overload">[6/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00049">49</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

</div>
</div>
<a id="ab4a2420279b0278307ecbb5f37591bce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4a2420279b0278307ecbb5f37591bce">&#9670;&nbsp;</a></span>vneg() <span class="overload">[7/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00047">47</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

</div>
</div>
<a id="aa24da6d1c1ce97217bab0291ce404fa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa24da6d1c1ce97217bab0291ce404fa7">&#9670;&nbsp;</a></span>vneg() <span class="overload">[8/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00039">39</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00062">arm_compute::cpu::elementwise_op_imp()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qsymm16_activation()</a>, and <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00171">logistic&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="aa39a80bee981969fc846d403028b5f3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa39a80bee981969fc846d403028b5f3f">&#9670;&nbsp;</a></span>vnot() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00045">45</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="a75153e22804bc49ce6c34b0116e584ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75153e22804bc49ce6c34b0116e584ff">&#9670;&nbsp;</a></span>vnot() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00056">56</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="acd57145d7cad49cf89cd79633bcd2340"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd57145d7cad49cf89cd79633bcd2340">&#9670;&nbsp;</a></span>vnot() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00042">42</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="a9725668a8840d7402f0ab6ba20610fc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9725668a8840d7402f0ab6ba20610fc4">&#9670;&nbsp;</a></span>vnot() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00053">53</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="a76e5ae3c725c70789557192e3546df27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76e5ae3c725c70789557192e3546df27">&#9670;&nbsp;</a></span>vnot() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00044">44</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="a9a6c9a5080b8ae0edd2cec9feb92a089"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a6c9a5080b8ae0edd2cec9feb92a089">&#9670;&nbsp;</a></span>vnot() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00055">55</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="a0df250cea56a8740e8a975eefa787ba2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0df250cea56a8740e8a975eefa787ba2">&#9670;&nbsp;</a></span>vnot() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00051">51</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="afc1b2a3caf3433ec566f47ce39de7e69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc1b2a3caf3433ec566f47ce39de7e69">&#9670;&nbsp;</a></span>vnot() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00040">40</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="a406944d21fe0860048958cb4a5802752"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a406944d21fe0860048958cb4a5802752">&#9670;&nbsp;</a></span>vnot() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00041">41</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="a3d7b69561da7e6895eabeeab862fe28b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d7b69561da7e6895eabeeab862fe28b">&#9670;&nbsp;</a></span>vnot() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00052">52</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="ab8bfb7550a2cda0cacd83945b9222d9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8bfb7550a2cda0cacd83945b9222d9e">&#9670;&nbsp;</a></span>vnot() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00043">43</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="a18f2b6ebfa0c3d0cc784351c199c8fae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18f2b6ebfa0c3d0cc784351c199c8fae">&#9670;&nbsp;</a></span>vnot() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00054">54</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="a278a9fc4819273bf361fa978ebe448f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a278a9fc4819273bf361fa978ebe448f8">&#9670;&nbsp;</a></span>vnot() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00050">50</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

</div>
</div>
<a id="aed661d4bd9a14812355576773982eb7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed661d4bd9a14812355576773982eb7a">&#9670;&nbsp;</a></span>vnot() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vnot </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="not_8h_source.xhtml#l00039">39</a> of file <a class="el" href="not_8h_source.xhtml">not.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00343">arm_compute::cpu::elementwise_comp_op()</a>, and <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>.</p>

</div>
</div>
<a id="ae37968041962a0906bd348df28d07fef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae37968041962a0906bd348df28d07fef">&#9670;&nbsp;</a></span>vorr() <span class="overload">[1/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00042">42</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="a1ca21e1f83192cb137031766f20a0c88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ca21e1f83192cb137031766f20a0c88">&#9670;&nbsp;</a></span>vorr() <span class="overload">[2/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00051">51</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="a9538681eef113da4bc7192eae24d9d29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9538681eef113da4bc7192eae24d9d29">&#9670;&nbsp;</a></span>vorr() <span class="overload">[3/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00044">44</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="a7810dc5de2d4ed31b3536183f354798f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7810dc5de2d4ed31b3536183f354798f">&#9670;&nbsp;</a></span>vorr() <span class="overload">[4/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00053">53</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="a5f7ab02073d80a11d6dc31165ef4e408"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f7ab02073d80a11d6dc31165ef4e408">&#9670;&nbsp;</a></span>vorr() <span class="overload">[5/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x1_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00046">46</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="a47a3a49930632d95dda54fe073458b63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47a3a49930632d95dda54fe073458b63">&#9670;&nbsp;</a></span>vorr() <span class="overload">[6/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00055">55</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="aa9b568258be29fdc84f839e4c6dca869"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9b568258be29fdc84f839e4c6dca869">&#9670;&nbsp;</a></span>vorr() <span class="overload">[7/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00049">49</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="a9e4d79fc5d8ce9434a8ee55a2fb69d05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e4d79fc5d8ce9434a8ee55a2fb69d05">&#9670;&nbsp;</a></span>vorr() <span class="overload">[8/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00040">40</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="a890824d4840294e482a1cb80d3f93972"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a890824d4840294e482a1cb80d3f93972">&#9670;&nbsp;</a></span>vorr() <span class="overload">[9/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00041">41</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="ad22503a8a86c698298bd18d30c7e1c0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad22503a8a86c698298bd18d30c7e1c0f">&#9670;&nbsp;</a></span>vorr() <span class="overload">[10/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00050">50</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="ae5dad3d69ec8ed5cee464869327ee189"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5dad3d69ec8ed5cee464869327ee189">&#9670;&nbsp;</a></span>vorr() <span class="overload">[11/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00043">43</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="a55363e655ba94b3b37d4e5665e79c794"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55363e655ba94b3b37d4e5665e79c794">&#9670;&nbsp;</a></span>vorr() <span class="overload">[12/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00052">52</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="ac8c49d92c97299ca7a1d4d558ab4fe4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8c49d92c97299ca7a1d4d558ab4fe4c">&#9670;&nbsp;</a></span>vorr() <span class="overload">[13/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x1_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00045">45</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="ac30e27438ac5473a439d231eed39882b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac30e27438ac5473a439d231eed39882b">&#9670;&nbsp;</a></span>vorr() <span class="overload">[14/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00054">54</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="a85a500565f56a89cc48ee9bfa6de5bb6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85a500565f56a89cc48ee9bfa6de5bb6">&#9670;&nbsp;</a></span>vorr() <span class="overload">[15/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00048">48</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="afd68f4669bdf3bfe0ec26c6a1825e248"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd68f4669bdf3bfe0ec26c6a1825e248">&#9670;&nbsp;</a></span>vorr() <span class="overload">[16/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vorr </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="orr_8h_source.xhtml#l00039">39</a> of file <a class="el" href="orr_8h_source.xhtml">orr.h</a>.</p>

</div>
</div>
<a id="adae782aae6d44f1f87f624b31a544c59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adae782aae6d44f1f87f624b31a544c59">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00193">193</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="abd6493e8a191146e3455134723c495d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd6493e8a191146e3455134723c495d1">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00190">190</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="ac061b47e13fa4832ee51b203de487325"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac061b47e13fa4832ee51b203de487325">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00192">192</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a484740aa6942805e042822fb7cef12ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a484740aa6942805e042822fb7cef12ec">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00188">188</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="af7354b0a019a54faca6951b03d9cf766"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7354b0a019a54faca6951b03d9cf766">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00189">189</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="ac025e9eb7cd72f6ef016cb928b51b02d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac025e9eb7cd72f6ef016cb928b51b02d">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00191">191</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a475ee3c8ef70a2e4f18effd1d527a63a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a475ee3c8ef70a2e4f18effd1d527a63a">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00187">187</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00049">arm_compute::cpu::instance_normalization_nchw()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::mean_stddev_normalization()</a>, and <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>.</p>

</div>
</div>
<a id="a5eacbad36e5d666ac75d29097e5b755a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5eacbad36e5d666ac75d29097e5b755a">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[1/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00168">168</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a178df68e11c78824756e95c4a74690ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a178df68e11c78824756e95c4a74690ed">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[2/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00175">175</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aeb8df4f2339b96cc44570afc5f7f9f5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb8df4f2339b96cc44570afc5f7f9f5d">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[3/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x1_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00170">170</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="afa9a7b7c482d5926aaab4933cae8392e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa9a7b7c482d5926aaab4933cae8392e">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[4/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00177">177</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="acee8d3f186fd9c4a6164c2bd92a22b39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acee8d3f186fd9c4a6164c2bd92a22b39">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[5/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00173">173</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a31076534df372c72a6bbf15e03cfc0df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31076534df372c72a6bbf15e03cfc0df">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[6/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00166">166</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aaa60752185eeb6a473de795ed0ffae48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa60752185eeb6a473de795ed0ffae48">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[7/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00167">167</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab06d40a0fb87232e7b5b4ed9a9f68d57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab06d40a0fb87232e7b5b4ed9a9f68d57">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[8/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00174">174</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a346a40343893dce572c328170f17dfd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a346a40343893dce572c328170f17dfd1">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[9/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x1_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00169">169</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6f3b7a799d294a3dc8caa490f1073e2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f3b7a799d294a3dc8caa490f1073e2b">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[10/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00176">176</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aeebcfc675f18ba13675d966d3d6fba90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeebcfc675f18ba13675d966d3d6fba90">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[11/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00172">172</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a36fc78bb7edfcc94ed2ab7436c00906e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36fc78bb7edfcc94ed2ab7436c00906e">&#9670;&nbsp;</a></span>vpaddl() <span class="overload">[12/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vpaddl </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00165">165</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="abae9be70c52a197549e33b022ddd488f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abae9be70c52a197549e33b022ddd488f">&#9670;&nbsp;</a></span>vpmax() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vpmax </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmax_8h_source.xhtml#l00045">45</a> of file <a class="el" href="pmax_8h_source.xhtml">pmax.h</a>.</p>

</div>
</div>
<a id="a084c3b19f25619ec9a4f6a28edb4849b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a084c3b19f25619ec9a4f6a28edb4849b">&#9670;&nbsp;</a></span>vpmax() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vpmax </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmax_8h_source.xhtml#l00042">42</a> of file <a class="el" href="pmax_8h_source.xhtml">pmax.h</a>.</p>

</div>
</div>
<a id="a39ff87169325e42bcec4e8b72aebac16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39ff87169325e42bcec4e8b72aebac16">&#9670;&nbsp;</a></span>vpmax() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vpmax </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmax_8h_source.xhtml#l00044">44</a> of file <a class="el" href="pmax_8h_source.xhtml">pmax.h</a>.</p>

</div>
</div>
<a id="a77e7bf27d6c698eeb78c6e59c7736ff3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77e7bf27d6c698eeb78c6e59c7736ff3">&#9670;&nbsp;</a></span>vpmax() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vpmax </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmax_8h_source.xhtml#l00040">40</a> of file <a class="el" href="pmax_8h_source.xhtml">pmax.h</a>.</p>

</div>
</div>
<a id="a5d9100f677c0c26000fbe7f1142a0169"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d9100f677c0c26000fbe7f1142a0169">&#9670;&nbsp;</a></span>vpmax() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vpmax </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmax_8h_source.xhtml#l00041">41</a> of file <a class="el" href="pmax_8h_source.xhtml">pmax.h</a>.</p>

</div>
</div>
<a id="a95f30695a9984559b5b4330be93fb4f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95f30695a9984559b5b4330be93fb4f5">&#9670;&nbsp;</a></span>vpmax() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vpmax </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmax_8h_source.xhtml#l00043">43</a> of file <a class="el" href="pmax_8h_source.xhtml">pmax.h</a>.</p>

</div>
</div>
<a id="ab799fd9cd5fc5989593e69c55bc400f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab799fd9cd5fc5989593e69c55bc400f9">&#9670;&nbsp;</a></span>vpmax() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vpmax </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmax_8h_source.xhtml#l00039">39</a> of file <a class="el" href="pmax_8h_source.xhtml">pmax.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, and <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::neon_softmax_quantized()</a>.</p>

</div>
</div>
<a id="ab12ca96a30ec693404ee462fa9972441"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab12ca96a30ec693404ee462fa9972441">&#9670;&nbsp;</a></span>vpmin() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vpmin </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmin_8h_source.xhtml#l00045">45</a> of file <a class="el" href="pmin_8h_source.xhtml">pmin.h</a>.</p>

</div>
</div>
<a id="a90e2e64fc6298266c08a915c77fca4b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90e2e64fc6298266c08a915c77fca4b3">&#9670;&nbsp;</a></span>vpmin() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vpmin </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmin_8h_source.xhtml#l00042">42</a> of file <a class="el" href="pmin_8h_source.xhtml">pmin.h</a>.</p>

</div>
</div>
<a id="a3f1bc2edd11ddc6647c50e9f52ef64e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f1bc2edd11ddc6647c50e9f52ef64e5">&#9670;&nbsp;</a></span>vpmin() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vpmin </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmin_8h_source.xhtml#l00044">44</a> of file <a class="el" href="pmin_8h_source.xhtml">pmin.h</a>.</p>

</div>
</div>
<a id="a7f1295502983abdaece250516b8e564e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f1295502983abdaece250516b8e564e">&#9670;&nbsp;</a></span>vpmin() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vpmin </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmin_8h_source.xhtml#l00040">40</a> of file <a class="el" href="pmin_8h_source.xhtml">pmin.h</a>.</p>

</div>
</div>
<a id="a14642064b6d61c95588ff03d2bf3e522"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14642064b6d61c95588ff03d2bf3e522">&#9670;&nbsp;</a></span>vpmin() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vpmin </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmin_8h_source.xhtml#l00041">41</a> of file <a class="el" href="pmin_8h_source.xhtml">pmin.h</a>.</p>

</div>
</div>
<a id="a53afd5e9a5ce60ef6cf7426f4998fed8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53afd5e9a5ce60ef6cf7426f4998fed8">&#9670;&nbsp;</a></span>vpmin() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vpmin </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmin_8h_source.xhtml#l00043">43</a> of file <a class="el" href="pmin_8h_source.xhtml">pmin.h</a>.</p>

</div>
</div>
<a id="ab82845d16e532ba6603e1b960a79384b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab82845d16e532ba6603e1b960a79384b">&#9670;&nbsp;</a></span>vpmin() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vpmin </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pmin_8h_source.xhtml#l00039">39</a> of file <a class="el" href="pmin_8h_source.xhtml">pmin.h</a>.</p>

</div>
</div>
<a id="a566497df1ac44164eb8643f5d469afae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a566497df1ac44164eb8643f5d469afae">&#9670;&nbsp;</a></span>vpow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vpow </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pow_8h_source.xhtml#l00041">41</a> of file <a class="el" href="pow_8h_source.xhtml">pow.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00240">arm_compute::cpu::elementwise_arithm_op&lt; ArithmeticOperation::POWER, typename wrapper::traits::neon_vector&lt; float, 4 &gt; &gt;()</a>, and <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>.</p>

</div>
</div>
<a id="af639c9e81e3a5d57b1f1443da4503d77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af639c9e81e3a5d57b1f1443da4503d77">&#9670;&nbsp;</a></span>vqabs() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vqabs </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00064">64</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="ac1ce2ba81004fec53962d992d17eb67d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1ce2ba81004fec53962d992d17eb67d">&#9670;&nbsp;</a></span>vqabs() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vqabs </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00068">68</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="ab219f58f3a2dc02e7c8d3db795713bc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab219f58f3a2dc02e7c8d3db795713bc2">&#9670;&nbsp;</a></span>vqabs() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vqabs </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00065">65</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="a13ac476fb950eb66f403ce700c6344da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13ac476fb950eb66f403ce700c6344da">&#9670;&nbsp;</a></span>vqabs() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vqabs </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00069">69</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="aa19cbaeed1496296b1ea6e638541f1e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa19cbaeed1496296b1ea6e638541f1e9">&#9670;&nbsp;</a></span>vqabs() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vqabs </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00067">67</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="ab568def82c6d63d62a6736692a0bf97b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab568def82c6d63d62a6736692a0bf97b">&#9670;&nbsp;</a></span>vqabs() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vqabs </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="abs_8h_source.xhtml#l00063">63</a> of file <a class="el" href="abs_8h_source.xhtml">abs.h</a>.</p>

</div>
</div>
<a id="ad7c46b130d392febff53d84a9b7bc567"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7c46b130d392febff53d84a9b7bc567">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[1/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00081">81</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a32bfd06741edea5bbf2b98302bb929e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32bfd06741edea5bbf2b98302bb929e8">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[2/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00094">94</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="acbe862c2646ecdf3849eff8bd570e5dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbe862c2646ecdf3849eff8bd570e5dc">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[3/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00076">76</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a751d2fad3faaac0746d7c592a31d17d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a751d2fad3faaac0746d7c592a31d17d7">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[4/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00089">89</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a789d9bb65ffa618b4675ebf422e96e94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a789d9bb65ffa618b4675ebf422e96e94">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[5/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00078">78</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac33aa1b8ca7945804c5ca05939a878ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac33aa1b8ca7945804c5ca05939a878ad">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[6/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00091">91</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a72f70b1a6486a6f618c84d2d9c82668f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72f70b1a6486a6f618c84d2d9c82668f">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[7/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x1_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00080">80</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a39bba706f09450defce7cb2b63a21301"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39bba706f09450defce7cb2b63a21301">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[8/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00093">93</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="af753dd3e0b525e5e0c058d52eee053c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af753dd3e0b525e5e0c058d52eee053c6">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[9/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00087">87</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="af965181ce04747ee66db6df4d874b950"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af965181ce04747ee66db6df4d874b950">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[10/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00074">74</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="afb5f5a2209cf45d306488d289d6054de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb5f5a2209cf45d306488d289d6054de">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[11/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00075">75</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0e5010d0f62bd2a226b0372d2dcea8d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e5010d0f62bd2a226b0372d2dcea8d3">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[12/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00088">88</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a762716e74212d443b77d5bc95264a884"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a762716e74212d443b77d5bc95264a884">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[13/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00077">77</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a820fc5b16f2d54dc9af247818404ca38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a820fc5b16f2d54dc9af247818404ca38">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[14/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00090">90</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a297de761eb0705e6059856e4a8e6e1d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a297de761eb0705e6059856e4a8e6e1d2">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[15/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x1_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00079">79</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a1ca96f83ef1f8a5b8c24b21e0026acc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ca96f83ef1f8a5b8c24b21e0026acc2">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[16/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00092">92</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="abe0c6273a56abe65f9dcc46a4bd97bf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe0c6273a56abe65f9dcc46a4bd97bf9">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[17/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00086">86</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4b3ec2db417aa33bc7d68ad6e1ff7952"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b3ec2db417aa33bc7d68ad6e1ff7952">&#9670;&nbsp;</a></span>vqadd() <span class="overload">[18/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vqadd </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2add_8h_source.xhtml#l00073">73</a> of file <a class="el" href="intrinsics_2add_8h_source.xhtml">add.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::add_same_neon()</a>.</p>

</div>
</div>
<a id="a0386dd9c2ae7ad11a07ee3def84b96c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0386dd9c2ae7ad11a07ee3def84b96c1">&#9670;&nbsp;</a></span>vqmov() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_same&lt;T, uint8_t&gt;::value, uint8x8_t&gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vqmov </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="qmov_8h_source.xhtml#l00034">34</a> of file <a class="el" href="qmov_8h_source.xhtml">qmov.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordflow">return</span> vqmovun_s16(a);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a299e0769213850d7bc6bfdc3bf2d53df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a299e0769213850d7bc6bfdc3bf2d53df">&#9670;&nbsp;</a></span>vqmov() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_same&lt;T, int8_t&gt;::value, int8x8_t&gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vqmov </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="qmov_8h_source.xhtml#l00040">40</a> of file <a class="el" href="qmov_8h_source.xhtml">qmov.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> vqmovn_s16(a);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aaca6eb034c8564ecc9b32f50e85349ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaca6eb034c8564ecc9b32f50e85349ea">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00057">57</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="a1128ee038af1aeb3df753bd4958e2009"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1128ee038af1aeb3df753bd4958e2009">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00055">55</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="a7154843230482bb0b779d95621541003"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7154843230482bb0b779d95621541003">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00053">53</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="a03d244df122ac5030119baa1dfe319c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03d244df122ac5030119baa1dfe319c6">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00056">56</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="a57941a547a0cfad979bd6b8fa9e030b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57941a547a0cfad979bd6b8fa9e030b7">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00054">54</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="a55bc37be5f14e4c561d3ca93b2a34aa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55bc37be5f14e4c561d3ca93b2a34aa9">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00052">52</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="af726e8f1d6b81ca6383a2100c9e40a87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af726e8f1d6b81ca6383a2100c9e40a87">&#9670;&nbsp;</a></span>vqmovun() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vqmovun </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="qmovun_8h_source.xhtml#l00041">41</a> of file <a class="el" href="qmovun_8h_source.xhtml">qmovun.h</a>.</p>

</div>
</div>
<a id="a191cd29ca1f6d36a715d36cddb34a33a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a191cd29ca1f6d36a715d36cddb34a33a">&#9670;&nbsp;</a></span>vqmovun() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vqmovun </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="qmovun_8h_source.xhtml#l00040">40</a> of file <a class="el" href="qmovun_8h_source.xhtml">qmovun.h</a>.</p>

</div>
</div>
<a id="aaf3df57c0d3884368a0da2a6e306e4bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf3df57c0d3884368a0da2a6e306e4bc">&#9670;&nbsp;</a></span>vqmovun() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vqmovun </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="qmovun_8h_source.xhtml#l00039">39</a> of file <a class="el" href="qmovun_8h_source.xhtml">qmovun.h</a>.</p>

</div>
</div>
<a id="a701023985a16e9be00eda98ca62b1ff0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a701023985a16e9be00eda98ca62b1ff0">&#9670;&nbsp;</a></span>vqrshrn() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vqrshrn </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00041">41</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                                           \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aab8a47b2c25b408353e9315274b8903c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab8a47b2c25b408353e9315274b8903c">&#9670;&nbsp;</a></span>vqrshrn() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vqrshrn </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00043">43</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                                           \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a04164bace8f1614e3cdd1c8b808a87ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04164bace8f1614e3cdd1c8b808a87ce">&#9670;&nbsp;</a></span>vqrshrn() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vqrshrn </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00045">45</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                                           \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aff736d99c68f0fea0ef0732864ef40ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff736d99c68f0fea0ef0732864ef40ed">&#9670;&nbsp;</a></span>vqrshrn() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vqrshrn </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00042">42</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                                           \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a148cfcfd26fd4770318168ee60feda04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a148cfcfd26fd4770318168ee60feda04">&#9670;&nbsp;</a></span>vqrshrn() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vqrshrn </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00044">44</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                                           \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac48035cdc7e1b7b6e68b0f84bd15d433"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac48035cdc7e1b7b6e68b0f84bd15d433">&#9670;&nbsp;</a></span>vqrshrn() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vqrshrn </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00046">46</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                                           \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6e03197379d65bf7f5c22077f18333da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e03197379d65bf7f5c22077f18333da">&#9670;&nbsp;</a></span>vqrshrn_ex() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_integral&lt;T&gt;::value &amp;&amp; std::is_signed&lt;T&gt;::value, int8x8_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vqrshrn_ex </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00085">85</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="acbee47ff5600ce13f5f6e4741e0c2d56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbee47ff5600ce13f5f6e4741e0c2d56">&#9670;&nbsp;</a></span>vqrshrn_ex() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_integral&lt;T&gt;::value &amp;&amp; !std::is_signed&lt;T&gt;::value, uint8x8_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vqrshrn_ex </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00085">85</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0569e98c172b22ab02223e49619e0738"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0569e98c172b22ab02223e49619e0738">&#9670;&nbsp;</a></span>vqrshrn_ex() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_integral&lt;T&gt;::value &amp;&amp; !std::is_signed&lt;T&gt;::value, uint16x4_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vqrshrn_ex </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00086">86</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a45a3fd171b278eab9e393f1fa40d2f90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45a3fd171b278eab9e393f1fa40d2f90">&#9670;&nbsp;</a></span>vqrshrn_ex() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_integral&lt;T&gt;::value &amp;&amp; std::is_signed&lt;T&gt;::value, int16x4_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vqrshrn_ex </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00086">86</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a53e93d049a90318096be498e355f4b45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53e93d049a90318096be498e355f4b45">&#9670;&nbsp;</a></span>vqrshrn_ex() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_integral&lt;T&gt;::value &amp;&amp; std::is_signed&lt;T&gt;::value, int32x2_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vqrshrn_ex </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00087">87</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8969aa464755343434996477be5215b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8969aa464755343434996477be5215b0">&#9670;&nbsp;</a></span>vqrshrn_ex() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_integral&lt;T&gt;::value &amp;&amp; !std::is_signed&lt;T&gt;::value, uint32x2_t &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> arm_compute::wrapper::vqrshrn_ex </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00087">87</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a48b2dc37ac9b6c1ef0cebed4a4d123ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48b2dc37ac9b6c1ef0cebed4a4d123ce">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[1/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00082">82</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a62d239b3d75fe5281ff199561767fd43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62d239b3d75fe5281ff199561767fd43">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[2/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00095">95</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac4c18726cb2a16695dca5a4fb2eb80d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4c18726cb2a16695dca5a4fb2eb80d4">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[3/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00077">77</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4d4fb387eac336f22a4a65ba1bec409f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d4fb387eac336f22a4a65ba1bec409f">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[4/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00090">90</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4191a8767eadbce568684fc1f75a3d33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4191a8767eadbce568684fc1f75a3d33">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[5/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00079">79</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab66835fc01f4cce8a44813e07f2c4938"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab66835fc01f4cce8a44813e07f2c4938">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[6/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00092">92</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a1227356292a78dfaf502ee07f1a0f41f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1227356292a78dfaf502ee07f1a0f41f">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[7/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x1_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00081">81</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a1460bae722b17b5fd41ccc42d6434e68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1460bae722b17b5fd41ccc42d6434e68">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[8/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00094">94</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a360674343289270b10428881bfa10aed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a360674343289270b10428881bfa10aed">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[9/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00088">88</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6a758528af603105944d45c8dea4e7da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a758528af603105944d45c8dea4e7da">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[10/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00075">75</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad98fadaf1b9de13fa7a1dac70bd44121"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad98fadaf1b9de13fa7a1dac70bd44121">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[11/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00076">76</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aebd1594c71be240939a1b59851743c3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebd1594c71be240939a1b59851743c3d">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[12/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00089">89</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5b62b4d3615e30f52e09d06928e69856"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b62b4d3615e30f52e09d06928e69856">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[13/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00078">78</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a64890c70fe3242e87eb81145a1057642"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64890c70fe3242e87eb81145a1057642">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[14/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00091">91</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad1fc018d68814040da8d139381b6842f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1fc018d68814040da8d139381b6842f">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[15/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x1_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00080">80</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9d1800d5ef8636858acba37cdef50afa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d1800d5ef8636858acba37cdef50afa">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[16/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00093">93</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a2d58243035c990f12641e8f3c250e411"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d58243035c990f12641e8f3c250e411">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[17/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00087">87</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5e5f2a88728fcb05b92a1291fa7fd7ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e5f2a88728fcb05b92a1291fa7fd7ea">&#9670;&nbsp;</a></span>vqsub() <span class="overload">[18/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vqsub </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00074">74</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                                  \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::neon_softmax_quantized()</a>, and <a class="el" href="sub_2neon_2impl_8h_source.xhtml#l00042">arm_compute::cpu::sub_same_neon()</a>.</p>

</div>
</div>
<a id="a87a249805030d40cfed4e369d8d26334"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87a249805030d40cfed4e369d8d26334">&#9670;&nbsp;</a></span>vreinterpret() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vreinterpret </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reinterpret_8h_source.xhtml#l00044">44</a> of file <a class="el" href="reinterpret_8h_source.xhtml">reinterpret.h</a>.</p>

</div>
</div>
<a id="a8ae6a96cfcc864446e9807754c5f1da4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ae6a96cfcc864446e9807754c5f1da4">&#9670;&nbsp;</a></span>vreinterpret() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vreinterpret </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reinterpret_8h_source.xhtml#l00045">45</a> of file <a class="el" href="reinterpret_8h_source.xhtml">reinterpret.h</a>.</p>

</div>
</div>
<a id="a6cd5f9fc8ea49bd3d8309ccecc2a68e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cd5f9fc8ea49bd3d8309ccecc2a68e3">&#9670;&nbsp;</a></span>vreinterpret() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vreinterpret </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reinterpret_8h_source.xhtml#l00046">46</a> of file <a class="el" href="reinterpret_8h_source.xhtml">reinterpret.h</a>.</p>

</div>
</div>
<a id="a57b24ba39d5191e1946dcc87a7e88b10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57b24ba39d5191e1946dcc87a7e88b10">&#9670;&nbsp;</a></span>vreinterpret() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vreinterpret </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reinterpret_8h_source.xhtml#l00044">44</a> of file <a class="el" href="reinterpret_8h_source.xhtml">reinterpret.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00085">arm_compute::cpu::add_sub_q8_neon_fixedpoint()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>, and <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00428">arm_compute::detail::single_convolve_3x3_dilation()</a>.</p>

</div>
</div>
<a id="aa66f9aabea563dcaaa28931d2325c1f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa66f9aabea563dcaaa28931d2325c1f9">&#9670;&nbsp;</a></span>vreinterpret() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vreinterpret </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reinterpret_8h_source.xhtml#l00045">45</a> of file <a class="el" href="reinterpret_8h_source.xhtml">reinterpret.h</a>.</p>

</div>
</div>
<a id="a34eaaf6ffbf37abcaa83887289b4bd10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34eaaf6ffbf37abcaa83887289b4bd10">&#9670;&nbsp;</a></span>vreinterpret() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vreinterpret </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reinterpret_8h_source.xhtml#l00046">46</a> of file <a class="el" href="reinterpret_8h_source.xhtml">reinterpret.h</a>.</p>

</div>
</div>
<a id="afd2b502712f706b76d2e8daa866d9755"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd2b502712f706b76d2e8daa866d9755">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00045">45</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="aaf40a436440668bca238d2c728ae7158"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf40a436440668bca238d2c728ae7158">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00056">56</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="a77b10f14845f83d937ac88959aee2f53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77b10f14845f83d937ac88959aee2f53">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00042">42</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="a08eab42fbe6d87171c070fe0741637c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08eab42fbe6d87171c070fe0741637c0">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00053">53</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="a50ff385c1f05f515248bcf254c821594"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50ff385c1f05f515248bcf254c821594">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00044">44</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="a9cc8db9abd0cf482e2215ac5a5912b81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cc8db9abd0cf482e2215ac5a5912b81">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00055">55</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="acd05ffb53527cc219bdd39cdf00d3b10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd05ffb53527cc219bdd39cdf00d3b10">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00051">51</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="a0540a3dcbe54b53aa63f839d68489c8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0540a3dcbe54b53aa63f839d68489c8f">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00040">40</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="ab00e48a754ea292c76df472860f58d41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab00e48a754ea292c76df472860f58d41">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00041">41</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="a965877a2762592da21615f712c80e078"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a965877a2762592da21615f712c80e078">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00052">52</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="a7f8f72bda25ed0b65d693f610e85bd9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f8f72bda25ed0b65d693f610e85bd9d">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00043">43</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="a5bf14ce2affa893fff3415233391316e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bf14ce2affa893fff3415233391316e">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00054">54</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="a3ff423602b2a8b90c171821634966821"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ff423602b2a8b90c171821634966821">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00050">50</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

</div>
</div>
<a id="aa7a641703a9c98932d775d915bf7a3e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7a641703a9c98932d775d915bf7a3e5">&#9670;&nbsp;</a></span>vrev64() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vrev64 </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rev64_8h_source.xhtml#l00039">39</a> of file <a class="el" href="rev64_8h_source.xhtml">rev64.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="crop_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::in_bounds_crop_window()</a>, and <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00096">arm_compute::run_reverse()</a>.</p>

</div>
</div>
<a id="a98c8805795fb292b29f4967621cd8189"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98c8805795fb292b29f4967621cd8189">&#9670;&nbsp;</a></span>vround() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vround </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="round_8h_source.xhtml#l00048">48</a> of file <a class="el" href="round_8h_source.xhtml">round.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00062">arm_compute::cpu::elementwise_op_imp()</a>.</p>

</div>
</div>
<a id="a4bd77ac69edf7cd373b4fdf5317c16ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bd77ac69edf7cd373b4fdf5317c16ee">&#9670;&nbsp;</a></span>vround() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vround </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="round_8h_source.xhtml#l00052">52</a> of file <a class="el" href="round_8h_source.xhtml">round.h</a>.</p>

</div>
</div>
<a id="ad9d3b040097aabee689838e632cda0d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9d3b040097aabee689838e632cda0d8">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00097">97</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac7afef15d1a2161dd098cc72cbea32fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7afef15d1a2161dd098cc72cbea32fe">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00194">194</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="a289ff28c038d8d2f4f34bc77bf9d7337"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a289ff28c038d8d2f4f34bc77bf9d7337">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const int16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00094">94</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aa73970167535f639cd8ddc192af4645b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa73970167535f639cd8ddc192af4645b">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const int16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00191">191</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="a3e06d386c6840a2e151e9bb512116672"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e06d386c6840a2e151e9bb512116672">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const int32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00096">96</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0fb7bcbe12d35286550150bcfa7bd0c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fb7bcbe12d35286550150bcfa7bd0c6">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const int32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00193">193</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="a9f433afab16132e121382bb146e7e5c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f433afab16132e121382bb146e7e5c8">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const int8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00189">189</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="affa58b394277f910e9ee3c74c1d92f4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affa58b394277f910e9ee3c74c1d92f4f">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const int8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00092">92</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0160f519b1fe681e083a2b43975e340e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0160f519b1fe681e083a2b43975e340e">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00093">93</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aa6e430a73e202fe5fe0c8d7144154f31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6e430a73e202fe5fe0c8d7144154f31">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00190">190</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="ab312ab1d815f0ab12b174aad45e73163"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab312ab1d815f0ab12b174aad45e73163">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00095">95</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                                     \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aee2ebe404fede9d44de77843aacef5e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee2ebe404fede9d44de77843aacef5e6">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00192">192</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="ad8d6919caaf76e0ccf623776d4f8ff11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8d6919caaf76e0ccf623776d4f8ff11">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00188">188</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="a6ee3531f4293703c9b32e28421bfc061"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ee3531f4293703c9b32e28421bfc061">&#9670;&nbsp;</a></span>vsetlane() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vsetlane </td>
          <td>(</td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00091">91</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                                                     \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00539">arm_compute::detail::convolve_3x3()</a>, <a class="el" href="_n_e_direct_convolution_detail_8h_source.xhtml#l00494">arm_compute::detail::convolve_3x3_dilation()</a>, <a class="el" href="cpu_2kernels_2conv3d_2neon_2list_8h_source.xhtml#l00040">arm_compute::cpu::directconv3d_float_neon_ndhwc()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, and <a class="el" href="range_2generic_2neon_2impl_8h_source.xhtml#l00038">arm_compute::cpu::neon_range_function()</a>.</p>

</div>
</div>
<a id="a513c4b70b1ef98fe65b62a8278040218"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a513c4b70b1ef98fe65b62a8278040218">&#9670;&nbsp;</a></span>vshr_n() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vshr_n </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00097">97</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                      \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab79161ad1deb12de294a220ae2b112d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab79161ad1deb12de294a220ae2b112d5">&#9670;&nbsp;</a></span>vshr_n() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vshr_n </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00096">96</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{                                      \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aacf892ca109f9e2a9f5d967fc16b480d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacf892ca109f9e2a9f5d967fc16b480d">&#9670;&nbsp;</a></span>vshrq_n() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vshrq_n </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00107">107</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5894bf412cdefc06449a88c5c47c1cf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5894bf412cdefc06449a88c5c47c1cf9">&#9670;&nbsp;</a></span>vshrq_n() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vshrq_n </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shr_8h_source.xhtml#l00106">106</a> of file <a class="el" href="shr_8h_source.xhtml">shr.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{                                             \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac57024ac39a9f06f1e5bb37807c0e362"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac57024ac39a9f06f1e5bb37807c0e362">&#9670;&nbsp;</a></span>vsin() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vsin </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="sin_8h_source.xhtml#l00048">48</a> of file <a class="el" href="sin_8h_source.xhtml">sin.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00062">arm_compute::cpu::elementwise_op_imp()</a>.</p>

</div>
</div>
<a id="a20fc7b01c3664a91c51b9f7e6d74d5f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20fc7b01c3664a91c51b9f7e6d74d5f4">&#9670;&nbsp;</a></span>vsin() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vsin </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="sin_8h_source.xhtml#l00053">53</a> of file <a class="el" href="sin_8h_source.xhtml">sin.h</a>.</p>

</div>
</div>
<a id="ad417a154c619b3568b9eb97fc475a20c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad417a154c619b3568b9eb97fc475a20c">&#9670;&nbsp;</a></span>vstore() <span class="overload">[1/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float32x2_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00047">47</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a9d16581b2d731ab0217ba7bd77b573d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d16581b2d731ab0217ba7bd77b573d8">&#9670;&nbsp;</a></span>vstore() <span class="overload">[2/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float32x4_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00058">58</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="acbd85567ac69618d6ac0fe06fb72af44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbd85567ac69618d6ac0fe06fb72af44">&#9670;&nbsp;</a></span>vstore() <span class="overload">[3/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int16_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16x4_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00044">44</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="aea6948f7d0bf41e8db92807708860a81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea6948f7d0bf41e8db92807708860a81">&#9670;&nbsp;</a></span>vstore() <span class="overload">[4/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int16_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16x8_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00055">55</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a01875212af1a5ab754c818415f8df88d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01875212af1a5ab754c818415f8df88d">&#9670;&nbsp;</a></span>vstore() <span class="overload">[5/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32x2_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00046">46</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="aefc551995598c813e0e9bd5a0a32821b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefc551995598c813e0e9bd5a0a32821b">&#9670;&nbsp;</a></span>vstore() <span class="overload">[6/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32x4_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00057">57</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a0a18c21e0fa9aea77c824091f2121f53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a18c21e0fa9aea77c824091f2121f53">&#9670;&nbsp;</a></span>vstore() <span class="overload">[7/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int8_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8x16_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00053">53</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a256a55d40b65c0a2a22b3f64045716be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a256a55d40b65c0a2a22b3f64045716be">&#9670;&nbsp;</a></span>vstore() <span class="overload">[8/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int8_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8x8_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00041">41</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a07e94869e50439dbe78060ec374939e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07e94869e50439dbe78060ec374939e7">&#9670;&nbsp;</a></span>vstore() <span class="overload">[9/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int8_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8x8x2_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00042">42</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="ab2a18e2f73c6066ec4af6ff793dc854c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2a18e2f73c6066ec4af6ff793dc854c">&#9670;&nbsp;</a></span>vstore() <span class="overload">[10/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16x4_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00043">43</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a68347843dccc0dda3b8d96400782a1d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68347843dccc0dda3b8d96400782a1d4">&#9670;&nbsp;</a></span>vstore() <span class="overload">[11/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16x8_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00054">54</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a65e75ff8f4d05960e50761a5a58dd386"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65e75ff8f4d05960e50761a5a58dd386">&#9670;&nbsp;</a></span>vstore() <span class="overload">[12/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32x2_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00045">45</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a03ba7288457603cf531d82704aae5115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03ba7288457603cf531d82704aae5115">&#9670;&nbsp;</a></span>vstore() <span class="overload">[13/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32x4_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00056">56</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a23d6ee788a3fdc90cfe7455e6c567aa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23d6ee788a3fdc90cfe7455e6c567aa9">&#9670;&nbsp;</a></span>vstore() <span class="overload">[14/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8x16_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00052">52</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="ae7943ea9c1f74dc72c62d4cc3966a459"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7943ea9c1f74dc72c62d4cc3966a459">&#9670;&nbsp;</a></span>vstore() <span class="overload">[15/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8x8_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00039">39</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="add_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::add_same_neon()</a>, <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00085">arm_compute::cpu::add_sub_q8_neon_fixedpoint()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00039">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00036">arm_compute::cpu::batch_normalization_nchw()</a>, <a class="el" href="cpu_2kernels_2scale_2neon_2list_8h_source.xhtml#l00315">arm_compute::cpu::bilinear_neon_scale()</a>, <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00114">arm_compute::cpu::depthwise_loop_multiplier1_fp()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00282">arm_compute::cpu::elementwise_arithm_op_broadcast_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00264">arm_compute::cpu::elementwise_arithm_op_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00472">arm_compute::cpu::elementwise_comp_op_16_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00491">arm_compute::cpu::elementwise_comp_op_32_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00453">arm_compute::cpu::elementwise_comp_op_8_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00403">arm_compute::cpu::elementwise_comp_op_broadcast_16_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00422">arm_compute::cpu::elementwise_comp_op_broadcast_32_loop()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00384">arm_compute::cpu::elementwise_comp_op_broadcast_8_loop()</a>, <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00086">arm_compute::cpu::elementwise_op()</a>, <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00119">arm_compute::cpu::elementwise_op&lt; int8_t &gt;()</a>, <a class="el" href="elementwise__unary_2generic_2neon_2impl_8h_source.xhtml#l00211">arm_compute::cpu::elementwise_op&lt; uint8_t &gt;()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00154">arm_compute::cpu::fused_batch_normalization_conv()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00266">arm_compute::cpu::fused_batch_normalization_dwc_nchw()</a>, <a class="el" href="fuse__batch__normalization_2nhwc_2neon_2impl_8h_source.xhtml#l00036">arm_compute::cpu::fused_batch_normalization_dwc_nhwc()</a>, <a class="el" href="crop_2generic_2neon_2impl_8h_source.xhtml#l00039">arm_compute::cpu::in_bounds_crop_window()</a>, <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00049">arm_compute::cpu::instance_normalization_nchw()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8h_source.xhtml#l00040">arm_compute::cpu::l2_normalize_x()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8h_source.xhtml#l00083">arm_compute::cpu::l2_normalize_yz()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00232">arm_compute::cpu::max_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::mean_stddev_normalization()</a>, <a class="el" href="cpu_2kernels_2mul_2generic_2neon_2fp32_8cpp_source.xhtml#l00036">arm_compute::cpu::mul_F32_F32_F32()</a>, <a class="el" href="cpu_2kernels_2scale_2neon_2list_8h_source.xhtml#l00219">arm_compute::cpu::nearest_neon_scale()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qsymm16_activation()</a>, <a class="el" href="range_2generic_2neon_2impl_8h_source.xhtml#l00038">arm_compute::cpu::neon_range_function()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::neon_softmax_quantized()</a>, <a class="el" href="norm__layer_2generic_2neon_2impl_8h_source.xhtml#l00058">arm_compute::normalize_float()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00043">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00085">CpuConcatenateHeightKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_width_kernel_8cpp_source.xhtml#l00079">CpuConcatenateWidthKernel::run_op()</a>, <a class="el" href="_cpu_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00093">CpuConvertQuantizedSignednessKernel::run_op()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00096">arm_compute::run_reverse()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00041">arm_compute::cpu::select_op()</a>, <a class="el" href="select_2generic_2neon_2impl_8h_source.xhtml#l00140">arm_compute::cpu::select_op_not_same_rank()</a>, and <a class="el" href="sub_2neon_2impl_8h_source.xhtml#l00042">arm_compute::cpu::sub_same_neon()</a>.</p>

</div>
</div>
<a id="acc33d70f4aa4ba22e19177febcf67e3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc33d70f4aa4ba22e19177febcf67e3e">&#9670;&nbsp;</a></span>vstore() <span class="overload">[16/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8x8x2_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00040">40</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="aad4cc552d226849f40a3497d26210462"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad4cc552d226849f40a3497d26210462">&#9670;&nbsp;</a></span>vsub() <span class="overload">[1/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00047">47</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8e554b12444e93f60796f1762e67edd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e554b12444e93f60796f1762e67edd7">&#9670;&nbsp;</a></span>vsub() <span class="overload">[2/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00060">60</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a19c9afcb37c1acbc0ea0dca7d69cfecd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19c9afcb37c1acbc0ea0dca7d69cfecd">&#9670;&nbsp;</a></span>vsub() <span class="overload">[3/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00042">42</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a52c4e22cefb4dfaacd4cc37abf11737b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52c4e22cefb4dfaacd4cc37abf11737b">&#9670;&nbsp;</a></span>vsub() <span class="overload">[4/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00055">55</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0ace7ee33e6139e6f4ff6b957491873e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ace7ee33e6139e6f4ff6b957491873e">&#9670;&nbsp;</a></span>vsub() <span class="overload">[5/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00044">44</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a599bbc343ffe0caccd7bc63f704ed0bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a599bbc343ffe0caccd7bc63f704ed0bf">&#9670;&nbsp;</a></span>vsub() <span class="overload">[6/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00057">57</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a55b34f6398f9cd94e56726cecceda89c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55b34f6398f9cd94e56726cecceda89c">&#9670;&nbsp;</a></span>vsub() <span class="overload">[7/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x1_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00046">46</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aa55414dc3d6ed3856a2c843eed3e2eb5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa55414dc3d6ed3856a2c843eed3e2eb5">&#9670;&nbsp;</a></span>vsub() <span class="overload">[8/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00059">59</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a34df49b41bb7529a2f645b8585b011a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34df49b41bb7529a2f645b8585b011a4">&#9670;&nbsp;</a></span>vsub() <span class="overload">[9/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00053">53</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="ace6024107f3c7f23e71fb8f562b8d5c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace6024107f3c7f23e71fb8f562b8d5c7">&#9670;&nbsp;</a></span>vsub() <span class="overload">[10/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00040">40</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a468586c56d3e28a0b1492191f93e3114"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a468586c56d3e28a0b1492191f93e3114">&#9670;&nbsp;</a></span>vsub() <span class="overload">[11/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00041">41</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="aae7a048314067322874e692c4395b47d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae7a048314067322874e692c4395b47d">&#9670;&nbsp;</a></span>vsub() <span class="overload">[12/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00054">54</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a882d823737e7f02891f551b327f09018"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a882d823737e7f02891f551b327f09018">&#9670;&nbsp;</a></span>vsub() <span class="overload">[13/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00043">43</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a381c61234684f00b9864d869c493977c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a381c61234684f00b9864d869c493977c">&#9670;&nbsp;</a></span>vsub() <span class="overload">[14/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00056">56</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9929a9e0155db97ec6ace69ca9aa9285"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9929a9e0155db97ec6ace69ca9aa9285">&#9670;&nbsp;</a></span>vsub() <span class="overload">[15/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x1_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00045">45</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a2c6f1fc5cee6436ff4ccce4d621156b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c6f1fc5cee6436ff4ccce4d621156b3">&#9670;&nbsp;</a></span>vsub() <span class="overload">[16/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00058">58</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="a99988978e94a874acdba8d9c207a2ddc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99988978e94a874acdba8d9c207a2ddc">&#9670;&nbsp;</a></span>vsub() <span class="overload">[17/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00052">52</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
</div>
</div>
<a id="acae4ec59246f93845fa78120d83d7c1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acae4ec59246f93845fa78120d83d7c1e">&#9670;&nbsp;</a></span>vsub() <span class="overload">[18/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vsub </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00039">39</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{                                                  \</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="fuse__batch__normalization_2generic_2impl_8h_source.xhtml#l00036">arm_compute::cpu::batch_normalization_nchw()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00034">arm_compute::cpu::elementwise_arithm_op()</a>, <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="fuse__batch__normalization_2nhwc_2neon_2impl_8h_source.xhtml#l00036">arm_compute::cpu::fused_batch_normalization_dwc_nhwc()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::mean_stddev_normalization()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8h_source.xhtml#l00065">arm_compute::cpu::neon_softmax_float()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::neon_softmax_quantized()</a>, <a class="el" href="sub_2neon_2impl_8h_source.xhtml#l00042">arm_compute::cpu::sub_same_neon()</a>, and <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00043">arm_compute::cpu::vector_float_norm()</a>.</p>

</div>
</div>
<a id="a8c6da7a8f8b3aa775ac705568fe2a12d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c6da7a8f8b3aa775ac705568fe2a12d">&#9670;&nbsp;</a></span>vsubl() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vsubl </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00108">108</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>

</div>
</div>
<a id="a72de68cdbeaae862e5e106658c82107f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72de68cdbeaae862e5e106658c82107f">&#9670;&nbsp;</a></span>vsubl() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vsubl </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00109">109</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>

</div>
</div>
<a id="af3f7b591c3d178847a92ea92c4bb1d43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3f7b591c3d178847a92ea92c4bb1d43">&#9670;&nbsp;</a></span>vsubl() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vsubl </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00107">107</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>

</div>
</div>
<a id="af439af3f74e5114cd71950ec66ec6460"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af439af3f74e5114cd71950ec66ec6460">&#9670;&nbsp;</a></span>vsubl() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vsubl </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00111">111</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>

</div>
</div>
<a id="a6a72a6f69c0c829f5c82212683832b41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a72a6f69c0c829f5c82212683832b41">&#9670;&nbsp;</a></span>vsubl() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vsubl </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00112">112</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>

</div>
</div>
<a id="a236e5ed9e7f4944ba5d389dff57857c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a236e5ed9e7f4944ba5d389dff57857c2">&#9670;&nbsp;</a></span>vsubl() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vsubl </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="intrinsics_2sub_8h_source.xhtml#l00110">110</a> of file <a class="el" href="intrinsics_2sub_8h_source.xhtml">sub.h</a>.</p>

</div>
</div>
<a id="acbccd6a89f4cdd679773ce30f7959db0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbccd6a89f4cdd679773ce30f7959db0">&#9670;&nbsp;</a></span>vtanh()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vtanh </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="tanh_8h_source.xhtml#l00041">41</a> of file <a class="el" href="tanh_8h_source.xhtml">tanh.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="activation_2generic_2neon_2impl_8h_source.xhtml#l00060">arm_compute::cpu::fp_neon_activation_impl()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, and <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00042">arm_compute::cpu::neon_qsymm16_activation()</a>.</p>

</div>
</div>
<a id="a0a230ea3527f48b002a8ea9ea08aa840"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a230ea3527f48b002a8ea9ea08aa840">&#9670;&nbsp;</a></span>vtbl() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vtbl </td>
          <td>(</td>
          <td class="paramtype">const int8x8x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="tbl_8h_source.xhtml#l00040">40</a> of file <a class="el" href="tbl_8h_source.xhtml">tbl.h</a>.</p>

</div>
</div>
<a id="a1ce3371ad153ba79ace2475e7832b81e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ce3371ad153ba79ace2475e7832b81e">&#9670;&nbsp;</a></span>vtbl() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vtbl </td>
          <td>(</td>
          <td class="paramtype">const uint8x8x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="tbl_8h_source.xhtml#l00039">39</a> of file <a class="el" href="tbl_8h_source.xhtml">tbl.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml">wrapper</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:57 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
