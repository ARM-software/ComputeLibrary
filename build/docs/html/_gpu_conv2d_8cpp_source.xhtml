<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/dynamic_fusion/sketch/gpu/operators/GpuConv2d.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_gpu_conv2d_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GpuConv2d.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_gpu_conv2d_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_conv2d_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/operators/GpuConv2d.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_kernel_descriptors_8h.xhtml">arm_compute/core/KernelDescriptors.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2common_2utils_2_log_8h.xhtml">src/common/utils/Log.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_auto_configuration_8h.xhtml">src/core/helpers/AutoConfiguration.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_argument_pack_8h.xhtml">src/dynamic_fusion/sketch/ArgumentPack.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_component_direct_conv2d_8h.xhtml">src/dynamic_fusion/sketch/gpu/components/cl/ClComponentDirectConv2d.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_workload_sketch_impl_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuWorkloadSketchImpl.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_gemm_helpers_8h.xhtml">src/gpu/cl/kernels/gemm/ClGemmHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_direct_conv_kernel_config_8h.xhtml">src/runtime/heuristics/direct_conv/ClDirectConvKernelConfig.h</a>&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_cl_direct_conv_kernel_config_8h.xhtml">src/runtime/heuristics/direct_conv/IClDirectConvKernelConfig.h</a>&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>experimental</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;DirectConvComputeKernelInfo</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;config_direct_convolution_nhwc(<span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> ITensorInfo *weights, <span class="keyword">const</span> PadStrideInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// Get GPU target</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    std::unique_ptr&lt;arm_compute::cl_direct_conv::IClDirectConvKernelConfig&gt; <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> =</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <a class="code" href="classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_kernel_configuration_factory.xhtml#ae4027c48fb607aa7b86922a8c728aadf">arm_compute::cl_direct_conv::ClDirectConvKernelConfigurationFactory::create</a>(gpu_target);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">void</span> calculate_and_init_dst_if_empty(ITensorInfo            *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                     <span class="keyword">const</span> ITensorInfo      *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                     <span class="keyword">const</span> ITensorInfo      *wei,</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                     <span class="keyword">const</span> Conv2dAttributes &amp;attributes)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;total_size() == 0U)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a> = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">misc::shape_calculator::compute_deep_convolution_shape</a>(</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor_shape(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout(), wei-&gt;tensor_shape(),</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            PadStrideInfo(attributes.stride().x(), attributes.stride().y(), attributes.pad().left,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                          attributes.pad().right, attributes.pad().top, attributes.pad().bottom,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                          <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>)); <span class="comment">// use the default DimensionRoundingType</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>));</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">/* A helper method to reduce the duplication in dst tensor initialization</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">*  when calling validate()</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;Status is_supported_op_helper(<span class="keyword">const</span> GpuWorkloadContext &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>,</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                              <span class="keyword">const</span> ITensorInfo        *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                              <span class="keyword">const</span> ITensorInfo        *wei,</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                              <span class="keyword">const</span> ITensorInfo        *bia,</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                              <span class="keyword">const</span> ITensorInfo        *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                              <span class="keyword">const</span> Conv2dAttributes   &amp;attributes)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    TensorInfo         dst_info_to_validate;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">const</span> ITensorInfo *dst_info_to_validate_ptr = &amp;dst_info_to_validate;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        dst_info_to_validate_ptr = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    calculate_and_init_dst_if_empty(&amp;dst_info_to_validate, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, attributes);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="comment">// Check support level</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="comment">// Data type</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="comment">// Data layout</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a7e906bfc9e333e3f967d8ee9353ce001">ARM_COMPUTE_RETURN_ERROR_ON_DATA_LAYOUT_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">// Check components</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> gpu_target = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.gpu_target();</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.gpu_language() == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">GpuLanguage::OpenCL</a>)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> cl_compile_ctx = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.cl_compile_context();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(cl_compile_ctx == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="comment">// Validate Direct Conv2d Component</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> properties =</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a12747697b67a54dfad1bfb740b5a1482">IGpuKernelComponent::Properties</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties.xhtml#af875cbeaf800c014476b5f9aaa7dc9d9">stage</a>(UnitWorkloadStage{<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Stage::Run</a>});</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keyword">auto</span> settings = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml#a179c3070e74dc09cbb8bf4ab5c28448d">ClComponentDirectConv2d::Settings</a>();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            settings.fast_relaxed_math(</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                (gpu_target != <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">GPUTarget::G71</a> &amp;&amp; (gpu_target &amp; <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a57a3b40730a5af7ea3e13eb4bba56d82">GPUTarget::GPU_ARCH_MASK</a>) == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e">GPUTarget::BIFROST</a>) &amp;&amp;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                (dst_info_to_validate_ptr-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a> ||</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                 dst_info_to_validate_ptr-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>));</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            ArgumentPack&lt;ITensorInfo&gt; arguments;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, wei);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>, bia);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, dst_info_to_validate_ptr);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml#ab0614c4d6aa01bfe9898432d426a9adc">ClComponentDirectConv2d::validate</a>(properties, arguments, attributes, settings));</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <a class="code" href="_error_8h.xhtml#a9561091f3566e78ad3aa39259bc4126a">ARM_COMPUTE_RETURN_ERROR_MSG</a>(<span class="stringliteral">&quot;Unimplemented Gpu language&quot;</span>);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;constexpr <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17730d14d0e88d5aed17a12e872c4efe">GpuOperatorType</a> operator_type = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17730d14d0e88d5aed17a12e872c4efea10b4eb76294b70d7fd6df997ff06edb1">GpuOperatorType::Complex</a>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ab56570c38e5cd02eb686aa0e7ac6d29f">  140</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ab56570c38e5cd02eb686aa0e7ac6d29f">GpuConv2d::is_supported_op</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>,</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>        *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>        *wei,</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>        *bia,</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">Conv2dAttributes</a>   &amp;attributes)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">return</span> is_supported_op_helper(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, bia, <span class="keyword">nullptr</span>, attributes);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">  149</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">GpuConv2d::validate_op</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>,</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>       *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>       *wei,</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>       *bia,</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">Conv2dAttributes</a>  &amp;attributes)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;{</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(!wei-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">are_values_constant</a>(), <span class="stringliteral">&quot;Dynamic weights are not supported&quot;</span>);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="comment">// Check if tensors have valid id. I.e. they are created from a sketch</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(!<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;has_valid_id() || !wei-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>());</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">if</span> (bia != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(!bia-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>());</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// This tensor info will have invalid id but because all the existing tensors in the</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">// sketch have valid ids and the DependencyGraph implementation has no notion of validness</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="comment">// regarding tensor ids, it&#39;ll be just another tensor id and will validate</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="comment">// Additionally, a new dst id is added every time in create_op, thus there&#39;s no need to validate it</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> dst_info_to_validate;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// Auto initialize dst tensor info</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    calculate_and_init_dst_if_empty(&amp;dst_info_to_validate, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, attributes);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">// Perform fusion test</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="comment">// Check if operator meets fusion constraints</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack&lt;ITensorInfo&gt;</a> tensors;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, wei);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>, bia);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, &amp;dst_info_to_validate);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#ac3be1f04870ebf4c5fa052d5f77e0920">new_operator</a>(operator_type, tensors);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(!<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#aaafd71070c18da8190d445b43de84c22">try_add_operator</a>(op),</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                    <span class="stringliteral">&quot;Operator fusion test failed. This operator cannot be fused into the workload&quot;</span>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="comment">// Check if configuration is supported</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">return</span> is_supported_op_helper(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a84bbb323392f1211944a9c32066a1d7f">gpu_context</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, bia, &amp;dst_info_to_validate, attributes);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">  189</a></span>&#160;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">GpuConv2d::create_op</a>(</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *wei, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *bia, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">Conv2dAttributes</a> &amp;attributes)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, bia, attributes);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>(attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#acb4fc314422ba7c6bc7a761ba7c6111d">stride</a>().x(), attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#acb4fc314422ba7c6bc7a761ba7c6111d">stride</a>().y(), attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#a6177244142d86cabba1c4f7991d1e091">pad</a>().left,</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                            attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#a6177244142d86cabba1c4f7991d1e091">pad</a>().right, attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#a6177244142d86cabba1c4f7991d1e091">pad</a>().top, attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#a6177244142d86cabba1c4f7991d1e091">pad</a>().bottom,</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                            <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="comment">// Initialize the direct convolution descriptor</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml">DirectConvComputeKernelInfo</a> desc = config_direct_convolution_nhwc(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a57128473b45c636d96d321805f217e79">create_virtual_tensor</a>();</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="comment">// Assert validation</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">GpuConv2d::validate_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, bia, attributes));</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="comment">// Auto initialize dst tensor</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    calculate_and_init_dst_if_empty(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, attributes);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="comment">// Translate into components and add to component graph</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">auto</span> &amp;comp_graph = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">component_graph</a>();</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> sketch_ctx = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a>();</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> gpu_target = sketch_ctx-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml#a885e6f82abac03ddb2774d1b295b8c2a">gpu_target</a>();</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">if</span> (sketch_ctx-&gt;gpu_language() == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">GpuLanguage::OpenCL</a>)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> cl_compile_ctx = sketch_ctx-&gt;cl_compile_context();</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(cl_compile_ctx == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(cl_compile_ctx);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="comment">// Add Direct Conv2d Component</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keyword">auto</span> properties = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a12747697b67a54dfad1bfb740b5a1482">IGpuKernelComponent::Properties</a>();</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            properties.stage(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a>{<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Stage::Run</a>});</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="keyword">auto</span> settings = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml#a179c3070e74dc09cbb8bf4ab5c28448d">ClComponentDirectConv2d::Settings</a>();</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            settings.fast_relaxed_math(</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                (gpu_target != <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">GPUTarget::G71</a> &amp;&amp; (gpu_target &amp; <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a57a3b40730a5af7ea3e13eb4bba56d82">GPUTarget::GPU_ARCH_MASK</a>) == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e">GPUTarget::BIFROST</a>) &amp;&amp;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a> || <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>));</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            settings.direct_conv_descriptor(desc);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keywordflow">if</span> (settings.export_to_cl_image())</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            {</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                <a class="code" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml#a3f923485898d40faa4df74a7b5916bac">arm_compute::opencl::kernels::gemm::update_padding_for_cl_image</a>(wei);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack&lt;ITensorInfo&gt;</a> arguments;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            arguments.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            arguments.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, wei);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            arguments.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>, bia);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            arguments.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            comp_graph.add_new_component&lt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml">ClComponentDirectConv2d</a>&gt;(properties, arguments, attributes, settings);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        }</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unimplemented Gpu language&quot;</span>);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="comment">// Set up fusion test by adding to the Operator Group</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="comment">// Note this has to be performed after all the components have been successfully added to the component graph</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="comment">// Pack tensor infos</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack&lt;ITensorInfo&gt;</a> tensors;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, wei);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>, bia);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#ac3be1f04870ebf4c5fa052d5f77e0920">new_operator</a>(operator_type, tensors);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#a2395670f670bd1cad21fba418566f4d0">add_operator</a>(op);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;} <span class="comment">// namespace experimental</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="ttc" id="a_argument_pack_8h_xhtml"><div class="ttname"><a href="_argument_pack_8h.xhtml">ArgumentPack.h</a></div></div>
<div class="ttc" id="a_auto_configuration_8h_xhtml"><div class="ttname"><a href="_auto_configuration_8h.xhtml">AutoConfiguration.h</a></div></div>
<div class="ttc" id="a_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner.</div></div>
<div class="ttc" id="a_cl_component_direct_conv2d_8h_xhtml"><div class="ttname"><a href="_cl_component_direct_conv2d_8h.xhtml">ClComponentDirectConv2d.h</a></div></div>
<div class="ttc" id="a_cl_direct_conv_kernel_config_8h_xhtml"><div class="ttname"><a href="_cl_direct_conv_kernel_config_8h.xhtml">ClDirectConvKernelConfig.h</a></div></div>
<div class="ttc" id="a_cl_gemm_helpers_8h_xhtml"><div class="ttname"><a href="_cl_gemm_helpers_8h.xhtml">ClGemmHelpers.h</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00245">Error.h:245</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00298">Error.h:298</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00205">Error.h:205</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a9561091f3566e78ad3aa39259bc4126a"><div class="ttname"><a href="_error_8h.xhtml#a9561091f3566e78ad3aa39259bc4126a">ARM_COMPUTE_RETURN_ERROR_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_MSG(...)</div><div class="ttdoc">An error is returned with the given description.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00195">Error.h:195</a></div></div>
<div class="ttc" id="a_gpu_conv2d_8h_xhtml"><div class="ttname"><a href="_gpu_conv2d_8h.xhtml">GpuConv2d.h</a></div></div>
<div class="ttc" id="a_gpu_workload_sketch_impl_8h_xhtml"><div class="ttname"><a href="_gpu_workload_sketch_impl_8h.xhtml">GpuWorkloadSketchImpl.h</a></div></div>
<div class="ttc" id="a_i_cl_direct_conv_kernel_config_8h_xhtml"><div class="ttname"><a href="_i_cl_direct_conv_kernel_config_8h.xhtml">IClDirectConvKernelConfig.h</a></div></div>
<div class="ttc" id="a_kernel_descriptors_8h_xhtml"><div class="ttname"><a href="_kernel_descriptors_8h.xhtml">KernelDescriptors.h</a></div></div>
<div class="ttc" id="a_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a7e906bfc9e333e3f967d8ee9353ce001"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a7e906bfc9e333e3f967d8ee9353ce001">ARM_COMPUTE_RETURN_ERROR_ON_DATA_LAYOUT_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_LAYOUT_NOT_IN(t,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00890">Validate.h:890</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00952">Validate.h:952</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a27561688e2fc60176608ef725a4ecb30"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">arm_compute::CLScheduler::target</a></div><div class="ttdeci">GPUTarget target() const</div><div class="ttdoc">Get the target GPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00046">CLScheduler.cpp:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a755401027819f45173d06db7a922eb10"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">arm_compute::ITensorInfo::are_values_constant</a></div><div class="ttdeci">virtual bool are_values_constant() const =0</div><div class="ttdoc">Flag indicating whether the values of the tensor are constant, meaning that they can change on kernel...</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_ac3b745acece5fb22971e8888f1d5b4a6"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">arm_compute::ITensorInfo::has_valid_id</a></div><div class="ttdeci">bool has_valid_id() const</div><div class="ttdoc">Check if the tensor id is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00313">ITensorInfo.h:313</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00139">CoreTypes.h:140</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00041">TensorInfo.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_kernel_configuration_factory_xhtml_ae4027c48fb607aa7b86922a8c728aadf"><div class="ttname"><a href="classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_kernel_configuration_factory.xhtml#ae4027c48fb607aa7b86922a8c728aadf">arm_compute::cl_direct_conv::ClDirectConvKernelConfigurationFactory::create</a></div><div class="ttdeci">static std::unique_ptr&lt; IClDirectConvKernelConfig &gt; create(GPUTarget gpu)</div><div class="ttdoc">Static method to call the ClDirectConvolution kernel configuration class accordingly with the GPU tar...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_conv_kernel_config_8h_source.xhtml#l00047">ClDirectConvKernelConfig.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">arm_compute::experimental::dynamic_fusion::ArgumentPack</a></div><div class="ttdoc">This is a generic class that packs the arguments of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_argument_pack_8h_source.xhtml#l00046">ArgumentPack.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack_xhtml_ae723b570d1c3caab0ff080c117fa15cf"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml#ae723b570d1c3caab0ff080c117fa15cf">arm_compute::experimental::dynamic_fusion::ArgumentPack::add_const_tensor</a></div><div class="ttdeci">void add_const_tensor(Id id, const T *tensor)</div><div class="ttdoc">Add const tensor to the pack.</div><div class="ttdef"><b>Definition:</b> <a href="_argument_pack_8h_source.xhtml#l00108">ArgumentPack.h:108</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml">arm_compute::experimental::dynamic_fusion::ClComponentDirectConv2d</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_direct_conv2d_8h_source.xhtml#l00077">ClComponentDirectConv2d.h:78</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_xhtml_a179c3070e74dc09cbb8bf4ab5c28448d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml#a179c3070e74dc09cbb8bf4ab5c28448d">arm_compute::experimental::dynamic_fusion::ClComponentDirectConv2d::Settings</a></div><div class="ttdeci">ClComponentDirectConv2dSettings Settings</div><div class="ttdoc">Settings are a set of backend-specific parameters that influence the implementation of a component.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_direct_conv2d_8h_source.xhtml#l00083">ClComponentDirectConv2d.h:83</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_xhtml_ab0614c4d6aa01bfe9898432d426a9adc"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml#ab0614c4d6aa01bfe9898432d426a9adc">arm_compute::experimental::dynamic_fusion::ClComponentDirectConv2d::validate</a></div><div class="ttdeci">static Status validate(const Properties &amp;properties, const ArgumentPack&lt; ITensorInfo &gt; &amp;tensors, const Attributes &amp;attributes, const Settings &amp;settings)</div><div class="ttdoc">Validate the component.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_direct_conv2d_8cpp_source.xhtml#l00072">ClComponentDirectConv2d.cpp:72</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">arm_compute::experimental::dynamic_fusion::Conv2dAttributes</a></div><div class="ttdoc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_attributes_8h_source.xhtml#l00042">Conv2dAttributes.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes_xhtml_a6177244142d86cabba1c4f7991d1e091"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#a6177244142d86cabba1c4f7991d1e091">arm_compute::experimental::dynamic_fusion::Conv2dAttributes::pad</a></div><div class="ttdeci">Conv2dAttributes &amp; pad(const Padding2D &amp;pad)</div><div class="ttdoc">Set padding.</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_attributes_8cpp_source.xhtml#l00033">Conv2dAttributes.cpp:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes_xhtml_acb4fc314422ba7c6bc7a761ba7c6111d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#acb4fc314422ba7c6bc7a761ba7c6111d">arm_compute::experimental::dynamic_fusion::Conv2dAttributes::stride</a></div><div class="ttdeci">Conv2dAttributes &amp; stride(const Size2D &amp;stride)</div><div class="ttdoc">Set stride.</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_attributes_8cpp_source.xhtml#l00042">Conv2dAttributes.cpp:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d_xhtml_a6d9bc018fa740e80cfd915c2d0dd3c08"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">arm_compute::experimental::dynamic_fusion::GpuConv2d::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *src, const ITensorInfo *wei, const ITensorInfo *bia, const Attributes &amp;attributes)</div><div class="ttdoc">Check if the operator configuration is supported and if it can be fused into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_conv2d_8cpp_source.xhtml#l00149">GpuConv2d.cpp:149</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d_xhtml_ab56570c38e5cd02eb686aa0e7ac6d29f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ab56570c38e5cd02eb686aa0e7ac6d29f">arm_compute::experimental::dynamic_fusion::GpuConv2d::is_supported_op</a></div><div class="ttdeci">static Status is_supported_op(const GpuWorkloadContext &amp;context, const ITensorInfo *src, const ITensorInfo *wei, const ITensorInfo *bia, const Attributes &amp;attributes)</div><div class="ttdoc">Check if the operator configuration is supported, irrespective of fusion.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_conv2d_8cpp_source.xhtml#l00140">GpuConv2d.cpp:140</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d_xhtml_ad4e17c0743b60efaf3be59f8e85a5aa2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">arm_compute::experimental::dynamic_fusion::GpuConv2d::create_op</a></div><div class="ttdeci">static ITensorInfo * create_op(GpuWorkloadSketch &amp;sketch, ITensorInfo *src, ITensorInfo *wei, ITensorInfo *bia, const Attributes &amp;attributes)</div><div class="ttdoc">Create an operator and fuse it into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_conv2d_8cpp_source.xhtml#l00189">GpuConv2d.cpp:189</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group_xhtml_a2395670f670bd1cad21fba418566f4d0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#a2395670f670bd1cad21fba418566f4d0">arm_compute::experimental::dynamic_fusion::GpuOperatorGroup::add_operator</a></div><div class="ttdeci">void add_operator(const Operator &amp;op, bool is_output=false)</div><div class="ttdoc">Add an operator to the group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_operator_group_8cpp_source.xhtml#l00141">GpuOperatorGroup.cpp:141</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group_xhtml_aaafd71070c18da8190d445b43de84c22"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#aaafd71070c18da8190d445b43de84c22">arm_compute::experimental::dynamic_fusion::GpuOperatorGroup::try_add_operator</a></div><div class="ttdeci">bool try_add_operator(const Operator &amp;op, bool is_output=false) const</div><div class="ttdoc">Try adding (without actually adding) an operator to the group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_operator_group_8cpp_source.xhtml#l00066">GpuOperatorGroup.cpp:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group_xhtml_ac3be1f04870ebf4c5fa052d5f77e0920"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#ac3be1f04870ebf4c5fa052d5f77e0920">arm_compute::experimental::dynamic_fusion::GpuOperatorGroup::new_operator</a></div><div class="ttdeci">Operator new_operator(const GpuOperatorType &amp;operator_type, const ArgumentPack&lt; ITensorInfo &gt; &amp;tensors) const</div><div class="ttdoc">Create a new operator.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_operator_group_8cpp_source.xhtml#l00149">GpuOperatorGroup.cpp:149</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext</a></div><div class="ttdoc">Provide context necessary for the creation and configuration of a workload e.g.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8h_source.xhtml#l00057">GpuWorkloadContext.h:58</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_xhtml_a885e6f82abac03ddb2774d1b295b8c2a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml#a885e6f82abac03ddb2774d1b295b8c2a">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext::gpu_target</a></div><div class="ttdeci">GpuTarget gpu_target() const</div><div class="ttdoc">Get GpuTarget of the context.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8cpp_source.xhtml#l00048">GpuWorkloadContext.cpp:48</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a53a99846286646c8e36726c50407b5c3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::component_graph</a></div><div class="ttdeci">const GpuKernelComponentGraph &amp; component_graph() const</div><div class="ttdoc">Get component graph.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00072">GpuWorkloadSketchImpl.h:72</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a57128473b45c636d96d321805f217e79"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a57128473b45c636d96d321805f217e79">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::create_virtual_tensor</a></div><div class="ttdeci">ITensorInfo * create_virtual_tensor()</div><div class="ttdoc">Create a virtual (see MemoryType) tensor info and save it.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00105">GpuWorkloadSketchImpl.h:105</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_aeca25ed142be5cb241f375c6f79638e0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::operator_group</a></div><div class="ttdeci">const GpuOperatorGroup &amp; operator_group() const</div><div class="ttdoc">Get operator group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00082">GpuWorkloadSketchImpl.h:82</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_af5d6e63adc08ff38e747e2884d4f4cef"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::context</a></div><div class="ttdeci">const Context * context() const</div><div class="ttdoc">Get workload context.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00062">GpuWorkloadSketchImpl.h:62</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch</a></div><div class="ttdoc">A descriptor of a workload of operators.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_8h_source.xhtml#l00042">GpuWorkloadSketch.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_xhtml_a84bbb323392f1211944a9c32066a1d7f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a84bbb323392f1211944a9c32066a1d7f">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::gpu_context</a></div><div class="ttdeci">const GpuWorkloadContext * gpu_context() const</div><div class="ttdoc">Get the gpu workload context of this sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_8cpp_source.xhtml#l00047">GpuWorkloadSketch.cpp:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_xhtml_abe25a6a4a6183b083d1c6771269ced41"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::implementation</a></div><div class="ttdeci">Implementation &amp; implementation()</div><div class="ttdoc">Get the implementation.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_8cpp_source.xhtml#l00057">GpuWorkloadSketch.cpp:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component_xhtml_a12747697b67a54dfad1bfb740b5a1482"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a12747697b67a54dfad1bfb740b5a1482">arm_compute::experimental::dynamic_fusion::IGpuKernelComponent::Properties</a></div><div class="ttdeci">KernelProperties Properties</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_component_8h_source.xhtml#l00070">IGpuKernelComponent.h:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties_xhtml_af875cbeaf800c014476b5f9aaa7dc9d9"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties.xhtml#af875cbeaf800c014476b5f9aaa7dc9d9">arm_compute::experimental::dynamic_fusion::KernelProperties::stage</a></div><div class="ttdeci">KernelProperties &amp; stage(const UnitWorkloadStage &amp;stage)</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_component_8h_source.xhtml#l00042">IGpuKernelComponent.h:42</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a17730d14d0e88d5aed17a12e872c4efe"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17730d14d0e88d5aed17a12e872c4efe">arm_compute::experimental::dynamic_fusion::GpuOperatorType</a></div><div class="ttdeci">GpuOperatorType</div><div class="ttdoc">Contain properties common to all operator types.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_operator_properties_8h_source.xhtml#l00037">GpuOperatorProperties.h:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a17730d14d0e88d5aed17a12e872c4efea10b4eb76294b70d7fd6df997ff06edb1"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17730d14d0e88d5aed17a12e872c4efea10b4eb76294b70d7fd6df997ff06edb1">arm_compute::experimental::dynamic_fusion::GpuOperatorType::Complex</a></div><div class="ttdeci">@ Complex</div><div class="ttdoc">Complex operators are operators that are not simple but are still fusable with simple ones.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">arm_compute::experimental::dynamic_fusion::GpuLanguage::OpenCL</a></div><div class="ttdeci">@ OpenCL</div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_ac93cc76b563b366f030b8310a46046c3"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">arm_compute::misc::shape_calculator::compute_deep_convolution_shape</a></div><div class="ttdeci">TensorShape compute_deep_convolution_shape(const TensorShape &amp;input_shape, DataLayout input_data_layout, const TensorShape &amp;weights_shape, const PadStrideInfo &amp;conv_info)</div><div class="ttdoc">Calculate the deep convolution shape output shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00784">ShapeCalculator.h:784</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1opencl_1_1kernels_1_1gemm_xhtml_a3f923485898d40faa4df74a7b5916bac"><div class="ttname"><a href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml#a3f923485898d40faa4df74a7b5916bac">arm_compute::opencl::kernels::gemm::update_padding_for_cl_image</a></div><div class="ttdeci">void update_padding_for_cl_image(ITensorInfo *tensor)</div><div class="ttdoc">Update padding required to export the OpenCL buffer to OpenCL image2d.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_helpers_8cpp_source.xhtml#l00100">ClGemmHelpers.cpp:100</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a00525ff582f16038a1d3819aa44a23a3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00114">DFT.cpp:115</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00167">DirectConv2d.cpp:167</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf7ec1cdc18b3461c0a44ceb3b73801c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">arm_compute::test::validation::sketch</a></div><div class="ttdeci">GpuWorkloadSketch sketch</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00168">DirectConv2d.cpp:168</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:25</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">arm_compute::ACL_SRC_2</a></div><div class="ttdeci">@ ACL_SRC_2</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">Types.h:47</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdeci">@ ACL_DST_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">arm_compute::DimensionRoundingType::FLOOR</a></div><div class="ttdeci">@ FLOOR</div><div class="ttdoc">Floor rounding.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a37c28ce239ce7092298245ce59694917"><div class="ttname"><a href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00043">AutoConfiguration.h:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets.</div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:35</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a57a3b40730a5af7ea3e13eb4bba56d82"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a57a3b40730a5af7ea3e13eb4bba56d82">arm_compute::GPUTarget::GPU_ARCH_MASK</a></div><div class="ttdeci">@ GPU_ARCH_MASK</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">arm_compute::GPUTarget::G71</a></div><div class="ttdeci">@ G71</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e">arm_compute::GPUTarget::BIFROST</a></div><div class="ttdeci">@ BIFROST</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdeci">@ NHWC</div><div class="ttdoc">Num samples, height, width, channels.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml">Log.h</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00035">Log.h:35</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_direct_conv_compute_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml">arm_compute::DirectConvComputeKernelInfo</a></div><div class="ttdoc">Compute descriptor used by the direct convolution kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00124">KernelDescriptors.h:125</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage</a></div><div class="ttdoc">Describes when a unit workload is run.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_source_code_8h_source.xhtml#l00183">GpuWorkloadSourceCode.h:184</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::Stage::Run</a></div><div class="ttdeci">@ Run</div><div class="ttdoc">Run every time after the first time.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_5ff8356557e4f59c6a20c3735e8d2267.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_729ca8b25cabcdcb8b11b571ea7b237a.xhtml">sketch</a></li><li class="navelem"><a class="el" href="dir_df94d166e0e6f49d063cb29fea25a88b.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_6873a2afc4715a8a8ff813bcf2ca82fa.xhtml">operators</a></li><li class="navelem"><a class="el" href="_gpu_conv2d_8cpp.xhtml">GpuConv2d.cpp</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:45 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
