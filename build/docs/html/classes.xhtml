<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Data Structure Index</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classes.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Data Structure Index</div>  </div>
</div><!--header-->
<div class="contents">
<div class="qindex"><a class="qindex" href="#letter_A">A</a>&#160;|&#160;<a class="qindex" href="#letter_B">B</a>&#160;|&#160;<a class="qindex" href="#letter_C">C</a>&#160;|&#160;<a class="qindex" href="#letter_D">D</a>&#160;|&#160;<a class="qindex" href="#letter_E">E</a>&#160;|&#160;<a class="qindex" href="#letter_F">F</a>&#160;|&#160;<a class="qindex" href="#letter_G">G</a>&#160;|&#160;<a class="qindex" href="#letter_H">H</a>&#160;|&#160;<a class="qindex" href="#letter_I">I</a>&#160;|&#160;<a class="qindex" href="#letter_J">J</a>&#160;|&#160;<a class="qindex" href="#letter_K">K</a>&#160;|&#160;<a class="qindex" href="#letter_L">L</a>&#160;|&#160;<a class="qindex" href="#letter_M">M</a>&#160;|&#160;<a class="qindex" href="#letter_N">N</a>&#160;|&#160;<a class="qindex" href="#letter_O">O</a>&#160;|&#160;<a class="qindex" href="#letter_P">P</a>&#160;|&#160;<a class="qindex" href="#letter_Q">Q</a>&#160;|&#160;<a class="qindex" href="#letter_R">R</a>&#160;|&#160;<a class="qindex" href="#letter_S">S</a>&#160;|&#160;<a class="qindex" href="#letter_T">T</a>&#160;|&#160;<a class="qindex" href="#letter_U">U</a>&#160;|&#160;<a class="qindex" href="#letter_V">V</a>&#160;|&#160;<a class="qindex" href="#letter_W">W</a>&#160;|&#160;<a class="qindex" href="#letter_Y">Y</a>&#160;|&#160;<a class="qindex" href="#letter_Z">Z</a></div>
<div class="classindex">
<dl class="classindex even">
<dt class="alphachar"><a name="letter_A">A</a></dt>
<dd><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml">AbsoluteTolerance</a> (<a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_access_window_horizontal.xhtml">AccessWindowHorizontal</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_access_window_rectangle.xhtml">AccessWindowRectangle</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_access_window_static.xhtml">AccessWindowStatic</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_access_window_transpose.xhtml">AccessWindowTranspose</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_access_window_vertical.xhtml">AccessWindowVertical</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="struct_acl_activation_descriptor.xhtml">AclActivationDescriptor</a></dd><dd><a class="el" href="struct_acl_allocator.xhtml">AclAllocator</a></dd><dd><a class="el" href="struct_acl_context__.xhtml">AclContext_</a></dd><dd><a class="el" href="struct_acl_context_options.xhtml">AclContextOptions</a></dd><dd><a class="el" href="struct_acl_operator__.xhtml">AclOperator_</a></dd><dd><a class="el" href="struct_acl_queue__.xhtml">AclQueue_</a></dd><dd><a class="el" href="struct_acl_queue_options.xhtml">AclQueueOptions</a></dd><dd><a class="el" href="struct_acl_tensor__.xhtml">AclTensor_</a></dd><dd><a class="el" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a></dd><dd><a class="el" href="struct_acl_tensor_pack__.xhtml">AclTensorPack_</a></dd><dd><a class="el" href="struct_acl_version.xhtml">AclVersion</a></dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1_act_fp_impl_params.xhtml">ActFpImplParams</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_activation.xhtml">Activation</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classacl_1_1_activation.xhtml">Activation</a> (<a class="el" href="namespaceacl.xhtml">acl</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_activation_data_type_i_s_a_selector_data.xhtml">ActivationDataTypeISASelectorData</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_activation_kernel_1_1_activation_kernel.xhtml">CpuActivationKernel::ActivationKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml">CpuAddKernel::AddKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_mul_add_kernel_1_1_add_mul_add_kernel.xhtml">CpuAddMulAddKernel::AddMulAddKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_allocator.xhtml">Allocator</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_allocator_wrapper.xhtml">AllocatorWrapper</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_arg_min_max_layer.xhtml">ArgMinMaxLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_arg_min_max_layer_node.xhtml">ArgMinMaxLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1_array.xhtml">Array</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_array_accessor.xhtml">ArrayAccessor</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">AsmGemmInfo</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_assets_library.xhtml">AssetsLibrary</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_B">B</a></dt>
<dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1detail_1_1_backend_registrar.xhtml">BackendRegistrar</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml">arm_compute::graph::backends::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_backend_registry.xhtml">BackendRegistry</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__gemm_1_1barrier.xhtml">barrier</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml">BatchNormalizationLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a> (<a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a>)</dd><dd><a class="el" href="classarm__compute_1_1bfloat16.xhtml">bfloat16</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_blob_info.xhtml">BlobInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_blob_lifetime_manager.xhtml">BlobLifetimeManager</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_blob_memory_pool.xhtml">BlobMemoryPool</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_bounding_box_transform_info.xhtml">BoundingBoxTransformInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_bounding_box_transform_layer.xhtml">BoundingBoxTransformLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_bounding_box_transform_layer_node.xhtml">BoundingBoxTransformLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_box_n_m_s_limit_info.xhtml">BoxNMSLimitInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml">HeuristicTree::BranchNode</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="structarm__compute_1_1detail_1_1brelu.xhtml">brelu</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_C">C</a></dt>
<dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_caffe_preproccessor.xhtml">CaffePreproccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml">CartesianProductDataset</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml">CastAttributes</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cast_data_type_i_s_a_selector_data.xhtml">CastDataTypeISASelectorData</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel_1_1_cast_kernel.xhtml">CpuCastKernel::CastKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_channel_shuffle_layer.xhtml">ChannelShuffleLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_channel_shuffle_layer_node.xhtml">ChannelShuffleLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">CharPosition</a> (<a class="el" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml">arm_compute::mlgo::parser</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_abs.xhtml">ClAbs</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_abs_layer.xhtml">CLAbsLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_activation.xhtml">ClActivation</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_activation_kernel.xhtml">ClActivationKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml">CLActivationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_add.xhtml">ClAdd</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_clamp_attributes.xhtml">ClampAttributes</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer_kernel.xhtml">CLArgMinMaxLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml">CLArithmeticAddition</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_arithmetic_division.xhtml">CLArithmeticDivision</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml">ClArithmeticKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_arithmetic_subtraction.xhtml">CLArithmeticSubtraction</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_array.xhtml">CLArray</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_c_l_array_accessor.xhtml">CLArrayAccessor</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_batch_concatenate_kernel.xhtml">ClBatchConcatenateKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_batch_normalization_layer.xhtml">CLBatchNormalizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_batch_normalization_layer_kernel.xhtml">CLBatchNormalizationLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_batch_to_space_layer.xhtml">CLBatchToSpaceLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_batch_to_space_layer_kernel.xhtml">CLBatchToSpaceLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_bitwise_and.xhtml">CLBitwiseAnd</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_bitwise_kernel.xhtml">CLBitwiseKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_bitwise_not.xhtml">CLBitwiseNot</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_bitwise_or.xhtml">CLBitwiseOr</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_bitwise_xor.xhtml">CLBitwiseXor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_bounding_box_transform.xhtml">CLBoundingBoxTransform</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_bounding_box_transform_kernel.xhtml">CLBoundingBoxTransformKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_buffer_allocator.xhtml">CLBufferAllocator</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml">CLBufferMemoryRegion</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_cast.xhtml">CLCast</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_cast.xhtml">ClCast</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_cast_kernel.xhtml">ClCastKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_channel_shuffle_layer.xhtml">CLChannelShuffleLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_channel_shuffle_layer_kernel.xhtml">CLChannelShuffleLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml">CLCoarseSVMMemoryRegion</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_col2_im_kernel.xhtml">ClCol2ImKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_comparison.xhtml">CLComparison</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_comparison_kernel.xhtml">CLComparisonKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_comparison_static.xhtml">CLComparisonStatic</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_complex_mul.xhtml">ClComplexMul</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_complex_mul_kernel.xhtml">ClComplexMulKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_complex_pixel_wise_multiplication.xhtml">CLComplexPixelWiseMultiplication</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_activation.xhtml">ClComponentActivation</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_cast.xhtml">ClComponentCast</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_cast_settings.xhtml">ClComponentCastSettings</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d.xhtml">ClComponentDepthwiseConv2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml">ClComponentDepthwiseConv2dSettings</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml">ClComponentDirectConv2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings.xhtml">ClComponentDirectConv2dSettings</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_elementwise_binary.xhtml">ClComponentElementwiseBinary</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_logits1_d_max_shift_exp_sum.xhtml">ClComponentLogits1DMaxShiftExpSum</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_logits1_d_norm.xhtml">ClComponentLogits1DNorm</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_mat_mul.xhtml">ClComponentMatMul</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_pool2d.xhtml">ClComponentPool2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_reshape.xhtml">ClComponentReshape</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_resize.xhtml">ClComponentResize</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_store.xhtml">ClComponentStore</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_compute_all_anchors_kernel.xhtml">CLComputeAllAnchorsKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_compute_mean_variance.xhtml">CLComputeMeanVariance</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_concatenate.xhtml">ClConcatenate</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml">CLConcatenateLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_context.xhtml">ClContext</a> (<a class="el" href="namespacearm__compute_1_1gpu_1_1opencl.xhtml">arm_compute::gpu::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_conv3_d.xhtml">CLConv3D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_convert_fully_connected_weights.xhtml">CLConvertFullyConnectedWeights</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_convert_fully_connected_weights.xhtml">ClConvertFullyConnectedWeights</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_convert_fully_connected_weights_kernel.xhtml">ClConvertFullyConnectedWeightsKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1weights__transformations_1_1_c_l_convert_fully_connected_weights_managed.xhtml">CLConvertFullyConnectedWeightsManaged</a> (<a class="el" href="namespacearm__compute_1_1weights__transformations.xhtml">arm_compute::weights_transformations</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_convolution_layer.xhtml">CLConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_copy.xhtml">CLCopy</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_copy.xhtml">ClCopy</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_copy_kernel.xhtml">ClCopyKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_crop.xhtml">CLCrop</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_crop.xhtml">ClCrop</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_crop_kernel.xhtml">ClCropKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_deconvolution_layer.xhtml">CLDeconvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_deconvolution_layer_upsample.xhtml">CLDeconvolutionLayerUpsample</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_deconvolution_layer_upsample_kernel.xhtml">CLDeconvolutionLayerUpsampleKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_deconvolution_reshape_output_kernel.xhtml">CLDeconvolutionReshapeOutputKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_depth_concatenate_kernel.xhtml">ClDepthConcatenateKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_depth_convert_layer.xhtml">CLDepthConvertLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_depth_to_space_layer.xhtml">CLDepthToSpaceLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_depth_to_space_layer_kernel.xhtml">CLDepthToSpaceLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer.xhtml">CLDepthwiseConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer_native_kernel.xhtml">CLDepthwiseConvolutionLayerNativeKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_dequantization_layer.xhtml">CLDequantizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_dequantize.xhtml">ClDequantize</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_dequantize_kernel.xhtml">ClDequantizeKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_device.xhtml">CLDevice</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml">CLDeviceBackend</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="structarm__compute_1_1_c_l_device_options.xhtml">CLDeviceOptions</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml">ClDirectConv2d</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_direct_conv2d_kernel.xhtml">ClDirectConv2dKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_direct_conv3d.xhtml">ClDirectConv3d</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_direct_conv3d_kernel.xhtml">ClDirectConv3dKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_config_array.xhtml">ClDirectConvConfigArray</a> (<a class="el" href="namespacearm__compute_1_1cl__direct__conv.xhtml">arm_compute::cl_direct_conv</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_default_config_bifrost.xhtml">ClDirectConvDefaultConfigBifrost</a> (<a class="el" href="namespacearm__compute_1_1cl__direct__conv.xhtml">arm_compute::cl_direct_conv</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_default_config_valhall.xhtml">ClDirectConvDefaultConfigValhall</a> (<a class="el" href="namespacearm__compute_1_1cl__direct__conv.xhtml">arm_compute::cl_direct_conv</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__direct__conv_1_1_cl_direct_conv_kernel_configuration_factory.xhtml">ClDirectConvKernelConfigurationFactory</a> (<a class="el" href="namespacearm__compute_1_1cl__direct__conv.xhtml">arm_compute::cl_direct_conv</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_direct_convolution_layer.xhtml">CLDirectConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_direct_deconvolution_layer.xhtml">CLDirectDeconvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_config_array.xhtml">ClDWCNativeConfigArray</a> (<a class="el" href="namespacearm__compute_1_1cl__dwc.xhtml">arm_compute::cl_dwc</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_default_config_bifrost.xhtml">ClDWCNativeDefaultConfigBifrost</a> (<a class="el" href="namespacearm__compute_1_1cl__dwc.xhtml">arm_compute::cl_dwc</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_default_config_valhall.xhtml">ClDWCNativeDefaultConfigValhall</a> (<a class="el" href="namespacearm__compute_1_1cl__dwc.xhtml">arm_compute::cl_dwc</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_kernel_configuration_factory.xhtml">ClDWCNativeKernelConfigurationFactory</a> (<a class="el" href="namespacearm__compute_1_1cl__dwc.xhtml">arm_compute::cl_dwc</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_elementwise_division.xhtml">ClElementwiseDivision</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel.xhtml">ClElementwiseKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_elementwise_max.xhtml">CLElementwiseMax</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_elementwise_max.xhtml">ClElementwiseMax</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_elementwise_min.xhtml">CLElementwiseMin</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_elementwise_min.xhtml">ClElementwiseMin</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_elementwise_power.xhtml">CLElementwisePower</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_elementwise_power.xhtml">ClElementwisePower</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_elementwise_squared_diff.xhtml">CLElementwiseSquaredDiff</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_elementwise_squared_diff.xhtml">ClElementwiseSquaredDiff</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_element_wise_unary_kernel.xhtml">ClElementWiseUnaryKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_exp.xhtml">ClExp</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_exp_layer.xhtml">CLExpLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_f_f_t1_d.xhtml">CLFFT1D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_f_f_t2_d.xhtml">CLFFT2D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_f_f_t_convolution_layer.xhtml">CLFFTConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_f_f_t_digit_reverse_kernel.xhtml">CLFFTDigitReverseKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_f_f_t_radix_stage_kernel.xhtml">CLFFTRadixStageKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_f_f_t_scale_kernel.xhtml">CLFFTScaleKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_fill.xhtml">ClFill</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_fill.xhtml">CLFill</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml">CLFillBorderKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_fill_kernel.xhtml">ClFillKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml">CLFineSVMMemoryRegion</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_flatten.xhtml">ClFlatten</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_flatten_layer.xhtml">CLFlattenLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_floor.xhtml">CLFloor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_floor.xhtml">ClFloor</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_floor_kernel.xhtml">ClFloorKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml">ClFullyConnected</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml">CLFullyConnectedLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_function_factory.xhtml">CLFunctionFactory</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_fuse_batch_normalization.xhtml">CLFuseBatchNormalization</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_fuse_batch_normalization_kernel.xhtml">CLFuseBatchNormalizationKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_gather.xhtml">CLGather</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_gather_kernel.xhtml">CLGatherKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">CLGEMM</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml">ClGemm</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_c_l_g_e_m_m_config_array.xhtml">CLGEMMConfigArray</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">ClGemmConv2d</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_convolution_layer.xhtml">CLGEMMConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_deconvolution_layer.xhtml">CLGEMMDeconvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_native_bifrost.xhtml">ClGemmDefaultConfigNativeBifrost</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_native_midgard.xhtml">ClGemmDefaultConfigNativeMidgard</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_native_valhall.xhtml">ClGemmDefaultConfigNativeValhall</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_reshaped_bifrost.xhtml">ClGemmDefaultConfigReshapedBifrost</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_reshaped_rhs_only_bifrost.xhtml">ClGemmDefaultConfigReshapedRhsOnlyBifrost</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_reshaped_rhs_only_valhall.xhtml">ClGemmDefaultConfigReshapedRhsOnlyValhall</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_default_config_reshaped_valhall.xhtml">ClGemmDefaultConfigReshapedValhall</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_default_type_bifrost.xhtml">CLGEMMDefaultTypeBifrost</a> (<a class="el" href="namespacearm__compute_1_1cl__gemm.xhtml">arm_compute::cl_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_default_type_midgard.xhtml">CLGEMMDefaultTypeMidgard</a> (<a class="el" href="namespacearm__compute_1_1cl__gemm.xhtml">arm_compute::cl_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_default_type_valhall.xhtml">CLGEMMDefaultTypeValhall</a> (<a class="el" href="namespacearm__compute_1_1cl__gemm.xhtml">arm_compute::cl_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_heuristics_handle.xhtml">CLGEMMHeuristicsHandle</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_kernel_selection_factory.xhtml">CLGEMMKernelSelectionFactory</a> (<a class="el" href="namespacearm__compute_1_1cl__gemm.xhtml">arm_compute::cl_gemm</a>)</dd><dd><a class="el" href="structarm__compute_1_1_c_l_g_e_m_m_kernel_selection_params.xhtml">CLGEMMKernelSelectionParams</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_a_reduction_kernel.xhtml">ClGemmLowpMatrixAReductionKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_b_reduction_kernel.xhtml">ClGemmLowpMatrixBReductionKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml">CLGEMMLowpMatrixMultiplyCore</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml">ClGemmLowpMatrixMultiplyCore</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_native_kernel.xhtml">ClGemmLowpMatrixMultiplyNativeKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_kernel.xhtml">ClGemmLowpMatrixMultiplyReshapedKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel.xhtml">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel.xhtml">ClGemmLowpMatrixMultiplyReshapedOnlyRhsMMULKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_kernel.xhtml">ClGemmLowpOffsetContributionKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_output_stage_kernel.xhtml">ClGemmLowpOffsetContributionOutputStageKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage.xhtml">CLGEMMLowpOutputStage</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_output_stage.xhtml">ClGemmLowpOutputStage</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel.xhtml">ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_quantize_down_int32_scale_by_float_kernel.xhtml">ClGemmLowpQuantizeDownInt32ScaleByFloatKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_quantize_down_int32_scale_kernel.xhtml">ClGemmLowpQuantizeDownInt32ScaleKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_native_kernel.xhtml">ClGemmMatrixMultiplyNativeKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_kernel.xhtml">ClGemmMatrixMultiplyReshapedKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_only_rhs_kernel.xhtml">ClGemmMatrixMultiplyReshapedOnlyRhsKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel.xhtml">ClGemmMatrixMultiplyReshapedOnlyRhsMMULKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_native_kernel_configuration_factory.xhtml">ClGemmNativeKernelConfigurationFactory</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_reshaped_kernel_configuration_factory.xhtml">ClGemmReshapedKernelConfigurationFactory</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_cl_gemm_reshaped_only_rhs_kernel_configuration_factory.xhtml">ClGemmReshapedOnlyRhsKernelConfigurationFactory</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_lhs_matrix_kernel.xhtml">ClGemmReshapeLhsMatrixKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_rhs_matrix_kernel.xhtml">ClGemmReshapeRhsMatrixKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_generate_proposals_layer.xhtml">CLGenerateProposalsLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_height_concatenate_kernel.xhtml">ClHeightConcatenateKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_im2_col_kernel.xhtml">ClIm2ColKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml">ClIndirectConv2d</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_indirect_conv2d_address_precalculation_kernel.xhtml">ClIndirectConv2dAddressPrecalculationKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_indirect_conv2d_kernel.xhtml">ClIndirectConv2dKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_config_array.xhtml">ClIndirectConvConfigArray</a> (<a class="el" href="namespacearm__compute_1_1cl__indirect__conv.xhtml">arm_compute::cl_indirect_conv</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall.xhtml">ClIndirectConvDefaultConfigValhall</a> (<a class="el" href="namespacearm__compute_1_1cl__indirect__conv.xhtml">arm_compute::cl_indirect_conv</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_kernel_configuration_factory.xhtml">ClIndirectConvKernelConfigurationFactory</a> (<a class="el" href="namespacearm__compute_1_1cl__indirect__conv.xhtml">arm_compute::cl_indirect_conv</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_indirect_convolution_layer.xhtml">CLIndirectConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_instance_normalization_layer.xhtml">CLInstanceNormalizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_instance_normalization_layer_kernel.xhtml">CLInstanceNormalizationLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml">ClKernelLibrary</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime.xhtml">ClKernelRuntime</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_l2_normalize_layer.xhtml">CLL2NormalizeLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_l2_normalize_layer_kernel.xhtml">CLL2NormalizeLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_log.xhtml">ClLog</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_logical_and.xhtml">CLLogicalAnd</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1_c_l_logical_and.xhtml">CLLogicalAnd</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml">ClLogicalBinaryKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_logical_not.xhtml">CLLogicalNot</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_logical_not.xhtml">ClLogicalNot</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_logical_or.xhtml">CLLogicalOr</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1_c_l_logical_or.xhtml">CLLogicalOr</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_log_layer.xhtml">CLLogLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer.xhtml">CLLSTMLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_mat_mul.xhtml">CLMatMul</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_mat_mul.xhtml">ClMatMul</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_lowp_native_kernel.xhtml">ClMatMulLowpNativeKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_lowp_native_m_m_u_l_kernel.xhtml">ClMatMulLowpNativeMMULKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_config_array.xhtml">ClMatMulNativeConfigArray</a> (<a class="el" href="namespacearm__compute_1_1cl__matmul.xhtml">arm_compute::cl_matmul</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_default_config_valhall.xhtml">ClMatMulNativeDefaultConfigValhall</a> (<a class="el" href="namespacearm__compute_1_1cl__matmul.xhtml">arm_compute::cl_matmul</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_default_variant_valhall.xhtml">ClMatMulNativeDefaultVariantValhall</a> (<a class="el" href="namespacearm__compute_1_1cl__matmul.xhtml">arm_compute::cl_matmul</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_native_kernel.xhtml">ClMatMulNativeKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_kernel_configuration_factory.xhtml">ClMatMulNativeKernelConfigurationFactory</a> (<a class="el" href="namespacearm__compute_1_1cl__matmul.xhtml">arm_compute::cl_matmul</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_kernel_variant_factory.xhtml">ClMatMulNativeKernelVariantFactory</a> (<a class="el" href="namespacearm__compute_1_1cl__matmul.xhtml">arm_compute::cl_matmul</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_native_m_m_u_l_kernel.xhtml">ClMatMulNativeMMULKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__matmul_1_1_cl_mat_mul_native_variant_array.xhtml">ClMatMulNativeVariantArray</a> (<a class="el" href="namespacearm__compute_1_1cl__matmul.xhtml">arm_compute::cl_matmul</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_max_unpooling_layer.xhtml">CLMaxUnpoolingLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_max_unpooling_layer_kernel.xhtml">CLMaxUnpoolingLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_mean_std_dev_normalization_kernel.xhtml">CLMeanStdDevNormalizationKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_mean_std_dev_normalization_layer.xhtml">CLMeanStdDevNormalizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_memory.xhtml">CLMemory</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_mul.xhtml">ClMul</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_mul_kernel.xhtml">ClMulKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_neg.xhtml">ClNeg</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_neg_layer.xhtml">CLNegLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_node_validator.xhtml">CLNodeValidator</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_normalization_layer.xhtml">CLNormalizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_normalization_layer_kernel.xhtml">CLNormalizationLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_normalize_planar_y_u_v_layer.xhtml">CLNormalizePlanarYUVLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_normalize_planar_y_u_v_layer_kernel.xhtml">CLNormalizePlanarYUVLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_pad_layer.xhtml">CLPadLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_pad_layer_kernel.xhtml">CLPadLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_permute.xhtml">CLPermute</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_permute.xhtml">ClPermute</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_permute_kernel.xhtml">ClPermuteKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml">CLPixelWiseMultiplication</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_pool2d.xhtml">ClPool2d</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_pool2d_kernel.xhtml">ClPool2dKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_pool3d.xhtml">ClPool3d</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_pool3d_kernel.xhtml">ClPool3dKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_pooling3d_layer.xhtml">CLPooling3dLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_pooling_layer.xhtml">CLPoolingLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_p_relu.xhtml">ClPRelu</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_p_relu_layer.xhtml">CLPReluLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_prior_box_layer.xhtml">CLPriorBoxLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_prior_box_layer_kernel.xhtml">CLPriorBoxLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1opencl_1_1_cl_kernel_library_1_1_cl_program_info.xhtml">ClKernelLibrary::ClProgramInfo</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_q_l_s_t_m_layer.xhtml">CLQLSTMLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_q_l_s_t_m_layer_normalization_kernel.xhtml">CLQLSTMLayerNormalizationKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_c_l_quantization.xhtml">CLQuantization</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_quantization_layer.xhtml">CLQuantizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_quantize.xhtml">ClQuantize</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_quantize_kernel.xhtml">ClQuantizeKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_queue.xhtml">ClQueue</a> (<a class="el" href="namespacearm__compute_1_1gpu_1_1opencl.xhtml">arm_compute::gpu::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_range.xhtml">CLRange</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_range_kernel.xhtml">CLRangeKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_reduce_mean.xhtml">CLReduceMean</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_reduction_operation.xhtml">CLReductionOperation</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_reduction_operation_kernel.xhtml">CLReductionOperationKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_reorg_layer.xhtml">CLReorgLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_reorg_layer_kernel.xhtml">CLReorgLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_reshape.xhtml">ClReshape</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_reshape_kernel.xhtml">ClReshapeKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_reshape_layer.xhtml">CLReshapeLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_reverse.xhtml">CLReverse</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_reverse_kernel.xhtml">CLReverseKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_r_n_n_layer.xhtml">CLRNNLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_r_o_i_align_layer.xhtml">CLROIAlignLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_r_o_i_align_layer_kernel.xhtml">CLROIAlignLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer.xhtml">CLROIPoolingLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer_kernel.xhtml">CLROIPoolingLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_round.xhtml">ClRound</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_round_layer.xhtml">CLRoundLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_rsqrt.xhtml">ClRsqrt</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_rsqrt_layer.xhtml">CLRsqrtLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_runtime_context.xhtml">CLRuntimeContext</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml">ClSaturatedArithmeticKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_scale.xhtml">CLScale</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_scale.xhtml">ClScale</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_scale_kernel.xhtml">ClScaleKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml">CLScheduler</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_select.xhtml">CLSelect</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_select_kernel.xhtml">CLSelectKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_sin.xhtml">ClSin</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_sin_layer.xhtml">CLSinLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_slice.xhtml">CLSlice</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1_c_l_slice.xhtml">CLSlice</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_softmax.xhtml">ClSoftmax</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_softmax_kernel.xhtml">ClSoftmaxKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_softmax_layer_generic.xhtml">CLSoftmaxLayerGeneric</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_space_to_batch_layer.xhtml">CLSpaceToBatchLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_space_to_batch_layer_kernel.xhtml">CLSpaceToBatchLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_space_to_depth_layer.xhtml">CLSpaceToDepthLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_space_to_depth_layer_kernel.xhtml">CLSpaceToDepthLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_split.xhtml">CLSplit</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_stack_layer.xhtml">CLStackLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_stack_layer_kernel.xhtml">CLStackLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_strided_slice.xhtml">CLStridedSlice</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1_c_l_strided_slice.xhtml">CLStridedSlice</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_strided_slice_kernel.xhtml">CLStridedSliceKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_sub.xhtml">ClSub</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml">CLSubTensor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_sub_tensor_handle.xhtml">CLSubTensorHandle</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml">CLSymbols</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_function.xhtml">CLSynthetizeFunction</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_function_init_output_with_zero_and_with_zero_constant_border.xhtml">CLSynthetizeFunctionInitOutputWithZeroAndWithZeroConstantBorder</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_function_with_zero_constant_border.xhtml">CLSynthetizeFunctionWithZeroConstantBorder</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml">CLSynthetizeOperator</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator_init_output_with_zero_and_with_zero_constant_border.xhtml">CLSynthetizeOperatorInitOutputWithZeroAndWithZeroConstantBorder</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_cl_synthetize_operator_with_border.xhtml">ClSynthetizeOperatorWithBorder</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_activation.xhtml">ClTemplateActivation</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml">ClTemplateCast</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_logits1_d_max_shift_exp_sum.xhtml">ClTemplateLogits1DMaxShiftExpSum</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_logits1_d_norm.xhtml">ClTemplateLogits1DNorm</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_pool2d.xhtml">ClTemplatePool2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_reshape.xhtml">ClTemplateReshape</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_resize.xhtml">ClTemplateResize</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_store.xhtml">ClTemplateStore</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml">ClTemplateWriter</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1gpu_1_1opencl_1_1_cl_tensor.xhtml">ClTensor</a> (<a class="el" href="namespacearm__compute_1_1gpu_1_1opencl.xhtml">arm_compute::gpu::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml">CLTensorAllocator</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_tile.xhtml">CLTile</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_tile_kernel.xhtml">CLTileKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_transpose.xhtml">CLTranspose</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_transpose.xhtml">ClTranspose</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_transposed_convolution.xhtml">ClTransposedConvolution</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_transposed_convolution_kernel.xhtml">ClTransposedConvolutionKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_transpose_kernel.xhtml">ClTransposeKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml">CLTuner</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_unstack.xhtml">CLUnstack</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_weights_reshape_kernel.xhtml">ClWeightsReshapeKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_width_concatenate2_tensors_kernel.xhtml">ClWidthConcatenate2TensorsKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_width_concatenate4_tensors_kernel.xhtml">ClWidthConcatenate4TensorsKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_width_concatenate_kernel.xhtml">ClWidthConcatenateKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml">ClWinogradConv2d</a> (<a class="el" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_l_winograd_convolution_layer.xhtml">CLWinogradConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_winograd_filter_transform_kernel.xhtml">ClWinogradFilterTransformKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_winograd_input_transform_kernel.xhtml">ClWinogradInputTransformKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_winograd_output_transform_kernel.xhtml">ClWinogradOutputTransformKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml">ClWorkloadRuntime</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">CommandLineParser</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1common__promoted__signed__type.xhtml">common_promoted_signed_type</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1common__promoted__unsigned__type.xhtml">common_promoted_unsigned_type</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classgemm__tuner_1_1_common_gemm_example_options.xhtml">CommonGemmExampleOptions</a> (<a class="el" href="namespacegemm__tuner.xhtml">gemm_tuner</a>)</dd><dd><a class="el" href="structgemm__tuner_1_1_common_gemm_example_params.xhtml">CommonGemmExampleParams</a> (<a class="el" href="namespacegemm__tuner.xhtml">gemm_tuner</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">CommonGraphOptions</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">CommonGraphParams</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_common_graph_validate_options.xhtml">CommonGraphValidateOptions</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml">CommonOptions</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="structarm__compute_1_1utils_1_1_common_params.xhtml">CommonParams</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">CommonQuery</a> (<a class="el" href="namespacearm__compute_1_1cl__gemm_1_1auto__heuristics.xhtml">arm_compute::cl_gemm::auto_heuristics</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare.xhtml">compare</a> (<a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_absolute_tolerance_3_01_u_01_4_01_4.xhtml">compare&lt; AbsoluteTolerance&lt; U &gt; &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_relative_tolerance_3_01_u_01_4_01_4.xhtml">compare&lt; RelativeTolerance&lt; U &gt; &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare__base.xhtml">compare_base</a> (<a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a>)</dd><dd><a class="el" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml">compare_dimension</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1_compute_anchors_info.xhtml">ComputeAnchorsInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">ConcatenateLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_concat_layer.xhtml">ConcatLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1descriptors_1_1_concat_layer_descriptor.xhtml">ConcatLayerDescriptor</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1descriptors.xhtml">arm_compute::graph::descriptors</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1_condition.xhtml">Condition</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_constant_layer.xhtml">ConstantLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml">ContainerDataset</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="classacl_1_1_context.xhtml">Context</a> (<a class="el" href="namespaceacl.xhtml">acl</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_context_scheduler_user.xhtml">ContextSchedulerUser</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1_context_type.xhtml">ContextType</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1_context_type_3_01_tensor_01_4.xhtml">ContextType&lt; Tensor &gt;</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">Conv2dAttributes</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_conv3d_info.xhtml">Conv3dInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_convolution_info.xhtml">ConvolutionInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">ConvolutionLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_convolution_parameters.xhtml">ConvolutionParameters</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="structarm__compute_1_1utils_1_1_convolution_params.xhtml">ConvolutionParams</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__gemm_1_1convolver.xhtml">convolver</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="struct_coordinates2_d.xhtml">Coordinates2D</a></dd><dd><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_coordinates3_d.xhtml">Coordinates3D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__conv_1_1pooling_1_1cpp__nhwc__1x1__stride__any__depthfirst.xhtml">cpp_nhwc_1x1_stride_any_depthfirst</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_box_with_non_maxima_suppression_limit.xhtml">CPPBoxWithNonMaximaSuppressionLimit</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_box_with_non_maxima_suppression_limit_kernel.xhtml">CPPBoxWithNonMaximaSuppressionLimitKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_detection_output_layer.xhtml">CPPDetectionOutputLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_detection_post_process_layer.xhtml">CPPDetectionPostProcessLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_non_maximum_suppression.xhtml">CPPNonMaximumSuppression</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_non_maximum_suppression_kernel.xhtml">CPPNonMaximumSuppressionKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_permute.xhtml">CPPPermute</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_permute_kernel.xhtml">CPPPermuteKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml">CPPScheduler</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_split.xhtml">CPPSplit</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_top_k_v.xhtml">CPPTopKV</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_top_k_v_kernel.xhtml">CPPTopKVKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_upsample.xhtml">CPPUpsample</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_p_upsample_kernel.xhtml">CPPUpsampleKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_activation.xhtml">CpuActivation</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_activation_kernel.xhtml">CpuActivationKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_add.xhtml">CpuAdd</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml">CpuAddKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_data_type_i_s_a_selector_data.xhtml">CpuAddKernelDataTypeISASelectorData</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_add_mul_add.xhtml">CpuAddMulAdd</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_mul_add_kernel.xhtml">CpuAddMulAddKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml">CpuArithmeticKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml">CpuAuxTensorHandler</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1_cpu_capabilities.xhtml">CpuCapabilities</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_cast.xhtml">CpuCast</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml">CpuCastKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_col2_im_kernel.xhtml">CpuCol2ImKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_comparison_kernel.xhtml">CpuComparisonKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_complex_mul.xhtml">CpuComplexMul</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_complex_mul_kernel.xhtml">CpuComplexMulKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_concatenate.xhtml">CpuConcatenate</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_batch_kernel.xhtml">CpuConcatenateBatchKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_depth_kernel.xhtml">CpuConcatenateDepthKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_height_kernel.xhtml">CpuConcatenateHeightKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_width_kernel.xhtml">CpuConcatenateWidthKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml">CpuContext</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml">CpuConv2d</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_convert_fully_connected_weights.xhtml">CpuConvertFullyConnectedWeights</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_convert_fully_connected_weights_kernel.xhtml">CpuConvertFullyConnectedWeightsKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_convert_quantized_signedness_kernel.xhtml">CpuConvertQuantizedSignednessKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_copy.xhtml">CpuCopy</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_copy_kernel.xhtml">CpuCopyKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d.xhtml">CpuDepthwiseConv2d</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml">CpuDepthwiseConv2dAssemblyDispatch</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_depthwise_conv2d_assembly_wrapper_kernel.xhtml">CpuDepthwiseConv2dAssemblyWrapperKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_depthwise_conv2d_native_kernel.xhtml">CpuDepthwiseConv2dNativeKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_dequantize.xhtml">CpuDequantize</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_dequantize_kernel.xhtml">CpuDequantizeKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_direct_conv2d.xhtml">CpuDirectConv2d</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv2d_kernel.xhtml">CpuDirectConv2dKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv2d_output_stage_kernel.xhtml">CpuDirectConv2dOutputStageKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_direct_conv3d.xhtml">CpuDirectConv3d</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv3d_kernel.xhtml">CpuDirectConv3dKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_division_kernel.xhtml">CpuDivisionKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_arithmetic.xhtml">CpuElementwiseArithmetic</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_base.xhtml">CpuElementwiseBase</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison.xhtml">CpuElementwiseComparison</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison_static.xhtml">CpuElementwiseComparisonStatic</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_division.xhtml">CpuElementwiseDivision</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_kernel.xhtml">CpuElementwiseKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_power.xhtml">CpuElementwisePower</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_unary.xhtml">CpuElementwiseUnary</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_unary_kernel.xhtml">CpuElementwiseUnaryKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_fill.xhtml">CpuFill</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_fill_kernel.xhtml">CpuFillKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_flatten.xhtml">CpuFlatten</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_floor.xhtml">CpuFloor</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_floor_kernel.xhtml">CpuFloorKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml">CpuFullyConnected</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml">CpuGemm</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml">CpuGemmAssemblyDispatch</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml">CpuGemmAssemblyWrapperKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernel.xhtml">arm_compute::cpu::kernel</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml">CpuGemmConv2d</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml">CpuGemmDirectConv2d</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_interleave4x4_kernel.xhtml">CpuGemmInterleave4x4Kernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml">CpuGemmLowpMatrixAReductionKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_b_reduction_kernel.xhtml">CpuGemmLowpMatrixBReductionKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml">CpuGemmLowpMatrixMultiplyCore</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_multiply_kernel.xhtml">CpuGemmLowpMatrixMultiplyKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_offset_contribution_kernel.xhtml">CpuGemmLowpOffsetContributionKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_offset_contribution_output_stage_kernel.xhtml">CpuGemmLowpOffsetContributionOutputStageKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_output_stage.xhtml">CpuGemmLowpOutputStage</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_scale_kernel.xhtml">CpuGemmLowpQuantizeDownInt32ScaleKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel.xhtml">CpuGemmLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel.xhtml">CpuGemmLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel.xhtml">CpuGemmLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_matrix_addition_kernel.xhtml">CpuGemmMatrixAdditionKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_matrix_multiply_kernel.xhtml">CpuGemmMatrixMultiplyKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_transpose1x_w_kernel.xhtml">CpuGemmTranspose1xWKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_im2_col_kernel.xhtml">CpuIm2ColKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml">CpuInfo</a> (<a class="el" href="namespacearm__compute_1_1cpuinfo.xhtml">arm_compute::cpuinfo</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml">CpuIsaInfo</a> (<a class="el" href="namespacearm__compute_1_1cpuinfo.xhtml">arm_compute::cpuinfo</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml">CpuMatMul</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1_cpu_mat_mul_settings.xhtml">CpuMatMulSettings</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_max_unpooling.xhtml">CpuMaxUnpooling</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_max_unpooling_layer_kernel.xhtml">CpuMaxUnpoolingLayerKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_mul.xhtml">CpuMul</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_mul_kernel.xhtml">CpuMulKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_permute.xhtml">CpuPermute</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_permute_kernel.xhtml">CpuPermuteKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool2d.xhtml">CpuPool2d</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool2d_assembly_wrapper_kernel.xhtml">CpuPool2dAssemblyWrapperKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool2d_kernel.xhtml">CpuPool2dKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool3d.xhtml">CpuPool3d</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool3d_kernel.xhtml">CpuPool3dKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_power_kernel.xhtml">CpuPowerKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_quantize.xhtml">CpuQuantize</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_quantize_kernel.xhtml">CpuQuantizeKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_queue.xhtml">CpuQueue</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_reshape.xhtml">CpuReshape</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_reshape_kernel.xhtml">CpuReshapeKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_scale.xhtml">CpuScale</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml">CpuScaleKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_softmax_generic.xhtml">CpuSoftmaxGeneric</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_softmax_kernel.xhtml">CpuSoftmaxKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_sub.xhtml">CpuSub</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_sub_kernel.xhtml">CpuSubKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_tensor.xhtml">CpuTensor</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_transpose.xhtml">CpuTranspose</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_transpose_kernel.xhtml">CpuTransposeKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_weights_reshape_kernel.xhtml">CpuWeightsReshapeKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml">CpuWinogradConv2d</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml">CpuWinogradConv2dTransformInputKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml">CpuWinogradConv2dTransformOutputKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="structarm__compute_1_1misc_1_1_c_r_t_p.xhtml">CRTP</a> (<a class="el" href="namespacearm__compute_1_1misc.xhtml">arm_compute::misc</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_D">D</a></dt>
<dd><a class="el" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml">DataLayerVisitor</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml">Dataset</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml">DataTestCase</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml">DataTestCaseFactory</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_data_type_data_layout_i_s_a_selector_data.xhtml">DataTypeDataLayoutISASelectorData</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_data_type_i_s_a_selector_data.xhtml">DataTypeISASelectorData</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1logging_1_1_date_decorator.xhtml">DateDecorator</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_deconvolution_layer.xhtml">DeconvolutionLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1descriptors_1_1_deconvolution_layer_descriptor.xhtml">DeconvolutionLayerDescriptor</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1descriptors.xhtml">arm_compute::graph::descriptors</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml">DeconvolutionLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1memory_1_1deep__unique__ptr.xhtml">deep_unique_ptr</a> (<a class="el" href="namespacearm__compute_1_1utils_1_1memory.xhtml">arm_compute::utils::memory</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_default_node_visitor.xhtml">DefaultNodeVisitor</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_default_output_stage.xhtml">DefaultOutputStage</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_default_output_stage_3_01int8__t_01_4.xhtml">DefaultOutputStage&lt; int8_t &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_default_output_stage_3_01uint8__t_01_4.xhtml">DefaultOutputStage&lt; uint8_t &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_default_t_accum.xhtml">DefaultTAccum</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_default_t_accum_3_01int8__t_01_4.xhtml">DefaultTAccum&lt; int8_t &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_default_t_accum_3_01uint8__t_01_4.xhtml">DefaultTAccum&lt; uint8_t &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_depth_concat_sub_tensor_mutator.xhtml">DepthConcatSubTensorMutator</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml">DepthfirstDriver</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1pooling_1_1_depthfirst_driver.xhtml">DepthfirstDriver</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml">DepthfirstMultiplierStrategy</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy.xhtml">DepthfirstStrategy</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1pooling_1_1_depthfirst_strategy.xhtml">DepthfirstStrategy</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped.xhtml">DepthfirstStrategyUntyped</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_depth_to_space_layer.xhtml">DepthToSpaceLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_depth_to_space_layer_node.xhtml">DepthToSpaceLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml">DepthwiseConv2dAttributes</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_depthwise_conv2d_native_data_type_i_s_a_selector_data.xhtml">DepthwiseConv2dNativeDataTypeISASelectorData</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_depthwise_conv2d_native_kernel_1_1_depthwise_conv2d_native_kernel.xhtml">CpuDepthwiseConv2dNativeKernel::DepthwiseConv2dNativeKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml">DepthwiseConvolutionLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">DepthwiseConvolutionLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml">DepthwiseConvolutionRunInfo</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst.xhtml">DepthwiseDepthfirst</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_common.xhtml">DepthwiseDepthfirstCommon</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic.xhtml">DepthwiseDepthfirstGeneric</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_kernel_call.xhtml">DepthwiseDepthfirstGenericKernelCall</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_kernel_call_3_01arm__gemm_1_1_requantize32_01_4.xhtml">DepthwiseDepthfirstGenericKernelCall&lt; arm_gemm::Requantize32 &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_depthwise_depthfirst_generic_kernel_call_3_01_nothing_01_4.xhtml">DepthwiseDepthfirstGenericKernelCall&lt; Nothing &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy.xhtml">DepthwiseDepthfirstStrategy</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml">DepthwiseDepthfirstStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml">DepthwiseDepthfirstStrategyCommon</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_depthwise_implementation.xhtml">DepthwiseImplementation</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_depthwise_planar.xhtml">DepthwisePlanar</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_dequantization_layer.xhtml">DequantizationLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml">DequantizationLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_detection_output_accessor.xhtml">DetectionOutputAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_detection_output_layer.xhtml">DetectionOutputLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1_detection_output_layer_info.xhtml">DetectionOutputLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml">DetectionOutputLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_detection_post_process_layer.xhtml">DetectionPostProcessLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1_detection_post_process_layer_info.xhtml">DetectionPostProcessLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml">DetectionPostProcessLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1_detection_window.xhtml">DetectionWindow</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="struct_detection_window.xhtml">DetectionWindow</a></dd><dd><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_dimensions.xhtml">Dimensions</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv2d_kernel_1_1_direct_conv2d_kernel.xhtml">CpuDirectConv2dKernel::DirectConv2dKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv3d_kernel_1_1_direct_conv3d_kernel.xhtml">CpuDirectConv3dKernel::DirectConv3dKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml">DirectConvComputeKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml">DirectConvolutionLayerOutputStageKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_printer.xhtml">DotGraphPrinter</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml">DotGraphVisitor</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1detail_1_1dummy.xhtml">dummy</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml">DummyAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_dummy_layer.xhtml">DummyLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_dummy_node.xhtml">DummyNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1_d_w_c_compute_kernel_info.xhtml">DWCComputeKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_E">E</a></dt>
<dd><a class="el" href="classarm__compute_1_1graph_1_1_edge.xhtml">Edge</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml">ElementwiseBinaryCommonAttributes</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_elementwise_data_type_i_s_a_selector_data.xhtml">ElementwiseDataTypeISASelectorData</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_kernel_1_1_elementwise_kernel.xhtml">CpuElementwiseKernel::ElementwiseKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_unary_kernel_1_1_elementwise_unary_kernel.xhtml">CpuElementwiseUnaryKernel::ElementwiseUnaryKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_eltwise_layer.xhtml">EltwiseLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1descriptors_1_1_eltwise_layer_descriptor.xhtml">EltwiseLayerDescriptor</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1descriptors.xhtml">arm_compute::graph::descriptors</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1enable__bitwise__ops.xhtml">enable_bitwise_ops</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1enable__bitwise__ops_3_01arm__compute_1_1_g_p_u_target_01_4.xhtml">enable_bitwise_ops&lt; arm_compute::GPUTarget &gt;</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_enum_list_option.xhtml">EnumListOption</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_enum_option.xhtml">EnumOption</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1_erf_lut_entry.xhtml">ErfLutEntry</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_example.xhtml">Example</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1utils_1_1_example_params.xhtml">ExampleParams</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1_execution_workload.xhtml">ExecutionWorkload</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_F">F</a></dt>
<dd><a class="el" href="structarm__compute_1_1_f_f_t1_d_info.xhtml">FFT1DInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_f_f_t2_d_info.xhtml">FFT2DInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml">FFTDigitReverseKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml">FFTRadixStageKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml">FFTScaleKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1io_1_1_file_handler.xhtml">FileHandler</a> (<a class="el" href="namespacearm__compute_1_1io.xhtml">arm_compute::io</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_file_image_feeder.xhtml">FileImageFeeder</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_file_not_found.xhtml">FileNotFound</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1logging_1_1_file_printer.xhtml">FilePrinter</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_fixture.xhtml">Fixture</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml">FlattenLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer_node.xhtml">FlattenLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_floor_kernel_1_1_floor_kernel.xhtml">CpuFloorKernel::FloorKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classformat__code_1_1_format_code_run.xhtml">FormatCodeRun</a> (<a class="el" href="namespaceformat__code.xhtml">format_code</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">FrameworkConfig</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="structarm__compute_1_1utils_1_1_framework_params.xhtml">FrameworkParams</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer_node.xhtml">FullyConnectedLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1utils_1_1_fully_connected_params.xhtml">FullyConnectedParams</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_fused_convolution_batch_normalization_function.xhtml">FusedConvolutionBatchNormalizationFunction</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml">FusedConvolutionBatchNormalizationNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_fused_depthwise_convolution_batch_normalization_function.xhtml">FusedDepthwiseConvolutionBatchNormalizationFunction</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml">FusedDepthwiseConvolutionBatchNormalizationNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_G">G</a></dt>
<dd><a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml">GEMMBenchmarkResultRecorder</a> (<a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml">GemmCommon</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_gemm_config.xhtml">GemmConfig</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_config_distribution.xhtml">GEMMConfigDistribution</a> (<a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_native.xhtml">GEMMConfigNative</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped.xhtml">GEMMConfigReshaped</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_only_r_h_s.xhtml">GEMMConfigReshapedOnlyRHS</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_g_e_m_m_config_result.xhtml">GEMMConfigResult</a> (<a class="el" href="namespacearm__compute_1_1cl__gemm_1_1auto__heuristics.xhtml">arm_compute::cl_gemm::auto_heuristics</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_gemm_hybrid.xhtml">GemmHybrid</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_gemm_hybrid_indirect.xhtml">GemmHybridIndirect</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_gemm_hybrid_quantized.xhtml">GemmHybridQuantized</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_gemm_hybrid_quantized_inline.xhtml">GemmHybridQuantizedInline</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_gemm_implementation_3_01_top_00_01_tret_00_01_nothing_01_4.xhtml">GemmImplementation&lt; Top, Tret, Nothing &gt;</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml">GEMMKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml">GEMMLHSMatrixInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_matrix_addition_kernel_1_1_gemm_matrix_add_kernel.xhtml">CpuGemmMatrixAdditionKernel::GemmMatrixAddKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_matrix_multiply_kernel_1_1_gemm_matrix_mul_kernel.xhtml">CpuGemmMatrixMultiplyKernel::GemmMatrixMulKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_param.xhtml">GEMMParam</a> (<a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a>)</dd><dd><a class="el" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml">GEMMRHSMatrixInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">GEMMShape</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_g_e_m_m_type_result.xhtml">GEMMTypeResult</a> (<a class="el" href="namespacearm__compute_1_1cl__gemm_1_1auto__heuristics.xhtml">arm_compute::cl_gemm::auto_heuristics</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_gemv_batched.xhtml">GemvBatched</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classformat__code_1_1_generate_android_b_p.xhtml">GenerateAndroidBP</a> (<a class="el" href="namespaceformat__code.xhtml">format_code</a>)</dd><dd><a class="el" href="classarm__compute_1_1_generate_proposals_info.xhtml">GenerateProposalsInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_generate_proposals_layer.xhtml">GenerateProposalsLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_generate_proposals_layer_node.xhtml">GenerateProposalsLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_kernel_strategy.xhtml">GenericDepthfirstKernelStrategy</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_generic_depthfirst_kernel_strategy_function_type.xhtml">GenericDepthfirstKernelStrategyFunctionType</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_generic_depthfirst_kernel_strategy_function_type_3_01_t_input_078319fdd1a8adfae8613a2c0dcd548f2.xhtml">GenericDepthfirstKernelStrategyFunctionType&lt; TInput, TOutput, int32_t &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml">GenericDepthfirstMultiplierKernelStrategy</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml">GenericDepthfirstMultiplierKernelStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml">GenericDepthfirstMultiplierStrategy</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_strategy.xhtml">GenericDepthfirstStrategy</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1pooling_1_1_generic_depthfirst_wrapper.xhtml">GenericDepthfirstWrapper</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_generic_input_array_element.xhtml">GenericInputArrayElement</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__compute_1_1detail_1_1get__tensor__info__t.xhtml">get_tensor_info_t</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd><dd><a class="el" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml">get_tensor_info_t&lt; ITensorInfo * &gt;</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_add.xhtml">GpuAdd</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_cast.xhtml">GpuCast</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_activation.xhtml">GpuCkwActivation</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_cast.xhtml">GpuCkwCast</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_component_argument.xhtml">GpuCkwComponentArgument</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_depthwise_conv2d.xhtml">GpuCkwDepthwiseConv2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_direct_conv2d.xhtml">GpuCkwDirectConv2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_driver.xhtml">GpuCkwDriver</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_elementwise_binary.xhtml">GpuCkwElementwiseBinary</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_mat_mul.xhtml">GpuCkwMatMul</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_pool2d.xhtml">GpuCkwPool2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_resize.xhtml">GpuCkwResize</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_scoped_kernel_writer.xhtml">GpuCkwScopedKernelWriter</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_store.xhtml">GpuCkwStore</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table.xhtml">GpuCkwVariableTable</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_clamp.xhtml">GpuClamp</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services.xhtml">GpuComponentServices</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml">GpuConv2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml">GpuDepthwiseConv2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml">GpuElementwiseBinaryCommon</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument.xhtml">GpuKernelArgument</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml">GpuKernelArgumentInfo</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_factory.xhtml">GpuKernelComponentFactory</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml">GpuKernelComponentStream</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml">GpuKernelSourceCode</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_logical_kernel.xhtml">GpuLogicalKernel</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_mat_mul.xhtml">GpuMatMul</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1_gpu_mat_mul_settings.xhtml">GpuMatMulSettings</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_mat_mul_settings.xhtml">GpuMatMulSettings</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_mul.xhtml">GpuMul</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml">GpuOutput</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_pool2d.xhtml">GpuPool2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_pool2d_settings.xhtml">GpuPool2dSettings</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_reshape.xhtml">GpuReshape</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_resize.xhtml">GpuResize</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sigmoid.xhtml">GpuSigmoid</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_softmax.xhtml">GpuSoftmax</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml">GpuSub</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_tanh.xhtml">GpuTanh</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_unit_workload.xhtml">GpuUnitWorkload</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_argument.xhtml">GpuWorkloadArgument</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">GpuWorkloadSourceCode</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml">GraphBuilder</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1_graph_config.xhtml">GraphConfig</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="class_graph_edsr.xhtml">GraphEdsr</a></dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_graph_manager.xhtml">GraphManager</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_graph_validate_example.xhtml">GraphValidateExample</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_grouped_convolution_mutator.xhtml">GroupedConvolutionMutator</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_H">H</a></dt>
<dd><a class="el" href="structarm__compute_1_1detail_1_1_header.xhtml">Header</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_scheduler_1_1_hints.xhtml">IScheduler::Hints</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_I">I</a></dt>
<dd><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml">IAccessor</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_access_window.xhtml">IAccessWindow</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_array.xhtml">IArray</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_i_array_accessor.xhtml">IArrayAccessor</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_asset_manager.xhtml">IAssetManager</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_l_array.xhtml">ICLArray</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__direct__conv_1_1_i_cl_direct_conv_kernel_config.xhtml">IClDirectConvKernelConfig</a> (<a class="el" href="namespacearm__compute_1_1cl__direct__conv.xhtml">arm_compute::cl_direct_conv</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__dwc_1_1_i_cl_d_w_c_native_kernel_config.xhtml">IClDWCNativeKernelConfig</a> (<a class="el" href="namespacearm__compute_1_1cl__dwc.xhtml">arm_compute::cl_dwc</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1gemm_1_1_i_cl_gemm_kernel_config.xhtml">IClGemmKernelConfig</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml">arm_compute::opencl::kernels::gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__gemm_1_1_i_c_l_g_e_m_m_kernel_selection.xhtml">ICLGEMMKernelSelection</a> (<a class="el" href="namespacearm__compute_1_1cl__gemm.xhtml">arm_compute::cl_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1opencl_1_1kernels_1_1_i_cl_gemm_lowp_reduction_kernel.xhtml">IClGemmLowpReductionKernel</a> (<a class="el" href="namespacearm__compute_1_1opencl_1_1kernels.xhtml">arm_compute::opencl::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__indirect__conv_1_1_i_cl_indirect_conv_kernel_config.xhtml">IClIndirectConvKernelConfig</a> (<a class="el" href="namespacearm__compute_1_1cl__indirect__conv.xhtml">arm_compute::cl_indirect_conv</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml">ICLKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__matmul_1_1_i_cl_mat_mul_native_kernel_config.xhtml">IClMatMulNativeKernelConfig</a> (<a class="el" href="namespacearm__compute_1_1cl__matmul.xhtml">arm_compute::cl_matmul</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__matmul_1_1_i_cl_mat_mul_native_kernel_variant.xhtml">IClMatMulNativeKernelVariant</a> (<a class="el" href="namespacearm__compute_1_1cl__matmul.xhtml">arm_compute::cl_matmul</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml">ICloneable</a> (<a class="el" href="namespacearm__compute_1_1misc.xhtml">arm_compute::misc</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_l_simple2_d_kernel.xhtml">ICLSimple2DKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_l_simple3_d_kernel.xhtml">ICLSimple3DKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml">ICLSimpleFunction</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_l_simple_kernel.xhtml">ICLSimpleKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_l_tuner.xhtml">ICLTuner</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1cl__tuner_1_1_i_c_l_tuning_parameters_list.xhtml">ICLTuningParametersList</a> (<a class="el" href="namespacearm__compute_1_1cl__tuner.xhtml">arm_compute::cl_tuner</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_context.xhtml">IContext</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_c_p_p_simple_function.xhtml">ICPPSimpleFunction</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml">ICpuKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1logging_1_1_i_decorator.xhtml">IDecorator</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_i_depthfirst_strategy.xhtml">IDepthfirstStrategy</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1pooling_1_1_i_depthfirst_strategy.xhtml">IDepthfirstStrategy</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_device.xhtml">IDevice</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml">IDeviceBackend</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml">CpuGemmAssemblyDispatch::IFallback</a> (<a class="el" href="namespacearm__compute_1_1cpu.xhtml">arm_compute::cpu</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml">IGemmCommon</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy.xhtml">IGenericDepthfirstStrategy</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy_3_01_t_input_00_01_t_output_00_01_nothing_01_4.xhtml">IGenericDepthfirstStrategy&lt; TInput, TOutput, Nothing &gt;</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="classarm__conv_1_1pooling_1_1_i_generic_depthfirst_strategy_3_01_t_input_00_01_t_output_00_01_requantize32_01_4.xhtml">IGenericDepthfirstStrategy&lt; TInput, TOutput, Requantize32 &gt;</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml">IGpuCkwComponentDriver</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml">IGpuKernelComponent</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml">IGpuKernelWriter</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_i_graph_mutator.xhtml">IGraphMutator</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_i_graph_printer.xhtml">IGraphPrinter</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_i_image_data_feeder.xhtml">IImageDataFeeder</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml">IImageLoader</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml">ILifetimeManager</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="struct_image.xhtml">Image</a></dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_image_accessor.xhtml">ImageAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_image_loader_factory.xhtml">ImageLoaderFactory</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_memory.xhtml">IMemory</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_memory_manageable.xhtml">IMemoryManageable</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">IMemoryManager</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_memory_pool.xhtml">IMemoryPool</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml">GpuWorkloadContext::Impl</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">GpuWorkloadSketch::Implementation</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_indirect_input_arg.xhtml">IndirectInputArg</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_indirect_output_arg.xhtml">IndirectOutputArg</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_n_e_simple_function.xhtml">INESimpleFunction</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_n_e_simple_function_no_border.xhtml">INESimpleFunctionNoBorder</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml">InitializerListDataset</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml">INodeVisitor</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml">InPlaceOperationMutator</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_input_array_element.xhtml">InputArrayElement</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthwise__depthfirst.xhtml">arm_conv::depthwise::depthwise_depthfirst</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">InputLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_input_node.xhtml">InputNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml">InputPatchElement</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthfirst__multiplier.xhtml">arm_conv::depthwise::depthfirst_multiplier</a>)</dd><dd><a class="el" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml">InstanceNormalizationLayerKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml">InstrumentsInfo</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml">InstrumentsStats</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1interleave__a64__s8q__3x3__dot.xhtml">interleave_a64_s8q_3x3_dot</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1interleave__a64__u8q__3x3__dot.xhtml">interleave_a64_u8q_3x3_dot</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_invoke.xhtml">Invoke</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthwise__depthfirst.xhtml">arm_conv::depthwise::depthwise_depthfirst</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_invoke_3_01_t_input_00_01_t_weight_00_1463cc7f15aa576f94b74f6b8930f46d.xhtml">Invoke&lt; TInput, TWeight, TOutput, TAccum, arm_gemm::Requantize32 &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthwise__depthfirst.xhtml">arm_conv::depthwise::depthwise_depthfirst</a>)</dd><dd><a class="el" href="structarm__conv_1_1pooling_1_1_invoker.xhtml">Invoker</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="structarm__conv_1_1pooling_1_1_invoker_3_01_t_input_00_01_t_output_00_01_nothing_01_4.xhtml">Invoker&lt; TInput, TOutput, Nothing &gt;</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="structarm__conv_1_1pooling_1_1_invoker_3_01_t_input_00_01_t_output_00_01_requantize32_01_4.xhtml">Invoker&lt; TInput, TOutput, Requantize32 &gt;</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_operator.xhtml">IOperator</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_i_planar_strategy.xhtml">IPlanarStrategy</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_pool_manager.xhtml">IPoolManager</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_i_preprocessor.xhtml">IPreprocessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_queue.xhtml">IQueue</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1is__container.xhtml">is_container</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1is__container_3_01std_1_1vector_3_01_v_00_01_a_01_4_01_4.xhtml">is_container&lt; std::vector&lt; V, A &gt; &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1validation_1_1is__floating__point.xhtml">is_floating_point</a> (<a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a>)</dd><dd><a class="el" href="structarm__compute_1_1utils_1_1traits_1_1is__floating__point.xhtml">is_floating_point</a> (<a class="el" href="namespacearm__compute_1_1utils_1_1traits.xhtml">arm_compute::utils::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1validation_1_1is__floating__point_3_01half_01_4.xhtml">is_floating_point&lt; half &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a>)</dd><dd><a class="el" href="structarm__compute_1_1utils_1_1traits_1_1is__floating__point_3_01half_01_4.xhtml">is_floating_point&lt; half &gt;</a> (<a class="el" href="namespacearm__compute_1_1utils_1_1traits.xhtml">arm_compute::utils::traits</a>)</dd><dd><a class="el" href="structarm__gemm_1_1is__sme.xhtml">is_sme</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml">ISchedulerUser</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml">ITensorAllocator</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_tensor_v2.xhtml">ITensorV2</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml">CartesianProductDataset::iterator</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset_1_1iterator.xhtml">ContainerDataset::iterator</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml">InitializerListDataset::iterator</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset_1_1iterator.xhtml">JoinDataset::iterator</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset_1_1iterator.xhtml">RangeDataset::iterator</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset_1_1iterator.xhtml">SingletonDataset::iterator</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset_1_1iterator.xhtml">ZipDataset::iterator</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_transform_weights.xhtml">ITransformWeights</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_i_weights_manager.xhtml">IWeightsManager</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_J">J</a></dt>
<dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset.xhtml">JoinDataset</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_j_p_e_g_loader.xhtml">JPEGLoader</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml">JSONPrinter</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_K">K</a></dt>
<dd><a class="el" href="classarm__compute_1_1_kernel.xhtml">Kernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_clock_1_1kernel__info.xhtml">SchedulerClock::kernel_info</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties.xhtml">KernelProperties</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="struct_keypoint.xhtml">Keypoint</a></dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_L">L</a></dt>
<dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_l2_normalize_layer.xhtml">L2NormalizeLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_l2_normalize_layer_node.xhtml">L2NormalizeLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml">HeuristicTree::LeafNode</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="structarm__compute_1_1detail_1_1linear.xhtml">linear</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_list_option.xhtml">ListOption</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="classarm__compute_1_1logging_1_1_logger_registry.xhtml">LoggerRegistry</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="structarm__compute_1_1detail_1_1logistic.xhtml">logistic</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1logging_1_1_log_level_decorator.xhtml">LogLevelDecorator</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="structarm__compute_1_1logging_1_1_log_msg.xhtml">LogMsg</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1detail_1_1lubrelu.xhtml">lubrelu</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd><dd><a class="el" href="structarm__compute_1_1_l_u_t_info.xhtml">LUTInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_l_u_t_manager.xhtml">LUTManager</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_M">M</a></dt>
<dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_mali_counter.xhtml">MaliCounter</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_mat_mul_attributes.xhtml">MatMulAttributes</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1_mat_mul_info.xhtml">MatMulInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_mat_mul_kernel_info.xhtml">MatMulKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_max_unpooling_layer_kernel_1_1_max_unpooling_kernel.xhtml">CpuMaxUnpoolingLayerKernel::MaxUnpoolingKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="class_gemm_tuner_1_1_measurement.xhtml">Measurement</a> (<a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a>)</dd><dd><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_memory_descriptor.xhtml">MemoryDescriptor</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1_memory_group.xhtml">MemoryGroup</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_memory_group_resource_scope.xhtml">MemoryGroupResourceScope</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_memory_image_feeder.xhtml">MemoryImageFeeder</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1_memory_manager_context.xhtml">MemoryManagerContext</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_memory_region.xhtml">MemoryRegion</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_min_max_location_values.xhtml">MinMaxLocationValues</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml">MLGOHeuristics</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> (<a class="el" href="namespacearm__compute_1_1utils_1_1mmap__io.xhtml">arm_compute::utils::mmap_io</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_N">N</a></dt>
<dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml">NamedDataset</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="class_gemm_tuner_1_1_native_g_e_m_m_config.xhtml">NativeGEMMConfig</a> (<a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_n_d_coordinate.xhtml">NDCoordinate</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_n_d_range.xhtml">NDRange</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_add_mul_add.xhtml">NEAddMulAdd</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_arg_min_max_layer.xhtml">NEArgMinMaxLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml">NEArithmeticAddition</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_arithmetic_subtraction.xhtml">NEArithmeticSubtraction</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_batch_normalization_layer.xhtml">NEBatchNormalizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_batch_normalization_layer_kernel.xhtml">NEBatchNormalizationLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_batch_to_space_layer.xhtml">NEBatchToSpaceLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_batch_to_space_layer_kernel.xhtml">NEBatchToSpaceLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_bitwise_and.xhtml">NEBitwiseAnd</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_bitwise_and_kernel.xhtml">NEBitwiseAndKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_bitwise_not.xhtml">NEBitwiseNot</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_bitwise_not_kernel.xhtml">NEBitwiseNotKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_bitwise_or.xhtml">NEBitwiseOr</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_bitwise_or_kernel.xhtml">NEBitwiseOrKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_bitwise_xor.xhtml">NEBitwiseXor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_bitwise_xor_kernel.xhtml">NEBitwiseXorKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_bounding_box_transform.xhtml">NEBoundingBoxTransform</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_bounding_box_transform_kernel.xhtml">NEBoundingBoxTransformKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_cast.xhtml">NECast</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_channel_shuffle_layer.xhtml">NEChannelShuffleLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_channel_shuffle_layer_kernel.xhtml">NEChannelShuffleLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_col2_im_kernel.xhtml">NECol2ImKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication.xhtml">NEComplexPixelWiseMultiplication</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_compute_all_anchors_kernel.xhtml">NEComputeAllAnchorsKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_concatenate_layer.xhtml">NEConcatenateLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_conv3_d.xhtml">NEConv3D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_convert_fully_connected_weights.xhtml">NEConvertFullyConnectedWeights</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_convolution_layer.xhtml">NEConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_copy.xhtml">NECopy</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_crop_kernel.xhtml">NECropKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_deconvolution_layer.xhtml">NEDeconvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_depth_convert_layer.xhtml">NEDepthConvertLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_depth_to_space_layer.xhtml">NEDepthToSpaceLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_depth_to_space_layer_kernel.xhtml">NEDepthToSpaceLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">NEDepthwiseConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_dequantization_layer.xhtml">NEDequantizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_detection_post_process_layer.xhtml">NEDetectionPostProcessLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_device_backend.xhtml">NEDeviceBackend</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_direct_convolution_layer.xhtml">NEDirectConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml">NEElementwiseComparison</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_elementwise_division.xhtml">NEElementwiseDivision</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_elementwise_max.xhtml">NEElementwiseMax</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_elementwise_min.xhtml">NEElementwiseMin</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_elementwise_power.xhtml">NEElementwisePower</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml">NEElementwiseSquaredDiff</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_elementwise_unary_layer.xhtml">NEElementwiseUnaryLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_f_f_t1_d.xhtml">NEFFT1D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_f_f_t2_d.xhtml">NEFFT2D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_f_f_t_convolution_layer.xhtml">NEFFTConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_f_f_t_digit_reverse_kernel.xhtml">NEFFTDigitReverseKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_f_f_t_radix_stage_kernel.xhtml">NEFFTRadixStageKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_f_f_t_scale_kernel.xhtml">NEFFTScaleKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_fill.xhtml">NEFill</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_fill_border.xhtml">NEFillBorder</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_fill_border_kernel.xhtml">NEFillBorderKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_flatten_layer.xhtml">NEFlattenLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_floor.xhtml">NEFloor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_fully_connected_layer.xhtml">NEFullyConnectedLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1weights__transformations_1_1_n_e_fully_connected_layer_reshape_weights_managed.xhtml">NEFullyConnectedLayerReshapeWeightsManaged</a> (<a class="el" href="namespacearm__compute_1_1weights__transformations.xhtml">arm_compute::weights_transformations</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_function_factory.xhtml">NEFunctionFactory</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_fuse_batch_normalization.xhtml">NEFuseBatchNormalization</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_fuse_batch_normalization_kernel.xhtml">NEFuseBatchNormalizationKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_gather.xhtml">NEGather</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_gather_kernel.xhtml">NEGatherKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m.xhtml">NEGEMM</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_conv2d.xhtml">NEGEMMConv2d</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_convolution_layer.xhtml">NEGEMMConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml">NEGEMMLowpMatrixMultiplyCore</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml">NEGEMMLowpOutputStage</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_generate_proposals_layer.xhtml">NEGenerateProposalsLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_instance_normalization_layer.xhtml">NEInstanceNormalizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_instance_normalization_layer_kernel.xhtml">NEInstanceNormalizationLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_l2_normalize_layer.xhtml">NEL2NormalizeLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_l2_normalize_layer_kernel.xhtml">NEL2NormalizeLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_logical_and.xhtml">NELogicalAnd</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1kernels_1_1_n_e_logical_kernel.xhtml">NELogicalKernel</a> (<a class="el" href="namespacearm__compute_1_1kernels.xhtml">arm_compute::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_logical_not.xhtml">NELogicalNot</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_logical_or.xhtml">NELogicalOr</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_l_s_t_m_layer.xhtml">NELSTMLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">NELSTMLayerQuantized</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_mat_mul.xhtml">NEMatMul</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_max_unpooling_layer.xhtml">NEMaxUnpoolingLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_mean_std_dev_normalization_kernel.xhtml">NEMeanStdDevNormalizationKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_mean_std_dev_normalization_layer.xhtml">NEMeanStdDevNormalizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_node_validator.xhtml">NENodeValidator</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_normalization_layer.xhtml">NENormalizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_normalization_layer_kernel.xhtml">NENormalizationLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__bitvector.xhtml">neon_bitvector</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">neon_vector</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_pad_layer.xhtml">NEPadLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_pad_layer_kernel.xhtml">NEPadLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_permute.xhtml">NEPermute</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml">NEPixelWiseMultiplication</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_pooling3d_layer.xhtml">NEPooling3dLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_pooling_layer.xhtml">NEPoolingLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_p_relu_layer.xhtml">NEPReluLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_prior_box_layer.xhtml">NEPriorBoxLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_prior_box_layer_kernel.xhtml">NEPriorBoxLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml">NEQLSTMLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml">NEQLSTMLayerNormalizationKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_quantization_layer.xhtml">NEQuantizationLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_range.xhtml">NERange</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_range_kernel.xhtml">NERangeKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_reduce_mean.xhtml">NEReduceMean</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_reduction_operation.xhtml">NEReductionOperation</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml">NEReductionOperationKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_reorg_layer.xhtml">NEReorgLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_reorg_layer_kernel.xhtml">NEReorgLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_reshape_layer.xhtml">NEReshapeLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_reverse.xhtml">NEReverse</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_reverse_kernel.xhtml">NEReverseKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_r_n_n_layer.xhtml">NERNNLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_r_o_i_align_layer.xhtml">NEROIAlignLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_r_o_i_align_layer_kernel.xhtml">NEROIAlignLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer.xhtml">NEROIPoolingLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer_kernel.xhtml">NEROIPoolingLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_scale.xhtml">NEScale</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_select.xhtml">NESelect</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_select_kernel.xhtml">NESelectKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1_n_e_slice.xhtml">NESlice</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_slice.xhtml">NESlice</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_softmax_layer_generic.xhtml">NESoftmaxLayerGeneric</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_space_to_batch_layer.xhtml">NESpaceToBatchLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_space_to_batch_layer_kernel.xhtml">NESpaceToBatchLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_space_to_depth_layer.xhtml">NESpaceToDepthLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_space_to_depth_layer_kernel.xhtml">NESpaceToDepthLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_split.xhtml">NESplit</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_stack_layer.xhtml">NEStackLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_stack_layer_kernel.xhtml">NEStackLayerKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1_n_e_strided_slice.xhtml">NEStridedSlice</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_strided_slice.xhtml">NEStridedSlice</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_strided_slice_kernel.xhtml">NEStridedSliceKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_sub_tensor_handle.xhtml">NESubTensorHandle</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function.xhtml">NESynthetizeFunction</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_border.xhtml">NESynthetizeFunctionWithZeroConstantBorder</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_kernel_border.xhtml">NESynthetizeFunctionWithZeroConstantKernelBorder</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_tensor_handle.xhtml">NETensorHandle</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">arm_compute::graph::backends</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_tile.xhtml">NETile</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_tile_kernel.xhtml">NETileKernel</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_transpose.xhtml">NETranspose</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_unstack.xhtml">NEUnstack</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_n_e_winograd_convolution_layer.xhtml">NEWinogradConvolutionLayer</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml">HeuristicTree::Node</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_node_execution_method_mutator.xhtml">NodeExecutionMethodMutator</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_node_fusion_mutator.xhtml">NodeFusionMutator</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml">NormalizationLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml">NormalizationLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_normalize_planar_y_u_v_layer.xhtml">NormalizePlanarYUVLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_normalize_planar_y_u_v_layer_node.xhtml">NormalizePlanarYUVLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_n_p_y_loader.xhtml">NPYLoader</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_num_py_accessor.xhtml">NumPyAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_num_py_bin_loader.xhtml">NumPyBinLoader</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_O">O</a></dt>
<dd><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml">ObjectBase</a> (<a class="el" href="namespaceacl_1_1detail.xhtml">acl::detail</a>)</dd><dd><a class="el" href="structacl_1_1detail_1_1_object_deleter.xhtml">ObjectDeleter</a> (<a class="el" href="namespaceacl_1_1detail.xhtml">acl::detail</a>)</dd><dd><a class="el" href="structacl_1_1detail_1_1_object_deleter_3_01_acl_context_01_4.xhtml">ObjectDeleter&lt; AclContext &gt;</a> (<a class="el" href="namespaceacl_1_1detail.xhtml">acl::detail</a>)</dd><dd><a class="el" href="structacl_1_1detail_1_1_object_deleter_3_01_acl_operator_01_4.xhtml">ObjectDeleter&lt; AclOperator &gt;</a> (<a class="el" href="namespaceacl_1_1detail.xhtml">acl::detail</a>)</dd><dd><a class="el" href="structacl_1_1detail_1_1_object_deleter_3_01_acl_queue_01_4.xhtml">ObjectDeleter&lt; AclQueue &gt;</a> (<a class="el" href="namespaceacl_1_1detail.xhtml">acl::detail</a>)</dd><dd><a class="el" href="structacl_1_1detail_1_1_object_deleter_3_01_acl_tensor_01_4.xhtml">ObjectDeleter&lt; AclTensor &gt;</a> (<a class="el" href="namespaceacl_1_1detail.xhtml">acl::detail</a>)</dd><dd><a class="el" href="structacl_1_1detail_1_1_object_deleter_3_01_acl_tensor_pack_01_4.xhtml">ObjectDeleter&lt; AclTensorPack &gt;</a> (<a class="el" href="namespaceacl_1_1detail.xhtml">acl::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1_offset_lifetime_manager.xhtml">OffsetLifetimeManager</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_offset_memory_pool.xhtml">OffsetMemoryPool</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_o_m_p_scheduler.xhtml">OMPScheduler</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml">OpenCLClock</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_memory_usage.xhtml">OpenCLMemoryUsage</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classacl_1_1_operator.xhtml">Operator</a> (<a class="el" href="namespaceacl.xhtml">acl</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">Operator</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classupdate__supported__ops_1_1_operators_table.xhtml">OperatorsTable</a> (<a class="el" href="namespaceupdate__supported__ops.xhtml">update_supported_ops</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1_operator_tensor.xhtml">OperatorTensor</a> (<a class="el" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>)</dd><dd><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_1_1_op_pack.xhtml">DependencyGraph::OpPack</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_option.xhtml">Option</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="structacl_1_1_context_1_1_options.xhtml">Context::Options</a> (<a class="el" href="namespaceacl.xhtml">acl</a>)</dd><dd><a class="el" href="structacl_1_1_queue_1_1_options.xhtml">Queue::Options</a> (<a class="el" href="namespaceacl.xhtml">acl</a>)</dd><dd><a class="el" href="classformat__code_1_1_other_checks_run.xhtml">OtherChecksRun</a> (<a class="el" href="namespaceformat__code.xhtml">format_code</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml">OutputLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_output_node.xhtml">OutputNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_P">P</a></dt>
<dd><a class="el" href="structarm__compute_1_1_i_tensor_pack_1_1_pack_element.xhtml">ITensorPack::PackElement</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack_1_1_pack_element.xhtml">ArgumentPack::PackElement</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml">PackingArguments</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml">arm_conv::depthwise::interleaves</a>)</dd><dd><a class="el" href="structacl_1_1_tensor_pack_1_1_pack_pair.xhtml">TensorPack::PackPair</a> (<a class="el" href="namespaceacl.xhtml">acl</a>)</dd><dd><a class="el" href="structarm__compute_1_1_padding2_d.xhtml">Padding2D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_padding3_d.xhtml">Padding3D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_padding_calculator.xhtml">PaddingCalculator</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_pad_layer.xhtml">PadLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_pad_layer_node.xhtml">PadLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_parameters_library.xhtml">ParametersLibrary</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_pass_manager.xhtml">PassManager</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_performance_parameters.xhtml">PerformanceParameters</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_permute_layer.xhtml">PermuteLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_permute_layer_node.xhtml">PermuteLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_planar_kernel_type.xhtml">PlanarKernelType</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_planar_kernel_type_3_01_t_input_00_01_t_weight_00_01_t_output_074bba6d85fd01387143cc0ca9a1d92fe.xhtml">PlanarKernelType&lt; TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_planar_kernel_type_3_01_t_input_00_01_t_weight_00_01_t_output_00_01_t_accum_00_01_nothing_01_4.xhtml">PlanarKernelType&lt; TInput, TWeight, TOutput, TAccum, Nothing &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1_planar_strategy.xhtml">PlanarStrategy</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_p_m_u.xhtml">PMU</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_p_m_u_counter.xhtml">PMUCounter</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_pool2d_attributes.xhtml">Pool2dAttributes</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_pool_data_type_i_s_a_selector_data.xhtml">PoolDataTypeISASelectorData</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool3d_kernel_1_1_pooling3d_kernel.xhtml">CpuPool3dKernel::Pooling3dKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1_pooling3d_layer_info.xhtml">Pooling3dLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__conv_1_1pooling_1_1_pooling_depthfirst.xhtml">PoolingDepthfirst</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="classarm__conv_1_1pooling_1_1_pooling_depthfirst_generic.xhtml">PoolingDepthfirstGeneric</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="structarm__conv_1_1pooling_1_1_pooling_implementation.xhtml">PoolingImplementation</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool2d_kernel_1_1_pooling_kernel.xhtml">CpuPool2dKernel::PoolingKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="structarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml">PoolingLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_pool_manager.xhtml">PoolManager</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_p_p_m_loader.xhtml">PPMLoader</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_p_p_m_writer.xhtml">PPMWriter</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_p_relu_layer.xhtml">PReluLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_p_relu_layer_node.xhtml">PReluLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample.xhtml">PrepareInputSample</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthfirst__multiplier.xhtml">arm_conv::depthwise::depthfirst_multiplier</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01false_01_4.xhtml">PrepareInputSample&lt; false &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthfirst__multiplier.xhtml">arm_conv::depthwise::depthfirst_multiplier</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01true_01_4.xhtml">PrepareInputSample&lt; true &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthfirst__multiplier.xhtml">arm_conv::depthwise::depthfirst_multiplier</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml">PrettyPrinter</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_print_accessor.xhtml">PrintAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml">Printer</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_print_layer.xhtml">PrintLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_print_layer_node.xhtml">PrintLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_prior_box_layer.xhtml">PriorBoxLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml">PriorBoxLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_prior_box_layer_node.xhtml">PriorBoxLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">Profiler</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1_program.xhtml">Program</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote.xhtml">promote</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote.xhtml">promote</a> (<a class="el" href="namespacearm__compute_1_1test_1_1traits.xhtml">arm_compute::test::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01float_01_4.xhtml">promote&lt; float &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1traits.xhtml">arm_compute::test::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01float_01_4.xhtml">promote&lt; float &gt;</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01half_01_4.xhtml">promote&lt; half &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1traits.xhtml">arm_compute::test::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01half_01_4.xhtml">promote&lt; half &gt;</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int16__t_01_4.xhtml">promote&lt; int16_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1traits.xhtml">arm_compute::test::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int16__t_01_4.xhtml">promote&lt; int16_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int32__t_01_4.xhtml">promote&lt; int32_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int32__t_01_4.xhtml">promote&lt; int32_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1traits.xhtml">arm_compute::test::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int8__t_01_4.xhtml">promote&lt; int8_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1traits.xhtml">arm_compute::test::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01int8__t_01_4.xhtml">promote&lt; int8_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml">promote&lt; uint16_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1traits.xhtml">arm_compute::test::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml">promote&lt; uint16_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml">promote&lt; uint32_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1traits.xhtml">arm_compute::test::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml">promote&lt; uint32_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml">promote&lt; uint8_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1traits.xhtml">arm_compute::test::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml">promote&lt; uint8_t &gt;</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_Q">Q</a></dt>
<dd><a class="el" href="structarm__compute_1_1_qasymm8_quantization_helper.xhtml">Qasymm8QuantizationHelper</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1validation_1_1_quantization_hint.xhtml">QuantizationHint</a> (<a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a>)</dd><dd><a class="el" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_quantization_layer.xhtml">QuantizationLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_quantization_layer_node.xhtml">QuantizationLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_quantize_wrapper.xhtml">QuantizeWrapper</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1_query.xhtml">Query</a> (<a class="el" href="namespacearm__compute_1_1mlgo.xhtml">arm_compute::mlgo</a>)</dd><dd><a class="el" href="classacl_1_1_queue.xhtml">Queue</a> (<a class="el" href="namespaceacl.xhtml">acl</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_R">R</a></dt>
<dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_random_accessor.xhtml">RandomAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset.xhtml">RangeDataset</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1random_1_1_ranged_uniform_distribution.xhtml">RangedUniformDistribution</a> (<a class="el" href="namespacearm__compute_1_1utils_1_1random.xhtml">arm_compute::utils::random</a>)</dd><dd><a class="el" href="unionarm__compute_1_1helpers_1_1float__ops_1_1_raw_float.xhtml">RawFloat</a> (<a class="el" href="namespacearm__compute_1_1helpers_1_1float__ops.xhtml">arm_compute::helpers::float_ops</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_raw_tensor.xhtml">RawTensor</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="structarm__compute_1_1_rectangle.xhtml">Rectangle</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_reduction_layer.xhtml">ReductionLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_reduction_layer_node.xhtml">ReductionLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance</a> (<a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a>)</dd><dd><a class="el" href="structarm__compute_1_1detail_1_1relu.xhtml">relu</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_reorg_layer.xhtml">ReorgLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_reorg_layer_node.xhtml">ReorgLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_reshape_attributes.xhtml">ReshapeAttributes</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="class_gemm_tuner_1_1_reshaped_g_e_m_m_config.xhtml">ReshapedGEMMConfig</a> (<a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a>)</dd><dd><a class="el" href="class_gemm_tuner_1_1_reshaped_only_r_h_s_g_e_m_m_config.xhtml">ReshapedOnlyRHSGEMMConfig</a> (<a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml">ReshapeLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml">ReshapeLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_resize_attributes.xhtml">ResizeAttributes</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_resize_layer.xhtml">ResizeLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_resize_layer_node.xhtml">ResizeLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1iterable_1_1reverse__iterable.xhtml">reverse_iterable</a> (<a class="el" href="namespacearm__compute_1_1utils_1_1iterable.xhtml">arm_compute::utils::iterable</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_r_o_i_align_layer.xhtml">ROIAlignLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_r_o_i_align_layer_node.xhtml">ROIAlignLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml">ROIPoolingLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_runtime_context.xhtml">RuntimeContext</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_S">S</a></dt>
<dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_save_num_py_accessor.xhtml">SaveNumPyAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel_1_1_scale_kernel.xhtml">CpuScaleKernel::ScaleKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_scale_kernel_data_type_i_s_a_selector_data.xhtml">ScaleKernelDataTypeISASelectorData</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1_scale_kernel_info.xhtml">ScaleKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml">ScaleLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1_scheduler.xhtml">Scheduler</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1_scheduler_factory.xhtml">SchedulerFactory</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_semaphore.xhtml">Semaphore</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="class_shell_1_1_shell.xhtml">Shell</a> (<a class="el" href="namespace_shell.xhtml">Shell</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory.xhtml">SimpleTestCaseFactory</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml">SingleThreadScheduler</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset.xhtml">SingletonDataset</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd><dd><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_size3_d.xhtml">Size3D</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_slice_layer.xhtml">SliceLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_slice_layer_node.xhtml">SliceLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp16__nhwc__3x3__s1__output2x2__mla__depthfirst.xhtml">sme2_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp16__nhwc__3x3__s1__output3x3__mla__depthfirst.xhtml">sme2_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp16__nhwc__3x3__s1__output4x4__mla__depthfirst.xhtml">sme2_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp16__nhwc__3x3__s2__output2x2__mla__depthfirst.xhtml">sme2_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp16__nhwc__5x5__s1__output2x2__mla__depthfirst.xhtml">sme2_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32__planar__3x3__s1__4rows__mla__za.xhtml">sme2_fp32_planar_3x3_s1_4rows_mla_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32__planar__3x3__s2__4rows__mla__za.xhtml">sme2_fp32_planar_3x3_s2_4rows_mla_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32__planar__5x5__s1__4rows__mla__za.xhtml">sme2_fp32_planar_5x5_s1_4rows_mla_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32__planar__5x5__s2__4rows__mla__za.xhtml">sme2_fp32_planar_5x5_s2_4rows_mla_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32bf16fp32__planar__3x3__s1__4rows__dot__za.xhtml">sme2_fp32bf16fp32_planar_3x3_s1_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32bf16fp32__planar__3x3__s2__4rows__dot__za.xhtml">sme2_fp32bf16fp32_planar_3x3_s2_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32bf16fp32__planar__5x5__s1__4rows__dot__za.xhtml">sme2_fp32bf16fp32_planar_5x5_s1_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__fp32bf16fp32__planar__5x5__s2__4rows__dot__za.xhtml">sme2_fp32bf16fp32_planar_5x5_s2_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__s8q__planar__3x3__s1__4rows__dot__za.xhtml">sme2_s8q_planar_3x3_s1_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__s8q__planar__3x3__s2__4rows__dot__za.xhtml">sme2_s8q_planar_3x3_s2_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__s8q__planar__5x5__s1__4rows__dot__za.xhtml">sme2_s8q_planar_5x5_s1_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__s8q__planar__5x5__s2__4rows__dot__za.xhtml">sme2_s8q_planar_5x5_s2_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8q__planar__3x3__s1__4rows__dot__za.xhtml">sme2_u8q_planar_3x3_s1_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8q__planar__3x3__s2__4rows__dot__za.xhtml">sme2_u8q_planar_3x3_s2_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8q__planar__5x5__s1__4rows__dot__za.xhtml">sme2_u8q_planar_5x5_s1_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8q__planar__5x5__s2__4rows__dot__za.xhtml">sme2_u8q_planar_5x5_s2_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8s8u8q__planar__3x3__s1__4rows__dot__za.xhtml">sme2_u8s8u8q_planar_3x3_s1_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8s8u8q__planar__3x3__s2__4rows__dot__za.xhtml">sme2_u8s8u8q_planar_3x3_s2_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8s8u8q__planar__5x5__s1__4rows__dot__za.xhtml">sme2_u8s8u8q_planar_5x5_s1_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__conv_1_1depthwise_1_1sme2__u8s8u8q__planar__5x5__s2__4rows__dot__za.xhtml">sme2_u8s8u8q_planar_5x5_s2_4rows_dot_za</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_softmax_attributes.xhtml">SoftmaxAttributes</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_softmax_kernel_1_1_softmax_kernel.xhtml">CpuSoftmaxKernel::SoftmaxKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_softmax_kernel_data_type_i_s_a_selector_data.xhtml">SoftmaxKernelDataTypeISASelectorData</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="structarm__compute_1_1_softmax_kernel_info.xhtml">SoftmaxKernelInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml">SoftmaxLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer_node.xhtml">SoftmaxLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml">SplitLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_split_layer_sub_tensor_mutator.xhtml">SplitLayerSubTensorMutator</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="structarm__compute_1_1detail_1_1square.xhtml">square</a> (<a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stack_layer.xhtml">StackLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_stack_layer_node.xhtml">StackLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classupdate__supported__ops_1_1_states.xhtml">States</a> (<a class="el" href="namespaceupdate__supported__ops.xhtml">update_supported_ops</a>)</dd><dd><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1logging_1_1_std_printer.xhtml">StdPrinter</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_std_transforms_fixed.xhtml">StdTransformsFixed</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_std_transforms_s_m_e.xhtml">StdTransformsSME</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml">StdTransformsSVE</a> (<a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>)</dd><dd><a class="el" href="classarm__compute_1_1_steps.xhtml">Steps</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml">StrategyType</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthfirst__multiplier.xhtml">arm_conv::depthwise::depthfirst_multiplier</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01false_00_01_t_input8633ae7ee5836c9610d7020e509234f1.xhtml">StrategyType&lt; false, TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthfirst__multiplier.xhtml">arm_conv::depthwise::depthfirst_multiplier</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_a0f24e403e092ed08cc3d3280257460e.xhtml">StrategyType&lt; true, TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthfirst__multiplier.xhtml">arm_conv::depthwise::depthfirst_multiplier</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_7baeeac6248d2dc629261e41fed0f86e.xhtml">StrategyType&lt; true, TInput, TWeight, TOutput, TAccum, OutputStage &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthfirst__multiplier.xhtml">arm_conv::depthwise::depthfirst_multiplier</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml">Stream</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml">StreamHints</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_strided_slice_layer.xhtml">StridedSliceLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1_strided_slice_layer_info.xhtml">StridedSliceLayerInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_strided_slice_layer_node.xhtml">StridedSliceLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_strides.xhtml">Strides</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1logging_1_1_string_decorator.xhtml">StringDecorator</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_sub_kernel_1_1_sub_kernel.xhtml">CpuSubKernel::SubKernel</a> (<a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">arm_compute::cpu::kernels</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd><dd><a class="el" href="classarm__compute_1_1_sub_tensor.xhtml">SubTensor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_synthetic_data_type_mutator.xhtml">SyntheticDataTypeMutator</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_T">T</a></dt>
<dd><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tag_val.xhtml">TagVal</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_task_executor.xhtml">TaskExecutor</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classacl_1_1_tensor.xhtml">Tensor</a> (<a class="el" href="namespaceacl.xhtml">acl</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="struct_tensor3_d.xhtml">Tensor3D</a></dd><dd><a class="el" href="struct_tensor4_d.xhtml">Tensor4D</a></dd><dd><a class="el" href="classarm__compute_1_1_tensor_accessor.xhtml">TensorAccessor</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_tensor_allocator.xhtml">TensorAllocator</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1_tensor_cache.xhtml">TensorCache</a> (<a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>)</dd><dd><a class="el" href="classacl_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> (<a class="el" href="namespaceacl.xhtml">acl</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classacl_1_1_tensor_pack.xhtml">TensorPack</a> (<a class="el" href="namespaceacl.xhtml">acl</a>)</dd><dd><a class="el" href="classarm__compute_1_1_tensor_pack.xhtml">TensorPack</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml">TensorParams</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__conv_1_1pooling_1_1_tensor_spec.xhtml">TensorSpec</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml">TensorSpec</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">GpuKernelVariableTable::TensorVariable</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml">TestCase</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml">TestCaseFactory</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1detail_1_1_test_case_registrar.xhtml">TestCaseRegistrar</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1detail.xhtml">arm_compute::test::framework::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">TestError</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_filter.xhtml">TestFilter</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">TestResult</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1detail_1_1_test_suite_registrar.xhtml">TestSuiteRegistrar</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1detail.xhtml">arm_compute::test::framework::detail</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_t_f_preproccessor.xhtml">TFPreproccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1logging_1_1_thread_id_decorator.xhtml">ThreadIdDecorator</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml">arm_compute::logging</a>)</dd><dd><a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_toggle_option.xhtml">ToggleOption</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> (<a class="el" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml">arm_compute::mlgo::parser</a>)</dd><dd><a class="el" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> (<a class="el" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml">arm_compute::mlgo::parser</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_top_n_predictions_accessor.xhtml">TopNPredictionsAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="struct_transpose_interleave_common.xhtml">TransposeInterleaveCommon</a></dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_U">U</a></dt>
<dd><a class="el" href="structarm__compute_1_1graph_1_1descriptors_1_1_unary_eltwise_layer_descriptor.xhtml">UnaryEltwiseLayerDescriptor</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1descriptors.xhtml">arm_compute::graph::descriptors</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph_1_1_unary_eltwise_layer_node.xhtml">UnaryEltwiseLayerNode</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1uniform__real__distribution__16bit.xhtml">uniform_real_distribution_16bit</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_V">V</a></dt>
<dd><a class="el" href="classarm__compute_1_1utils_1_1_validate_example.xhtml">ValidateExample</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_validation_input_accessor.xhtml">ValidationInputAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1graph__utils_1_1_validation_output_accessor.xhtml">ValidationOutputAccessor</a> (<a class="el" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>)</dd><dd><a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Measurement::Value</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="struct_vector.xhtml">Vector</a></dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">vector_128_tag</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">vector_64_tag</a> (<a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">arm_compute::wrapper::traits</a>)</dd><dd><a class="el" href="structarm__compute_1_1utils_1_1_verification_params.xhtml">VerificationParams</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd><dd><a class="el" href="classarm__compute_1_1utils_1_1_verify_accessor.xhtml">VerifyAccessor</a> (<a class="el" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_W">W</a></dt>
<dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">WallClock</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">arm_compute::test::framework</a>)</dd><dd><a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1graph_1_1_weights_manager_context.xhtml">WeightsManagerContext</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>)</dd><dd><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="classarm__compute_1_1_window_iterator.xhtml">WindowIterator</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__conv_1_1pooling_1_1_working_space.xhtml">WorkingSpace</a> (<a class="el" href="namespacearm__conv_1_1pooling.xhtml">arm_conv::pooling</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml">InputPatchElement::Workspace</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthfirst__multiplier.xhtml">arm_conv::depthwise::depthfirst_multiplier</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_input_array_element_1_1_workspace.xhtml">InputArrayElement::Workspace</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthwise__depthfirst.xhtml">arm_conv::depthwise::depthwise_depthfirst</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1_generic_input_array_element_1_1_workspace.xhtml">GenericInputArrayElement::Workspace</a> (<a class="el" href="namespacearm__conv_1_1depthwise.xhtml">arm_conv::depthwise</a>)</dd><dd><a class="el" href="structarm__compute_1_1_workspace_data_element.xhtml">WorkspaceDataElement</a> (<a class="el" href="namespacearm__compute.xhtml">arm_compute</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_workspace_final_element.xhtml">WorkspaceFinalElement</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthwise__depthfirst.xhtml">arm_conv::depthwise::depthwise_depthfirst</a>)</dd><dd><a class="el" href="structarm__conv_1_1depthwise_1_1depthwise__depthfirst_1_1_workspace_final_element_3_01int32__t_01ccc8c041a687c4471c5aaa78ea74506.xhtml">WorkspaceFinalElement&lt; int32_t, arm_gemm::Requantize32, false &gt;</a> (<a class="el" href="namespacearm__conv_1_1depthwise_1_1depthwise__depthfirst.xhtml">arm_conv::depthwise::depthwise_depthfirst</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a name="letter_Y">Y</a></dt>
<dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_y_o_l_o_layer.xhtml">YOLOLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a name="letter_Z">Z</a></dt>
<dd><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset.xhtml">ZipDataset</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">arm_compute::test::framework::dataset</a>)</dd></dl>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:59 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
