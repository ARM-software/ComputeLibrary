<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLMutableCommandBuffer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_mutable_command_buffer.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLMutableCommandBuffer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Command buffer implementaton based on CL mutable dispatch command buffer extension.  
 <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_mutable_command_buffer_8h_source.xhtml">CLMutableCommandBuffer.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLMutableCommandBuffer:</div>
<div class="dyncontent">
<div class="center"><!-- SVG 0 -->
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a43cf22ad4e0358981630f536f6c58599"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a43cf22ad4e0358981630f536f6c58599">CLMutableCommandBuffer</a> (cl_command_queue queue)</td></tr>
<tr class="memdesc:a43cf22ad4e0358981630f536f6c58599"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new mutable dispatch command buffer targeting the specified command queue.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a43cf22ad4e0358981630f536f6c58599">More...</a><br /></td></tr>
<tr class="separator:a43cf22ad4e0358981630f536f6c58599"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5552826c0c8b979b71d350cb67209721"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a5552826c0c8b979b71d350cb67209721">~CLMutableCommandBuffer</a> ()</td></tr>
<tr class="memdesc:a5552826c0c8b979b71d350cb67209721"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a5552826c0c8b979b71d350cb67209721">More...</a><br /></td></tr>
<tr class="separator:a5552826c0c8b979b71d350cb67209721"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b2752ede16311e7ee7e928bd2e0aac2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a3b2752ede16311e7ee7e928bd2e0aac2">CLMutableCommandBuffer</a> (const <a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> &amp;)=delete</td></tr>
<tr class="memdesc:a3b2752ede16311e7ee7e928bd2e0aac2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow copy constructor.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a3b2752ede16311e7ee7e928bd2e0aac2">More...</a><br /></td></tr>
<tr class="separator:a3b2752ede16311e7ee7e928bd2e0aac2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae40c63f693d8eaba27f3259bb9a3cb94"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#ae40c63f693d8eaba27f3259bb9a3cb94">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> &amp;)=delete</td></tr>
<tr class="memdesc:ae40c63f693d8eaba27f3259bb9a3cb94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow copy assignment.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#ae40c63f693d8eaba27f3259bb9a3cb94">More...</a><br /></td></tr>
<tr class="separator:ae40c63f693d8eaba27f3259bb9a3cb94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6c9f298d961858d1e65a62835bedbf6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#af6c9f298d961858d1e65a62835bedbf6">CLMutableCommandBuffer</a> (<a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> &amp;&amp;)=delete</td></tr>
<tr class="memdesc:af6c9f298d961858d1e65a62835bedbf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow move constructor.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#af6c9f298d961858d1e65a62835bedbf6">More...</a><br /></td></tr>
<tr class="separator:af6c9f298d961858d1e65a62835bedbf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5779664a8bde7fea5fba39e76eb7c2d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#ad5779664a8bde7fea5fba39e76eb7c2d">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> &amp;&amp;)=delete</td></tr>
<tr class="memdesc:ad5779664a8bde7fea5fba39e76eb7c2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow move assignment.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#ad5779664a8bde7fea5fba39e76eb7c2d">More...</a><br /></td></tr>
<tr class="separator:ad5779664a8bde7fea5fba39e76eb7c2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06ba711f428dcc60e33df9b34aa18fbc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a06ba711f428dcc60e33df9b34aa18fbc">add_kernel</a> (cl_kernel kernel, const cl::NDRange &amp;<a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, const cl::NDRange &amp;global, const cl::NDRange &amp;local) override</td></tr>
<tr class="memdesc:a06ba711f428dcc60e33df9b34aa18fbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a kernel enqueue command to the command queue.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a06ba711f428dcc60e33df9b34aa18fbc">More...</a><br /></td></tr>
<tr class="separator:a06ba711f428dcc60e33df9b34aa18fbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a32bafa8064e666aed52486c4af4144"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a6a32bafa8064e666aed52486c4af4144">finalize</a> () override</td></tr>
<tr class="memdesc:a6a32bafa8064e666aed52486c4af4144"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finalize the command buffer.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a6a32bafa8064e666aed52486c4af4144">More...</a><br /></td></tr>
<tr class="separator:a6a32bafa8064e666aed52486c4af4144"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44137bb65de2396875934e48a6ee5099"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a44137bb65de2396875934e48a6ee5099">update</a> () override</td></tr>
<tr class="memdesc:a44137bb65de2396875934e48a6ee5099"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the command buffer with new kernel argument values.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a44137bb65de2396875934e48a6ee5099">More...</a><br /></td></tr>
<tr class="separator:a44137bb65de2396875934e48a6ee5099"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36ec98486a2f4b7ee530e1953370572c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a36ec98486a2f4b7ee530e1953370572c">enqueue</a> () override</td></tr>
<tr class="memdesc:a36ec98486a2f4b7ee530e1953370572c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue the command buffer.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a36ec98486a2f4b7ee530e1953370572c">More...</a><br /></td></tr>
<tr class="separator:a36ec98486a2f4b7ee530e1953370572c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abef52b4cd29e5d9e45d53b1ed3f569ad"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#abef52b4cd29e5d9e45d53b1ed3f569ad">is_finalized</a> () const override</td></tr>
<tr class="memdesc:abef52b4cd29e5d9e45d53b1ed3f569ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the command buffer has been finalized.  <a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#abef52b4cd29e5d9e45d53b1ed3f569ad">More...</a><br /></td></tr>
<tr class="separator:abef52b4cd29e5d9e45d53b1ed3f569ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_c_l_command_buffer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_c_l_command_buffer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a></td></tr>
<tr class="memitem:a080ae7dc3dd0eb883881e05b7cabd06d inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a080ae7dc3dd0eb883881e05b7cabd06d">CLCommandBuffer</a> ()</td></tr>
<tr class="memdesc:a080ae7dc3dd0eb883881e05b7cabd06d inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a080ae7dc3dd0eb883881e05b7cabd06d">More...</a><br /></td></tr>
<tr class="separator:a080ae7dc3dd0eb883881e05b7cabd06d inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7d3c548ee554bdbb0209deb4be0108f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#af7d3c548ee554bdbb0209deb4be0108f">~CLCommandBuffer</a> ()</td></tr>
<tr class="memdesc:af7d3c548ee554bdbb0209deb4be0108f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#af7d3c548ee554bdbb0209deb4be0108f">More...</a><br /></td></tr>
<tr class="separator:af7d3c548ee554bdbb0209deb4be0108f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a229cf3f7f693bce779094f2d16cef9f5 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a229cf3f7f693bce779094f2d16cef9f5">CLCommandBuffer</a> (const <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;)=delete</td></tr>
<tr class="memdesc:a229cf3f7f693bce779094f2d16cef9f5 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow copy constructor.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a229cf3f7f693bce779094f2d16cef9f5">More...</a><br /></td></tr>
<tr class="separator:a229cf3f7f693bce779094f2d16cef9f5 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a392dd7bada4ee174094e2565cda0467b inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a392dd7bada4ee174094e2565cda0467b">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;)=delete</td></tr>
<tr class="memdesc:a392dd7bada4ee174094e2565cda0467b inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow copy assignment.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a392dd7bada4ee174094e2565cda0467b">More...</a><br /></td></tr>
<tr class="separator:a392dd7bada4ee174094e2565cda0467b inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a601b2342a3d85496294d1d202b1a216a inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a601b2342a3d85496294d1d202b1a216a">CLCommandBuffer</a> (<a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;&amp;other)=delete</td></tr>
<tr class="memdesc:a601b2342a3d85496294d1d202b1a216a inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow move constructor.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a601b2342a3d85496294d1d202b1a216a">More...</a><br /></td></tr>
<tr class="separator:a601b2342a3d85496294d1d202b1a216a inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f8e814a23635d542414d4f995345c33 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a5f8e814a23635d542414d4f995345c33">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;&amp;other)=delete</td></tr>
<tr class="memdesc:a5f8e814a23635d542414d4f995345c33 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow move assignment.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a5f8e814a23635d542414d4f995345c33">More...</a><br /></td></tr>
<tr class="separator:a5f8e814a23635d542414d4f995345c33 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab086507a14b18e4a82ebeb0c540eca5f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memTemplParams" colspan="2">template&lt;typename T , typename  = std::enable_if_t&lt;std::is_arithmetic&lt;T&gt;::value || std::is_pointer&lt;T&gt;::value&gt;&gt; </td></tr>
<tr class="memitem:ab086507a14b18e4a82ebeb0c540eca5f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#ab086507a14b18e4a82ebeb0c540eca5f">add_mutable_argument</a> (cl_uint arg_idx, const T *value)</td></tr>
<tr class="memdesc:ab086507a14b18e4a82ebeb0c540eca5f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the mutable argument to the current kernel enqueue command.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#ab086507a14b18e4a82ebeb0c540eca5f">More...</a><br /></td></tr>
<tr class="separator:ab086507a14b18e4a82ebeb0c540eca5f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classarm__compute_1_1_c_l_command_buffer"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classarm__compute_1_1_c_l_command_buffer')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a></td></tr>
<tr class="memitem:a8dac6dbe99699bbdab5ebe80f32e37c0 inherit pub_static_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top">static std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a8dac6dbe99699bbdab5ebe80f32e37c0">create</a> (cl_command_queue queue)</td></tr>
<tr class="memdesc:a8dac6dbe99699bbdab5ebe80f32e37c0 inherit pub_static_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new command buffer targeting the specified command queue.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a8dac6dbe99699bbdab5ebe80f32e37c0">More...</a><br /></td></tr>
<tr class="separator:a8dac6dbe99699bbdab5ebe80f32e37c0 inherit pub_static_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Command buffer implementaton based on CL mutable dispatch command buffer extension. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_mutable_command_buffer_8h_source.xhtml#l00036">36</a> of file <a class="el" href="_c_l_mutable_command_buffer_8h_source.xhtml">CLMutableCommandBuffer.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a43cf22ad4e0358981630f536f6c58599"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43cf22ad4e0358981630f536f6c58599">&#9670;&nbsp;</a></span>CLMutableCommandBuffer() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> </td>
          <td>(</td>
          <td class="paramtype">cl_command_queue&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a new mutable dispatch command buffer targeting the specified command queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">queue</td><td>The command queue to execute the command buffer. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml">CLMutableCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                                                                     : <a class="code" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a080ae7dc3dd0eb883881e05b7cabd06d">CLCommandBuffer</a>()</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    cl_int status = CL_SUCCESS;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    cl_command_buffer_properties_khr properties[] = {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        CL_COMMAND_BUFFER_FLAGS_KHR,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        CL_COMMAND_BUFFER_MUTABLE_KHR,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        0,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    };</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    _cb = <a class="code" href="_open_c_l_8cpp.xhtml#ae4091b6ac9dd4388f5b95f320a0c85a8">clCreateCommandBufferKHR</a>(1, &amp;queue, properties, &amp;status);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clCreateCommandBufferKHR&quot;</span>, status);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ae4091b6ac9dd4388f5b95f320a0c85a8"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ae4091b6ac9dd4388f5b95f320a0c85a8">clCreateCommandBufferKHR</a></div><div class="ttdeci">cl_command_buffer_khr clCreateCommandBufferKHR(cl_uint num_queues, const cl_command_queue *queues, const cl_command_buffer_properties_khr *properties, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01107">OpenCL.cpp:1107</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_command_buffer_xhtml_a080ae7dc3dd0eb883881e05b7cabd06d"><div class="ttname"><a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a080ae7dc3dd0eb883881e05b7cabd06d">arm_compute::CLCommandBuffer::CLCommandBuffer</a></div><div class="ttdeci">CLCommandBuffer()</div><div class="ttdoc">Constructor.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5bbad0e81db8c98c3e6bf6f9aa09c785"><div class="ttname"><a href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">arm_compute::handle_cl_error</a></div><div class="ttdeci">void handle_cl_error(const std::string &amp;function_name, cl_int error_code)</div><div class="ttdoc">Check for CL error code and throw exception accordingly.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_utils_8cpp_source.xhtml#l00120">CLUtils.cpp:120</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_open_c_l_8cpp_source.xhtml#l01107">clCreateCommandBufferKHR()</a>, and <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00120">arm_compute::handle_cl_error()</a>.</p>

</div>
</div>
<a id="a5552826c0c8b979b71d350cb67209721"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5552826c0c8b979b71d350cb67209721">&#9670;&nbsp;</a></span>~CLMutableCommandBuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml">CLMutableCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> status = <a class="code" href="_open_c_l_8cpp.xhtml#ad92270fbfad08428c9ed518170a8a74a">clReleaseCommandBufferKHR</a>(_cb);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">if</span> (status != CL_SUCCESS)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keyword">const</span> std::string error_message = <span class="stringliteral">&quot;clReleaseCommandBufferKHR - Error code: &quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">std::to_string</a>(status);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(error_message);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad92270fbfad08428c9ed518170a8a74a"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad92270fbfad08428c9ed518170a8a74a">clReleaseCommandBufferKHR</a></div><div class="ttdeci">cl_int clReleaseCommandBufferKHR(cl_command_buffer_khr command_buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01160">OpenCL.cpp:1160</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a062b90d0a8defe70b0cd19300fee2825"><div class="ttname"><a href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">arm_compute::to_string</a></div><div class="ttdeci">std::string to_string(const ClComponentElementwiseBinary::Attributes::ElementwiseOp &amp;op)</div><div class="ttdoc">Formatted output of the arm_compute::experimental::dynamic_fusion::ClComponentElementwiseBinary::Attr...</div><div class="ttdef"><b>Definition:</b> <a href="components_2utils_2type__printer_2_elementwise_binary_8h_source.xhtml#l00068">ElementwiseBinary.h:68</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_ada668c5c47184c0667c0b029d92d3b4f"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_ERROR_ACL(msg)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00032">Log.h:32</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00032">ARM_COMPUTE_LOG_ERROR_ACL</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01160">clReleaseCommandBufferKHR()</a>, and <a class="el" href="components_2utils_2type__printer_2_elementwise_binary_8h_source.xhtml#l00068">arm_compute::to_string()</a>.</p>

</div>
</div>
<a id="a3b2752ede16311e7ee7e928bd2e0aac2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b2752ede16311e7ee7e928bd2e0aac2">&#9670;&nbsp;</a></span>CLMutableCommandBuffer() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disallow copy constructor. </p>

</div>
</div>
<a id="af6c9f298d961858d1e65a62835bedbf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6c9f298d961858d1e65a62835bedbf6">&#9670;&nbsp;</a></span>CLMutableCommandBuffer() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disallow move constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a06ba711f428dcc60e33df9b34aa18fbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06ba711f428dcc60e33df9b34aa18fbc">&#9670;&nbsp;</a></span>add_kernel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void add_kernel </td>
          <td>(</td>
          <td class="paramtype">cl_kernel&#160;</td>
          <td class="paramname"><em>kernel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cl::NDRange &amp;&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cl::NDRange &amp;&#160;</td>
          <td class="paramname"><em>global</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cl::NDRange &amp;&#160;</td>
          <td class="paramname"><em>local</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add a kernel enqueue command to the command queue. </p>
<p>This function must be called before the command buffer has been finalized.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel</td><td>The CL kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>The global work offset. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">global</td><td>The global work size. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">local</td><td>The local work size. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#aacd903a79a2ddefa4da8093b75d4c1e0">CLCommandBuffer</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml">CLMutableCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Created);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    cl_mutable_command_khr mutable_handle = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    cl_ndrange_kernel_command_properties_khr properties[] = {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        CL_MUTABLE_DISPATCH_UPDATABLE_FIELDS_KHR,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        CL_MUTABLE_DISPATCH_ARGUMENTS_KHR,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        0,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    };</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> error = <a class="code" href="_open_c_l_8cpp.xhtml#acdc4200f6df3ab658adb5b2b4c22f6ac">clCommandNDRangeKernelKHR</a>(</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        _cb, <span class="keyword">nullptr</span>, properties, kernel, global.dimensions(), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.dimensions() != 0 ? <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.get() : <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        global.get(), local.dimensions() != 0 ? local.get() : <span class="keyword">nullptr</span>, 0, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>, &amp;mutable_handle);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clCommandNDRangeKernelKHR&quot;</span>, error);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    cl_mutable_dispatch_config_khr mut_dispatch_cfg{};</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    mut_dispatch_cfg.type    = CL_STRUCTURE_TYPE_MUTABLE_DISPATCH_CONFIG_KHR;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    mut_dispatch_cfg.command = mutable_handle;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    _mut_dispatch_cfgs.emplace_back(mut_dispatch_cfg);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_acdc4200f6df3ab658adb5b2b4c22f6ac"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#acdc4200f6df3ab658adb5b2b4c22f6ac">clCommandNDRangeKernelKHR</a></div><div class="ttdeci">cl_int clCommandNDRangeKernelKHR(cl_command_buffer_khr command_buffer, cl_command_queue command_queue, const cl_ndrange_kernel_command_properties_khr *properties, cl_kernel kernel, cl_uint work_dim, const size_t *global_work_offset, const size_t *global_work_size, const size_t *local_work_size, cl_uint num_sync_points_in_wait_list, const cl_sync_point_khr *sync_point_wait_list, cl_sync_point_khr *sync_point, cl_mutable_command_khr *mutable_handle)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01195">OpenCL.cpp:1195</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">helpers.h:1142</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01195">clCommandNDRangeKernelKHR()</a>, <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00120">arm_compute::handle_cl_error()</a>, and <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">offset()</a>.</p>

</div>
</div>
<a id="a36ec98486a2f4b7ee530e1953370572c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36ec98486a2f4b7ee530e1953370572c">&#9670;&nbsp;</a></span>enqueue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void enqueue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue the command buffer. </p>
<p>This function must be called after the command buffer has been finalized. </p>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a5fab675dd8532ba2d569c64fe0640d61">CLCommandBuffer</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00137">137</a> of file <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml">CLMutableCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Finalized);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> error = <a class="code" href="_open_c_l_8cpp.xhtml#aabca83598a7d2f2db7aaa2d4b1cbd1a7">clEnqueueCommandBufferKHR</a>(0, <span class="keyword">nullptr</span>, _cb, 0, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clEnqueueCommandBufferKHR&quot;</span>, error);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aabca83598a7d2f2db7aaa2d4b1cbd1a7"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aabca83598a7d2f2db7aaa2d4b1cbd1a7">clEnqueueCommandBufferKHR</a></div><div class="ttdeci">cl_int clEnqueueCommandBufferKHR(cl_uint num_queues, cl_command_queue *queues, cl_command_buffer_khr command_buffer, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01175">OpenCL.cpp:1175</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01175">clEnqueueCommandBufferKHR()</a>, and <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00120">arm_compute::handle_cl_error()</a>.</p>

</div>
</div>
<a id="a6a32bafa8064e666aed52486c4af4144"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a32bafa8064e666aed52486c4af4144">&#9670;&nbsp;</a></span>finalize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void finalize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Finalize the command buffer. </p>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a5882b5eaf11f8b1561d5bb4ecdc217c3">CLCommandBuffer</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00100">100</a> of file <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml">CLMutableCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Created);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> error = <a class="code" href="_open_c_l_8cpp.xhtml#a2eda66fd1833633bdc55e29686b7d454">clFinalizeCommandBufferKHR</a>(_cb);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clFinalizeCommandBufferKHR&quot;</span>, error);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    state(State::Finalized);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    _mut_dispatch_cfgs.shrink_to_fit();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    _mut_arg_cfgs.shrink_to_fit();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">size_t</span> arg_no = 0;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;mut_dispatch_cfg : _mut_dispatch_cfgs)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(arg_no &gt;= _mut_arg_cfgs.size());</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        mut_dispatch_cfg.arg_list = &amp;_mut_arg_cfgs[arg_no];</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        arg_no += mut_dispatch_cfg.num_args;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    _mut_cfg.type                  = CL_STRUCTURE_TYPE_MUTABLE_BASE_CONFIG_KHR;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    _mut_cfg.next                  = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    _mut_cfg.num_mutable_dispatch  = _mut_dispatch_cfgs.size();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    _mut_cfg.mutable_dispatch_list = &amp;_mut_dispatch_cfgs[0];</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a2eda66fd1833633bdc55e29686b7d454"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a2eda66fd1833633bdc55e29686b7d454">clFinalizeCommandBufferKHR</a></div><div class="ttdeci">cl_int clFinalizeCommandBufferKHR(cl_command_buffer_khr command_buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01130">OpenCL.cpp:1130</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01130">clFinalizeCommandBufferKHR()</a>, and <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00120">arm_compute::handle_cl_error()</a>.</p>

</div>
</div>
<a id="abef52b4cd29e5d9e45d53b1ed3f569ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abef52b4cd29e5d9e45d53b1ed3f569ad">&#9670;&nbsp;</a></span>is_finalized()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_finalized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the command buffer has been finalized. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the command buffer has been finalized. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#acbe3e7950f870aa8becbcc956b92cd3e">CLCommandBuffer</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00146">146</a> of file <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml">CLMutableCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">return</span> state() == State::Finalized;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad5779664a8bde7fea5fba39e76eb7c2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5779664a8bde7fea5fba39e76eb7c2d">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disallow move assignment. </p>

</div>
</div>
<a id="ae40c63f693d8eaba27f3259bb9a3cb94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae40c63f693d8eaba27f3259bb9a3cb94">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disallow copy assignment. </p>

</div>
</div>
<a id="a44137bb65de2396875934e48a6ee5099"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44137bb65de2396875934e48a6ee5099">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Update the command buffer with new kernel argument values. </p>
<p>This function must be called after the command buffer has been finalized.</p>
<p>All the value pointed by the mutable argument will be applied to the command buffer. </p>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a99b02345a8a15d3c5ea2844a2253f510">CLCommandBuffer</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00128">128</a> of file <a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml">CLMutableCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Finalized);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> error = <a class="code" href="_open_c_l_8cpp.xhtml#a1384e99dd308097bc7a2edb202eb91a2">clUpdateMutableCommandsKHR</a>(_cb, &amp;_mut_cfg);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clUpdateMutableCommandsKHR&quot;</span>, error);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1384e99dd308097bc7a2edb202eb91a2"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1384e99dd308097bc7a2edb202eb91a2">clUpdateMutableCommandsKHR</a></div><div class="ttdeci">cl_int clUpdateMutableCommandsKHR(cl_command_buffer_khr command_buffer, const cl_mutable_base_config_khr *mutable_config)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01222">OpenCL.cpp:1222</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01222">clUpdateMutableCommandsKHR()</a>, and <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00120">arm_compute::handle_cl_error()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/core/CL/<a class="el" href="_c_l_mutable_command_buffer_8h_source.xhtml">CLMutableCommandBuffer.h</a></li>
<li>src/core/CL/<a class="el" href="_c_l_mutable_command_buffer_8cpp_source.xhtml">CLMutableCommandBuffer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml">CLMutableCommandBuffer</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:53 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
