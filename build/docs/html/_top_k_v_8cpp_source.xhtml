<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CPP/TopKV.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_top_k_v_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TopKV.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_top_k_v_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2020 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_p_p_top_k_v_8h.xhtml">arm_compute/runtime/CPP/functions/CPPTopKV.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="runtime_2_tensor_8h.xhtml">arm_compute/runtime/Tensor.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_allocator_8h.xhtml">arm_compute/runtime/TensorAllocator.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_accessor_8h.xhtml">tests/NEON/Accessor.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_padding_calculator_8h.xhtml">tests/PaddingCalculator.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;tests/datasets/ShapeDatasets.h&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_asserts_8h.xhtml">tests/framework/Asserts.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_macros_8h.xhtml">tests/framework/Macros.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_datasets_8h.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validation_8h.xhtml">tests/validation/Validation.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;tests/validation/fixtures/PermuteFixture.h&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span>validation</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> U, <span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(U &amp;&amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <span class="keyword">const</span> std::vector&lt;T&gt; &amp;v)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    std::memcpy(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.data(), v.data(), <span class="keyword">sizeof</span>(T) * v.size());</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">TEST_SUITE</a>(CPP)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">TEST_SUITE</a>(TopKV)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">// *INDENT-OFF*</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">// clang-format off</span></div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a822e5814a7ccc966d5bac4d5f2fb0ebe">   57</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a146990bdb7bc1df6e90e6dca4eaa764c">DATA_TEST_CASE</a>(Validate, framework::<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>::ALL, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        framework::dataset::<a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">make</a>(&quot;PredictionsInfo&quot;, { <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(20, 10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10, 20), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>),  <span class="comment">// Mismatching batch_size</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(20, 10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">DataType::S8</a>), <span class="comment">// Unsupported data type</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10, 10, 10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>), <span class="comment">// Wrong predictions dimensions</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(20, 10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)}), <span class="comment">// Wrong output dimension</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;TargetsInfo&quot;</span>,{ <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>),</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>),</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>),</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>),</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>)})),</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;OutputInfo&quot;</span>,{ <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>),</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>),</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>),</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>),</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(1), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>)})),</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;k&quot;</span>,{ 0, 1, 2, 3, 4 })),</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Expected&quot;</span>, {<span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span> })),</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        prediction_info, targets_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25cae7166733a51d1354f3f395652782">output_info</a>, k, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">expected</a>)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">const</span> Status status = <a class="code" href="classarm__compute_1_1_c_p_p_top_k_v.xhtml#a78f9128e5b414dc15c66d2d21d55117c">CPPTopKV::validate</a>(&amp;prediction_info.clone()-&gt;set_is_resizable(<span class="keyword">false</span>),&amp;targets_info.clone()-&gt;set_is_resizable(<span class="keyword">false</span>), &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25cae7166733a51d1354f3f395652782">output_info</a>.clone()-&gt;set_is_resizable(<span class="keyword">false</span>), k);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(<span class="keywordtype">bool</span>(status) == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">expected</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">// clang-format on</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">// *INDENT-ON*</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3f20e3c02fe7bf3da8f52d3fbaec2178">   84</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(Float, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k = 5;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> predictions = create_tensor&lt;Tensor&gt;(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10, 20), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> targets     = create_tensor&lt;Tensor&gt;(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(20), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    predictions.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    targets.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// Fill the tensors with random pre-generated values</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a>(predictions), std::vector&lt;float&gt;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        0.8147, 0.6557, 0.4387, 0.7513, 0.3517, 0.1622, 0.1067, 0.8530, 0.7803, 0.5470,</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        0.9058, 0.0357, 0.3816, 0.2551, 0.8308, 0.7943, 0.9619, 0.6221, 0.3897, 0.2963,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        0.1270, 0.8491, 0.7655, 0.5060, 0.5853, 0.3112, 0.0046, 0.3510, 0.2417, 0.7447,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        0.9134, 0.9340, 0.7952, 0.6991, 0.5497, 0.5285, 0.7749, 0.5132, 0.4039, 0.1890,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        0.6324, 0.6787, 0.1869, 0.8909, 0.9172, 0.1656, 0.8173, 0.4018, 0.0965, 0.6868,</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        0.0975, 0.7577, 0.4898, 0.9593, 0.2858, 0.6020, 0.8687, 0.0760, 0.1320, 0.1835,</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        0.2785, 0.7431, 0.4456, 0.5472, 0.7572, 0.2630, 0.0844, 0.2399, 0.9421, 0.3685,</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        0.5469, 0.3922, 0.6463, 0.1386, 0.7537, 0.6541, 0.3998, 0.1233, 0.9561, 0.6256,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        0.9575, 0.6555, 0.7094, 0.1493, 0.3804, 0.6892, 0.2599, 0.1839, 0.5752, 0.7802,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        0.9649, 0.1712, 0.7547, 0.2575, 0.5678, 0.7482, 0.8001, 0.2400, 0.0598, 0.0811,</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        0.1576, 0.7060, 0.2760, 0.8407, 0.0759, 0.4505, 0.4314, 0.4173, 0.2348, 0.9294,</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        0.9706, 0.0318, 0.6797, 0.2543, 0.0540, 0.0838, 0.9106, 0.0497, 0.3532, 0.7757,</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        0.9572, 0.2769, 0.6551, 0.8143, 0.5308, 0.2290, 0.1818, 0.9027, 0.8212, 0.4868,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        0.4854, 0.0462, 0.1626, 0.2435, 0.7792, 0.9133, 0.2638, 0.9448, 0.0154, 0.4359,</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        0.8003, 0.0971, 0.1190, 0.9293, 0.9340, 0.1524, 0.1455, 0.4909, 0.0430, 0.4468,</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        0.1419, 0.8235, 0.4984, 0.3500, 0.1299, 0.8258, 0.1361, 0.4893, 0.1690, 0.3063,</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        0.4218, 0.6948, 0.9597, 0.1966, 0.5688, 0.5383, 0.8693, 0.3377, 0.6491, 0.5085,</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        0.9157, 0.3171, 0.3404, 0.2511, 0.4694, 0.9961, 0.5797, 0.9001, 0.7317, 0.5108,</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        0.7922, 0.9502, 0.5853, 0.6160, 0.0119, 0.0782, 0.5499, 0.3692, 0.6477, 0.8176,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        0.9595, 0.0344, 0.2238, 0.4733, 0.3371, 0.4427, 0.1450, 0.1112, 0.4509, 0.7948</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    });</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a>(targets), std::vector&lt;int&gt; { 1, 5, 7, 2, 8, 1, 2, 1, 2, 4, 3, 9, 4, 1, 9, 9, 4, 1, 2, 4 });</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="comment">// Determine the output through the CPP kernel</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>   output;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="classarm__compute_1_1_c_p_p_top_k_v.xhtml">CPPTopKV</a> topkv;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    topkv.<a class="code" href="classarm__compute_1_1_c_p_p_top_k_v.xhtml#ac886f64c915621a8a213f760bc0d9134">configure</a>(&amp;predictions, &amp;targets, &amp;output, k);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    output.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment">// Run the kernel</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    topkv.<a class="code" href="classarm__compute_1_1_i_c_p_p_simple_function.xhtml#a92fe532c342ae2b07956a65520c05362">run</a>();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="comment">// Validate against the expected values</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;uint8_t&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec0bef4b6cad12e7681f1a02f09dea11">expected_output</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(20), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec0bef4b6cad12e7681f1a02f09dea11">expected_output</a>, std::vector&lt;uint8_t&gt; { 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0 });</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a>(output), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec0bef4b6cad12e7681f1a02f09dea11">expected_output</a>);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a953ae244f293b54afec1c7e121cb0760">  137</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(QASYMM8, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k = 5;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> predictions = create_tensor&lt;Tensor&gt;(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10, 20), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>());</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> targets     = create_tensor&lt;Tensor&gt;(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(20), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    predictions.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    targets.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="comment">// Fill the tensors with random pre-generated values</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a>(predictions), std::vector&lt;uint8_t&gt;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        133, 235, 69, 118, 140, 179, 189, 203, 137, 157,</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        242, 1, 196, 170, 166, 25, 102, 244, 24, 254,</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        164, 119, 49, 198, 140, 135, 175, 84, 29, 136,</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        246, 109, 74, 90, 185, 136, 181, 172, 35, 123,</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        62, 118, 24, 170, 134, 221, 114, 113, 174, 206,</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        174, 198, 148, 107, 255, 125, 6, 214, 127, 59,</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        75, 83, 175, 216, 56, 101, 85, 197, 49, 128,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        172, 201, 140, 214, 28, 172, 109, 43, 127, 231,</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        178, 121, 109, 66, 29, 190, 70, 221, 38, 148,</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        18, 10, 165, 158, 17, 134, 51, 254, 15, 217,</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        66, 46, 166, 150, 104, 90, 211, 132, 218, 190,</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        58, 185, 174, 139, 115, 39, 111, 227, 144, 151,</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        171, 122, 163, 223, 94, 151, 228, 151, 238, 64,</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        217, 40, 242, 68, 196, 68, 101, 40, 179, 171,</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        89, 88, 54, 82, 161, 12, 197, 52, 150, 22,</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        200, 156, 182, 31, 198, 194, 102, 105, 209, 161,</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        173, 50, 61, 241, 239, 63, 207, 192, 226, 170,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        2, 190, 31, 166, 250, 114, 194, 212, 254, 187,</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        155, 63, 156, 123, 50, 177, 97, 203, 1, 229,</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        100, 235, 116, 164, 36, 92, 56, 82, 222, 252</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    });</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a>(targets), std::vector&lt;int&gt; { 1, 5, 7, 2, 8, 1, 2, 1, 2, 4, 3, 9, 4, 1, 9, 9, 4, 1, 2, 4 });</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">// Determine the output through the CPP kernel</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>   output;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="classarm__compute_1_1_c_p_p_top_k_v.xhtml">CPPTopKV</a> topkv;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    topkv.<a class="code" href="classarm__compute_1_1_c_p_p_top_k_v.xhtml#ac886f64c915621a8a213f760bc0d9134">configure</a>(&amp;predictions, &amp;targets, &amp;output, k);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    output.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="comment">// Run the kernel</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    topkv.<a class="code" href="classarm__compute_1_1_i_c_p_p_simple_function.xhtml#a92fe532c342ae2b07956a65520c05362">run</a>();</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="comment">// Validate against the expected values</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;uint8_t&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec0bef4b6cad12e7681f1a02f09dea11">expected_output</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(20), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec0bef4b6cad12e7681f1a02f09dea11">expected_output</a>, std::vector&lt;uint8_t&gt; { 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0 });</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a>(output), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec0bef4b6cad12e7681f1a02f09dea11">expected_output</a>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae9c4bcde80e226f0a94923471a12d5a6">  190</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(QASYMM8_SIGNED, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k = 5;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> predictions = create_tensor&lt;Tensor&gt;(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(10, 20), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>());</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> targets     = create_tensor&lt;Tensor&gt;(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(20), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    predictions.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    targets.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="comment">// Fill the tensors with random pre-generated values</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a>(predictions), std::vector&lt;int8_t&gt;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        123, -34, 69, 118, 20, -45, 99, -98, 127, 117,  <span class="comment">//-34</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        -99, 1, -128, 90, 60, 25, 102, 76, 24, -110,    <span class="comment">//25</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        99, 119, 49, 43, -40, 60, 43, 84, 29, 67,       <span class="comment">//84</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        33, 109, 74, 90, 90, 44, 98, 90, 35, 123,       <span class="comment">//74</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        62, 118, 24, -32, 34, 21, 114, 113, 124, 20,    <span class="comment">//124</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        74, 98, 48, 107, 127, 125, 6, -98, 127, 59,     <span class="comment">//98</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        75, 83, 75, -118, 56, 101, 85, 97, 49, 127,     <span class="comment">//75</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        72, -20, 40, 14, 28, -30, 109, 43, 127, -31,    <span class="comment">//-20</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        78, 121, 109, 66, 29, 90, 70, 21, 38, 48,       <span class="comment">//109</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        18, 10, 115, 124, 17, 123, 51, 54, 15, 17,      <span class="comment">//17</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        66, 46, -66, 125, 104, 90, 123, 113, -54, -126, <span class="comment">//125</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        58, -85, 74, 39, 115, 39, 111, -27, 44, 51,     <span class="comment">//51</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        71, 122, -34, -123, 94, 113, 125, 111, 38, 64,  <span class="comment">//94</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        -17, 40, 42, 68, 96, 68, 101, 40, 79, 71,       <span class="comment">//40</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        89, 88, 54, 82, 127, 12, 112, 52, 125, 22,      <span class="comment">//22</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        -128, 56, 82, 31, 98, 94, 102, 105, 127, 123,   <span class="comment">//123</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        112, 50, 61, 41, 39, 63, -77, 92, 26, 70,       <span class="comment">//39</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        2, 90, 31, 99, -34, 114, 112, 126, 127, 87,     <span class="comment">//90</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        125, 63, 56, 123, 50, -77, 97, -93, 1, 29,      <span class="comment">//56</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        100, -35, 116, 64, 36, 92, 56, 82, -22, -118    <span class="comment">//36</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    });</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a>(targets), std::vector&lt;int&gt; { 1, 5, 7, 2, 8, 1, 2, 1, 2, 4, 3, 9, 4, 1, 9, 9, 4, 1, 2, 4 });</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="comment">// Determine the output through the CPP kernel</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>   output;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="classarm__compute_1_1_c_p_p_top_k_v.xhtml">CPPTopKV</a> topkv;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    topkv.<a class="code" href="classarm__compute_1_1_c_p_p_top_k_v.xhtml#ac886f64c915621a8a213f760bc0d9134">configure</a>(&amp;predictions, &amp;targets, &amp;output, k);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    output.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="comment">// Run the kernel</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    topkv.<a class="code" href="classarm__compute_1_1_i_c_p_p_simple_function.xhtml#a92fe532c342ae2b07956a65520c05362">run</a>();</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="comment">// Validate against the expected values</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;int8_t&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec0bef4b6cad12e7681f1a02f09dea11">expected_output</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(20), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec0bef4b6cad12e7681f1a02f09dea11">expected_output</a>, std::vector&lt;int8_t&gt; { 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0 });</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a>(output), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec0bef4b6cad12e7681f1a02f09dea11">expected_output</a>);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;}</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// TopKV</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// CPP</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;} <span class="comment">// namespace validation</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="ttc" id="a_accessor_8h_xhtml"><div class="ttname"><a href="_accessor_8h.xhtml">Accessor.h</a></div></div>
<div class="ttc" id="a_asserts_8h_xhtml"><div class="ttname"><a href="_asserts_8h.xhtml">Asserts.h</a></div></div>
<div class="ttc" id="a_c_p_p_top_k_v_8h_xhtml"><div class="ttname"><a href="_c_p_p_top_k_v_8h.xhtml">CPPTopKV.h</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="a_datasets_8h_xhtml"><div class="ttname"><a href="_datasets_8h.xhtml">Datasets.h</a></div></div>
<div class="ttc" id="a_padding_calculator_8h_xhtml"><div class="ttname"><a href="_padding_calculator_8h.xhtml">PaddingCalculator.h</a></div></div>
<div class="ttc" id="a_tensor_allocator_8h_xhtml"><div class="ttname"><a href="_tensor_allocator_8h.xhtml">TensorAllocator.h</a></div></div>
<div class="ttc" id="a_validation_8h_xhtml"><div class="ttname"><a href="_validation_8h.xhtml">Validation.h</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_p_top_k_v_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_p_p_top_k_v.xhtml">arm_compute::CPPTopKV</a></div><div class="ttdoc">Basic function to run CPPTopKVKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_top_k_v_8h_source.xhtml#l00035">CPPTopKV.h:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_p_top_k_v_xhtml_a78f9128e5b414dc15c66d2d21d55117c"><div class="ttname"><a href="classarm__compute_1_1_c_p_p_top_k_v.xhtml#a78f9128e5b414dc15c66d2d21d55117c">arm_compute::CPPTopKV::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *predictions, const ITensorInfo *targets, ITensorInfo *output, const unsigned int k)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CPPTopKVKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_top_k_v_8cpp_source.xhtml#l00041">CPPTopKV.cpp:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_p_top_k_v_xhtml_ac886f64c915621a8a213f760bc0d9134"><div class="ttname"><a href="classarm__compute_1_1_c_p_p_top_k_v.xhtml#ac886f64c915621a8a213f760bc0d9134">arm_compute::CPPTopKV::configure</a></div><div class="ttdeci">void configure(const ITensor *predictions, const ITensor *targets, ITensor *output, const unsigned int k)</div><div class="ttdoc">Set the input and output of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_top_k_v_8cpp_source.xhtml#l00032">CPPTopKV.cpp:32</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_p_p_simple_function_xhtml_a92fe532c342ae2b07956a65520c05362"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_simple_function.xhtml#a92fe532c342ae2b07956a65520c05362">arm_compute::ICPPSimpleFunction::run</a></div><div class="ttdeci">void run() override final</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_simple_function_8cpp_source.xhtml#l00035">ICPPSimpleFunction.cpp:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00067">QuantizationInfo.h:68</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::TensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of CPU memory.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00133">TensorAllocator.cpp:133</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00041">TensorInfo.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml">arm_compute::Tensor</a></div><div class="ttdoc">Basic implementation of the tensor interface.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_tensor_8h_source.xhtml#l00037">Tensor.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_xhtml_adbd0cf83a8e1b335a9bf405a8e5019fa"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">arm_compute::Tensor::allocator</a></div><div class="ttdeci">TensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor's allocator.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_8cpp_source.xhtml#l00047">Tensor.cpp:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1_accessor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml">arm_compute::test::Accessor</a></div><div class="ttdoc">Accessor implementation for Tensor objects.</div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00035">Accessor.h:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1_simple_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor&lt; uint8_t &gt;</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00160">ContainerDataset.h:160</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes.</div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div><div class="ttdeci">@ ALL</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">arm_compute::test::framework::LogLevel::ERRORS</a></div><div class="ttdeci">@ ERRORS</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a146990bdb7bc1df6e90e6dca4eaa764c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a146990bdb7bc1df6e90e6dca4eaa764c">arm_compute::test::validation::DATA_TEST_CASE</a></div><div class="ttdeci">DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::SQRT), })), framework::dataset::make(&quot;Expected&quot;, { false, true, true, true, false, false, true, true, false })), input_info, output_info, act_info, expected)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_activation_layer_8cpp_source.xhtml#l00100">ActivationLayer.cpp:100</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a25cae7166733a51d1354f3f395652782"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a25cae7166733a51d1354f3f395652782">arm_compute::test::validation::output_info</a></div><div class="ttdeci">output_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a3b69631535313e83809cd7746027cc62"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">arm_compute::test::validation::expected</a></div><div class="ttdeci">expected</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">BatchNormalizationLayer.cpp:166</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a3c8562a1f05d23f44aed87545b7892cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">arm_compute::test::validation::ARM_COMPUTE_EXPECT</a></div><div class="ttdeci">ARM_COMPUTE_EXPECT(has_error==expected, framework::LogLevel::ERRORS)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a512eb649fdb115f2dee5df9f1d156b16"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">arm_compute::test::validation::TEST_SUITE_END</a></div><div class="ttdeci">TEST_SUITE_END() FIXTURE_DATA_TEST_CASE(RunSmall</div><div class="ttdoc">[CLActivationLayer Test snippet]</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_dequantization_layer_8cpp_source.xhtml#l00111">DequantizationLayer.cpp:111</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a6a5eef7d8485a2b8c04bf9b4638a90e9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">arm_compute::test::validation::fill_tensor</a></div><div class="ttdeci">fill_tensor(input_to_input_weights, std::vector&lt; uint8_t &gt;{ 122, 130, 124, 134, 120, 122, 134, 134 })</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a6cedfa50a34b1c89477ba0d8e7bb4c3c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cedfa50a34b1c89477ba0d8e7bb4c3c">arm_compute::test::validation::TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(QASYMM8_to_F32) FIXTURE_DATA_TEST_CASE(RunSmall</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a96f9e78d0c2a93f0e3a876eeae4be4b0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">arm_compute::test::validation::zip</a></div><div class="ttdeci">zip(zip(framework::dataset::make(&quot;Weights&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 1U), 1, DataType::F32), }), framework::dataset::make(&quot;MVBGInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(5U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false}))</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a975901e0b4d6e387107c4d785c22edd5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">arm_compute::test::validation::validate</a></div><div class="ttdeci">validate(CLAccessor(output_state), expected_output)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ad1506e225a5eac0b0b0a4b98b38750df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">arm_compute::test::validation::TEST_CASE</a></div><div class="ttdeci">TEST_CASE(FusedActivation, framework::DatasetMode::ALL)</div><div class="ttdoc">Validate fused activation expecting the following behaviours:</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_arithmetic_addition_8cpp_source.xhtml#l00093">ArithmeticAddition.cpp:93</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aec0bef4b6cad12e7681f1a02f09dea11"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aec0bef4b6cad12e7681f1a02f09dea11">arm_compute::test::validation::expected_output</a></div><div class="ttdeci">SimpleTensor&lt; uint8_t &gt; expected_output(output_shape, DataType::QASYMM8, 1, qasymm)</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:25</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdeci">@ QASYMM8_SIGNED</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::DataType::U8</a></div><div class="ttdeci">@ U8</div><div class="ttdoc">unsigned 8-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">arm_compute::DataType::S8</a></div><div class="ttdeci">@ S8</div><div class="ttdoc">signed 8-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">arm_compute::DataType::U32</a></div><div class="ttdeci">@ U32</div><div class="ttdoc">unsigned 32-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="aruntime_2_tensor_8h_xhtml"><div class="ttname"><a href="runtime_2_tensor_8h.xhtml">Tensor.h</a></div></div>
<div class="ttc" id="atests_2framework_2_macros_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml">Macros.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_420d2db1b9c99f59825a3985434c3703.xhtml">CPP</a></li><li class="navelem"><a class="el" href="_top_k_v_8cpp.xhtml">TopKV.cpp</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:48 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
