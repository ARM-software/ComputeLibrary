<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/operators/CpuMatMul.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cpu_mat_mul_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CpuMatMul.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cpu_mat_mul_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_mat_mul_8h.xhtml">src/cpu/operators/CpuMatMul.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2experimental_2_types_8h.xhtml">arm_compute/core/experimental/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2utils_2quantization_2_asymm_helpers_8h.xhtml">arm_compute/core/utils/quantization/AsymmHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_mat_mul_info_8h.xhtml">arm_compute/function_info/MatMulInfo.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_mat_mul_8h.xhtml">arm_compute/runtime/NEON/functions/NEMatMul.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_scheduler_8h.xhtml">arm_compute/runtime/NEON/NEScheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2common_2utils_2_log_8h.xhtml">src/common/utils/Log.h</a>&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2_c_p_p_2_validate_8h.xhtml">src/core/CPP/Validate.h</a>&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_auto_configuration_8h.xhtml">src/core/helpers/AutoConfiguration.h</a>&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_memory_helpers_8h.xhtml">src/core/helpers/MemoryHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2utils_2quantization_2_asymm_helpers_8h.xhtml">src/core/utils/quantization/AsymmHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_aux_tensor_handler_8h.xhtml">src/cpu/utils/CpuAuxTensorHandler.h</a>&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">namespace </span>cpu</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;Status get_gemmlowp_output_stage_info(<span class="keyword">const</span> ITensorInfo         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                      <span class="keyword">const</span> ITensorInfo         *weights,</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                      <span class="keyword">const</span> ITensorInfo         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                      <span class="keyword">const</span> ActivationLayerInfo &amp;act,</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                      GEMMLowpOutputStageInfo   &amp;gemmlowp_output_stage_info)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type();</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">const</span> QuantizationInfo        oq_info   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;quantization_info();</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">const</span> UniformQuantizationInfo iq_unif   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;quantization_info().uniform();</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">const</span> UniformQuantizationInfo wq_unif   = weights-&gt;quantization_info().uniform();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">const</span> UniformQuantizationInfo oq_unif   = oq_info.uniform();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">float</span>   multiplier = (iq_unif.scale * wq_unif.scale) / oq_unif.scale;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    int32_t output_multiplier;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    int32_t output_shift;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(multiplier, &amp;output_multiplier, &amp;output_shift));</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    int32_t type_min             = 0;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    int32_t type_max             = 0;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    std::tie(type_min, type_max) = <a class="code" href="namespacearm__compute_1_1quantization.xhtml#aaf40bbac7cf9a2a5c947723b7c38dcd7">quantization::get_quantized_asymmetric_output_min_max</a>(oq_info, act, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    gemmlowp_output_stage_info.gemmlowp_multiplier = output_multiplier;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    gemmlowp_output_stage_info.gemmlowp_shift      = output_shift;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    gemmlowp_output_stage_info.gemmlowp_offset     = oq_unif.offset;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    gemmlowp_output_stage_info.type                = <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    gemmlowp_output_stage_info.gemmlowp_min_bound  = type_min;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    gemmlowp_output_stage_info.gemmlowp_max_bound  = type_max;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#a6aaffeef146c355c489bf8bd959ce473">   85</a></span>&#160;CpuMatMul::CpuMatMul()</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    : _transpose_kernel_lhs(),</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      _transpose_kernel_rhs(),</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      _asm_glue(),</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      _lhs_transposed(),</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      _rhs_transposed(),</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      _original_lhs_shape(),</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      _original_rhs_shape(),</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      _original_dst_shape()</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#ab2c9966f83ca482f98b8745903bc1dac">   97</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#ab2c9966f83ca482f98b8745903bc1dac">CpuMatMul::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *lhs,</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *rhs,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_mat_mul_info.xhtml">MatMulInfo</a>          &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_cpu_mat_mul_settings.xhtml">CpuMatMulSettings</a>   &amp;settings,</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(lhs, rhs, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(lhs, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(lhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">are_values_constant</a>(), <span class="stringliteral">&quot;LHS Tensor must be dynamic.&quot;</span>);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(rhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">are_values_constant</a>(), <span class="stringliteral">&quot;RHS Tensor must be dynamic.&quot;</span>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="src_2core_2_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a>(lhs);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="src_2core_2_c_p_p_2_validate_8h.xhtml#ac7b5bc4d3468863e77d119593e15880d">ARM_COMPUTE_RETURN_ERROR_ON_CPU_BF16_UNSUPPORTED</a>(lhs);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> adj_lhs = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.adj_lhs();</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> adj_rhs = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.adj_rhs();</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *lhs_to_use = lhs;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *rhs_to_use = rhs;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>         lhs_transposed{};</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>         rhs_transposed{};</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">auto</span> gemm_info            = <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">AsmGemmInfo</a>();</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    gemm_info.activation_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    gemm_info.fast_mode       = settings.<a class="code" href="classarm__compute_1_1_cpu_mat_mul_settings.xhtml#ae2d38726d9f14d748185f77798617c8a">fast_math</a>();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">// Validate and then permute a/b</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">if</span> (adj_lhs)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(lhs_transposed,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                           lhs-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69cb11b5b37f94a6bea9eaad9d13cccf">misc::shape_calculator::compute_transposed_shape</a>(*lhs)));</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_transpose_kernel.xhtml#a1f4089d0d7191158a65d297c6a130682">cpu::kernels::CpuTransposeKernel::validate</a>(lhs_to_use, &amp;lhs_transposed));</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment">// Assign lhs_to_use pointer to use transposed TensorInfo</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        lhs_to_use = &amp;lhs_transposed;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">if</span> (adj_rhs)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(rhs_transposed,</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                           rhs-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69cb11b5b37f94a6bea9eaad9d13cccf">misc::shape_calculator::compute_transposed_shape</a>(*rhs)));</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_transpose_kernel.xhtml#a1f4089d0d7191158a65d297c6a130682">cpu::kernels::CpuTransposeKernel::validate</a>(rhs_to_use, &amp;rhs_transposed));</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="comment">// Assign rhs_to_use pointer to use transposed TensorInfo</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        rhs_to_use = &amp;rhs_transposed;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(lhs_to_use-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) != rhs_to_use-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1),</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                    <span class="stringliteral">&quot;The product AB is defined only if the number of columns in A is equal to the &quot;</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                    <span class="stringliteral">&quot;number of rows in B (after transpose)&quot;</span>);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="comment">// Iterate over dimensions to be collapsed in operator - check dimensions are equivalent between tensors</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 2; i &lt; <a class="code" href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">Coordinates::num_max_dimensions</a>; i++)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(lhs_to_use-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(i) != rhs_to_use-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(i),</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                        <span class="stringliteral">&quot;Broadcasting in Batch dimension is unsupported by this operator.&quot;</span>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="comment">// Quantized-specific configuration</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(lhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()))</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(get_gemmlowp_output_stage_info(lhs_to_use, rhs_to_use, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                                                   gemm_info.activation_info, gemm_info.output_stage));</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#ad1ae76c1f4f99aca4e9678c1322497e5">cpu::CpuGemmAssemblyDispatch::validate</a>(lhs_to_use, rhs_to_use, <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, gemm_info);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#af808dc50a2bb01edf8bf6acadde72c3e">  165</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#af808dc50a2bb01edf8bf6acadde72c3e">CpuMatMul::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *lhs,</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                          <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *rhs,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                          <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_mat_mul_info.xhtml">MatMulInfo</a>          &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>,</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_cpu_mat_mul_settings.xhtml">CpuMatMulSettings</a>   &amp;settings,</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;{</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(lhs, rhs, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(lhs, rhs, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, settings);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#ab2c9966f83ca482f98b8745903bc1dac">CpuMatMul::validate</a>(lhs, rhs, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, settings));</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    _adj_lhs   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.adj_lhs();</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    _adj_rhs   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.adj_rhs();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    _fast_math = settings.<a class="code" href="classarm__compute_1_1_cpu_mat_mul_settings.xhtml#ae2d38726d9f14d748185f77798617c8a">fast_math</a>();</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="comment">// 1. Create and reshape tensors</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="comment">// ------------------------------------------------------</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="comment">// a. Clone TensorInfo to prevent changing original tensor values during setup</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="comment">// b. Change shape of lhs/dst to [x, y, 1, collapsed(z)] to match assembly kernel configuration</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="comment">// c. For rhs collapse all dimensions larger than 3 to z dimension</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> lhs_to_use = *lhs-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> dst_to_use = *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;clone();</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> rhs_to_use = *rhs-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>();</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="comment">// Save starting shape of tensors</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    _original_lhs_shape = lhs_to_use.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>();</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    _original_dst_shape = dst_to_use.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>();</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    _original_rhs_shape = rhs_to_use.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="comment">// Reshape lhs for use with assembly kernels.</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    lhs_to_use.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a2d7e8b8e05c3318b2d90c40d781745d2">set_tensor_shape</a>(</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(_original_lhs_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>(), _original_lhs_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">y</a>(), 1, _original_lhs_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#af0d754a1bb2ae68b5d2f1aacc1794817">collapsed_from</a>(2).<a class="code" href="classarm__compute_1_1_dimensions.xhtml#abb29a685080e999c2a0cb874d2f7bb5a">z</a>()));</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    dst_to_use.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a2d7e8b8e05c3318b2d90c40d781745d2">set_tensor_shape</a>(</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(_original_dst_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>(), _original_dst_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">y</a>(), 1, _original_dst_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#af0d754a1bb2ae68b5d2f1aacc1794817">collapsed_from</a>(2).<a class="code" href="classarm__compute_1_1_dimensions.xhtml#abb29a685080e999c2a0cb874d2f7bb5a">z</a>()));</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    rhs_to_use.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a2d7e8b8e05c3318b2d90c40d781745d2">set_tensor_shape</a>(_original_rhs_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#af0d754a1bb2ae68b5d2f1aacc1794817">collapsed_from</a>(2));</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="comment">// 2.  Configuration for transpose of lhs/rhs</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="comment">// ------------------------------------------------------</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="comment">// Initialise transposed TensorInfo class for aux tensors (intermediary tensors)</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordflow">if</span> (_adj_lhs)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="comment">// Setup transpose LHS</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        _transpose_kernel_lhs = std::make_unique&lt;cpu::kernels::CpuTransposeKernel&gt;();</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        _transpose_kernel_lhs-&gt;configure(&amp;lhs_to_use, &amp;_lhs_transposed);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordflow">if</span> (_adj_rhs)</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="comment">// Setup transpose RHS</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        _transpose_kernel_rhs = std::make_unique&lt;cpu::kernels::CpuTransposeKernel&gt;();</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        _transpose_kernel_rhs-&gt;configure(&amp;rhs_to_use, &amp;_rhs_transposed);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    }</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="comment">// 3. Configure assembly kernel using transposed tensors.</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="comment">// -----------------------------------------------------</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="comment">// Use transposed tensors if the corresponding transpose flags are set</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="comment">// Fill AsmGemmInfo class object before configuration</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    _gemm_info.<a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    _gemm_info.<a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ab562a17bf232cdbe7aaaed2ca4ab7d0a">fast_mode</a>       = settings.<a class="code" href="classarm__compute_1_1_cpu_mat_mul_settings.xhtml#ae2d38726d9f14d748185f77798617c8a">fast_math</a>();</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    _gemm_info.<a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#aa1e14959c5017dd8b7d945e24f366757">negated_offsets</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    lhs_to_use = (_adj_lhs) ? _lhs_transposed : lhs_to_use;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    rhs_to_use = (_adj_rhs) ? _rhs_transposed : rhs_to_use;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="comment">// Quantized-specific configuration</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(lhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()))</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        get_gemmlowp_output_stage_info(&amp;lhs_to_use, &amp;rhs_to_use, &amp;dst_to_use, _gemm_info.<a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>,</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                       _gemm_info.<a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a65360a0526d791c7a9ff52a36fa059a8">output_stage</a>);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="comment">// Configure Asm Kernel</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    _asm_glue = std::make_unique&lt;cpu::CpuGemmAssemblyDispatch&gt;();</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    _asm_glue-&gt;configure(&amp;lhs_to_use, &amp;rhs_to_use, <span class="keyword">nullptr</span>, &amp;dst_to_use,</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                         _gemm_info); <span class="comment">// c is nullptr as bias not supported in MatMul</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="comment">// Specify memory requirements for intermediate tensors</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">auto</span> asm_mem_req = _asm_glue-&gt;workspace();</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="comment">// Specify memory required by gemm kernel</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordtype">int</span> idx = 0;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;aux : asm_mem_req)</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        _aux_mem[idx] = aux;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        idx++;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    }</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="comment">// Memory requirements for transposed tensors</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    _aux_mem[TransposeLHS] = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransposeLHS), MemoryLifetime::Temporary, lhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>());</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    _aux_mem[TransposeRHS] = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransposeRHS), MemoryLifetime::Temporary, rhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>());</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;}</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#a684a54d1fb1634a348a585c6b5e76df0">  255</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuMatMul::run</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;{</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="comment">// Retrieve tensors from tensor pack</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">auto</span> lhs = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keyword">auto</span> rhs = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="comment">// Reshape LHS and DST to ensure compatibility with GEMM asm kernel (Batch dimensions is 4th for lhs and dst within asm)</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="comment">// Collapse RHS (necessary to support dimensions larger than 3 in gemm assembly)</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    lhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a12a4f1190952613e36b44846962e26bb">set_tensor_shape</a>(</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(_original_lhs_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>(), _original_lhs_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">y</a>(), 1,</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    _original_lhs_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#af0d754a1bb2ae68b5d2f1aacc1794817">collapsed_from</a>(2).<a class="code" href="classarm__compute_1_1_dimensions.xhtml#abb29a685080e999c2a0cb874d2f7bb5a">z</a>())); <span class="comment">// Collapsed 3+ dimensions into z</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;info()-&gt;set_tensor_shape(</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(_original_dst_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>(), _original_dst_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">y</a>(), 1,</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                    _original_dst_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#af0d754a1bb2ae68b5d2f1aacc1794817">collapsed_from</a>(2).<a class="code" href="classarm__compute_1_1_dimensions.xhtml#abb29a685080e999c2a0cb874d2f7bb5a">z</a>())); <span class="comment">// Collapsed 3+ dimensions into z</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    rhs-&gt;info()-&gt;set_tensor_shape(_original_rhs_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#af0d754a1bb2ae68b5d2f1aacc1794817">collapsed_from</a>(2));</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="comment">// Initialise object to handle stored transposed tensors in auxillary memory</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml">CpuAuxTensorHandler</a> lhs_transposed(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransposeLHS), _lhs_transposed, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml">CpuAuxTensorHandler</a> rhs_transposed(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(TransposeRHS), _rhs_transposed, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="comment">// Create tensor pack for asm kernel</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> asm_tensors(tensors);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="comment">// Run transpose lhs if necessary</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keywordflow">if</span> (_adj_lhs)</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> lhs_transpose_pack = {{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, lhs}, {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, lhs_transposed.<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml#a07a5753fe338458e235f3107133299b6">get</a>()}};</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_transpose_kernel_lhs.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _transpose_kernel_lhs-&gt;window(),</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                                       lhs_transpose_pack);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        asm_tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, lhs_transposed.<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml#a07a5753fe338458e235f3107133299b6">get</a>());</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="comment">// Run transpose rhs if necessary</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keywordflow">if</span> (_adj_rhs)</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    {</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> rhs_transpose_pack = {{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, rhs}, {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, rhs_transposed.<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml#a07a5753fe338458e235f3107133299b6">get</a>()}};</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_transpose_kernel_rhs.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _transpose_kernel_rhs-&gt;window(),</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                       rhs_transpose_pack);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        asm_tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, rhs_transposed.<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml#a07a5753fe338458e235f3107133299b6">get</a>());</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="comment">// Run asm kernel</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    _asm_glue-&gt;run(asm_tensors);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="comment">// Undo reshape of tensors</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;info()-&gt;set_tensor_shape(_original_dst_shape);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    lhs-&gt;info()-&gt;set_tensor_shape(_original_lhs_shape);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    rhs-&gt;info()-&gt;set_tensor_shape(_original_rhs_shape);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#a74ae0d6e96f38fecd38471431786b870">  304</a></span>&#160;<a class="code" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuMatMul::workspace</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keywordflow">return</span> _aux_mem;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;}</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;} <span class="comment">// namespace cpu</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="ttc" id="a_auto_configuration_8h_xhtml"><div class="ttname"><a href="_auto_configuration_8h.xhtml">AutoConfiguration.h</a></div></div>
<div class="ttc" id="a_cpu_aux_tensor_handler_8h_xhtml"><div class="ttname"><a href="_cpu_aux_tensor_handler_8h.xhtml">CpuAuxTensorHandler.h</a></div></div>
<div class="ttc" id="a_cpu_mat_mul_8h_xhtml"><div class="ttname"><a href="_cpu_mat_mul_8h.xhtml">CpuMatMul.h</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00245">Error.h:245</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00205">Error.h:205</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="a_mat_mul_info_8h_xhtml"><div class="ttname"><a href="_mat_mul_info_8h.xhtml">MatMulInfo.h</a></div></div>
<div class="ttc" id="a_memory_helpers_8h_xhtml"><div class="ttname"><a href="_memory_helpers_8h.xhtml">MemoryHelpers.h</a></div></div>
<div class="ttc" id="a_n_e_mat_mul_8h_xhtml"><div class="ttname"><a href="_n_e_mat_mul_8h.xhtml">NEMatMul.h</a></div></div>
<div class="ttc" id="a_n_e_scheduler_8h_xhtml"><div class="ttname"><a href="_n_e_scheduler_8h.xhtml">NEScheduler.h</a></div></div>
<div class="ttc" id="a_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">Validate.h:677</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00952">Validate.h:952</a></div></div>
<div class="ttc" id="aarm__compute_2core_2experimental_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2experimental_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="aarm__compute_2core_2utils_2quantization_2_asymm_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2utils_2quantization_2_asymm_helpers_8h.xhtml">AsymmHelpers.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00061">ActivationLayerInfo.h:62</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_cpu_mat_mul_settings_xhtml"><div class="ttname"><a href="classarm__compute_1_1_cpu_mat_mul_settings.xhtml">arm_compute::CpuMatMulSettings</a></div><div class="ttdoc">Settings for MatMul Cpu implementation.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_mat_mul_8h_source.xhtml#l00036">NEMatMul.h:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_cpu_mat_mul_settings_xhtml_ae2d38726d9f14d748185f77798617c8a"><div class="ttname"><a href="classarm__compute_1_1_cpu_mat_mul_settings.xhtml#ae2d38726d9f14d748185f77798617c8a">arm_compute::CpuMatMulSettings::fast_math</a></div><div class="ttdeci">bool fast_math() const</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_mat_mul_8h_source.xhtml#l00040">NEMatMul.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_dimensions_xhtml_a1b67d5b720119d50faa286c774579ecc"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">arm_compute::Dimensions&lt; int &gt;::num_max_dimensions</a></div><div class="ttdeci">static constexpr size_t num_max_dimensions</div><div class="ttdoc">Number of dimensions the tensor has.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00046">Dimensions.h:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_dimensions_xhtml_aa87f8fc26981b0f3228a78c83b95b802"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">arm_compute::Dimensions::x</a></div><div class="ttdeci">T x() const</div><div class="ttdoc">Alias to access the size of the first dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00086">Dimensions.h:86</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_dimensions_xhtml_abb29a685080e999c2a0cb874d2f7bb5a"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#abb29a685080e999c2a0cb874d2f7bb5a">arm_compute::Dimensions::z</a></div><div class="ttdeci">T z() const</div><div class="ttdoc">Alias to access the size of the third dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00096">Dimensions.h:96</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_dimensions_xhtml_ac4a1050be02b20b3f791b9a483f3abe2"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">arm_compute::Dimensions::y</a></div><div class="ttdeci">T y() const</div><div class="ttdoc">Alias to access the size of the second dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00091">Dimensions.h:91</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_scheduler_xhtml_a15103352886ec83d9c250a7f5d5c630f"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">arm_compute::IScheduler::schedule_op</a></div><div class="ttdeci">virtual void schedule_op(ICPPKernel *kernel, const Hints &amp;hints, const Window &amp;window, ITensorPack &amp;tensors)=0</div><div class="ttdoc">Runs the kernel in the same thread as the caller synchronously.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a12a4f1190952613e36b44846962e26bb"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a12a4f1190952613e36b44846962e26bb">arm_compute::ITensorInfo::set_tensor_shape</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_tensor_shape(const TensorShape &amp;shape)=0</div><div class="ttdoc">Set the shape of an already initialized tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a18064e0011c3869d884653e9e7c47b66"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">arm_compute::ITensorInfo::total_size</a></div><div class="ttdeci">virtual size_t total_size() const =0</div><div class="ttdoc">Returns the total size of the tensor in bytes.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a755401027819f45173d06db7a922eb10"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a755401027819f45173d06db7a922eb10">arm_compute::ITensorInfo::are_values_constant</a></div><div class="ttdeci">virtual bool are_values_constant() const =0</div><div class="ttdoc">Flag indicating whether the values of the tensor are constant, meaning that they can change on kernel...</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a000c70e9839ed364ab7343de880a4d35"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">arm_compute::ITensorPack::get_const_tensor</a></div><div class="ttdeci">const ITensor * get_const_tensor(int id) const</div><div class="ttdoc">Get constant tensor of a given id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00053">ITensorPack.cpp:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a341a4c8a24d190d39504656989573d91"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">arm_compute::ITensorPack::get_tensor</a></div><div class="ttdeci">ITensor * get_tensor(int id)</div><div class="ttdoc">Get tensor of a given id from the pac.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00063">ITensorPack.cpp:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_aa23dcee239e241566abce6dfceac704d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">arm_compute::ITensorPack::add_const_tensor</a></div><div class="ttdeci">void add_const_tensor(int id, const ITensor *tensor)</div><div class="ttdoc">Add const tensor to the pack.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00048">ITensorPack.cpp:48</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_mat_mul_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_mat_mul_info.xhtml">arm_compute::MatMulInfo</a></div><div class="ttdoc">Class for holding information related to matrix multiplication function.</div><div class="ttdef"><b>Definition:</b> <a href="_mat_mul_info_8h_source.xhtml#l00031">MatMulInfo.h:32</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_scheduler_xhtml_a0d63ca713bab377aabcfb63c192b8429"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">arm_compute::Scheduler::get</a></div><div class="ttdeci">static IScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_8cpp_source.xhtml#l00094">Scheduler.cpp:94</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00041">TensorInfo.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a269b19ce3f357ac65f41f9951906e38e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">arm_compute::TensorInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const override</div><div class="ttdoc">Size for each dimension of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00245">TensorInfo.h:245</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a2d7e8b8e05c3318b2d90c40d781745d2"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a2d7e8b8e05c3318b2d90c40d781745d2">arm_compute::TensorInfo::set_tensor_shape</a></div><div class="ttdeci">ITensorInfo &amp; set_tensor_shape(const TensorShape &amp;shape) override</div><div class="ttdoc">Set the shape of an already initialized tensor.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_tensor_info_8cpp_source.xhtml#l00370">TensorInfo.cpp:370</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_af0d754a1bb2ae68b5d2f1aacc1794817"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#af0d754a1bb2ae68b5d2f1aacc1794817">arm_compute::TensorShape::collapsed_from</a></div><div class="ttdeci">TensorShape collapsed_from(size_t start) const</div><div class="ttdoc">Return a copy with collapsed dimensions starting from a given point.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00164">TensorShape.h:164</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml">arm_compute::cpu::CpuAuxTensorHandler</a></div><div class="ttdef"><b>Definition:</b> <a href="_cpu_aux_tensor_handler_8h_source.xhtml#l00039">CpuAuxTensorHandler.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler_xhtml_a07a5753fe338458e235f3107133299b6"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml#a07a5753fe338458e235f3107133299b6">arm_compute::cpu::CpuAuxTensorHandler::get</a></div><div class="ttdeci">ITensor * get()</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_aux_tensor_handler_8h_source.xhtml#l00105">CpuAuxTensorHandler.h:105</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_ad1ae76c1f4f99aca4e9678c1322497e5"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#ad1ae76c1f4f99aca4e9678c1322497e5">arm_compute::cpu::CpuGemmAssemblyDispatch::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *d, const AsmGemmInfo &amp;info)</div><div class="ttdoc">Indicates whether or not this function can be used to process the given parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00911">CpuGemmAssemblyDispatch.cpp:911</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_mat_mul_xhtml_a684a54d1fb1634a348a585c6b5e76df0"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#a684a54d1fb1634a348a585c6b5e76df0">arm_compute::cpu::CpuMatMul::run</a></div><div class="ttdeci">void run(ITensorPack &amp;tensors) override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_mat_mul_8cpp_source.xhtml#l00255">CpuMatMul.cpp:255</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_mat_mul_xhtml_a74ae0d6e96f38fecd38471431786b870"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#a74ae0d6e96f38fecd38471431786b870">arm_compute::cpu::CpuMatMul::workspace</a></div><div class="ttdeci">experimental::MemoryRequirements workspace() const override</div><div class="ttdoc">Return the memory requirements required by the workspace.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_mat_mul_8cpp_source.xhtml#l00304">CpuMatMul.cpp:304</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_mat_mul_xhtml_ab2c9966f83ca482f98b8745903bc1dac"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#ab2c9966f83ca482f98b8745903bc1dac">arm_compute::cpu::CpuMatMul::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *lhs, const ITensorInfo *rhs, const ITensorInfo *dst, const MatMulInfo &amp;info, const CpuMatMulSettings &amp;settings, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_mat_mul_8cpp_source.xhtml#l00097">CpuMatMul.cpp:97</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_mat_mul_xhtml_af808dc50a2bb01edf8bf6acadde72c3e"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml#af808dc50a2bb01edf8bf6acadde72c3e">arm_compute::cpu::CpuMatMul::configure</a></div><div class="ttdeci">void configure(ITensorInfo *lhs, ITensorInfo *rhs, ITensorInfo *dst, const MatMulInfo &amp;info, const CpuMatMulSettings &amp;settings, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Configure operator for a given list of arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_mat_mul_8cpp_source.xhtml#l00165">CpuMatMul.cpp:165</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_transpose_kernel_xhtml_a1f4089d0d7191158a65d297c6a130682"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_transpose_kernel.xhtml#a1f4089d0d7191158a65d297c6a130682">arm_compute::cpu::kernels::CpuTransposeKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dst)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_transpose_kernel_8cpp_source.xhtml#l00764">CpuTransposeKernel.cpp:764</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1misc_1_1_i_cloneable_xhtml_a4d10e5012a872e7f78f2b539b673049d"><div class="ttname"><a href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">arm_compute::misc::ICloneable::clone</a></div><div class="ttdeci">virtual std::unique_ptr&lt; T &gt; clone() const =0</div><div class="ttdoc">Provide a clone of the current object of class T.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00083">Types.h:84</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_aa93a4d93eb22ef5445cd567ef22ca67c"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">arm_compute::experimental::MemoryRequirements</a></div><div class="ttdeci">std::vector&lt; MemoryInfo &gt; MemoryRequirements</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00123">Types.h:123</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a69cb11b5b37f94a6bea9eaad9d13cccf"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69cb11b5b37f94a6bea9eaad9d13cccf">arm_compute::misc::shape_calculator::compute_transposed_shape</a></div><div class="ttdeci">TensorShape compute_transposed_shape(const ITensorInfo &amp;input)</div><div class="ttdoc">Calculate the transposed shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00422">ShapeCalculator.h:422</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1quantization_xhtml_aada9ec2ea42d767854b2b7545ffd310b"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">arm_compute::quantization::calculate_quantized_multiplier</a></div><div class="ttdeci">Status calculate_quantized_multiplier(float multiplier, int32_t *quant_multiplier, int32_t *shift, bool ignore_epsilon=false)</div><div class="ttdoc">Calculate quantized representation of multiplier.</div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00043">AsymmHelpers.cpp:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1quantization_xhtml_aaf40bbac7cf9a2a5c947723b7c38dcd7"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#aaf40bbac7cf9a2a5c947723b7c38dcd7">arm_compute::quantization::get_quantized_asymmetric_output_min_max</a></div><div class="ttdeci">std::tuple&lt; int32_t, int32_t &gt; get_quantized_asymmetric_output_min_max(const QuantizationInfo &amp;q_info, const ActivationLayerInfo &amp;act_info, DataType data_type)</div><div class="ttdoc">Get minimum and maximum output of the activation function after quantization.</div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00183">AsymmHelpers.cpp:183</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1f8aca235c095df227e7444f6b237eb1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">arm_compute::test::validation::act_info</a></div><div class="ttdeci">act_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00221">Cast.cpp:222</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:25</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdeci">@ ACL_DST</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdeci">@ ACL_SRC</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0bee325b210f81bb89fe1f9e15badf9c"><div class="ttname"><a href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">arm_compute::is_data_type_quantized</a></div><div class="ttdeci">bool is_data_type_quantized(DataType dt)</div><div class="ttdoc">Check if a given data type is of quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00324">DataTypeUtils.h:324</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a324d709e8fb5568ada56ba4999dfb2f1"><div class="ttname"><a href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">arm_compute::offset_int_vec</a></div><div class="ttdeci">int offset_int_vec(int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_memory_helpers_8h_source.xhtml#l00038">MemoryHelpers.h:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a37c28ce239ce7092298245ce59694917"><div class="ttname"><a href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00043">AutoConfiguration.h:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a></div><div class="ttdeci">@ QUANTIZE_DOWN_FIXEDPOINT</div><div class="ttdoc">Quantize using a fixed point multiplication.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdeci">@ QASYMM8_SIGNED</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml">Log.h</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00035">Log.h:35</a></div></div>
<div class="ttc" id="asrc_2core_2_c_p_p_2_validate_8h_xhtml"><div class="ttname"><a href="src_2core_2_c_p_p_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="asrc_2core_2_c_p_p_2_validate_8h_xhtml_ac7b5bc4d3468863e77d119593e15880d"><div class="ttname"><a href="src_2core_2_c_p_p_2_validate_8h.xhtml#ac7b5bc4d3468863e77d119593e15880d">ARM_COMPUTE_RETURN_ERROR_ON_CPU_BF16_UNSUPPORTED</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_CPU_BF16_UNSUPPORTED(tensor)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00123">Validate.h:123</a></div></div>
<div class="ttc" id="asrc_2core_2_c_p_p_2_validate_8h_xhtml_ad2633f3560322e1f8d926949dec1b730"><div class="ttname"><a href="src_2core_2_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED(tensor)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00117">Validate.h:117</a></div></div>
<div class="ttc" id="asrc_2core_2utils_2quantization_2_asymm_helpers_8h_xhtml"><div class="ttname"><a href="src_2core_2utils_2quantization_2_asymm_helpers_8h.xhtml">AsymmHelpers.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">arm_compute::cpu::AsmGemmInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00044">CpuGemmAssemblyDispatch.h:45</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a65360a0526d791c7a9ff52a36fa059a8"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a65360a0526d791c7a9ff52a36fa059a8">arm_compute::cpu::AsmGemmInfo::output_stage</a></div><div class="ttdeci">GEMMLowpOutputStageInfo output_stage</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00049">CpuGemmAssemblyDispatch.h:49</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_aa1e14959c5017dd8b7d945e24f366757"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#aa1e14959c5017dd8b7d945e24f366757">arm_compute::cpu::AsmGemmInfo::negated_offsets</a></div><div class="ttdeci">bool negated_offsets</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00050">CpuGemmAssemblyDispatch.h:50</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_ab562a17bf232cdbe7aaaed2ca4ab7d0a"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ab562a17bf232cdbe7aaaed2ca4ab7d0a">arm_compute::cpu::AsmGemmInfo::fast_mode</a></div><div class="ttdeci">bool fast_mode</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00056">CpuGemmAssemblyDispatch.h:56</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_ad5f55d98fbe268b4eb6225aca14a2403"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">arm_compute::cpu::AsmGemmInfo::activation_info</a></div><div class="ttdeci">ActivationLayerInfo activation_info</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00048">CpuGemmAssemblyDispatch.h:48</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">arm_compute::experimental::MemoryInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00091">Types.h:92</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_e639157fd988cab7c102f16994a5c7d6.xhtml">operators</a></li><li class="navelem"><a class="el" href="_cpu_mat_mul_8cpp.xhtml">CpuMatMul.cpp</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:45 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
