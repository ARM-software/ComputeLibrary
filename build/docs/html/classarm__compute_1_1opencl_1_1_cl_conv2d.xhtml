<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClConv2d Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClConv2d Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to compute the convolution layer.  
 <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_cl_conv2d_8h_source.xhtml">ClConv2d.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ClConv2d:</div>
<div class="dyncontent">
<div class="center"><!-- SVG 0 -->
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8ede14dd382286f2f38b2da5ddeab623"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a8ede14dd382286f2f38b2da5ddeab623">ClConv2d</a> ()</td></tr>
<tr class="memdesc:a8ede14dd382286f2f38b2da5ddeab623"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a8ede14dd382286f2f38b2da5ddeab623">More...</a><br /></td></tr>
<tr class="separator:a8ede14dd382286f2f38b2da5ddeab623"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4af8c38dee0f8737fe65cbc5be84d865"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a4af8c38dee0f8737fe65cbc5be84d865">~ClConv2d</a> ()</td></tr>
<tr class="memdesc:a4af8c38dee0f8737fe65cbc5be84d865"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Destructor.  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a4af8c38dee0f8737fe65cbc5be84d865">More...</a><br /></td></tr>
<tr class="separator:a4af8c38dee0f8737fe65cbc5be84d865"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4232de891b977ba45a75a3c901204ba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#ac4232de891b977ba45a75a3c901204ba">ClConv2d</a> (const <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> &amp;)=delete</td></tr>
<tr class="memdesc:ac4232de891b977ba45a75a3c901204ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#ac4232de891b977ba45a75a3c901204ba">More...</a><br /></td></tr>
<tr class="separator:ac4232de891b977ba45a75a3c901204ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af51298a2831582aba5b2fb5072164328"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#af51298a2831582aba5b2fb5072164328">ClConv2d</a> (<a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:af51298a2831582aba5b2fb5072164328"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#af51298a2831582aba5b2fb5072164328">More...</a><br /></td></tr>
<tr class="separator:af51298a2831582aba5b2fb5072164328"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab83fadfdbcf1b838aa5082d2a3dc155e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#ab83fadfdbcf1b838aa5082d2a3dc155e">operator=</a> (const <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> &amp;)=delete</td></tr>
<tr class="memdesc:ab83fadfdbcf1b838aa5082d2a3dc155e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#ab83fadfdbcf1b838aa5082d2a3dc155e">More...</a><br /></td></tr>
<tr class="separator:ab83fadfdbcf1b838aa5082d2a3dc155e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3090e4b7d022d8cb1244f60f64e61ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#af3090e4b7d022d8cb1244f60f64e61ac">operator=</a> (<a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:af3090e4b7d022d8cb1244f60f64e61ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#af3090e4b7d022d8cb1244f60f64e61ac">More...</a><br /></td></tr>
<tr class="separator:af3090e4b7d022d8cb1244f60f64e61ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8b49d9ec90794a4e3472ece1e34f74b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#ad8b49d9ec90794a4e3472ece1e34f74b">configure</a> (const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;compile_context, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, const <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> &amp;conv2d_info, const <a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> &amp;weights_info=<a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>())</td></tr>
<tr class="memdesc:ad8b49d9ec90794a4e3472ece1e34f74b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the src and dst tensors.  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#ad8b49d9ec90794a4e3472ece1e34f74b">More...</a><br /></td></tr>
<tr class="separator:ad8b49d9ec90794a4e3472ece1e34f74b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684a54d1fb1634a348a585c6b5e76df0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">run</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) override</td></tr>
<tr class="memdesc:a684a54d1fb1634a348a585c6b5e76df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">More...</a><br /></td></tr>
<tr class="separator:a684a54d1fb1634a348a585c6b5e76df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4d2c35e9fbc329b2e1b2acb864265aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">prepare</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) override</td></tr>
<tr class="memdesc:af4d2c35e9fbc329b2e1b2acb864265aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">More...</a><br /></td></tr>
<tr class="separator:af4d2c35e9fbc329b2e1b2acb864265aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74ae0d6e96f38fecd38471431786b870"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">workspace</a> () const override</td></tr>
<tr class="memdesc:a74ae0d6e96f38fecd38471431786b870"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the memory requirements required by the workspace.  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">More...</a><br /></td></tr>
<tr class="separator:a74ae0d6e96f38fecd38471431786b870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a></td></tr>
<tr class="memitem:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#ac4ed47b6e86464a36585094de41f1bc4">ICLOperator</a> (<a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#ac4ed47b6e86464a36585094de41f1bc4">More...</a><br /></td></tr>
<tr class="separator:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a219a51d9e81ee889a97cf4fdceb70dca">ICLOperator</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a219a51d9e81ee889a97cf4fdceb70dca">More...</a><br /></td></tr>
<tr class="separator:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a4f9ec2decc6780c6fd9b67f3e9ef9e77">ICLOperator</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a4f9ec2decc6780c6fd9b67f3e9ef9e77">More...</a><br /></td></tr>
<tr class="separator:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a3acfe6ff0d707c408bd2d8a111e2a7c4">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a3acfe6ff0d707c408bd2d8a111e2a7c4">More...</a><br /></td></tr>
<tr class="separator:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#af2f26be13d5bb74bf2ac7e8b3bd65b17">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#af2f26be13d5bb74bf2ac7e8b3bd65b17">More...</a><br /></td></tr>
<tr class="separator:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a></td></tr>
<tr class="memitem:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">~IOperator</a> ()=default</td></tr>
<tr class="memdesc:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">More...</a><br /></td></tr>
<tr class="separator:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a53a240b0b5f4bbdf834daad6a47e33de"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a53a240b0b5f4bbdf834daad6a47e33de">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, const <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> &amp;conv2d_info, const <a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> &amp;weights_info=<a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>())</td></tr>
<tr class="memdesc:a53a240b0b5f4bbdf834daad6a47e33de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a>.  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a53a240b0b5f4bbdf834daad6a47e33de">More...</a><br /></td></tr>
<tr class="separator:a53a240b0b5f4bbdf834daad6a47e33de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59b06b73d45fe58ae6e5ed2185251994"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a59b06b73d45fe58ae6e5ed2185251994">get_convolution_method</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, const <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> &amp;conv2d_info, const <a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> &amp;weights_info, const <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target)</td></tr>
<tr class="memdesc:a59b06b73d45fe58ae6e5ed2185251994"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will return the convolution called by <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a>.  <a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a59b06b73d45fe58ae6e5ed2185251994">More...</a><br /></td></tr>
<tr class="separator:a59b06b73d45fe58ae6e5ed2185251994"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to compute the convolution layer. </p>
<p>This function calls the following OpenCL kernels/functions:</p>
<ol type="1">
<li><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml">opencl::ClGemmConv2d</a></li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml">opencl::ClWinogradConv2d</a></li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml">opencl::ClIndirectConv2d</a></li>
<li><a class="el" href="classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml">opencl::ClDirectConv2d</a></li>
<li><a class="el" href="classarm__compute_1_1_c_l_f_f_t_convolution_layer.xhtml">CLFFTConvolutionLayer</a></li>
</ol>
<p>The function selects one of the algorithms mentioned above based on:</p><ul>
<li>The size of the kernel</li>
<li>Number of src/dst feature maps</li>
<li>Amount of memory needed</li>
</ul>
<p>Generally GEMM-based convolution is executed when neither Winograd nor FFT nor Direct convolution can be performed.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">FP32 Algorithm   </th><th class="markdownTableHeadNone">Filter Size   </th><th class="markdownTableHeadNone">Input/Output feature maps    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">Winograd   </td><td class="markdownTableBodyNone">3x3 1x3 3x1 5x1 1x5 5x5(fast maths) 7x1 1x7   </td><td class="markdownTableBodyNone">Input channels is greater than 3    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">FFT   </td><td class="markdownTableBodyNone">Squared kernels and greater than 9x9   </td><td class="markdownTableBodyNone">Input feature maps &gt; Output feature maps    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">DirectConv   </td><td class="markdownTableBodyNone">9x9   </td><td class="markdownTableBodyNone"></td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">GEMM   </td><td class="markdownTableBodyNone">Any size   </td><td class="markdownTableBodyNone"></td></tr>
</table>
<p>Winograd 5x5 requires fast maths enabled.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">FP16 Algorithm   </th><th class="markdownTableHeadNone">Filter Size   </th><th class="markdownTableHeadNone">Input/Output feature maps    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">Winograd   </td><td class="markdownTableBodyNone">3x3 1x3 3x1 5x1 1x5 5x5   </td><td class="markdownTableBodyNone">Input channels is greater than 3    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">FFT   </td><td class="markdownTableBodyNone">Not supported   </td><td class="markdownTableBodyNone"></td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">DirectConv   </td><td class="markdownTableBodyNone">9x9   </td><td class="markdownTableBodyNone"></td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">GEMM   </td><td class="markdownTableBodyNone">Any size   </td><td class="markdownTableBodyNone"></td></tr>
</table>
<p>Winograd FP16 requires fast maths enabled. </p>

<p class="definition">Definition at line <a class="el" href="_cl_conv2d_8h_source.xhtml#l00072">72</a> of file <a class="el" href="_cl_conv2d_8h_source.xhtml">ClConv2d.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8ede14dd382286f2f38b2da5ddeab623"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ede14dd382286f2f38b2da5ddeab623">&#9670;&nbsp;</a></span>ClConv2d() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00074">74</a> of file <a class="el" href="_cl_conv2d_8cpp_source.xhtml">ClConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                   : _operator()</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4af8c38dee0f8737fe65cbc5be84d865"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4af8c38dee0f8737fe65cbc5be84d865">&#9670;&nbsp;</a></span>~ClConv2d()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Destructor. </p>

</div>
</div>
<a id="ac4232de891b977ba45a75a3c901204ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4232de891b977ba45a75a3c901204ba">&#9670;&nbsp;</a></span>ClConv2d() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="af51298a2831582aba5b2fb5072164328"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af51298a2831582aba5b2fb5072164328">&#9670;&nbsp;</a></span>ClConv2d() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad8b49d9ec90794a4e3472ece1e34f74b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8b49d9ec90794a4e3472ece1e34f74b">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;&#160;</td>
          <td class="paramname"><em>compile_context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>conv2d_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights_info</em> = <code><a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the src and dst tensors. </p>
<p>Valid data layouts:</p><ul>
<li>NHWC</li>
<li>NCHW</li>
</ul>
<p>Valid data type configurations: </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadLeft">src0   </th><th class="markdownTableHeadLeft">src1   </th><th class="markdownTableHeadLeft">src2   </th><th class="markdownTableHeadLeft">dst    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">F16   </td><td class="markdownTableBodyLeft">F16   </td><td class="markdownTableBodyLeft">F16   </td><td class="markdownTableBodyLeft">F16    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">F32   </td><td class="markdownTableBodyLeft">F32   </td><td class="markdownTableBodyLeft">F32   </td><td class="markdownTableBodyLeft">F32    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8   </td><td class="markdownTableBodyLeft">QASYMM8   </td><td class="markdownTableBodyLeft">S32   </td><td class="markdownTableBodyLeft">QASYMM8    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">QASYMM8   </td><td class="markdownTableBodyLeft">QSYMM8_PER_CHANNEL   </td><td class="markdownTableBodyLeft">S32   </td><td class="markdownTableBodyLeft">QASYMM8    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8_SIGNED   </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED   </td><td class="markdownTableBodyLeft">S32   </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">QASYMM8_SIGNED   </td><td class="markdownTableBodyLeft">QSYMM8_PER_CHANNEL   </td><td class="markdownTableBodyLeft">S32   </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED   </td></tr>
</table>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">compile_context</td><td>The compile context to be used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Source tensor info. 3 lower dimensions represent a single src [width, height, IFM], while every optional dimension from 4 and above represent a batch of srcs. Data types supported: QASYMM8/QASYMM8_SIGNED/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>Weights tensor info. Weights are 4D tensor with dimensions [kernel_x, kernel_y, IFM, OFM]. Data type supported: Same as <code>src</code>, also could be QSYMM8_PER_CHANNEL if src is QASYMM8/QASYMM8_SIGNED. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">biases</td><td>Biases tensor info. Shared biases supported. Biases are 1D tensor with dimensions [OFM]. Data type supported: Same as <code>src</code>, except for src of QASYMM8/QASYMM8_SIGNED type where biases should be of S32 type. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst</td><td>Destination tensor info. 3 lower dimensions represent a single dst [width, height, OFM], while the rest represent batch of dsts. Data types supported: Same as <code>src</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">conv2d_info</td><td>Contains convolution 2d info described in <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights_info</td><td>Specifies if the weights tensor has been reshaped with CLWeightsReshapeKernel. Data type supported: Same as <code>src</code>. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00080">80</a> of file <a class="el" href="_cl_conv2d_8cpp_source.xhtml">ClConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a53a240b0b5f4bbdf834daad6a47e33de">ClConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, ((biases != <span class="keyword">nullptr</span>) ? biases : <span class="keyword">nullptr</span>), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>));</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">switch</span> (<a class="code" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a59b06b73d45fe58ae6e5ed2185251994">ClConv2d::get_convolution_method</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().target()))</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">ConvolutionMethod::WINOGRAD</a>:</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(conv2d_info.num_groups != 1);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keyword">auto</span> f = std::make_unique&lt;ClWinogradConv2d&gt;();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            f-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info.conv_info, conv2d_info.act_info,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                         conv2d_info.enable_fast_math);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            _operator = std::move(f);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>:</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(conv2d_info.num_groups != 1);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keyword">auto</span> f = std::make_unique&lt;ClDirectConv2d&gt;();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            f-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info.conv_info, conv2d_info.act_info);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            _operator = std::move(f);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da55e8f99cd4149c397fc50a5d1c86bd06">ConvolutionMethod::INDIRECT</a>:</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(conv2d_info.num_groups != 1);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keyword">auto</span> f = std::make_unique&lt;ClIndirectConv2d&gt;();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            f-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info.conv_info, conv2d_info.act_info);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            _operator = std::move(f);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>:</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keyword">auto</span> f = std::make_unique&lt;ClGemmConv2d&gt;();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            f-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            _operator = std::move(f);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported.&quot;</span>);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    _aux_mem = _operator-&gt;workspace();</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_conv2d_xhtml_a53a240b0b5f4bbdf834daad6a47e33de"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a53a240b0b5f4bbdf834daad6a47e33de">arm_compute::opencl::ClConv2d::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *dst, const Conv2dInfo &amp;conv2d_info, const WeightsInfo &amp;weights_info=WeightsInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of ClConv2d.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_conv2d_8cpp_source.xhtml#l00134">ClConv2d.cpp:134</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_conv2d_xhtml_a59b06b73d45fe58ae6e5ed2185251994"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a59b06b73d45fe58ae6e5ed2185251994">arm_compute::opencl::ClConv2d::get_convolution_method</a></div><div class="ttdeci">static ConvolutionMethod get_convolution_method(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *dst, const Conv2dInfo &amp;conv2d_info, const WeightsInfo &amp;weights_info, const GPUTarget gpu_target)</div><div class="ttdoc">Static function to check if given info will return the convolution called by ClConv2d.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_conv2d_8cpp_source.xhtml#l00190">ClConv2d.cpp:190</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a7cb842ebfe255726066039853a4322f0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">arm_compute::test::validation::weights_info</a></div><div class="ttdeci">weights_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">BatchNormalizationLayer.cpp:165</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">arm_compute::ConvolutionMethod::DIRECT</a></div><div class="ttdeci">@ DIRECT</div><div class="ttdoc">Direct convolution.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">arm_compute::ConvolutionMethod::GEMM</a></div><div class="ttdeci">@ GEMM</div><div class="ttdoc">Convolution using GEMM.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da55e8f99cd4149c397fc50a5d1c86bd06"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da55e8f99cd4149c397fc50a5d1c86bd06">arm_compute::ConvolutionMethod::INDIRECT</a></div><div class="ttdeci">@ INDIRECT</div><div class="ttdoc">Indirect convolution.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">arm_compute::ConvolutionMethod::WINOGRAD</a></div><div class="ttdeci">@ WINOGRAD</div><div class="ttdoc">Convolution using Winograd.</div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00035">Log.h:35</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_function_descriptors_8h_source.xhtml#l00078">Conv2dInfo::act_info</a>, <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00035">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00076">Conv2dInfo::conv_info</a>, <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">arm_compute::DIRECT</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00079">Conv2dInfo::enable_fast_math</a>, <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">arm_compute::GEMM</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00190">ClConv2d::get_convolution_method()</a>, <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da55e8f99cd4149c397fc50a5d1c86bd06">arm_compute::INDIRECT</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00080">Conv2dInfo::num_groups</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00134">ClConv2d::validate()</a>, <a class="el" href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">arm_compute::test::validation::weights_info</a>, and <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">arm_compute::WINOGRAD</a>.</p>

</div>
</div>
<a id="a59b06b73d45fe58ae6e5ed2185251994"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59b06b73d45fe58ae6e5ed2185251994">&#9670;&nbsp;</a></span>get_convolution_method()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> get_convolution_method </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>conv2d_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>&#160;</td>
          <td class="paramname"><em>gpu_target</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will return the convolution called by <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Source tensor. 3 lower dimensions represent a single src [width, height, IFM], while every optional dimension from 4 and above represent a batch of srcs. Data types supported: QASYMM8/QASYMM8_SIGNED/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>Weights tensor. Weights are 4D tensor with dimensions [kernel_x, kernel_y, IFM, OFM]. Data type supported: Same as <code>src</code>, also could be QSYMM8_PER_CHANNEL if src is QASYMM8/QASYMM8_SIGNED. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst</td><td>Destination tensor. 3 lower dimensions represent a single dst [width, height, OFM], while the rest represent batch of dsts. Data types supported: Same as <code>src</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">conv2d_info</td><td>Contains convolution 2d info described in <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights_info</td><td>Specifies if the weights tensor has been reshaped with CLWeightsReshapeKernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">gpu_target</td><td>Specifies the <code>GPUTarget</code>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the Convolution Method Hint </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00190">190</a> of file <a class="el" href="_cl_conv2d_8cpp_source.xhtml">ClConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;{</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(weights);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keyword">const</span> PadStrideInfo       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>        = conv2d_info.conv_info;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keyword">const</span> ActivationLayerInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>         = conv2d_info.act_info;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keyword">const</span> Size2D              dilation         = conv2d_info.dilation;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordtype">bool</span>                      enable_fast_math = conv2d_info.enable_fast_math;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> idx_w = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> idx_h = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> idx_c = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="comment">/* Input spatial dims, kernel size, IFM/OFM, conv info*/</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keyword">using</span> ConvolutionConfiguration = std::tuple&lt;Size2D, Size2D, Size2D, PadStrideInfo, DataLayout&gt;;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">using</span> ConfigurationMethod      = std::pair&lt;ConvolutionConfiguration, ConvolutionMethod&gt;;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keyword">const</span> std::vector&lt;ConfigurationMethod&gt; known_configs = {</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="comment">// Alexnet</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(Size2D(27U, 27U), Size2D(5U, 5U), Size2D(48U, 128U),</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                                                     PadStrideInfo(1U, 1U, 2U, 2U), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                            <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>),</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="comment">// VGG16 / VGG19</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(Size2D(224U, 224U), Size2D(3U, 3U), Size2D(3U, 64U),</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                                     PadStrideInfo(1U, 1U, 1U, 1U), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                            <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>),</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="comment">// Mobilenet 224</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                Size2D(224U, 224U), Size2D(3U, 3U), Size2D(3U, 32U),</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                PadStrideInfo(2U, 2U, 0U, 1U, 0U, 1U, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                            <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>),</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="comment">// Mobilenet 160</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                Size2D(160U, 160U), Size2D(3U, 3U), Size2D(3U, 24U),</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                PadStrideInfo(2U, 2U, 0U, 1U, 0U, 1U, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                            <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>),</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="comment">// Mobilenet 224</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                                Size2D(224U, 224U), Size2D(3U, 3U), Size2D(3U, 32U),</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                                PadStrideInfo(2U, 2U, 0U, 1U, 0U, 1U, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>),</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                            <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>),</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="comment">// Mobilenet 160</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                                Size2D(160U, 160U), Size2D(3U, 3U), Size2D(3U, 24U),</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                PadStrideInfo(2U, 2U, 0U, 1U, 0U, 1U, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>),</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                            <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>),</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    };</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> find_config = [&amp;](ConfigurationMethod c)</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keyword">const</span> ConvolutionConfiguration config      = c.first;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keyword">const</span> PadStrideInfo            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>        = std::get&lt;3&gt;(config);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>               <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a> = std::get&lt;4&gt;(config);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">return</span> std::get&lt;0&gt;(config) == Size2D(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_w), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_h)) &amp;&amp;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;               std::get&lt;1&gt;(config) == Size2D(weights-&gt;dimension(idx_w), weights-&gt;dimension(idx_h)) &amp;&amp;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;               std::get&lt;2&gt;(config) == Size2D(weights-&gt;dimension(idx_c), weights-&gt;dimension(3)) &amp;&amp;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;               <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.pad_top() == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.pad_right() == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right() &amp;&amp;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;               <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.pad_bottom() == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom() &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.pad_left() == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() &amp;&amp;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;               <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.stride() == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.stride() &amp;&amp; (<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a> == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout());</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    };</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    std::vector&lt;ConfigurationMethod&gt;::const_iterator found;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordflow">if</span> ((found = std::find_if(known_configs.begin(), known_configs.end(), find_config)) != known_configs.end())</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keywordflow">return</span> (*found).second;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordflow">if</span> (dilation != Size2D(1U, 1U))</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout() == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <span class="comment">// SRGAN</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <span class="keywordflow">if</span> ((<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_h) &gt; 720U) &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(idx_h) &gt; 720U) &amp;&amp; (weights-&gt;dimension(idx_h) == 9) &amp;&amp;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() &lt; 3) &amp;&amp;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                (<a class="code" href="classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml#af75fb96d7925ed842af5e6e8c382b0ca">ClDirectConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)))</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            }</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">if</span> ((weights-&gt;dimension(idx_h) &gt; 5) &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_c) &gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(idx_c)) &amp;&amp;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                (<a class="code" href="classarm__compute_1_1_c_l_f_f_t_convolution_layer.xhtml#a1c5a3dc6ea10d1f68d76064b82b8b5c2">CLFFTConvolutionLayer::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>, enable_fast_math)))</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da86de502ad3fe05ceedaba87164d54d28">ConvolutionMethod::FFT</a>;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_c) &lt; 16)</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keywordflow">return</span> bool(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml#a3ee2324ec4d335b54cb7db85bb0505df">ClWinogradConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>, enable_fast_math))</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                       ? <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">ConvolutionMethod::WINOGRAD</a></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                       : <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        {</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">bool</span> is_direct_valid =</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                bool(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml#af75fb96d7925ed842af5e6e8c382b0ca">ClDirectConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>));</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">bool</span> is_wino_valid =</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                bool(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml#a3ee2324ec4d335b54cb7db85bb0505df">ClWinogradConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>, enable_fast_math));</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">size_t</span> kernel_sz_direct_conv_thr = get_direct_conv_kernel_threshold_nhwc(gpu_target);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="comment">// SRGAN case</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="keywordflow">if</span> ((<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_h) &gt; 720U) &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;dimension(idx_h) &gt; 720U) &amp;&amp; (weights-&gt;dimension(idx_h) == 9) &amp;&amp;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() &lt; 3) &amp;&amp; is_direct_valid)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            <span class="comment">// Floating-point case: GeMM/Direct/Winograd</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type()))</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                <span class="comment">// Get dst shape</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a> =</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                    <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">misc::shape_calculator::compute_deep_convolution_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, *weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>);</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span> is_large_kernel_sz = (weights-&gt;dimension(idx_w) &gt;= kernel_sz_direct_conv_thr) &amp;&amp;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                                                (weights-&gt;dimension(idx_h) &gt;= kernel_sz_direct_conv_thr);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span> is_ifm_ge_8       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_c) &gt;= 8;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span> is_ifm_ge_16      = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_c) &gt;= 16;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span> is_ofm_lte_8      = weights-&gt;dimension(3U) &lt;= 8;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span> is_ofm_lt_64      = weights-&gt;dimension(3U) &lt; 64;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span> workload_gte_8192 = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>[0] * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>[1] * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>[2]) / 16 &gt;= 8192;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span> is_ifm_gt_ofm     = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;dimension(idx_c) &gt; weights-&gt;dimension(3U);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span> is_m_one          = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>[1] * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>[2] == 1;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span> is_unit_stride =</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                    (conv2d_info.conv_info.stride().first == 1) &amp;&amp; (conv2d_info.conv_info.stride().second == 1);</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                <span class="keyword">const</span> int32_t kernel_sz = weights-&gt;dimension(idx_w) * weights-&gt;dimension(idx_h);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                <span class="comment">// Run Winograd if valid and IFM &gt;= 8</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="keywordflow">if</span> (is_wino_valid &amp;&amp; is_ifm_ge_8)</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                    <span class="keywordflow">if</span> (is_ofm_lte_8)</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                    {</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                        <span class="keywordflow">if</span> (gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">arm_compute::GPUTarget::G71</a> || gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3ab2ac2aea42c95ccc70260ceeb02ec4fc">arm_compute::GPUTarget::G72</a> ||</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                            <a class="code" href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">get_arch_from_target</a>(gpu_target) == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a>)</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                        {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">ConvolutionMethod::WINOGRAD</a>;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                        }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                    }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                    {</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">ConvolutionMethod::WINOGRAD</a>;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                    }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                }</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160; </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                <span class="comment">// Direct convolution case</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                <span class="keywordflow">if</span> (is_direct_valid)</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                    <span class="keywordflow">if</span> ((gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">arm_compute::GPUTarget::G71</a> || gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3ab2ac2aea42c95ccc70260ceeb02ec4fc">arm_compute::GPUTarget::G72</a> ||</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                         <a class="code" href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">get_arch_from_target</a>(gpu_target) == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a>))</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                    {</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                        <span class="keywordflow">if</span> (is_large_kernel_sz &amp;&amp; is_ifm_ge_16 &amp;&amp; is_ifm_gt_ofm)</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                        {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                        }</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                    }</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa46ce37da51477a1af33a8810e0ed04d">arm_compute::GPUTarget::G76</a>)</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                    {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                        <span class="keywordflow">if</span> ((is_large_kernel_sz &amp;&amp; workload_gte_8192 &amp;&amp; is_ifm_ge_16) || (is_ofm_lte_8 &amp;&amp; is_ifm_ge_16))</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                        {</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                        }</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                    }</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                    {</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> preferred_conv_method = <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">bool</span> is_indirect_valid =</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                            bool(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml#af75fb96d7925ed842af5e6e8c382b0ca">ClIndirectConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>));</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160; </div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                        <span class="comment">// indirect conv2d should be called when:</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                        <span class="comment">// 1- When the kernel size is greater than 1x1 and less than or equal to 9x9 (81)</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                        <span class="comment">// 2- When the kernel size is odd</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                        <span class="comment">// 3- When the Gpu target is Arm Mali-G77</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                        <span class="keywordflow">if</span> (is_indirect_valid)</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                        {</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">bool</span> is_kernel_sz_odd = kernel_sz % 2;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">bool</span> is_g77           = gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a8e081b1cdec7bc064a67f31560ef7fe0">GPUTarget::G77</a>;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                            preferred_conv_method = (kernel_sz &gt; 1) &amp;&amp; (kernel_sz &lt;= 81) &amp;&amp; is_kernel_sz_odd &amp;&amp; is_g77</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                                                        ? <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da55e8f99cd4149c397fc50a5d1c86bd06">ConvolutionMethod::INDIRECT</a></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                                                        : <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                        }</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160; </div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                        <span class="comment">// Direct/indirect convolution used for the first layer of the network</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                        <span class="keywordflow">if</span> (workload_gte_8192 &amp;&amp; !is_ifm_ge_16 &amp;&amp; !is_unit_stride &amp;&amp; is_ofm_lt_64)</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                        {</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                            <span class="comment">// In general, the question we should ask for the first convolution layer of a model is:</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                            <span class="comment">// when the execution time of im2col + gemm &lt; direct?. Since im2col does not depend on the OFM, it means that</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                            <span class="comment">// when OFM is big enough, the contribution of im2col is small and the GEMM approach is preferable.</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                            <span class="comment">// From internal experiments, the OFM threshold is 64 (is_ofm_lt_64)</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                            <span class="keywordflow">return</span> preferred_conv_method;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                        }</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160; </div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                        <span class="keywordflow">if</span> ((is_large_kernel_sz || is_m_one) &amp;&amp; workload_gte_8192 &amp;&amp; is_ifm_ge_16)</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                        {</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                            <span class="keywordflow">return</span> preferred_conv_method;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                        }</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                        <span class="comment">// Direct convolution used for the last layer of the network</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                        <span class="keywordflow">if</span> (is_ofm_lte_8)</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                        {</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                            <span class="keywordflow">return</span> preferred_conv_method;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                        }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                    }</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                }</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160; </div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                <span class="comment">// Default case</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160; </div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="comment">// Generic case for quantized. Only GeMM</span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        }</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_f_f_t_convolution_layer_xhtml_a1c5a3dc6ea10d1f68d76064b82b8b5c2"><div class="ttname"><a href="classarm__compute_1_1_c_l_f_f_t_convolution_layer.xhtml#a1c5a3dc6ea10d1f68d76064b82b8b5c2">arm_compute::CLFFTConvolutionLayer::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *output, const PadStrideInfo &amp;conv_info, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo(), bool enable_fast_math=false)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLFFTConvolutionLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00294">CLFFTConvolutionLayer.cpp:294</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_direct_conv2d_xhtml_af75fb96d7925ed842af5e6e8c382b0ca"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml#af75fb96d7925ed842af5e6e8c382b0ca">arm_compute::opencl::ClDirectConv2d::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *dst, const PadStrideInfo &amp;conv_info, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_conv2d_8cpp_source.xhtml#l00114">ClDirectConv2d.cpp:114</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_indirect_conv2d_xhtml_af75fb96d7925ed842af5e6e8c382b0ca"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml#af75fb96d7925ed842af5e6e8c382b0ca">arm_compute::opencl::ClIndirectConv2d::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *dst, const PadStrideInfo &amp;conv_info, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_indirect_conv2d_8cpp_source.xhtml#l00098">ClIndirectConv2d.cpp:98</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_winograd_conv2d_xhtml_a3ee2324ec4d335b54cb7db85bb0505df"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml#a3ee2324ec4d335b54cb7db85bb0505df">arm_compute::opencl::ClWinogradConv2d::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *dst, const PadStrideInfo &amp;conv_info, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo(), bool enable_fast_math=false)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_winograd_conv2d_8cpp_source.xhtml#l00245">ClWinogradConv2d.cpp:245</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a443d09c5e20d13e6f4063d0f60616fb5"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">arm_compute::cpu::data_layout</a></div><div class="ttdeci">constexpr auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00036">impl.h:36</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_ac93cc76b563b366f030b8310a46046c3"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">arm_compute::misc::shape_calculator::compute_deep_convolution_shape</a></div><div class="ttdeci">TensorShape compute_deep_convolution_shape(const TensorShape &amp;input_shape, DataLayout input_data_layout, const TensorShape &amp;weights_shape, const PadStrideInfo &amp;conv_info)</div><div class="ttdoc">Calculate the deep convolution shape output shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00784">ShapeCalculator.h:784</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a00525ff582f16038a1d3819aa44a23a3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1f8aca235c095df227e7444f6b237eb1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">arm_compute::test::validation::act_info</a></div><div class="ttdeci">act_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aaae4098f0f54b97f23d99be335c459ad"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">TensorShape output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00469">LSTMLayerQuantized.cpp:469</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">arm_compute::DimensionRoundingType::FLOOR</a></div><div class="ttdeci">@ FLOOR</div><div class="ttdoc">Floor rounding.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a2355c2bf5d1950088937416baea24fe6"><div class="ttname"><a href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">arm_compute::get_arch_from_target</a></div><div class="ttdeci">GPUTarget get_arch_from_target(GPUTarget target)</div><div class="ttdoc">Helper function to get the GPU arch.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_g_p_u_target_8cpp_source.xhtml#l00247">GPUTarget.cpp:247</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517d"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">arm_compute::ConvolutionMethod</a></div><div class="ttdeci">ConvolutionMethod</div><div class="ttdoc">Available ConvolutionMethod.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00091">Types.h:92</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da86de502ad3fe05ceedaba87164d54d28"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da86de502ad3fe05ceedaba87164d54d28">arm_compute::ConvolutionMethod::FFT</a></div><div class="ttdeci">@ FFT</div><div class="ttdoc">Convolution using FFT.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">arm_compute::GPUTarget::G71</a></div><div class="ttdeci">@ G71</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a8e081b1cdec7bc064a67f31560ef7fe0"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a8e081b1cdec7bc064a67f31560ef7fe0">arm_compute::GPUTarget::G77</a></div><div class="ttdeci">@ G77</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3aa46ce37da51477a1af33a8810e0ed04d"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa46ce37da51477a1af33a8810e0ed04d">arm_compute::GPUTarget::G76</a></div><div class="ttdeci">@ G76</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3ab2ac2aea42c95ccc70260ceeb02ec4fc"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3ab2ac2aea42c95ccc70260ceeb02ec4fc">arm_compute::GPUTarget::G72</a></div><div class="ttdeci">@ G72</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a></div><div class="ttdeci">@ MIDGARD</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdeci">@ WIDTH</div><div class="ttdoc">width</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdeci">@ HEIGHT</div><div class="ttdoc">height</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdeci">@ CHANNEL</div><div class="ttdoc">channel</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00110">CoreTypes.h:111</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdeci">@ NCHW</div><div class="ttdoc">Num samples, channels, height, width.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdeci">@ NHWC</div><div class="ttdoc">Num samples, height, width, channels.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00201">Helpers.inl:201</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_af5982a092e9eb743fce2d6392bdd8897"><div class="ttname"><a href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">arm_compute::is_data_type_float</a></div><div class="ttdeci">bool is_data_type_float(DataType dt)</div><div class="ttdoc">Check if a given data type is of floating point type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00304">DataTypeUtils.h:304</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_function_descriptors_8h_source.xhtml#l00078">Conv2dInfo::act_info</a>, <a class="el" href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">arm_compute::test::validation::act_info</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::CHANNEL</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00784">arm_compute::misc::shape_calculator::compute_deep_convolution_shape()</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00076">Conv2dInfo::conv_info</a>, <a class="el" href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">arm_compute::test::validation::conv_info</a>, <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00036">arm_compute::cpu::data_layout</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00077">Conv2dInfo::dilation</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">arm_compute::DIRECT</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00079">Conv2dInfo::enable_fast_math</a>, <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da86de502ad3fe05ceedaba87164d54d28">arm_compute::FFT</a>, <a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">arm_compute::FLOOR</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">arm_compute::G71</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3ab2ac2aea42c95ccc70260ceeb02ec4fc">arm_compute::G72</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa46ce37da51477a1af33a8810e0ed04d">arm_compute::G76</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a8e081b1cdec7bc064a67f31560ef7fe0">arm_compute::G77</a>, <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">arm_compute::GEMM</a>, <a class="el" href="src_2core_2_g_p_u_target_8cpp_source.xhtml#l00247">arm_compute::get_arch_from_target()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00201">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::HEIGHT</a>, <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da55e8f99cd4149c397fc50a5d1c86bd06">arm_compute::INDIRECT</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="_data_type_utils_8h_source.xhtml#l00304">arm_compute::is_data_type_float()</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::MIDGARD</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::NCHW</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::NHWC</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00469">arm_compute::test::validation::output_shape</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, <a class="el" href="_core_types_8h_source.xhtml#l00192">PadStrideInfo::stride()</a>, <a class="el" href="_saturate_cast_8h_source.xhtml#l00065">arm_compute::utils::cast::U</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00294">CLFFTConvolutionLayer::validate()</a>, <a class="el" href="_cl_direct_conv2d_8cpp_source.xhtml#l00114">ClDirectConv2d::validate()</a>, <a class="el" href="_cl_indirect_conv2d_8cpp_source.xhtml#l00098">ClIndirectConv2d::validate()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00245">ClWinogradConv2d::validate()</a>, <a class="el" href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">arm_compute::test::validation::weights_info</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::WIDTH</a>, and <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">arm_compute::WINOGRAD</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00076">CLConvolutionLayer::configure()</a>, <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00080">ClConv2d::configure()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00179">CLConvolutionLayer::get_convolution_method()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00134">CLConvolutionLayer::validate()</a>, and <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00134">ClConv2d::validate()</a>.</p>

</div>
</div>
<a id="af3090e4b7d022d8cb1244f60f64e61ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3090e4b7d022d8cb1244f60f64e61ac">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move assignment operator. </p>

</div>
</div>
<a id="ab83fadfdbcf1b838aa5082d2a3dc155e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab83fadfdbcf1b838aa5082d2a3dc155e">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="af4d2c35e9fbc329b2e1b2acb864265aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4d2c35e9fbc329b2e1b2acb864265aa">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>constants</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepare the function for executing. </p>
<p>Any one off pre-processing step required by the function is handled here</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">constants</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> that contains the constants tensors.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Prepare stage might not need all the function's buffers' backing memory to be available in order to execute </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00422">422</a> of file <a class="el" href="_cl_conv2d_8cpp_source.xhtml">ClConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;{</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    _operator-&gt;prepare(tensors);</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00416">ClConv2d::run()</a>.</p>

</div>
</div>
<a id="a684a54d1fb1634a348a585c6b5e76df0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a684a54d1fb1634a348a585c6b5e76df0">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> that contains the tensors to operate on. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00416">416</a> of file <a class="el" href="_cl_conv2d_8cpp_source.xhtml">ClConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;{</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">prepare</a>(tensors);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    _operator-&gt;run(tensors);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;}</div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_conv2d_xhtml_af4d2c35e9fbc329b2e1b2acb864265aa"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">arm_compute::opencl::ClConv2d::prepare</a></div><div class="ttdeci">void prepare(ITensorPack &amp;tensors) override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_conv2d_8cpp_source.xhtml#l00422">ClConv2d.cpp:422</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00422">ClConv2d::prepare()</a>.</p>

</div>
</div>
<a id="a53a240b0b5f4bbdf834daad6a47e33de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53a240b0b5f4bbdf834daad6a47e33de">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>conv2d_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights_info</em> = <code><a class="el" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a>. </p>
<p>Similar to <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#ad8b49d9ec90794a4e3472ece1e34f74b" title="Set the src and dst tensors.">ClConv2d::configure()</a></p>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00134">134</a> of file <a class="el" href="_cl_conv2d_8cpp_source.xhtml">ClConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>((conv2d_info.num_groups != 1) &amp;&amp; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout() != <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                    <span class="stringliteral">&quot;Grouping (num_groups != 1) with NHWC data layout is not supported&quot;</span>);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>();</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">switch</span> (<a class="code" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a59b06b73d45fe58ae6e5ed2185251994">ClConv2d::get_convolution_method</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, gpu_target))</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">ConvolutionMethod::WINOGRAD</a>:</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="comment">//Validate Winograd</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(conv2d_info.num_groups != 1,</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                            <span class="stringliteral">&quot;Grouping (num_groups != 1) with ClWinogradConv2d is not supported&quot;</span>);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml#a3ee2324ec4d335b54cb7db85bb0505df">ClWinogradConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info.conv_info,</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                                                   conv2d_info.act_info, conv2d_info.enable_fast_math));</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>:</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="comment">// Validate direct convolution layer</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(conv2d_info.num_groups != 1,</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                            <span class="stringliteral">&quot;Grouping (num_groups != 1) with ClDirectConv2d is not supported&quot;</span>);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <a class="code" href="classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml#af75fb96d7925ed842af5e6e8c382b0ca">ClDirectConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info.conv_info, conv2d_info.act_info));</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da55e8f99cd4149c397fc50a5d1c86bd06">ConvolutionMethod::INDIRECT</a>:</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="comment">// Validate indirect convolution layer</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(conv2d_info.num_groups != 1,</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                                            <span class="stringliteral">&quot;Grouping (num_groups != 1) with ClIndirectConv2d is not supported&quot;</span>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <a class="code" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml#af75fb96d7925ed842af5e6e8c382b0ca">ClIndirectConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info.conv_info, conv2d_info.act_info));</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>:</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="comment">// Validate gemm-based convolution layer</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a14e5abb1362cd11fa6407ae2aaddc8e9">ClGemmConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, conv2d_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>));</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported.&quot;</span>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00245">Error.h:245</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00205">Error.h:205</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a27561688e2fc60176608ef725a4ecb30"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">arm_compute::CLScheduler::target</a></div><div class="ttdeci">GPUTarget target() const</div><div class="ttdoc">Get the target GPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00046">CLScheduler.cpp:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_gemm_conv2d_xhtml_a14e5abb1362cd11fa6407ae2aaddc8e9"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a14e5abb1362cd11fa6407ae2aaddc8e9">arm_compute::opencl::ClGemmConv2d::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *output, const Conv2dInfo &amp;conv2d_info, const WeightsInfo &amp;weights_info=WeightsInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_conv2d_8cpp_source.xhtml#l00379">ClGemmConv2d.cpp:379</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets.</div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:35</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_function_descriptors_8h_source.xhtml#l00078">Conv2dInfo::act_info</a>, <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00245">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00205">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00076">Conv2dInfo::conv_info</a>, <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">arm_compute::DIRECT</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00079">Conv2dInfo::enable_fast_math</a>, <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">arm_compute::GEMM</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00190">ClConv2d::get_convolution_method()</a>, <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da55e8f99cd4149c397fc50a5d1c86bd06">arm_compute::INDIRECT</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::NCHW</a>, <a class="el" href="_function_descriptors_8h_source.xhtml#l00080">Conv2dInfo::num_groups</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00046">CLScheduler::target()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00379">ClGemmConv2d::validate()</a>, <a class="el" href="_cl_direct_conv2d_8cpp_source.xhtml#l00114">ClDirectConv2d::validate()</a>, <a class="el" href="_cl_indirect_conv2d_8cpp_source.xhtml#l00098">ClIndirectConv2d::validate()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00245">ClWinogradConv2d::validate()</a>, <a class="el" href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">arm_compute::test::validation::weights_info</a>, and <a class="el" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">arm_compute::WINOGRAD</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00080">ClConv2d::configure()</a>, and <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00134">CLConvolutionLayer::validate()</a>.</p>

</div>
</div>
<a id="a74ae0d6e96f38fecd38471431786b870"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74ae0d6e96f38fecd38471431786b870">&#9670;&nbsp;</a></span>workspace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> workspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the memory requirements required by the workspace. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aea714e0b46ed9e9d14440dbc0ece4013">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00427">427</a> of file <a class="el" href="_cl_conv2d_8cpp_source.xhtml">ClConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;{</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keywordflow">return</span> _aux_mem;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gpu/cl/operators/<a class="el" href="_cl_conv2d_8h_source.xhtml">ClConv2d.h</a></li>
<li>src/gpu/cl/operators/<a class="el" href="_cl_conv2d_8cpp_source.xhtml">ClConv2d.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1opencl.xhtml">opencl</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml">ClConv2d</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:55 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
