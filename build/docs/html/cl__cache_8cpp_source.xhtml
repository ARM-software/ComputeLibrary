<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: examples/cl_cache.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('cl__cache_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">cl_cache.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cl__cache_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2020 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_open_c_l_8h.xhtml">arm_compute/core/CL/OpenCL.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="runtime_2_c_l_2_c_l_helpers_8h.xhtml">arm_compute/runtime/CL/CLHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_c_l_2functions_2_c_l_permute_8h.xhtml">arm_compute/runtime/CL/functions/CLPermute.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_c_l_2_utils_8h.xhtml">arm_compute/runtime/CL/Utils.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;utils/Utils.h&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">using namespace </span>utils;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">class </span>CLCacheExample : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1utils_1_1_example.xhtml">Example</a></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    CLCacheExample() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordtype">bool</span> do_setup(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)<span class="keyword"> override</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Once the program has run and created the file cache.bin, rerun with --restore_cache.&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                  &lt;&lt; std::endl;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a56d8f451f6b30093a49f1b4978681b07">default_init</a>();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">if</span> (argc &gt; 1)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            std::string argv1 = argv[1];</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            std::transform(argv1.begin(), argv1.end(), argv1.begin(), ::<a class="code" href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">tolower</a>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">if</span> (argv1 == <span class="stringliteral">&quot;--restore_cache&quot;</span>)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                <span class="comment">// Load the precompiled kernels from a file into the kernel library, in this way the next time they are needed</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                <span class="comment">// compilation won&#39;t be required.</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#ac7ed63ed26f02dfeddba85858fad6ada">restore_program_cache_from_file</a>();</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                std::cout &lt;&lt; <span class="stringliteral">&quot;Unkown option &quot;</span> &lt;&lt; argv1 &lt;&lt; std::endl;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="comment">// Initialise shapes</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        init_tensor(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(8U, 4U, 2U), tensor_nchw, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        init_tensor(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(2U, 8U, 4U), tensor_nhwc, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        init_tensor(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(8U, 4U, 2U), tensor_nchw_result, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment">// Create the permutation vector to turn a NCHW tensor to NHWC.</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="comment">// The input tensor is NCHW, which means that the fastest changing coordinate is W=8U.</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="comment">// For permutation vectors the fastest changing coordinate is the one on the left too.</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="comment">// Each element in the permutation vector specifies a mapping from the source tensor to the destination one, thus if we</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="comment">// use 2U in the permutation vector&#39;s first element we are telling the function to move the channels to the fastest</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="comment">// changing coordinate in the destination tensor.</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">PermutationVector</a> vector_nchw_to_nhwc(2U, 0U, 1U);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        permute_nhwc.configure(&amp;tensor_nchw, &amp;tensor_nhwc, vector_nchw_to_nhwc);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="comment">// Allocate and fill tensors</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        tensor_nhwc.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        tensor_nchw.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(tensor_nchw);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="comment">// Demostrate autoconfigure for the output tensor</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">PermutationVector</a> vector_nhwc_to_nchw(1U, 2U, 0U);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        permute_nchw.configure(&amp;tensor_nhwc, &amp;tensor_nchw_result, vector_nhwc_to_nchw);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        tensor_nchw_result.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="comment">// Save the opencl kernels to a file</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a3a3405e0e787bc6d6298ff7a2d52e5e4">save_program_cache_to_file</a>();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">void</span> do_run()<span class="keyword"> override</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        permute_nhwc.run();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        permute_nchw.run();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">void</span> do_teardown()<span class="keyword"> override</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">void</span> validate_result(<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> &amp;reference, <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> &amp;result)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        reference.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        result.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> window;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        window.<a class="code" href="classarm__compute_1_1_window.xhtml#a14470b4cb59140a1b6ff3b8f16c89ab6">use_tensor_dimensions</a>(reference.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>());</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> it_ref(&amp;reference, window);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> it_res(&amp;result, window);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            window,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;) {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                assert(*<span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(it_ref.ptr()) ==</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                       *<span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(it_res.ptr()));</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            },</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            it_ref, it_res);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        reference.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        result.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> window;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        window.<a class="code" href="classarm__compute_1_1_window.xhtml#a14470b4cb59140a1b6ff3b8f16c89ab6">use_tensor_dimensions</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>());</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a>      it_tensor(&amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, window);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> val(0);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            window, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;) { *<span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(it_tensor.ptr()) = val++; },</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            it_tensor);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">void</span> init_tensor(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> layout)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, 1, <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>).<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59cb3ec4cae7835d0a0283be56ef789">set_data_layout</a>(layout));</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>  tensor_nchw{};</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>  tensor_nhwc{};</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>  tensor_nchw_result{};</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_permute.xhtml">CLPermute</a> permute_nhwc{};</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_permute.xhtml">CLPermute</a> permute_nchw{};</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;};</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">/** Main program creating an example that demostrates how to load precompiled kernels from a file.</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment"> * @param[in] argc Number of arguments</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"> * @param[in] argv Arguments</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="cl__cache_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">  155</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="cl__cache_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">return</span> utils::run_example&lt;CLCacheExample&gt;(argc, argv);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div>
<div class="ttc" id="a_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner.</div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="a_open_c_l_8h_xhtml"><div class="ttname"><a href="_open_c_l_8h.xhtml">OpenCL.h</a></div><div class="ttdoc">Wrapper to configure the Khronos OpenCL C++ header.</div></div>
<div class="ttc" id="aarm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="aarm__compute_2runtime_2_c_l_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_c_l_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="aarm__compute_2runtime_2_c_l_2functions_2_c_l_permute_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_c_l_2functions_2_c_l_permute_8h.xhtml">CLPermute.h</a></div></div>
<div class="ttc" id="acl__cache_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="cl__cache_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdoc">Main program creating an example that demostrates how to load precompiled kernels from a file.</div><div class="ttdef"><b>Definition:</b> <a href="cl__cache_8cpp_source.xhtml#l00155">cl_cache.cpp:155</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_permute_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_permute.xhtml">arm_compute::CLPermute</a></div><div class="ttdoc">Basic function to execute an opencl::kernels::ClPermuteKernel.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_c_l_2functions_2_c_l_permute_8h_source.xhtml#l00039">CLPermute.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a56d8f451f6b30093a49f1b4978681b07"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a56d8f451f6b30093a49f1b4978681b07">arm_compute::CLScheduler::default_init</a></div><div class="ttdeci">void default_init(ICLTuner *cl_tuner=nullptr, CLGEMMHeuristicsHandle *gemm_h=nullptr, CLBackendType cl_backend_type=CLBackendType::Native)</div><div class="ttdoc">Initialises the context and command queue used by the scheduler to default values and sets a default ...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00134">CLScheduler.cpp:134</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml">arm_compute::CLTensor</a></div><div class="ttdoc">Basic implementation of the OpenCL tensor interface.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml#l00041">CLTensor.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a14c53d2d17be6fa8a2c9861527c7b002"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">arm_compute::CLTensor::map</a></div><div class="ttdeci">void map(bool blocking=true)</div><div class="ttdoc">Enqueue a map operation of the allocated buffer.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00066">CLTensor.cpp:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a1ffeb3b5abb3d61f62b58a391816201c"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">arm_compute::CLTensor::unmap</a></div><div class="ttdeci">void unmap()</div><div class="ttdoc">Enqueue an unmap operation of the allocated and mapped buffer.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00071">CLTensor.cpp:71</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor's allocator.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_ad45f0c01a0713dfb6bd7232c7f396fc4"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">arm_compute::CLTensor::info</a></div><div class="ttdeci">TensorInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00041">CLTensor.cpp:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item.</div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_allocator_xhtml_af36143939a43fa124312e395975091ed"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">arm_compute::ITensorAllocator::init</a></div><div class="ttdeci">void init(const TensorInfo &amp;input, size_t alignment=0)</div><div class="ttdoc">Initialize a tensor based on the passed TensorInfo.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator.cpp:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_iterator_xhtml"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml">arm_compute::Iterator</a></div><div class="ttdoc">Iterator updated by execute_window_loop for each window element.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00046">Helpers.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_strides_xhtml"><div class="ttname"><a href="classarm__compute_1_1_strides.xhtml">arm_compute::Strides</a></div><div class="ttdoc">Strides of an item in bytes.</div><div class="ttdef"><b>Definition:</b> <a href="_strides_8h_source.xhtml#l00038">Strides.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00041">TensorInfo.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a269b19ce3f357ac65f41f9951906e38e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">arm_compute::TensorInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const override</div><div class="ttdoc">Size for each dimension of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00245">TensorInfo.h:245</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a14470b4cb59140a1b6ff3b8f16c89ab6"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a14470b4cb59140a1b6ff3b8f16c89ab6">arm_compute::Window::use_tensor_dimensions</a></div><div class="ttdeci">void use_tensor_dimensions(const TensorShape &amp;shape, size_t first_dimension=Window::DimX)</div><div class="ttdoc">Use the tensor's dimensions to fill the window dimensions.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00290">Window.inl:290</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_example_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_example.xhtml">arm_compute::utils::Example</a></div><div class="ttdoc">Abstract Example class.</div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00074">Utils.h:75</a></div></div>
<div class="ttc" id="agemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00261">gemm_interleaved.hpp:261</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00114">DFT.cpp:115</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a6a5eef7d8485a2b8c04bf9b4638a90e9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">arm_compute::test::validation::fill_tensor</a></div><div class="ttdeci">fill_tensor(input_to_input_weights, std::vector&lt; uint8_t &gt;{ 122, 130, 124, 134, 120, 122, 134, 134 })</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ae59cb3ec4cae7835d0a0283be56ef789"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59cb3ec4cae7835d0a0283be56ef789">arm_compute::test::validation::set_data_layout</a></div><div class="ttdeci">src_info set_data_layout(data_layout)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1utility_xhtml_abb96ad5c7071ec3a47ea5f07e817a636"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">arm_compute::utility::tolower</a></div><div class="ttdeci">std::string tolower(std::string string)</div><div class="ttdoc">Convert string to lower case.</div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00204">Utility.h:204</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:25</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a3a3405e0e787bc6d6298ff7a2d52e5e4"><div class="ttname"><a href="namespacearm__compute.xhtml#a3a3405e0e787bc6d6298ff7a2d52e5e4">arm_compute::save_program_cache_to_file</a></div><div class="ttdeci">void save_program_cache_to_file(const std::string &amp;filename=&quot;cache.bin&quot;)</div><div class="ttdoc">This function saves opencl kernels library to a file.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00073">Utils.cpp:73</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6c0dcc38187027dcb89cd9724bc5a823"><div class="ttname"><a href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;...iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00074">Helpers.inl:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ac7ed63ed26f02dfeddba85858fad6ada"><div class="ttname"><a href="namespacearm__compute.xhtml#ac7ed63ed26f02dfeddba85858fad6ada">arm_compute::restore_program_cache_from_file</a></div><div class="ttdeci">void restore_program_cache_from_file(const std::string &amp;filename=&quot;cache.bin&quot;)</div><div class="ttdoc">This function loads prebuilt opencl kernels from a file.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00035">Utils.cpp:35</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00110">CoreTypes.h:111</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdeci">@ NCHW</div><div class="ttdoc">Num samples, channels, height, width.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdeci">@ NHWC</div><div class="ttdoc">Num samples, height, width, channels.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00083">CoreTypes.h:84</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::DataType::U8</a></div><div class="ttdeci">@ U8</div><div class="ttdoc">unsigned 8-bit number</div></div>
<div class="ttc" id="aruntime_2_c_l_2_c_l_helpers_8h_xhtml"><div class="ttname"><a href="runtime_2_c_l_2_c_l_helpers_8h.xhtml">CLHelpers.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="cl__cache_8cpp.xhtml">cl_cache.cpp</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:40 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
