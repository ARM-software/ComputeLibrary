<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ICLOperator Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ICLOperator Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic interface for functions which have a single async CL kernel.  
 <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2runtime_2_c_l_2_i_c_l_operator_8h_source.xhtml">ICLOperator.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ICLOperator:</div>
<div class="dyncontent">
<div class="center"><!-- SVG 0 -->
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac4ed47b6e86464a36585094de41f1bc4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#ac4ed47b6e86464a36585094de41f1bc4">ICLOperator</a> (<a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:ac4ed47b6e86464a36585094de41f1bc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#ac4ed47b6e86464a36585094de41f1bc4">More...</a><br /></td></tr>
<tr class="separator:ac4ed47b6e86464a36585094de41f1bc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a219a51d9e81ee889a97cf4fdceb70dca"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a219a51d9e81ee889a97cf4fdceb70dca">ICLOperator</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a219a51d9e81ee889a97cf4fdceb70dca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a219a51d9e81ee889a97cf4fdceb70dca">More...</a><br /></td></tr>
<tr class="separator:a219a51d9e81ee889a97cf4fdceb70dca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f9ec2decc6780c6fd9b67f3e9ef9e77"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a4f9ec2decc6780c6fd9b67f3e9ef9e77">ICLOperator</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4f9ec2decc6780c6fd9b67f3e9ef9e77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a4f9ec2decc6780c6fd9b67f3e9ef9e77">More...</a><br /></td></tr>
<tr class="separator:a4f9ec2decc6780c6fd9b67f3e9ef9e77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3acfe6ff0d707c408bd2d8a111e2a7c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a3acfe6ff0d707c408bd2d8a111e2a7c4">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a3acfe6ff0d707c408bd2d8a111e2a7c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a3acfe6ff0d707c408bd2d8a111e2a7c4">More...</a><br /></td></tr>
<tr class="separator:a3acfe6ff0d707c408bd2d8a111e2a7c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2f26be13d5bb74bf2ac7e8b3bd65b17"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#af2f26be13d5bb74bf2ac7e8b3bd65b17">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:af2f26be13d5bb74bf2ac7e8b3bd65b17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#af2f26be13d5bb74bf2ac7e8b3bd65b17">More...</a><br /></td></tr>
<tr class="separator:af2f26be13d5bb74bf2ac7e8b3bd65b17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684a54d1fb1634a348a585c6b5e76df0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">run</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) override</td></tr>
<tr class="memdesc:a684a54d1fb1634a348a585c6b5e76df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">More...</a><br /></td></tr>
<tr class="separator:a684a54d1fb1634a348a585c6b5e76df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;constants) override</td></tr>
<tr class="memdesc:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">More...</a><br /></td></tr>
<tr class="separator:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea714e0b46ed9e9d14440dbc0ece4013"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">MemoryRequirements</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aea714e0b46ed9e9d14440dbc0ece4013">workspace</a> () const override</td></tr>
<tr class="memdesc:aea714e0b46ed9e9d14440dbc0ece4013"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the memory requirements required by the workspace.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aea714e0b46ed9e9d14440dbc0ece4013">More...</a><br /></td></tr>
<tr class="separator:aea714e0b46ed9e9d14440dbc0ece4013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a></td></tr>
<tr class="memitem:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">~IOperator</a> ()=default</td></tr>
<tr class="memdesc:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">More...</a><br /></td></tr>
<tr class="separator:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic interface for functions which have a single async CL kernel. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2runtime_2_c_l_2_i_c_l_operator_8h_source.xhtml#l00040">40</a> of file <a class="el" href="arm__compute_2runtime_2_c_l_2_i_c_l_operator_8h_source.xhtml">ICLOperator.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac4ed47b6e86464a36585094de41f1bc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4ed47b6e86464a36585094de41f1bc4">&#9670;&nbsp;</a></span>ICLOperator() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *&#160;</td>
          <td class="paramname"><em>ctx</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>Runtime context to be used by the function </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_operator_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_c_l_operator_8cpp_source.xhtml">CLOperator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                                             : _kernel(), _ctx(ctx), _workspace()</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a219a51d9e81ee889a97cf4fdceb70dca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a219a51d9e81ee889a97cf4fdceb70dca">&#9670;&nbsp;</a></span>ICLOperator() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a4f9ec2decc6780c6fd9b67f3e9ef9e77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f9ec2decc6780c6fd9b67f3e9ef9e77">&#9670;&nbsp;</a></span>ICLOperator() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3acfe6ff0d707c408bd2d8a111e2a7c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3acfe6ff0d707c408bd2d8a111e2a7c4">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="af2f26be13d5bb74bf2ac7e8b3bd65b17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2f26be13d5bb74bf2ac7e8b3bd65b17">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move assignment operator. </p>

</div>
</div>
<a id="aff8f5e4223fd2a3020c8b252c8982d3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff8f5e4223fd2a3020c8b252c8982d3a">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>constants</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepare the function for executing. </p>
<p>Any one off pre-processing step required by the function is handled here</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">constants</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> that contains the constants tensors.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Prepare stage might not need all the function's buffers' backing memory to be available in order to execute </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a490892d69716b3d4a4aa83c5dd113f0c">IOperator</a>.</p>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">ClWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">ClFullyConnected</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">ClConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ClIndirectConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ClGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ClGemmConv2d</a>, and <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ClGemm</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_operator_8cpp_source.xhtml#l00047">47</a> of file <a class="el" href="_c_l_operator_8cpp_source.xhtml">CLOperator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(constants);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>.</p>

</div>
</div>
<a id="a684a54d1fb1634a348a585c6b5e76df0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a684a54d1fb1634a348a585c6b5e76df0">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> that contains the tensors to operate on. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8d7312410ad7314fa75c29b1ff0f17f0">IOperator</a>.</p>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator_init_output_with_zero_and_with_zero_constant_border.xhtml#a18386a2a07dd2120a3e143ec29066a7a">CLSynthetizeOperatorInitOutputWithZeroAndWithZeroConstantBorder&lt; K, bordersize &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_cl_synthetize_operator_with_border.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClSynthetizeOperatorWithBorder&lt; K &gt;</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_transposed_convolution.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClTransposedConvolution</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_softmax.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClSoftmax</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_scale.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClScale</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_quantize.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClQuantize</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_p_relu.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClPRelu</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_mat_mul.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClMatMul</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClIndirectConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_output_stage.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClGemmLowpOutputStage</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClGemmConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClGemm</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClFullyConnected</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_direct_conv3d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClDirectConv3d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClDirectConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_dequantize.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClDequantize</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClConv2d</a>, and <a class="el" href="classarm__compute_1_1opencl_1_1_cl_concatenate.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClConcatenate</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_operator_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_c_l_operator_8cpp_source.xhtml">CLOperator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">if</span> (tensors.empty())</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;No inputs provided&quot;</span>);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_kernel.get(), tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a5c0fc6f465cae029d60ffdfc7f3e99d9"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">arm_compute::CLScheduler::enqueue_op</a></div><div class="ttdeci">void enqueue_op(ICLKernel &amp;kernel, ITensorPack &amp;tensors, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00238">CLScheduler.cpp:238</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00079">ITensorPack::empty()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00238">CLScheduler::enqueue_op()</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_logical_and_8cpp_source.xhtml#l00053">CLLogicalAnd::run()</a>, <a class="el" href="_c_l_logical_or_8cpp_source.xhtml#l00053">CLLogicalOr::run()</a>, <a class="el" href="_cl_p_relu_8cpp_source.xhtml#l00050">ClPRelu::run()</a>, and <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00108">CLSynthetizeOperatorInitOutputWithZeroAndWithZeroConstantBorder&lt; K, bordersize &gt;::run()</a>.</p>

</div>
</div>
<a id="aea714e0b46ed9e9d14440dbc0ece4013"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea714e0b46ed9e9d14440dbc0ece4013">&#9670;&nbsp;</a></span>workspace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">MemoryRequirements</a> workspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the memory requirements required by the workspace. </p>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8ef96ccfabfca0faf4c3914c85bc4786">IOperator</a>.</p>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">ClWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_softmax.xhtml#a74ae0d6e96f38fecd38471431786b870">ClSoftmax</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">ClIndirectConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a74ae0d6e96f38fecd38471431786b870">ClGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">ClGemmConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a74ae0d6e96f38fecd38471431786b870">ClGemm</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a74ae0d6e96f38fecd38471431786b870">ClFullyConnected</a>, and <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">ClConv2d</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_operator_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="_c_l_operator_8cpp_source.xhtml">CLOperator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/<a class="el" href="arm__compute_2runtime_2_c_l_2_i_c_l_operator_8h_source.xhtml">ICLOperator.h</a></li>
<li>src/runtime/CL/<a class="el" href="_c_l_operator_8cpp_source.xhtml">CLOperator.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:54 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
