<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GpuOutput Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GpuOutput Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_gpu_output_8h_source.xhtml">GpuOutput.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a4c4b6f72d75bad45e832807ff12fba01"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">create_op</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;sketch, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst)</td></tr>
<tr class="memdesc:a4c4b6f72d75bad45e832807ff12fba01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an operator and fuse it into the workload sketch.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">More...</a><br /></td></tr>
<tr class="separator:a4c4b6f72d75bad45e832807ff12fba01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65ac94ca81d46b4c9098ccef5ccda6e1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a65ac94ca81d46b4c9098ccef5ccda6e1">is_supported_op</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> &amp;context, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst)</td></tr>
<tr class="memdesc:a65ac94ca81d46b4c9098ccef5ccda6e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the operator configuration is supported, irrespective of fusion.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a65ac94ca81d46b4c9098ccef5ccda6e1">More...</a><br /></td></tr>
<tr class="separator:a65ac94ca81d46b4c9098ccef5ccda6e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae17fde78fbdef146347b12085749a838"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#ae17fde78fbdef146347b12085749a838">validate_op</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;sketch, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst)</td></tr>
<tr class="memdesc:ae17fde78fbdef146347b12085749a838"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate the operator and check if the its configuration is supported and if it can be fused into the workload sketch.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#ae17fde78fbdef146347b12085749a838">More...</a><br /></td></tr>
<tr class="separator:ae17fde78fbdef146347b12085749a838"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_output_8h_source.xhtml#l00041">41</a> of file <a class="el" href="_gpu_output_8h_source.xhtml">GpuOutput.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a4c4b6f72d75bad45e832807ff12fba01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c4b6f72d75bad45e832807ff12fba01">&#9670;&nbsp;</a></span>create_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void create_op </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;&#160;</td>
          <td class="paramname"><em>sketch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create an operator and fuse it into the workload sketch. </p>
<dl class="section note"><dt>Note</dt><dd>If <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#ae17fde78fbdef146347b12085749a838">validate_op()</a> fails, the creation also fails and may throw an error. </dd>
<dd>
If <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#ae17fde78fbdef146347b12085749a838">validate_op()</a> fails, <code>sketch</code> remains unchanged and valid.</dd></dl>
<p>Valid data type configurations:</p><ul>
<li>Any</li>
</ul>
<p>Valid data layouts:</p><ul>
<li>Any</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">sketch</td><td>Workload sketch into which the operator will be fused. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">src</td><td>Source tensor info. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">dst</td><td>Destination tensor info. If an uninitialized <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" title="Store the tensor&#39;s metadata.">ITensorInfo</a> is passed in, it will be auto-initialized. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_gpu_output_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="_gpu_output_8cpp_source.xhtml">GpuOutput.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#ae17fde78fbdef146347b12085749a838">GpuOutput::validate_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>));</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="comment">// Auto initialize dst tensor info if empty</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">// Translate into components and add to component graph</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keyword">auto</span>      &amp;comp_graph = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">component_graph</a>();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> sketch_ctx = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a>();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span> (sketch_ctx-&gt;gpu_language() == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">GpuLanguage::OpenCL</a>)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(sketch_ctx-&gt;cl_compile_context() == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="comment">// Add store component</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a12747697b67a54dfad1bfb740b5a1482">IGpuKernelComponent::Properties</a> properties;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            properties.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties.xhtml#af875cbeaf800c014476b5f9aaa7dc9d9">stage</a>(UnitWorkloadStage{<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Stage::Run</a>});</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            ArgumentPack&lt;ITensorInfo&gt; arguments;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            comp_graph.add_new_component&lt;ClComponentStore&gt;(properties, arguments);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unimplemented Gpu language&quot;</span>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// Set up fusion test by adding to the Operator Group</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="comment">// Note this has to be performed after all the components have been successfully added to the component graph</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// Pack tensor infos</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    ArgumentPack&lt;ITensorInfo&gt; tensors;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf">Operator</a> op = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#ac3be1f04870ebf4c5fa052d5f77e0920">new_operator</a>(operator_type, tensors);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#a2395670f670bd1cad21fba418566f4d0">add_operator</a>(op, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group_xhtml_a2395670f670bd1cad21fba418566f4d0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#a2395670f670bd1cad21fba418566f4d0">arm_compute::experimental::dynamic_fusion::GpuOperatorGroup::add_operator</a></div><div class="ttdeci">void add_operator(const Operator &amp;op, bool is_output=false)</div><div class="ttdoc">Add an operator to the group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_operator_group_8cpp_source.xhtml#l00141">GpuOperatorGroup.cpp:141</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group_xhtml_ac3be1f04870ebf4c5fa052d5f77e0920"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#ac3be1f04870ebf4c5fa052d5f77e0920">arm_compute::experimental::dynamic_fusion::GpuOperatorGroup::new_operator</a></div><div class="ttdeci">Operator new_operator(const GpuOperatorType &amp;operator_type, const ArgumentPack&lt; ITensorInfo &gt; &amp;tensors) const</div><div class="ttdoc">Create a new operator.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_operator_group_8cpp_source.xhtml#l00149">GpuOperatorGroup.cpp:149</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output_xhtml_ae17fde78fbdef146347b12085749a838"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#ae17fde78fbdef146347b12085749a838">arm_compute::experimental::dynamic_fusion::GpuOutput::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *src, const ITensorInfo *dst)</div><div class="ttdoc">Validate the operator and check if the its configuration is supported and if it can be fused into the...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_output_8cpp_source.xhtml#l00060">GpuOutput.cpp:60</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a53a99846286646c8e36726c50407b5c3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::component_graph</a></div><div class="ttdeci">const GpuKernelComponentGraph &amp; component_graph() const</div><div class="ttdoc">Get component graph.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00072">GpuWorkloadSketchImpl.h:72</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_aeca25ed142be5cb241f375c6f79638e0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::operator_group</a></div><div class="ttdeci">const GpuOperatorGroup &amp; operator_group() const</div><div class="ttdoc">Get operator group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00082">GpuWorkloadSketchImpl.h:82</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_af5d6e63adc08ff38e747e2884d4f4cef"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::context</a></div><div class="ttdeci">const Context * context() const</div><div class="ttdoc">Get workload context.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00062">GpuWorkloadSketchImpl.h:62</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_xhtml_abe25a6a4a6183b083d1c6771269ced41"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::implementation</a></div><div class="ttdeci">Implementation &amp; implementation()</div><div class="ttdoc">Get the implementation.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_8cpp_source.xhtml#l00057">GpuWorkloadSketch.cpp:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component_xhtml_a12747697b67a54dfad1bfb740b5a1482"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a12747697b67a54dfad1bfb740b5a1482">arm_compute::experimental::dynamic_fusion::IGpuKernelComponent::Properties</a></div><div class="ttdeci">KernelProperties Properties</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_component_8h_source.xhtml#l00070">IGpuKernelComponent.h:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties_xhtml_af875cbeaf800c014476b5f9aaa7dc9d9"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties.xhtml#af875cbeaf800c014476b5f9aaa7dc9d9">arm_compute::experimental::dynamic_fusion::KernelProperties::stage</a></div><div class="ttdeci">KernelProperties &amp; stage(const UnitWorkloadStage &amp;stage)</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_component_8h_source.xhtml#l00042">IGpuKernelComponent.h:42</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf">arm_compute::detail::ObjectType::Operator</a></div><div class="ttdeci">@ Operator</div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">arm_compute::experimental::dynamic_fusion::GpuLanguage::OpenCL</a></div><div class="ttdeci">@ OpenCL</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf7ec1cdc18b3461c0a44ceb3b73801c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">arm_compute::test::validation::sketch</a></div><div class="ttdeci">GpuWorkloadSketch sketch</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00168">DirectConv2d.cpp:168</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdeci">@ ACL_DST_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a37c28ce239ce7092298245ce59694917"><div class="ttname"><a href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00043">AutoConfiguration.h:43</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00035">Log.h:35</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::Stage::Run</a></div><div class="ttdeci">@ Run</div><div class="ttdoc">Run every time after the first time.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">arm_compute::ACL_DST_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">arm_compute::ACL_SRC_0</a>, <a class="el" href="_argument_pack_8h_source.xhtml#l00108">ArgumentPack&lt; T &gt;::add_const_tensor()</a>, <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00141">GpuOperatorGroup::add_operator()</a>, <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00035">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="_auto_configuration_8h_source.xhtml#l00043">arm_compute::auto_init_if_empty()</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00072">GpuWorkloadSketch::Implementation::component_graph()</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00062">GpuWorkloadSketch::Implementation::context()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_gpu_workload_sketch_8cpp_source.xhtml#l00057">GpuWorkloadSketch::implementation()</a>, <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00149">GpuOperatorGroup::new_operator()</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">arm_compute::experimental::dynamic_fusion::OpenCL</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00082">GpuWorkloadSketch::Implementation::operator_group()</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Run</a>, <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00168">arm_compute::test::validation::sketch</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, <a class="el" href="_i_gpu_kernel_component_8h_source.xhtml#l00042">KernelProperties::stage()</a>, and <a class="el" href="_gpu_output_8cpp_source.xhtml#l00060">GpuOutput::validate_op()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_integration_8cpp_source.xhtml#l00067">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a65ac94ca81d46b4c9098ccef5ccda6e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65ac94ca81d46b4c9098ccef5ccda6e1">&#9670;&nbsp;</a></span>is_supported_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> is_supported_op </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the operator configuration is supported, irrespective of fusion. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Workload context within which the operator is running. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Source tensor info. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst</td><td>Destination tensor info.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class.">Status</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_output_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_gpu_output_8cpp_source.xhtml">GpuOutput.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// Initialize the destination tensor info.</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    TensorInfo dst_to_validate = *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(dst_to_validate, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;dst_to_validate);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;dst_to_validate);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a27e4638546c88b8916f967e6e54480a9"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00574">Validate.h:574</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">Validate.h:677</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00167">DirectConv2d.cpp:167</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00574">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, <a class="el" href="_auto_configuration_8h_source.xhtml#l00043">arm_compute::auto_init_if_empty()</a>, <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00167">arm_compute::test::validation::context</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, and <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_output_8cpp_source.xhtml#l00060">GpuOutput::validate_op()</a>.</p>

</div>
</div>
<a id="ae17fde78fbdef146347b12085749a838"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae17fde78fbdef146347b12085749a838">&#9670;&nbsp;</a></span>validate_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate_op </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;&#160;</td>
          <td class="paramname"><em>sketch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Validate the operator and check if the its configuration is supported and if it can be fused into the workload sketch. </p>
<p>Parameters are similar to <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">GpuOutput::create_op()</a>.</p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class.">Status</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_output_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="_gpu_output_8cpp_source.xhtml">GpuOutput.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(!<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;has_valid_id());</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(!<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a118248edb8d3a4911bc101671512856b">is_alloc_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>));</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">// Initialize the destination tensor info.</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    TensorInfo dst_to_validate = *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(dst_to_validate, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;dst_to_validate);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;dst_to_validate);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// Perform fusion test.</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    ArgumentPack&lt;ITensorInfo&gt; tensors;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, &amp;dst_to_validate);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> group   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#abe25a6a4a6183b083d1c6771269ced41">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>();</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op      = group.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#ac3be1f04870ebf4c5fa052d5f77e0920">new_operator</a>(operator_type, tensors);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> success = group.try_add_operator(op, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(!success, <span class="stringliteral">&quot;This operator cannot be fused into the workload.&quot;</span>);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> status = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a65ac94ca81d46b4c9098ccef5ccda6e1">is_supported_op</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a84bbb323392f1211944a9c32066a1d7f">gpu_context</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> status;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00245">Error.h:245</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00298">Error.h:298</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output_xhtml_a65ac94ca81d46b4c9098ccef5ccda6e1"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a65ac94ca81d46b4c9098ccef5ccda6e1">arm_compute::experimental::dynamic_fusion::GpuOutput::is_supported_op</a></div><div class="ttdeci">static Status is_supported_op(const GpuWorkloadContext &amp;context, const ITensorInfo *src, const ITensorInfo *dst)</div><div class="ttdoc">Check if the operator configuration is supported, irrespective of fusion.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_output_8cpp_source.xhtml#l00045">GpuOutput.cpp:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_xhtml_a84bbb323392f1211944a9c32066a1d7f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a84bbb323392f1211944a9c32066a1d7f">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::gpu_context</a></div><div class="ttdeci">const GpuWorkloadContext * gpu_context() const</div><div class="ttdoc">Get the gpu workload context of this sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_8cpp_source.xhtml#l00047">GpuWorkloadSketch.cpp:47</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a118248edb8d3a4911bc101671512856b"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a118248edb8d3a4911bc101671512856b">arm_compute::experimental::dynamic_fusion::is_alloc_tensor</a></div><div class="ttdeci">bool is_alloc_tensor(const ITensorInfo *tensor_info)</div><div class="ttdoc">Tensor should have backing memory.</div><div class="ttdef"><b>Definition:</b> <a href="src_2dynamic__fusion_2utils_2_utils_8h_source.xhtml#l00038">Utils.h:38</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">arm_compute::ACL_DST_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">arm_compute::ACL_SRC_0</a>, <a class="el" href="_argument_pack_8h_source.xhtml#l00108">ArgumentPack&lt; T &gt;::add_const_tensor()</a>, <a class="el" href="_error_8h_source.xhtml#l00298">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00574">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>, <a class="el" href="_error_8h_source.xhtml#l00245">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_auto_configuration_8h_source.xhtml#l00043">arm_compute::auto_init_if_empty()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_gpu_workload_sketch_8cpp_source.xhtml#l00047">GpuWorkloadSketch::gpu_context()</a>, <a class="el" href="_gpu_workload_sketch_8cpp_source.xhtml#l00057">GpuWorkloadSketch::implementation()</a>, <a class="el" href="src_2dynamic__fusion_2utils_2_utils_8h_source.xhtml#l00038">arm_compute::experimental::dynamic_fusion::is_alloc_tensor()</a>, <a class="el" href="_gpu_output_8cpp_source.xhtml#l00045">GpuOutput::is_supported_op()</a>, <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00149">GpuOperatorGroup::new_operator()</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00082">GpuWorkloadSketch::Implementation::operator_group()</a>, <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00168">arm_compute::test::validation::sketch</a>, and <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_output_8cpp_source.xhtml#l00088">GpuOutput::create_op()</a>, and <a class="el" href="_integration_8cpp_source.xhtml#l00372">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/dynamic_fusion/sketch/gpu/operators/<a class="el" href="_gpu_output_8h_source.xhtml">GpuOutput.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/operators/<a class="el" href="_gpu_output_8cpp_source.xhtml">GpuOutput.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml">GpuOutput</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:54 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
