<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLSymbols Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_symbols.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">CLSymbols Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Class for loading OpenCL symbols.  
 <a href="classarm__compute_1_1_c_l_symbols.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a971c6dd013977aa4e08d1dba7608f18b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a971c6dd013977aa4e08d1dba7608f18b">CLSymbols</a> () noexcept(false)</td></tr>
<tr class="memdesc:a971c6dd013977aa4e08d1dba7608f18b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1_c_l_symbols.xhtml#a971c6dd013977aa4e08d1dba7608f18b">More...</a><br /></td></tr>
<tr class="separator:a971c6dd013977aa4e08d1dba7608f18b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e0acc4ac5f76aae0e86ccea551e85ca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a2e0acc4ac5f76aae0e86ccea551e85ca">load_symbols</a> (void *handle)</td></tr>
<tr class="memdesc:a2e0acc4ac5f76aae0e86ccea551e85ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load OpenCL symbols from handle.  <a href="classarm__compute_1_1_c_l_symbols.xhtml#a2e0acc4ac5f76aae0e86ccea551e85ca">More...</a><br /></td></tr>
<tr class="separator:a2e0acc4ac5f76aae0e86ccea551e85ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe4a1505aebd2ee667800f5e38414cd5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#abe4a1505aebd2ee667800f5e38414cd5">load</a> (const std::vector&lt; std::string &gt; &amp;libraries_filenames, bool use_loader=false)</td></tr>
<tr class="memdesc:abe4a1505aebd2ee667800f5e38414cd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method attempts to load the OpenCL symbols from the first available library from the provided OpenCL libraries.  <a href="classarm__compute_1_1_c_l_symbols.xhtml#abe4a1505aebd2ee667800f5e38414cd5">More...</a><br /></td></tr>
<tr class="separator:abe4a1505aebd2ee667800f5e38414cd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d9b5b93ad5e6018700fa36de6e1e279"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a7d9b5b93ad5e6018700fa36de6e1e279">load_default</a> ()</td></tr>
<tr class="memdesc:a7d9b5b93ad5e6018700fa36de6e1e279"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load symbols from any of the default OpenCL library names.  <a href="classarm__compute_1_1_c_l_symbols.xhtml#a7d9b5b93ad5e6018700fa36de6e1e279">More...</a><br /></td></tr>
<tr class="separator:a7d9b5b93ad5e6018700fa36de6e1e279"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac3d2ed16df8334b183d76d8a82dbf70f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml">CLSymbols</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ac3d2ed16df8334b183d76d8a82dbf70f">get</a> ()</td></tr>
<tr class="memdesc:ac3d2ed16df8334b183d76d8a82dbf70f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the static instance of <a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml" title="Class for loading OpenCL symbols.">CLSymbols</a>.  <a href="classarm__compute_1_1_c_l_symbols.xhtml#ac3d2ed16df8334b183d76d8a82dbf70f">More...</a><br /></td></tr>
<tr class="separator:ac3d2ed16df8334b183d76d8a82dbf70f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a14a1465f79e3703561c9ee0723276603"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#abdcf0f1bbd28eb23c756f32e005e3846">clCreateContext</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a14a1465f79e3703561c9ee0723276603">clCreateContext_ptr</a> = nullptr</td></tr>
<tr class="separator:a14a1465f79e3703561c9ee0723276603"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af60dbcf4d37ee4dd2c34cfbf08e64671"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a298a4a3082936de672185fe3cc9b992b">clCreateContextFromType</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#af60dbcf4d37ee4dd2c34cfbf08e64671">clCreateContextFromType_ptr</a> = nullptr</td></tr>
<tr class="separator:af60dbcf4d37ee4dd2c34cfbf08e64671"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9edd71637c165f39e1913b22bdafcd67"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ac9707377cc9420fd03b16d76e831513a">clCreateCommandQueue</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a9edd71637c165f39e1913b22bdafcd67">clCreateCommandQueue_ptr</a> = nullptr</td></tr>
<tr class="separator:a9edd71637c165f39e1913b22bdafcd67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d6cb60b6d853a80a32aec236470883"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a2b2912c16aeb279ce55dc9c30968b906">clCreateCommandQueueWithProperties</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a75d6cb60b6d853a80a32aec236470883">clCreateCommandQueueWithProperties_ptr</a> = nullptr</td></tr>
<tr class="separator:a75d6cb60b6d853a80a32aec236470883"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3b351139d8ac903bfa75463903ef002"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a4bd1918b00ed6da1c8ed84bf4251f963">clGetContextInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ac3b351139d8ac903bfa75463903ef002">clGetContextInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:ac3b351139d8ac903bfa75463903ef002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad35af0d314615874e570540e9853668c"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ab17c2125daccf219d5ead2be2491e36e">clBuildProgram</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ad35af0d314615874e570540e9853668c">clBuildProgram_ptr</a> = nullptr</td></tr>
<tr class="separator:ad35af0d314615874e570540e9853668c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5c1d962dbe252b8d6a9a3414557d194"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a0152f4b089c26f22f032162d0b7a0d21">clEnqueueNDRangeKernel</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ab5c1d962dbe252b8d6a9a3414557d194">clEnqueueNDRangeKernel_ptr</a> = nullptr</td></tr>
<tr class="separator:ab5c1d962dbe252b8d6a9a3414557d194"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a021f5850b98ba79d84067e762b84aa52"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a3945f28bb1b23afb00a87801136271e9">clSetKernelArg</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a021f5850b98ba79d84067e762b84aa52">clSetKernelArg_ptr</a> = nullptr</td></tr>
<tr class="separator:a021f5850b98ba79d84067e762b84aa52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49d82b362ebf160e65d162d6c9de31b1"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a9533331a57797c4c4c4187900ff9ae51">clReleaseKernel</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a49d82b362ebf160e65d162d6c9de31b1">clReleaseKernel_ptr</a> = nullptr</td></tr>
<tr class="separator:a49d82b362ebf160e65d162d6c9de31b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62fb6450bf1c30cca66d6547348eee3c"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ae2ab434699c41d87099b48a774db0b9d">clCreateProgramWithSource</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a62fb6450bf1c30cca66d6547348eee3c">clCreateProgramWithSource_ptr</a> = nullptr</td></tr>
<tr class="separator:a62fb6450bf1c30cca66d6547348eee3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a301b84af701238b357de87434d0327a9"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#af9a973de9b75e338812149043568dc20">clCreateBuffer</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a301b84af701238b357de87434d0327a9">clCreateBuffer_ptr</a> = nullptr</td></tr>
<tr class="separator:a301b84af701238b357de87434d0327a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70f0c6b172261cc89e5d90239a8b70d0"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a617b60a00661fe3a03749b6b9913d006">clRetainKernel</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a70f0c6b172261cc89e5d90239a8b70d0">clRetainKernel_ptr</a> = nullptr</td></tr>
<tr class="separator:a70f0c6b172261cc89e5d90239a8b70d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02aff28f848c48e02fababe120a0df36"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a372df0ff626cb294bc21a8d75aef7240">clCreateKernel</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a02aff28f848c48e02fababe120a0df36">clCreateKernel_ptr</a> = nullptr</td></tr>
<tr class="separator:a02aff28f848c48e02fababe120a0df36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38787d16b9a4ccb79f11c9e807b31f39"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a9f71d4d10e82daea5e3dd62089dab424">clGetProgramInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a38787d16b9a4ccb79f11c9e807b31f39">clGetProgramInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:a38787d16b9a4ccb79f11c9e807b31f39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac88fa83ac520504fa6792d8c1e5296b6"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#acb9d0f5ac60336c8dac9a37e51f3cf47">clFlush</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ac88fa83ac520504fa6792d8c1e5296b6">clFlush_ptr</a> = nullptr</td></tr>
<tr class="separator:ac88fa83ac520504fa6792d8c1e5296b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31fd3504c695582b52ee2426dc71c1d7"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ac78e93d371eecbe98f00bdf965c98ed6">clFinish</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a31fd3504c695582b52ee2426dc71c1d7">clFinish_ptr</a> = nullptr</td></tr>
<tr class="separator:a31fd3504c695582b52ee2426dc71c1d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0462afdc2906b59dd0a860c84c8f3d8a"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ae32b736b7255a0549acfe221f83a3197">clReleaseProgram</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a0462afdc2906b59dd0a860c84c8f3d8a">clReleaseProgram_ptr</a> = nullptr</td></tr>
<tr class="separator:a0462afdc2906b59dd0a860c84c8f3d8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d3ddaa28e01b8d4aeef8a5a3ae05f16"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#abea285cf4c4715cd284f275725cd1508">clRetainContext</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a7d3ddaa28e01b8d4aeef8a5a3ae05f16">clRetainContext_ptr</a> = nullptr</td></tr>
<tr class="separator:a7d3ddaa28e01b8d4aeef8a5a3ae05f16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2263b6ca759bdfed0a0727d2b68db916"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a1425fcfd615cc990cdf8c311d520ad10">clCreateProgramWithBinary</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a2263b6ca759bdfed0a0727d2b68db916">clCreateProgramWithBinary_ptr</a> = nullptr</td></tr>
<tr class="separator:a2263b6ca759bdfed0a0727d2b68db916"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cc4ea7d2743d398a26055f062052762"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#abd209590ef4b1c99e256180ad77faecf">clReleaseCommandQueue</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a2cc4ea7d2743d398a26055f062052762">clReleaseCommandQueue_ptr</a> = nullptr</td></tr>
<tr class="separator:a2cc4ea7d2743d398a26055f062052762"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd0ba6c593ff83cb0c3d0e1b746f068a"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a9039d2fa3d129a08baa1c49abf2f07fb">clEnqueueMapBuffer</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#abd0ba6c593ff83cb0c3d0e1b746f068a">clEnqueueMapBuffer_ptr</a> = nullptr</td></tr>
<tr class="separator:abd0ba6c593ff83cb0c3d0e1b746f068a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9752599bfd3a28d9c34cfb59c8feaf3"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#aa0cc01b2f6b15bbab28eb38d6f29f184">clRetainProgram</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#aa9752599bfd3a28d9c34cfb59c8feaf3">clRetainProgram_ptr</a> = nullptr</td></tr>
<tr class="separator:aa9752599bfd3a28d9c34cfb59c8feaf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34391377f3991f0a88631cf1b05e3c8b"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a42eb427f73ef3e670fb570734341fd49">clGetProgramBuildInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a34391377f3991f0a88631cf1b05e3c8b">clGetProgramBuildInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:a34391377f3991f0a88631cf1b05e3c8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a114ecc5c7e99f380a84d33f32038dc27"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a0c6565be16b3326d2ccdab5339e0f7bf">clEnqueueReadBuffer</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a114ecc5c7e99f380a84d33f32038dc27">clEnqueueReadBuffer_ptr</a> = nullptr</td></tr>
<tr class="separator:a114ecc5c7e99f380a84d33f32038dc27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3085f45d872eda6b1adf8557fd4915b9"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a8301eaffd71b5aeae60dc9e3afdf8c9b">clEnqueueWriteBuffer</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a3085f45d872eda6b1adf8557fd4915b9">clEnqueueWriteBuffer_ptr</a> = nullptr</td></tr>
<tr class="separator:a3085f45d872eda6b1adf8557fd4915b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f72204edecff30764f23d06c4e4ae20"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a41eb8d025116f85cf2175e51c98d9fb6">clReleaseEvent</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a8f72204edecff30764f23d06c4e4ae20">clReleaseEvent_ptr</a> = nullptr</td></tr>
<tr class="separator:a8f72204edecff30764f23d06c4e4ae20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff1103110d2ad3e5fc2a8e0a746059b3"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a424af1d00f0ad1421da1bc0c2ccc9abe">clReleaseContext</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#aff1103110d2ad3e5fc2a8e0a746059b3">clReleaseContext_ptr</a> = nullptr</td></tr>
<tr class="separator:aff1103110d2ad3e5fc2a8e0a746059b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3777a685e4430d6dcdddd73531cc3cc3"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ae342be07c62cae5d870ff5796a599e75">clRetainCommandQueue</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a3777a685e4430d6dcdddd73531cc3cc3">clRetainCommandQueue_ptr</a> = nullptr</td></tr>
<tr class="separator:a3777a685e4430d6dcdddd73531cc3cc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab857577e126a171222277703b724639"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#af1ca0be4c120041eda74a4f1fc36c4a0">clEnqueueUnmapMemObject</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#aab857577e126a171222277703b724639">clEnqueueUnmapMemObject_ptr</a> = nullptr</td></tr>
<tr class="separator:aab857577e126a171222277703b724639"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7b31e7922544d4a6325320f08ad2474"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a2c88e252bef66c05807260b013a725de">clRetainMemObject</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ab7b31e7922544d4a6325320f08ad2474">clRetainMemObject_ptr</a> = nullptr</td></tr>
<tr class="separator:ab7b31e7922544d4a6325320f08ad2474"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9385d6637f840d613d72f35a389d1c64"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#aaa80bcf581a6eb2848468677b3f3cbd1">clReleaseMemObject</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a9385d6637f840d613d72f35a389d1c64">clReleaseMemObject_ptr</a> = nullptr</td></tr>
<tr class="separator:a9385d6637f840d613d72f35a389d1c64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6c28e45955ab8420512342ed6fa6934"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a677990334379f5f91619bfc43af63c4a">clGetDeviceInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ab6c28e45955ab8420512342ed6fa6934">clGetDeviceInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:ab6c28e45955ab8420512342ed6fa6934"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73ac5a70dfe6076f17a0b16d3a021daa"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ad61ef286586c4d20b47cc51a32839de1">clGetDeviceIDs</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a73ac5a70dfe6076f17a0b16d3a021daa">clGetDeviceIDs_ptr</a> = nullptr</td></tr>
<tr class="separator:a73ac5a70dfe6076f17a0b16d3a021daa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e85643ad6d7c35515d0e97b9b88e945"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a56cdb4214e0b6d66392cd0670f89e27d">clGetMemObjectInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a1e85643ad6d7c35515d0e97b9b88e945">clGetMemObjectInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:a1e85643ad6d7c35515d0e97b9b88e945"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96cfa134e391cec1fa131849b9dc6648"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a434f9e0998ebb096bf09a0a6abdd5938">clRetainEvent</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a96cfa134e391cec1fa131849b9dc6648">clRetainEvent_ptr</a> = nullptr</td></tr>
<tr class="separator:a96cfa134e391cec1fa131849b9dc6648"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f02bfc0684bc35eaa24e1357c9a1400"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#af4dc7264b57c52f10781d5e7d7bbed66">clGetPlatformInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a1f02bfc0684bc35eaa24e1357c9a1400">clGetPlatformInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:a1f02bfc0684bc35eaa24e1357c9a1400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa794227c46c954c6e6684d21af618b00"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a16acb36fde338eaff889484b213c953d">clGetPlatformIDs</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#aa794227c46c954c6e6684d21af618b00">clGetPlatformIDs_ptr</a> = nullptr</td></tr>
<tr class="separator:aa794227c46c954c6e6684d21af618b00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5bc2c92a538b212960c02f9cb480afe"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#acb69a828a88a01250d4765d9ac36637f">clGetKernelWorkGroupInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#aa5bc2c92a538b212960c02f9cb480afe">clGetKernelWorkGroupInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:aa5bc2c92a538b212960c02f9cb480afe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8709746b1a7fc8ac57ce61349332e866"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ad3379de4b5bac534f2e0197d0e53393b">clGetCommandQueueInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a8709746b1a7fc8ac57ce61349332e866">clGetCommandQueueInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:a8709746b1a7fc8ac57ce61349332e866"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b9fe21a9872e746fa811b916e4dd9bf"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#af547e92d5365c4a7cc5609814618289e">clGetKernelInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a7b9fe21a9872e746fa811b916e4dd9bf">clGetKernelInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:a7b9fe21a9872e746fa811b916e4dd9bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad5f68729eb6cc674fce0fd950c5b765"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a1203915fa89fa2ad0914bc8b83e1af81">clGetEventProfilingInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#aad5f68729eb6cc674fce0fd950c5b765">clGetEventProfilingInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:aad5f68729eb6cc674fce0fd950c5b765"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf58c6d99585520b40a396a890caa9ee"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a3f3b491b813e283ae79a756cb7ae84bd">clSVMAlloc</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#abf58c6d99585520b40a396a890caa9ee">clSVMAlloc_ptr</a> = nullptr</td></tr>
<tr class="separator:abf58c6d99585520b40a396a890caa9ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbd557acca5bc0f92a1a7f8ebc26e9ed"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a1412ab782ad4055d71dc9c5a7c4c11e4">clSVMFree</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#adbd557acca5bc0f92a1a7f8ebc26e9ed">clSVMFree_ptr</a> = nullptr</td></tr>
<tr class="separator:adbd557acca5bc0f92a1a7f8ebc26e9ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4a0c63c4f06c8d80788da461812bf4c"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a66cc3ae002a3eb6b7c70291ba3eac1b5">clEnqueueSVMMap</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ae4a0c63c4f06c8d80788da461812bf4c">clEnqueueSVMMap_ptr</a> = nullptr</td></tr>
<tr class="separator:ae4a0c63c4f06c8d80788da461812bf4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab30bda3641f8d1a73126884a9fd66a89"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#af15c1cf404e8af8057e176c967080fd4">clEnqueueSVMUnmap</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ab30bda3641f8d1a73126884a9fd66a89">clEnqueueSVMUnmap_ptr</a> = nullptr</td></tr>
<tr class="separator:ab30bda3641f8d1a73126884a9fd66a89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a527fd99779c605a2203158219f18e95f"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a43d9a36e38a16e503e0bbdc7b2f81f12">clEnqueueMarker</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a527fd99779c605a2203158219f18e95f">clEnqueueMarker_ptr</a> = nullptr</td></tr>
<tr class="separator:a527fd99779c605a2203158219f18e95f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fd1b20db02f6fb96562ddff20134a53"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ab01da83b3a9fcd7a69dda12cc721c8f8">clWaitForEvents</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a8fd1b20db02f6fb96562ddff20134a53">clWaitForEvents_ptr</a> = nullptr</td></tr>
<tr class="separator:a8fd1b20db02f6fb96562ddff20134a53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38dcfd5a3b3a0f7ab8e1f20e8d2fd01c"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#aa31e96a1fb21520f2e391b4f7f46f5a9">clCreateImage</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a38dcfd5a3b3a0f7ab8e1f20e8d2fd01c">clCreateImage_ptr</a> = nullptr</td></tr>
<tr class="separator:a38dcfd5a3b3a0f7ab8e1f20e8d2fd01c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad5fe0dac5f86adfdda65fcbc2fa7e92"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#aaf342694786e1e468c55431205f36ced">clSetKernelExecInfo</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#aad5fe0dac5f86adfdda65fcbc2fa7e92">clSetKernelExecInfo_ptr</a> = nullptr</td></tr>
<tr class="separator:aad5fe0dac5f86adfdda65fcbc2fa7e92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec13c31839836cb6a0536bebc759f00f"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ad33ef1ed0329715a73c83c42f5fd8dcf">clGetExtensionFunctionAddressForPlatform</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#aec13c31839836cb6a0536bebc759f00f">clGetExtensionFunctionAddressForPlatform_ptr</a> = nullptr</td></tr>
<tr class="separator:aec13c31839836cb6a0536bebc759f00f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67abaab41731ded5b40fa9904f8b8933"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ae4091b6ac9dd4388f5b95f320a0c85a8">clCreateCommandBufferKHR</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a67abaab41731ded5b40fa9904f8b8933">clCreateCommandBufferKHR_ptr</a> = nullptr</td></tr>
<tr class="separator:a67abaab41731ded5b40fa9904f8b8933"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace23e12e64ef551a85b0d0553e2c1999"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a945aa317a51cafa77b806560d1e0663e">clRetainCommandBufferKHR</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ace23e12e64ef551a85b0d0553e2c1999">clRetainCommandBufferKHR_ptr</a> = nullptr</td></tr>
<tr class="separator:ace23e12e64ef551a85b0d0553e2c1999"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb27fb628c843d3ccbcfbfeabd37149f"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#ad92270fbfad08428c9ed518170a8a74a">clReleaseCommandBufferKHR</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#adb27fb628c843d3ccbcfbfeabd37149f">clReleaseCommandBufferKHR_ptr</a> = nullptr</td></tr>
<tr class="separator:adb27fb628c843d3ccbcfbfeabd37149f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02f03aac7764b7a3c00575742ff08ca5"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a2eda66fd1833633bdc55e29686b7d454">clFinalizeCommandBufferKHR</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a02f03aac7764b7a3c00575742ff08ca5">clFinalizeCommandBufferKHR_ptr</a> = nullptr</td></tr>
<tr class="separator:a02f03aac7764b7a3c00575742ff08ca5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ebd8ce67e380ed10aac0d1bf885b70b"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#aabca83598a7d2f2db7aaa2d4b1cbd1a7">clEnqueueCommandBufferKHR</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a5ebd8ce67e380ed10aac0d1bf885b70b">clEnqueueCommandBufferKHR_ptr</a> = nullptr</td></tr>
<tr class="separator:a5ebd8ce67e380ed10aac0d1bf885b70b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c3bde47b40a28f4c4a5224eb1eb28e4"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#acdc4200f6df3ab658adb5b2b4c22f6ac">clCommandNDRangeKernelKHR</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a8c3bde47b40a28f4c4a5224eb1eb28e4">clCommandNDRangeKernelKHR_ptr</a> = nullptr</td></tr>
<tr class="separator:a8c3bde47b40a28f4c4a5224eb1eb28e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01ce159b1c9b568493a1bd4f98cd51eb"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a1384e99dd308097bc7a2edb202eb91a2">clUpdateMutableCommandsKHR</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#a01ce159b1c9b568493a1bd4f98cd51eb">clUpdateMutableCommandsKHR_ptr</a> = nullptr</td></tr>
<tr class="separator:a01ce159b1c9b568493a1bd4f98cd51eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac85382870c183f26f792e183ee80e38c"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(<a class="el" href="_open_c_l_8cpp.xhtml#a6ece3384ff9496363d68aeb376041aaf">clImportMemoryARM</a>)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml#ac85382870c183f26f792e183ee80e38c">clImportMemoryARM_ptr</a> = nullptr</td></tr>
<tr class="separator:ac85382870c183f26f792e183ee80e38c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Class for loading OpenCL symbols. </p>

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00061">61</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a971c6dd013977aa4e08d1dba7608f18b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a971c6dd013977aa4e08d1dba7608f18b">&#9670;&nbsp;</a></span>CLSymbols()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml">CLSymbols</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_open_c_l_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="_open_c_l_8cpp_source.xhtml">OpenCL.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                     : _loaded({<span class="keyword">false</span>, <span class="keyword">false</span>})</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac3d2ed16df8334b183d76d8a82dbf70f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3d2ed16df8334b183d76d8a82dbf70f">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml">CLSymbols</a> &amp; get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the static instance of <a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml" title="Class for loading OpenCL symbols.">CLSymbols</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>The static instance of <a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml" title="Class for loading OpenCL symbols.">CLSymbols</a>. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_open_c_l_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="_open_c_l_8cpp_source.xhtml">OpenCL.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#a971c6dd013977aa4e08d1dba7608f18b">CLSymbols</a> symbols;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">return</span> symbols;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml_a971c6dd013977aa4e08d1dba7608f18b"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml#a971c6dd013977aa4e08d1dba7608f18b">arm_compute::CLSymbols::CLSymbols</a></div><div class="ttdeci">CLSymbols() noexcept(false)</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00039">OpenCL.cpp:39</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00440">clBuildProgram()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01195">clCommandNDRangeKernelKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00835">clCreateBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01107">clCreateCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00369">clCreateCommandQueue()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00386">clCreateCommandQueueWithProperties()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00403">clCreateContext()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00422">clCreateContextFromType()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01056">clCreateImage()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00803">clCreateKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00705">clCreateProgramWithBinary()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00853">clCreateProgramWithSource()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01175">clEnqueueCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00663">clEnqueueMapBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00260">clEnqueueMarker()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00459">clEnqueueNDRangeKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00607">clEnqueueReadBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00288">clEnqueueSVMMap()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00309">clEnqueueSVMUnmap()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00524">clEnqueueUnmapMemObject()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00584">clEnqueueWriteBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01130">clFinalizeCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00771">clFinish()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00757">clFlush()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01002">clGetCommandQueueInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00351">clGetContextInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00886">clGetDeviceIDs()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00904">clGetDeviceInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01038">clGetEventProfilingInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01094">clGetExtensionFunctionAddressForPlatform()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01020">clGetKernelInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00983">clGetKernelWorkGroupInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00922">clGetMemObjectInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00969">clGetPlatformIDs()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00951">clGetPlatformInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00630">clGetProgramBuildInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00785">clGetProgramInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01238">clImportMemoryARM()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01160">clReleaseCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00691">clReleaseCommandQueue()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00557">clReleaseContext()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00570">clReleaseEvent()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00872">clReleaseKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00510">clReleaseMemObject()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00743">clReleaseProgram()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01145">clRetainCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00543">clRetainCommandQueue()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00729">clRetainContext()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00937">clRetainEvent()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00821">clRetainKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00496">clRetainMemObject()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00649">clRetainProgram()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00482">clSetKernelArg()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01080">clSetKernelExecInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00327">clSVMAlloc()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00341">clSVMFree()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01222">clUpdateMutableCommandsKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00274">clWaitForEvents()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00236">arm_compute::opencl_is_available()</a>, <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00069">OpenCLMemoryUsage::test_start()</a>, <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00096">OpenCLClock&lt; output_timestamps &gt;::test_start()</a>, <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00166">OpenCLMemoryUsage::test_stop()</a>, and <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00181">OpenCLClock&lt; output_timestamps &gt;::test_stop()</a>.</p>

</div>
</div>
<a id="abe4a1505aebd2ee667800f5e38414cd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe4a1505aebd2ee667800f5e38414cd5">&#9670;&nbsp;</a></span>load()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool load </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>libraries_filenames</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_loader</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This method attempts to load the OpenCL symbols from the first available library from the provided OpenCL libraries. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">libraries_filenames</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> containing the filenames of the libraries to be loaded. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">use_loader</td><td>Use symbol loader function loadOpenCLPointer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if loading the library is successful. False if all the provided libraries could not be loaded. </dd></dl>
<p>TODO: (COMPMID-6742) Load Command Buffer extensions in a Portable way using <a class="el" href="_open_c_l_8cpp.xhtml#ad33ef1ed0329715a73c83c42f5fd8dcf">clGetExtensionFunctionAddressForPlatform()</a>. The details can be found here: <a href="https://registry.khronos.org/OpenCL/specs/3.0-unified/html/OpenCL_Ext.html#getting-opencl-api-extension-function-pointers">https://registry.khronos.org/OpenCL/specs/3.0-unified/html/OpenCL_Ext.html#getting-opencl-api-extension-function-pointers</a></p>
<dl class="section note"><dt>Note</dt><dd>: There are some problems reported while loading these extensions in the recommended way. For details, please see COMPUTE-16545</dd></dl>

<p class="definition">Definition at line <a class="el" href="_open_c_l_8cpp_source.xhtml#l00092">92</a> of file <a class="el" href="_open_c_l_8cpp_source.xhtml">OpenCL.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordtype">void</span>        *handle = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index  = 0;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">for</span> (index = 0; index &lt; libraries_filenames.size(); ++index)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        handle = dlopen(libraries_filenames[index].c_str(), RTLD_LAZY | RTLD_LOCAL);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">if</span> (handle != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">if</span> (index == libraries_filenames.size())</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="comment">// Set status of loading to failed</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        _loaded.second = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#ifdef __ANDROID__</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">void</span> *(*loadOpenCLPointer_t)(<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    loadOpenCLPointer_t loadOpenCLPointer;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">if</span> (use_loader)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keyword">typedef</span> void (*enableOpenCL_t)();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        enableOpenCL_t enableOpenCL = <span class="keyword">reinterpret_cast&lt;</span>enableOpenCL_t<span class="keyword">&gt;</span>(dlsym(handle, <span class="stringliteral">&quot;enableOpenCL&quot;</span>));</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        enableOpenCL();</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        loadOpenCLPointer = <span class="keyword">reinterpret_cast&lt;</span>loadOpenCLPointer_t<span class="keyword">&gt;</span>(dlsym(handle, <span class="stringliteral">&quot;loadOpenCLPointer&quot;</span>));</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        loadOpenCLPointer = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor">#define LOAD_FUNCTION_PTR(func_name, _handle)                                                            \</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">    func_name##_ptr = reinterpret_cast&lt;decltype(func_name) *&gt;(use_loader ? loadOpenCLPointer(#func_name) \</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">                                                                         : dlsym(handle, #func_name));</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#else </span><span class="comment">/* __ANDROID__ */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    (void)use_loader; <span class="comment">// Avoid unused warning</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#define LOAD_FUNCTION_PTR(func_name, handle) \</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">    func_name##_ptr = reinterpret_cast&lt;decltype(func_name) *&gt;(dlsym(handle, #func_name));</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ANDROID__ */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">#define LOAD_EXTENSION_FUNCTION_PTR(func_name, platform_id) \</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">    func_name##_ptr =                                       \</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">        reinterpret_cast&lt;decltype(func_name) *&gt;(clGetExtensionFunctionAddressForPlatform(platform_id, #func_name));</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#abdcf0f1bbd28eb23c756f32e005e3846">clCreateContext</a>, handle);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a298a4a3082936de672185fe3cc9b992b">clCreateContextFromType</a>, handle);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ac9707377cc9420fd03b16d76e831513a">clCreateCommandQueue</a>, handle);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a2b2912c16aeb279ce55dc9c30968b906">clCreateCommandQueueWithProperties</a>, handle);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a4bd1918b00ed6da1c8ed84bf4251f963">clGetContextInfo</a>, handle);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ab17c2125daccf219d5ead2be2491e36e">clBuildProgram</a>, handle);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a0152f4b089c26f22f032162d0b7a0d21">clEnqueueNDRangeKernel</a>, handle);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a3945f28bb1b23afb00a87801136271e9">clSetKernelArg</a>, handle);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a9533331a57797c4c4c4187900ff9ae51">clReleaseKernel</a>, handle);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ae2ab434699c41d87099b48a774db0b9d">clCreateProgramWithSource</a>, handle);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#af9a973de9b75e338812149043568dc20">clCreateBuffer</a>, handle);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a617b60a00661fe3a03749b6b9913d006">clRetainKernel</a>, handle);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a372df0ff626cb294bc21a8d75aef7240">clCreateKernel</a>, handle);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a9f71d4d10e82daea5e3dd62089dab424">clGetProgramInfo</a>, handle);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#acb9d0f5ac60336c8dac9a37e51f3cf47">clFlush</a>, handle);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ac78e93d371eecbe98f00bdf965c98ed6">clFinish</a>, handle);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ae32b736b7255a0549acfe221f83a3197">clReleaseProgram</a>, handle);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#abea285cf4c4715cd284f275725cd1508">clRetainContext</a>, handle);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a1425fcfd615cc990cdf8c311d520ad10">clCreateProgramWithBinary</a>, handle);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#abd209590ef4b1c99e256180ad77faecf">clReleaseCommandQueue</a>, handle);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a9039d2fa3d129a08baa1c49abf2f07fb">clEnqueueMapBuffer</a>, handle);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#aa0cc01b2f6b15bbab28eb38d6f29f184">clRetainProgram</a>, handle);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a42eb427f73ef3e670fb570734341fd49">clGetProgramBuildInfo</a>, handle);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a0c6565be16b3326d2ccdab5339e0f7bf">clEnqueueReadBuffer</a>, handle);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a8301eaffd71b5aeae60dc9e3afdf8c9b">clEnqueueWriteBuffer</a>, handle);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a41eb8d025116f85cf2175e51c98d9fb6">clReleaseEvent</a>, handle);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a424af1d00f0ad1421da1bc0c2ccc9abe">clReleaseContext</a>, handle);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ae342be07c62cae5d870ff5796a599e75">clRetainCommandQueue</a>, handle);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#af1ca0be4c120041eda74a4f1fc36c4a0">clEnqueueUnmapMemObject</a>, handle);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a2c88e252bef66c05807260b013a725de">clRetainMemObject</a>, handle);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#aaa80bcf581a6eb2848468677b3f3cbd1">clReleaseMemObject</a>, handle);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a677990334379f5f91619bfc43af63c4a">clGetDeviceInfo</a>, handle);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ad61ef286586c4d20b47cc51a32839de1">clGetDeviceIDs</a>, handle);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a56cdb4214e0b6d66392cd0670f89e27d">clGetMemObjectInfo</a>, handle);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a434f9e0998ebb096bf09a0a6abdd5938">clRetainEvent</a>, handle);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#af4dc7264b57c52f10781d5e7d7bbed66">clGetPlatformInfo</a>, handle);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a16acb36fde338eaff889484b213c953d">clGetPlatformIDs</a>, handle);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#acb69a828a88a01250d4765d9ac36637f">clGetKernelWorkGroupInfo</a>, handle);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ad3379de4b5bac534f2e0197d0e53393b">clGetCommandQueueInfo</a>, handle);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#af547e92d5365c4a7cc5609814618289e">clGetKernelInfo</a>, handle);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a1203915fa89fa2ad0914bc8b83e1af81">clGetEventProfilingInfo</a>, handle);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a3f3b491b813e283ae79a756cb7ae84bd">clSVMAlloc</a>, handle);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a1412ab782ad4055d71dc9c5a7c4c11e4">clSVMFree</a>, handle);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a66cc3ae002a3eb6b7c70291ba3eac1b5">clEnqueueSVMMap</a>, handle);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#af15c1cf404e8af8057e176c967080fd4">clEnqueueSVMUnmap</a>, handle);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a43d9a36e38a16e503e0bbdc7b2f81f12">clEnqueueMarker</a>, handle);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ab01da83b3a9fcd7a69dda12cc721c8f8">clWaitForEvents</a>, handle);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#aa31e96a1fb21520f2e391b4f7f46f5a9">clCreateImage</a>, handle);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#aaf342694786e1e468c55431205f36ced">clSetKernelExecInfo</a>, handle);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ad33ef1ed0329715a73c83c42f5fd8dcf">clGetExtensionFunctionAddressForPlatform</a>, handle);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="comment">// Load Extensions</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="comment">// Number of platforms is assumed to be 1. For this to be greater than 1,</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="comment">// the system must have more than one OpenCL implementation provided by</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="comment">// different vendors. This is not our use case. Besides, the library</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="comment">// already assumes one implementation as it uses one handle to load core</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="comment">// functions.</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>      num_platforms = 1U;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    std::vector&lt;cl_platform_id&gt; platform_ids(num_platforms);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    cl_int                      err = <a class="code" href="_open_c_l_8cpp.xhtml#a16acb36fde338eaff889484b213c953d">clGetPlatformIDs</a>(num_platforms, platform_ids.data(), <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">if</span> (err != CL_SUCCESS)</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    {</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="comment">// Command buffer and mutable dispatch command buffer extensions</span><span class="comment"></span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">    /// TODO: (COMPMID-6742) Load Command Buffer extensions in a Portable way</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">    /// using clGetExtensionFunctionAddressForPlatform().</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">    /// The details can be found here:</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">    ///    https://registry.khronos.org/OpenCL/specs/3.0-unified/html/OpenCL_Ext.html#getting-opencl-api-extension-function-pointers</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">    ///</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">    /// @note: There are some problems reported while loading these extensions in the recommended way.</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">    ///        For details, please see COMPUTE-16545</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment"></span>    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ae4091b6ac9dd4388f5b95f320a0c85a8">clCreateCommandBufferKHR</a>, handle);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a945aa317a51cafa77b806560d1e0663e">clRetainCommandBufferKHR</a>, handle);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#ad92270fbfad08428c9ed518170a8a74a">clReleaseCommandBufferKHR</a>, handle);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a2eda66fd1833633bdc55e29686b7d454">clFinalizeCommandBufferKHR</a>, handle);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#aabca83598a7d2f2db7aaa2d4b1cbd1a7">clEnqueueCommandBufferKHR</a>, handle);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#acdc4200f6df3ab658adb5b2b4c22f6ac">clCommandNDRangeKernelKHR</a>, handle);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a1384e99dd308097bc7a2edb202eb91a2">clUpdateMutableCommandsKHR</a>, handle);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="comment">// Third-party extensions</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#a594e176cb0da9a4b01f6df6a783c41a6">LOAD_EXTENSION_FUNCTION_PTR</a>(<a class="code" href="_open_c_l_8cpp.xhtml#a6ece3384ff9496363d68aeb376041aaf">clImportMemoryARM</a>, platform_ids[0]);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">#undef LOAD_FUNCTION_PTR</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="preprocessor">#undef LOAD_EXTENSION_FUNCTION_PTR</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="comment">//Don&#39;t call dlclose(handle) or all the symbols will be unloaded !</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="comment">// Disable default loading and set status to successful</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    _loaded = std::make_pair(<span class="keyword">true</span>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;}</div>
<div class="ttc" id="a_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00066">NEBatchNormalizationLayerKernel.cpp:66</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a0152f4b089c26f22f032162d0b7a0d21"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a0152f4b089c26f22f032162d0b7a0d21">clEnqueueNDRangeKernel</a></div><div class="ttdeci">cl_int clEnqueueNDRangeKernel(cl_command_queue command_queue, cl_kernel kernel, cl_uint work_dim, const size_t *global_work_offset, const size_t *global_work_size, const size_t *local_work_size, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00459">OpenCL.cpp:459</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a0c6565be16b3326d2ccdab5339e0f7bf"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a0c6565be16b3326d2ccdab5339e0f7bf">clEnqueueReadBuffer</a></div><div class="ttdeci">cl_int clEnqueueReadBuffer(cl_command_queue command_queue, cl_mem buffer, cl_bool blocking_read, size_t offset, size_t size, void *ptr, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00607">OpenCL.cpp:607</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1203915fa89fa2ad0914bc8b83e1af81"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1203915fa89fa2ad0914bc8b83e1af81">clGetEventProfilingInfo</a></div><div class="ttdeci">cl_int clGetEventProfilingInfo(cl_event event, cl_profiling_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01038">OpenCL.cpp:1038</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1384e99dd308097bc7a2edb202eb91a2"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1384e99dd308097bc7a2edb202eb91a2">clUpdateMutableCommandsKHR</a></div><div class="ttdeci">cl_int clUpdateMutableCommandsKHR(cl_command_buffer_khr command_buffer, const cl_mutable_base_config_khr *mutable_config)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01222">OpenCL.cpp:1222</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1412ab782ad4055d71dc9c5a7c4c11e4"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1412ab782ad4055d71dc9c5a7c4c11e4">clSVMFree</a></div><div class="ttdeci">void clSVMFree(cl_context context, void *svm_pointer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00341">OpenCL.cpp:341</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1425fcfd615cc990cdf8c311d520ad10"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1425fcfd615cc990cdf8c311d520ad10">clCreateProgramWithBinary</a></div><div class="ttdeci">cl_program clCreateProgramWithBinary(cl_context context, cl_uint num_devices, const cl_device_id *device_list, const size_t *lengths, const unsigned char **binaries, cl_int *binary_status, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00705">OpenCL.cpp:705</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a16acb36fde338eaff889484b213c953d"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a16acb36fde338eaff889484b213c953d">clGetPlatformIDs</a></div><div class="ttdeci">cl_int clGetPlatformIDs(cl_uint num_entries, cl_platform_id *platforms, cl_uint *num_platforms)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00969">OpenCL.cpp:969</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a298a4a3082936de672185fe3cc9b992b"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a298a4a3082936de672185fe3cc9b992b">clCreateContextFromType</a></div><div class="ttdeci">cl_context clCreateContextFromType(const cl_context_properties *properties, cl_device_type device_type, void(*pfn_notify)(const char *, const void *, size_t, void *), void *user_data, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00422">OpenCL.cpp:422</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a2b2912c16aeb279ce55dc9c30968b906"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a2b2912c16aeb279ce55dc9c30968b906">clCreateCommandQueueWithProperties</a></div><div class="ttdeci">cl_command_queue clCreateCommandQueueWithProperties(cl_context context, cl_device_id device, const cl_queue_properties *properties, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00386">OpenCL.cpp:386</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a2c88e252bef66c05807260b013a725de"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a2c88e252bef66c05807260b013a725de">clRetainMemObject</a></div><div class="ttdeci">cl_int clRetainMemObject(cl_mem memobj)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00496">OpenCL.cpp:496</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a2eda66fd1833633bdc55e29686b7d454"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a2eda66fd1833633bdc55e29686b7d454">clFinalizeCommandBufferKHR</a></div><div class="ttdeci">cl_int clFinalizeCommandBufferKHR(cl_command_buffer_khr command_buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01130">OpenCL.cpp:1130</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a372df0ff626cb294bc21a8d75aef7240"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a372df0ff626cb294bc21a8d75aef7240">clCreateKernel</a></div><div class="ttdeci">cl_kernel clCreateKernel(cl_program program, const char *kernel_name, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00803">OpenCL.cpp:803</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a3945f28bb1b23afb00a87801136271e9"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a3945f28bb1b23afb00a87801136271e9">clSetKernelArg</a></div><div class="ttdeci">cl_int clSetKernelArg(cl_kernel kernel, cl_uint arg_index, size_t arg_size, const void *arg_value)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00482">OpenCL.cpp:482</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a3f3b491b813e283ae79a756cb7ae84bd"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a3f3b491b813e283ae79a756cb7ae84bd">clSVMAlloc</a></div><div class="ttdeci">void * clSVMAlloc(cl_context context, cl_svm_mem_flags_arm flags, size_t size, cl_uint alignment)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00327">OpenCL.cpp:327</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a41eb8d025116f85cf2175e51c98d9fb6"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a41eb8d025116f85cf2175e51c98d9fb6">clReleaseEvent</a></div><div class="ttdeci">cl_int clReleaseEvent(cl_event event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00570">OpenCL.cpp:570</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a424af1d00f0ad1421da1bc0c2ccc9abe"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a424af1d00f0ad1421da1bc0c2ccc9abe">clReleaseContext</a></div><div class="ttdeci">cl_int clReleaseContext(cl_context context)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00557">OpenCL.cpp:557</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a42eb427f73ef3e670fb570734341fd49"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a42eb427f73ef3e670fb570734341fd49">clGetProgramBuildInfo</a></div><div class="ttdeci">cl_int clGetProgramBuildInfo(cl_program program, cl_device_id device, cl_program_build_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00630">OpenCL.cpp:630</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a434f9e0998ebb096bf09a0a6abdd5938"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a434f9e0998ebb096bf09a0a6abdd5938">clRetainEvent</a></div><div class="ttdeci">cl_int clRetainEvent(cl_event event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00937">OpenCL.cpp:937</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a43d9a36e38a16e503e0bbdc7b2f81f12"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a43d9a36e38a16e503e0bbdc7b2f81f12">clEnqueueMarker</a></div><div class="ttdeci">cl_int clEnqueueMarker(cl_command_queue command_queue, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00260">OpenCL.cpp:260</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a4bd1918b00ed6da1c8ed84bf4251f963"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a4bd1918b00ed6da1c8ed84bf4251f963">clGetContextInfo</a></div><div class="ttdeci">cl_int clGetContextInfo(cl_context context, cl_context_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00351">OpenCL.cpp:351</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a56cdb4214e0b6d66392cd0670f89e27d"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a56cdb4214e0b6d66392cd0670f89e27d">clGetMemObjectInfo</a></div><div class="ttdeci">cl_int clGetMemObjectInfo(cl_mem memobj, cl_mem_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00922">OpenCL.cpp:922</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a594e176cb0da9a4b01f6df6a783c41a6"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a594e176cb0da9a4b01f6df6a783c41a6">LOAD_EXTENSION_FUNCTION_PTR</a></div><div class="ttdeci">#define LOAD_EXTENSION_FUNCTION_PTR(func_name, platform_id)</div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a617b60a00661fe3a03749b6b9913d006"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a617b60a00661fe3a03749b6b9913d006">clRetainKernel</a></div><div class="ttdeci">cl_int clRetainKernel(cl_kernel kernel)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00821">OpenCL.cpp:821</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a66cc3ae002a3eb6b7c70291ba3eac1b5"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a66cc3ae002a3eb6b7c70291ba3eac1b5">clEnqueueSVMMap</a></div><div class="ttdeci">cl_int clEnqueueSVMMap(cl_command_queue command_queue, cl_bool blocking_map, cl_map_flags flags, void *svm_ptr, size_t size, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00288">OpenCL.cpp:288</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a677990334379f5f91619bfc43af63c4a"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a677990334379f5f91619bfc43af63c4a">clGetDeviceInfo</a></div><div class="ttdeci">cl_int clGetDeviceInfo(cl_device_id device, cl_device_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00904">OpenCL.cpp:904</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a6ece3384ff9496363d68aeb376041aaf"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a6ece3384ff9496363d68aeb376041aaf">clImportMemoryARM</a></div><div class="ttdeci">cl_mem clImportMemoryARM(cl_context context, cl_mem_flags flags, const cl_import_properties_arm *properties, void *memory, size_t size, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01238">OpenCL.cpp:1238</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a8301eaffd71b5aeae60dc9e3afdf8c9b"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a8301eaffd71b5aeae60dc9e3afdf8c9b">clEnqueueWriteBuffer</a></div><div class="ttdeci">cl_int clEnqueueWriteBuffer(cl_command_queue command_queue, cl_mem buffer, cl_bool blocking_write, size_t offset, size_t size, const void *ptr, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00584">OpenCL.cpp:584</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a9039d2fa3d129a08baa1c49abf2f07fb"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a9039d2fa3d129a08baa1c49abf2f07fb">clEnqueueMapBuffer</a></div><div class="ttdeci">void * clEnqueueMapBuffer(cl_command_queue command_queue, cl_mem buffer, cl_bool blocking_map, cl_map_flags map_flags, size_t offset, size_t size, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00663">OpenCL.cpp:663</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a945aa317a51cafa77b806560d1e0663e"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a945aa317a51cafa77b806560d1e0663e">clRetainCommandBufferKHR</a></div><div class="ttdeci">cl_int clRetainCommandBufferKHR(cl_command_buffer_khr command_buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01145">OpenCL.cpp:1145</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a9533331a57797c4c4c4187900ff9ae51"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a9533331a57797c4c4c4187900ff9ae51">clReleaseKernel</a></div><div class="ttdeci">cl_int clReleaseKernel(cl_kernel kernel)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00872">OpenCL.cpp:872</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a9f71d4d10e82daea5e3dd62089dab424"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a9f71d4d10e82daea5e3dd62089dab424">clGetProgramInfo</a></div><div class="ttdeci">cl_int clGetProgramInfo(cl_program program, cl_program_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00785">OpenCL.cpp:785</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aa0cc01b2f6b15bbab28eb38d6f29f184"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aa0cc01b2f6b15bbab28eb38d6f29f184">clRetainProgram</a></div><div class="ttdeci">cl_int clRetainProgram(cl_program program)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00649">OpenCL.cpp:649</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aa31e96a1fb21520f2e391b4f7f46f5a9"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aa31e96a1fb21520f2e391b4f7f46f5a9">clCreateImage</a></div><div class="ttdeci">cl_mem clCreateImage(cl_context context, cl_mem_flags flags, const cl_image_format *image_format, const cl_image_desc *image_desc, void *host_ptr, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01056">OpenCL.cpp:1056</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aaa80bcf581a6eb2848468677b3f3cbd1"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aaa80bcf581a6eb2848468677b3f3cbd1">clReleaseMemObject</a></div><div class="ttdeci">cl_int clReleaseMemObject(cl_mem memobj)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00510">OpenCL.cpp:510</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aabca83598a7d2f2db7aaa2d4b1cbd1a7"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aabca83598a7d2f2db7aaa2d4b1cbd1a7">clEnqueueCommandBufferKHR</a></div><div class="ttdeci">cl_int clEnqueueCommandBufferKHR(cl_uint num_queues, cl_command_queue *queues, cl_command_buffer_khr command_buffer, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01175">OpenCL.cpp:1175</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aaf342694786e1e468c55431205f36ced"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aaf342694786e1e468c55431205f36ced">clSetKernelExecInfo</a></div><div class="ttdeci">cl_int clSetKernelExecInfo(cl_kernel kernel, cl_kernel_exec_info param_name, size_t param_value_size, const void *param_value)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01080">OpenCL.cpp:1080</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ab01da83b3a9fcd7a69dda12cc721c8f8"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ab01da83b3a9fcd7a69dda12cc721c8f8">clWaitForEvents</a></div><div class="ttdeci">cl_int clWaitForEvents(cl_uint num_events, const cl_event *event_list)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00274">OpenCL.cpp:274</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ab17c2125daccf219d5ead2be2491e36e"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ab17c2125daccf219d5ead2be2491e36e">clBuildProgram</a></div><div class="ttdeci">cl_int clBuildProgram(cl_program program, cl_uint num_devices, const cl_device_id *device_list, const char *options, void(CL_CALLBACK *pfn_notify)(cl_program program, void *user_data), void *user_data)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00440">OpenCL.cpp:440</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_abd209590ef4b1c99e256180ad77faecf"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#abd209590ef4b1c99e256180ad77faecf">clReleaseCommandQueue</a></div><div class="ttdeci">cl_int clReleaseCommandQueue(cl_command_queue command_queue)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00691">OpenCL.cpp:691</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_abdcf0f1bbd28eb23c756f32e005e3846"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#abdcf0f1bbd28eb23c756f32e005e3846">clCreateContext</a></div><div class="ttdeci">cl_context clCreateContext(const cl_context_properties *properties, cl_uint num_devices, const cl_device_id *devices, void(*pfn_notify)(const char *, const void *, size_t, void *), void *user_data, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00403">OpenCL.cpp:403</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_abea285cf4c4715cd284f275725cd1508"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#abea285cf4c4715cd284f275725cd1508">clRetainContext</a></div><div class="ttdeci">cl_int clRetainContext(cl_context context)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00729">OpenCL.cpp:729</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ac78e93d371eecbe98f00bdf965c98ed6"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ac78e93d371eecbe98f00bdf965c98ed6">clFinish</a></div><div class="ttdeci">cl_int clFinish(cl_command_queue command_queue)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00771">OpenCL.cpp:771</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ac9707377cc9420fd03b16d76e831513a"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ac9707377cc9420fd03b16d76e831513a">clCreateCommandQueue</a></div><div class="ttdeci">cl_command_queue clCreateCommandQueue(cl_context context, cl_device_id device, cl_command_queue_properties properties, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00369">OpenCL.cpp:369</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_acb69a828a88a01250d4765d9ac36637f"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#acb69a828a88a01250d4765d9ac36637f">clGetKernelWorkGroupInfo</a></div><div class="ttdeci">cl_int clGetKernelWorkGroupInfo(cl_kernel kernel, cl_device_id device, cl_kernel_work_group_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00983">OpenCL.cpp:983</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_acb9d0f5ac60336c8dac9a37e51f3cf47"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#acb9d0f5ac60336c8dac9a37e51f3cf47">clFlush</a></div><div class="ttdeci">cl_int clFlush(cl_command_queue command_queue)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00757">OpenCL.cpp:757</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_acdc4200f6df3ab658adb5b2b4c22f6ac"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#acdc4200f6df3ab658adb5b2b4c22f6ac">clCommandNDRangeKernelKHR</a></div><div class="ttdeci">cl_int clCommandNDRangeKernelKHR(cl_command_buffer_khr command_buffer, cl_command_queue command_queue, const cl_ndrange_kernel_command_properties_khr *properties, cl_kernel kernel, cl_uint work_dim, const size_t *global_work_offset, const size_t *global_work_size, const size_t *local_work_size, cl_uint num_sync_points_in_wait_list, const cl_sync_point_khr *sync_point_wait_list, cl_sync_point_khr *sync_point, cl_mutable_command_khr *mutable_handle)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01195">OpenCL.cpp:1195</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad3379de4b5bac534f2e0197d0e53393b"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad3379de4b5bac534f2e0197d0e53393b">clGetCommandQueueInfo</a></div><div class="ttdeci">cl_int clGetCommandQueueInfo(cl_command_queue command_queue, cl_command_queue_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01002">OpenCL.cpp:1002</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad33ef1ed0329715a73c83c42f5fd8dcf"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad33ef1ed0329715a73c83c42f5fd8dcf">clGetExtensionFunctionAddressForPlatform</a></div><div class="ttdeci">void * clGetExtensionFunctionAddressForPlatform(cl_platform_id platform, const char *funcname)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01094">OpenCL.cpp:1094</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad34d144f5c59d263587bd0adb4680353"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a></div><div class="ttdeci">#define LOAD_FUNCTION_PTR(func_name, handle)</div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad61ef286586c4d20b47cc51a32839de1"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad61ef286586c4d20b47cc51a32839de1">clGetDeviceIDs</a></div><div class="ttdeci">cl_int clGetDeviceIDs(cl_platform_id platform, cl_device_type device_type, cl_uint num_entries, cl_device_id *devices, cl_uint *num_devices)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00886">OpenCL.cpp:886</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad92270fbfad08428c9ed518170a8a74a"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad92270fbfad08428c9ed518170a8a74a">clReleaseCommandBufferKHR</a></div><div class="ttdeci">cl_int clReleaseCommandBufferKHR(cl_command_buffer_khr command_buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01160">OpenCL.cpp:1160</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ae2ab434699c41d87099b48a774db0b9d"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ae2ab434699c41d87099b48a774db0b9d">clCreateProgramWithSource</a></div><div class="ttdeci">cl_program clCreateProgramWithSource(cl_context context, cl_uint count, const char **strings, const size_t *lengths, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00853">OpenCL.cpp:853</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ae32b736b7255a0549acfe221f83a3197"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ae32b736b7255a0549acfe221f83a3197">clReleaseProgram</a></div><div class="ttdeci">cl_int clReleaseProgram(cl_program program)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00743">OpenCL.cpp:743</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ae342be07c62cae5d870ff5796a599e75"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ae342be07c62cae5d870ff5796a599e75">clRetainCommandQueue</a></div><div class="ttdeci">cl_int clRetainCommandQueue(cl_command_queue command_queue)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00543">OpenCL.cpp:543</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ae4091b6ac9dd4388f5b95f320a0c85a8"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ae4091b6ac9dd4388f5b95f320a0c85a8">clCreateCommandBufferKHR</a></div><div class="ttdeci">cl_command_buffer_khr clCreateCommandBufferKHR(cl_uint num_queues, const cl_command_queue *queues, const cl_command_buffer_properties_khr *properties, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01107">OpenCL.cpp:1107</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af15c1cf404e8af8057e176c967080fd4"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af15c1cf404e8af8057e176c967080fd4">clEnqueueSVMUnmap</a></div><div class="ttdeci">cl_int clEnqueueSVMUnmap(cl_command_queue command_queue, void *svm_ptr, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00309">OpenCL.cpp:309</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af1ca0be4c120041eda74a4f1fc36c4a0"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af1ca0be4c120041eda74a4f1fc36c4a0">clEnqueueUnmapMemObject</a></div><div class="ttdeci">cl_int clEnqueueUnmapMemObject(cl_command_queue command_queue, cl_mem memobj, void *mapped_ptr, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00524">OpenCL.cpp:524</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af4dc7264b57c52f10781d5e7d7bbed66"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af4dc7264b57c52f10781d5e7d7bbed66">clGetPlatformInfo</a></div><div class="ttdeci">cl_int clGetPlatformInfo(cl_platform_id platform, cl_platform_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00951">OpenCL.cpp:951</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af547e92d5365c4a7cc5609814618289e"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af547e92d5365c4a7cc5609814618289e">clGetKernelInfo</a></div><div class="ttdeci">cl_int clGetKernelInfo(cl_kernel kernel, cl_kernel_info param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01020">OpenCL.cpp:1020</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af9a973de9b75e338812149043568dc20"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af9a973de9b75e338812149043568dc20">clCreateBuffer</a></div><div class="ttdeci">cl_mem clCreateBuffer(cl_context context, cl_mem_flags flags, size_t size, void *host_ptr, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00835">OpenCL.cpp:835</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_open_c_l_8cpp_source.xhtml#l00440">clBuildProgram()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01195">clCommandNDRangeKernelKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00835">clCreateBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01107">clCreateCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00369">clCreateCommandQueue()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00386">clCreateCommandQueueWithProperties()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00403">clCreateContext()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00422">clCreateContextFromType()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01056">clCreateImage()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00803">clCreateKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00705">clCreateProgramWithBinary()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00853">clCreateProgramWithSource()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01175">clEnqueueCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00663">clEnqueueMapBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00260">clEnqueueMarker()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00459">clEnqueueNDRangeKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00607">clEnqueueReadBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00288">clEnqueueSVMMap()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00309">clEnqueueSVMUnmap()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00524">clEnqueueUnmapMemObject()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00584">clEnqueueWriteBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01130">clFinalizeCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00771">clFinish()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00757">clFlush()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01002">clGetCommandQueueInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00351">clGetContextInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00886">clGetDeviceIDs()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00904">clGetDeviceInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01038">clGetEventProfilingInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01094">clGetExtensionFunctionAddressForPlatform()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01020">clGetKernelInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00983">clGetKernelWorkGroupInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00922">clGetMemObjectInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00969">clGetPlatformIDs()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00951">clGetPlatformInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00630">clGetProgramBuildInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00785">clGetProgramInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01238">clImportMemoryARM()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01160">clReleaseCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00691">clReleaseCommandQueue()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00557">clReleaseContext()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00570">clReleaseEvent()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00872">clReleaseKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00510">clReleaseMemObject()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00743">clReleaseProgram()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01145">clRetainCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00543">clRetainCommandQueue()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00729">clRetainContext()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00937">clRetainEvent()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00821">clRetainKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00496">clRetainMemObject()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00649">clRetainProgram()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00482">clSetKernelArg()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01080">clSetKernelExecInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00327">clSVMAlloc()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00341">clSVMFree()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01222">clUpdateMutableCommandsKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00274">clWaitForEvents()</a>, <a class="el" href="_open_c_l_8cpp.xhtml#a594e176cb0da9a4b01f6df6a783c41a6">LOAD_EXTENSION_FUNCTION_PTR</a>, <a class="el" href="_open_c_l_8cpp.xhtml#ad34d144f5c59d263587bd0adb4680353">LOAD_FUNCTION_PTR</a>, and <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00066">name</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00049">CLSymbols::load_default()</a>.</p>

</div>
</div>
<a id="a7d9b5b93ad5e6018700fa36de6e1e279"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d9b5b93ad5e6018700fa36de6e1e279">&#9670;&nbsp;</a></span>load_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool load_default </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load symbols from any of the default OpenCL library names. </p>
<p>If all the default libraries could not be loaded, this method will print a warning message and return false.</p>
<dl class="section return"><dt>Returns</dt><dd>True if loading any library is successful. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_open_c_l_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="_open_c_l_8cpp_source.xhtml">OpenCL.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::vector&lt;std::string&gt; libraries_filenames{<span class="stringliteral">&quot;libOpenCL.so&quot;</span>, <span class="stringliteral">&quot;libGLES_mali.so&quot;</span>, <span class="stringliteral">&quot;libmali.so&quot;</span>};</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">if</span> (_loaded.first)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">return</span> _loaded.second;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// Indicate that default loading has been tried</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    _loaded.first = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#abe4a1505aebd2ee667800f5e38414cd5">load</a>(libraries_filenames, <span class="comment">/* use_loader */</span> <span class="keyword">false</span>))</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(this-&gt;<a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#ad35af0d314615874e570540e9853668c">clBuildProgram_ptr</a> == <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                 <span class="stringliteral">&quot;Failed to load OpenCL symbols from shared library&quot;</span>);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#ifdef __ANDROID__</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">// When running in NDK environment, the above libraries are not accessible.</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::vector&lt;std::string&gt; android_libraries_filenames{<span class="stringliteral">&quot;libOpenCL-pixel.so&quot;</span>, <span class="stringliteral">&quot;libOpenCL-car.so&quot;</span>};</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#abe4a1505aebd2ee667800f5e38414cd5">load</a>(android_libraries_filenames, <span class="comment">/* use_loader */</span> <span class="keyword">true</span>))</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(this-&gt;<a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#ad35af0d314615874e570540e9853668c">clBuildProgram_ptr</a> == <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                 <span class="stringliteral">&quot;Failed to load OpenCL symbols from android shared library&quot;</span>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#endif </span><span class="comment">// __ANDROID__</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="comment">// If not returned till here then libraries not found</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="namespacearm__compute_1_1utility.xhtml#a067ebd28103d827b6ec17032e2344064">std::for_each</a>(libraries_filenames.begin(), libraries_filenames.end(),</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                  [&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>](<span class="keyword">const</span> std::string &amp;s) { ss &lt;&lt; s &lt;&lt; <span class="stringliteral">&quot; &quot;</span>; });</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">#ifdef __ANDROID__</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="namespacearm__compute_1_1utility.xhtml#a067ebd28103d827b6ec17032e2344064">std::for_each</a>(android_libraries_filenames.begin(), android_libraries_filenames.end(),</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                  [&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>](<span class="keyword">const</span> std::string &amp;s) { ss &lt;&lt; s &lt;&lt; <span class="stringliteral">&quot; &quot;</span>; });</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">#endif </span><span class="comment">// __ANDROID__</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    std::cerr &lt;&lt; <span class="stringliteral">&quot;Couldn&#39;t find any of the following OpenCL library: &quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml_abe4a1505aebd2ee667800f5e38414cd5"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml#abe4a1505aebd2ee667800f5e38414cd5">arm_compute::CLSymbols::load</a></div><div class="ttdeci">bool load(const std::vector&lt; std::string &gt; &amp;libraries_filenames, bool use_loader=false)</div><div class="ttdoc">This method attempts to load the OpenCL symbols from the first available library from the provided Op...</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00092">OpenCL.cpp:92</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml_ad35af0d314615874e570540e9853668c"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml#ad35af0d314615874e570540e9853668c">arm_compute::CLSymbols::clBuildProgram_ptr</a></div><div class="ttdeci">std::function&lt; decltype(clBuildProgram)&gt; clBuildProgram_ptr</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8h_source.xhtml#l00098">OpenCL.h:98</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1utility_xhtml_a067ebd28103d827b6ec17032e2344064"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#a067ebd28103d827b6ec17032e2344064">arm_compute::utility::for_each</a></div><div class="ttdeci">void for_each(F &amp;&amp;)</div><div class="ttdoc">Base case of for_each.</div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00111">Utility.h:111</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_open_c_l_8h_source.xhtml#l00098">CLSymbols::clBuildProgram_ptr</a>, <a class="el" href="_utility_8h_source.xhtml#l00111">arm_compute::utility::for_each()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00092">CLSymbols::load()</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00440">clBuildProgram()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01195">clCommandNDRangeKernelKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00835">clCreateBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01107">clCreateCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00369">clCreateCommandQueue()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00386">clCreateCommandQueueWithProperties()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00403">clCreateContext()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00422">clCreateContextFromType()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01056">clCreateImage()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00803">clCreateKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00705">clCreateProgramWithBinary()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00853">clCreateProgramWithSource()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01175">clEnqueueCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00663">clEnqueueMapBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00260">clEnqueueMarker()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00459">clEnqueueNDRangeKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00607">clEnqueueReadBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00288">clEnqueueSVMMap()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00309">clEnqueueSVMUnmap()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00524">clEnqueueUnmapMemObject()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00584">clEnqueueWriteBuffer()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01130">clFinalizeCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00771">clFinish()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00757">clFlush()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01002">clGetCommandQueueInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00351">clGetContextInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00886">clGetDeviceIDs()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00904">clGetDeviceInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01038">clGetEventProfilingInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01094">clGetExtensionFunctionAddressForPlatform()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01020">clGetKernelInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00983">clGetKernelWorkGroupInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00922">clGetMemObjectInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00969">clGetPlatformIDs()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00951">clGetPlatformInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00630">clGetProgramBuildInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00785">clGetProgramInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01238">clImportMemoryARM()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01160">clReleaseCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00691">clReleaseCommandQueue()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00557">clReleaseContext()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00570">clReleaseEvent()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00872">clReleaseKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00510">clReleaseMemObject()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00743">clReleaseProgram()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01145">clRetainCommandBufferKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00543">clRetainCommandQueue()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00729">clRetainContext()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00937">clRetainEvent()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00821">clRetainKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00496">clRetainMemObject()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00649">clRetainProgram()</a>, <a class="el" href="_c_l_runtime_context_8cpp_source.xhtml#l00032">CLRuntimeContext::CLRuntimeContext()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00482">clSetKernelArg()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01080">clSetKernelExecInfo()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00327">clSVMAlloc()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00341">clSVMFree()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l01222">clUpdateMutableCommandsKHR()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00274">clWaitForEvents()</a>, and <a class="el" href="_open_c_l_8cpp_source.xhtml#l00236">arm_compute::opencl_is_available()</a>.</p>

</div>
</div>
<a id="a2e0acc4ac5f76aae0e86ccea551e85ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e0acc4ac5f76aae0e86ccea551e85ca">&#9670;&nbsp;</a></span>load_symbols()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void load_symbols </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load OpenCL symbols from handle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>Handle to load symbols from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="ad35af0d314615874e570540e9853668c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad35af0d314615874e570540e9853668c">&#9670;&nbsp;</a></span>clBuildProgram_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ab17c2125daccf219d5ead2be2491e36e">clBuildProgram</a> )&gt; clBuildProgram_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00098">98</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00440">clBuildProgram()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00049">CLSymbols::load_default()</a>, and <a class="el" href="_open_c_l_8cpp_source.xhtml#l00236">arm_compute::opencl_is_available()</a>.</p>

</div>
</div>
<a id="a8c3bde47b40a28f4c4a5224eb1eb28e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c3bde47b40a28f4c4a5224eb1eb28e4">&#9670;&nbsp;</a></span>clCommandNDRangeKernelKHR_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#acdc4200f6df3ab658adb5b2b4c22f6ac">clCommandNDRangeKernelKHR</a> )&gt; clCommandNDRangeKernelKHR_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00150">150</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01195">clCommandNDRangeKernelKHR()</a>.</p>

</div>
</div>
<a id="a301b84af701238b357de87434d0327a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a301b84af701238b357de87434d0327a9">&#9670;&nbsp;</a></span>clCreateBuffer_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#af9a973de9b75e338812149043568dc20">clCreateBuffer</a> )&gt; clCreateBuffer_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00103">103</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00835">clCreateBuffer()</a>, <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00069">OpenCLMemoryUsage::test_start()</a>, and <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00166">OpenCLMemoryUsage::test_stop()</a>.</p>

</div>
</div>
<a id="a67abaab41731ded5b40fa9904f8b8933"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67abaab41731ded5b40fa9904f8b8933">&#9670;&nbsp;</a></span>clCreateCommandBufferKHR_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ae4091b6ac9dd4388f5b95f320a0c85a8">clCreateCommandBufferKHR</a> )&gt; clCreateCommandBufferKHR_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00145">145</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01107">clCreateCommandBufferKHR()</a>.</p>

</div>
</div>
<a id="a9edd71637c165f39e1913b22bdafcd67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9edd71637c165f39e1913b22bdafcd67">&#9670;&nbsp;</a></span>clCreateCommandQueue_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ac9707377cc9420fd03b16d76e831513a">clCreateCommandQueue</a> )&gt; clCreateCommandQueue_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00095">95</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00369">clCreateCommandQueue()</a>.</p>

</div>
</div>
<a id="a75d6cb60b6d853a80a32aec236470883"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75d6cb60b6d853a80a32aec236470883">&#9670;&nbsp;</a></span>clCreateCommandQueueWithProperties_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a2b2912c16aeb279ce55dc9c30968b906">clCreateCommandQueueWithProperties</a> )&gt; clCreateCommandQueueWithProperties_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00096">96</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00386">clCreateCommandQueueWithProperties()</a>.</p>

</div>
</div>
<a id="a14a1465f79e3703561c9ee0723276603"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14a1465f79e3703561c9ee0723276603">&#9670;&nbsp;</a></span>clCreateContext_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#abdcf0f1bbd28eb23c756f32e005e3846">clCreateContext</a> )&gt; clCreateContext_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00093">93</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00403">clCreateContext()</a>.</p>

</div>
</div>
<a id="af60dbcf4d37ee4dd2c34cfbf08e64671"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af60dbcf4d37ee4dd2c34cfbf08e64671">&#9670;&nbsp;</a></span>clCreateContextFromType_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a298a4a3082936de672185fe3cc9b992b">clCreateContextFromType</a> )&gt; clCreateContextFromType_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00094">94</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00422">clCreateContextFromType()</a>.</p>

</div>
</div>
<a id="a38dcfd5a3b3a0f7ab8e1f20e8d2fd01c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38dcfd5a3b3a0f7ab8e1f20e8d2fd01c">&#9670;&nbsp;</a></span>clCreateImage_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#aa31e96a1fb21520f2e391b4f7f46f5a9">clCreateImage</a> )&gt; clCreateImage_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00140">140</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01056">clCreateImage()</a>.</p>

</div>
</div>
<a id="a02aff28f848c48e02fababe120a0df36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02aff28f848c48e02fababe120a0df36">&#9670;&nbsp;</a></span>clCreateKernel_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a372df0ff626cb294bc21a8d75aef7240">clCreateKernel</a> )&gt; clCreateKernel_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00105">105</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00803">clCreateKernel()</a>.</p>

</div>
</div>
<a id="a2263b6ca759bdfed0a0727d2b68db916"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2263b6ca759bdfed0a0727d2b68db916">&#9670;&nbsp;</a></span>clCreateProgramWithBinary_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a1425fcfd615cc990cdf8c311d520ad10">clCreateProgramWithBinary</a> )&gt; clCreateProgramWithBinary_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00111">111</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00705">clCreateProgramWithBinary()</a>.</p>

</div>
</div>
<a id="a62fb6450bf1c30cca66d6547348eee3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62fb6450bf1c30cca66d6547348eee3c">&#9670;&nbsp;</a></span>clCreateProgramWithSource_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ae2ab434699c41d87099b48a774db0b9d">clCreateProgramWithSource</a> )&gt; clCreateProgramWithSource_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00102">102</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00853">clCreateProgramWithSource()</a>.</p>

</div>
</div>
<a id="a5ebd8ce67e380ed10aac0d1bf885b70b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ebd8ce67e380ed10aac0d1bf885b70b">&#9670;&nbsp;</a></span>clEnqueueCommandBufferKHR_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#aabca83598a7d2f2db7aaa2d4b1cbd1a7">clEnqueueCommandBufferKHR</a> )&gt; clEnqueueCommandBufferKHR_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00149">149</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01175">clEnqueueCommandBufferKHR()</a>.</p>

</div>
</div>
<a id="abd0ba6c593ff83cb0c3d0e1b746f068a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd0ba6c593ff83cb0c3d0e1b746f068a">&#9670;&nbsp;</a></span>clEnqueueMapBuffer_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a9039d2fa3d129a08baa1c49abf2f07fb">clEnqueueMapBuffer</a> )&gt; clEnqueueMapBuffer_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00113">113</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00663">clEnqueueMapBuffer()</a>.</p>

</div>
</div>
<a id="a527fd99779c605a2203158219f18e95f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a527fd99779c605a2203158219f18e95f">&#9670;&nbsp;</a></span>clEnqueueMarker_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a43d9a36e38a16e503e0bbdc7b2f81f12">clEnqueueMarker</a> )&gt; clEnqueueMarker_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00138">138</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00260">clEnqueueMarker()</a>.</p>

</div>
</div>
<a id="ab5c1d962dbe252b8d6a9a3414557d194"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5c1d962dbe252b8d6a9a3414557d194">&#9670;&nbsp;</a></span>clEnqueueNDRangeKernel_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a0152f4b089c26f22f032162d0b7a0d21">clEnqueueNDRangeKernel</a> )&gt; clEnqueueNDRangeKernel_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00099">99</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00459">clEnqueueNDRangeKernel()</a>, <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00096">OpenCLClock&lt; output_timestamps &gt;::test_start()</a>, and <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00181">OpenCLClock&lt; output_timestamps &gt;::test_stop()</a>.</p>

</div>
</div>
<a id="a114ecc5c7e99f380a84d33f32038dc27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a114ecc5c7e99f380a84d33f32038dc27">&#9670;&nbsp;</a></span>clEnqueueReadBuffer_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a0c6565be16b3326d2ccdab5339e0f7bf">clEnqueueReadBuffer</a> )&gt; clEnqueueReadBuffer_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00116">116</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00607">clEnqueueReadBuffer()</a>.</p>

</div>
</div>
<a id="ae4a0c63c4f06c8d80788da461812bf4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4a0c63c4f06c8d80788da461812bf4c">&#9670;&nbsp;</a></span>clEnqueueSVMMap_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a66cc3ae002a3eb6b7c70291ba3eac1b5">clEnqueueSVMMap</a> )&gt; clEnqueueSVMMap_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00136">136</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00288">clEnqueueSVMMap()</a>.</p>

</div>
</div>
<a id="ab30bda3641f8d1a73126884a9fd66a89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab30bda3641f8d1a73126884a9fd66a89">&#9670;&nbsp;</a></span>clEnqueueSVMUnmap_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#af15c1cf404e8af8057e176c967080fd4">clEnqueueSVMUnmap</a> )&gt; clEnqueueSVMUnmap_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00137">137</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00309">clEnqueueSVMUnmap()</a>.</p>

</div>
</div>
<a id="aab857577e126a171222277703b724639"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab857577e126a171222277703b724639">&#9670;&nbsp;</a></span>clEnqueueUnmapMemObject_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#af1ca0be4c120041eda74a4f1fc36c4a0">clEnqueueUnmapMemObject</a> )&gt; clEnqueueUnmapMemObject_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00121">121</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00524">clEnqueueUnmapMemObject()</a>.</p>

</div>
</div>
<a id="a3085f45d872eda6b1adf8557fd4915b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3085f45d872eda6b1adf8557fd4915b9">&#9670;&nbsp;</a></span>clEnqueueWriteBuffer_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a8301eaffd71b5aeae60dc9e3afdf8c9b">clEnqueueWriteBuffer</a> )&gt; clEnqueueWriteBuffer_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00117">117</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00584">clEnqueueWriteBuffer()</a>.</p>

</div>
</div>
<a id="a02f03aac7764b7a3c00575742ff08ca5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02f03aac7764b7a3c00575742ff08ca5">&#9670;&nbsp;</a></span>clFinalizeCommandBufferKHR_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a2eda66fd1833633bdc55e29686b7d454">clFinalizeCommandBufferKHR</a> )&gt; clFinalizeCommandBufferKHR_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00148">148</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01130">clFinalizeCommandBufferKHR()</a>.</p>

</div>
</div>
<a id="a31fd3504c695582b52ee2426dc71c1d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31fd3504c695582b52ee2426dc71c1d7">&#9670;&nbsp;</a></span>clFinish_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ac78e93d371eecbe98f00bdf965c98ed6">clFinish</a> )&gt; clFinish_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00108">108</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00771">clFinish()</a>.</p>

</div>
</div>
<a id="ac88fa83ac520504fa6792d8c1e5296b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac88fa83ac520504fa6792d8c1e5296b6">&#9670;&nbsp;</a></span>clFlush_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#acb9d0f5ac60336c8dac9a37e51f3cf47">clFlush</a> )&gt; clFlush_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00107">107</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00757">clFlush()</a>.</p>

</div>
</div>
<a id="a8709746b1a7fc8ac57ce61349332e866"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8709746b1a7fc8ac57ce61349332e866">&#9670;&nbsp;</a></span>clGetCommandQueueInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ad3379de4b5bac534f2e0197d0e53393b">clGetCommandQueueInfo</a> )&gt; clGetCommandQueueInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00131">131</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01002">clGetCommandQueueInfo()</a>.</p>

</div>
</div>
<a id="ac3b351139d8ac903bfa75463903ef002"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3b351139d8ac903bfa75463903ef002">&#9670;&nbsp;</a></span>clGetContextInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a4bd1918b00ed6da1c8ed84bf4251f963">clGetContextInfo</a> )&gt; clGetContextInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00097">97</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00351">clGetContextInfo()</a>.</p>

</div>
</div>
<a id="a73ac5a70dfe6076f17a0b16d3a021daa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73ac5a70dfe6076f17a0b16d3a021daa">&#9670;&nbsp;</a></span>clGetDeviceIDs_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ad61ef286586c4d20b47cc51a32839de1">clGetDeviceIDs</a> )&gt; clGetDeviceIDs_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00125">125</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00886">clGetDeviceIDs()</a>.</p>

</div>
</div>
<a id="ab6c28e45955ab8420512342ed6fa6934"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6c28e45955ab8420512342ed6fa6934">&#9670;&nbsp;</a></span>clGetDeviceInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a677990334379f5f91619bfc43af63c4a">clGetDeviceInfo</a> )&gt; clGetDeviceInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00124">124</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00904">clGetDeviceInfo()</a>.</p>

</div>
</div>
<a id="aad5f68729eb6cc674fce0fd950c5b765"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad5f68729eb6cc674fce0fd950c5b765">&#9670;&nbsp;</a></span>clGetEventProfilingInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a1203915fa89fa2ad0914bc8b83e1af81">clGetEventProfilingInfo</a> )&gt; clGetEventProfilingInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00133">133</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01038">clGetEventProfilingInfo()</a>.</p>

</div>
</div>
<a id="aec13c31839836cb6a0536bebc759f00f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec13c31839836cb6a0536bebc759f00f">&#9670;&nbsp;</a></span>clGetExtensionFunctionAddressForPlatform_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ad33ef1ed0329715a73c83c42f5fd8dcf">clGetExtensionFunctionAddressForPlatform</a> )&gt; clGetExtensionFunctionAddressForPlatform_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00142">142</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01094">clGetExtensionFunctionAddressForPlatform()</a>.</p>

</div>
</div>
<a id="a7b9fe21a9872e746fa811b916e4dd9bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b9fe21a9872e746fa811b916e4dd9bf">&#9670;&nbsp;</a></span>clGetKernelInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#af547e92d5365c4a7cc5609814618289e">clGetKernelInfo</a> )&gt; clGetKernelInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00132">132</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01020">clGetKernelInfo()</a>.</p>

</div>
</div>
<a id="aa5bc2c92a538b212960c02f9cb480afe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5bc2c92a538b212960c02f9cb480afe">&#9670;&nbsp;</a></span>clGetKernelWorkGroupInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#acb69a828a88a01250d4765d9ac36637f">clGetKernelWorkGroupInfo</a> )&gt; clGetKernelWorkGroupInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00130">130</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00983">clGetKernelWorkGroupInfo()</a>.</p>

</div>
</div>
<a id="a1e85643ad6d7c35515d0e97b9b88e945"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e85643ad6d7c35515d0e97b9b88e945">&#9670;&nbsp;</a></span>clGetMemObjectInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a56cdb4214e0b6d66392cd0670f89e27d">clGetMemObjectInfo</a> )&gt; clGetMemObjectInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00126">126</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00922">clGetMemObjectInfo()</a>.</p>

</div>
</div>
<a id="aa794227c46c954c6e6684d21af618b00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa794227c46c954c6e6684d21af618b00">&#9670;&nbsp;</a></span>clGetPlatformIDs_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a16acb36fde338eaff889484b213c953d">clGetPlatformIDs</a> )&gt; clGetPlatformIDs_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00129">129</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00969">clGetPlatformIDs()</a>.</p>

</div>
</div>
<a id="a1f02bfc0684bc35eaa24e1357c9a1400"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f02bfc0684bc35eaa24e1357c9a1400">&#9670;&nbsp;</a></span>clGetPlatformInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#af4dc7264b57c52f10781d5e7d7bbed66">clGetPlatformInfo</a> )&gt; clGetPlatformInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00128">128</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00951">clGetPlatformInfo()</a>.</p>

</div>
</div>
<a id="a34391377f3991f0a88631cf1b05e3c8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34391377f3991f0a88631cf1b05e3c8b">&#9670;&nbsp;</a></span>clGetProgramBuildInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a42eb427f73ef3e670fb570734341fd49">clGetProgramBuildInfo</a> )&gt; clGetProgramBuildInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00115">115</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00630">clGetProgramBuildInfo()</a>.</p>

</div>
</div>
<a id="a38787d16b9a4ccb79f11c9e807b31f39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38787d16b9a4ccb79f11c9e807b31f39">&#9670;&nbsp;</a></span>clGetProgramInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a9f71d4d10e82daea5e3dd62089dab424">clGetProgramInfo</a> )&gt; clGetProgramInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00106">106</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00785">clGetProgramInfo()</a>.</p>

</div>
</div>
<a id="ac85382870c183f26f792e183ee80e38c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac85382870c183f26f792e183ee80e38c">&#9670;&nbsp;</a></span>clImportMemoryARM_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a6ece3384ff9496363d68aeb376041aaf">clImportMemoryARM</a> )&gt; clImportMemoryARM_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00155">155</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01238">clImportMemoryARM()</a>.</p>

</div>
</div>
<a id="adb27fb628c843d3ccbcfbfeabd37149f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb27fb628c843d3ccbcfbfeabd37149f">&#9670;&nbsp;</a></span>clReleaseCommandBufferKHR_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ad92270fbfad08428c9ed518170a8a74a">clReleaseCommandBufferKHR</a> )&gt; clReleaseCommandBufferKHR_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00147">147</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01160">clReleaseCommandBufferKHR()</a>.</p>

</div>
</div>
<a id="a2cc4ea7d2743d398a26055f062052762"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cc4ea7d2743d398a26055f062052762">&#9670;&nbsp;</a></span>clReleaseCommandQueue_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#abd209590ef4b1c99e256180ad77faecf">clReleaseCommandQueue</a> )&gt; clReleaseCommandQueue_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00112">112</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00691">clReleaseCommandQueue()</a>.</p>

</div>
</div>
<a id="aff1103110d2ad3e5fc2a8e0a746059b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff1103110d2ad3e5fc2a8e0a746059b3">&#9670;&nbsp;</a></span>clReleaseContext_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a424af1d00f0ad1421da1bc0c2ccc9abe">clReleaseContext</a> )&gt; clReleaseContext_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00119">119</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00557">clReleaseContext()</a>.</p>

</div>
</div>
<a id="a8f72204edecff30764f23d06c4e4ae20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f72204edecff30764f23d06c4e4ae20">&#9670;&nbsp;</a></span>clReleaseEvent_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a41eb8d025116f85cf2175e51c98d9fb6">clReleaseEvent</a> )&gt; clReleaseEvent_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00118">118</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00570">clReleaseEvent()</a>.</p>

</div>
</div>
<a id="a49d82b362ebf160e65d162d6c9de31b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49d82b362ebf160e65d162d6c9de31b1">&#9670;&nbsp;</a></span>clReleaseKernel_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a9533331a57797c4c4c4187900ff9ae51">clReleaseKernel</a> )&gt; clReleaseKernel_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00101">101</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00872">clReleaseKernel()</a>.</p>

</div>
</div>
<a id="a9385d6637f840d613d72f35a389d1c64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9385d6637f840d613d72f35a389d1c64">&#9670;&nbsp;</a></span>clReleaseMemObject_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#aaa80bcf581a6eb2848468677b3f3cbd1">clReleaseMemObject</a> )&gt; clReleaseMemObject_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00123">123</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00510">clReleaseMemObject()</a>, <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00069">OpenCLMemoryUsage::test_start()</a>, and <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00166">OpenCLMemoryUsage::test_stop()</a>.</p>

</div>
</div>
<a id="a0462afdc2906b59dd0a860c84c8f3d8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0462afdc2906b59dd0a860c84c8f3d8a">&#9670;&nbsp;</a></span>clReleaseProgram_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ae32b736b7255a0549acfe221f83a3197">clReleaseProgram</a> )&gt; clReleaseProgram_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00109">109</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00743">clReleaseProgram()</a>.</p>

</div>
</div>
<a id="ace23e12e64ef551a85b0d0553e2c1999"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace23e12e64ef551a85b0d0553e2c1999">&#9670;&nbsp;</a></span>clRetainCommandBufferKHR_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a945aa317a51cafa77b806560d1e0663e">clRetainCommandBufferKHR</a> )&gt; clRetainCommandBufferKHR_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00146">146</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01145">clRetainCommandBufferKHR()</a>.</p>

</div>
</div>
<a id="a3777a685e4430d6dcdddd73531cc3cc3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3777a685e4430d6dcdddd73531cc3cc3">&#9670;&nbsp;</a></span>clRetainCommandQueue_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ae342be07c62cae5d870ff5796a599e75">clRetainCommandQueue</a> )&gt; clRetainCommandQueue_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00120">120</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00543">clRetainCommandQueue()</a>.</p>

</div>
</div>
<a id="a7d3ddaa28e01b8d4aeef8a5a3ae05f16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d3ddaa28e01b8d4aeef8a5a3ae05f16">&#9670;&nbsp;</a></span>clRetainContext_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#abea285cf4c4715cd284f275725cd1508">clRetainContext</a> )&gt; clRetainContext_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00110">110</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00729">clRetainContext()</a>.</p>

</div>
</div>
<a id="a96cfa134e391cec1fa131849b9dc6648"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96cfa134e391cec1fa131849b9dc6648">&#9670;&nbsp;</a></span>clRetainEvent_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a434f9e0998ebb096bf09a0a6abdd5938">clRetainEvent</a> )&gt; clRetainEvent_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00127">127</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00937">clRetainEvent()</a>.</p>

</div>
</div>
<a id="a70f0c6b172261cc89e5d90239a8b70d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70f0c6b172261cc89e5d90239a8b70d0">&#9670;&nbsp;</a></span>clRetainKernel_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a617b60a00661fe3a03749b6b9913d006">clRetainKernel</a> )&gt; clRetainKernel_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00104">104</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00821">clRetainKernel()</a>.</p>

</div>
</div>
<a id="ab7b31e7922544d4a6325320f08ad2474"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7b31e7922544d4a6325320f08ad2474">&#9670;&nbsp;</a></span>clRetainMemObject_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a2c88e252bef66c05807260b013a725de">clRetainMemObject</a> )&gt; clRetainMemObject_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00122">122</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00496">clRetainMemObject()</a>, <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00069">OpenCLMemoryUsage::test_start()</a>, and <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00166">OpenCLMemoryUsage::test_stop()</a>.</p>

</div>
</div>
<a id="aa9752599bfd3a28d9c34cfb59c8feaf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9752599bfd3a28d9c34cfb59c8feaf3">&#9670;&nbsp;</a></span>clRetainProgram_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#aa0cc01b2f6b15bbab28eb38d6f29f184">clRetainProgram</a> )&gt; clRetainProgram_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00114">114</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00649">clRetainProgram()</a>.</p>

</div>
</div>
<a id="a021f5850b98ba79d84067e762b84aa52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a021f5850b98ba79d84067e762b84aa52">&#9670;&nbsp;</a></span>clSetKernelArg_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a3945f28bb1b23afb00a87801136271e9">clSetKernelArg</a> )&gt; clSetKernelArg_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00100">100</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00482">clSetKernelArg()</a>.</p>

</div>
</div>
<a id="aad5fe0dac5f86adfdda65fcbc2fa7e92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad5fe0dac5f86adfdda65fcbc2fa7e92">&#9670;&nbsp;</a></span>clSetKernelExecInfo_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#aaf342694786e1e468c55431205f36ced">clSetKernelExecInfo</a> )&gt; clSetKernelExecInfo_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00141">141</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01080">clSetKernelExecInfo()</a>.</p>

</div>
</div>
<a id="abf58c6d99585520b40a396a890caa9ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf58c6d99585520b40a396a890caa9ee">&#9670;&nbsp;</a></span>clSVMAlloc_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a3f3b491b813e283ae79a756cb7ae84bd">clSVMAlloc</a> )&gt; clSVMAlloc_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00134">134</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00327">clSVMAlloc()</a>, <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00069">OpenCLMemoryUsage::test_start()</a>, and <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00166">OpenCLMemoryUsage::test_stop()</a>.</p>

</div>
</div>
<a id="adbd557acca5bc0f92a1a7f8ebc26e9ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbd557acca5bc0f92a1a7f8ebc26e9ed">&#9670;&nbsp;</a></span>clSVMFree_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a1412ab782ad4055d71dc9c5a7c4c11e4">clSVMFree</a> )&gt; clSVMFree_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00135">135</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00341">clSVMFree()</a>, <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00069">OpenCLMemoryUsage::test_start()</a>, and <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00166">OpenCLMemoryUsage::test_stop()</a>.</p>

</div>
</div>
<a id="a01ce159b1c9b568493a1bd4f98cd51eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01ce159b1c9b568493a1bd4f98cd51eb">&#9670;&nbsp;</a></span>clUpdateMutableCommandsKHR_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#a1384e99dd308097bc7a2edb202eb91a2">clUpdateMutableCommandsKHR</a> )&gt; clUpdateMutableCommandsKHR_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00152">152</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l01222">clUpdateMutableCommandsKHR()</a>.</p>

</div>
</div>
<a id="a8fd1b20db02f6fb96562ddff20134a53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fd1b20db02f6fb96562ddff20134a53">&#9670;&nbsp;</a></span>clWaitForEvents_ptr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype( <a class="el" href="_open_c_l_8cpp.xhtml#ab01da83b3a9fcd7a69dda12cc721c8f8">clWaitForEvents</a> )&gt; clWaitForEvents_ptr = nullptr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_8h_source.xhtml#l00139">139</a> of file <a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_open_c_l_8cpp_source.xhtml#l00274">clWaitForEvents()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/CL/<a class="el" href="_open_c_l_8h_source.xhtml">OpenCL.h</a></li>
<li>src/core/CL/<a class="el" href="_open_c_l_8cpp_source.xhtml">OpenCL.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml">CLSymbols</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:51 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
