digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="IKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_i_kernel.xhtml",tooltip="Common information for all the kernels."];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="ICLKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_i_c_l_kernel.xhtml",tooltip="Common interface for all the OpenCL kernels."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="CLArgMinMaxLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_arg_min_max_layer_kernel.xhtml",tooltip="Interface for the reduction operation kernel."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="CLBatchNormalizationLayer\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_batch_normalization_layer_kernel.xhtml",tooltip="Interface for the BatchNormalization layer kernel."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="CLBatchToSpaceLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_batch_to_space_layer_kernel.xhtml",tooltip="Interface for the batch to space kernel."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="CLBitwiseKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_bitwise_kernel.xhtml",tooltip="Interface for the bitwise operation kernel."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="CLBoundingBoxTransformKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_bounding_box_transform_kernel.xhtml",tooltip="Interface for the bounding box kernel."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="CLChannelShuffleLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_channel_shuffle_layer_kernel.xhtml",tooltip="Interface for the channel shuffle kernel."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="CLComparisonKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_comparison_kernel.xhtml",tooltip="Interface for the comparison kernel."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="CLComputeAllAnchorsKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_compute_all_anchors_kernel.xhtml",tooltip="Interface for Compute All Anchors kernel."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="CLComputeMeanVariance",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_compute_mean_variance.xhtml",tooltip="Interface for compute Mean and Variance per channel."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="CLDeconvolutionLayerUpsample\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_deconvolution_layer_upsample_kernel.xhtml",tooltip="Interface for the Deconvolution layer kernel on OpenCL."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="CLDepthToSpaceLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_depth_to_space_layer_kernel.xhtml",tooltip="Interface for the depth to space kernel."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="CLDepthwiseConvolutionLayer\lNativeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_depthwise_convolution_layer_native_kernel.xhtml",tooltip="Interface for the kernel to run a MxN depthwise convolution."];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="CLFFTDigitReverseKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_f_f_t_digit_reverse_kernel.xhtml",tooltip="Interface for the digit reverse operation kernel."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="CLFFTRadixStageKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_f_f_t_radix_stage_kernel.xhtml",tooltip="Interface for the FFT radix stage kernel."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="CLFFTScaleKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_f_f_t_scale_kernel.xhtml",tooltip="Interface for the inverse fft scale kernel."];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="CLFillBorderKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_fill_border_kernel.xhtml",tooltip="Interface for filling the border of a kernel."];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="CLFuseBatchNormalization\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_fuse_batch_normalization_kernel.xhtml",tooltip="OpenCL kernel to fuse the batch normalization node to a preceding convolution node."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="CLGatherKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_gather_kernel.xhtml",tooltip="Interface for the kernel to perform tensor reshaping."];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="CLInstanceNormalizationLayer\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_instance_normalization_layer_kernel.xhtml",tooltip="Interface for performing an instance normalization."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="CLL2NormalizeLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_l2_normalize_layer_kernel.xhtml",tooltip="Interface for performing a L2 normalize on a given axis given the square sum of it in this axis."];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="CLMaxUnpoolingLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_max_unpooling_layer_kernel.xhtml",tooltip="Interface for the pooling layer kernel."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="CLMeanStdDevNormalization\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_mean_std_dev_normalization_kernel.xhtml",tooltip="Interface for the kernel to normalize the input 2D tensor across the first dimension with respect to ..."];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="CLNormalizationLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_normalization_layer_kernel.xhtml",tooltip="Interface for the normalization layer kernel."];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="CLNormalizePlanarYUVLayer\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_normalize_planar_y_u_v_layer_kernel.xhtml",tooltip="Interface for the NormalizePlanarYUV layer kernel."];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="CLPadLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_pad_layer_kernel.xhtml",tooltip="Interface for the PadLayer function."];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="CLPriorBoxLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_prior_box_layer_kernel.xhtml",tooltip="Interface for the PriorBox layer kernel."];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="CLQLSTMLayerNormalization\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_q_l_s_t_m_layer_normalization_kernel.xhtml",tooltip="Interface for the kernel to do layer normalization."];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="CLROIAlignLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_r_o_i_align_layer_kernel.xhtml",tooltip="Interface for the RoIAlign kernel."];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="CLROIPoolingLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_r_o_i_pooling_layer_kernel.xhtml",tooltip="Interface for the ROI pooling layer kernel."];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="CLRangeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_range_kernel.xhtml",tooltip="Kernel class for Range."];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="CLReductionOperationKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_reduction_operation_kernel.xhtml",tooltip="Interface for the reduction operation kernel."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="CLReorgLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_reorg_layer_kernel.xhtml",tooltip="OpenCL kernel to perform a reorg layer."];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="CLReverseKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_reverse_kernel.xhtml",tooltip="Interface for the reverse kernel."];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="CLSelectKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_select_kernel.xhtml",tooltip="OpenCL interface for executing the select kernel."];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="CLSpaceToBatchLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_space_to_batch_layer_kernel.xhtml",tooltip="Interface for the space to batch kernel."];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="CLSpaceToDepthLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_space_to_depth_layer_kernel.xhtml",tooltip="Interface for the space to depth kernel."];
  Node1 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="CLStackLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_stack_layer_kernel.xhtml",tooltip="OpenCL kernel to stacks a rank-R tensor into one with rank-(R+1) along the axis dimension."];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="CLStridedSliceKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_strided_slice_kernel.xhtml",tooltip="Interface for the kernel to perform tensor strided slicing."];
  Node1 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="CLTileKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_tile_kernel.xhtml",tooltip="OpenCL kernel to perform a Tile operation."];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="ICLSimpleKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_i_c_l_simple_kernel.xhtml",tooltip="Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output."];
  Node41 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="CLDeconvolutionReshapeOutput\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_l_deconvolution_reshape_output_kernel.xhtml",tooltip="Interface for the OpenCL kernel to be used for reshaping the tensor before returning the result of de..."];
  Node41 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="ICLSimple2DKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_i_c_l_simple2_d_kernel.xhtml",tooltip="Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output."];
  Node43 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="ICLSimple3DKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_i_c_l_simple3_d_kernel.xhtml",tooltip="Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output."];
  Node1 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="ClKernelRuntime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime.xhtml",tooltip="OpenCL runtime to run a single kernel."];
  Node1 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="ClActivationKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_activation_kernel.xhtml",tooltip="Interface for the activation kernel."];
  Node1 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="ClBatchConcatenateKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_batch_concatenate_kernel.xhtml",tooltip="Interface for the batch concatenate kernel."];
  Node1 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="ClCastKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_cast_kernel.xhtml",tooltip="Casts a given tensor to a new type."];
  Node1 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="ClCol2ImKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_col2_im_kernel.xhtml",tooltip="Interface for the col2im reshaping kernel."];
  Node1 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="ClComplexMulKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_complex_mul_kernel.xhtml",tooltip="Interface for the complex pixelwise multiplication kernel."];
  Node1 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="ClConvertFullyConnectedWeights\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_convert_fully_connected_weights_kernel.xhtml",tooltip=" "];
  Node1 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="ClCopyKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_copy_kernel.xhtml",tooltip="OpenCL kernel to perform a copy between two tensors."];
  Node1 -> Node53 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="ClCropKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_crop_kernel.xhtml",tooltip="OpenCL kernel to perform a copy between two tensors."];
  Node1 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="ClDepthConcatenateKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_depth_concatenate_kernel.xhtml",tooltip="Interface for the depth concatenate kernel."];
  Node1 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="ClDequantizeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_dequantize_kernel.xhtml",tooltip="Interface for the dequantization layer kernel."];
  Node1 -> Node56 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="ClDirectConv2dKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_direct_conv2d_kernel.xhtml",tooltip="Interface for the direct convolution kernel."];
  Node1 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="ClDirectConv3dKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_direct_conv3d_kernel.xhtml",tooltip="Interface for the direct convolution 3d kernel."];
  Node1 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="ClElementWiseUnaryKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_element_wise_unary_kernel.xhtml",tooltip="Interface for the elementwise unary operator."];
  Node1 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="ClElementwiseKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_elementwise_kernel.xhtml",tooltip="Interface for an element-wise operation kernel."];
  Node59 -> Node60 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="ClArithmeticKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_arithmetic_kernel.xhtml",tooltip=" "];
  Node59 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="ClLogicalBinaryKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_logical_binary_kernel.xhtml",tooltip=" "];
  Node59 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="ClSaturatedArithmeticKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_saturated_arithmetic_kernel.xhtml",tooltip="Addition operation."];
  Node1 -> Node63 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="ClFillKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_fill_kernel.xhtml",tooltip="Interface for filling the planes of a tensor."];
  Node1 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="ClFloorKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_floor_kernel.xhtml",tooltip="OpenCL kernel to perform a floor operation."];
  Node1 -> Node65 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="ClGemmLowpMatrixMultiply\lNativeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_native_kernel.xhtml",tooltip="OpenCL kernel to multiply matrices with QASYMM8/QASYMM8_SIGNED data type."];
  Node1 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node66 [label="ClGemmLowpMatrixMultiply\lReshapedKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_kernel.xhtml",tooltip="OpenCL kernel to multiply matrices when both the input matrices LHS (src0) and RHS (src1) have been r..."];
  Node1 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node67 [label="ClGemmLowpMatrixMultiply\lReshapedOnlyRhsKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel.xhtml",tooltip="OpenCL kernel to multiply matrices with QASYMM8 data type when only the input matrix RHS (src1) has b..."];
  Node1 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 [label="ClGemmLowpMatrixMultiply\lReshapedOnlyRhsMMULKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel.xhtml",tooltip="OpenCL kernel to multiply matrices with QASYMM8/QASYMM8_SIGNED data types when only the input matrix ..."];
  Node1 -> Node69 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node69 [label="ClGemmLowpOffsetContribution\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_kernel.xhtml",tooltip="OpenCL kernel used to add the offset contribution after the matrix multiplication."];
  Node1 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node70 [label="ClGemmLowpOffsetContribution\lOutputStageKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_output_stage_kernel.xhtml",tooltip="OpenCL kernel used to add the offset contribution after the matrix multiplication and perform the out..."];
  Node1 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node71 [label="ClGemmLowpQuantizeDownInt32\lScaleByFixedPointKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel.xhtml",tooltip="OpenCL kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8/QASYMM8_SIGNE..."];
  Node1 -> Node72 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="ClGemmLowpQuantizeDownInt32\lScaleByFloatKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_quantize_down_int32_scale_by_float_kernel.xhtml",tooltip="OpenCL kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8/QASYMM8_SIGNE..."];
  Node1 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="ClGemmLowpQuantizeDownInt32\lScaleKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_quantize_down_int32_scale_kernel.xhtml",tooltip="OpenCL kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8/QASYMM8_SIGNE..."];
  Node1 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="ClGemmMatrixMultiplyNative\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_native_kernel.xhtml",tooltip="OpenCL kernel to multiply matrices when neither of the input matrices have been reshaped."];
  Node1 -> Node75 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node75 [label="ClGemmMatrixMultiplyReshaped\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_kernel.xhtml",tooltip="OpenCL kernel to multiply matrices when both the input matrices LHS (src0) and RHS (src1) have been r..."];
  Node1 -> Node76 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node76 [label="ClGemmMatrixMultiplyReshaped\lOnlyRhsKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_only_rhs_kernel.xhtml",tooltip="OpenCL kernel to multiply matrices when only the input matrix RHS (src1) has been reshaped."];
  Node1 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node77 [label="ClGemmMatrixMultiplyReshaped\lOnlyRhsMMULKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel.xhtml",tooltip="OpenCL kernel to multiply matrices using MMUL when only the input matrix RHS (src1) has been reshaped..."];
  Node1 -> Node78 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node78 [label="ClGemmReshapeLhsMatrixKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_lhs_matrix_kernel.xhtml",tooltip="OpenCL kernel to reshape the LHS matrix when performing the matrix multiplication."];
  Node1 -> Node79 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node79 [label="ClGemmReshapeRhsMatrixKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_rhs_matrix_kernel.xhtml",tooltip="OpenCL kernel to reshape the RHS matrix when performing the matrix multiplication In particular,..."];
  Node1 -> Node80 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node80 [label="ClHeightConcatenateKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_height_concatenate_kernel.xhtml",tooltip="Interface for the height concatenate kernel."];
  Node1 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node81 [label="ClIm2ColKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_im2_col_kernel.xhtml",tooltip="Interface for the im2col reshape kernel."];
  Node1 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node82 [label="ClIndirectConv2dAddressPrecalculation\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_indirect_conv2d_address_precalculation_kernel.xhtml",tooltip="Interface for the direct convolution kernel."];
  Node1 -> Node83 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node83 [label="ClIndirectConv2dKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_indirect_conv2d_kernel.xhtml",tooltip="Interface for the indirect convolution kernel."];
  Node1 -> Node84 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node84 [label="ClMatMulLowpNativeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_lowp_native_kernel.xhtml",tooltip=" "];
  Node1 -> Node85 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node85 [label="ClMatMulLowpNativeMMULKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_lowp_native_m_m_u_l_kernel.xhtml",tooltip=" "];
  Node1 -> Node86 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node86 [label="ClMatMulNativeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_native_kernel.xhtml",tooltip=" "];
  Node1 -> Node87 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node87 [label="ClMatMulNativeMMULKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_mat_mul_native_m_m_u_l_kernel.xhtml",tooltip=" "];
  Node1 -> Node88 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 [label="ClMulKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_mul_kernel.xhtml",tooltip="Interface for the pixelwise multiplication kernel."];
  Node1 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 [label="ClPermuteKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_permute_kernel.xhtml",tooltip="OpenCL kernel to perform tensor permutation."];
  Node1 -> Node90 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 [label="ClPool2dKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_pool2d_kernel.xhtml",tooltip="Interface for the pooling layer kernel."];
  Node1 -> Node91 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="ClPool3dKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_pool3d_kernel.xhtml",tooltip="Interface for the pooling layer kernel."];
  Node1 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="ClQuantizeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_quantize_kernel.xhtml",tooltip="Interface for the quantization layer kernel."];
  Node1 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="ClReshapeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_reshape_kernel.xhtml",tooltip="Interface for the kernel to perform tensor reshaping."];
  Node1 -> Node94 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="ClScaleKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_scale_kernel.xhtml",tooltip="Interface for the scale kernel."];
  Node1 -> Node95 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node95 [label="ClSoftmaxKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_softmax_kernel.xhtml",tooltip="The CL kernel that performs softmax function."];
  Node1 -> Node96 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="ClTransposeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_transpose_kernel.xhtml",tooltip="OpenCL kernel to transpose a tensor."];
  Node1 -> Node97 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="ClTransposedConvolutionKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_transposed_convolution_kernel.xhtml",tooltip="OpenCL kernel for transposed convolution."];
  Node1 -> Node98 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node98 [label="ClWeightsReshapeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_weights_reshape_kernel.xhtml",tooltip="OpenCL kernel to perform reshaping on the weights used by convolution and locally connected layer."];
  Node1 -> Node99 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node99 [label="ClWidthConcatenate2Tensors\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_width_concatenate2_tensors_kernel.xhtml",tooltip="Interface for the width concatenate kernel of 2 tensors."];
  Node1 -> Node100 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="ClWidthConcatenate4Tensors\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_width_concatenate4_tensors_kernel.xhtml",tooltip="Interface for the width concatenate kernel of 4 tensors."];
  Node1 -> Node101 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="ClWidthConcatenateKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_width_concatenate_kernel.xhtml",tooltip="Interface for the width concatenate kernel."];
  Node1 -> Node102 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 [label="ClWinogradFilterTransform\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_winograd_filter_transform_kernel.xhtml",tooltip="Interface for the Winograd filter transform kernel."];
  Node1 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 [label="ClWinogradInputTransform\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_winograd_input_transform_kernel.xhtml",tooltip="OpenCL kernel to perform Winograd input transform."];
  Node1 -> Node104 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="ClWinogradOutputTransform\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_winograd_output_transform_kernel.xhtml",tooltip="Interface for the Winograd output transform kernel."];
  Node1 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="IClGemmLowpReductionKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_i_cl_gemm_lowp_reduction_kernel.xhtml",tooltip="Common interface for all OpenCL reduction kernels."];
  Node105 -> Node106 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="ClGemmLowpMatrixAReduction\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_a_reduction_kernel.xhtml",tooltip="OpenCL kernel used to compute the row-vectors of sums of all the entries in each row of Matrix A."];
  Node105 -> Node107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="ClGemmLowpMatrixBReduction\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_b_reduction_kernel.xhtml",tooltip="OpenCL kernel used to compute the row-vectors of sums of all the entries in each column of Matrix B."];
  Node0 -> Node108 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="ICPPKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_i_c_p_p_kernel.xhtml",tooltip="Common interface for all kernels implemented in C++."];
  Node108 -> Node109 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="ICpuKernel\< CpuGemmLowpOffset\lContributionKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node109 -> Node110 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node110 [label="CpuGemmLowpOffsetContribution\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_offset_contribution_kernel.xhtml",tooltip="Kernel used to add the offset contribution after CpuGemmLowpMatrixMultiplyKernel."];
  Node108 -> Node111 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node111 [label="ICpuKernel\< CpuMaxUnpooling\lLayerKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node111 -> Node112 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 [label="CpuMaxUnpoolingLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_max_unpooling_layer_kernel.xhtml",tooltip="Interface for the pooling layer kernel."];
  Node108 -> Node113 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node113 [label="ICpuKernel\< CpuGemmLowpQuantize\lDownInt32ToInt16ScaleByFixedPointKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node113 -> Node114 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node114 [label="CpuGemmLowpQuantizeDownInt32\lToInt16ScaleByFixedPointKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel.xhtml",tooltip="Kernel used to quantize down the int32 accumulator values of GEMMLowp to QSYMM16."];
  Node108 -> Node115 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node115 [label="ICpuKernel\< CpuComparison\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node115 -> Node116 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 [label="CpuElementwiseKernel\l\< CpuComparisonKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_kernel.xhtml",tooltip=" "];
  Node116 -> Node117 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 [label="CpuComparisonKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_comparison_kernel.xhtml",tooltip=" "];
  Node108 -> Node118 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node118 [label="ICpuKernel\< CpuTranspose\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node118 -> Node119 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node119 [label="CpuTransposeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_transpose_kernel.xhtml",tooltip="Kernel which transposes the elements of a matrix."];
  Node108 -> Node120 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node120 [label="ICpuKernel\< CpuReshapeKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node120 -> Node121 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 [label="CpuReshapeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_reshape_kernel.xhtml",tooltip="Interface for the kernel to perform tensor reshaping."];
  Node108 -> Node122 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node122 [label="ICpuKernel\< CpuConvertFully\lConnectedWeightsKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node122 -> Node123 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node123 [label="CpuConvertFullyConnected\lWeightsKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_convert_fully_connected_weights_kernel.xhtml",tooltip="Interface to convert the 2D Fully Connected weights from NCHW to NHWC or vice versa."];
  Node108 -> Node124 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 [label="ICpuKernel\< CpuConcatenate\lDepthKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node124 -> Node125 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node125 [label="CpuConcatenateDepthKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_depth_kernel.xhtml",tooltip="Interface for the depth concatenate kernel."];
  Node108 -> Node126 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node126 [label="ICpuKernel\< CpuConcatenate\lBatchKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node126 -> Node127 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node127 [label="CpuConcatenateBatchKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_batch_kernel.xhtml",tooltip="Interface for the batch concatenate kernel."];
  Node108 -> Node128 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node128 [label="ICpuKernel\< CpuWinogradConv2d\lTransformInputKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node128 -> Node129 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node129 [label="CpuWinogradConv2dTransform\lInputKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_input_kernel.xhtml",tooltip=" "];
  Node108 -> Node130 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node130 [label="ICpuKernel\< CpuIm2ColKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node130 -> Node131 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node131 [label="CpuIm2ColKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_im2_col_kernel.xhtml",tooltip="Interface for the im2col reshape kernel."];
  Node108 -> Node132 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node132 [label="ICpuKernel\< CpuCopyKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node132 -> Node133 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 [label="CpuCopyKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_copy_kernel.xhtml",tooltip="Kernel to perform a copy between two tensors."];
  Node108 -> Node134 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node134 [label="ICpuKernel\< CpuComplexMul\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node134 -> Node135 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node135 [label="CpuComplexMulKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_complex_mul_kernel.xhtml",tooltip="Interface for the complex pixelwise multiplication kernel."];
  Node108 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="ICpuKernel\< CpuAddKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node136 -> Node137 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="CpuAddKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml",tooltip="Interface for the kernel to perform addition between two tensors."];
  Node108 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="ICpuKernel\< CpuGemmTranspose1x\lWKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node138 -> Node139 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 [label="CpuGemmTranspose1xWKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_transpose1x_w_kernel.xhtml",tooltip="Kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / element ..."];
  Node108 -> Node140 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node140 [label="ICpuKernel\< CpuDirectConv2d\lOutputStageKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node140 -> Node141 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node141 [label="CpuDirectConv2dOutputStage\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv2d_output_stage_kernel.xhtml",tooltip="Kernel to accumulate the biases, if provided, or downscale in case of quantized input."];
  Node108 -> Node142 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node142 [label="ICpuKernel\< CpuCol2ImKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node142 -> Node143 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node143 [label="CpuCol2ImKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_col2_im_kernel.xhtml",tooltip="Kernel to perform col2im reshaping."];
  Node108 -> Node144 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 [label="ICpuKernel\< CpuCastKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node144 -> Node145 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node145 [label="CpuCastKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml",tooltip="Casts a given tensor to a new type."];
  Node108 -> Node146 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node146 [label="ICpuKernel\< CpuQuantizeKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node146 -> Node147 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 [label="CpuQuantizeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_quantize_kernel.xhtml",tooltip="Interface for the quantization layer kernel."];
  Node108 -> Node148 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node148 [label="ICpuKernel\< CpuFillKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node148 -> Node149 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node149 [label="CpuFillKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_fill_kernel.xhtml",tooltip="Kernel for filling a tensor with a given constant value."];
  Node108 -> Node150 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 [label="ICpuKernel\< CpuDequantize\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node150 -> Node151 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node151 [label="CpuDequantizeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_dequantize_kernel.xhtml",tooltip="Interface for the dequantization layer kernel."];
  Node108 -> Node152 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 [label="ICpuKernel\< CpuFloorKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node152 -> Node153 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node153 [label="CpuFloorKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_floor_kernel.xhtml",tooltip="Cpu accelarated kernel to perform a floor operation."];
  Node108 -> Node154 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node154 [label="ICpuKernel\< CpuGemmLowpQuantize\lDownInt32ScaleKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node154 -> Node155 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node155 [label="CpuGemmLowpQuantizeDownInt32\lScaleKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_scale_kernel.xhtml",tooltip="Kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8/QASYMM8_SIGNED."];
  Node108 -> Node156 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 [label="ICpuKernel\< CpuDirectConv3d\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node156 -> Node157 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 [label="CpuDirectConv3dKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv3d_kernel.xhtml",tooltip="Interface for the kernel to perform 3D Direct Convolution Layer."];
  Node108 -> Node158 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 [label="ICpuKernel\< CpuGemmLowpOffset\lContributionOutputStageKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node158 -> Node159 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node159 [label="CpuGemmLowpOffsetContribution\lOutputStageKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_offset_contribution_output_stage_kernel.xhtml",tooltip="Kernel used to add the offset contribution and perform the output stage after CpuGemmLowpMatrixMultip..."];
  Node108 -> Node160 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node160 [label="ICpuKernel\< CpuDirectConv2d\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node160 -> Node161 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node161 [label="CpuDirectConv2dKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_direct_conv2d_kernel.xhtml",tooltip="Interface for the kernel to perform Direct Convolution Layer."];
  Node108 -> Node162 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 [label="ICpuKernel\< CpuConcatenate\lWidthKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node162 -> Node163 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node163 [label="CpuConcatenateWidthKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_width_kernel.xhtml",tooltip="Interface for the width concatenate kernel."];
  Node108 -> Node164 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 [label="ICpuKernel\< CpuWeightsReshape\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node164 -> Node165 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node165 [label="CpuWeightsReshapeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_weights_reshape_kernel.xhtml",tooltip="Kernel to perform reshaping on the weights used by convolution and locally connected layer."];
  Node108 -> Node166 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node166 [label="ICpuKernel\< CpuSubKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node166 -> Node167 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node167 [label="CpuSubKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_sub_kernel.xhtml",tooltip="Interface for the kernel to perform subtraction between two tensors."];
  Node108 -> Node168 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node168 [label="ICpuKernel\< CpuPool3dKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node168 -> Node169 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node169 [label="CpuPool3dKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool3d_kernel.xhtml",tooltip="Interface for the kernel to perform Pooling 3D."];
  Node108 -> Node170 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node170 [label="ICpuKernel\< CpuElementwise\lUnaryKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node170 -> Node171 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node171 [label="CpuElementwiseUnaryKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_unary_kernel.xhtml",tooltip="Interface for an element-wise unary operation kernel."];
  Node108 -> Node172 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node172 [label="ICpuKernel\< CpuDepthwise\lConv2dAssemblyWrapperKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node172 -> Node173 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node173 [label="CpuDepthwiseConv2dAssembly\lWrapperKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_depthwise_conv2d_assembly_wrapper_kernel.xhtml",tooltip="This class is a wrapper for the depthwise convolution assembly kernels."];
  Node108 -> Node174 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node174 [label="ICpuKernel\< CpuActivation\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node174 -> Node175 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node175 [label="CpuActivationKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_activation_kernel.xhtml",tooltip="Interface for the activation kernel."];
  Node108 -> Node176 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node176 [label="ICpuKernel\< CpuPool2dKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node176 -> Node177 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node177 [label="CpuPool2dKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool2d_kernel.xhtml",tooltip="Interface for the pooling layer kernel."];
  Node108 -> Node178 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node178 [label="ICpuKernel\< CpuPool2dAssembly\lWrapperKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node178 -> Node179 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node179 [label="CpuPool2dAssemblyWrapper\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_pool2d_assembly_wrapper_kernel.xhtml",tooltip="This class is a wrapper for the assembly kernels."];
  Node108 -> Node180 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node180 [label="ICpuKernel\< CpuScaleKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node180 -> Node181 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node181 [label="CpuScaleKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_scale_kernel.xhtml",tooltip="Arm(R) Neon(TM) kernel to perform scaling on a tensor."];
  Node108 -> Node182 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node182 [label="ICpuKernel\< CpuGemmLowpMatrix\lMultiplyKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node182 -> Node183 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node183 [label="CpuGemmLowpMatrixMultiply\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_multiply_kernel.xhtml",tooltip="Kernel to multiply matrices."];
  Node108 -> Node184 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node184 [label="ICpuKernel\< CpuGemmInterleave4x4\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node184 -> Node185 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node185 [label="CpuGemmInterleave4x4Kernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_interleave4x4_kernel.xhtml",tooltip="Kernel to interleave the elements of a matrix."];
  Node108 -> Node186 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node186 [label="ICpuKernel\< CpuArithmetic\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node186 -> Node187 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node187 [label="CpuElementwiseKernel\l\< CpuArithmeticKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_kernel.xhtml",tooltip=" "];
  Node187 -> Node188 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node188 [label="CpuArithmeticKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_arithmetic_kernel.xhtml",tooltip=" "];
  Node188 -> Node189 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node189 [label="CpuDivisionKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_division_kernel.xhtml",tooltip=" "];
  Node188 -> Node190 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node190 [label="CpuPowerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_power_kernel.xhtml",tooltip=" "];
  Node108 -> Node191 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node191 [label="ICpuKernel\< CpuAddMulAdd\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node191 -> Node192 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node192 [label="CpuAddMulAddKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_mul_add_kernel.xhtml",tooltip="Interface for the kernel to perform addition between two tensors."];
  Node108 -> Node193 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node193 [label="ICpuKernel\< CpuGemmLowpQuantize\lDownInt32ToInt8ScaleByFixedPointKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node193 -> Node194 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node194 [label="CpuGemmLowpQuantizeDownInt32\lToInt8ScaleByFixedPointKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel.xhtml",tooltip="Kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8_SIGNED."];
  Node108 -> Node195 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node195 [label="ICpuKernel\< CpuGemmLowpMatrix\lAReductionKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node195 -> Node196 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node196 [label="CpuGemmLowpMatrixAReduction\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml",tooltip="Kernel used to compute the row-vectors of sums of all the entries in each row of Matrix A."];
  Node108 -> Node197 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node197 [label="ICpuKernel\< CpuConvertQuantized\lSignednessKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node197 -> Node198 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node198 [label="CpuConvertQuantizedSignedness\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_convert_quantized_signedness_kernel.xhtml",tooltip="Kernel to convert asymmetric signed to asymmetric signed and vice-versa."];
  Node108 -> Node199 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node199 [label="ICpuKernel\< CpuConcatenate\lHeightKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node199 -> Node200 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node200 [label="CpuConcatenateHeightKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_concatenate_height_kernel.xhtml",tooltip="Interface for the height concatenate kernel."];
  Node108 -> Node201 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node201 [label="ICpuKernel\< CpuGemmMatrix\lAdditionKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node201 -> Node202 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node202 [label="CpuGemmMatrixAdditionKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_matrix_addition_kernel.xhtml",tooltip="Kernel to perform the in-place matrix addition between 2 matrices taking into account that the second..."];
  Node108 -> Node203 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node203 [label="ICpuKernel\< CpuGemmLowpQuantize\lDownInt32ToUint8ScaleByFixedPointKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node203 -> Node204 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node204 [label="CpuGemmLowpQuantizeDownInt32\lToUint8ScaleByFixedPointKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel.xhtml",tooltip="Kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8."];
  Node108 -> Node205 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node205 [label="ICpuKernel\< CpuGemmLowpMatrix\lBReductionKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node205 -> Node206 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node206 [label="CpuGemmLowpMatrixBReduction\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_b_reduction_kernel.xhtml",tooltip="Kernel used to compute the row-vectors of sums of all the entries in each column of Matrix B."];
  Node108 -> Node207 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node207 [label="ICpuKernel\< CpuDepthwise\lConv2dNativeKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node207 -> Node208 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node208 [label="CpuDepthwiseConv2dNative\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_depthwise_conv2d_native_kernel.xhtml",tooltip="Interface for the kernel to run a depthwise convolution native on a tensor."];
  Node108 -> Node209 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node209 [label="ICpuKernel\< CpuSoftmaxKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node209 -> Node210 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node210 [label="CpuSoftmaxKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_softmax_kernel.xhtml",tooltip="Interface for softmax computation."];
  Node108 -> Node211 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node211 [label="ICpuKernel\< CpuWinogradConv2d\lTransformOutputKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node211 -> Node212 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node212 [label="CpuWinogradConv2dTransform\lOutputKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d_transform_output_kernel.xhtml",tooltip=" "];
  Node108 -> Node213 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node213 [label="ICpuKernel\< CpuPermuteKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node213 -> Node214 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node214 [label="CpuPermuteKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_permute_kernel.xhtml",tooltip="Kernel to perform tensor permutation given a permutation vector."];
  Node108 -> Node215 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node215 [label="ICpuKernel\< CpuMulKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node215 -> Node216 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node216 [label="CpuMulKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_mul_kernel.xhtml",tooltip="Interface for the kernel to perform multiplication between two tensors."];
  Node108 -> Node217 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node217 [label="ICpuKernel\< CpuGemmMatrix\lMultiplyKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node217 -> Node218 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node218 [label="CpuGemmMatrixMultiplyKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_matrix_multiply_kernel.xhtml",tooltip="Kernel to multiply two input matrices \"A\" and \"B\"."];
  Node108 -> Node219 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node219 [label="CPPBoxWithNonMaximaSuppression\lLimitKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_p_p_box_with_non_maxima_suppression_limit_kernel.xhtml",tooltip="CPP kernel to perform computation of BoxWithNonMaximaSuppressionLimit."];
  Node108 -> Node220 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node220 [label="CPPNonMaximumSuppression\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_p_p_non_maximum_suppression_kernel.xhtml",tooltip="CPP Function to perform non maximum suppression on the bounding boxes and scores."];
  Node108 -> Node221 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node221 [label="CPPPermuteKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_p_p_permute_kernel.xhtml",tooltip="CPP kernel to perform tensor permutation."];
  Node108 -> Node222 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node222 [label="CPPTopKVKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_p_p_top_k_v_kernel.xhtml",tooltip="CPP kernel to perform tensor TopKV operation."];
  Node108 -> Node223 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node223 [label="CPPUpsampleKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_c_p_p_upsample_kernel.xhtml",tooltip="CPP kernel to perform tensor upsample."];
  Node108 -> Node224 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node224 [label="NEBatchNormalizationLayer\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_batch_normalization_layer_kernel.xhtml",tooltip="Interface for the batch normalization layer kernel."];
  Node108 -> Node225 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node225 [label="NEBatchToSpaceLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_batch_to_space_layer_kernel.xhtml",tooltip="Interface for the batch to space kernel."];
  Node108 -> Node226 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node226 [label="NEBitwiseAndKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_bitwise_and_kernel.xhtml",tooltip="Interface for the kernel to perform bitwise AND between XY-planes of two tensors."];
  Node108 -> Node227 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node227 [label="NEBitwiseNotKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_bitwise_not_kernel.xhtml",tooltip="Interface for the kernel to perform bitwise NOT operation."];
  Node108 -> Node228 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node228 [label="NEBitwiseOrKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_bitwise_or_kernel.xhtml",tooltip="Interface for the kernel to perform bitwise inclusive OR between two tensors."];
  Node108 -> Node229 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node229 [label="NEBitwiseXorKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_bitwise_xor_kernel.xhtml",tooltip="Interface for the kernel to perform bitwise exclusive OR (XOR) between two tensors."];
  Node108 -> Node230 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node230 [label="NEBoundingBoxTransformKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_bounding_box_transform_kernel.xhtml",tooltip="Interface for the bounding box kernel."];
  Node108 -> Node231 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node231 [label="NEChannelShuffleLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_channel_shuffle_layer_kernel.xhtml",tooltip="Interface for the channel shuffle kernel."];
  Node108 -> Node232 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node232 [label="NECol2ImKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_col2_im_kernel.xhtml",tooltip="Kernel to perform col2im reshaping."];
  Node108 -> Node233 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node233 [label="NEComputeAllAnchorsKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_compute_all_anchors_kernel.xhtml",tooltip="Interface for Compute All Anchors kernel."];
  Node108 -> Node234 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node234 [label="NECropKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_crop_kernel.xhtml",tooltip="Interface for the kernel to perform tensor cropping."];
  Node108 -> Node235 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node235 [label="NEDepthToSpaceLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_depth_to_space_layer_kernel.xhtml",tooltip="Interface for the depth to space kernel."];
  Node108 -> Node236 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node236 [label="NEFFTDigitReverseKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_f_f_t_digit_reverse_kernel.xhtml",tooltip="Interface for the digit reverse operation kernel."];
  Node108 -> Node237 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node237 [label="NEFFTRadixStageKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_f_f_t_radix_stage_kernel.xhtml",tooltip="Interface for the FFT kernel."];
  Node108 -> Node238 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node238 [label="NEFFTScaleKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_f_f_t_scale_kernel.xhtml",tooltip="Interface for the inverse fft scale kernel."];
  Node108 -> Node239 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node239 [label="NEFillBorderKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_fill_border_kernel.xhtml",tooltip="Interface for the kernel to fill borders."];
  Node108 -> Node240 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node240 [label="NEFuseBatchNormalization\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_fuse_batch_normalization_kernel.xhtml",tooltip="OpenNE kernel to fuse the batch normalization node to a preceding convolution node."];
  Node108 -> Node241 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node241 [label="NEGatherKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_gather_kernel.xhtml",tooltip="Kernel to perform gather operation."];
  Node108 -> Node242 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node242 [label="NEInstanceNormalizationLayer\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_instance_normalization_layer_kernel.xhtml",tooltip="Interface for performing an instance normalization."];
  Node108 -> Node243 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node243 [label="NEL2NormalizeLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_l2_normalize_layer_kernel.xhtml",tooltip="Interface for performing a L2 normalize on a given axis given the square sum of it in this axis."];
  Node108 -> Node244 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node244 [label="NEMeanStdDevNormalization\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_mean_std_dev_normalization_kernel.xhtml",tooltip="Interface for the kernel to normalize the input 2D tensor across the first dimension with respect to ..."];
  Node108 -> Node245 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node245 [label="NENormalizationLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_normalization_layer_kernel.xhtml",tooltip="Interface for the normalization layer kernel."];
  Node108 -> Node246 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node246 [label="NEPadLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_pad_layer_kernel.xhtml",tooltip="Basic kernel to pad the input tensor given padding information."];
  Node108 -> Node247 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node247 [label="NEPriorBoxLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_prior_box_layer_kernel.xhtml",tooltip="Interface for the kernel to calculate prior boxes."];
  Node108 -> Node248 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node248 [label="NEQLSTMLayerNormalization\lKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml",tooltip="Kernel to perform layer normalization for QLSTM."];
  Node108 -> Node249 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node249 [label="NEROIAlignLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_r_o_i_align_layer_kernel.xhtml",tooltip="Interface for the RoIAlign kernel."];
  Node108 -> Node250 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node250 [label="NEROIPoolingLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_r_o_i_pooling_layer_kernel.xhtml",tooltip="Interface for the ROI pooling layer kernel."];
  Node108 -> Node251 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node251 [label="NERangeKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_range_kernel.xhtml",tooltip="Kernel class for Range."];
  Node108 -> Node252 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node252 [label="NEReductionOperationKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml",tooltip="Kernel to perform a reduction operation."];
  Node108 -> Node253 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node253 [label="NEReorgLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_reorg_layer_kernel.xhtml",tooltip="Interface for the kernel to perform tensor re-organization."];
  Node108 -> Node254 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node254 [label="NEReverseKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_reverse_kernel.xhtml",tooltip="Interface for the reverse layer kernel."];
  Node108 -> Node255 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node255 [label="NESelectKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_select_kernel.xhtml",tooltip="Interface for the select kernel."];
  Node108 -> Node256 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node256 [label="NESpaceToBatchLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_space_to_batch_layer_kernel.xhtml",tooltip="Interface for the space to batch kernel."];
  Node108 -> Node257 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node257 [label="NESpaceToDepthLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_space_to_depth_layer_kernel.xhtml",tooltip="Interface for the space to depth kernel."];
  Node108 -> Node258 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node258 [label="NEStackLayerKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_stack_layer_kernel.xhtml",tooltip="Basic kernel to stack a rank-R tensor into one with rank-(R+1) along the axis dimension."];
  Node108 -> Node259 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node259 [label="NEStridedSliceKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_strided_slice_kernel.xhtml",tooltip="Interface for the kernel to perform tensor strided slicing."];
  Node108 -> Node260 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node260 [label="NETileKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1_n_e_tile_kernel.xhtml",tooltip="Basic kernel to perform a tile operation."];
  Node108 -> Node261 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node261 [label="ICpuKernel\< Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml",tooltip=" "];
  Node261 -> Node262 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node262 [label="CpuElementwiseKernel\l\< Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernels_1_1_cpu_elementwise_kernel.xhtml",tooltip="Interface for an element-wise operation kernel."];
  Node108 -> Node263 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node263 [label="CpuGemmAssemblyWrapperKernel\l\< TypeInput, TypeOutput \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml",tooltip="This class is a wrapper for the assembly kernels."];
  Node108 -> Node264 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node264 [label="NELogicalKernel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1kernels_1_1_n_e_logical_kernel.xhtml",tooltip="Interface for the kernel to perform logical operations between two tensors."];
}
