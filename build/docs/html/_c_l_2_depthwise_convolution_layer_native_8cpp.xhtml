<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/DepthwiseConvolutionLayerNative.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_2_depthwise_convolution_layer_native_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">DepthwiseConvolutionLayerNative.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_kernel_descriptors_8h_source.xhtml">arm_compute/core/KernelDescriptors.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_shape_calculator_8h_source.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8h_source.xhtml">src/core/CL/kernels/CLDepthwiseConvolutionLayerNativeKernel.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_2_helper_8h_source.xhtml">tests/CL/Helper.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/DepthwiseConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_depthwise_convolution_layer_native_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2024 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:aa62cf570db449bade2bf7d2e1cce1fd0"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa62cf570db449bade2bf7d2e1cce1fd0">CLDepthwiseConvolutionLayerNative</a> = CLSynthetizeFunction&lt; CLDepthwiseConvolutionLayerNativeKernel &gt;</td></tr>
<tr class="separator:aa62cf570db449bade2bf7d2e1cce1fd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fcc896e6354517fe816312e925af65b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5fcc896e6354517fe816312e925af65b"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5fcc896e6354517fe816312e925af65b">CLDepthwiseConvolutionLayerNativeFixture</a> = DepthwiseConvolutionLayerNativeConfigurableValidationFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayerNative, T &gt;</td></tr>
<tr class="separator:a5fcc896e6354517fe816312e925af65b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a153e212621c93fc968daaa7aa53b7780"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a153e212621c93fc968daaa7aa53b7780">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerNativeFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(width_values_precommit, height_values_precommit), channel_values_precommit), batch_values_precommit), kernel_sz_values_precommit), make(&quot;depth_multiplier&quot;, 1)), dilation_values), stride_values), padding_valid_values), make(&quot;DataType&quot;, DataType::F32)), data_layout_values), act_values), n0_values_precommit), make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:a153e212621c93fc968daaa7aa53b7780"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade9ee078de163f466fd99538a197a26e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ade9ee078de163f466fd99538a197a26e">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerNativeFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(width_values_nightly, height_values_nightly), channel_values_nightly), batch_values_nightly), kernel_sz_values_nightly), make(&quot;depth_multiplier&quot;, 1)), dilation_values), stride_values), padding_valid_values_nightly), make(&quot;DataType&quot;, DataType::F32)), data_layout_values), make(&quot;Activation&quot;, { ActivationLayerInfo() })), n0_values_nightly), make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:ade9ee078de163f466fd99538a197a26e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48571a2dd16c30c86c0e02f8213f6876"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a48571a2dd16c30c86c0e02f8213f6876">FIXTURE_DATA_TEST_CASE_NEW</a> (RunActivations, CLDepthwiseConvolutionLayerNativeFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(make(&quot;width&quot;, { 33U }), height_values_precommit, channel_values_precommit, make(&quot;batch&quot;, { 2U }), make(&quot;kernel_size&quot;, { Size2D(5U, 5U) }), make(&quot;depth_multiplier&quot;, 1), make(&quot;dilation&quot;, Size2D(3U, 3U)), make(&quot;stride&quot;, Size2D(3U, 2U)), padding_valid_values_nightly, make(&quot;DataType&quot;, DataType::F32), data_layout_values, activations_rest, n0_values_precommit, make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:a48571a2dd16c30c86c0e02f8213f6876"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbe9907e5b3a78f9c54b49a05bdd8b26"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acbe9907e5b3a78f9c54b49a05bdd8b26">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerNativeFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(width_values_precommit, height_values_precommit), channel_values_export_to_cl_image_precommit), batch_values_precommit), kernel_sz_values_precommit), make(&quot;depth_multiplier&quot;, 1)), dilation_values), stride_values), padding_valid_values), make(&quot;DataType&quot;, DataType::F32)), data_layout_values), act_values), n0_values_export_to_cl_image_precommit), make(&quot;ExportToCLImage&quot;, true)))</td></tr>
<tr class="separator:acbe9907e5b3a78f9c54b49a05bdd8b26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f1b41497116ff6d31c42e09defa7978"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8f1b41497116ff6d31c42e09defa7978">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerNativeFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(width_values_nightly, height_values_nightly), channel_values_export_to_cl_image_nightly), batch_values_nightly), kernel_sz_values_nightly), make(&quot;depth_multiplier&quot;, 1)), dilation_values), stride_values), padding_valid_values_nightly), make(&quot;DataType&quot;, DataType::F32)), data_layout_values), make(&quot;Activation&quot;, { ActivationLayerInfo() })), n0_values_export_to_cl_image_nightly), make(&quot;ExportToCLImage&quot;, true)))</td></tr>
<tr class="separator:a8f1b41497116ff6d31c42e09defa7978"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6777fd8526431aa2623f6d13d03a45cd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6777fd8526431aa2623f6d13d03a45cd">combine</a> (combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(width_values_precommit, height_values_precommit), channel_values_precommit), batch_values_precommit), kernel_sz_values_precommit), make(&quot;depth_multiplier&quot;, 1)), dilation_values), stride_values), padding_valid_values), make(&quot;DataType&quot;, DataType::F16)), data_layout_values), act_values), n0_values_precommit), make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:a6777fd8526431aa2623f6d13d03a45cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72e599f13565333edcc7c61afc0cc97f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a72e599f13565333edcc7c61afc0cc97f">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerNativeFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;width&quot;, { 47U }), make(&quot;height&quot;, { 39U })), make(&quot;channels&quot;, { 19U })), batch_values_nightly), make(&quot;kernel_size&quot;, { Size2D(5U, 5U) })), make(&quot;depth_multiplier&quot;, 1)), make(&quot;dilation&quot;, { Size2D(3U, 3U) })), make(&quot;stride&quot;, { Size2D(3U, 2U) })), padding_valid_values_nightly), make(&quot;DataType&quot;, DataType::F16)), data_layout_values), make(&quot;Activation&quot;, { ActivationLayerInfo() })), n0_values_nightly), make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:a72e599f13565333edcc7c61afc0cc97f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa21d7ee8af4e3a791e7ca090d2275e87"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa21d7ee8af4e3a791e7ca090d2275e87">FIXTURE_DATA_TEST_CASE_NEW</a> (RunActivations, CLDepthwiseConvolutionLayerNativeFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(make(&quot;width&quot;, { 33U }), height_values_precommit, channel_values_precommit, make(&quot;batch&quot;, { 2U }), make(&quot;kernel_size&quot;, { Size2D(5U, 5U) }), make(&quot;depth_multiplier&quot;, 4), make(&quot;dilation&quot;, Size2D(3U, 3U)), make(&quot;stride&quot;, Size2D(3U, 2U)), padding_valid_values_nightly, make(&quot;DataType&quot;, DataType::F16), data_layout_values, activations_rest, n0_values_precommit, make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:aa21d7ee8af4e3a791e7ca090d2275e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8fccf583229e4cce9abba263710fedc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad8fccf583229e4cce9abba263710fedc">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerNativeFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(width_values_precommit, height_values_precommit), channel_values_export_to_cl_image_precommit), batch_values_precommit), kernel_sz_values_precommit), make(&quot;depth_multiplier&quot;, 1)), dilation_values), stride_values), padding_valid_values), make(&quot;DataType&quot;, DataType::F16)), data_layout_values), act_values), n0_values_export_to_cl_image_precommit), make(&quot;ExportToCLImage&quot;, true)))</td></tr>
<tr class="separator:ad8fccf583229e4cce9abba263710fedc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a123924fd9511f78d74ad6693b098278f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a123924fd9511f78d74ad6693b098278f">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerNativeFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;width&quot;, { 47U }), make(&quot;height&quot;, { 39U })), channel_values_export_to_cl_image_nightly), batch_values_nightly), make(&quot;kernel_size&quot;, { Size2D(5U, 5U) })), make(&quot;depth_multiplier&quot;, 1)), make(&quot;dilation&quot;, { Size2D(3U, 3U) })), make(&quot;stride&quot;, { Size2D(3U, 2U) })), padding_valid_values_nightly), make(&quot;DataType&quot;, DataType::F16)), data_layout_values), make(&quot;Activation&quot;, { ActivationLayerInfo() })), n0_values_export_to_cl_image_nightly), make(&quot;ExportToCLImage&quot;, true)))</td></tr>
<tr class="separator:a123924fd9511f78d74ad6693b098278f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7a7f0bb2952f41d64dd963f6e9cda02"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac7a7f0bb2952f41d64dd963f6e9cda02">combine</a> (combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;width&quot;, { 33U }), height_values_precommit), channel_values_precommit), batch_values_precommit), kernel_sz_values_precommit), depth_multiplier_values), dilation_values), stride_values), padding_valid_values), make(&quot;DataType&quot;, DataType::F32)), data_layout_values), act_values), make(&quot;N0&quot;, 1)), make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:ac7a7f0bb2952f41d64dd963f6e9cda02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fd07133b607b1345c68c3240c1f0481"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2fd07133b607b1345c68c3240c1f0481">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerNativeFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;width&quot;, { 53U }), height_values_nightly), channel_values_nightly), batch_values_nightly), kernel_sz_values_nightly), depth_multiplier_values), dilation_values), stride_values), padding_valid_values_nightly), make(&quot;DataType&quot;, DataType::F32)), data_layout_values), make(&quot;Activation&quot;, { ActivationLayerInfo() })), make(&quot;N0&quot;, 1)), make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:a2fd07133b607b1345c68c3240c1f0481"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64266cb0a89af9688fd7bdaedbcf1109"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64266cb0a89af9688fd7bdaedbcf1109">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerNativeFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;width&quot;, { 33U }), height_values_precommit), channel_values_precommit), batch_values_precommit), kernel_sz_values_precommit), make(&quot;depth_multiplier&quot;, 2)), dilation_values), stride_values), padding_valid_values), make(&quot;DataType&quot;, DataType::F32)), data_layout_values), act_values), make(&quot;N0&quot;, {2})), make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:a64266cb0a89af9688fd7bdaedbcf1109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a278550fa80beacba2a51652e849675af"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a278550fa80beacba2a51652e849675af">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerNativeFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;width&quot;, { 33U }), height_values_precommit), channel_values_precommit), batch_values_precommit), kernel_sz_values_precommit), make(&quot;depth_multiplier&quot;, 4)), dilation_values), stride_values), padding_valid_values), make(&quot;DataType&quot;, DataType::F32)), data_layout_values), act_values), make(&quot;N0&quot;, {4})), make(&quot;ExportToCLImage&quot;, true)))</td></tr>
<tr class="separator:a278550fa80beacba2a51652e849675af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b34bf7785b50080cd04bd0be1f7a511"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b34bf7785b50080cd04bd0be1f7a511">combine</a> (combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;width&quot;, { 33U }), height_values_precommit), channel_values_precommit), batch_values_precommit), kernel_sz_values_precommit), depth_multiplier_values), dilation_values), stride_values), padding_valid_values), make(&quot;DataType&quot;, DataType::F16)), data_layout_values), act_values), make(&quot;N0&quot;, 1)), make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:a3b34bf7785b50080cd04bd0be1f7a511"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae918ffad7cd75ec5fda0a0ec29c5c46d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae918ffad7cd75ec5fda0a0ec29c5c46d">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerNativeFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;width&quot;, { 53U }), height_values_nightly), channel_values_nightly), batch_values_nightly), kernel_sz_values_nightly), depth_multiplier_values), dilation_values), stride_values), padding_valid_values_nightly), make(&quot;DataType&quot;, DataType::F16)), data_layout_values), make(&quot;Activation&quot;, { ActivationLayerInfo() })), make(&quot;N0&quot;, 1)), make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:ae918ffad7cd75ec5fda0a0ec29c5c46d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a094ec54549cb96b6a0d0237f469aea4b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a094ec54549cb96b6a0d0237f469aea4b">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerNativeFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;width&quot;, { 33U }), height_values_precommit), channel_values_precommit), batch_values_precommit), kernel_sz_values_precommit), make(&quot;depth_multiplier&quot;, 2)), dilation_values), stride_values), padding_valid_values), make(&quot;DataType&quot;, DataType::F16)), data_layout_values), act_values), make(&quot;N0&quot;, {2})), make(&quot;ExportToCLImage&quot;, false)))</td></tr>
<tr class="separator:a094ec54549cb96b6a0d0237f469aea4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0253092975f777d6c0a65c1ed256c0f1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0253092975f777d6c0a65c1ed256c0f1">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerNativeFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(make(&quot;width&quot;, { 33U }), height_values_precommit), channel_values_precommit), batch_values_precommit), kernel_sz_values_precommit), make(&quot;depth_multiplier&quot;, 4)), dilation_values), stride_values), padding_valid_values), make(&quot;DataType&quot;, DataType::F16)), data_layout_values), act_values), make(&quot;N0&quot;, {4})), make(&quot;ExportToCLImage&quot;, true)))</td></tr>
<tr class="separator:a0253092975f777d6c0a65c1ed256c0f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ab01d58883bfbc7a4dd82ecc1ae43ade2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab01d58883bfbc7a4dd82ecc1ae43ade2">CLDepthwiseConvolutionLayerNativeFixture&lt; half &gt;</a></td></tr>
<tr class="separator:ab01d58883bfbc7a4dd82ecc1ae43ade2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd1977350856b00c3bc79fe1f5b51655"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afd1977350856b00c3bc79fe1f5b51655">CLDepthwiseConvolutionLayerNativeFixture&lt; float &gt;</a></td></tr>
<tr class="separator:afd1977350856b00c3bc79fe1f5b51655"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_depthwise_convolution_layer_native_8cpp.xhtml">DepthwiseConvolutionLayerNative.cpp</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:50 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
