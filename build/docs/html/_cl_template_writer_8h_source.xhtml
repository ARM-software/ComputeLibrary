<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateWriter.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cl_template_writer_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClTemplateWriter.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_template_writer_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef SRC_DYNAMIC_FUSION_SKETCH_GPU_TEMPLATE_WRITER_CL_CLTEMPLATEWRITER</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define SRC_DYNAMIC_FUSION_SKETCH_GPU_TEMPLATE_WRITER_CL_CLTEMPLATEWRITER</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_argument_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuKernelArgument.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_component_group_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuKernelComponentGroup.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_gpu_kernel_writer_8h.xhtml">src/dynamic_fusion/sketch/gpu/IGpuKernelWriter.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_variable_table_8h.xhtml">src/dynamic_fusion/sketch/gpu/template_writer/GpuKernelVariableTable.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>experimental</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">/** Use a templated-string-based method to write kernel code</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> *  It stitches the component code templates together based on the valid fusion configuration.</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> *  It then instantiates the actual kernel code from the template and the generated tag lookup table.</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml">   44</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml">ClTemplateWriter</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml">IGpuKernelWriter</a></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /** Instantiates a kernel code string from the kernel code template</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     * @note: some tags can be unused since they could be used only for the macros, or only for the component code</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     * @param[in] code_template Kernel code template</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">     * @param[in] tags          Tag lookup table</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     * @return std::string  Instantiated kernel string</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">static</span> std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#aac83b0f536927c6d26ef42c12b9232d3">replace_tags</a>(<span class="keyword">const</span> std::string &amp;code_template, <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> &amp;tags);<span class="comment"></span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">    /** Default constructor */</span></div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#ab1cb9da0b5026a16d86b0f19835f870f">   57</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#ab1cb9da0b5026a16d86b0f19835f870f">ClTemplateWriter</a>() = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     * @param[in] components Kernel component group from which the kernel will be generated</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#ab1cb9da0b5026a16d86b0f19835f870f">ClTemplateWriter</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a> &amp;components);<span class="comment"></span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">    /** Destructor */</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a960fcea297efbbe51b7ea1b6837c028b">~ClTemplateWriter</a>() <span class="keyword">override</span>;<span class="comment"></span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">    /** Generate kernel name */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a72c805b190336a6bdb7c316ecfd03a1b">get_name</a>() <span class="keyword">override</span>;<span class="comment"></span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /** Generate kernel code */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a074277e0cf8d0a6fd3bd9312cb419b03">get_code</a>() <span class="keyword">override</span>;<span class="comment"></span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">    /** Generate build options */</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a9862fa370a82cc6f04496e3ad596b365">get_build_options</a>() <span class="keyword">override</span>;<span class="comment"></span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /** Generate config id string of the entire kernel. This is used for tuning */</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#aead9dc205c7a3da705180bdac9fdc9ff">get_config_id</a>() <span class="keyword">override</span>;<span class="comment"></span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">    /** Generate execution window */</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">get_window</a>() <span class="keyword">const override</span>;<span class="comment"></span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">    /** Get the kernel argument lists of the kernel*/</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    std::map&lt;ITensorInfo::Id, GpuKernelArgument&gt; <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a94f17709138ae0817e55393ae1bb4d1b">get_tensors</a>() <span class="keyword">override</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    std::string write_kernel_name() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    std::string write_code();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::string write_global_section() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    std::string write_argument_declaration(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">GpuKernelVariableTable::TensorVariable</a> &amp;var) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    std::string write_kernel_signature(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">GpuKernelVariableTable::VariableList</a> &amp;argument_list) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a> _components{};</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a>  _vtable{};</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;};</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;} <span class="comment">// namespace experimental</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* SRC_DYNAMIC_FUSION_SKETCH_GPU_TEMPLATE_WRITER_CL_CLTEMPLATEWRITER */</span><span class="preprocessor"></span></div>
<div class="ttc" id="a_gpu_kernel_argument_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_argument_8h.xhtml">GpuKernelArgument.h</a></div></div>
<div class="ttc" id="a_gpu_kernel_component_group_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_component_group_8h.xhtml">GpuKernelComponentGroup.h</a></div></div>
<div class="ttc" id="a_gpu_kernel_variable_table_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_variable_table_8h.xhtml">GpuKernelVariableTable.h</a></div></div>
<div class="ttc" id="a_i_gpu_kernel_writer_8h_xhtml"><div class="ttname"><a href="_i_gpu_kernel_writer_8h.xhtml">IGpuKernelWriter.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_build_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml">arm_compute::CLBuildOptions</a></div><div class="ttdoc">Build options.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00038">CLCompileContext.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml">arm_compute::experimental::dynamic_fusion::ClTemplateWriter</a></div><div class="ttdoc">Use a templated-string-based method to write kernel code It stitches the component code templates tog...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_writer_8h_source.xhtml#l00044">ClTemplateWriter.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml_a074277e0cf8d0a6fd3bd9312cb419b03"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a074277e0cf8d0a6fd3bd9312cb419b03">arm_compute::experimental::dynamic_fusion::ClTemplateWriter::get_code</a></div><div class="ttdeci">std::string get_code() override</div><div class="ttdoc">Generate kernel code.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_writer_8cpp_source.xhtml#l00087">ClTemplateWriter.cpp:87</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml_a72c805b190336a6bdb7c316ecfd03a1b"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a72c805b190336a6bdb7c316ecfd03a1b">arm_compute::experimental::dynamic_fusion::ClTemplateWriter::get_name</a></div><div class="ttdeci">std::string get_name() override</div><div class="ttdoc">Generate kernel name.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_writer_8cpp_source.xhtml#l00083">ClTemplateWriter.cpp:83</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml_a94f17709138ae0817e55393ae1bb4d1b"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a94f17709138ae0817e55393ae1bb4d1b">arm_compute::experimental::dynamic_fusion::ClTemplateWriter::get_tensors</a></div><div class="ttdeci">std::map&lt; ITensorInfo::Id, GpuKernelArgument &gt; get_tensors() override</div><div class="ttdoc">Get the kernel argument lists of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_writer_8cpp_source.xhtml#l00121">ClTemplateWriter.cpp:121</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml_a960fcea297efbbe51b7ea1b6837c028b"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a960fcea297efbbe51b7ea1b6837c028b">arm_compute::experimental::dynamic_fusion::ClTemplateWriter::~ClTemplateWriter</a></div><div class="ttdeci">~ClTemplateWriter() override</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_writer_8cpp_source.xhtml#l00077">ClTemplateWriter.cpp:77</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml_a9862fa370a82cc6f04496e3ad596b365"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a9862fa370a82cc6f04496e3ad596b365">arm_compute::experimental::dynamic_fusion::ClTemplateWriter::get_build_options</a></div><div class="ttdeci">CLBuildOptions get_build_options() override</div><div class="ttdoc">Generate build options.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_writer_8cpp_source.xhtml#l00102">ClTemplateWriter.cpp:102</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml_aac83b0f536927c6d26ef42c12b9232d3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#aac83b0f536927c6d26ef42c12b9232d3">arm_compute::experimental::dynamic_fusion::ClTemplateWriter::replace_tags</a></div><div class="ttdeci">static std::string replace_tags(const std::string &amp;code_template, const TagLUT &amp;tags)</div><div class="ttdoc">Instantiates a kernel code string from the kernel code template.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_writer_8cpp_source.xhtml#l00038">ClTemplateWriter.cpp:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml_ab1cb9da0b5026a16d86b0f19835f870f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#ab1cb9da0b5026a16d86b0f19835f870f">arm_compute::experimental::dynamic_fusion::ClTemplateWriter::ClTemplateWriter</a></div><div class="ttdeci">ClTemplateWriter()=default</div><div class="ttdoc">Default constructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml_ae744fb5fb66aa1ce9db14ba93eab24e3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">arm_compute::experimental::dynamic_fusion::ClTemplateWriter::get_window</a></div><div class="ttdeci">Window get_window() const override</div><div class="ttdoc">Generate execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_writer_8cpp_source.xhtml#l00114">ClTemplateWriter.cpp:114</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml_aead9dc205c7a3da705180bdac9fdc9ff"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#aead9dc205c7a3da705180bdac9fdc9ff">arm_compute::experimental::dynamic_fusion::ClTemplateWriter::get_config_id</a></div><div class="ttdeci">std::string get_config_id() override</div><div class="ttdoc">Generate config id string of the entire kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_writer_8cpp_source.xhtml#l00091">ClTemplateWriter.cpp:91</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGroup</a></div><div class="ttdoc">A group of gpu kernel components to be fused together PRECONDITIONS:</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_group_8h_source.xhtml#l00061">GpuKernelComponentGroup.h:62</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable</a></div><div class="ttdoc">A table of all the variables used in the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00049">GpuKernelVariableTable.h:50</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml_ad245a484a63ea532ef7e19ca08f8b232"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::VariableList</a></div><div class="ttdeci">std::vector&lt; TensorVariable &gt; VariableList</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00070">GpuKernelVariableTable.h:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml">arm_compute::experimental::dynamic_fusion::IGpuKernelWriter</a></div><div class="ttdoc">An interface that can write a gpu kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_writer_8h_source.xhtml#l00045">IGpuKernelWriter.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_afacfec8193ed701f3646c22bc2d35455"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">arm_compute::experimental::dynamic_fusion::TagLUT</a></div><div class="ttdeci">std::unordered_map&lt; Tag, TagVal &gt; TagLUT</div><div class="ttdoc">Tag lookup table.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00130">GpuKernelVariableTable.h:130</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:25</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::TensorVariable</a></div><div class="ttdoc">A tensor variable whose main purposes are:</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00056">GpuKernelVariableTable.h:57</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_5ff8356557e4f59c6a20c3735e8d2267.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_729ca8b25cabcdcb8b11b571ea7b237a.xhtml">sketch</a></li><li class="navelem"><a class="el" href="dir_df94d166e0e6f49d063cb29fea25a88b.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_09aab6a206c9d3717fe22866ebbc9576.xhtml">template_writer</a></li><li class="navelem"><a class="el" href="dir_5ce8562396c3432087c3cd3fcd451092.xhtml">cl</a></li><li class="navelem"><a class="el" href="_cl_template_writer_8h.xhtml">ClTemplateWriter.h</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:45 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
