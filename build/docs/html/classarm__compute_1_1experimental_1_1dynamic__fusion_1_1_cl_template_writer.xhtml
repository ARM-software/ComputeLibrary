<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClTemplateWriter Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClTemplateWriter Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Use a templated-string-based method to write kernel code It stitches the component code templates together based on the valid fusion configuration.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_cl_template_writer_8h_source.xhtml">ClTemplateWriter.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ClTemplateWriter:</div>
<div class="dyncontent">
<div class="center"><!-- SVG 0 -->
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab1cb9da0b5026a16d86b0f19835f870f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#ab1cb9da0b5026a16d86b0f19835f870f">ClTemplateWriter</a> ()=default</td></tr>
<tr class="memdesc:ab1cb9da0b5026a16d86b0f19835f870f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#ab1cb9da0b5026a16d86b0f19835f870f">More...</a><br /></td></tr>
<tr class="separator:ab1cb9da0b5026a16d86b0f19835f870f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdaf6bbbd5a5f3ea16e5de1f7f2446be"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#abdaf6bbbd5a5f3ea16e5de1f7f2446be">ClTemplateWriter</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a> &amp;components)</td></tr>
<tr class="memdesc:abdaf6bbbd5a5f3ea16e5de1f7f2446be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#abdaf6bbbd5a5f3ea16e5de1f7f2446be">More...</a><br /></td></tr>
<tr class="separator:abdaf6bbbd5a5f3ea16e5de1f7f2446be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a960fcea297efbbe51b7ea1b6837c028b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a960fcea297efbbe51b7ea1b6837c028b">~ClTemplateWriter</a> () override</td></tr>
<tr class="memdesc:a960fcea297efbbe51b7ea1b6837c028b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a960fcea297efbbe51b7ea1b6837c028b">More...</a><br /></td></tr>
<tr class="separator:a960fcea297efbbe51b7ea1b6837c028b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72c805b190336a6bdb7c316ecfd03a1b"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a72c805b190336a6bdb7c316ecfd03a1b">get_name</a> () override</td></tr>
<tr class="memdesc:a72c805b190336a6bdb7c316ecfd03a1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate kernel name.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a72c805b190336a6bdb7c316ecfd03a1b">More...</a><br /></td></tr>
<tr class="separator:a72c805b190336a6bdb7c316ecfd03a1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a074277e0cf8d0a6fd3bd9312cb419b03"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a074277e0cf8d0a6fd3bd9312cb419b03">get_code</a> () override</td></tr>
<tr class="memdesc:a074277e0cf8d0a6fd3bd9312cb419b03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate kernel code.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a074277e0cf8d0a6fd3bd9312cb419b03">More...</a><br /></td></tr>
<tr class="separator:a074277e0cf8d0a6fd3bd9312cb419b03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9862fa370a82cc6f04496e3ad596b365"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a9862fa370a82cc6f04496e3ad596b365">get_build_options</a> () override</td></tr>
<tr class="memdesc:a9862fa370a82cc6f04496e3ad596b365"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate build options.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a9862fa370a82cc6f04496e3ad596b365">More...</a><br /></td></tr>
<tr class="separator:a9862fa370a82cc6f04496e3ad596b365"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aead9dc205c7a3da705180bdac9fdc9ff"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#aead9dc205c7a3da705180bdac9fdc9ff">get_config_id</a> () override</td></tr>
<tr class="memdesc:aead9dc205c7a3da705180bdac9fdc9ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate config id string of the entire kernel.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#aead9dc205c7a3da705180bdac9fdc9ff">More...</a><br /></td></tr>
<tr class="separator:aead9dc205c7a3da705180bdac9fdc9ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">get_window</a> () const override</td></tr>
<tr class="memdesc:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate execution window.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">More...</a><br /></td></tr>
<tr class="separator:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94f17709138ae0817e55393ae1bb4d1b"><td class="memItemLeft" align="right" valign="top">std::map&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument.xhtml">GpuKernelArgument</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a94f17709138ae0817e55393ae1bb4d1b">get_tensors</a> () override</td></tr>
<tr class="memdesc:a94f17709138ae0817e55393ae1bb4d1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the kernel argument lists of the kernel.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a94f17709138ae0817e55393ae1bb4d1b">More...</a><br /></td></tr>
<tr class="separator:a94f17709138ae0817e55393ae1bb4d1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml">IGpuKernelWriter</a></td></tr>
<tr class="memitem:a289d10368fc28c689049a24249ab462d inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml#a289d10368fc28c689049a24249ab462d">~IGpuKernelWriter</a> ()</td></tr>
<tr class="memdesc:a289d10368fc28c689049a24249ab462d inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml#a289d10368fc28c689049a24249ab462d">More...</a><br /></td></tr>
<tr class="separator:a289d10368fc28c689049a24249ab462d inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aac83b0f536927c6d26ef42c12b9232d3"><td class="memItemLeft" align="right" valign="top">static std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#aac83b0f536927c6d26ef42c12b9232d3">replace_tags</a> (const std::string &amp;code_template, const <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> &amp;tags)</td></tr>
<tr class="memdesc:aac83b0f536927c6d26ef42c12b9232d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instantiates a kernel code string from the kernel code template.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#aac83b0f536927c6d26ef42c12b9232d3">More...</a><br /></td></tr>
<tr class="separator:aac83b0f536927c6d26ef42c12b9232d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Use a templated-string-based method to write kernel code It stitches the component code templates together based on the valid fusion configuration. </p>
<p>It then instantiates the actual kernel code from the template and the generated tag lookup table. </p>

<p class="definition">Definition at line <a class="el" href="_cl_template_writer_8h_source.xhtml#l00044">44</a> of file <a class="el" href="_cl_template_writer_8h_source.xhtml">ClTemplateWriter.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab1cb9da0b5026a16d86b0f19835f870f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1cb9da0b5026a16d86b0f19835f870f">&#9670;&nbsp;</a></span>ClTemplateWriter() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml">ClTemplateWriter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a id="abdaf6bbbd5a5f3ea16e5de1f7f2446be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdaf6bbbd5a5f3ea16e5de1f7f2446be">&#9670;&nbsp;</a></span>ClTemplateWriter() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml">ClTemplateWriter</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>components</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">components</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> component group from which the kernel will be generated </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00080">80</a> of file <a class="el" href="_cl_template_writer_8cpp_source.xhtml">ClTemplateWriter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                                                            : _components{components}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a960fcea297efbbe51b7ea1b6837c028b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a960fcea297efbbe51b7ea1b6837c028b">&#9670;&nbsp;</a></span>~ClTemplateWriter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml">ClTemplateWriter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

<p class="definition">Definition at line <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00077">77</a> of file <a class="el" href="_cl_template_writer_8cpp_source.xhtml">ClTemplateWriter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9862fa370a82cc6f04496e3ad596b365"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9862fa370a82cc6f04496e3ad596b365">&#9670;&nbsp;</a></span>get_build_options()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> get_build_options </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate build options. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml#a5042ba514560e86fe63519e1ed08e58a">IGpuKernelWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00102">102</a> of file <a class="el" href="_cl_template_writer_8cpp_source.xhtml">ClTemplateWriter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    CLBuildOptions build_opts{};</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;comp : _components)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        build_opts.add_options(comp-&gt;template_writer()-&gt;get_build_options(_components).options());</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> build_opts;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00059">CLBuildOptions::add_options()</a>.</p>

</div>
</div>
<a id="a074277e0cf8d0a6fd3bd9312cb419b03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a074277e0cf8d0a6fd3bd9312cb419b03">&#9670;&nbsp;</a></span>get_code()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_code </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate kernel code. </p>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml#afd2238e3d06ee744636dbba6016e27a0">IGpuKernelWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="_cl_template_writer_8cpp_source.xhtml">ClTemplateWriter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> write_code();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aead9dc205c7a3da705180bdac9fdc9ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aead9dc205c7a3da705180bdac9fdc9ff">&#9670;&nbsp;</a></span>get_config_id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_config_id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate config id string of the entire kernel. </p>
<p>This is used for tuning </p>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml#ab61fed63f970882714e0838ee7dfce41">IGpuKernelWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00091">91</a> of file <a class="el" href="_cl_template_writer_8cpp_source.xhtml">ClTemplateWriter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    std::string config_id = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a72c805b190336a6bdb7c316ecfd03a1b">get_name</a>();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;comp : _components)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        config_id += <span class="stringliteral">&quot;--&quot;</span> + comp-&gt;template_writer()-&gt;get_config_id() + <span class="stringliteral">&quot;--&quot;</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> config_id;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer_xhtml_a72c805b190336a6bdb7c316ecfd03a1b"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml#a72c805b190336a6bdb7c316ecfd03a1b">arm_compute::experimental::dynamic_fusion::ClTemplateWriter::get_name</a></div><div class="ttdeci">std::string get_name() override</div><div class="ttdoc">Generate kernel name.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_writer_8cpp_source.xhtml#l00083">ClTemplateWriter.cpp:83</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00083">ClTemplateWriter::get_name()</a>.</p>

</div>
</div>
<a id="a72c805b190336a6bdb7c316ecfd03a1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72c805b190336a6bdb7c316ecfd03a1b">&#9670;&nbsp;</a></span>get_name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate kernel name. </p>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml#a0948cc07014a35d6f8b884831e0087a2">IGpuKernelWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00083">83</a> of file <a class="el" href="_cl_template_writer_8cpp_source.xhtml">ClTemplateWriter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> write_kernel_name();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00091">ClTemplateWriter::get_config_id()</a>.</p>

</div>
</div>
<a id="a94f17709138ae0817e55393ae1bb4d1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94f17709138ae0817e55393ae1bb4d1b">&#9670;&nbsp;</a></span>get_tensors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument.xhtml">GpuKernelArgument</a> &gt; get_tensors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the kernel argument lists of the kernel. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml#ac7e28ec4c292e69661d65855de311815">IGpuKernelWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00121">121</a> of file <a class="el" href="_cl_template_writer_8cpp_source.xhtml">ClTemplateWriter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// Assemble GpuKernelArguments</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    std::map&lt;ITensorInfo::Id, GpuKernelArgument&gt; tensors;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : _components.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a7c1120629a4227e1cc7798f8e418c735">get_argument_tensors</a>())</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        tensors.emplace(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;id(), GpuKernelArgument{*t, _vtable.get_variable(t).kernel_argument_info});</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span> tensors;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group_xhtml_a7c1120629a4227e1cc7798f8e418c735"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a7c1120629a4227e1cc7798f8e418c735">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGroup::get_argument_tensors</a></div><div class="ttdeci">std::vector&lt; const ITensorInfo * &gt; get_argument_tensors() const</div><div class="ttdoc">Get tensor argument of this group A tensor is an argument if it is a source or destination tensor to ...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_group_8cpp_source.xhtml#l00298">GpuKernelComponentGroup.cpp:298</a></div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_kernel_component_group_8cpp_source.xhtml#l00298">GpuKernelComponentGroup::get_argument_tensors()</a>, and <a class="el" href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor::t</a>.</p>

</div>
</div>
<a id="ae744fb5fb66aa1ce9db14ba93eab24e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae744fb5fb66aa1ce9db14ba93eab24e3">&#9670;&nbsp;</a></span>get_window()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> get_window </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate execution window. </p>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_writer.xhtml#a067d45b86e331353f7e6f71d39a1d39d">IGpuKernelWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00114">114</a> of file <a class="el" href="_cl_template_writer_8cpp_source.xhtml">ClTemplateWriter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> root_comp = _components.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a132a3a85495f9c5fe8ef684035cd94c8">get_root_component</a>();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(root_comp == <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;No root component found&quot;</span>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span> root_comp-&gt;template_writer()-&gt;get_window();</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group_xhtml_a132a3a85495f9c5fe8ef684035cd94c8"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a132a3a85495f9c5fe8ef684035cd94c8">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGroup::get_root_component</a></div><div class="ttdeci">ComponentPtr get_root_component() const</div><div class="ttdoc">Get the root (first) component of this group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_group_8cpp_source.xhtml#l00304">GpuKernelComponentGroup.cpp:304</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, and <a class="el" href="_gpu_kernel_component_group_8cpp_source.xhtml#l00304">GpuKernelComponentGroup::get_root_component()</a>.</p>

</div>
</div>
<a id="aac83b0f536927c6d26ef42c12b9232d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac83b0f536927c6d26ef42c12b9232d3">&#9670;&nbsp;</a></span>replace_tags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string replace_tags </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>code_template</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> &amp;&#160;</td>
          <td class="paramname"><em>tags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Instantiates a kernel code string from the kernel code template. </p>
<dl class="section note"><dt>Note</dt><dd>: some tags can be unused since they could be used only for the macros, or only for the component code</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">code_template</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> code template </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tags</td><td>Tag lookup table</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>std::string Instantiated kernel string</dd></dl>
<dl class="section note"><dt>Note</dt><dd>: some tags can be unused since they could be used only for the macros, or only for the component code </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_cl_template_writer_8cpp_source.xhtml">ClTemplateWriter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    std::string replaced_code    = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordtype">bool</span>        scanning_pattern = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    std::string pattern_found    = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; code_template.size() - 1; ++i)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">if</span> (!scanning_pattern)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordflow">if</span> (code_template[i] == <span class="charliteral">&#39;{&#39;</span> &amp;&amp; code_template[i + 1] == <span class="charliteral">&#39;{&#39;</span>)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                i += 1;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                scanning_pattern = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                pattern_found    = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                replaced_code += code_template[i];</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordflow">if</span> (code_template[i] == <span class="charliteral">&#39;}&#39;</span> &amp;&amp; code_template[i + 1] == <span class="charliteral">&#39;}&#39;</span>)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                i += 1;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                scanning_pattern = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                std::string err  = <span class="stringliteral">&quot;Pattern &quot;</span> + pattern_found + <span class="stringliteral">&quot; not found in tags&quot;</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(tags.find(pattern_found) == tags.end(), err.c_str());</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                replaced_code += tags.find(pattern_found)-&gt;second.value;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                pattern_found += code_template[i];</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">return</span> replaced_code;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/dynamic_fusion/sketch/gpu/template_writer/cl/<a class="el" href="_cl_template_writer_8h_source.xhtml">ClTemplateWriter.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/template_writer/cl/<a class="el" href="_cl_template_writer_8cpp_source.xhtml">ClTemplateWriter.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_writer.xhtml">ClTemplateWriter</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:55 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
