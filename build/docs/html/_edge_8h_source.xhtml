<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/graph/Edge.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_edge_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Edge.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_edge_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2019 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_GRAPH_EDGE_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_GRAPH_EDGE_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_node_8h.xhtml">arm_compute/graph/INode.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_tensor_8h.xhtml">arm_compute/graph/Tensor.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_types_8h.xhtml">arm_compute/graph/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>graph</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">// Forward declarations</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span>Graph;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/** Graph Edge */</span></div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml">   39</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml">Edge</a> final</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">    /** Default Constructor</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">     * @param[in] id           Edge id</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">     * @param[in] producer     Producer node id</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">     * @param[in] producer_idx Producer node output index</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">     * @param[in] consumer     Consumer node id</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     * @param[in] consumer_idx Consumer node input index</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     * @param[in] tensor       Tensor associated with the edge</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#ad509007a40c162c72383ed29620e25ca">   51</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#ad509007a40c162c72383ed29620e25ca">Edge</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a>       <span class="keywordtype">id</span>,</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;         <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a>       *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#acef46a426a99b126a412e361125f2ce9">producer</a>,</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#acacab4f2a903f45180eb30f5ef1ae678">producer_idx</a>,</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;         <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a>       *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a592a2c76b00960964a3f6f2ef792a7f0">consumer</a>,</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a494ac7ad19390258426e1e0577c71c91">consumer_idx</a>,</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;         <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a>      *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">tensor</a>)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        : _id(<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aefc98f9ead7dd39790ad7eac89843ef7">id</a>),</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;          _producer(<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#acef46a426a99b126a412e361125f2ce9">producer</a>),</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;          _consumer(<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a592a2c76b00960964a3f6f2ef792a7f0">consumer</a>),</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;          _producer_idx(<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#acacab4f2a903f45180eb30f5ef1ae678">producer_idx</a>),</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;          _consumer_idx(<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a494ac7ad19390258426e1e0577c71c91">consumer_idx</a>),</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;          _tensor(<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">tensor</a>)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">    /** Returns edge id</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * @return Edge id</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#aefc98f9ead7dd39790ad7eac89843ef7">   70</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aefc98f9ead7dd39790ad7eac89843ef7">id</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">return</span> _id;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">    /** Returns producer node id</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     * @return Producer node id</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#a73b54dbd7dc72560e805067f2e68207c">   78</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a73b54dbd7dc72560e805067f2e68207c">producer_id</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> (_producer == <span class="keyword">nullptr</span>) ? <a class="code" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a> : _producer-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a5ea90a25ef8059df2d2e51b82991ebf3">id</a>();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">    /** Returns sink node id</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     * @return Sink node id</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#ad00e584f78c622e5ee9ec9613f6d6633">   86</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#ad00e584f78c622e5ee9ec9613f6d6633">consumer_id</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">return</span> (_consumer == <span class="keyword">nullptr</span>) ? <a class="code" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a> : _consumer-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a5ea90a25ef8059df2d2e51b82991ebf3">id</a>();</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">    /** Returns producer node</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     * @return Producer node</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#acef46a426a99b126a412e361125f2ce9">   94</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#acef46a426a99b126a412e361125f2ce9">producer</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">return</span> _producer;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">    /** Returns consumer node</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     * @return Consumer node</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#a592a2c76b00960964a3f6f2ef792a7f0">  102</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a592a2c76b00960964a3f6f2ef792a7f0">consumer</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">return</span> _consumer;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    /** Returns the index of the output that produces the result in the producer node</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @return Producer node output index</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#acacab4f2a903f45180eb30f5ef1ae678">  110</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#acacab4f2a903f45180eb30f5ef1ae678">producer_idx</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">return</span> _producer_idx;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">    /** Returns the index of the input that consumes the result in the consumer node</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     * @return Consumer node input index</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#a494ac7ad19390258426e1e0577c71c91">  118</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a494ac7ad19390258426e1e0577c71c91">consumer_idx</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> _consumer_idx;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">    /** Returns the tensor associated with this edge</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     * @return Tensor id</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">  126</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">tensor</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">return</span> _tensor;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">    /** Returns the tensor id associated with this edge</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     * @return Tensor id</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#af20a11225e8c9ae2029e12f2ff05d95b">  134</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#af20a11225e8c9ae2029e12f2ff05d95b">tensor_id</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">return</span> (_tensor == <span class="keyword">nullptr</span>) ? <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">NullTensorID</a> : _tensor-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a738f5e449958bed64c970006375540fd">id</a>();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">    /** Bind the edge to another tensor</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     * @note If tensor is nullptr then nothing happens</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     * @param[in] tensor Tensor to bind the edge to</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#aa4dfdb91786eda8e0c3b532809a2c5d9">  144</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aa4dfdb91786eda8e0c3b532809a2c5d9">update_bound_tensor</a>(<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">tensor</a>)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        _tensor = (<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">tensor</a> != <span class="keyword">nullptr</span>) ? <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">tensor</a> : _tensor;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#afab89afd724f1b07b1aaad6bdc61c47a">  150</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a>       _id;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a>       *_producer;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a>       *_consumer;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _producer_idx;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _consumer_idx;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a>      *_tensor;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;};</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;} <span class="comment">// namespace graph</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GRAPH_EDGE_H */</span><span class="preprocessor"></span></div>
<div class="ttc" id="a_i_node_8h_xhtml"><div class="ttname"><a href="_i_node_8h.xhtml">INode.h</a></div></div>
<div class="ttc" id="aarm__compute_2graph_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml">arm_compute::graph::Edge</a></div><div class="ttdoc">Graph Edge.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00039">Edge.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_a494ac7ad19390258426e1e0577c71c91"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#a494ac7ad19390258426e1e0577c71c91">arm_compute::graph::Edge::consumer_idx</a></div><div class="ttdeci">unsigned int consumer_idx() const</div><div class="ttdoc">Returns the index of the input that consumes the result in the consumer node.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00118">Edge.h:118</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_a592a2c76b00960964a3f6f2ef792a7f0"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#a592a2c76b00960964a3f6f2ef792a7f0">arm_compute::graph::Edge::consumer</a></div><div class="ttdeci">INode * consumer() const</div><div class="ttdoc">Returns consumer node.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00102">Edge.h:102</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_a73b54dbd7dc72560e805067f2e68207c"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#a73b54dbd7dc72560e805067f2e68207c">arm_compute::graph::Edge::producer_id</a></div><div class="ttdeci">NodeID producer_id() const</div><div class="ttdoc">Returns producer node id.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00078">Edge.h:78</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_aa4dfdb91786eda8e0c3b532809a2c5d9"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#aa4dfdb91786eda8e0c3b532809a2c5d9">arm_compute::graph::Edge::update_bound_tensor</a></div><div class="ttdeci">void update_bound_tensor(Tensor *tensor)</div><div class="ttdoc">Bind the edge to another tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00144">Edge.h:144</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_acacab4f2a903f45180eb30f5ef1ae678"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#acacab4f2a903f45180eb30f5ef1ae678">arm_compute::graph::Edge::producer_idx</a></div><div class="ttdeci">unsigned int producer_idx() const</div><div class="ttdoc">Returns the index of the output that produces the result in the producer node.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00110">Edge.h:110</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_acef46a426a99b126a412e361125f2ce9"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#acef46a426a99b126a412e361125f2ce9">arm_compute::graph::Edge::producer</a></div><div class="ttdeci">INode * producer() const</div><div class="ttdoc">Returns producer node.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00094">Edge.h:94</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_ad00e584f78c622e5ee9ec9613f6d6633"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#ad00e584f78c622e5ee9ec9613f6d6633">arm_compute::graph::Edge::consumer_id</a></div><div class="ttdeci">NodeID consumer_id() const</div><div class="ttdoc">Returns sink node id.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00086">Edge.h:86</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_ad509007a40c162c72383ed29620e25ca"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#ad509007a40c162c72383ed29620e25ca">arm_compute::graph::Edge::Edge</a></div><div class="ttdeci">Edge(EdgeID id, INode *producer, unsigned int producer_idx, INode *consumer, unsigned int consumer_idx, Tensor *tensor)</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00051">Edge.h:51</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_aefc98f9ead7dd39790ad7eac89843ef7"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#aefc98f9ead7dd39790ad7eac89843ef7">arm_compute::graph::Edge::id</a></div><div class="ttdeci">EdgeID id() const</div><div class="ttdoc">Returns edge id.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00070">Edge.h:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_af20a11225e8c9ae2029e12f2ff05d95b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#af20a11225e8c9ae2029e12f2ff05d95b">arm_compute::graph::Edge::tensor_id</a></div><div class="ttdeci">TensorID tensor_id() const</div><div class="ttdoc">Returns the tensor id associated with this edge.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00134">Edge.h:134</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_edge_xhtml_aff6b38772acc09675f4f64e510e31055"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">arm_compute::graph::Edge::tensor</a></div><div class="ttdeci">Tensor * tensor() const</div><div class="ttdoc">Returns the tensor associated with this edge.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00126">Edge.h:126</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml">arm_compute::graph::Graph</a></div><div class="ttdoc">Graph class.</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_graph_8h_source.xhtml#l00052">Graph.h:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_i_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml">arm_compute::graph::INode</a></div><div class="ttdoc">Node interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8h_source.xhtml#l00046">INode.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_i_node_xhtml_a5ea90a25ef8059df2d2e51b82991ebf3"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a5ea90a25ef8059df2d2e51b82991ebf3">arm_compute::graph::INode::id</a></div><div class="ttdeci">NodeID id() const</div><div class="ttdoc">Returns node's ID.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8cpp_source.xhtml#l00102">INode.cpp:102</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml">arm_compute::graph::Tensor</a></div><div class="ttdoc">Tensor object.</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00040">Tensor.h:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_tensor_xhtml_a738f5e449958bed64c970006375540fd"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a738f5e449958bed64c970006375540fd">arm_compute::graph::Tensor::id</a></div><div class="ttdeci">TensorID id() const</div><div class="ttdoc">Tensor ID accessor.</div><div class="ttdef"><b>Definition:</b> <a href="src_2graph_2_tensor_8cpp_source.xhtml#l00035">Tensor.cpp:35</a></div></div>
<div class="ttc" id="agraph_2_tensor_8h_xhtml"><div class="ttname"><a href="graph_2_tensor_8h.xhtml">Tensor.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a56952a8591a9d8481450ae707ae355e7"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">arm_compute::graph::NodeID</a></div><div class="ttdeci">unsigned int NodeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00072">Types.h:72</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a615af95e19b5d9f74d2760183566a9a3"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">arm_compute::graph::TensorID</a></div><div class="ttdeci">unsigned int TensorID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00071">Types.h:71</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_aa94938a3eb11fda4724c362c53c28f24"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">arm_compute::graph::NullTensorID</a></div><div class="ttdeci">constexpr TensorID NullTensorID</div><div class="ttdoc">Constant NodeID specifying an equivalent of null node.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00077">Types.h:77</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_aad3f5296ec88b9d552c109b04b89ad9f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">arm_compute::graph::EmptyNodeID</a></div><div class="ttdeci">constexpr NodeID EmptyNodeID</div><div class="ttdoc">Constant EdgeID specifying an equivalent of null edge.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_abba17a56bbf16c7cbc7acd4aa54abcea"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">arm_compute::graph::EdgeID</a></div><div class="ttdeci">unsigned int EdgeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00073">Types.h:73</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:25</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_99ae3712d1eecd2a93fc4d38b59a99ba.xhtml">graph</a></li><li class="navelem"><a class="el" href="_edge_8h.xhtml">Edge.h</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:40 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
