<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/utils/misc/MMappedFile.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_m_mapped_file_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MMappedFile.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_m_mapped_file_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019, 2022 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#if !defined(_WIN64) &amp;&amp; !defined(BARE_METAL)</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_m_mapped_file_8h.xhtml">arm_compute/core/utils/misc/MMappedFile.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;cstdio&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;fcntl.h&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;sys/mman.h&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;sys/stat.h&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;sys/types.h&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;tuple&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>utils</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span>mmap_io</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">/** File size accessor</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> * @param[in] filename File to extract its size</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> * @return A pair of size and status.</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;std::pair&lt;size_t, bool&gt; get_file_size(<span class="keyword">const</span> std::string &amp;filename)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">struct </span>stat st; <span class="comment">// NOLINT</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    memset(&amp;st, 0, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> stat));</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">if</span> (stat(filename.c_str(), &amp;st) == 0)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> std::make_pair(st.st_size, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">return</span> std::make_pair(0, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">/** Get OS page size</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> * @return Page size</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">size_t</span> get_page_size()</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> sysconf(_SC_PAGESIZE);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a5d9066a6c3a402044fcc0e5a25c09aa0">   75</a></span>&#160;<a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a5d9066a6c3a402044fcc0e5a25c09aa0">MMappedFile::MMappedFile</a>() : _filename(), _file_size(0), _map_size(0), _map_offset(0), _fp(nullptr), _data(nullptr)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a3616a9b4f59739152c904d57117eb3a5">   79</a></span>&#160;<a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a5d9066a6c3a402044fcc0e5a25c09aa0">MMappedFile::MMappedFile</a>(std::string filename, <span class="keywordtype">size_t</span> size, <span class="keywordtype">size_t</span> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    : _filename(std::move(filename)), _file_size(0), _map_size(size), _map_offset(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>), _fp(nullptr), _data(nullptr)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a8ad5bb96c065859f580e900c756f6af4">map</a>(_filename, _map_size, _map_offset);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#ae24171f52905cbf7fc249879e53f8336">   85</a></span>&#160;<a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#ae24171f52905cbf7fc249879e53f8336">MMappedFile::~MMappedFile</a>()</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a23b477d0e2d399f75d585d154c346591">release</a>();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a8ad5bb96c065859f580e900c756f6af4">   90</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a8ad5bb96c065859f580e900c756f6af4">MMappedFile::map</a>(<span class="keyword">const</span> std::string &amp;filename, <span class="keywordtype">size_t</span> size, <span class="keywordtype">size_t</span> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="comment">// Check if file is mapped</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#abc866d28046d8f913929f105d1ff2fdf">is_mapped</a>())</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="comment">// Open file</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    _fp = fopen(filename.c_str(), <span class="stringliteral">&quot;a+be&quot;</span>);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span> (_fp == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">// Extract file descriptor</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">int</span>  fd     = fileno(_fp);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">bool</span> status = fd &gt;= 0;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="comment">// Get file size</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        std::tie(_file_size, status) = get_file_size(_filename);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="comment">// Map all file from offset if map size is 0</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            _map_size   = (size == 0) ? _file_size : size;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            _map_offset = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="comment">// Check offset mapping</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keywordflow">if</span> ((_map_offset &gt; _file_size) || (_map_offset % get_page_size() != 0))</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                status = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="comment">// Truncate to file size</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <span class="keywordflow">if</span> (_map_offset + _map_size &gt; _file_size)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                    _map_size = _file_size - _map_offset;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                <span class="comment">// Perform mapping</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                _data = ::mmap(<span class="keyword">nullptr</span>, _map_size, PROT_WRITE, MAP_SHARED, fd, _map_offset);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span> (!status)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        fclose(_fp);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">return</span> status;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a23b477d0e2d399f75d585d154c346591">  146</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a23b477d0e2d399f75d585d154c346591">MMappedFile::release</a>()</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="comment">// Unmap file</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">if</span> (_data != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        ::munmap(_data, _file_size);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        _data = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">// Close file</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">if</span> (_fp != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        fclose(_fp);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        _fp = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="comment">// Clear variables</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    _file_size  = 0;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    _map_size   = 0;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    _map_offset = 0;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a3884d6c46a68636a526bdfd8ab131895">  168</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a3884d6c46a68636a526bdfd8ab131895">MMappedFile::data</a>()</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(_data);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a93276b635c9162e0716a14133af8cd2f">  173</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a93276b635c9162e0716a14133af8cd2f">MMappedFile::file_size</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">return</span> _file_size;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a418ccdae42f326fedc717a8e307bc502">  178</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a418ccdae42f326fedc717a8e307bc502">MMappedFile::map_size</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">return</span> _map_size;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#abc866d28046d8f913929f105d1ff2fdf">  183</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#abc866d28046d8f913929f105d1ff2fdf">MMappedFile::is_mapped</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">return</span> _data != <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;} <span class="comment">// namespace mmap_io</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;} <span class="comment">// namespace utils</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">#endif </span><span class="comment">// !defined(BARE_METAL)</span></div>
<div class="ttc" id="a_m_mapped_file_8h_xhtml"><div class="ttname"><a href="_m_mapped_file_8h.xhtml">MMappedFile.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_a23b477d0e2d399f75d585d154c346591"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a23b477d0e2d399f75d585d154c346591">arm_compute::utils::mmap_io::MMappedFile::release</a></div><div class="ttdeci">void release()</div><div class="ttdoc">Unmaps and closes file.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00146">MMappedFile.cpp:146</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_a3884d6c46a68636a526bdfd8ab131895"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a3884d6c46a68636a526bdfd8ab131895">arm_compute::utils::mmap_io::MMappedFile::data</a></div><div class="ttdeci">unsigned char * data()</div><div class="ttdoc">Mapped data accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00168">MMappedFile.cpp:168</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_a418ccdae42f326fedc717a8e307bc502"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a418ccdae42f326fedc717a8e307bc502">arm_compute::utils::mmap_io::MMappedFile::map_size</a></div><div class="ttdeci">size_t map_size() const</div><div class="ttdoc">Map size accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00178">MMappedFile.cpp:178</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_a5d9066a6c3a402044fcc0e5a25c09aa0"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a5d9066a6c3a402044fcc0e5a25c09aa0">arm_compute::utils::mmap_io::MMappedFile::MMappedFile</a></div><div class="ttdeci">MMappedFile()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00075">MMappedFile.cpp:75</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_a8ad5bb96c065859f580e900c756f6af4"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a8ad5bb96c065859f580e900c756f6af4">arm_compute::utils::mmap_io::MMappedFile::map</a></div><div class="ttdeci">bool map(const std::string &amp;filename, size_t size, size_t offset)</div><div class="ttdoc">Opens and maps a file.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00090">MMappedFile.cpp:90</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_a93276b635c9162e0716a14133af8cd2f"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a93276b635c9162e0716a14133af8cd2f">arm_compute::utils::mmap_io::MMappedFile::file_size</a></div><div class="ttdeci">size_t file_size() const</div><div class="ttdoc">File size accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00173">MMappedFile.cpp:173</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_abc866d28046d8f913929f105d1ff2fdf"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#abc866d28046d8f913929f105d1ff2fdf">arm_compute::utils::mmap_io::MMappedFile::is_mapped</a></div><div class="ttdeci">bool is_mapped() const</div><div class="ttdoc">Checks if file mapped.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00183">MMappedFile.cpp:183</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_ae24171f52905cbf7fc249879e53f8336"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#ae24171f52905cbf7fc249879e53f8336">arm_compute::utils::mmap_io::MMappedFile::~MMappedFile</a></div><div class="ttdeci">~MMappedFile()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00085">MMappedFile.cpp:85</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:25</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">helpers.h:1142</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_a8053b3d69cfefb2b2e6ec7bf9dd5c1a.xhtml">utils</a></li><li class="navelem"><a class="el" href="dir_683639b01107be110e7081378aa84a8b.xhtml">misc</a></li><li class="navelem"><a class="el" href="_m_mapped_file_8cpp.xhtml">MMappedFile.cpp</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:44 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
