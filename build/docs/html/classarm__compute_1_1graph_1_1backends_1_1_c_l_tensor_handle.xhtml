<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLTensorHandle Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLTensorHandle Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>OpenCL <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> handle interface object.  
 <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_tensor_handle_8h_source.xhtml">CLTensorHandle.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLTensorHandle:</div>
<div class="dyncontent">
<div class="center"><!-- SVG 0 -->
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad9ea997f4d444fba90a4a9da923c32b7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#ad9ea997f4d444fba90a4a9da923c32b7">CLTensorHandle</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;info)</td></tr>
<tr class="memdesc:ad9ea997f4d444fba90a4a9da923c32b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#ad9ea997f4d444fba90a4a9da923c32b7">More...</a><br /></td></tr>
<tr class="separator:ad9ea997f4d444fba90a4a9da923c32b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bd6aa91a101491499a24df8e7e8a9d4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a5bd6aa91a101491499a24df8e7e8a9d4">~CLTensorHandle</a> ()=default</td></tr>
<tr class="memdesc:a5bd6aa91a101491499a24df8e7e8a9d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor: free the tensor's memory.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a5bd6aa91a101491499a24df8e7e8a9d4">More...</a><br /></td></tr>
<tr class="separator:a5bd6aa91a101491499a24df8e7e8a9d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25e465b23b018d2b07e221854e3a7a24"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a25e465b23b018d2b07e221854e3a7a24">CLTensorHandle</a> (<a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a25e465b23b018d2b07e221854e3a7a24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a25e465b23b018d2b07e221854e3a7a24">More...</a><br /></td></tr>
<tr class="separator:a25e465b23b018d2b07e221854e3a7a24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6fbac5bb10b8f2bb45c86757823fd4c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#ae6fbac5bb10b8f2bb45c86757823fd4c">operator=</a> (<a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ae6fbac5bb10b8f2bb45c86757823fd4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#ae6fbac5bb10b8f2bb45c86757823fd4c">More...</a><br /></td></tr>
<tr class="separator:ae6fbac5bb10b8f2bb45c86757823fd4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e509c2a177b0b29e9e2369535094dee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a> () override</td></tr>
<tr class="memdesc:a6e509c2a177b0b29e9e2369535094dee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates backend memory for the handle.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a6e509c2a177b0b29e9e2369535094dee">More...</a><br /></td></tr>
<tr class="separator:a6e509c2a177b0b29e9e2369535094dee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1468b0adb6ec3f9d38aa7d60b8a91974"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">free</a> () override</td></tr>
<tr class="memdesc:a1468b0adb6ec3f9d38aa7d60b8a91974"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates backend memory for the handle.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">More...</a><br /></td></tr>
<tr class="separator:a1468b0adb6ec3f9d38aa7d60b8a91974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e897744121bd6636c451767aeef2cdb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a3e897744121bd6636c451767aeef2cdb">manage</a> (<a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *mg) override</td></tr>
<tr class="memdesc:a3e897744121bd6636c451767aeef2cdb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set backend tensor to be managed by a memory group.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a3e897744121bd6636c451767aeef2cdb">More...</a><br /></td></tr>
<tr class="separator:a3e897744121bd6636c451767aeef2cdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a632fc6b53adbe0e2ecde859085241cdc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a632fc6b53adbe0e2ecde859085241cdc">map</a> (bool blocking) override</td></tr>
<tr class="memdesc:a632fc6b53adbe0e2ecde859085241cdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maps backend tensor object.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a632fc6b53adbe0e2ecde859085241cdc">More...</a><br /></td></tr>
<tr class="separator:a632fc6b53adbe0e2ecde859085241cdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7deff0e432f0883942948c55c12673d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a7deff0e432f0883942948c55c12673d2">unmap</a> () override</td></tr>
<tr class="memdesc:a7deff0e432f0883942948c55c12673d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Un-maps a backend tensor object.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a7deff0e432f0883942948c55c12673d2">More...</a><br /></td></tr>
<tr class="separator:a7deff0e432f0883942948c55c12673d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab02ec2036cf0299acc02f35ef56c2214"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#ab02ec2036cf0299acc02f35ef56c2214">release_if_unused</a> () override</td></tr>
<tr class="memdesc:ab02ec2036cf0299acc02f35ef56c2214"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases backend tensor if is marked as unused.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#ab02ec2036cf0299acc02f35ef56c2214">More...</a><br /></td></tr>
<tr class="separator:ab02ec2036cf0299acc02f35ef56c2214"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a7fe5d3c044b1590bb45fc07c8c273f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a0a7fe5d3c044b1590bb45fc07c8c273f">tensor</a> () override</td></tr>
<tr class="memdesc:a0a7fe5d3c044b1590bb45fc07c8c273f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Backend tensor object accessor.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a0a7fe5d3c044b1590bb45fc07c8c273f">More...</a><br /></td></tr>
<tr class="separator:a0a7fe5d3c044b1590bb45fc07c8c273f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d9a543899a9f7c93a950a1d080f2437"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a5d9a543899a9f7c93a950a1d080f2437">tensor</a> () const override</td></tr>
<tr class="memdesc:a5d9a543899a9f7c93a950a1d080f2437"><td class="mdescLeft">&#160;</td><td class="mdescRight">Backend tensor object const accessor.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a5d9a543899a9f7c93a950a1d080f2437">More...</a><br /></td></tr>
<tr class="separator:a5d9a543899a9f7c93a950a1d080f2437"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2e03a2b8a2acf09a141dd498c5b7c73"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#ad2e03a2b8a2acf09a141dd498c5b7c73">parent_handle</a> () override</td></tr>
<tr class="memdesc:ad2e03a2b8a2acf09a141dd498c5b7c73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the parent tensor handle if is a subtensor else this.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#ad2e03a2b8a2acf09a141dd498c5b7c73">More...</a><br /></td></tr>
<tr class="separator:ad2e03a2b8a2acf09a141dd498c5b7c73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a053e439432ecb492f2c5df31a8b32e9d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a053e439432ecb492f2c5df31a8b32e9d">is_subtensor</a> () const override</td></tr>
<tr class="memdesc:a053e439432ecb492f2c5df31a8b32e9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a backing tensor is a sub-tensor object or not.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a053e439432ecb492f2c5df31a8b32e9d">More...</a><br /></td></tr>
<tr class="separator:a053e439432ecb492f2c5df31a8b32e9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0940aabdc8069229baa191d992e43140"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a0940aabdc8069229baa191d992e43140">target</a> () const override</td></tr>
<tr class="memdesc:a0940aabdc8069229baa191d992e43140"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns target type.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml#a0940aabdc8069229baa191d992e43140">More...</a><br /></td></tr>
<tr class="separator:a0940aabdc8069229baa191d992e43140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1graph_1_1_i_tensor_handle"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1graph_1_1_i_tensor_handle')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a></td></tr>
<tr class="memitem:a8a600aafe38c9b7352a2ead019731ab2 inherit pub_methods_classarm__compute_1_1graph_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a8a600aafe38c9b7352a2ead019731ab2">~ITensorHandle</a> ()=default</td></tr>
<tr class="memdesc:a8a600aafe38c9b7352a2ead019731ab2 inherit pub_methods_classarm__compute_1_1graph_1_1_i_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a8a600aafe38c9b7352a2ead019731ab2">More...</a><br /></td></tr>
<tr class="separator:a8a600aafe38c9b7352a2ead019731ab2 inherit pub_methods_classarm__compute_1_1graph_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>OpenCL <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> handle interface object. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8h_source.xhtml#l00037">37</a> of file <a class="el" href="_c_l_tensor_handle_8h_source.xhtml">CLTensorHandle.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad9ea997f4d444fba90a4a9da923c32b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9ea997f4d444fba90a4a9da923c32b7">&#9670;&nbsp;</a></span>CLTensorHandle() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a> metadata </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00034">34</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                                      : _tensor()</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor's allocator.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_allocator_xhtml_af36143939a43fa124312e395975091ed"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">arm_compute::ITensorAllocator::init</a></div><div class="ttdeci">void init(const TensorInfo &amp;input, size_t alignment=0)</div><div class="ttdoc">Initialize a tensor based on the passed TensorInfo.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator.cpp:33</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor::allocator()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, and <a class="el" href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator::init()</a>.</p>

</div>
</div>
<a id="a5bd6aa91a101491499a24df8e7e8a9d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bd6aa91a101491499a24df8e7e8a9d4">&#9670;&nbsp;</a></span>~CLTensorHandle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor: free the tensor's memory. </p>

</div>
</div>
<a id="a25e465b23b018d2b07e221854e3a7a24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25e465b23b018d2b07e221854e3a7a24">&#9670;&nbsp;</a></span>CLTensorHandle() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6e509c2a177b0b29e9e2369535094dee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e509c2a177b0b29e9e2369535094dee">&#9670;&nbsp;</a></span>allocate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void allocate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allocates backend memory for the handle. </p>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#aa8a4946cd749d482dd996874d295af85">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::CLTensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of OpenCL memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00131">CLTensorAllocator.cpp:131</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00131">CLTensorAllocator::allocate()</a>, and <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor::allocator()</a>.</p>

</div>
</div>
<a id="a1468b0adb6ec3f9d38aa7d60b8a91974"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1468b0adb6ec3f9d38aa7d60b8a91974">&#9670;&nbsp;</a></span>free()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void free </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allocates backend memory for the handle. </p>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a1781eecaabd2bc97d074437d01b2c683">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">free</a>();</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_allocator_xhtml_a1468b0adb6ec3f9d38aa7d60b8a91974"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">arm_compute::CLTensorAllocator::free</a></div><div class="ttdeci">void free() override</div><div class="ttdoc">Free allocated OpenCL memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00163">CLTensorAllocator.cpp:163</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor::allocator()</a>, and <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00163">CLTensorAllocator::free()</a>.</p>

</div>
</div>
<a id="a053e439432ecb492f2c5df31a8b32e9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a053e439432ecb492f2c5df31a8b32e9d">&#9670;&nbsp;</a></span>is_subtensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_subtensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if a backing tensor is a sub-tensor object or not. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the backend tensor is a sub-tensor else false </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a291db670564498da17c4485776cb7783">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00091">91</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a3e897744121bd6636c451767aeef2cdb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e897744121bd6636c451767aeef2cdb">&#9670;&nbsp;</a></span>manage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void manage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *&#160;</td>
          <td class="paramname"><em>mg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set backend tensor to be managed by a memory group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mg</td><td><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> group </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#af17dc1b0465b99d816e5eb3e099cc2f2">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">if</span> (mg != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        mg-&gt;manage(&amp;_tensor);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classarm__compute_1_1_i_memory_group.xhtml#a3050be2d3604b3c2fc3c3a0d6cb49392">IMemoryGroup::manage()</a>.</p>

</div>
</div>
<a id="a632fc6b53adbe0e2ecde859085241cdc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a632fc6b53adbe0e2ecde859085241cdc">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void map </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Maps backend tensor object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>Flags if the mapping operations should be blocking </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a9b4f692472539da81670d157ac35257c">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>(blocking);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a14c53d2d17be6fa8a2c9861527c7b002"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">arm_compute::CLTensor::map</a></div><div class="ttdeci">void map(bool blocking=true)</div><div class="ttdoc">Enqueue a map operation of the allocated buffer.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00066">CLTensor.cpp:66</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00066">CLTensor::map()</a>.</p>

</div>
</div>
<a id="ae6fbac5bb10b8f2bb45c86757823fd4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6fbac5bb10b8f2bb45c86757823fd4c">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ad2e03a2b8a2acf09a141dd498c5b7c73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2e03a2b8a2acf09a141dd498c5b7c73">&#9670;&nbsp;</a></span>parent_handle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> * parent_handle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the parent tensor handle if is a subtensor else this. </p>
<dl class="section return"><dt>Returns</dt><dd>Parent tensor handle </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a561a751539d572ac9e3c3eea75f35fa5">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00086">86</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab02ec2036cf0299acc02f35ef56c2214"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab02ec2036cf0299acc02f35ef56c2214">&#9670;&nbsp;</a></span>release_if_unused()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void release_if_unused </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Releases backend tensor if is marked as unused. </p>
<dl class="section note"><dt>Note</dt><dd>This has no effect on sub-tensors </dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>Parent tensors don't keep track of sub-tensors, thus if a parent is set as unused then all sub-tensors will be invalidated, on the other hand if a sub-tensor is marked as unused then the parent tensor won't be released </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#abbc6c72c0ecfa294674f11e9e63a7779">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">// TODO (geopin01): Release tensor only if all sub-tensors are marked as not used</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">if</span> (!_tensor.<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">is_used</a>())</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">free</a>();</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml_a209ea2ddfdfa80703799c92da8beb643"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">arm_compute::ITensor::is_used</a></div><div class="ttdeci">bool is_used() const</div><div class="ttdoc">Flags if the tensor is used or not.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8cpp_source.xhtml#l00162">ITensor.cpp:162</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor::allocator()</a>, <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00163">CLTensorAllocator::free()</a>, and <a class="el" href="_i_tensor_8cpp_source.xhtml#l00162">ITensor::is_used()</a>.</p>

</div>
</div>
<a id="a0940aabdc8069229baa191d992e43140"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0940aabdc8069229baa191d992e43140">&#9670;&nbsp;</a></span>target()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> target </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns target type. </p>
<dl class="section return"><dt>Returns</dt><dd>Target type </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a67fcbb365a7d36bdecf7c6df921762a0">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">Target::CL</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">arm_compute::graph::Target::CL</a></div><div class="ttdeci">@ CL</div><div class="ttdoc">OpenCL capable target device.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">arm_compute::graph::CL</a>.</p>

</div>
</div>
<a id="a5d9a543899a9f7c93a950a1d080f2437"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d9a543899a9f7c93a950a1d080f2437">&#9670;&nbsp;</a></span>tensor() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a> &amp; tensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Backend tensor object const accessor. </p>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a9931aeed59a005cbaa09e7b25df9bc75">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00076">76</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> _tensor;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0a7fe5d3c044b1590bb45fc07c8c273f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a7fe5d3c044b1590bb45fc07c8c273f">&#9670;&nbsp;</a></span>tensor() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a> &amp; tensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Backend tensor object accessor. </p>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a91efb5b2e262ec5e55059ff1fd9accc6">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00081">81</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">return</span> _tensor;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a7deff0e432f0883942948c55c12673d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7deff0e432f0883942948c55c12673d2">&#9670;&nbsp;</a></span>unmap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Un-maps a backend tensor object. </p>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a21164b8d700d97aa462e75e314048f46">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a1ffeb3b5abb3d61f62b58a391816201c"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">arm_compute::CLTensor::unmap</a></div><div class="ttdeci">void unmap()</div><div class="ttdoc">Enqueue an unmap operation of the allocated and mapped buffer.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00071">CLTensor.cpp:71</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00071">CLTensor::unmap()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/graph/backends/CL/<a class="el" href="_c_l_tensor_handle_8h_source.xhtml">CLTensorHandle.h</a></li>
<li>src/graph/backends/CL/<a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml">CLTensorHandle.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">backends</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_tensor_handle.xhtml">CLTensorHandle</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:55 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
