<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: RedOpX_quantized&lt; T &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('structarm__compute_1_1_red_op_x__quantized.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">RedOpX_quantized&lt; T &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae33dc064f8900832247c777aacdfb471"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_red_op_x__quantized.xhtml#ae33dc064f8900832247c777aacdfb471">operator()</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;in_window, <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;out_window, const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *in, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *out, const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</td></tr>
<tr class="separator:ae33dc064f8900832247c777aacdfb471"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
struct arm_compute::RedOpX_quantized&lt; T &gt;</h3>


<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00609">609</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ae33dc064f8900832247c777aacdfb471"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae33dc064f8900832247c777aacdfb471">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>in_window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>out_window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a>&#160;</td>
          <td class="paramname"><em>op</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00611">611</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    {</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <span class="keyword">using</span> PromotedType = <span class="keyword">typename</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">wrapper::traits::promote&lt;typename wrapper::traits::promote&lt;T&gt;::type</a>&gt;<a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">::type</a>;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160; </div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> oq_info = out-&gt;info()-&gt;quantization_info().uniform();</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160; </div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <span class="keyword">const</span> TensorInfo              in_info = *(in-&gt;info());</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo iq_info = in_info.quantization_info().uniform();</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160; </div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>  window_step_x  = 16 / <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> window_start_x = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(in_window.x().start());</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> window_end_x   = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(in_window.x().end());</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160; </div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        Window in_win_no_pad = in_window;</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;        in_win_no_pad.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(0, 1, 1));</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160; </div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        Iterator <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(in, in_win_no_pad);</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        Iterator output(out, out_window);</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160; </div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>  in_offset = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(iq_info.offset);</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> in_scale  = iq_info.scale;</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160; </div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>  out_offset = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(oq_info.offset);</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> out_scale  = oq_info.scale;</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160; </div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> num_elements = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(in_info.dimension(0));</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160; </div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">A</a> = in_scale / (out_scale * num_elements);</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">B</a> = out_offset - (in_scale * in_offset) / (out_scale);</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160; </div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            in_win_no_pad,</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            {</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr = <span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160; </div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                <span class="keyword">auto</span> vec_res_value1 =</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                    <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>PromotedType<span class="keyword">&gt;</span>(0.f), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                <span class="keyword">auto</span> vec_res_value2 =</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                    <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>PromotedType<span class="keyword">&gt;</span>(0.f), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                <span class="keyword">auto</span> vec_res_value3 =</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                    <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>PromotedType<span class="keyword">&gt;</span>(0.f), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                <span class="keyword">auto</span> vec_res_value4 =</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                    <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>PromotedType<span class="keyword">&gt;</span>(0.f), wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160; </div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                <span class="keyword">auto</span> vec_res_value1_f = vdupq_n_f32(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(1.f));</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                <span class="keyword">auto</span> vec_res_value2_f = vdupq_n_f32(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(1.f));</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;                <span class="keyword">auto</span> vec_res_value3_f = vdupq_n_f32(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(1.f));</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                <span class="keyword">auto</span> vec_res_value4_f = vdupq_n_f32(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(1.f));</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160; </div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                <span class="keyword">typename</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">wrapper::traits::neon_vector&lt;T, 16&gt;::type</a> vec_res_value = {0};</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160; </div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                <span class="keywordflow">if</span> (op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a> || op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a> ||</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                    op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a> || op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>)</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                {</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(*input_ptr, wrapper::traits::vector_128_tag{});</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                }</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160; </div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;                uint32x4x4_t vec_res_idx{{0}};</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;                <span class="comment">// Compute window_step_x elements per iteration</span></div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                <span class="keywordflow">for</span> (; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                {</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> vec_elements = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(input_ptr + x);</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                    <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                    {</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                        {</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_elements));</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_elements));</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160; </div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_1));</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_1));</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_2));</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_2));</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160; </div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                            vec_res_value1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_1, vec_res_value1);</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;                            vec_res_value2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_2, vec_res_value2);</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;                            vec_res_value3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_3, vec_res_value3);</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                            vec_res_value4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_4, vec_res_value4);</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                        }</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                        {</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> offset32x4f_4 = vdupq_n_f32(iq_info.offset);</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> scale32x4f_4  = vdupq_n_f32(iq_info.scale);</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160; </div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_elements));</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_elements));</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160; </div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_1));</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_1));</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_2));</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_2));</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160; </div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                            <span class="keyword">auto</span> temp32x4f_1 = wrapper::vcvt&lt;float&gt;(temp32x4t_1);</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;                            <span class="keyword">auto</span> temp32x4f_2 = wrapper::vcvt&lt;float&gt;(temp32x4t_2);</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;                            <span class="keyword">auto</span> temp32x4f_3 = wrapper::vcvt&lt;float&gt;(temp32x4t_3);</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                            <span class="keyword">auto</span> temp32x4f_4 = wrapper::vcvt&lt;float&gt;(temp32x4t_4);</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160; </div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                            <span class="comment">//de-quantize vec_elements</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                            temp32x4f_1 = vmulq_f32(vsubq_f32(temp32x4f_1, offset32x4f_4), scale32x4f_4);</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                            temp32x4f_2 = vmulq_f32(vsubq_f32(temp32x4f_2, offset32x4f_4), scale32x4f_4);</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                            temp32x4f_3 = vmulq_f32(vsubq_f32(temp32x4f_3, offset32x4f_4), scale32x4f_4);</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                            temp32x4f_4 = vmulq_f32(vsubq_f32(temp32x4f_4, offset32x4f_4), scale32x4f_4);</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160; </div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                            vec_res_value1_f = vmulq_f32(temp32x4f_1, vec_res_value1_f);</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;                            vec_res_value2_f = vmulq_f32(temp32x4f_2, vec_res_value2_f);</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;                            vec_res_value3_f = vmulq_f32(temp32x4f_3, vec_res_value3_f);</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                            vec_res_value4_f = vmulq_f32(temp32x4f_4, vec_res_value4_f);</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                        }</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                        {</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;                            <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                            vec_res_idx             = calculate_index_quantized&lt;decltype(vec_res_value)&gt;(</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                                x, temp_vec_res_value, vec_res_value, vec_res_idx, op, 0);</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                            vec_res_value = temp_vec_res_value;</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                        }</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                        {</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                            <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                            vec_res_idx             = calculate_index_quantized&lt;decltype(vec_res_value)&gt;(</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                                x, temp_vec_res_value, vec_res_value, vec_res_idx, op, 0);</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                            vec_res_value = temp_vec_res_value;</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                        }</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                        {</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                        }</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                        {</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;                        }</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                    }</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                }</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160; </div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                {</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                    {</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                        <span class="keyword">auto</span> idx =</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                            calculate_vector_index_quantized&lt;decltype(vec_res_value)&gt;(vec_res_idx, vec_res_value, op);</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;                        <span class="keyword">auto</span> res = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(<a class="code" href="namespacearm__compute.xhtml#a97efbac9fc55174e5c03c7a8559da2d2">calculate_min</a>(vec_res_value), 0));</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160; </div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                        {</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                            <span class="keywordflow">if</span> (*(input_ptr + x) &lt; res)</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;                            {</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;                                idx = x;</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                                res = *(input_ptr + x);</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                            }</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;                        }</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr())) = idx;</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;                    }</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;                    {</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;                        <span class="keyword">auto</span> idx =</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;                            calculate_vector_index_quantized&lt;decltype(vec_res_value)&gt;(vec_res_idx, vec_res_value, op);</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;                        <span class="keyword">auto</span> res = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(<a class="code" href="namespacearm__compute.xhtml#a92f4d66137f138d1fdbf2cf06c4ae8de">calculate_max</a>(vec_res_value), 0));</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160; </div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                        {</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;                            <span class="keywordflow">if</span> (*(input_ptr + x) &gt; res)</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;                            {</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;                                idx = x;</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                                res = *(input_ptr + x);</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                            }</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                        }</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr())) = idx;</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;                    }</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                    {</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                        <span class="keyword">auto</span> res = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(<a class="code" href="namespacearm__compute.xhtml#a97efbac9fc55174e5c03c7a8559da2d2">calculate_min</a>(vec_res_value), 0));</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160; </div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;                        {</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;                            res = *(input_ptr + x) &lt; res ? *(input_ptr + x) : res;</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;                        }</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr())) = res;</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;                    }</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;                    {</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;                        <span class="keyword">auto</span> res = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(<a class="code" href="namespacearm__compute.xhtml#a92f4d66137f138d1fdbf2cf06c4ae8de">calculate_max</a>(vec_res_value), 0));</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160; </div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                        {</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;                            res = *(input_ptr + x) &gt; res ? *(input_ptr + x) : res;</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;                        }</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr())) = res;</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;                    }</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;                    {</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;                        <span class="keyword">auto</span> carry_res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value1_f, vec_res_value2_f);</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;                        carry_res      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(carry_res, vec_res_value3_f);</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;                        carry_res      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(carry_res, vec_res_value4_f);</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160; </div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                        <span class="keywordtype">float</span> res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, 0);</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;                        res *= <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, 1);</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;                        res *= <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, 2);</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;                        res *= <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, 3);</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160; </div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;                        {</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;                            <span class="comment">//de-quantize input</span></div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;                            <span class="keywordflow">if</span> (std::is_same&lt;T, uint8_t&gt;::value)</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;                            {</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;                                res *= <a class="code" href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">dequantize_qasymm8</a>(*(input_ptr + x), iq_info);</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;                            }</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;                            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;                            {</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;                                res *= <a class="code" href="namespacearm__compute.xhtml#afe6fcf1a0c6f6c2d2cb10a8c14fa9131">dequantize_qasymm8_signed</a>(*(input_ptr + x), iq_info);</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;                            }</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;                        }</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160; </div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;                        <span class="comment">//re-quantize result</span></div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;                        <span class="keywordflow">if</span> (std::is_same&lt;T, uint8_t&gt;::value)</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;                        {</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;                            res = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(res, iq_info);</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;                        }</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;                        {</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                            res = <a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(res, iq_info);</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;                        }</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160; </div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                        *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr()) = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(res);</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;                    }</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;                    {</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;                        <span class="keyword">auto</span> carry_res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vec_res_value1, vec_res_value2);</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;                        carry_res      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(carry_res, vec_res_value3);</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                        carry_res      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(carry_res, vec_res_value4);</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160; </div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;                        <span class="keyword">auto</span> carry_paddition =</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">wrapper::vpadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(carry_res), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(carry_res));</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                        carry_paddition = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">wrapper::vpadd</a>(carry_paddition, carry_paddition);</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                        <span class="keyword">auto</span> res        = <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_paddition, 0));</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160; </div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                        {</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                            res += *(input_ptr + x);</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;                        }</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160; </div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;                        <span class="keywordflow">if</span> (op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>)</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                        {</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;                            <span class="keyword">const</span> int32_t resFinal = <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">A</a> * (<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(res)) + <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">B</a>;</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160; </div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                            *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr()) = utils::cast::saturate_cast&lt;T&gt;(resFinal);</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;                        }</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;                        {</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                            <span class="comment">// Subtract accumulated offsets</span></div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;                            res -= (in_info.dimension(0) - 1) * iq_info.offset;</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                            *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr()) = utils::cast::saturate_cast&lt;T&gt;(res);</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;                        }</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160; </div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;                    }</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;                    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;                        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;                }</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;            },</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::A</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ARG_IDX_MAX</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ARG_IDX_MIN</a>, <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::B</a>, <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00151">arm_compute::calculate_max()</a>, <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00127">arm_compute::calculate_min()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00367">arm_compute::dequantize_qasymm8()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00380">arm_compute::dequantize_qasymm8_signed()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00216">TensorInfo::dimension()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00101">Window::Dimension::end()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00074">arm_compute::execute_window_loop()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">arm_compute::MAX</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">arm_compute::MEAN_SUM</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">arm_compute::MIN</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00063">UniformQuantizationInfo::offset</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">arm_compute::PROD</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00147">Iterator::ptr()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">ITensorInfo::quantization_info()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00299">TensorInfo::quantization_info()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00309">arm_compute::quantize_qasymm8()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00323">arm_compute::quantize_qasymm8_signed()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00062">UniformQuantizationInfo::scale</a>, <a class="el" href="_window_8inl_source.xhtml#l00053">Window::set()</a>, <a class="el" href="_window_8h_source.xhtml#l00096">Window::Dimension::start()</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">arm_compute::SUM</a>, <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00347">type</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00152">QuantizationInfo::uniform()</a>, <a class="el" href="intrinsics_2add_8h_source.xhtml#l00039">arm_compute::wrapper::vadd()</a>, <a class="el" href="dup__n_8h_source.xhtml#l00041">arm_compute::wrapper::vdup_n()</a>, <a class="el" href="gethigh_8h_source.xhtml#l00039">arm_compute::wrapper::vgethigh()</a>, <a class="el" href="getlane_8h_source.xhtml#l00091">arm_compute::wrapper::vgetlane()</a>, <a class="el" href="getlow_8h_source.xhtml#l00039">arm_compute::wrapper::vgetlow()</a>, <a class="el" href="load_8h_source.xhtml#l00058">arm_compute::wrapper::vloadq()</a>, <a class="el" href="max_8h_source.xhtml#l00039">arm_compute::wrapper::vmax()</a>, <a class="el" href="min_8h_source.xhtml#l00039">arm_compute::wrapper::vmin()</a>, <a class="el" href="movl_8h_source.xhtml#l00039">arm_compute::wrapper::vmovl()</a>, <a class="el" href="mul_8h_source.xhtml#l00039">arm_compute::wrapper::vmul()</a>, <a class="el" href="intrinsics_2add_8h_source.xhtml#l00187">arm_compute::wrapper::vpadd()</a>, and <a class="el" href="_window_8h_source.xhtml#l00158">Window::x()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>src/cpu/kernels/reduction_layer/generic/neon/<a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a1894e825a225f3b2013f594cbffdae73"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">arm_compute::wrapper::vadd</a></div><div class="ttdeci">uint8x8_t vadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00039">add.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ac1d8253f8b422e143ab989ad2a4d29dd"><div class="ttname"><a href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">arm_compute::dequantize_qasymm8</a></div><div class="ttdeci">float dequantize_qasymm8(uint8_t value, const INFO_TYPE &amp;qinfo)</div><div class="ttdoc">Dequantize a value given an unsigned 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00367">QuantizationInfo.h:367</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">arm_compute::ReductionOperation::PROD</a></div><div class="ttdeci">@ PROD</div><div class="ttdoc">Product.</div></div>
<div class="ttc" id="agemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00347">gemm_interleaved.hpp:347</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">arm_compute::ReductionOperation::MIN</a></div><div class="ttdeci">@ MIN</div><div class="ttdoc">Min.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a8dbba1731c32d176ae6635be1c65cbd6"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">arm_compute::wrapper::vmovl</a></div><div class="ttdeci">uint16x8_t vmovl(const uint8x8_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="movl_8h_source.xhtml#l00039">movl.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_aa16ace001ab8287faa46d6962f369219"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">arm_compute::wrapper::vgetlane</a></div><div class="ttdeci">uint8_t vgetlane(const uint8x8_t vector, const unsigned int lane)</div><div class="ttdef"><b>Definition:</b> <a href="getlane_8h_source.xhtml#l00091">getlane.h:91</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab8cef8b31b552b532a14ab8815e06285"><div class="ttname"><a href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">arm_compute::quantize_qasymm8</a></div><div class="ttdeci">uint8_t quantize_qasymm8(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given an unsigned 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00309">QuantizationInfo.h:309</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">arm_compute::ReductionOperation::MAX</a></div><div class="ttdeci">@ MAX</div><div class="ttdoc">Max.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a77f54eded7fef436d3a4f21ad5a00da6"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">arm_compute::wrapper::vloadq</a></div><div class="ttdeci">uint8x16_t vloadq(const uint8_t *ptr)</div><div class="ttdef"><b>Definition:</b> <a href="load_8h_source.xhtml#l00058">load.h:58</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">arm_compute::ReductionOperation::MEAN_SUM</a></div><div class="ttdeci">@ MEAN_SUM</div><div class="ttdoc">Mean of sum.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a475ee3c8ef70a2e4f18effd1d527a63a"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">arm_compute::wrapper::vpadd</a></div><div class="ttdeci">uint8x8_t vpadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00187">add.h:187</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_ab026a1aeec48074092f548c130c323f4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">arm_compute::wrapper::vmin</a></div><div class="ttdeci">uint8x8_t vmin(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="min_8h_source.xhtml#l00039">min.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a66c8dd218a4863a14fec363e3dd13dc4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">arm_compute::wrapper::vmul</a></div><div class="ttdeci">uint8x8_t vmul(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="mul_8h_source.xhtml#l00039">mul.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::Channel::B</a></div><div class="ttdeci">@ B</div><div class="ttdoc">Blue channel.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6c0dcc38187027dcb89cd9724bc5a823"><div class="ttname"><a href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;...iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00074">Helpers.inl:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a464ea9027ae01e64014040d69302800f"><div class="ttname"><a href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">arm_compute::quantize_qasymm8_signed</a></div><div class="ttdeci">int8_t quantize_qasymm8_signed(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given a signed 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00323">QuantizationInfo.h:323</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ReductionOperation::ARG_IDX_MAX</a></div><div class="ttdeci">@ ARG_IDX_MAX</div><div class="ttdoc">Index of the max value.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a8d1d14000c959f1146a8a64e1dafae5f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">arm_compute::wrapper::vmax</a></div><div class="ttdeci">uint8x8_t vmax(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="max_8h_source.xhtml#l00039">max.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ReductionOperation::ARG_IDX_MIN</a></div><div class="ttdeci">@ ARG_IDX_MIN</div><div class="ttdoc">Index of the min value.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a2902775707bc7bf7d6da1bda1cc15783"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">arm_compute::wrapper::vgetlow</a></div><div class="ttdeci">uint8x8_t vgetlow(const uint8x16_t val)</div><div class="ttdef"><b>Definition:</b> <a href="getlow_8h_source.xhtml#l00039">getlow.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_afe6fcf1a0c6f6c2d2cb10a8c14fa9131"><div class="ttname"><a href="namespacearm__compute.xhtml#afe6fcf1a0c6f6c2d2cb10a8c14fa9131">arm_compute::dequantize_qasymm8_signed</a></div><div class="ttdeci">float dequantize_qasymm8_signed(int8_t value, const INFO_TYPE &amp;qinfo)</div><div class="ttdoc">Dequantize a value given a signed 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00380">QuantizationInfo.h:380</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::Channel::A</a></div><div class="ttdeci">@ A</div><div class="ttdoc">Alpha channel.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a97efbac9fc55174e5c03c7a8559da2d2"><div class="ttname"><a href="namespacearm__compute.xhtml#a97efbac9fc55174e5c03c7a8559da2d2">arm_compute::calculate_min</a></div><div class="ttdeci">std::enable_if&lt; std::is_same&lt; T, float32x4_t &gt;::value||std::is_same&lt; T, int32x4_t &gt;::value, typename std::conditional&lt; std::is_same&lt; T, float32x4_t &gt;::value, float32x2_t, int32x2_t &gt;::type &gt;::type calculate_min(T in)</div><div class="ttdef"><b>Definition:</b> <a href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00127">impl.h:127</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a95ee388aa7c5bccab918235dc538a6b3"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">arm_compute::wrapper::vgethigh</a></div><div class="ttdeci">uint8x8_t vgethigh(const uint8x16_t val)</div><div class="ttdef"><b>Definition:</b> <a href="gethigh_8h_source.xhtml#l00039">gethigh.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a92f4d66137f138d1fdbf2cf06c4ae8de"><div class="ttname"><a href="namespacearm__compute.xhtml#a92f4d66137f138d1fdbf2cf06c4ae8de">arm_compute::calculate_max</a></div><div class="ttdeci">std::enable_if&lt; std::is_same&lt; T, float32x4_t &gt;::value||std::is_same&lt; T, int32x4_t &gt;::value, typename std::conditional&lt; std::is_same&lt; T, float32x4_t &gt;::value, float32x2_t, int32x2_t &gt;::type &gt;::type calculate_max(T in)</div><div class="ttdef"><b>Definition:</b> <a href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00151">impl.h:151</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">arm_compute::ReductionOperation::SUM</a></div><div class="ttdeci">@ SUM</div><div class="ttdoc">Sum.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a39e87435be178fba49b76f49426ef873"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">arm_compute::wrapper::vdup_n</a></div><div class="ttdeci">uint8x8_t vdup_n(uint8_t value, traits::vector_64_tag)</div><div class="ttdef"><b>Definition:</b> <a href="dup__n_8h_source.xhtml#l00041">dup_n.h:41</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1_red_op_x__quantized.xhtml">RedOpX_quantized</a></li>
    <li class="footer">Generated on Thu May 23 2024 11:24:51 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
