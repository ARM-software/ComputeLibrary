digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="IOperator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1experimental_1_1_i_operator.xhtml",tooltip="Base class for all async functions."];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="ICLOperator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml",tooltip="Basic interface for functions which have a single async CL kernel."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="CLSynthetizeOperator\l\< ClGemmMatrixMultiplyReshaped\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml",tooltip=" "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="CLSynthetizeOperator\l\< ClGemmMatrixMultiplyNative\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml",tooltip=" "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="CLSynthetizeOperator\l\< ClGemmLowpMatrixMultiplyReshaped\lOnlyRhsKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml",tooltip=" "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="CLSynthetizeOperator\l\< ClGemmLowpMatrixMultiplyReshaped\lKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml",tooltip=" "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="CLSynthetizeOperator\l\< ClGemmReshapeLhsMatrixKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="CLSynthetizeOperator\l\< ClGemmMatrixMultiplyReshaped\lOnlyRhsKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml",tooltip=" "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="CLLogicalAnd",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1experimental_1_1_c_l_logical_and.xhtml",tooltip=" "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="CLLogicalOr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1experimental_1_1_c_l_logical_or.xhtml",tooltip=" "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="CLSlice",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1experimental_1_1_c_l_slice.xhtml",tooltip="Basic function to perform tensor slicing."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="CLStridedSlice",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1experimental_1_1_c_l_strided_slice.xhtml",tooltip="Basic function to run CLStridedSliceKernel."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="ClAbs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_abs.xhtml",tooltip="Basic function to get the absolute value of an src tensor."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ClActivation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_activation.xhtml",tooltip="Basic function to run kernels::ClActivationKernel."];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ClAdd",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_add.xhtml",tooltip="Basic function to run arithmetic addition."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ClCast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_cast.xhtml",tooltip="Basic function to run kernels::ClCastKernel."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="ClComplexMul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_complex_mul.xhtml",tooltip="Basic function to run opencl::kernels::ClComplexMulKernel."];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="ClConcatenate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_concatenate.xhtml",tooltip="Basic function to execute concatenate tensors along a given axis."];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="ClConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml",tooltip="Basic function to compute the convolution layer."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="ClConvertFullyConnectedWeights",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_convert_fully_connected_weights.xhtml",tooltip="Basic function to run kernels::ClConvertFullyConnectedWeightsKernel."];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="ClCopy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_copy.xhtml",tooltip="Basic function to run kernels::ClCopyKernel."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="ClCrop",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_crop.xhtml",tooltip="Basic function to run kernels::ClCropKernel."];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="ClDequantize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_dequantize.xhtml",tooltip="Basic function to run kernels::ClDequantizeKernel that dequantizes an input tensor."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="ClDirectConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml",tooltip="Basic function to simulate a directly convolution layer."];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="ClDirectConv3d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_direct_conv3d.xhtml",tooltip="Basic function to simulate a directly convolution layer with 3 spatial dimensions."];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="ClElementwiseDivision",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_elementwise_division.xhtml",tooltip="Basic function to run opencl::kernels::ClArithmeticKernel for division."];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="ClElementwiseMax",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_elementwise_max.xhtml",tooltip="Basic function to run opencl::kernels::ClArithmeticKernel for max."];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="ClElementwiseMin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_elementwise_min.xhtml",tooltip="Basic function to run opencl::kernels::ClArithmeticKernel for min."];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="ClElementwisePower",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_elementwise_power.xhtml",tooltip="Basic function to run opencl::kernels::ClArithmeticKernel for power."];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="ClElementwiseSquaredDiff",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_elementwise_squared_diff.xhtml",tooltip="Basic function to run opencl::kernels::ClArithmeticKernel for squared difference."];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="ClExp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_exp.xhtml",tooltip="Basic function to perform exponential on an src tensor."];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="ClFill",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_fill.xhtml",tooltip="Basic function to run kernels::ClFillKernel."];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="ClFlatten",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_flatten.xhtml",tooltip="Basic function to flatten a given input."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="ClFloor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_floor.xhtml",tooltip="Basic function to run kernels::ClFloorKernel."];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="ClFullyConnected",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml",tooltip="Basic function to compute a Fully Connected layer on OpenCL."];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="ClGemm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_gemm.xhtml",tooltip="Basic function to execute GEMM on OpenCL."];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="ClGemmConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml",tooltip="Basic function to compute the convolution layer."];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="ClGemmLowpMatrixMultiplyCore",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml",tooltip="Basic function to execute GEMMLowpMatrixMultiplyCore on OpenCL."];
  Node1 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="ClGemmLowpOutputStage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_gemm_lowp_output_stage.xhtml",tooltip="Basic function to execute GEMMLowpQuantizeDown kernels on CL."];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="ClIndirectConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml",tooltip="Basic function to execute indirect convolution on OpenCL."];
  Node1 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="ClLog",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_log.xhtml",tooltip="Basic function to perform elementwise log on an src tensor."];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="ClLogicalNot",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_logical_not.xhtml",tooltip="Basic function to run kernels::ClElementWiseUnaryKernel for NOT operation."];
  Node1 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="ClMatMul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_mat_mul.xhtml",tooltip="Basic operator to execute BatchMatMul on OpenCL."];
  Node1 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="ClMul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_mul.xhtml",tooltip="Basic function to run opencl::kernels::ClMulKernel."];
  Node1 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="ClNeg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_neg.xhtml",tooltip="Basic function to negate an src tensor."];
  Node1 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="ClPRelu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_p_relu.xhtml",tooltip="Basic operator to run arm_compute::opencl::kernels::ClArithmeticKernel for PRELU."];
  Node1 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="ClPermute",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_permute.xhtml",tooltip="Basic function to run kernels::ClPermuteKernel."];
  Node1 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="ClPool2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_pool2d.xhtml",tooltip="Basic function to simulate a pooling layer with the specified pooling operation."];
  Node1 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="ClPool3d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_pool3d.xhtml",tooltip="Basic function to simulate a pooling layer with the specified pooling operation."];
  Node1 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="ClQuantize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_quantize.xhtml",tooltip="Basic function to run kernels::ClQuantizeKernel that dequantizes an input tensor."];
  Node1 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="ClReshape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_reshape.xhtml",tooltip="Basic function to run kernels::ClReshapeKernel."];
  Node1 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="ClRound",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_round.xhtml",tooltip="Basic function to get the round (to the nearest even) value of an src tensor."];
  Node1 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="ClRsqrt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_rsqrt.xhtml",tooltip="Basic function to perform inverse square root on an src tensor."];
  Node1 -> Node53 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="ClScale",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_scale.xhtml",tooltip="Basic function to simulate a scale layer."];
  Node1 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="ClSin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_sin.xhtml",tooltip="Basic function to calculate sine of an src tensor."];
  Node1 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="ClSoftmax",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_softmax.xhtml",tooltip=" "];
  Node1 -> Node56 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="ClSub",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_sub.xhtml",tooltip="Basic function to run arithmetic subtraction."];
  Node1 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="ClTranspose",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_transpose.xhtml",tooltip="Basic function to run kernels::ClTransposeKernel."];
  Node1 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="ClTransposedConvolution",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_transposed_convolution.xhtml",tooltip="Basic function to simulate a directly convolution layer."];
  Node1 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="ClWinogradConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml",tooltip="Basic function to execute Winograd-based convolution on OpenCL."];
  Node1 -> Node60 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="CLSynthetizeOperator\< K \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml",tooltip="This template synthetizes a simple IOperator which runs the given kernel K."];
  Node1 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="CLSynthetizeOperatorInit\lOutputWithZeroAndWithZeroConstant\lBorder\< K, bordersize \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1test_1_1_c_l_synthetize_operator_init_output_with_zero_and_with_zero_constant_border.xhtml",tooltip="As above but this also initializes to zero the input tensor."];
  Node1 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="ClSynthetizeOperatorWith\lBorder\< K \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1test_1_1_cl_synthetize_operator_with_border.xhtml",tooltip="As above but this also setups a Zero border on the input tensor of the kernel's bordersize."];
  Node0 -> Node63 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="INEOperator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml",tooltip="Basic interface for functions which have a single async CPU kernel."];
  Node63 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="CpuActivation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_activation.xhtml",tooltip="Basic function to run kernels::CpuActivationKernel."];
  Node63 -> Node65 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="CpuAdd",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_add.xhtml",tooltip="Basic function to run kernels::CpuAddKernel."];
  Node63 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node66 [label="CpuAddMulAdd",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_add_mul_add.xhtml",tooltip="Basic function to run kernels::CpuAddMulAddKernel."];
  Node63 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node67 [label="CpuCast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_cast.xhtml",tooltip="Basic function to run kernels::CpuCastKernel."];
  Node63 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 [label="CpuComplexMul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_complex_mul.xhtml",tooltip="Basic function to run kernels::CpuComplexMulKernel."];
  Node63 -> Node69 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node69 [label="CpuConcatenate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_concatenate.xhtml",tooltip="Basic function to execute concatenate tensors along a given axis."];
  Node63 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node70 [label="CpuConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml",tooltip="Basic function to simulate a convolution layer."];
  Node63 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node71 [label="CpuConvertFullyConnected\lWeights",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_convert_fully_connected_weights.xhtml",tooltip="Basic function to run kernels::CpuConvertFullyConnectedWeightsKernel."];
  Node63 -> Node72 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="CpuCopy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_copy.xhtml",tooltip="Basic function to run kernels::CpuCopyKernel."];
  Node63 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="CpuDepthwiseConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d.xhtml",tooltip="Function to execute a depthwise convolution."];
  Node63 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="CpuDepthwiseConv2dAssembly\lDispatch",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml",tooltip="Depthwise convolution assembly kernel glue."];
  Node63 -> Node75 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node75 [label="CpuDequantize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_dequantize.xhtml",tooltip="Basic function to run kernels::CpuDequantizeKernel that dequantizes an input tensor."];
  Node63 -> Node76 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node76 [label="CpuDirectConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_direct_conv2d.xhtml",tooltip="Function to run the direct convolution."];
  Node63 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node77 [label="CpuDirectConv3d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_direct_conv3d.xhtml",tooltip="Function to run the direct convolution."];
  Node63 -> Node78 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node78 [label="CpuElementwiseBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_elementwise_base.xhtml",tooltip=" "];
  Node78 -> Node79 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node79 [label="CpuElementwiseArithmetic\l\< op \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_elementwise_arithmetic.xhtml",tooltip="Class to run cpu::kernels::CpuArithmeticKernel except for division and power."];
  Node78 -> Node80 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node80 [label="CpuElementwiseComparison",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison.xhtml",tooltip="Basic function to run cpu::kernels::CpuComparisonKernel."];
  Node78 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node81 [label="CpuElementwiseComparison\lStatic\< op \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison_static.xhtml",tooltip="Basic function to run cpu::kernels::CpuComparisonKernel."];
  Node78 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node82 [label="CpuElementwiseDivision",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_elementwise_division.xhtml",tooltip="Basic function to run cpu::kernels::CpuArithmeticKernel for division."];
  Node78 -> Node83 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node83 [label="CpuElementwisePower",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_elementwise_power.xhtml",tooltip="Basic function to run cpu::kernels::CpuArithmeticKernel for power."];
  Node63 -> Node84 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node84 [label="CpuElementwiseUnary",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_elementwise_unary.xhtml",tooltip=" "];
  Node63 -> Node85 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node85 [label="CpuFill",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_fill.xhtml",tooltip="Basic function to run kernels::CpuFillKernel."];
  Node63 -> Node86 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node86 [label="CpuFlatten",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_flatten.xhtml",tooltip="Basic function to flatten a given input."];
  Node63 -> Node87 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node87 [label="CpuFloor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_floor.xhtml",tooltip="Basic function to run kernels::CpuFloorKernel."];
  Node63 -> Node88 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 [label="CpuFullyConnected",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml",tooltip="Basic function to compute a Fully Connected layer."];
  Node63 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 [label="CpuGemm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml",tooltip="Basic function to execute GEMM."];
  Node63 -> Node90 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 [label="CpuGemmAssemblyDispatch",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml",tooltip="Assembly kernel glue."];
  Node63 -> Node91 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="CpuGemmConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml",tooltip="Basic function to compute the convolution layer."];
  Node63 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="CpuGemmDirectConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml",tooltip=" "];
  Node63 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="CpuGemmLowpMatrixMultiplyCore",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml",tooltip="Basic function to execute GEMMLowpMatrixMultiplyCore."];
  Node63 -> Node94 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="CpuGemmLowpOutputStage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_output_stage.xhtml",tooltip="Basic function to execute GEMMLowpQuantizeDown kernels."];
  Node63 -> Node95 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node95 [label="CpuMatMul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_mat_mul.xhtml",tooltip="Function to execute MatMul Operation."];
  Node63 -> Node96 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="CpuMaxUnpooling",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_max_unpooling.xhtml",tooltip="Basic function to run kernels::CpuMaxUnpoolingLayerKernel."];
  Node63 -> Node97 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="CpuMul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_mul.xhtml",tooltip="Basic function to run kernels::CpuMulKernel."];
  Node63 -> Node98 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node98 [label="CpuPermute",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_permute.xhtml",tooltip="Basic function to run kernels::CpuPermuteKernel."];
  Node63 -> Node99 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node99 [label="CpuPool2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_pool2d.xhtml",tooltip="Basic function to simulate a pooling layer with the specified pooling operation."];
  Node63 -> Node100 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="CpuPool3d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_pool3d.xhtml",tooltip="Basic function to simulate a pooling layer with the specified pooling operation."];
  Node63 -> Node101 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="CpuQuantize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_quantize.xhtml",tooltip="Basic function to run kernels::CpuQuantizeKernel that dequantizes an input tensor."];
  Node63 -> Node102 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 [label="CpuReshape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_reshape.xhtml",tooltip="Basic function to run kernels::CpuReshapeKernel."];
  Node63 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 [label="CpuScale",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_scale.xhtml",tooltip="Basic function to compute Scale."];
  Node63 -> Node104 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="CpuSoftmaxGeneric",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_softmax_generic.xhtml",tooltip="Basic function to compute a SoftmaxLayer and a Log SoftmaxLayer."];
  Node63 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="CpuSub",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_sub.xhtml",tooltip="Basic function to run kernels::CpuSubKernel."];
  Node63 -> Node106 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="CpuTranspose",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_transpose.xhtml",tooltip="Basic function to run kernels::CpuTransposeKernel."];
  Node63 -> Node107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="CpuWinogradConv2d",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml",tooltip=" "];
  Node63 -> Node108 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="NESlice",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1experimental_1_1_n_e_slice.xhtml",tooltip="Basic function to perform tensor slicing."];
  Node63 -> Node109 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="NEStridedSlice",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1experimental_1_1_n_e_strided_slice.xhtml",tooltip="Basic function to run NEStridedSliceKernel."];
  Node63 -> Node110 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node110 [label="NESynthetizeFunctionWith\lZeroConstantKernelBorder\< K \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_kernel_border.xhtml",tooltip="As above but this also setups a Zero border on the input tensor of the kernel's bordersize."];
}
