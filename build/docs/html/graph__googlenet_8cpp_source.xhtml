<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: examples/graph_googlenet.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('graph__googlenet_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">graph_googlenet.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="graph__googlenet_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_8h.xhtml">arm_compute/graph.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_common_graph_options_8h.xhtml">utils/CommonGraphOptions.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_utils_8h.xhtml">utils/GraphUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;utils/Utils.h&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/** Example demonstrating how to implement Googlenet&#39;s network using the Compute Library&#39;s graph API */</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span>GraphGooglenetExample : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1utils_1_1_example.xhtml">Example</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    GraphGooglenetExample() : cmd_parser(), common_opts(cmd_parser), common_params(), graph(0, <span class="stringliteral">&quot;GoogleNet&quot;</span>)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordtype">bool</span> do_setup(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)<span class="keyword"> override</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="comment">// Parse arguments</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        cmd_parser.parse(argc, argv);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        cmd_parser.validate();</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="comment">// Consume common parameters</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        common_params = <a class="code" href="namespacearm__compute_1_1utils.xhtml#a2593e1f13f425f627658900657f73dc3">consume_common_graph_parameters</a>(common_opts);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="comment">// Return when help menu is requested</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">if</span> (common_params.help)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            cmd_parser.print_help(argv[0]);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="comment">// Checks</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="_error_8h.xhtml#a292b758f9eba8b487d71eae4b37326fc">ARM_COMPUTE_EXIT_ON_MSG</a>(<a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a>(common_params.data_type),</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                <span class="stringliteral">&quot;QASYMM8 not supported for this graph&quot;</span>);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="comment">// Print parameter values</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        std::cout &lt;&lt; common_params &lt;&lt; std::endl;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="comment">// Get trainable parameters data path</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        std::string data_path = common_params.data_path;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="comment">// Create a preprocessor object</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keyword">const</span> std::array&lt;float, 3&gt;     mean_rgb{{122.68f, 116.67f, 104.01f}};</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        std::unique_ptr&lt;IPreprocessor&gt; preprocessor = std::make_unique&lt;CaffePreproccessor&gt;(mean_rgb);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment">// Create input descriptor</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>        operation_layout = common_params.data_layout;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">const</span> TensorShape tensor_shape =</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ab3a897163a7fe23208f1d9c618062ee2">permute_shape</a>(TensorShape(224U, 224U, 3U, common_params.batches), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>, operation_layout);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> input_descriptor =</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>(tensor_shape, common_params.data_type).<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a2497d23622ec1343e507331ae1388f00">set_layout</a>(operation_layout);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="comment">// Set weights trained layout</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> weights_layout = <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        graph &lt;&lt; common_params.target &lt;&lt; common_params.fast_math_hint</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">InputLayer</a>(input_descriptor, <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ab14324184f90f342227699c161654b1b">get_input_accessor</a>(common_params, std::move(preprocessor)))</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(7U, 7U, 64U,</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/googlenet_model/conv1/conv1_7x7_s2_w.npy&quot;</span>,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                                                       weights_layout),</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/googlenet_model/conv1/conv1_7x7_s2_b.npy&quot;</span>),</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                  PadStrideInfo(2, 2, 3, 3))</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv1/7x7_s2&quot;</span>)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU))</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv1/relu_7x7&quot;</span>)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(PoolingLayerInfo(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5">PoolingType::MAX</a>, 3, operation_layout,</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                               PadStrideInfo(2, 2, 0, 0, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>)))</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;pool1/3x3_s2&quot;</span>)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml">NormalizationLayer</a>(NormalizationLayerInfo(<a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">NormType::CROSS_MAP</a>, 5, 0.0001f, 0.75f))</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;pool1/norm1&quot;</span>)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                     1U, 1U, 64U,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                     <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/googlenet_model/conv2/conv2_3x3_reduce_w.npy&quot;</span>,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                          weights_layout),</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                     <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/googlenet_model/conv2/conv2_3x3_reduce_b.npy&quot;</span>),</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                     PadStrideInfo(1, 1, 0, 0))</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv2/3x3_reduce&quot;</span>)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU))</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv2/relu_3x3_reduce&quot;</span>)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                     3U, 3U, 192U,</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                     <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/googlenet_model/conv2/conv2_3x3_w.npy&quot;</span>, weights_layout),</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                     <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/googlenet_model/conv2/conv2_3x3_b.npy&quot;</span>),</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                     PadStrideInfo(1, 1, 1, 1))</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv2/3x3&quot;</span>)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU))</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv2/relu_3x3&quot;</span>)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml">NormalizationLayer</a>(NormalizationLayerInfo(<a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">NormType::CROSS_MAP</a>, 5, 0.0001f, 0.75f))</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv2/norm2&quot;</span>)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(PoolingLayerInfo(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5">PoolingType::MAX</a>, 3, operation_layout,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                               PadStrideInfo(2, 2, 0, 0, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>)))</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;pool2/3x3_s2&quot;</span>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        graph &lt;&lt; get_inception_node(data_path, <span class="stringliteral">&quot;inception_3a&quot;</span>, weights_layout, 64, std::make_tuple(96U, 128U),</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                    std::make_tuple(16U, 32U), 32U)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;inception_3a/concat&quot;</span>);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        graph &lt;&lt; get_inception_node(data_path, <span class="stringliteral">&quot;inception_3b&quot;</span>, weights_layout, 128, std::make_tuple(128U, 192U),</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                    std::make_tuple(32U, 96U), 64U)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;inception_3b/concat&quot;</span>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        graph &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(PoolingLayerInfo(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5">PoolingType::MAX</a>, 3, operation_layout,</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                                               PadStrideInfo(2, 2, 0, 0, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>)))</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;pool3/3x3_s2&quot;</span>);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        graph &lt;&lt; get_inception_node(data_path, <span class="stringliteral">&quot;inception_4a&quot;</span>, weights_layout, 192, std::make_tuple(96U, 208U),</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                    std::make_tuple(16U, 48U), 64U)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;inception_4a/concat&quot;</span>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        graph &lt;&lt; get_inception_node(data_path, <span class="stringliteral">&quot;inception_4b&quot;</span>, weights_layout, 160, std::make_tuple(112U, 224U),</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                    std::make_tuple(24U, 64U), 64U)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;inception_4b/concat&quot;</span>);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        graph &lt;&lt; get_inception_node(data_path, <span class="stringliteral">&quot;inception_4c&quot;</span>, weights_layout, 128, std::make_tuple(128U, 256U),</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                    std::make_tuple(24U, 64U), 64U)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;inception_4c/concat&quot;</span>);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        graph &lt;&lt; get_inception_node(data_path, <span class="stringliteral">&quot;inception_4d&quot;</span>, weights_layout, 112, std::make_tuple(144U, 288U),</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                    std::make_tuple(32U, 64U), 64U)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;inception_4d/concat&quot;</span>);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        graph &lt;&lt; get_inception_node(data_path, <span class="stringliteral">&quot;inception_4e&quot;</span>, weights_layout, 256, std::make_tuple(160U, 320U),</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                    std::make_tuple(32U, 128U), 128U)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;inception_4e/concat&quot;</span>);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        graph &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(PoolingLayerInfo(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5">PoolingType::MAX</a>, 3, operation_layout,</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                               PadStrideInfo(2, 2, 0, 0, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>)))</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;pool4/3x3_s2&quot;</span>);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        graph &lt;&lt; get_inception_node(data_path, <span class="stringliteral">&quot;inception_5a&quot;</span>, weights_layout, 256, std::make_tuple(160U, 320U),</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                    std::make_tuple(32U, 128U), 128U)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;inception_5a/concat&quot;</span>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        graph &lt;&lt; get_inception_node(data_path, <span class="stringliteral">&quot;inception_5b&quot;</span>, weights_layout, 384, std::make_tuple(192U, 384U),</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                    std::make_tuple(48U, 128U), 128U)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;inception_5b/concat&quot;</span>);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        graph &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(PoolingLayerInfo(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a">PoolingType::AVG</a>, 7, operation_layout,</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                               PadStrideInfo(1, 1, 0, 0, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>)))</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;pool5/7x7_s1&quot;</span>)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a>(</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                     1000U,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                     <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/googlenet_model/loss3/loss3_classifier_w.npy&quot;</span>,</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                          weights_layout),</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                     <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/googlenet_model/loss3/loss3_classifier_b.npy&quot;</span>))</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                     .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;loss3/classifier&quot;</span>)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml">SoftmaxLayer</a>().<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;prob&quot;</span>) &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml">OutputLayer</a>(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ae3d177d243f5fb34544105a4ee4e1f58">get_output_accessor</a>(common_params, 5));</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="comment">// Finalize graph</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml">GraphConfig</a> config;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a08963f7335eef295237ab460863bc3d5">num_threads</a> = common_params.threads;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a9da74af255a3e6ea61180d4a03192a48">use_tuner</a>   = common_params.enable_tuner;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a249f3f713c6ea8f564e760559cf509f4">tuner_mode</a>  = common_params.tuner_mode;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">tuner_file</a>  = common_params.tuner_file;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a11c0bd1d663fbaa516fac9160ec96d4b">mlgo_file</a>   = common_params.mlgo_file;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        graph.finalize(common_params.target, config);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordtype">void</span> do_run()<span class="keyword"> override</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="comment">// Run graph</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        graph.run();</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">CommandLineParser</a>  cmd_parser;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">CommonGraphOptions</a> common_opts;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">CommonGraphParams</a>  common_params;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml">Stream</a>             graph;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_concat_layer.xhtml">ConcatLayer</a> get_inception_node(<span class="keyword">const</span> std::string                     &amp;data_path,</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                   std::string                          &amp;&amp;param_path,</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                   <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>                             weights_layout,</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                           a_filt,</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                                   std::tuple&lt;unsigned int, unsigned int&gt; b_filters,</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                   std::tuple&lt;unsigned int, unsigned int&gt; c_filters,</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                           d_filt)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        std::string total_path = <span class="stringliteral">&quot;/cnn_data/googlenet_model/&quot;</span> + param_path + <span class="stringliteral">&quot;/&quot;</span> + param_path + <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a>   i_a(graph);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        i_a &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(1U, 1U, a_filt,</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;1x1_w.npy&quot;</span>, weights_layout),</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;1x1_b.npy&quot;</span>), PadStrideInfo(1, 1, 0, 0))</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/1x1&quot;</span>)</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU))</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/relu_1x1&quot;</span>);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> i_b(graph);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        i_b &lt;&lt; ConvolutionLayer(1U, 1U, std::get&lt;0&gt;(b_filters),</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;3x3_reduce_w.npy&quot;</span>, weights_layout),</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;3x3_reduce_b.npy&quot;</span>),</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                PadStrideInfo(1, 1, 0, 0))</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                   .set_name(param_path + <span class="stringliteral">&quot;/3x3_reduce&quot;</span>)</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU))</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/relu_3x3_reduce&quot;</span>)</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(3U, 3U, std::get&lt;1&gt;(b_filters),</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                                <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;3x3_w.npy&quot;</span>, weights_layout),</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;3x3_b.npy&quot;</span>), PadStrideInfo(1, 1, 1, 1))</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/3x3&quot;</span>)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU))</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/relu_3x3&quot;</span>);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> i_c(graph);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        i_c &lt;&lt; ConvolutionLayer(1U, 1U, std::get&lt;0&gt;(c_filters),</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;5x5_reduce_w.npy&quot;</span>, weights_layout),</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;5x5_reduce_b.npy&quot;</span>),</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                PadStrideInfo(1, 1, 0, 0))</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                   .set_name(param_path + <span class="stringliteral">&quot;/5x5_reduce&quot;</span>)</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU))</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/relu_5x5_reduce&quot;</span>)</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(5U, 5U, std::get&lt;1&gt;(c_filters),</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;5x5_w.npy&quot;</span>, weights_layout),</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;5x5_b.npy&quot;</span>), PadStrideInfo(1, 1, 2, 2))</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/5x5&quot;</span>)</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU))</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/relu_5x5&quot;</span>);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> i_d(graph);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        i_d &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(PoolingLayerInfo(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5">PoolingType::MAX</a>, 3, common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#aa56f0562febf49bc0e29a4257551191b">data_layout</a>,</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                                             PadStrideInfo(1, 1, 1, 1, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>)))</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/pool&quot;</span>)</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                   1U, 1U, d_filt, <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;pool_proj_w.npy&quot;</span>, weights_layout),</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                   <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;pool_proj_b.npy&quot;</span>), PadStrideInfo(1, 1, 0, 0))</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/pool_proj&quot;</span>)</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU))</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                   .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/relu_pool_proj&quot;</span>);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_concat_layer.xhtml">ConcatLayer</a>(std::move(i_a), std::move(i_b), std::move(i_c), std::move(i_d));</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;};</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">/** Main program for Googlenet</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment"> * Model is based on:</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment"> *      https://arxiv.org/abs/1409.4842</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment"> *      &quot;Going deeper with convolutions&quot;</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment"> *      Christian Szegedy, Wei Liu, Yangqing Jia, Pierre Sermanet, Scott Reed, Dragomir Anguelov, Dumitru Erhan, Vincent Vanhoucke, Andrew Rabinovich</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment"> * Provenance: https://github.com/BVLC/caffe/tree/master/models/bvlc_googlenet</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment"> * @note To list all the possible arguments execute the binary appended with the --help option</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment"> * @param[in] argc Number of arguments</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment"> * @param[in] argv Arguments</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="graph__googlenet_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">  263</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="graph__googlenet_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;{</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">return</span> arm_compute::utils::run_example&lt;GraphGooglenetExample&gt;(argc, argv);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div>
<div class="ttc" id="a_common_graph_options_8h_xhtml"><div class="ttname"><a href="_common_graph_options_8h.xhtml">CommonGraphOptions.h</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a292b758f9eba8b487d71eae4b37326fc"><div class="ttname"><a href="_error_8h.xhtml#a292b758f9eba8b487d71eae4b37326fc">ARM_COMPUTE_EXIT_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_EXIT_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, the given message is printed and program exits.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00382">Error.h:382</a></div></div>
<div class="ttc" id="a_graph_8h_xhtml"><div class="ttname"><a href="_graph_8h.xhtml">graph.h</a></div><div class="ttdoc">Includes all the Graph headers at once.</div></div>
<div class="ttc" id="a_graph_utils_8h_xhtml"><div class="ttname"><a href="_graph_utils_8h.xhtml">GraphUtils.h</a></div></div>
<div class="ttc" id="a_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_activation_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">arm_compute::graph::frontend::ActivationLayer</a></div><div class="ttdoc">Activation Layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00118">Layers.h:119</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_concat_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_concat_layer.xhtml">arm_compute::graph::frontend::ConcatLayer</a></div><div class="ttdoc">Concat Layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00289">Layers.h:290</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_convolution_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">arm_compute::graph::frontend::ConvolutionLayer</a></div><div class="ttdoc">Convolution Layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00373">Layers.h:374</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">arm_compute::graph::frontend::FullyConnectedLayer</a></div><div class="ttdoc">Fully Connected Layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00714">Layers.h:715</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_i_layer_xhtml_af664a2598e05f8de28fb9f94e3902886"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">arm_compute::graph::frontend::ILayer::set_name</a></div><div class="ttdeci">ILayer &amp; set_name(std::string name)</div><div class="ttdoc">Sets the name of the layer.</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_8h_source.xhtml#l00055">ILayer.h:55</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_input_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">arm_compute::graph::frontend::InputLayer</a></div><div class="ttdoc">Input Layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00044">Layers.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_normalization_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml">arm_compute::graph::frontend::NormalizationLayer</a></div><div class="ttdoc">Normalization Layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00877">Layers.h:878</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_output_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml">arm_compute::graph::frontend::OutputLayer</a></div><div class="ttdoc">Output Layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00092">Layers.h:93</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_pooling_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">arm_compute::graph::frontend::PoolingLayer</a></div><div class="ttdoc">Pooling Layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00982">Layers.h:983</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_softmax_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml">arm_compute::graph::frontend::SoftmaxLayer</a></div><div class="ttdoc">Softmax Layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l01324">Layers.h:1325</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_stream_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml">arm_compute::graph::frontend::Stream</a></div><div class="ttdoc">Stream frontend class to construct simple graphs in a stream fashion.</div><div class="ttdef"><b>Definition:</b> <a href="_stream_8h_source.xhtml#l00044">Stream.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1frontend_1_1_sub_stream_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">arm_compute::graph::frontend::SubStream</a></div><div class="ttdoc">Sub stream class.</div><div class="ttdef"><b>Definition:</b> <a href="_sub_stream_8h_source.xhtml#l00047">SubStream.h:48</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_command_line_parser_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">arm_compute::utils::CommandLineParser</a></div><div class="ttdoc">Class to parse command line arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00044">CommandLineParser.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_common_graph_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">arm_compute::utils::CommonGraphOptions</a></div><div class="ttdoc">Common command line options used to configure the graph examples.</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00134">CommonGraphOptions.h:135</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_example_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_example.xhtml">arm_compute::utils::Example</a></div><div class="ttdoc">Abstract Example class.</div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00074">Utils.h:75</a></div></div>
<div class="ttc" id="agraph__googlenet_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="graph__googlenet_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdoc">Main program for Googlenet.</div><div class="ttdef"><b>Definition:</b> <a href="graph__googlenet_8cpp_source.xhtml#l00263">graph_googlenet.cpp:263</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1frontend_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_8h_source.xhtml#l00031">ILayer.h:32</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph__utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00044">GraphUtils.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph__utils_xhtml_a30bee0b52a919bbcb1dc48b1b6546a16"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">arm_compute::graph_utils::get_weights_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_weights_accessor(const std::string &amp;path, const std::string &amp;data_file, DataLayout file_layout=DataLayout::NCHW)</div><div class="ttdoc">Generates appropriate weights accessor according to the specified path.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00484">GraphUtils.h:484</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph__utils_xhtml_ab14324184f90f342227699c161654b1b"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#ab14324184f90f342227699c161654b1b">arm_compute::graph_utils::get_input_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_input_accessor(const arm_compute::utils::CommonGraphParams &amp;graph_parameters, std::unique_ptr&lt; IPreprocessor &gt; preprocessor=nullptr, bool bgr=true)</div><div class="ttdoc">Generates appropriate input accessor according to the specified graph parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00505">GraphUtils.h:505</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph__utils_xhtml_ab3a897163a7fe23208f1d9c618062ee2"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#ab3a897163a7fe23208f1d9c618062ee2">arm_compute::graph_utils::permute_shape</a></div><div class="ttdeci">TensorShape permute_shape(TensorShape tensor_shape, DataLayout in_data_layout, DataLayout out_data_layout)</div><div class="ttdoc">Permutes a given tensor shape given the input and output data layout.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00673">GraphUtils.h:673</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph__utils_xhtml_ae3d177d243f5fb34544105a4ee4e1f58"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#ae3d177d243f5fb34544105a4ee4e1f58">arm_compute::graph_utils::get_output_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_output_accessor(const arm_compute::utils::CommonGraphParams &amp;graph_parameters, size_t top_n=5, bool is_validation=false, std::ostream &amp;output_stream=std::cout)</div><div class="ttdoc">Generates appropriate output accessor according to the specified graph parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00549">GraphUtils.h:549</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a></div><div class="ttdef"><b>Definition:</b> <a href="_safe_ops_8h_source.xhtml#l00035">SafeOps.h:36</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_xhtml_a2593e1f13f425f627658900657f73dc3"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a2593e1f13f425f627658900657f73dc3">arm_compute::utils::consume_common_graph_parameters</a></div><div class="ttdeci">void consume_common_graph_parameters(CommonGraphValidateOptions &amp;options, CommonParams &amp;common_params)</div><div class="ttdoc">Consumes the consume_common_graph_parameters graph options and creates a structure containing any inf...</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00312">graph_validate_utils.h:312</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00346">DataTypeUtils.h:346</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">arm_compute::DimensionRoundingType::CEIL</a></div><div class="ttdeci">@ CEIL</div><div class="ttdoc">Ceil rounding.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5">arm_compute::PoolingType::MAX</a></div><div class="ttdeci">@ MAX</div><div class="ttdoc">Max Pooling.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a"><div class="ttname"><a href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a">arm_compute::PoolingType::AVG</a></div><div class="ttdeci">@ AVG</div><div class="ttdoc">Average Pooling.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00110">CoreTypes.h:111</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdeci">@ NCHW</div><div class="ttdoc">Num samples, channels, height, width.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">arm_compute::NormType::CROSS_MAP</a></div><div class="ttdeci">@ CROSS_MAP</div><div class="ttdoc">Normalization applied cross maps.</div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml">arm_compute::graph::GraphConfig</a></div><div class="ttdoc">Graph configuration structure Device target types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00087">Types.h:88</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml_a08963f7335eef295237ab460863bc3d5"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a08963f7335eef295237ab460863bc3d5">arm_compute::graph::GraphConfig::num_threads</a></div><div class="ttdeci">int num_threads</div><div class="ttdoc">Number of threads to use (thread capable backends), if 0 the backend will auto-initialize,...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00096">Types.h:96</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml_a11c0bd1d663fbaa516fac9160ec96d4b"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a11c0bd1d663fbaa516fac9160ec96d4b">arm_compute::graph::GraphConfig::mlgo_file</a></div><div class="ttdeci">std::string mlgo_file</div><div class="ttdoc">Filename to load MLGO heuristics from.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00099">Types.h:99</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml_a249f3f713c6ea8f564e760559cf509f4"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a249f3f713c6ea8f564e760559cf509f4">arm_compute::graph::GraphConfig::tuner_mode</a></div><div class="ttdeci">CLTunerMode tuner_mode</div><div class="ttdoc">Tuner mode to be used by the CL tuner.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00095">Types.h:95</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml_a5cabfb35cd0014387f7ec2a0c362c20f"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">arm_compute::graph::GraphConfig::tuner_file</a></div><div class="ttdeci">std::string tuner_file</div><div class="ttdoc">File to load/store tuning values from.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00098">Types.h:98</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml_a9da74af255a3e6ea61180d4a03192a48"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a9da74af255a3e6ea61180d4a03192a48">arm_compute::graph::GraphConfig::use_tuner</a></div><div class="ttdeci">bool use_tuner</div><div class="ttdoc">Use a tuner in tunable backends.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00092">Types.h:92</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_tensor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">arm_compute::graph::TensorDescriptor</a></div><div class="ttdoc">Tensor metadata class.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00038">TensorDescriptor.h:39</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_tensor_descriptor_xhtml_a2497d23622ec1343e507331ae1388f00"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a2497d23622ec1343e507331ae1388f00">arm_compute::graph::TensorDescriptor::set_layout</a></div><div class="ttdeci">TensorDescriptor &amp; set_layout(DataLayout data_layout)</div><div class="ttdoc">Sets tensor descriptor data layout.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00090">TensorDescriptor.h:90</a></div></div>
<div class="ttc" id="astructarm__compute_1_1utils_1_1_common_graph_params_xhtml"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">arm_compute::utils::CommonGraphParams</a></div><div class="ttdoc">Structure holding all the common graph parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00093">CommonGraphOptions.h:94</a></div></div>
<div class="ttc" id="astructarm__compute_1_1utils_1_1_common_graph_params_xhtml_aa56f0562febf49bc0e29a4257551191b"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#aa56f0562febf49bc0e29a4257551191b">arm_compute::utils::CommonGraphParams::data_layout</a></div><div class="ttdeci">arm_compute::DataLayout data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00100">CommonGraphOptions.h:100</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="graph__googlenet_8cpp.xhtml">graph_googlenet.cpp</a></li>
    <li class="footer">Generated on Mon Feb 12 2024 13:44:40 for Compute Library by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
