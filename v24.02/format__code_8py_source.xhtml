<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: scripts/format_code.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('format__code_8py_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">format_code.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="format__code_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml">    1</a></span>&#160;<span class="comment">#!/usr/bin/env python3</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"># Copyright (c) 2023 Arm Limited.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"># SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"># The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"># THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"># AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"># LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"># OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"># SOFTWARE.</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">import</span> argparse</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> datetime</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> difflib</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> filecmp</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> logging</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> os</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> re</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> subprocess</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> sys</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">from</span> modules.Shell <span class="keyword">import</span> Shell</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#a0b14e488ae28d98d262453f3e9cd6e4d">   37</a></span>&#160;logger = logging.getLogger(<span class="stringliteral">&quot;format_code&quot;</span>)</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"># List of directories to exclude</span></div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#aa179bcf69116378369d06491b5548c6a">   40</a></span>&#160;exceptions = [</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="stringliteral">&quot;src/core/NEON/kernels/assembly/gemm&quot;</span>,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="stringliteral">&quot;src/core/NEON/kernels/assembly/arm&quot;</span>,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="stringliteral">&quot;/winograd/&quot;</span>,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="stringliteral">&quot;/convolution/&quot;</span>,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="stringliteral">&quot;/arm_gemm/&quot;</span>,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="stringliteral">&quot;/arm_conv/&quot;</span>,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="stringliteral">&quot;SConscript&quot;</span>,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="stringliteral">&quot;SConstruct&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;]</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#af11f9975f30ec96231b491acb3617900">   51</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceformat__code.xhtml#af11f9975f30ec96231b491acb3617900">adjust_copyright_year</a>(copyright_years, curr_year):</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    ret_copyright_year = <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>()</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment"># Read last year in the Copyright</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    last_year = int(copyright_years[-4:])</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">if</span> last_year == curr_year:</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        ret_copyright_year = copyright_years</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">elif</span> last_year == (curr_year - 1):</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="comment"># Create range if latest year on the copyright is the previous</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">if</span> len(copyright_years) &gt; 4 <span class="keywordflow">and</span> copyright_years[-5] == <span class="stringliteral">&quot;-&quot;</span>:</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="comment"># Range already exists, update year to current</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            ret_copyright_year = copyright_years[:-5] + <span class="stringliteral">&quot;-&quot;</span> + <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(curr_year)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="comment"># Create a new range</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            ret_copyright_year = copyright_years + <span class="stringliteral">&quot;-&quot;</span> + <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(curr_year)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        ret_copyright_year = copyright_years + <span class="stringliteral">&quot;, &quot;</span> + <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(curr_year)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> ret_copyright_year</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#a687b0a4ae7ab00595f03bdf9760ecf47">   69</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceformat__code.xhtml#a687b0a4ae7ab00595f03bdf9760ecf47">check_copyright</a>( filename ):</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    f = open(filename, <span class="stringliteral">&quot;r&quot;</span>)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    content = f.readlines()</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    f.close()</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    f = open(filename, <span class="stringliteral">&quot;w&quot;</span>)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    year = datetime.datetime.now().year</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    ref = open(<span class="stringliteral">&quot;scripts/copyright_mit.txt&quot;</span>,<span class="stringliteral">&quot;r&quot;</span>).readlines()</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment"># Need to handle python files separately</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    if(<span class="stringliteral">&quot;SConstruct&quot;</span> <span class="keywordflow">in</span> filename <span class="keywordflow">or</span> <span class="stringliteral">&quot;SConscript&quot;</span> <span class="keywordflow">in</span> filename):</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        start = 2</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        if(<span class="stringliteral">&quot;SConscript&quot;</span> <span class="keywordflow">in</span> filename):</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            start = 3</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        m = re.match(<span class="stringliteral">&quot;(# Copyright \(c\) )(.*\d{4})( [Arm|ARM].*)&quot;</span>, content[start])</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        line = m.group(1)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">if</span> m.group(2): <span class="comment"># Is there a year already?</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="comment"># Yes: adjust accordingly</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            line += <a class="code" href="namespaceformat__code.xhtml#af11f9975f30ec96231b491acb3617900">adjust_copyright_year</a>(m.group(2), year)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="comment"># No: add current year</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            line += <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(year)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        line += m.group(3).replace(<span class="stringliteral">&quot;ARM&quot;</span>, <span class="stringliteral">&quot;Arm&quot;</span>)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        if(<span class="stringliteral">&quot;SConscript&quot;</span> <span class="keywordflow">in</span> filename):</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            f.write(<span class="stringliteral">&#39;#!/usr/bin/python\n&#39;</span>)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        f.write(<span class="stringliteral">&#39;# -*- coding: utf-8 -*-\n\n&#39;</span>)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        f.write(line+<span class="stringliteral">&quot;\n&quot;</span>)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="comment"># Copy the rest of the file&#39;s content:</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        f.write(<span class="stringliteral">&quot;&quot;</span>.<a class="code" href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">join</a>(content[start + 1:]))</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        f.close()</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">return</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment"># This only works until year 9999</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    m = re.match(<span class="stringliteral">&quot;(.*Copyright \(c\) )(.*\d{4})( [Arm|ARM].*)&quot;</span>, content[1])</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    start =len(ref)+2</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">if</span> content[0] != <span class="stringliteral">&quot;/*\n&quot;</span> <span class="keywordflow">or</span> <span class="keywordflow">not</span> m:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        start = 0</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        f.write(<span class="stringliteral">&quot;/*\n * Copyright (c) %d Arm Limited.\n&quot;</span> % year)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        logger.debug(<span class="stringliteral">&quot;Found Copyright start&quot;</span>)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        logger.debug(<span class="stringliteral">&quot;\n\t&quot;</span>.<a class="code" href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">join</a>([ g <span class="keywordflow">or</span> <span class="stringliteral">&quot;&quot;</span> <span class="keywordflow">for</span> g <span class="keywordflow">in</span> m.groups()]))</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        line = m.group(1)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">if</span> m.group(2): <span class="comment"># Is there a year already?</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="comment"># Yes: adjust accordingly</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            line += <a class="code" href="namespaceformat__code.xhtml#af11f9975f30ec96231b491acb3617900">adjust_copyright_year</a>(m.group(2), year)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="comment"># No: add current year</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            line += <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(year)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        line += m.group(3).replace(<span class="stringliteral">&quot;ARM&quot;</span>, <span class="stringliteral">&quot;Arm&quot;</span>)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        f.write(<span class="stringliteral">&quot;/*\n&quot;</span>+line+<span class="stringliteral">&quot;\n&quot;</span>)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        logger.debug(line)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment"># Write out the rest of the Copyright header:</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">for</span> i <span class="keywordflow">in</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87f09c74765be18a99038478f96daf9b">range</a>(1, len(ref)):</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        line = ref[i]</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        f.write(<span class="stringliteral">&quot; *&quot;</span>)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">if</span> line.rstrip() != <span class="stringliteral">&quot;&quot;</span>:</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            f.write(<span class="stringliteral">&quot; %s&quot;</span> % line)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            f.write(<span class="stringliteral">&quot;\n&quot;</span>)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    f.write(<span class="stringliteral">&quot; */\n&quot;</span>)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment"># Copy the rest of the file&#39;s content:</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    f.write(<span class="stringliteral">&quot;&quot;</span>.<a class="code" href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">join</a>(content[start:]))</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    f.close()</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#a4920fc8031e09145b4f8500d02b1fdf2">  136</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceformat__code.xhtml#a4920fc8031e09145b4f8500d02b1fdf2">check_license</a>(filename):</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="stringliteral">    Check that the license file is up-to-date</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    f = open(filename, <span class="stringliteral">&quot;r&quot;</span>)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    content = f.readlines()</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    f.close()</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    f = open(filename, <span class="stringliteral">&quot;w&quot;</span>)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    f.write(<span class="stringliteral">&quot;&quot;</span>.<a class="code" href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">join</a>(content[:2]))</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    year = datetime.datetime.now().year</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="comment"># This only works until year 9999</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    m = re.match(<span class="stringliteral">&quot;(.*Copyright \(c\) )(.*\d{4})( [Arm|ARM].*)&quot;</span>, content[2])</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> m:</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        f.write(<span class="stringliteral">&quot;Copyright (c) {} Arm Limited\n&quot;</span>.<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>(year))</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        updated_year = <a class="code" href="namespaceformat__code.xhtml#af11f9975f30ec96231b491acb3617900">adjust_copyright_year</a>(m.group(2), year)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        f.write(<span class="stringliteral">&quot;Copyright (c) {} Arm Limited\n&quot;</span>.<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>(updated_year))</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment"># Copy the rest of the file&#39;s content:</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    f.write(<span class="stringliteral">&quot;&quot;</span>.<a class="code" href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">join</a>(content[3:]))</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    f.close()</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classformat__code_1_1_other_checks_run.xhtml">  162</a></span>&#160;<span class="keyword">class </span><a class="code" href="classformat__code_1_1_other_checks_run.xhtml">OtherChecksRun</a>:</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classformat__code_1_1_other_checks_run.xhtml#ac25da4bd1befd63e8b0ce3a73e962b52">  163</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ac25da4bd1befd63e8b0ce3a73e962b52">__init__</a>(self, folder, error_diff=False, strategy=&quot;all&quot;):</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classformat__code_1_1_other_checks_run.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">  164</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">folder</a> = folder</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="classformat__code_1_1_other_checks_run.xhtml#a41b0910b49e6baf7850025fa8ad6edec">  165</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#a41b0910b49e6baf7850025fa8ad6edec">error_diff</a>=error_diff</div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classformat__code_1_1_other_checks_run.xhtml#ab621d71bb2cf38b09419ef3a5047e30c">  166</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ab621d71bb2cf38b09419ef3a5047e30c">strategy</a> = strategy</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="classformat__code_1_1_other_checks_run.xhtml#a8b928a20e6b1bce7c60f861a8058c32e">  168</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classformat__code_1_1_other_checks_run.xhtml#a8b928a20e6b1bce7c60f861a8058c32e">error_on_diff</a>(self, msg):</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        retval = 0</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#a41b0910b49e6baf7850025fa8ad6edec">error_diff</a>:</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            diff = self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.run_single_to_str(<span class="stringliteral">&quot;git diff&quot;</span>)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="keywordflow">if</span> len(diff) &gt; 0:</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                retval = -1</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                logger.error(diff)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                logger.error(<span class="stringliteral">&quot;\n&quot;</span>+msg)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">return</span> retval</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classformat__code_1_1_other_checks_run.xhtml#ad22709b2e67308af35f55680d5a026e0">  178</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ad22709b2e67308af35f55680d5a026e0">run</a>(self):</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        retval = 0</div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classformat__code_1_1_other_checks_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">  180</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a> = <a class="code" href="namespace_shell.xhtml">Shell</a>()</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.save_cwd()</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        this_dir = os.path.dirname(__file__)</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.cd(self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">folder</a>)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.prepend_env(<span class="stringliteral">&quot;PATH&quot;</span>,<span class="stringliteral">&quot;%s/../bin&quot;</span> % this_dir)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        to_check = <span class="stringliteral">&quot;&quot;</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ab621d71bb2cf38b09419ef3a5047e30c">strategy</a> != <span class="stringliteral">&quot;all&quot;</span>:</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            to_check, skip_copyright = FormatCodeRun.get_files(self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">folder</a>, self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ab621d71bb2cf38b09419ef3a5047e30c">strategy</a>)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="comment">#FIXME: Exclude shaders!</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        logger.info(<span class="stringliteral">&quot;Running ./scripts/format_doxygen.py&quot;</span>)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        logger.debug(self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.run_single_to_str(<span class="stringliteral">&quot;./scripts/format_doxygen.py %s&quot;</span> % <span class="stringliteral">&quot; &quot;</span>.<a class="code" href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">join</a>(to_check)))</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        retval = self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#a8b928a20e6b1bce7c60f861a8058c32e">error_on_diff</a>(<span class="stringliteral">&quot;Doxygen comments badly formatted (check above diff output for more details) try to run ./scripts/format_doxygen.py on your patch and resubmit&quot;</span>)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">if</span> retval == 0:</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            logger.info(<span class="stringliteral">&quot;Running ./scripts/include_functions_kernels.py&quot;</span>)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            logger.debug(self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.run_single_to_str(<span class="stringliteral">&quot;python ./scripts/include_functions_kernels.py&quot;</span>))</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            retval = self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#a8b928a20e6b1bce7c60f861a8058c32e">error_on_diff</a>(<span class="stringliteral">&quot;Some kernels or functions are not included in their corresponding master header (check above diff output to see which includes are missing)&quot;</span>)</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">if</span> retval == 0:</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                logger.info(<span class="stringliteral">&quot;Running ./scripts/check_bad_style.sh&quot;</span>)</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                logger.debug(self.<a class="code" href="classformat__code_1_1_other_checks_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.run_single_to_str(<span class="stringliteral">&quot;./scripts/check_bad_style.sh&quot;</span>))</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="comment">#logger.debug(self.shell.run_single_to_str(&quot;./scripts/check_bad_style.sh %s&quot; % &quot; &quot;.join(to_check)))</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                logger.error(<span class="stringliteral">&quot;Command %s returned:\n%s&quot;</span> % (e.cmd, e.output))</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                retval -= 1</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">if</span> retval != 0:</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;format-code failed with error code %d&quot;</span> % retval)</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classformat__code_1_1_format_code_run.xhtml">  210</a></span>&#160;<span class="keyword">class </span><a class="code" href="classformat__code_1_1_format_code_run.xhtml">FormatCodeRun</a>:</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    @staticmethod</div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classformat__code_1_1_format_code_run.xhtml#a4087df4c75ee29bf6bf1d9e41f6cf449">  212</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classformat__code_1_1_format_code_run.xhtml#a4087df4c75ee29bf6bf1d9e41f6cf449">get_files</a>(folder, strategy=&quot;git-head&quot;):</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        shell = <a class="code" href="namespace_shell.xhtml">Shell</a>()</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        shell.cd(folder)</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        skip_copyright = <span class="keyword">False</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keywordflow">if</span> strategy == <span class="stringliteral">&quot;git-head&quot;</span>:</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            cmd = <span class="stringliteral">&quot;git diff-tree --no-commit-id --name-status -r HEAD | grep \&quot;^[AMRT]\&quot; | cut -f 2&quot;</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">elif</span> strategy == <span class="stringliteral">&quot;git-diff&quot;</span>:</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            cmd = <span class="stringliteral">&quot;git diff --name-status --cached -r HEAD | grep \&quot;^[AMRT]\&quot; | rev | cut -f 1 | rev&quot;</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            cmd = <span class="stringliteral">&quot;git ls-tree -r HEAD --name-only&quot;</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <span class="comment"># Skip copyright checks when running on all files because we don&#39;t know when they were last modified</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="comment"># Therefore we can&#39;t tell if their copyright dates are correct</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            skip_copyright = <span class="keyword">True</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        grep_folder = <span class="stringliteral">&quot;grep -e \&quot;^\\(arm_compute\\|src\\|examples\\|tests\\|utils\\|support\\)/\&quot;&quot;</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        grep_extension = <span class="stringliteral">&quot;grep -e \&quot;\\.\\(cpp\\|h\\|hh\\|inl\\|cl\\|cs\\|hpp\\)$\&quot;&quot;</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        list_files = shell.run_single_to_str(cmd+<span class="stringliteral">&quot; | { &quot;</span>+ grep_folder+<span class="stringliteral">&quot; | &quot;</span>+grep_extension + <span class="stringliteral">&quot; || true; }&quot;</span>)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        to_check = [ f <span class="keywordflow">for</span> f <span class="keywordflow">in</span> list_files.split(<span class="stringliteral">&quot;\n&quot;</span>) <span class="keywordflow">if</span> len(f) &gt; 0]</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="comment"># Check for scons files as they are excluded from the above list</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        list_files = shell.run_single_to_str(cmd+<span class="stringliteral">&quot; | { grep -e \&quot;SC\&quot; || true; }&quot;</span>)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        to_check += [ f <span class="keywordflow">for</span> f <span class="keywordflow">in</span> list_files.split(<span class="stringliteral">&quot;\n&quot;</span>) <span class="keywordflow">if</span> len(f) &gt; 0]</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">return</span> (to_check, skip_copyright)</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="classformat__code_1_1_format_code_run.xhtml#aa8c98cb6207b9b22519253725f84fb7a">  237</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classformat__code_1_1_format_code_run.xhtml#aa8c98cb6207b9b22519253725f84fb7a">__init__</a>(self, files, folder, error_diff=False, skip_copyright=False):</div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="classformat__code_1_1_format_code_run.xhtml#afafecb95aca5e0525fd6959a5602fb89">  238</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#afafecb95aca5e0525fd6959a5602fb89">files</a> = files</div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="classformat__code_1_1_format_code_run.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">  239</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">folder</a> = folder</div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classformat__code_1_1_format_code_run.xhtml#a7ed81b64b360fff6023b4f52ef23a14e">  240</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#a7ed81b64b360fff6023b4f52ef23a14e">skip_copyright</a> = skip_copyright</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classformat__code_1_1_format_code_run.xhtml#a41b0910b49e6baf7850025fa8ad6edec">  241</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#a41b0910b49e6baf7850025fa8ad6edec">error_diff</a>=error_diff</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="classformat__code_1_1_format_code_run.xhtml#a8b928a20e6b1bce7c60f861a8058c32e">  243</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classformat__code_1_1_format_code_run.xhtml#a8b928a20e6b1bce7c60f861a8058c32e">error_on_diff</a>(self, msg):</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        retval = 0</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#a41b0910b49e6baf7850025fa8ad6edec">error_diff</a>:</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            diff = self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.run_single_to_str(<span class="stringliteral">&quot;git diff&quot;</span>)</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <span class="keywordflow">if</span> len(diff) &gt; 0:</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                retval = -1</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                logger.error(diff)</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                logger.error(<span class="stringliteral">&quot;\n&quot;</span>+msg)</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">return</span> retval</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="classformat__code_1_1_format_code_run.xhtml#ad22709b2e67308af35f55680d5a026e0">  253</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classformat__code_1_1_format_code_run.xhtml#ad22709b2e67308af35f55680d5a026e0">run</a>(self):</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">if</span> len(self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#afafecb95aca5e0525fd6959a5602fb89">files</a>) &lt; 1:</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            logger.debug(<span class="stringliteral">&quot;No file: early exit&quot;</span>)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        retval = 0</div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="classformat__code_1_1_format_code_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">  257</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a> = <a class="code" href="namespace_shell.xhtml">Shell</a>()</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.save_cwd()</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        this_dir = os.path.dirname(__file__)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.cd(self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">folder</a>)</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.prepend_env(<span class="stringliteral">&quot;PATH&quot;</span>,<span class="stringliteral">&quot;%s/../bin&quot;</span> % this_dir)</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordflow">for</span> f <span class="keywordflow">in</span> self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#afafecb95aca5e0525fd6959a5602fb89">files</a>:</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#a7ed81b64b360fff6023b4f52ef23a14e">skip_copyright</a>:</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    <a class="code" href="namespaceformat__code.xhtml#a687b0a4ae7ab00595f03bdf9760ecf47">check_copyright</a>(f)</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                skip_this_file = <span class="keyword">False</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                <span class="keywordflow">for</span> e <span class="keywordflow">in</span> exceptions:</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    <span class="keywordflow">if</span> e <span class="keywordflow">in</span> f:</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                        logger.warning(<span class="stringliteral">&quot;Skipping &#39;%s&#39; file: %s&quot;</span> % (e,f))</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                        skip_this_file = <span class="keyword">True</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                        <span class="keywordflow">break</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                <span class="keywordflow">if</span> skip_this_file:</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                logger.info(<span class="stringliteral">&quot;Formatting %s&quot;</span> % f)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            <a class="code" href="namespaceformat__code.xhtml#a4920fc8031e09145b4f8500d02b1fdf2">check_license</a>(<span class="stringliteral">&quot;LICENSE&quot;</span>)</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            retval = -1</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            logger.error(e)</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            logger.error(<span class="stringliteral">&quot;OUTPUT= %s&quot;</span> % e.output)</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160; </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        retval += self.<a class="code" href="classformat__code_1_1_format_code_run.xhtml#a8b928a20e6b1bce7c60f861a8058c32e">error_on_diff</a>(<span class="stringliteral">&quot;See above for clang-tidy errors&quot;</span>)</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">if</span> retval != 0:</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;format-code failed with error code %d&quot;</span> % retval)</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="classformat__code_1_1_generate_android_b_p.xhtml">  291</a></span>&#160;<span class="keyword">class </span><a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml">GenerateAndroidBP</a>:</div>
<div class="line"><a name="l00292"></a><span class="lineno"><a class="line" href="classformat__code_1_1_generate_android_b_p.xhtml#a30f3253be6e3f24044ea9cc826af7af9">  292</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#a30f3253be6e3f24044ea9cc826af7af9">__init__</a>(self, folder):</div>
<div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="classformat__code_1_1_generate_android_b_p.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">  293</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">folder</a> = folder</div>
<div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="classformat__code_1_1_generate_android_b_p.xhtml#a2672f915711b6e368a2be933d89b596e">  294</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#a2672f915711b6e368a2be933d89b596e">bp_output_file</a> = <span class="stringliteral">&quot;Generated_Android.bp&quot;</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; </div>
<div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="classformat__code_1_1_generate_android_b_p.xhtml#ad22709b2e67308af35f55680d5a026e0">  296</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#ad22709b2e67308af35f55680d5a026e0">run</a>(self):</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        retval = 0</div>
<div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="classformat__code_1_1_generate_android_b_p.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">  298</a></span>&#160;        self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a> = <a class="code" href="namespace_shell.xhtml">Shell</a>()</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.save_cwd()</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        this_dir = os.path.dirname(__file__)</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        logger.debug(<span class="stringliteral">&quot;Running Android.bp check&quot;</span>)</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.cd(self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">folder</a>)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            cmd = <span class="stringliteral">&quot;%s/generate_android_bp.py --folder %s --output_file %s&quot;</span> % (this_dir, self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">folder</a>, self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#a2672f915711b6e368a2be933d89b596e">bp_output_file</a>)</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            output = self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">shell</a>.run_single_to_str(cmd)</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            <span class="keywordflow">if</span> len(output) &gt; 0:</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                logger.info(output)</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keywordflow">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            retval = -1</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            logger.error(e)</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            logger.error(<span class="stringliteral">&quot;OUTPUT= %s&quot;</span> % e.output)</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160; </div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="comment"># Compare the genereated file with the one in the review</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> filecmp.cmp(self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#a2672f915711b6e368a2be933d89b596e">bp_output_file</a>, self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">folder</a> + <span class="stringliteral">&quot;/Android.bp&quot;</span>):</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            is_mismatched = <span class="keyword">True</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; </div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keyword">with</span> open(self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#a2672f915711b6e368a2be933d89b596e">bp_output_file</a>, <span class="stringliteral">&#39;r&#39;</span>) <span class="keyword">as</span> generated_file:</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="keyword">with</span> open(self.<a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">folder</a> + <span class="stringliteral">&quot;/Android.bp&quot;</span>, <span class="stringliteral">&#39;r&#39;</span>) <span class="keyword">as</span> review_file:</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                    diff = list(difflib.unified_diff(generated_file.readlines(), review_file.readlines(),</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                                                     fromfile=<span class="stringliteral">&#39;Generated_Android.bp&#39;</span>, tofile=<span class="stringliteral">&#39;Android.bp&#39;</span>))</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                    <span class="comment"># If the only mismatch in Android.bp file is the copyright year,</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                    <span class="comment"># the content of the file is considered unchanged and we don&#39;t need to update</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                    <span class="comment"># the copyright year. This will resolve the issue that emerges every new year.</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                    num_added_lines = 0</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                    num_removed_lines = 0</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                    last_added_line = <span class="stringliteral">&quot;&quot;</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                    last_removed_line = <span class="stringliteral">&quot;&quot;</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                    expect_add_line = <span class="keyword">False</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                    <span class="keywordflow">for</span> line <span class="keywordflow">in</span> diff:</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                        <span class="keywordflow">if</span> line.startswith(<span class="stringliteral">&quot;-&quot;</span>) <span class="keywordflow">and</span> <span class="keywordflow">not</span> line.startswith(<span class="stringliteral">&quot;---&quot;</span>):</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                            num_removed_lines += 1</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                            <span class="keywordflow">if</span> num_removed_lines &gt; 1:</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                                <span class="keywordflow">break</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                            last_removed_line = line</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                            expect_add_line = <span class="keyword">True</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                        <span class="keywordflow">elif</span> line.startswith(<span class="stringliteral">&quot;+&quot;</span>) <span class="keywordflow">and</span> <span class="keywordflow">not</span> line.startswith(<span class="stringliteral">&quot;+++&quot;</span>):</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                            num_added_lines += 1</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                            <span class="keywordflow">if</span> num_added_lines &gt; 1:</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                <span class="keywordflow">break</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                            <span class="keywordflow">if</span> expect_add_line:</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                                last_added_line = line</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                            expect_add_line = <span class="keyword">False</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; </div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                    <span class="keywordflow">if</span> num_added_lines == 1 <span class="keywordflow">and</span> num_removed_lines == 1:</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                        re_copyright = re.compile(<span class="stringliteral">&quot;^(?:\+|\-)// Copyright © ([0-9]+)\-([0-9]+) Arm Ltd. All rights reserved.\n$&quot;</span>)</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                        generated_matches = re_copyright.search(last_removed_line)</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                        review_matches = re_copyright.search(last_added_line)</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160; </div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                        <span class="keywordflow">if</span> generated_matches <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span> <span class="keywordflow">and</span> review_matches <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                            <span class="keywordflow">if</span> generated_matches.group(1) == review_matches.group(1) <span class="keywordflow">and</span> \</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                               int(generated_matches.group(2)) &gt; int(review_matches.group(2)):</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                                is_mismatched = <span class="keyword">False</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                    <span class="keywordflow">if</span> is_mismatched:</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                        logger.error(<span class="stringliteral">&quot;Lines with &#39;-&#39; need to be added to Android.bp&quot;</span>)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                        logger.error(<span class="stringliteral">&quot;Lines with &#39;+&#39; need to be removed from Android.bp&quot;</span>)</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160; </div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                        <span class="keywordflow">for</span> line <span class="keywordflow">in</span> diff:</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                            logger.error(line.rstrip())</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="keywordflow">if</span> is_mismatched:</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;Android bp file is not updated&quot;</span>)</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keywordflow">if</span> retval != 0:</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;generate Android bp file failed with error code %d&quot;</span> % retval)</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160; </div>
<div class="line"><a name="l00370"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#a3a190cc9f61838ab9c5fd47eeb874522">  370</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceformat__code.xhtml#a3a190cc9f61838ab9c5fd47eeb874522">run_fix_code_formatting</a>( files=&quot;git-head&quot;, folder=&quot;.&quot;, num_threads=1, error_on_diff=True):</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        retval = 0</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; </div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="comment"># Genereate Android.bp file and test it</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        gen_android_bp = <a class="code" href="classformat__code_1_1_generate_android_b_p.xhtml">GenerateAndroidBP</a>(folder)</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        gen_android_bp.run()</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160; </div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        to_check, skip_copyright = FormatCodeRun.get_files(folder, files)</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        other_checks = <a class="code" href="classformat__code_1_1_other_checks_run.xhtml">OtherChecksRun</a>(folder,error_on_diff, files)</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        other_checks.run()</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160; </div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        logger.debug(to_check)</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        num_files = len(to_check)</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        per_thread = max( num_files / num_threads,1)</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        start=0</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        logger.info(<span class="stringliteral">&quot;Files to format:\n\t%s&quot;</span> % <span class="stringliteral">&quot;\n\t&quot;</span>.<a class="code" href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">join</a>(to_check))</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160; </div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">for</span> i <span class="keywordflow">in</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87f09c74765be18a99038478f96daf9b">range</a>(num_threads):</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="keywordflow">if</span> i == num_threads -1:</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                end = num_files</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                end= min(start+per_thread, num_files)</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            sub = to_check[start:end]</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            logger.debug(<span class="stringliteral">&quot;[%d] [%d,%d] %s&quot;</span> % (i, start, end, sub))</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            start = end</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            format_code_run = <a class="code" href="classformat__code_1_1_format_code_run.xhtml">FormatCodeRun</a>(sub, folder, skip_copyright=skip_copyright)</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            format_code_run.run()</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160; </div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">return</span> retval</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordflow">except</span> Exception <span class="keyword">as</span> e:</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        logger.error(<span class="stringliteral">&quot;Exception caught in run_fix_code_formatting: %s&quot;</span> % e)</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <span class="keywordflow">return</span> -1</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordflow">if</span> __name__ == <span class="stringliteral">&quot;__main__&quot;</span>:</div>
<div class="line"><a name="l00405"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#a90eee7a4677ca8b1ed116364a24367f9">  405</a></span>&#160;    parser = argparse.ArgumentParser(</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            formatter_class=argparse.RawDescriptionHelpFormatter,</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            description=<span class="stringliteral">&quot;Build &amp; run pre-commit tests&quot;</span>,</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    )</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160; </div>
<div class="line"><a name="l00410"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#a8225c4c854e27ddfdbc4ef2fa71f43fe">  410</a></span>&#160;    file_sources=[<span class="stringliteral">&quot;git-diff&quot;</span>,<span class="stringliteral">&quot;git-head&quot;</span>,<span class="stringliteral">&quot;all&quot;</span>]</div>
<div class="line"><a name="l00411"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#a81ae9faedaa69e3e28e2960a0548df8d">  411</a></span>&#160;    parser.add_argument(<span class="stringliteral">&quot;-D&quot;</span>, <span class="stringliteral">&quot;--debug&quot;</span>, action=<span class="stringliteral">&#39;store_true&#39;</span>, help=<span class="stringliteral">&quot;Enable script debugging output&quot;</span>)</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    parser.add_argument(<span class="stringliteral">&quot;--error_on_diff&quot;</span>, action=<span class="stringliteral">&#39;store_true&#39;</span>, help=<span class="stringliteral">&quot;Show diff on error and stop&quot;</span>)</div>
<div class="line"><a name="l00413"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#a87f35ac6fa80d957c59e394549aa7e15">  413</a></span>&#160;    parser.add_argument(<span class="stringliteral">&quot;--files&quot;</span>, nargs=<span class="stringliteral">&#39;?&#39;</span>, metavar=<span class="stringliteral">&quot;source&quot;</span>, choices=file_sources, help=<span class="stringliteral">&quot;Which files to run fix_code_formatting on, choices=%s&quot;</span> % file_sources, default=<span class="stringliteral">&quot;git-head&quot;</span>)</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    parser.add_argument(<span class="stringliteral">&quot;--folder&quot;</span>, metavar=<span class="stringliteral">&quot;path&quot;</span>, help=<span class="stringliteral">&quot;Folder in which to run fix_code_formatting&quot;</span>, default=<span class="stringliteral">&quot;.&quot;</span>)</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160; </div>
<div class="line"><a name="l00416"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#a8187411843a6284ffb964ef3fb9fcab3">  416</a></span>&#160;    args = parser.parse_args()</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160; </div>
<div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#a05b240734aa0ab5756d163cc6b03d6e1">  418</a></span>&#160;    logging_level = logging.INFO</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keywordflow">if</span> args.debug:</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        logging_level = logging.DEBUG</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160; </div>
<div class="line"><a name="l00422"></a><span class="lineno"><a class="line" href="namespaceformat__code.xhtml#afde8e18a788ccc92fc61cab298bca7e3">  422</a></span>&#160;    logging.basicConfig(level=logging_level)</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160; </div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    logger.debug(<span class="stringliteral">&quot;Arguments passed: %s&quot;</span> % <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>(args.__dict__))</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160; </div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    exit(<a class="code" href="namespaceformat__code.xhtml#a3a190cc9f61838ab9c5fd47eeb874522">run_fix_code_formatting</a>(args.files, args.folder, 1, error_on_diff=args.error_on_diff))</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassformat__code_1_1_other_checks_run_xhtml_a41b0910b49e6baf7850025fa8ad6edec"><div class="ttname"><a href="classformat__code_1_1_other_checks_run.xhtml#a41b0910b49e6baf7850025fa8ad6edec">format_code.OtherChecksRun.error_diff</a></div><div class="ttdeci">error_diff</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00165">format_code.py:165</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_other_checks_run_xhtml_ac25da4bd1befd63e8b0ce3a73e962b52"><div class="ttname"><a href="classformat__code_1_1_other_checks_run.xhtml#ac25da4bd1befd63e8b0ce3a73e962b52">format_code.OtherChecksRun.__init__</a></div><div class="ttdeci">def __init__(self, folder, error_diff=False, strategy=&quot;all&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00163">format_code.py:163</a></div></div>
<div class="ttc" id="anamespaceformat__code_xhtml_a3a190cc9f61838ab9c5fd47eeb874522"><div class="ttname"><a href="namespaceformat__code.xhtml#a3a190cc9f61838ab9c5fd47eeb874522">format_code.run_fix_code_formatting</a></div><div class="ttdeci">def run_fix_code_formatting(files=&quot;git-head&quot;, folder=&quot;.&quot;, num_threads=1, error_on_diff=True)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00370">format_code.py:370</a></div></div>
<div class="ttc" id="anamespaceformat__code_xhtml_af11f9975f30ec96231b491acb3617900"><div class="ttname"><a href="namespaceformat__code.xhtml#af11f9975f30ec96231b491acb3617900">format_code.adjust_copyright_year</a></div><div class="ttdeci">def adjust_copyright_year(copyright_years, curr_year)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00051">format_code.py:51</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_other_checks_run_xhtml_ab621d71bb2cf38b09419ef3a5047e30c"><div class="ttname"><a href="classformat__code_1_1_other_checks_run.xhtml#ab621d71bb2cf38b09419ef3a5047e30c">format_code.OtherChecksRun.strategy</a></div><div class="ttdeci">strategy</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00166">format_code.py:166</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_format_code_run_xhtml_a8b928a20e6b1bce7c60f861a8058c32e"><div class="ttname"><a href="classformat__code_1_1_format_code_run.xhtml#a8b928a20e6b1bce7c60f861a8058c32e">format_code.FormatCodeRun.error_on_diff</a></div><div class="ttdeci">def error_on_diff(self, msg)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00243">format_code.py:243</a></div></div>
<div class="ttc" id="anamespacecaffe__mnist__image__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_mnist_image_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__mnist__image__extractor_8py_source.xhtml#l00021">caffe_mnist_image_extractor.py:21</a></div></div>
<div class="ttc" id="anamespace_shell_xhtml"><div class="ttname"><a href="namespace_shell.xhtml">Shell</a></div><div class="ttdef"><b>Definition:</b> <a href="_shell_8py_source.xhtml#l00001">Shell.py:1</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_format_code_run_xhtml_a4087df4c75ee29bf6bf1d9e41f6cf449"><div class="ttname"><a href="classformat__code_1_1_format_code_run.xhtml#a4087df4c75ee29bf6bf1d9e41f6cf449">format_code.FormatCodeRun.get_files</a></div><div class="ttdeci">def get_files(folder, strategy=&quot;git-head&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00212">format_code.py:212</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_generate_android_b_p_xhtml_a30f3253be6e3f24044ea9cc826af7af9"><div class="ttname"><a href="classformat__code_1_1_generate_android_b_p.xhtml#a30f3253be6e3f24044ea9cc826af7af9">format_code.GenerateAndroidBP.__init__</a></div><div class="ttdeci">def __init__(self, folder)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00292">format_code.py:292</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_other_checks_run_xhtml_a8b928a20e6b1bce7c60f861a8058c32e"><div class="ttname"><a href="classformat__code_1_1_other_checks_run.xhtml#a8b928a20e6b1bce7c60f861a8058c32e">format_code.OtherChecksRun.error_on_diff</a></div><div class="ttdeci">def error_on_diff(self, msg)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00168">format_code.py:168</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_other_checks_run_xhtml_ad22709b2e67308af35f55680d5a026e0"><div class="ttname"><a href="classformat__code_1_1_other_checks_run.xhtml#ad22709b2e67308af35f55680d5a026e0">format_code.OtherChecksRun.run</a></div><div class="ttdeci">def run(self)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00178">format_code.py:178</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_format_code_run_xhtml_a41b0910b49e6baf7850025fa8ad6edec"><div class="ttname"><a href="classformat__code_1_1_format_code_run.xhtml#a41b0910b49e6baf7850025fa8ad6edec">format_code.FormatCodeRun.error_diff</a></div><div class="ttdeci">error_diff</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00241">format_code.py:241</a></div></div>
<div class="ttc" id="anamespaceformat__code_xhtml_a4920fc8031e09145b4f8500d02b1fdf2"><div class="ttname"><a href="namespaceformat__code.xhtml#a4920fc8031e09145b4f8500d02b1fdf2">format_code.check_license</a></div><div class="ttdeci">def check_license(filename)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00136">format_code.py:136</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_format_code_run_xhtml_ae3d4fbb9cf8a069dc079bb329a7e58b9"><div class="ttname"><a href="classformat__code_1_1_format_code_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">format_code.FormatCodeRun.shell</a></div><div class="ttdeci">shell</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00257">format_code.py:257</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_format_code_run_xhtml_aa8c98cb6207b9b22519253725f84fb7a"><div class="ttname"><a href="classformat__code_1_1_format_code_run.xhtml#aa8c98cb6207b9b22519253725f84fb7a">format_code.FormatCodeRun.__init__</a></div><div class="ttdeci">def __init__(self, files, folder, error_diff=False, skip_copyright=False)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00237">format_code.py:237</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_generate_android_b_p_xhtml_ae3d4fbb9cf8a069dc079bb329a7e58b9"><div class="ttname"><a href="classformat__code_1_1_generate_android_b_p.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">format_code.GenerateAndroidBP.shell</a></div><div class="ttdeci">shell</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00298">format_code.py:298</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_format_code_run_xhtml_ad22709b2e67308af35f55680d5a026e0"><div class="ttname"><a href="classformat__code_1_1_format_code_run.xhtml#ad22709b2e67308af35f55680d5a026e0">format_code.FormatCodeRun.run</a></div><div class="ttdeci">def run(self)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00253">format_code.py:253</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_generate_android_b_p_xhtml_a813d56590d96553d6f8ce1fff3ab52f6"><div class="ttname"><a href="classformat__code_1_1_generate_android_b_p.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">format_code.GenerateAndroidBP.folder</a></div><div class="ttdeci">folder</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00293">format_code.py:293</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_other_checks_run_xhtml"><div class="ttname"><a href="classformat__code_1_1_other_checks_run.xhtml">format_code.OtherChecksRun</a></div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00162">format_code.py:162</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5277640d2fd61696201c28a01c3de703"><div class="ttname"><a href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">arm_compute::join</a></div><div class="ttdeci">std::string join(const std::vector&lt; std::string &gt; strings, const std::string &amp;sep)</div><div class="ttdoc">Join a sequence of strings with separator sep.</div><div class="ttdef"><b>Definition:</b> <a href="_string_utils_8cpp_source.xhtml#l00066">StringUtils.cpp:66</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a87f09c74765be18a99038478f96daf9b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87f09c74765be18a99038478f96daf9b">arm_compute::test::validation::reference::range</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; range(SimpleTensor&lt; T &gt; &amp;dst, float start, const size_t num_of_elements, float step)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_range_8cpp_source.xhtml#l00050">Range.cpp:50</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_format_code_run_xhtml_afafecb95aca5e0525fd6959a5602fb89"><div class="ttname"><a href="classformat__code_1_1_format_code_run.xhtml#afafecb95aca5e0525fd6959a5602fb89">format_code.FormatCodeRun.files</a></div><div class="ttdeci">files</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00238">format_code.py:238</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_format_code_run_xhtml_a7ed81b64b360fff6023b4f52ef23a14e"><div class="ttname"><a href="classformat__code_1_1_format_code_run.xhtml#a7ed81b64b360fff6023b4f52ef23a14e">format_code.FormatCodeRun.skip_copyright</a></div><div class="ttdeci">skip_copyright</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00240">format_code.py:240</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_other_checks_run_xhtml_a813d56590d96553d6f8ce1fff3ab52f6"><div class="ttname"><a href="classformat__code_1_1_other_checks_run.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">format_code.OtherChecksRun.folder</a></div><div class="ttdeci">folder</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00164">format_code.py:164</a></div></div>
<div class="ttc" id="anamespaceformat__code_xhtml_a687b0a4ae7ab00595f03bdf9760ecf47"><div class="ttname"><a href="namespaceformat__code.xhtml#a687b0a4ae7ab00595f03bdf9760ecf47">format_code.check_copyright</a></div><div class="ttdeci">def check_copyright(filename)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00069">format_code.py:69</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_generate_android_b_p_xhtml"><div class="ttname"><a href="classformat__code_1_1_generate_android_b_p.xhtml">format_code.GenerateAndroidBP</a></div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00291">format_code.py:291</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_generate_android_b_p_xhtml_ad22709b2e67308af35f55680d5a026e0"><div class="ttname"><a href="classformat__code_1_1_generate_android_b_p.xhtml#ad22709b2e67308af35f55680d5a026e0">format_code.GenerateAndroidBP.run</a></div><div class="ttdeci">def run(self)</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00296">format_code.py:296</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_generate_android_b_p_xhtml_a2672f915711b6e368a2be933d89b596e"><div class="ttname"><a href="classformat__code_1_1_generate_android_b_p.xhtml#a2672f915711b6e368a2be933d89b596e">format_code.GenerateAndroidBP.bp_output_file</a></div><div class="ttdeci">bp_output_file</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00294">format_code.py:294</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_format_code_run_xhtml"><div class="ttname"><a href="classformat__code_1_1_format_code_run.xhtml">format_code.FormatCodeRun</a></div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00210">format_code.py:210</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_format_code_run_xhtml_a813d56590d96553d6f8ce1fff3ab52f6"><div class="ttname"><a href="classformat__code_1_1_format_code_run.xhtml#a813d56590d96553d6f8ce1fff3ab52f6">format_code.FormatCodeRun.folder</a></div><div class="ttdeci">folder</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00239">format_code.py:239</a></div></div>
<div class="ttc" id="anamespaceupdate__supported__ops_xhtml_a387137c43ed9616d39ba90e890d181eb"><div class="ttname"><a href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">update_supported_ops.format</a></div><div class="ttdeci">format</div><div class="ttdef"><b>Definition:</b> <a href="update__supported__ops_8py_source.xhtml#l00405">update_supported_ops.py:405</a></div></div>
<div class="ttc" id="aclassformat__code_1_1_other_checks_run_xhtml_ae3d4fbb9cf8a069dc079bb329a7e58b9"><div class="ttname"><a href="classformat__code_1_1_other_checks_run.xhtml#ae3d4fbb9cf8a069dc079bb329a7e58b9">format_code.OtherChecksRun.shell</a></div><div class="ttdeci">shell</div><div class="ttdef"><b>Definition:</b> <a href="format__code_8py_source.xhtml#l00180">format_code.py:180</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_53e6fa9553ac22a5646d2a2b2d7b97a1.xhtml">scripts</a></li><li class="navelem"><a class="el" href="format__code_8py.xhtml">format_code.py</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:46 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
