<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: scripts/clang_tidy_rules.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('clang__tidy__rules_8py_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">clang_tidy_rules.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="clang__tidy__rules_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceclang__tidy__rules.xhtml">    1</a></span>&#160;<span class="comment">#!/usr/bin/env python3</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"># -*- coding: utf-8 -*-</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"># Copyright (c) 2017-2023 Arm Limited.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"># furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"># FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"># AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"># LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"># OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"># SOFTWARE.</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> os</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> re</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> sys</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="namespaceclang__tidy__rules.xhtml#a08c7836f77ca0b17c1c8579fb906dc37">   30</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceclang__tidy__rules.xhtml#a08c7836f77ca0b17c1c8579fb906dc37">get_list_includes</a>():</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;compute_kernel_writer/prototype/include &quot;</span> \</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;           <span class="stringliteral">&quot;src/cpu/kernels/assembly &quot;</span> \</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;           <span class="stringliteral">&quot;src/core/NEON/kernels/assembly &quot;</span> \</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;           <span class="stringliteral">&quot;src/core/NEON/kernels/convolution/winograd &quot;</span> \</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;           <span class="stringliteral">&quot;include/linux include &quot;</span> \</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;           <span class="stringliteral">&quot;. &quot;</span>.split()</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="namespaceclang__tidy__rules.xhtml#a5b66534a89d9966371e5881efa128e07">   38</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceclang__tidy__rules.xhtml#a5b66534a89d9966371e5881efa128e07">get_list_flags</a>( filename, arch):</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">assert</span> arch <span class="keywordflow">in</span> [<span class="stringliteral">&quot;armv7&quot;</span>, <span class="stringliteral">&quot;aarch64&quot;</span>]</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    flags = [<span class="stringliteral">&quot;-std=c++14&quot;</span>]</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    flags.append(<span class="stringliteral">&quot;-DARM_COMPUTE_CPP_SCHEDULER=1&quot;</span>)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    flags.append(<span class="stringliteral">&quot;-DARM_COMPUTE_CL&quot;</span>)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    flags.append(<span class="stringliteral">&quot;-DARM_COMPUTE_OPENCL_ENABLED&quot;</span>)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">if</span> arch == <span class="stringliteral">&quot;aarch64&quot;</span>:</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        flags.append(<span class="stringliteral">&quot;-DARM_COMPUTE_AARCH64_V8_2&quot;</span>)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">if</span> <span class="stringliteral">&quot;ckw_driver&quot;</span> <span class="keywordflow">in</span> filename:</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        flags.append(<span class="stringliteral">&quot;-DACL_INTERNAL_TEST_CKW_IN_DF&quot;</span>)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> flags</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="namespaceclang__tidy__rules.xhtml#adfcd7f456df691d03cb712e10f3ffc31">   51</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceclang__tidy__rules.xhtml#adfcd7f456df691d03cb712e10f3ffc31">filter_files</a>( list_files ):</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    to_check = []</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">for</span> f <span class="keywordflow">in</span> list_files:</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">if</span> os.path.splitext(f)[1] != <span class="stringliteral">&quot;.cpp&quot;</span>:</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="comment"># Skip OMPScheduler as it causes problems in clang</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">if</span> ((<span class="stringliteral">&quot;OMPScheduler.cpp&quot;</span> <span class="keywordflow">in</span> f) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            (<span class="stringliteral">&quot;CLTracePoint.cpp&quot;</span> <span class="keywordflow">in</span> f) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            (<span class="stringliteral">&quot;NETracePoint.cpp&quot;</span> <span class="keywordflow">in</span> f) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            (<span class="stringliteral">&quot;TracePoint.cpp&quot;</span> <span class="keywordflow">in</span> f)):</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        to_check.append(f)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> to_check</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="namespaceclang__tidy__rules.xhtml#ac51635460498c469eaca631b2f0f50b9">   65</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespaceclang__tidy__rules.xhtml#ac51635460498c469eaca631b2f0f50b9">filter_clang_tidy_lines</a>( lines ):</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    out = []</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    print_context=<span class="keyword">False</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">for</span> i <span class="keywordflow">in</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87f09c74765be18a99038478f96daf9b">range</a>(0, len(lines)):</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        line = lines[i]</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;/arm_conv/&quot;</span> <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;/arm_gemm/&quot;</span> <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;compute_kernel_writer/&quot;</span> <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;/convolution/&quot;</span> <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;/validate_examples/&quot;</span> <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;error:&quot;</span> <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="keywordflow">if</span> ((<span class="stringliteral">&quot;Version.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;arm_compute_version.embed&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;file not found&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                (<span class="stringliteral">&quot;arm_fp16.h&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                (<span class="stringliteral">&quot;omp.h&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                (<span class="stringliteral">&quot;cast from pointer to smaller type &#39;uintptr_t&#39; (aka &#39;unsigned int&#39;) loses information&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                (<span class="stringliteral">&quot;cast from pointer to smaller type &#39;cl_context_properties&#39; (aka &#39;int&#39;) loses information&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                (<span class="stringliteral">&quot;cast from pointer to smaller type &#39;std::uintptr_t&#39; (aka &#39;unsigned int&#39;) loses information&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                (<span class="stringliteral">&quot;NEMath.inl&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;statement expression not allowed at file scope&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                (<span class="stringliteral">&quot;Utils.h&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;no member named &#39;unmap&#39; in &#39;arm_compute::Tensor&#39;&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                (<span class="stringliteral">&quot;Utils.h&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;no member named &#39;map&#39; in &#39;arm_compute::Tensor&#39;&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                (<span class="stringliteral">&quot;CPUUtils.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;&#39;asm/hwcap.h&#39; file not found&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                (<span class="stringliteral">&quot;CPUUtils.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;use of undeclared identifier &#39;HWCAP_SVE&#39;&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;               (<span class="stringliteral">&quot;sve&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                (<span class="stringliteral">&quot;&#39;arm_compute_version.embed&#39; file not found&quot;</span> <span class="keywordflow">in</span> line) ):</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                print_context=<span class="keyword">False</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            out.append(line)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            print_context=<span class="keyword">True</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">elif</span> <span class="stringliteral">&quot;warning:&quot;</span> <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">if</span> (<span class="stringliteral">&quot;uninitialized record type: &#39;__ret&#39;&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">or</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;               <span class="stringliteral">&quot;local variable &#39;__bound_functor&#39; is still referred to by the global variable &#39;__once_callable&#39;&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">or</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;               <span class="stringliteral">&quot;assigning newly created &#39;gsl::owner&lt;&gt;&#39;&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">or</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;               <span class="stringliteral">&quot;calling legacy resource function without passing a &#39;gsl::owner&lt;&gt;&#39;&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">or</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;               <span class="stringliteral">&quot;deleting a pointer through a type that is not marked &#39;gsl::owner&lt;&gt;&#39;&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">or</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;               (any(f <span class="keywordflow">in</span> line <span class="keywordflow">for</span> f <span class="keywordflow">in</span> [<span class="stringliteral">&quot;Error.cpp&quot;</span>,<span class="stringliteral">&quot;Error.h&quot;</span>]) <span class="keywordflow">and</span> <span class="stringliteral">&quot;thrown exception type is not nothrow copy constructible&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;               (any(f <span class="keywordflow">in</span> line <span class="keywordflow">for</span> f <span class="keywordflow">in</span> [<span class="stringliteral">&quot;Error.cpp&quot;</span>,<span class="stringliteral">&quot;Error.h&quot;</span>]) <span class="keywordflow">and</span> <span class="stringliteral">&quot;uninitialized record type: &#39;args&#39;&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;               (any(f <span class="keywordflow">in</span> line <span class="keywordflow">for</span> f <span class="keywordflow">in</span> [<span class="stringliteral">&quot;Error.cpp&quot;</span>,<span class="stringliteral">&quot;Error.h&quot;</span>]) <span class="keywordflow">and</span> <span class="stringliteral">&quot;do not call c-style vararg functions&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;               (any(f <span class="keywordflow">in</span> line <span class="keywordflow">for</span> f <span class="keywordflow">in</span> [<span class="stringliteral">&quot;Error.cpp&quot;</span>,<span class="stringliteral">&quot;Error.h&quot;</span>]) <span class="keywordflow">and</span> <span class="stringliteral">&quot;do not define a C-style variadic function&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;               (<span class="stringliteral">&quot;TensorAllocator.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;warning: pointer parameter &#39;ptr&#39; can be pointer to const&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;               (<span class="stringliteral">&quot;TensorAllocator.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;warning: do not declare C-style arrays&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;               (<span class="stringliteral">&quot;RawTensor.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;warning: pointer parameter &#39;ptr&#39; can be pointer to const&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;               (<span class="stringliteral">&quot;RawTensor.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;warning: do not declare C-style arrays&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;               (<span class="stringliteral">&quot;NEMinMaxLocationKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;move constructors should be marked noexcept&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;               (<span class="stringliteral">&quot;NEMinMaxLocationKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;move assignment operators should be marked noexcept&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;               (<span class="stringliteral">&quot;CLMinMaxLocationKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;Forming reference to null pointer&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;               (<span class="stringliteral">&quot;PMUCounter.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;consider replacing &#39;long long&#39; with &#39;int64&#39;&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;               (<span class="stringliteral">&quot;Validation.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;parameter &#39;classified_labels&#39; is unused&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;               (<span class="stringliteral">&quot;Validation.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;parameter &#39;expected_labels&#39; is unused&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;               (<span class="stringliteral">&quot;Reference.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;parameter &#39;rois&#39; is unused&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;               (<span class="stringliteral">&quot;Reference.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;parameter &#39;shapes&#39; is unused&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;               (<span class="stringliteral">&quot;Reference.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> re.search(<span class="stringliteral">r&quot;parameter &#39;[^&#39;]+&#39; is unused&quot;</span>, line)) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;               (<span class="stringliteral">&quot;ReferenceCPP.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;parameter &#39;rois&#39; is unused&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;               (<span class="stringliteral">&quot;ReferenceCPP.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;parameter &#39;srcs&#39; is unused&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;               (<span class="stringliteral">&quot;ReferenceCPP.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> re.search(<span class="stringliteral">r&quot;parameter &#39;[^&#39;]+&#39; is unused&quot;</span>, line)) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;               (<span class="stringliteral">&quot;NEGEMMMatrixMultiplyKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;do not use C-style cast to convert between unrelated types&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;               (<span class="stringliteral">&quot;NEPoolingLayerKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;do not use C-style cast to convert between unrelated types&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;               (<span class="stringliteral">&quot;NESoftmaxLayerKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;macro argument should be enclosed in parentheses&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;               (<span class="stringliteral">&quot;GraphUtils.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;consider replacing &#39;unsigned long&#39; with &#39;uint32&#39;&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;               (<span class="stringliteral">&quot;GraphUtils.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;consider replacing &#39;unsigned long&#39; with &#39;uint64&#39;&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;               (<span class="stringliteral">&quot;ConvolutionLayer.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;move assignment operators should be marked noexcept&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;               (<span class="stringliteral">&quot;ConvolutionLayer.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;move constructors should be marked noexcept&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;               (<span class="stringliteral">&quot;parameter &#39;memory_manager&#39; is unused&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;               (<span class="stringliteral">&quot;parameter &#39;memory_manager&#39; is copied for each invocation but only used as a const reference&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;               (<span class="stringliteral">&quot;DeconvolutionLayer.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;casting (double + 0.5) to integer leads to incorrect rounding; consider using lround&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;               (<span class="stringliteral">&quot;NEWinogradLayerKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;use &#39;= default&#39; to define a trivial destructor&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;               (<span class="stringliteral">&quot;NEGEMMLowpMatrixMultiplyCore.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;constructor does not initialize these fields&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;               (<span class="stringliteral">&quot;NEGEMMLowpAssemblyMatrixMultiplyCore&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;constructor does not initialize these fields&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;               (<span class="stringliteral">&quot;CpuDepthwiseConv2dNativeKernel&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> re.search(<span class="stringliteral">r&quot;parameter &#39;[^&#39;]+&#39; is unused&quot;</span>, line)) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;               (<span class="stringliteral">&quot;CpuDepthwiseConv2dAssemblyDispatch&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> re.search(<span class="stringliteral">r&quot;parameter &#39;[^&#39;]+&#39; is unused&quot;</span>, line)) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;               (<span class="stringliteral">&quot;CpuDepthwiseConv2dAssemblyDispatch&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;modernize-use-equals-default&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;               (<span class="stringliteral">&quot;CPUUtils.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;consider replacing &#39;unsigned long&#39; with &#39;uint64&#39;&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;               (<span class="stringliteral">&quot;CPUUtils.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;parameter &#39;cpusv&#39; is unused&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;               (<span class="stringliteral">&quot;CPUUtils.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;warning: uninitialized record type&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;               (<span class="stringliteral">&quot;Utils.h&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;warning: Use of zero-allocated memory&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;               (<span class="stringliteral">&quot;sve&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;               (<span class="stringliteral">&quot;CpuDepthwiseConv2dNativeKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;misc-non-private-member-variables-in-classes&quot;</span> <span class="keywordflow">in</span> line)): <span class="comment"># This is to prevent false positive, should be reassessed with the newer clang-tidy</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                print_context=<span class="keyword">False</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">if</span> <span class="stringliteral">&quot;do not use C-style cast to convert between unrelated types&quot;</span> <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keywordflow">if</span> i + 1 &lt; len(lines) <span class="keywordflow">and</span> <span class="stringliteral">&quot;vgetq_lane_f16&quot;</span> <span class="keywordflow">in</span> lines[i + 1]:</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                    print_context=<span class="keyword">False</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                    <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordflow">if</span> <span class="stringliteral">&quot;use &#39;using&#39; instead of &#39;typedef&#39;&quot;</span> <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="keywordflow">if</span> i + 1 &lt; len(lines) <span class="keywordflow">and</span> <span class="stringliteral">&quot;BOOST_FIXTURE_TEST_SUITE&quot;</span> <span class="keywordflow">in</span> lines[i + 1]:</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                    print_context=<span class="keyword">False</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                    <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">if</span> <span class="stringliteral">&quot;do not call c-style vararg functions&quot;</span> <span class="keywordflow">in</span> line:</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                <span class="keywordflow">if</span> (i + 1 &lt; len(lines) <span class="keywordflow">and</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                   (<span class="stringliteral">&quot;BOOST_TEST&quot;</span> <span class="keywordflow">in</span> lines[i + 1] <span class="keywordflow">or</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    <span class="stringliteral">&quot;BOOST_FAIL&quot;</span> <span class="keywordflow">in</span> lines[i + 1] <span class="keywordflow">or</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    <span class="stringliteral">&quot;BOOST_CHECK_THROW&quot;</span> <span class="keywordflow">in</span> lines[i + 1] <span class="keywordflow">or</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                    <span class="stringliteral">&quot;ARM_COMPUTE_ERROR_VAR&quot;</span> <span class="keywordflow">in</span> lines[i + 1] <span class="keywordflow">or</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                    <span class="stringliteral">&quot;ARM_COMPUTE_RETURN_ON&quot;</span> <span class="keywordflow">in</span> lines[i + 1] <span class="keywordflow">or</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                    <span class="stringliteral">&quot;syscall&quot;</span> <span class="keywordflow">in</span> lines[i + 1])):</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                        print_context=<span class="keyword">False</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                        <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            out.append(line)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            print_context=<span class="keyword">True</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">elif</span> ((<span class="stringliteral">&quot;CLMinMaxLocationKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;&#39;?&#39; condition is false&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;              (<span class="stringliteral">&quot;CLMinMaxLocationKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;Assuming the condition is false&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;              (<span class="stringliteral">&quot;CLMinMaxLocationKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;Assuming pointer value is null&quot;</span> <span class="keywordflow">in</span> line) <span class="keywordflow">or</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;              (<span class="stringliteral">&quot;CLMinMaxLocationKernel.cpp&quot;</span> <span class="keywordflow">in</span> line <span class="keywordflow">and</span> <span class="stringliteral">&quot;Forming reference to null pointer&quot;</span> <span class="keywordflow">in</span> line)):</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;               print_context=<span class="keyword">False</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;               <span class="keywordflow">continue</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">elif</span> print_context:</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            out.append(line)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">return</span> out</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordflow">if</span> __name__ == <span class="stringliteral">&quot;__main__&quot;</span>:</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">if</span> len(sys.argv) != 2:</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        print(<span class="stringliteral">&quot;usage: {} CLANG-TIDY_OUTPUT_FILE&quot;</span>.<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>(sys.argv[0]))</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        sys.exit(1)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="namespaceclang__tidy__rules.xhtml#a392f48c0119ddcef4c443ca399328f8a">  195</a></span>&#160;    errors = []</div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">  196</a></span>&#160;    <span class="keyword">with</span> open(sys.argv[1], mode=<span class="stringliteral">&quot;r&quot;</span>) <span class="keyword">as</span> clang_tidy_file:</div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="namespaceclang__tidy__rules.xhtml#a22ea78f101680108434cb132f12afa0a">  197</a></span>&#160;        lines = clang_tidy_file.readlines()</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        errors = <a class="code" href="namespaceclang__tidy__rules.xhtml#ac51635460498c469eaca631b2f0f50b9">filter_clang_tidy_lines</a>(lines)</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        print(<span class="stringliteral">&quot;\n&quot;</span>.<a class="code" href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">join</a>(errors))</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    sys.exit(0 <span class="keywordflow">if</span> len(errors) == 0 <span class="keywordflow">else</span> 1)</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespaceclang__tidy__rules_xhtml_a5b66534a89d9966371e5881efa128e07"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#a5b66534a89d9966371e5881efa128e07">clang_tidy_rules.get_list_flags</a></div><div class="ttdeci">def get_list_flags(filename, arch)</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00038">clang_tidy_rules.py:38</a></div></div>
<div class="ttc" id="anamespaceclang__tidy__rules_xhtml_ac51635460498c469eaca631b2f0f50b9"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#ac51635460498c469eaca631b2f0f50b9">clang_tidy_rules.filter_clang_tidy_lines</a></div><div class="ttdeci">def filter_clang_tidy_lines(lines)</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00065">clang_tidy_rules.py:65</a></div></div>
<div class="ttc" id="anamespaceclang__tidy__rules_xhtml_a08c7836f77ca0b17c1c8579fb906dc37"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#a08c7836f77ca0b17c1c8579fb906dc37">clang_tidy_rules.get_list_includes</a></div><div class="ttdeci">def get_list_includes()</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00030">clang_tidy_rules.py:30</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5277640d2fd61696201c28a01c3de703"><div class="ttname"><a href="namespacearm__compute.xhtml#a5277640d2fd61696201c28a01c3de703">arm_compute::join</a></div><div class="ttdeci">std::string join(const std::vector&lt; std::string &gt; strings, const std::string &amp;sep)</div><div class="ttdoc">Join a sequence of strings with separator sep.</div><div class="ttdef"><b>Definition:</b> <a href="_string_utils_8cpp_source.xhtml#l00066">StringUtils.cpp:66</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a87f09c74765be18a99038478f96daf9b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87f09c74765be18a99038478f96daf9b">arm_compute::test::validation::reference::range</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; range(SimpleTensor&lt; T &gt; &amp;dst, float start, const size_t num_of_elements, float step)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_range_8cpp_source.xhtml#l00050">Range.cpp:50</a></div></div>
<div class="ttc" id="anamespaceupdate__supported__ops_xhtml_a387137c43ed9616d39ba90e890d181eb"><div class="ttname"><a href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">update_supported_ops.format</a></div><div class="ttdeci">format</div><div class="ttdef"><b>Definition:</b> <a href="update__supported__ops_8py_source.xhtml#l00405">update_supported_ops.py:405</a></div></div>
<div class="ttc" id="anamespaceclang__tidy__rules_xhtml_adfcd7f456df691d03cb712e10f3ffc31"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#adfcd7f456df691d03cb712e10f3ffc31">clang_tidy_rules.filter_files</a></div><div class="ttdeci">def filter_files(list_files)</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00051">clang_tidy_rules.py:51</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_53e6fa9553ac22a5646d2a2b2d7b97a1.xhtml">scripts</a></li><li class="navelem"><a class="el" href="clang__tidy__rules_8py.xhtml">clang_tidy_rules.py</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:46 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
