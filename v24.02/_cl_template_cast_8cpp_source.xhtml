<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/dynamic_fusion/sketch/gpu/template_writer/cl/ClTemplateCast.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cl_template_cast_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClTemplateCast.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_template_cast_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_template_cast_8h.xhtml">ClTemplateCast.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_adjust_vec_size_8h.xhtml">arm_compute/core/utils/helpers/AdjustVecSize.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_string_utils_8h.xhtml">arm_compute/core/utils/StringUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_helpers_8h.xhtml">src/core/helpers/WindowHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_component_group_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuKernelComponentGroup.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>experimental</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a9fcad1d5e85c077f42bff5816e0b8268">   38</a></span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a9fcad1d5e85c077f42bff5816e0b8268">ClTemplateCast::ClTemplateCast</a>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack&lt;ITensorInfo&gt;</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml">Attributes</a> &amp;attributes)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    : <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a>{<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>}, _src{}, _dst{}, _attributes{attributes}</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    _src = this-&gt;tensors().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    _dst = this-&gt;tensors().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">TensorType::ACL_DST_0</a>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_src, _dst);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#aea9b04d36ad2b9a4e1c166589ecb0326">   47</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#aea9b04d36ad2b9a4e1c166589ecb0326">ClTemplateCast::get_name</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> src_size = <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> dst_size = <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> (src_size &gt;= dst_size) ? <span class="stringliteral">&quot;cast_down&quot;</span> : <span class="stringliteral">&quot;cast_up&quot;</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a7812833059e15b739d8dafe7c462df48">   55</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a7812833059e15b739d8dafe7c462df48">ClTemplateCast::get_component_code</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">ComponentGroup</a> &amp;comp_group)<span class="keyword"> const</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(comp_group);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">const</span> std::string <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#aea9b04d36ad2b9a4e1c166589ecb0326">get_name</a>();</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>        is_root     = (comp_group.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a132a3a85495f9c5fe8ef684035cd94c8">get_root_component</a>()-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>() == this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>());</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    std::string code = R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral">//------------------ START KERNEL {{meta_kernel_id}} CAST ---------------------</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span> (is_root)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="stringliteral">// IN_0(src)            {{src}}</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="stringliteral">// OUT(dst, accum)      {{dst}}</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="stringliteral">TILE(uint, M0, 1, g_dst_indirect_y);</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="stringliteral">{</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="stringliteral">    {{src}}_offset_first_element_in_bytes += get_global_id(2) * {{src}}_stride_z;</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="stringliteral">    TILE({{DATA_TYPE_IN}}, M0, N0, {{tmp}});</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="stringliteral">    T_LOAD({{DATA_TYPE_IN}}, M0, N0, BUFFER, {{src}}, g_ind_0, g_ind_1, 1, {{src}}_stride_y, {{tmp}});</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">    LOOP_UNROLLING(int, m0, 0, 1, M0,</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span> (<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> == <span class="stringliteral">&quot;cast_down&quot;</span> &amp;&amp; <a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()))</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral">    {{tmp}}[m0].v ^= (VEC_DATA_TYPE({{DATA_TYPE_IN}}, N0))0x80;</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span> (<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> == <span class="stringliteral">&quot;cast_down&quot;</span> &amp;&amp;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        (<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()) || _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#a2f5d0d8276356bdd3d33cf2a23d8ffaa">convert_policy</a>() == <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>))</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral">    {{dst}}[m0].v = CONVERT_SAT({{tmp}}[m0].v, VEC_DATA_TYPE({{DATA_TYPE_OUT}}, N0));</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">else</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral">    {{dst}}[m0].v = CONVERT({{tmp}}[m0].v, VEC_DATA_TYPE({{DATA_TYPE_OUT}}, N0));</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">    })</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span> (is_root)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="stringliteral">    LOOP_UNROLLING(int, i, 0, 1, M0,</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral">        g_dst_indirect_y[i].v = (uint)min((int)(g_ind_1 + i), (int)({{arg_dst}}_w) - 1);</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="stringliteral">        g_dst_indirect_y[i].v += (int)(g_ind_2 % {{arg_dst}}_h) * (int)({{arg_dst}}_w);</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="stringliteral">        g_dst_indirect_y[i].v += (int)(g_ind_2 / {{arg_dst}}_h) * (int)({{arg_dst}}_w * {{arg_dst}}_h);</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="stringliteral">    })</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="stringliteral">}</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral">//------------------ END KERNEL {{meta_kernel_id}} CAST ---------------------</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">return</span> code;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a24095ca4db22e95bd86cd88a8ff28615">  131</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a24095ca4db22e95bd86cd88a8ff28615">ClTemplateCast::declare_variables</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;vtable, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">ComponentGroup</a> &amp;comp_group)<span class="keyword"> const</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#a39a1f311bbee4cf716ef087922948138">declare_variable</a>(comp_group, _src, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml">GpuKernelArgumentInfo</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a>),</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                            <span class="stringliteral">&quot;src&quot;</span>);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#a39a1f311bbee4cf716ef087922948138">declare_variable</a>(comp_group, _dst, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml">GpuKernelArgumentInfo</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a>),</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                            <span class="stringliteral">&quot;dst&quot;</span>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#add98b8afc43f270c3195a39f47eca5a7">  140</a></span>&#160;<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#add98b8afc43f270c3195a39f47eca5a7">ClTemplateCast::get_tag_lut</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;vtable, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">ComponentGroup</a> &amp;comp_group)<span class="keyword"> const</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> is_root = (comp_group.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a132a3a85495f9c5fe8ef684035cd94c8">get_root_component</a>()-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>() == this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>());</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> lut{};</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="comment">// Arguments and global shared variables</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    lut[<span class="stringliteral">&quot;src&quot;</span>] = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad748e7fc875fa3d925950afdebece20d">get_variable</a>(_src);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    lut[<span class="stringliteral">&quot;dst&quot;</span>] = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad748e7fc875fa3d925950afdebece20d">get_variable</a>(_dst);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    lut[<span class="stringliteral">&quot;tmp&quot;</span>] = (is_root) ? lut[<span class="stringliteral">&quot;src&quot;</span>].value + <span class="stringliteral">&quot;_in_data&quot;</span> : lut[<span class="stringliteral">&quot;src&quot;</span>];</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> dst_argument = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad748e7fc875fa3d925950afdebece20d">get_variable</a>(comp_group.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a6ca6f69db36a2b3de6d9a106a73e47ba">get_any_dst_tensor</a>());</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    lut[<span class="stringliteral">&quot;arg_dst&quot;</span>]          = dst_argument.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#ac047593b5705ef4a93109e4c7cf879f4">uniq_name</a>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="comment">// Local build options</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    lut[<span class="stringliteral">&quot;meta_kernel_id&quot;</span>] = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    lut[<span class="stringliteral">&quot;DATA_TYPE_IN&quot;</span>]  = <a class="code" href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">get_cl_type_from_data_type</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    lut[<span class="stringliteral">&quot;DATA_TYPE_OUT&quot;</span>] = <a class="code" href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">get_cl_type_from_data_type</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">return</span> lut;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">  163</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">ClTemplateCast::get_build_options</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">ComponentGroup</a> &amp;comp_group)<span class="keyword"> const</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(comp_group);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>         root_window = comp_group.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a132a3a85495f9c5fe8ef684035cd94c8">get_root_component</a>()-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a2e769310a32aca832e74e243ab94e1e7">template_writer</a>()-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a66df3fbb8781a4dfa011885356e1495f">get_window</a>();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n0          = root_window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">step</a>();</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m0          = root_window.y().step();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// Set build options</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> build_opts{};</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    build_opts.<a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml#a3e2b80ff5463b7d2017de847f5c32a30">add_option</a>(<span class="stringliteral">&quot;-DN0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(n0));</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DPARTIAL_N0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) % n0));</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DM0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(m0));</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">return</span> build_opts;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a9c20dda39067d96aa659c5729ccebf34">  180</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a9c20dda39067d96aa659c5729ccebf34">ClTemplateCast::get_config_id</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    std::string config_id{};</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    config_id += <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()));</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    config_id += <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()));</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0));</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1));</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">return</span> config_id;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;}</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a283deece00423ed5bd0c9486f305a6f4">  196</a></span>&#160;std::set&lt;std::string&gt; <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a283deece00423ed5bd0c9486f305a6f4">ClTemplateCast::get_headers_list</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">return</span> std::set&lt;std::string&gt;{<span class="stringliteral">&quot;helpers.h&quot;</span>, <span class="stringliteral">&quot;tile_helpers.h&quot;</span>};</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">  201</a></span>&#160;<a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">ClTemplateCast::get_window</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>().<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">total_size</a>() == 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, <span class="stringliteral">&quot;Destination tensor is not initialized&quot;</span>);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n0  = <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(16 / _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a>(), _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0));</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>             win = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(*_dst, <a class="code" href="classarm__compute_1_1_steps.xhtml">Steps</a>(n0));</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">return</span> win.<a class="code" href="classarm__compute_1_1_window.xhtml#af6303f954929d2bdac13a4712ecf9711">collapse</a>(win, <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;}</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;} <span class="comment">// namespace experimental</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_steps_xhtml"><div class="ttname"><a href="classarm__compute_1_1_steps.xhtml">arm_compute::Steps</a></div><div class="ttdoc">Class to describe a number of elements in each dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_steps_8h_source.xhtml#l00040">Steps.h:40</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes_xhtml_a2f5d0d8276356bdd3d33cf2a23d8ffaa"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#a2f5d0d8276356bdd3d33cf2a23d8ffaa">arm_compute::experimental::dynamic_fusion::CastAttributes::convert_policy</a></div><div class="ttdeci">CastAttributes &amp; convert_policy(const ConvertPolicy &amp;policy)</div><div class="ttdoc">Set Policy.</div><div class="ttdef"><b>Definition:</b> <a href="_cast_attributes_8cpp_source.xhtml#l00044">CastAttributes.cpp:44</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast_xhtml_add98b8afc43f270c3195a39f47eca5a7"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#add98b8afc43f270c3195a39f47eca5a7">arm_compute::experimental::dynamic_fusion::ClTemplateCast::get_tag_lut</a></div><div class="ttdeci">TagLUT get_tag_lut(const GpuKernelVariableTable &amp;vtable, const ComponentGroup &amp;comp_group) const override</div><div class="ttdoc">Generate the tag look-up table used to instantiate the component code.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_cast_8cpp_source.xhtml#l00140">ClTemplateCast.cpp:140</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component_xhtml_a2e769310a32aca832e74e243ab94e1e7"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a2e769310a32aca832e74e243ab94e1e7">arm_compute::experimental::dynamic_fusion::IGpuKernelComponent::template_writer</a></div><div class="ttdeci">virtual const IGpuTemplateComponentWriter * template_writer() const</div><div class="ttdoc">Get writer for the component.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_component_8h_source.xhtml#l00103">IGpuKernelComponent.h:103</a></div></div>
<div class="ttc" id="a_adjust_vec_size_8h_xhtml"><div class="ttname"><a href="_adjust_vec_size_8h.xhtml">AdjustVecSize.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast_xhtml_a9fcad1d5e85c077f42bff5816e0b8268"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a9fcad1d5e85c077f42bff5816e0b8268">arm_compute::experimental::dynamic_fusion::ClTemplateCast::ClTemplateCast</a></div><div class="ttdeci">ClTemplateCast(ComponentId id, const ArgumentPack&lt; ITensorInfo &gt; &amp;tensors, const Attributes &amp;attributes)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_cast_8cpp_source.xhtml#l00038">ClTemplateCast.cpp:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00029">WindowHelpers.cpp:29</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_afacfec8193ed701f3646c22bc2d35455"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">arm_compute::experimental::dynamic_fusion::TagLUT</a></div><div class="ttdeci">std::unordered_map&lt; Tag, TagVal &gt; TagLUT</div><div class="ttdoc">Tag lookup table.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00130">GpuKernelVariableTable.h:130</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast_xhtml_a24095ca4db22e95bd86cd88a8ff28615"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a24095ca4db22e95bd86cd88a8ff28615">arm_compute::experimental::dynamic_fusion::ClTemplateCast::declare_variables</a></div><div class="ttdeci">void declare_variables(GpuKernelVariableTable &amp;vtable, const ComponentGroup &amp;comp_group) const override</div><div class="ttdoc">Declare all variables used by the component in the vtable.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_cast_8cpp_source.xhtml#l00131">ClTemplateCast.cpp:131</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_1_1_dimension_xhtml_a918580dc9188825d67dbb203a43d02fe"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">arm_compute::Window::Dimension::step</a></div><div class="ttdeci">constexpr int step() const</div><div class="ttdoc">Return the step of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00106">Window.h:106</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0a7bb17a0a0414a7162f635776a02eb5"><div class="ttname"><a href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">arm_compute::lower_string</a></div><div class="ttdeci">std::string lower_string(const std::string &amp;val)</div><div class="ttdoc">Lower a given string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_utils_8cpp_source.xhtml#l00038">StringUtils.cpp:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group_xhtml_a132a3a85495f9c5fe8ef684035cd94c8"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a132a3a85495f9c5fe8ef684035cd94c8">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGroup::get_root_component</a></div><div class="ttdeci">ComponentPtr get_root_component() const</div><div class="ttdoc">Get the root (first) component of this group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_group_8cpp_source.xhtml#l00304">GpuKernelComponentGroup.cpp:304</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml">arm_compute::experimental::dynamic_fusion::CastAttributes</a></div><div class="ttdoc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_cast_attributes_8h_source.xhtml#l00039">CastAttributes.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_aa459796b5489eca8a9160cb5dcf1a103"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">arm_compute::ITensorInfo::element_size</a></div><div class="ttdeci">virtual size_t element_size() const =0</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels()</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a142b55a483cadf4e1068a1a09a55e8e9"><div class="ttname"><a href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">arm_compute::string_from_data_type</a></div><div class="ttdeci">const std::string &amp; string_from_data_type(DataType dt)</div><div class="ttdoc">Convert a data type identity into a string.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8cpp_source.xhtml#l00031">DataTypeUtils.cpp:31</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast_xhtml_acd5efd9e0abf91fc8eb0afdbd5cebff2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">arm_compute::experimental::dynamic_fusion::ClTemplateCast::get_build_options</a></div><div class="ttdeci">CLBuildOptions get_build_options(const ComponentGroup &amp;comp_group) const override</div><div class="ttdoc">Generate the build options used in the component.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_cast_8cpp_source.xhtml#l00163">ClTemplateCast.cpp:163</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group_xhtml_a6ca6f69db36a2b3de6d9a106a73e47ba"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a6ca6f69db36a2b3de6d9a106a73e47ba">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGroup::get_any_dst_tensor</a></div><div class="ttdeci">const ITensorInfo * get_any_dst_tensor() const</div><div class="ttdoc">Get one of the destination tensors of this group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_group_8cpp_source.xhtml#l00292">GpuKernelComponentGroup.cpp:292</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter</a></div><div class="ttdoc">An interface used by ClTemplateWriter to write source code for a kernel component.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00047">IGpuTemplateComponentWriter.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">arm_compute::experimental::dynamic_fusion::ArgumentPack</a></div><div class="ttdoc">This is a generic class that packs the arguments of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_argument_pack_8h_source.xhtml#l00046">ArgumentPack.h:46</a></div></div>
<div class="ttc" id="a_gpu_kernel_component_group_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_component_group_8h.xhtml">GpuKernelComponentGroup.h</a></div></div>
<div class="ttc" id="a_string_utils_8h_xhtml"><div class="ttname"><a href="_string_utils_8h.xhtml">StringUtils.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml_a81cf6107131a3583e2b0b762cb9c2862"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00065">SaturateCast.h:65</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_abb7e0f23a4f2e63f39433f158dad47ab"><div class="ttname"><a href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">arm_compute::data_size_from_type</a></div><div class="ttdeci">size_t data_size_from_type(DataType data_type)</div><div class="ttdoc">The size in bytes of the data type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00038">DataTypeUtils.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast_xhtml_a283deece00423ed5bd0c9486f305a6f4"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a283deece00423ed5bd0c9486f305a6f4">arm_compute::experimental::dynamic_fusion::ClTemplateCast::get_headers_list</a></div><div class="ttdeci">std::set&lt; std::string &gt; get_headers_list() const override</div><div class="ttdoc">Generate the header list used in the component.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_cast_8cpp_source.xhtml#l00196">ClTemplateCast.cpp:196</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_build_options_xhtml_a3e2b80ff5463b7d2017de847f5c32a30"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml#a3e2b80ff5463b7d2017de847f5c32a30">arm_compute::CLBuildOptions::add_option</a></div><div class="ttdeci">void add_option(std::string option)</div><div class="ttdoc">Adds option to the existing build option list.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00041">CLCompileContext.cpp:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdeci">@ ACL_DST_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast_xhtml_a7812833059e15b739d8dafe7c462df48"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a7812833059e15b739d8dafe7c462df48">arm_compute::experimental::dynamic_fusion::ClTemplateCast::get_component_code</a></div><div class="ttdeci">std::string get_component_code(const ComponentGroup &amp;comp_group) const override</div><div class="ttdoc">Generate kernel component code template.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_cast_8cpp_source.xhtml#l00055">ClTemplateCast.cpp:55</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_af6303f954929d2bdac13a4712ecf9711"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#af6303f954929d2bdac13a4712ecf9711">arm_compute::Window::collapse</a></div><div class="ttdeci">Window collapse(const Window &amp;full_window, size_t first, size_t last=Coordinates::num_max_dimensions) const</div><div class="ttdoc">Collapse the dimensions between first and last.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00125">Window.inl:125</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a6c87c6e19567bc42bc52d166728c4461"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::tensors</a></div><div class="ttdeci">ArgumentPack&lt; ITensorInfo &gt; tensors() const</div><div class="ttdoc">Get tensor arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00123">IGpuTemplateComponentWriter.h:123</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_a0fdcb923dfd4c74858cc2bc326321efb"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">arm_compute::TensorShape::total_size</a></div><div class="ttdeci">size_t total_size() const</div><div class="ttdoc">Collapses all dimensions to a single linear total size.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00175">TensorShape.h:175</a></div></div>
<div class="ttc" id="a_window_helpers_8h_xhtml"><div class="ttname"><a href="_window_helpers_8h.xhtml">WindowHelpers.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::ConvertPolicy::SATURATE</a></div><div class="ttdeci">@ SATURATE</div><div class="ttdoc">Saturate.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast_xhtml_ae744fb5fb66aa1ce9db14ba93eab24e3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">arm_compute::experimental::dynamic_fusion::ClTemplateCast::get_window</a></div><div class="ttdeci">Window get_window() const override</div><div class="ttdoc">Generate the execution window for the component.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_cast_8cpp_source.xhtml#l00201">ClTemplateCast.cpp:201</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a2b1fb10e2eeb3bcea23a8bd60296ca7c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::id</a></div><div class="ttdeci">ComponentId id() const</div><div class="ttdoc">Get component id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00128">IGpuTemplateComponentWriter.h:128</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable_xhtml_ac047593b5705ef4a93109e4c7cf879f4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#ac047593b5705ef4a93109e4c7cf879f4">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::TensorVariable::uniq_name</a></div><div class="ttdeci">std::string uniq_name</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00063">GpuKernelVariableTable.h:63</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo</a></div><div class="ttdoc">Contain information required to set up a kernel argument at run time.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_argument_8h_source.xhtml#l00038">GpuKernelArgument.h:38</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml_ad748e7fc875fa3d925950afdebece20d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad748e7fc875fa3d925950afdebece20d">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::get_variable</a></div><div class="ttdeci">TensorVariable get_variable(const ITensorInfo *tensor) const</div><div class="ttdoc">Get the TensorVariable associated with tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00076">GpuKernelVariableTable.cpp:76</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast_xhtml_a9c20dda39067d96aa659c5729ccebf34"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#a9c20dda39067d96aa659c5729ccebf34">arm_compute::experimental::dynamic_fusion::ClTemplateCast::get_config_id</a></div><div class="ttdeci">std::string get_config_id() const override</div><div class="ttdoc">Generate the component config id string used for tuning.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_cast_8cpp_source.xhtml#l00180">ClTemplateCast.cpp:180</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a545eeda2eaa3f5a54345ce8169e21184"><div class="ttname"><a href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">arm_compute::get_cl_type_from_data_type</a></div><div class="ttdeci">std::string get_cl_type_from_data_type(const DataType &amp;dt)</div><div class="ttdoc">Translates a tensor data type to the appropriate OpenCL type.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00041">CLHelpers.cpp:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_afff13da4ff0bb0cd14e24f19743c8225"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">arm_compute::experimental::dynamic_fusion::ComponentId</a></div><div class="ttdeci">int32_t ComponentId</div><div class="ttdoc">Uniquely identifies a kernel component within a workload.</div><div class="ttdef"><b>Definition:</b> <a href="src_2dynamic__fusion_2sketch_2gpu_2components_2_types_8h_source.xhtml#l00037">Types.h:37</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a></div><div class="ttdeci">@ Tensor_4D_t_Buffer</div></div>
<div class="ttc" id="a_cl_template_cast_8h_xhtml"><div class="ttname"><a href="_cl_template_cast_8h.xhtml">ClTemplateCast.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a7be62dcb9603165af78bca6f2ca8ec15"><div class="ttname"><a href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">arm_compute::adjust_vec_size</a></div><div class="ttdeci">unsigned int adjust_vec_size(unsigned int vec_size, size_t dim0)</div><div class="ttdoc">Returns the adjusted vector size in case it is less than the input's first dimension,...</div><div class="ttdef"><b>Definition:</b> <a href="_adjust_vec_size_8h_source.xhtml#l00038">AdjustVecSize.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_af5982a092e9eb743fce2d6392bdd8897"><div class="ttname"><a href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">arm_compute::is_data_type_float</a></div><div class="ttdeci">bool is_data_type_float(DataType dt)</div><div class="ttdoc">Check if a given data type is of floating point type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00304">DataTypeUtils.h:304</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGroup</a></div><div class="ttdoc">A group of gpu kernel components to be fused together PRECONDITIONS:</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_group_8h_source.xhtml#l00061">GpuKernelComponentGroup.h:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0bee325b210f81bb89fe1f9e15badf9c"><div class="ttname"><a href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">arm_compute::is_data_type_quantized</a></div><div class="ttdeci">bool is_data_type_quantized(DataType dt)</div><div class="ttdoc">Check if a given data type is of quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00324">DataTypeUtils.h:324</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a66df3fbb8781a4dfa011885356e1495f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a66df3fbb8781a4dfa011885356e1495f">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::get_window</a></div><div class="ttdeci">virtual Window get_window() const</div><div class="ttdoc">Generate the execution window for the component.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00118">IGpuTemplateComponentWriter.h:118</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_build_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml">arm_compute::CLBuildOptions</a></div><div class="ttdoc">Build options.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00038">CLCompileContext.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable</a></div><div class="ttdoc">A table of all the variables used in the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00049">GpuKernelVariableTable.h:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml_a39a1f311bbee4cf716ef087922948138"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#a39a1f311bbee4cf716ef087922948138">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::declare_variable</a></div><div class="ttdeci">void declare_variable(const GpuKernelComponentGroup &amp;comp_group, const ITensorInfo *tensor, GpuKernelArgumentInfo argument_info, const std::string &amp;alias=&quot;unnamed&quot;)</div><div class="ttdoc">Declare a TensorVariable for a corresponding tensor info.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00037">GpuKernelVariableTable.cpp:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a273fd2ecdd45169b2f702f01a7e5e382"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const</div><div class="ttdoc">Alias to access the first dimension of the window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00158">Window.h:158</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast_xhtml_aea9b04d36ad2b9a4e1c166589ecb0326"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_cast.xhtml#aea9b04d36ad2b9a4e1c166589ecb0326">arm_compute::experimental::dynamic_fusion::ClTemplateCast::get_name</a></div><div class="ttdeci">std::string get_name() const override</div><div class="ttdoc">Generate kernel component name.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_cast_8cpp_source.xhtml#l00047">ClTemplateCast.cpp:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component_xhtml_a2b1fb10e2eeb3bcea23a8bd60296ca7c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">arm_compute::experimental::dynamic_fusion::IGpuKernelComponent::id</a></div><div class="ttdeci">ComponentId id() const</div><div class="ttdoc">Get component id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_component_8h_source.xhtml#l00088">IGpuKernelComponent.h:88</a></div></div>
<div class="ttc" id="a_cl_im2_col_kernel_8cpp_xhtml_a624a24e6d361fe7b8b8b2f6b375683a4"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a></div><div class="ttdeci">std::string kernel_name</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00058">ClIm2ColKernel.cpp:58</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_5ff8356557e4f59c6a20c3735e8d2267.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_729ca8b25cabcdcb8b11b571ea7b237a.xhtml">sketch</a></li><li class="navelem"><a class="el" href="dir_df94d166e0e6f49d063cb29fea25a88b.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_09aab6a206c9d3717fe22866ebbc9576.xhtml">template_writer</a></li><li class="navelem"><a class="el" href="dir_5ce8562396c3432087c3cd3fcd451092.xhtml">cl</a></li><li class="navelem"><a class="el" href="_cl_template_cast_8cpp.xhtml">ClTemplateCast.cpp</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:51 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
