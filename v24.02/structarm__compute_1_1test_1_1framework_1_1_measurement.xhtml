<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Measurement Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">Measurement Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Generic measurement that stores values as either double or long long int.  
 <a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml" title="Generic measurement that stores values as either double or long long int.">Measurement</a> value.  <a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1b6f30e703e3ce3e579d30351171bd9d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a1b6f30e703e3ce3e579d30351171bd9d">operator&lt;</a> (const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp;b) const</td></tr>
<tr class="memdesc:a1b6f30e703e3ce3e579d30351171bd9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare the stored value with another value.  <a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a1b6f30e703e3ce3e579d30351171bd9d">More...</a><br /></td></tr>
<tr class="separator:a1b6f30e703e3ce3e579d30351171bd9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ccc04c46bf09fcd434dc103f8ca9b2b"><td class="memTemplParams" colspan="2">template&lt;typename Floating , typename std::enable_if&lt; !std::is_integral&lt; Floating &gt;::value, int &gt;::type  = 0&gt; </td></tr>
<tr class="memitem:a2ccc04c46bf09fcd434dc103f8ca9b2b"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ccc04c46bf09fcd434dc103f8ca9b2b">Measurement</a> (Floating v, std::string <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ae8373fc56f956b1988b85963b3904c">unit</a>, std::list&lt; std::string &gt; raw={})</td></tr>
<tr class="memdesc:a2ccc04c46bf09fcd434dc103f8ca9b2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor to store a floating point value.  <a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ccc04c46bf09fcd434dc103f8ca9b2b">More...</a><br /></td></tr>
<tr class="separator:a2ccc04c46bf09fcd434dc103f8ca9b2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed021625a622269b23e2916fc1e06dac"><td class="memTemplParams" colspan="2">template&lt;typename Integer , typename std::enable_if&lt; std::is_integral&lt; Integer &gt;::value, int &gt;::type  = 0&gt; </td></tr>
<tr class="memitem:aed021625a622269b23e2916fc1e06dac"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#aed021625a622269b23e2916fc1e06dac">Measurement</a> (Integer v, std::string <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ae8373fc56f956b1988b85963b3904c">unit</a>, std::list&lt; std::string &gt; raw={})</td></tr>
<tr class="memdesc:aed021625a622269b23e2916fc1e06dac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor to store an integer value.  <a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#aed021625a622269b23e2916fc1e06dac">More...</a><br /></td></tr>
<tr class="separator:aed021625a622269b23e2916fc1e06dac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ae8373fc56f956b1988b85963b3904c"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ae8373fc56f956b1988b85963b3904c">unit</a> () const</td></tr>
<tr class="memdesc:a2ae8373fc56f956b1988b85963b3904c"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> for the unit of the measurement.  <a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ae8373fc56f956b1988b85963b3904c">More...</a><br /></td></tr>
<tr class="separator:a2ae8373fc56f956b1988b85963b3904c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a825ce38606348c854b147f0b19afb96c"><td class="memItemLeft" align="right" valign="top">const std::list&lt; std::string &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a825ce38606348c854b147f0b19afb96c">raw_data</a> () const</td></tr>
<tr class="memdesc:a825ce38606348c854b147f0b19afb96c"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> for the raw data.  <a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a825ce38606348c854b147f0b19afb96c">More...</a><br /></td></tr>
<tr class="separator:a825ce38606348c854b147f0b19afb96c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2a8c2db065f7afb4dbaa382d2ecd5be"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#af2a8c2db065f7afb4dbaa382d2ecd5be">value</a> () const</td></tr>
<tr class="memdesc:af2a8c2db065f7afb4dbaa382d2ecd5be"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> for the stored value.  <a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#af2a8c2db065f7afb4dbaa382d2ecd5be">More...</a><br /></td></tr>
<tr class="separator:af2a8c2db065f7afb4dbaa382d2ecd5be"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ae0068ee19905d634193a92821067606c"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#ae0068ee19905d634193a92821067606c">operator&lt;&lt;</a> (std::ostream &amp;os, const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp;measurement)</td></tr>
<tr class="memdesc:ae0068ee19905d634193a92821067606c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stream output operator to print the measurement.  <a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#ae0068ee19905d634193a92821067606c">More...</a><br /></td></tr>
<tr class="separator:ae0068ee19905d634193a92821067606c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Generic measurement that stores values as either double or long long int. </p>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00041">41</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a2ccc04c46bf09fcd434dc103f8ca9b2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ccc04c46bf09fcd434dc103f8ca9b2b">&#9670;&nbsp;</a></span>Measurement() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> </td>
          <td>(</td>
          <td class="paramtype">Floating&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>unit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::list&lt; std::string &gt;&#160;</td>
          <td class="paramname"><em>raw</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor to store a floating point value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml" title="Measurement value.">Value</a> to store </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">unit</td><td>Unit of <code>v</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">raw</td><td>(Optional) The raw value(s) <code>was</code> generated from. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00252">252</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                                                                     {})</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        : _unit(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ae8373fc56f956b1988b85963b3904c">unit</a>), _raw_data(std::move(raw)), _value(<span class="keyword">true</span>)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        _value.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a3be92f49f600ea56038ded5da336cfc1">v</a>.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ab32110eb040749e72f53d1a7ee30c25b">floating_point</a> = <span class="keyword">static_cast&lt;</span><span class="keywordtype">double</span><span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">if</span>(_raw_data.empty())</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        {</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            _raw_data = { _value.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aac993ecccd3d88aafefb6b8e3caa1dee">to_string</a>() };</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aed021625a622269b23e2916fc1e06dac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed021625a622269b23e2916fc1e06dac">&#9670;&nbsp;</a></span>Measurement() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> </td>
          <td>(</td>
          <td class="paramtype">Integer&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>unit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::list&lt; std::string &gt;&#160;</td>
          <td class="paramname"><em>raw</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor to store an integer value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml" title="Measurement value.">Value</a> to store </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">unit</td><td>Unit of <code>v</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">raw</td><td>(Optional) The raw value(s) <code>was</code> generated from. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00269">269</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                                                                    {})</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        : _unit(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ae8373fc56f956b1988b85963b3904c">unit</a>), _raw_data(std::move(raw)), _value(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        _value.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a3be92f49f600ea56038ded5da336cfc1">v</a>.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a5283f2dae5da803262f8deb3c71525f0">integer</a> = <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keywordflow">if</span>(_raw_data.empty())</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            _raw_data = { _value.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aac993ecccd3d88aafefb6b8e3caa1dee">to_string</a>() };</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1b6f30e703e3ce3e579d30351171bd9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b6f30e703e3ce3e579d30351171bd9d">&#9670;&nbsp;</a></span>operator&lt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Compare the stored value with another value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml" title="Measurement value.">Value</a> to compare against</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The result of stored value &lt; b </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00225">225</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">return</span> _value &lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.value();</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

</div>
</div>
<a id="a825ce38606348c854b147f0b19afb96c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a825ce38606348c854b147f0b19afb96c">&#9670;&nbsp;</a></span>raw_data()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::list&lt;std::string&gt;&amp; raw_data </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> for the raw data. </p>
<dl class="section return"><dt>Returns</dt><dd>The raw data </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00292">292</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keywordflow">return</span> _raw_data;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a2ae8373fc56f956b1988b85963b3904c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ae8373fc56f956b1988b85963b3904c">&#9670;&nbsp;</a></span>unit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string&amp; unit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> for the unit of the measurement. </p>
<dl class="section return"><dt>Returns</dt><dd>Unit of the measurement </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00283">283</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">return</span> _unit;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_pretty_printer_8cpp_source.xhtml#l00125">PrettyPrinter::print_measurements()</a>.</p>

</div>
</div>
<a id="af2a8c2db065f7afb4dbaa382d2ecd5be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2a8c2db065f7afb4dbaa382d2ecd5be">&#9670;&nbsp;</a></span>value()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a>&amp; value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> for the stored value. </p>
<dl class="section return"><dt>Returns</dt><dd>The stored value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00301">301</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    {</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keywordflow">return</span> _value;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_instruments_stats_8cpp_source.xhtml#l00033">InstrumentsStats::InstrumentsStats()</a>, and <a class="el" href="_pretty_printer_8cpp_source.xhtml#l00125">PrettyPrinter::print_measurements()</a>.</p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="ae0068ee19905d634193a92821067606c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0068ee19905d634193a92821067606c">&#9670;&nbsp;</a></span>operator&lt;&lt;</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp;&#160;</td>
          <td class="paramname"><em>measurement</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stream output operator to print the measurement. </p>
<p>Prints value and unit.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">os</td><td>Output stream. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">measurement</td><td><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml" title="Generic measurement that stores values as either double or long long int.">Measurement</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the modified output stream. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00239">239</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        os &lt;&lt; measurement._value &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; measurement._unit;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">return</span> os;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>tests/framework/instruments/<a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_measurement_xhtml_a2ae8373fc56f956b1988b85963b3904c"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ae8373fc56f956b1988b85963b3904c">arm_compute::test::framework::Measurement::unit</a></div><div class="ttdeci">const std::string &amp; unit() const</div><div class="ttdoc">Accessor for the unit of the measurement.</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00283">Measurement.h:283</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aac993ecccd3d88aafefb6b8e3caa1dee"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aac993ecccd3d88aafefb6b8e3caa1dee">arm_compute::test::framework::Measurement::Value::to_string</a></div><div class="ttdeci">std::string to_string() const</div><div class="ttdoc">Convert the value stored to string.</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00071">Measurement.h:71</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_a5283f2dae5da803262f8deb3c71525f0"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a5283f2dae5da803262f8deb3c71525f0">arm_compute::test::framework::Measurement::Value::integer</a></div><div class="ttdeci">long long int integer</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00214">Measurement.h:214</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_ab32110eb040749e72f53d1a7ee30c25b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ab32110eb040749e72f53d1a7ee30c25b">arm_compute::test::framework::Measurement::Value::floating_point</a></div><div class="ttdeci">double floating_point</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00213">Measurement.h:213</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_a3be92f49f600ea56038ded5da336cfc1"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a3be92f49f600ea56038ded5da336cfc1">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@5 v</div><div class="ttdoc">Stored value.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">framework</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:15:07 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
