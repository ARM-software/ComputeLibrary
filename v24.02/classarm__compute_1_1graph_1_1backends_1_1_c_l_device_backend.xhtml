<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLDeviceBackend Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLDeviceBackend Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>OpenCL device backend.  
 <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_device_backend_8h_source.xhtml">CLDeviceBackend.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLDeviceBackend:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend__coll__graph.svg" width="150" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9dfba389ebfad48bbba75f1369c5af2c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a9dfba389ebfad48bbba75f1369c5af2c">CLDeviceBackend</a> ()</td></tr>
<tr class="memdesc:a9dfba389ebfad48bbba75f1369c5af2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a9dfba389ebfad48bbba75f1369c5af2c">More...</a><br /></td></tr>
<tr class="separator:a9dfba389ebfad48bbba75f1369c5af2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27f45725c45a61e5a1f4650bd23e25c4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a27f45725c45a61e5a1f4650bd23e25c4">~CLDeviceBackend</a> ()</td></tr>
<tr class="memdesc:a27f45725c45a61e5a1f4650bd23e25c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a27f45725c45a61e5a1f4650bd23e25c4">More...</a><br /></td></tr>
<tr class="separator:a27f45725c45a61e5a1f4650bd23e25c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96e32e9d96b05d238f46be2e90d0e60b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a96e32e9d96b05d238f46be2e90d0e60b">set_kernel_tuning</a> (bool enable_tuning)</td></tr>
<tr class="memdesc:a96e32e9d96b05d238f46be2e90d0e60b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switchs on or off the kernel tuning.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a96e32e9d96b05d238f46be2e90d0e60b">More...</a><br /></td></tr>
<tr class="separator:a96e32e9d96b05d238f46be2e90d0e60b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d7becfb1d12f49d38942b88845421ec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a3d7becfb1d12f49d38942b88845421ec">set_kernel_tuning_mode</a> (<a class="el" href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5c">CLTunerMode</a> tuning_mode)</td></tr>
<tr class="memdesc:a3d7becfb1d12f49d38942b88845421ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set kernel tuning mode.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a3d7becfb1d12f49d38942b88845421ec">More...</a><br /></td></tr>
<tr class="separator:a3d7becfb1d12f49d38942b88845421ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3f63e23c21fa7f4049c49338ec9d9a8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#aa3f63e23c21fa7f4049c49338ec9d9a8">initialize_backend</a> () override</td></tr>
<tr class="memdesc:aa3f63e23c21fa7f4049c49338ec9d9a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the backend.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#aa3f63e23c21fa7f4049c49338ec9d9a8">More...</a><br /></td></tr>
<tr class="separator:aa3f63e23c21fa7f4049c49338ec9d9a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b1a687adb038e7e989e5d33b26651dc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a7b1a687adb038e7e989e5d33b26651dc">setup_backend_context</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;ctx) override</td></tr>
<tr class="memdesc:a7b1a687adb038e7e989e5d33b26651dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setups the given graph context.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a7b1a687adb038e7e989e5d33b26651dc">More...</a><br /></td></tr>
<tr class="separator:a7b1a687adb038e7e989e5d33b26651dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa24d3f58d6e9c1d8c171d25defcdfb54"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#aa24d3f58d6e9c1d8c171d25defcdfb54">release_backend_context</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;ctx) override</td></tr>
<tr class="memdesc:aa24d3f58d6e9c1d8c171d25defcdfb54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release the backend specific resources associated to a given graph context.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#aa24d3f58d6e9c1d8c171d25defcdfb54">More...</a><br /></td></tr>
<tr class="separator:aa24d3f58d6e9c1d8c171d25defcdfb54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96a97b6b97a89e6940f8853d1dcbf213"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a96a97b6b97a89e6940f8853d1dcbf213">is_backend_supported</a> () override</td></tr>
<tr class="memdesc:a96a97b6b97a89e6940f8853d1dcbf213"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if an instantiated backend is actually supported.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a96a97b6b97a89e6940f8853d1dcbf213">More...</a><br /></td></tr>
<tr class="separator:a96a97b6b97a89e6940f8853d1dcbf213"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6b65acad7e828cac1385f7efd5e1ac3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ae6b65acad7e828cac1385f7efd5e1ac3">backend_allocator</a> () override</td></tr>
<tr class="memdesc:ae6b65acad7e828cac1385f7efd5e1ac3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a backend memory allocator.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ae6b65acad7e828cac1385f7efd5e1ac3">More...</a><br /></td></tr>
<tr class="separator:ae6b65acad7e828cac1385f7efd5e1ac3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5100fa4901700c5ce71b142e4b1b8d14"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a5100fa4901700c5ce71b142e4b1b8d14">create_tensor</a> (const <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>) override</td></tr>
<tr class="memdesc:a5100fa4901700c5ce71b142e4b1b8d14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a backend <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a>.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a5100fa4901700c5ce71b142e4b1b8d14">More...</a><br /></td></tr>
<tr class="separator:a5100fa4901700c5ce71b142e4b1b8d14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae799bfb412ee884ddaec1111d65a5709"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ae799bfb412ee884ddaec1111d65a5709">create_subtensor</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> *parent, <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> shape, <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> coords, bool extend_parent) override</td></tr>
<tr class="memdesc:ae799bfb412ee884ddaec1111d65a5709"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a backend Sub-Tensor.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ae799bfb412ee884ddaec1111d65a5709">More...</a><br /></td></tr>
<tr class="separator:ae799bfb412ee884ddaec1111d65a5709"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad47ca77f85641c7e74f75986a28682e6"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ad47ca77f85641c7e74f75986a28682e6">configure_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;node, <a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;ctx) override</td></tr>
<tr class="memdesc:ad47ca77f85641c7e74f75986a28682e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure a backend Node.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ad47ca77f85641c7e74f75986a28682e6">More...</a><br /></td></tr>
<tr class="separator:ad47ca77f85641c7e74f75986a28682e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8c9f941cc0efcdc112ac8534a204dd0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#af8c9f941cc0efcdc112ac8534a204dd0">validate_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;node) override</td></tr>
<tr class="memdesc:af8c9f941cc0efcdc112ac8534a204dd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate a node.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#af8c9f941cc0efcdc112ac8534a204dd0">More...</a><br /></td></tr>
<tr class="separator:af8c9f941cc0efcdc112ac8534a204dd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad02dea2a998dcd64725620b72022ba56"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">arm_compute::IMemoryManager</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ad02dea2a998dcd64725620b72022ba56">create_memory_manager</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206e">MemoryManagerAffinity</a> affinity) override</td></tr>
<tr class="memdesc:ad02dea2a998dcd64725620b72022ba56"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a backend memory manager given its affinity.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ad02dea2a998dcd64725620b72022ba56">More...</a><br /></td></tr>
<tr class="separator:ad02dea2a998dcd64725620b72022ba56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afae4c74f4a8efc83d76cf56e661f3ebc"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_weights_manager.xhtml">arm_compute::IWeightsManager</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#afae4c74f4a8efc83d76cf56e661f3ebc">create_weights_manager</a> () override</td></tr>
<tr class="memdesc:afae4c74f4a8efc83d76cf56e661f3ebc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a backend weights manager.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#afae4c74f4a8efc83d76cf56e661f3ebc">More...</a><br /></td></tr>
<tr class="separator:afae4c74f4a8efc83d76cf56e661f3ebc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71dadfded87f1b0d1820dbe51966686c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a71dadfded87f1b0d1820dbe51966686c">sync</a> () override</td></tr>
<tr class="memdesc:a71dadfded87f1b0d1820dbe51966686c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Synchronize kernels execution on the backend.  <a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a71dadfded87f1b0d1820dbe51966686c">More...</a><br /></td></tr>
<tr class="separator:a71dadfded87f1b0d1820dbe51966686c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1graph_1_1backends_1_1_i_device_backend"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1graph_1_1backends_1_1_i_device_backend')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml">IDeviceBackend</a></td></tr>
<tr class="memitem:ac111996fd9affe37e5322ce1bcf2f497 inherit pub_methods_classarm__compute_1_1graph_1_1backends_1_1_i_device_backend"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#ac111996fd9affe37e5322ce1bcf2f497">~IDeviceBackend</a> ()=default</td></tr>
<tr class="memdesc:ac111996fd9affe37e5322ce1bcf2f497 inherit pub_methods_classarm__compute_1_1graph_1_1backends_1_1_i_device_backend"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual Destructor.  <a href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#ac111996fd9affe37e5322ce1bcf2f497">More...</a><br /></td></tr>
<tr class="separator:ac111996fd9affe37e5322ce1bcf2f497 inherit pub_methods_classarm__compute_1_1graph_1_1backends_1_1_i_device_backend"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>OpenCL device backend. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_c_l_device_backend_8h_source.xhtml">CLDeviceBackend.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9dfba389ebfad48bbba75f1369c5af2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dfba389ebfad48bbba75f1369c5af2c">&#9670;&nbsp;</a></span>CLDeviceBackend()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml">CLDeviceBackend</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00065">65</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    : _context_count(0),</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      _tuner(),</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      _gemm_heuristics(),</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      _allocator(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      _tuner_file(),</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      _backend_type(<a class="code" href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdda925641e0b76c28cc940e8f3ca178d826">CLBackendType::Native</a>)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdda925641e0b76c28cc940e8f3ca178d826">arm_compute::Native</a>.</p>

</div>
</div>
<a id="a27f45725c45a61e5a1f4650bd23e25c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27f45725c45a61e5a1f4650bd23e25c4">&#9670;&nbsp;</a></span>~CLDeviceBackend()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml">CLDeviceBackend</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    _tuner.<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a3954437274c111b1d51ae164fbe6bb2f">save_to_file</a>(_tuner_file);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00350">CLTuner::save_to_file()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae6b65acad7e828cac1385f7efd5e1ac3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6b65acad7e828cac1385f7efd5e1ac3">&#9670;&nbsp;</a></span>backend_allocator()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a> * backend_allocator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a backend memory allocator. </p>
<dl class="section return"><dt>Returns</dt><dd>Backend memory allocator </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#ac37337ce735ea0bc448d31f719392993">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> _allocator.get();</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad47ca77f85641c7e74f75986a28682e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad47ca77f85641c7e74f75986a28682e6">&#9670;&nbsp;</a></span>configure_node()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a> &gt; configure_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configure a backend Node. </p>
<dl class="section note"><dt>Note</dt><dd>This creates an appropriate configured backend function for the given node</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td>The node we want to configure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>Context to use</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Backend execution function </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#af989fb4cdd6783b776e6b3feceb9fdcb">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00192">192</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>(<span class="stringliteral">&quot;Configuring CL node with ID : &quot;</span> &lt;&lt; node.id() &lt;&lt; std::endl);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(node.assigned_target() != <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">Target::CL</a>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">// Configure node</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_function_factory.xhtml#aa7ac6bf065e64181f3c92fee4b3b5c79">CLFunctionFactory::create</a>(&amp;node, ctx);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="graph_2_logger_8h_source.xhtml#l00050">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00198">INode::assigned_target()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">arm_compute::graph::CL</a>, <a class="el" href="_c_l_functions_factory_8cpp_source.xhtml#l00224">CLFunctionFactory::create()</a>, and <a class="el" href="_i_node_8cpp_source.xhtml#l00102">INode::id()</a>.</p>

</div>
</div>
<a id="ad02dea2a998dcd64725620b72022ba56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad02dea2a998dcd64725620b72022ba56">&#9670;&nbsp;</a></span>create_memory_manager()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">arm_compute::IMemoryManager</a> &gt; create_memory_manager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206e">MemoryManagerAffinity</a>&#160;</td>
          <td class="paramname"><em>affinity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a backend memory manager given its affinity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">affinity</td><td><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> Manager affinity</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> manager </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#aa42b584f7715675c47b7ecb70d494e9c">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00209">209</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;{</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordflow">if</span> (affinity == <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206eadfd0a82c4bf37b1e90b690a22a20692e">MemoryManagerAffinity::Offset</a>)</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <a class="code" href="graph_2_logger_8h.xhtml#a8424b9bc1276fa4978d219ad29c11a7c">ARM_COMPUTE_LOG_GRAPH_WARNING</a>(<span class="stringliteral">&quot;CL Backend does not support offset affinity memory management!&quot;</span>);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keyword">auto</span> lifetime_mgr = std::make_shared&lt;BlobLifetimeManager&gt;();</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keyword">auto</span> pool_mgr     = std::make_shared&lt;PoolManager&gt;();</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keyword">auto</span> mm           = std::make_shared&lt;MemoryManagerOnDemand&gt;(lifetime_mgr, pool_mgr);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordflow">return</span> mm;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="graph_2_logger_8h_source.xhtml#l00058">ARM_COMPUTE_LOG_GRAPH_WARNING</a>, and <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206eadfd0a82c4bf37b1e90b690a22a20692e">arm_compute::graph::Offset</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00108">CLDeviceBackend::setup_backend_context()</a>.</p>

</div>
</div>
<a id="ae799bfb412ee884ddaec1111d65a5709"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae799bfb412ee884ddaec1111d65a5709">&#9670;&nbsp;</a></span>create_subtensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt; create_subtensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td>
          <td class="paramname"><em>shape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>&#160;</td>
          <td class="paramname"><em>coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>extend_parent</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a backend Sub-Tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">parent</td><td>Parent sub-tensor handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shape</td><td>Shape of the sub-tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">coords</td><td>Starting coordinates of the sub-tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">extend_parent</td><td>Extends parent shape if true</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Backend sub-tensor handle </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#af8e71170f6e62ea5e6fefab95380a01b">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00182">182</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">if</span> (parent == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    {</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    }</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;CLSubTensorHandle&gt;(parent, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, coords, extend_parent);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">arm_compute::test::validation::shape</a>.</p>

</div>
</div>
<a id="a5100fa4901700c5ce71b142e4b1b8d14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5100fa4901700c5ce71b142e4b1b8d14">&#9670;&nbsp;</a></span>create_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt; create_tensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a backend <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object.">Tensor</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td>The tensor we want to create a backend tensor for</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Backend tensor handle </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a0f46e4fef818b4114b3d09c799944046">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00168">168</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="comment">// Get tensor descriptor</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keyword">const</span> TensorDescriptor &amp;tensor_desc = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.desc();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(tensor_desc.target != <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">Target::CL</a>);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">// Create backend tensor handle</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    TensorInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>(tensor_desc.shape, 1, tensor_desc.data_type, tensor_desc.quant_info);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.set_data_layout(tensor_desc.layout);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;CLTensorHandle&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">arm_compute::graph::CL</a>, <a class="el" href="_tensor_descriptor_8h_source.xhtml#l00114">TensorDescriptor::data_type</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="_tensor_descriptor_8h_source.xhtml#l00115">TensorDescriptor::layout</a>, <a class="el" href="_tensor_descriptor_8h_source.xhtml#l00116">TensorDescriptor::quant_info</a>, <a class="el" href="_tensor_descriptor_8h_source.xhtml#l00113">TensorDescriptor::shape</a>, <a class="el" href="_tensor_descriptor_8h_source.xhtml#l00117">TensorDescriptor::target</a>, and <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>.</p>

</div>
</div>
<a id="afae4c74f4a8efc83d76cf56e661f3ebc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afae4c74f4a8efc83d76cf56e661f3ebc">&#9670;&nbsp;</a></span>create_weights_manager()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_weights_manager.xhtml">arm_compute::IWeightsManager</a> &gt; create_weights_manager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a backend weights manager. </p>
<dl class="section return"><dt>Returns</dt><dd>Weights manager </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a8e70bd2e99ee6a4afd3bcc915bc9c4f7">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00224">224</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;{</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keyword">auto</span> weights_mgr = std::make_shared&lt;IWeightsManager&gt;();</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">return</span> weights_mgr;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00108">CLDeviceBackend::setup_backend_context()</a>.</p>

</div>
</div>
<a id="aa3f63e23c21fa7f4049c49338ec9d9a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3f63e23c21fa7f4049c49338ec9d9a8">&#9670;&nbsp;</a></span>initialize_backend()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void initialize_backend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes the backend. </p>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a06c1cd9b4e00e6c00365bfeab0ff7785">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00090">90</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="comment">// Setup Scheduler</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a56d8f451f6b30093a49f1b4978681b07">default_init</a>(&amp;_tuner, &amp;_gemm_heuristics, _backend_type);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// Create allocator with new context</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    _allocator = std::make_unique&lt;CLBufferAllocator&gt;();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00134">CLScheduler::default_init()</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00108">CLDeviceBackend::setup_backend_context()</a>.</p>

</div>
</div>
<a id="a96a97b6b97a89e6940f8853d1dcbf213"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96a97b6b97a89e6940f8853d1dcbf213">&#9670;&nbsp;</a></span>is_backend_supported()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_backend_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if an instantiated backend is actually supported. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the backend is supported else false </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#aba671d383a01749f55e49d5750646c05">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00158">158</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">arm_compute::opencl_is_available</a>();</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_open_c_l_8cpp_source.xhtml#l00236">arm_compute::opencl_is_available()</a>.</p>

</div>
</div>
<a id="aa24d3f58d6e9c1d8c171d25defcdfb54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa24d3f58d6e9c1d8c171d25defcdfb54">&#9670;&nbsp;</a></span>release_backend_context()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void release_backend_context </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Release the backend specific resources associated to a given graph context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">ctx</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> context </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a449129d5832bab24106f9f67583dc8a1">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00098">98</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(ctx);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    _context_count--;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">if</span> (_context_count == 0) <span class="comment">// No more context using the backend: free resources</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        _allocator = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>.</p>

</div>
</div>
<a id="a96e32e9d96b05d238f46be2e90d0e60b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96e32e9d96b05d238f46be2e90d0e60b">&#9670;&nbsp;</a></span>set_kernel_tuning()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_kernel_tuning </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable_tuning</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switchs on or off the kernel tuning. </p>
<dl class="section note"><dt>Note</dt><dd>When true the tuner set is used, if no tuner is set a new default one is created</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">enable_tuning</td><td>Enables tuning if false else true </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00080">80</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    _tuner.<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#aba10acdb2d58e3e0a96364c487a71d40">set_tune_new_kernels</a>(enable_tuning);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00080">CLTuner::set_tune_new_kernels()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00108">CLDeviceBackend::setup_backend_context()</a>.</p>

</div>
</div>
<a id="a3d7becfb1d12f49d38942b88845421ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d7becfb1d12f49d38942b88845421ec">&#9670;&nbsp;</a></span>set_kernel_tuning_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_kernel_tuning_mode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5c">CLTunerMode</a>&#160;</td>
          <td class="paramname"><em>tuning_mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set kernel tuning mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tuning_mode</td><td>Indicates how exhaustive the search for the optimal LWS should be while tuning </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00085">85</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    _tuner.<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#aae485b24df65d39cb646e48317f49639">set_tuner_mode</a>(tuning_mode);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00089">CLTuner::set_tuner_mode()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00108">CLDeviceBackend::setup_backend_context()</a>.</p>

</div>
</div>
<a id="a7b1a687adb038e7e989e5d33b26651dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b1a687adb038e7e989e5d33b26651dc">&#9670;&nbsp;</a></span>setup_backend_context()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void setup_backend_context </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Setups the given graph context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">ctx</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class.">Graph</a> context </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#ad172b9815229e40cd25ad1c401d2a0e4">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00108">108</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;{</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// Force backend initialization</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    _context_count++;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">if</span> (_context_count == 1)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        _backend_type = ctx.config().backend_type;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#aa3f63e23c21fa7f4049c49338ec9d9a8">initialize_backend</a>();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="comment">// Setup tuner</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    _tuner_file = ctx.config().tuner_file;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="comment">// Load tuner data if available</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">if</span> (file_exists(_tuner_file))</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        _tuner.<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a5ddfa449f78e4c4d8345e37f1719cc57">load_from_file</a>(_tuner_file);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a96e32e9d96b05d238f46be2e90d0e60b">set_kernel_tuning</a>(ctx.config().use_tuner);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a3d7becfb1d12f49d38942b88845421ec">set_kernel_tuning_mode</a>(ctx.config().tuner_mode);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="comment">// Attempt to load mlgo heuristics</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().gemm_heuristics() == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c3cecc6734b01ed92d5e66876411e00">gemm_heuristics</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_heuristics_handle.xhtml#a5c2c484ee9132b98af079a39793cd6fd">reload_from_file</a>(ctx.config().mlgo_file);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">// Setup a management backend</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">if</span> (ctx.memory_management_ctx(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">Target::CL</a>) == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        MemoryManagerContext mm_ctx;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        mm_ctx.target      = <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">Target::CL</a>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        mm_ctx.intra_mm    = <a class="code" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ad02dea2a998dcd64725620b72022ba56">create_memory_manager</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206ea7e62bc342f41c946868f0ea6f0b712d8">MemoryManagerAffinity::Buffer</a>);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        mm_ctx.cross_mm    = <a class="code" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ad02dea2a998dcd64725620b72022ba56">create_memory_manager</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206ea7e62bc342f41c946868f0ea6f0b712d8">MemoryManagerAffinity::Buffer</a>);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        mm_ctx.cross_group = std::make_shared&lt;MemoryGroup&gt;(mm_ctx.cross_mm);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        mm_ctx.allocator   = _allocator.get();</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        ctx.insert_memory_management_ctx(std::move(mm_ctx));</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="comment">// Create function level weights manager</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">if</span> (ctx.weights_management_ctx(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">Target::CL</a>) == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        WeightsManagerContext wm_ctx;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        wm_ctx.target = <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">Target::CL</a>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        wm_ctx.wm     = <a class="code" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#afae4c74f4a8efc83d76cf56e661f3ebc">create_weights_manager</a>();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        ctx.insert_weights_management_ctx(std::move(wm_ctx));</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_graph_context_8h_source.xhtml#l00045">MemoryManagerContext::allocator</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00100">GraphConfig::backend_type</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206ea7e62bc342f41c946868f0ea6f0b712d8">arm_compute::graph::Buffer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">arm_compute::graph::CL</a>, <a class="el" href="_graph_context_8cpp_source.xhtml#l00045">GraphContext::config()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00209">CLDeviceBackend::create_memory_manager()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00224">CLDeviceBackend::create_weights_manager()</a>, <a class="el" href="_graph_context_8h_source.xhtml#l00044">MemoryManagerContext::cross_group</a>, <a class="el" href="_graph_context_8h_source.xhtml#l00043">MemoryManagerContext::cross_mm</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00051">CLScheduler::gemm_heuristics()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00090">CLDeviceBackend::initialize_backend()</a>, <a class="el" href="_graph_context_8cpp_source.xhtml#l00055">GraphContext::insert_memory_management_ctx()</a>, <a class="el" href="_graph_context_8cpp_source.xhtml#l00077">GraphContext::insert_weights_management_ctx()</a>, <a class="el" href="_graph_context_8h_source.xhtml#l00042">MemoryManagerContext::intra_mm</a>, <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00298">CLTuner::load_from_file()</a>, <a class="el" href="_graph_context_8cpp_source.xhtml#l00067">GraphContext::memory_management_ctx()</a>, <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00099">GraphConfig::mlgo_file</a>, <a class="el" href="_c_l_g_e_m_m_heuristics_handle_8cpp_source.xhtml#l00035">CLGEMMHeuristicsHandle::reload_from_file()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00080">CLDeviceBackend::set_kernel_tuning()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00085">CLDeviceBackend::set_kernel_tuning_mode()</a>, <a class="el" href="_graph_context_8h_source.xhtml#l00041">MemoryManagerContext::target</a>, <a class="el" href="_graph_context_8h_source.xhtml#l00051">WeightsManagerContext::target</a>, <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00098">GraphConfig::tuner_file</a>, <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00095">GraphConfig::tuner_mode</a>, <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00092">GraphConfig::use_tuner</a>, <a class="el" href="_graph_context_8cpp_source.xhtml#l00091">GraphContext::weights_management_ctx()</a>, and <a class="el" href="_graph_context_8h_source.xhtml#l00052">WeightsManagerContext::wm</a>.</p>

</div>
</div>
<a id="a71dadfded87f1b0d1820dbe51966686c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71dadfded87f1b0d1820dbe51966686c">&#9670;&nbsp;</a></span>sync()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Synchronize kernels execution on the backend. </p>
<p>On GPU, this results in a blocking call waiting for all kernels to be completed. </p>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a67120e76996aaa08d407cc4a00d89f1c">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00230">230</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;{</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ad55f80ed3cd8b6c4f247763b747016af">sync</a>();</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00071">CLScheduler::sync()</a>.</p>

</div>
</div>
<a id="af8c9f941cc0efcdc112ac8534a204dd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8c9f941cc0efcdc112ac8534a204dd0">&#9670;&nbsp;</a></span>validate_node()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> validate_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Validate a node. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td>The node we want to validate</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An error status </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_i_device_backend.xhtml#a2ad722cd593bc5300108c8837ce5c980">IDeviceBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00201">201</a> of file <a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;{</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>(<span class="stringliteral">&quot;Validating CL node with ID : &quot;</span> &lt;&lt; node.id() &lt;&lt; std::endl);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(node.assigned_target() != <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">Target::CL</a>);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_node_validator.xhtml#a0779bcdedc0eebdd3e24c3f1b6356128">CLNodeValidator::validate</a>(&amp;node);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="graph_2_logger_8h_source.xhtml#l00050">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00198">INode::assigned_target()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">arm_compute::graph::CL</a>, <a class="el" href="_i_node_8cpp_source.xhtml#l00102">INode::id()</a>, and <a class="el" href="_c_l_node_validator_8cpp_source.xhtml#l00057">CLNodeValidator::validate()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/graph/backends/CL/<a class="el" href="_c_l_device_backend_8h_source.xhtml">CLDeviceBackend.h</a></li>
<li>src/graph/backends/CL/<a class="el" href="_c_l_device_backend_8cpp_source.xhtml">CLDeviceBackend.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a5c3cecc6734b01ed92d5e66876411e00"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c3cecc6734b01ed92d5e66876411e00">arm_compute::CLScheduler::gemm_heuristics</a></div><div class="ttdeci">CLGEMMHeuristicsHandle * gemm_heuristics() const</div><div class="ttdoc">Accessor for the associated CLGEMMHeuristicsHandle.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00051">CLScheduler.cpp:51</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_ac866c81ec0f5526139dfc62ddc3f206eadfd0a82c4bf37b1e90b690a22a20692e"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206eadfd0a82c4bf37b1e90b690a22a20692e">arm_compute::graph::MemoryManagerAffinity::Offset</a></div><div class="ttdeci">@ Offset</div><div class="ttdoc">Affinity at offset level.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5f49decb4b0a74d5361686ab45db8961"><div class="ttname"><a href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">arm_compute::opencl_is_available</a></div><div class="ttdeci">bool opencl_is_available()</div><div class="ttdoc">Check if OpenCL is available.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00236">OpenCL.cpp:236</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">arm_compute::graph::Target::CL</a></div><div class="ttdeci">@ CL</div><div class="ttdoc">OpenCL capable target device.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a3954437274c111b1d51ae164fbe6bb2f"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a3954437274c111b1d51ae164fbe6bb2f">arm_compute::CLTuner::save_to_file</a></div><div class="ttdeci">bool save_to_file(const std::string &amp;filename) const</div><div class="ttdoc">Save the content of the tuning parameters table to file.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00350">CLTuner.cpp:350</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_ad55f80ed3cd8b6c4f247763b747016af"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ad55f80ed3cd8b6c4f247763b747016af">arm_compute::CLScheduler::sync</a></div><div class="ttdeci">void sync()</div><div class="ttdoc">Blocks until all commands in the associated command queue have finished.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00071">CLScheduler.cpp:71</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_ac866c81ec0f5526139dfc62ddc3f206ea7e62bc342f41c946868f0ea6f0b712d8"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206ea7e62bc342f41c946868f0ea6f0b712d8">arm_compute::graph::MemoryManagerAffinity::Buffer</a></div><div class="ttdeci">@ Buffer</div><div class="ttdoc">Affinity at buffer level.</div></div>
<div class="ttc" id="agraph_2_logger_8h_xhtml_a8424b9bc1276fa4978d219ad29c11a7c"><div class="ttname"><a href="graph_2_logger_8h.xhtml#a8424b9bc1276fa4978d219ad29c11a7c">ARM_COMPUTE_LOG_GRAPH_WARNING</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_GRAPH_WARNING(x)</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_logger_8h_source.xhtml#l00058">Logger.h:58</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1backends_1_1_c_l_node_validator_xhtml_a0779bcdedc0eebdd3e24c3f1b6356128"><div class="ttname"><a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_node_validator.xhtml#a0779bcdedc0eebdd3e24c3f1b6356128">arm_compute::graph::backends::CLNodeValidator::validate</a></div><div class="ttdeci">static Status validate(INode *node)</div><div class="ttdoc">Validate a node.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_node_validator_8cpp_source.xhtml#l00057">CLNodeValidator.cpp:57</a></div></div>
<div class="ttc" id="agraph_2_logger_8h_xhtml_a300d153929a99c7b571d4cda3f7987a5"><div class="ttname"><a href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_GRAPH_VERBOSE(x)</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_logger_8h_source.xhtml#l00050">Logger.h:50</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_g_e_m_m_heuristics_handle_xhtml_a5c2c484ee9132b98af079a39793cd6fd"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_heuristics_handle.xhtml#a5c2c484ee9132b98af079a39793cd6fd">arm_compute::CLGEMMHeuristicsHandle::reload_from_file</a></div><div class="ttdeci">bool reload_from_file(const std::string &amp;filename)</div><div class="ttdoc">(Re)Load the heuristics from reading a dotmlgo file</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_heuristics_handle_8cpp_source.xhtml#l00035">CLGEMMHeuristicsHandle.cpp:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend_xhtml_aa3f63e23c21fa7f4049c49338ec9d9a8"><div class="ttname"><a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#aa3f63e23c21fa7f4049c49338ec9d9a8">arm_compute::graph::backends::CLDeviceBackend::initialize_backend</a></div><div class="ttdeci">void initialize_backend() override</div><div class="ttdoc">Initializes the backend.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_backend_8cpp_source.xhtml#l00090">CLDeviceBackend.cpp:90</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend_xhtml_a96e32e9d96b05d238f46be2e90d0e60b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a96e32e9d96b05d238f46be2e90d0e60b">arm_compute::graph::backends::CLDeviceBackend::set_kernel_tuning</a></div><div class="ttdeci">void set_kernel_tuning(bool enable_tuning)</div><div class="ttdoc">Switchs on or off the kernel tuning.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_backend_8cpp_source.xhtml#l00080">CLDeviceBackend.cpp:80</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a94eb95e47316e7dc5af7615592d26bdda925641e0b76c28cc940e8f3ca178d826"><div class="ttname"><a href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdda925641e0b76c28cc940e8f3ca178d826">arm_compute::CLBackendType::Native</a></div><div class="ttdeci">@ Native</div><div class="ttdoc">OpenCL native backend.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a56d8f451f6b30093a49f1b4978681b07"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a56d8f451f6b30093a49f1b4978681b07">arm_compute::CLScheduler::default_init</a></div><div class="ttdeci">void default_init(ICLTuner *cl_tuner=nullptr, CLGEMMHeuristicsHandle *gemm_h=nullptr, CLBackendType cl_backend_type=CLBackendType::Native)</div><div class="ttdoc">Initialises the context and command queue used by the scheduler to default values and sets a default ...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00134">CLScheduler.cpp:134</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend_xhtml_afae4c74f4a8efc83d76cf56e661f3ebc"><div class="ttname"><a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#afae4c74f4a8efc83d76cf56e661f3ebc">arm_compute::graph::backends::CLDeviceBackend::create_weights_manager</a></div><div class="ttdeci">std::shared_ptr&lt; arm_compute::IWeightsManager &gt; create_weights_manager() override</div><div class="ttdoc">Create a backend weights manager.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_backend_8cpp_source.xhtml#l00224">CLDeviceBackend.cpp:224</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend_xhtml_a3d7becfb1d12f49d38942b88845421ec"><div class="ttname"><a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#a3d7becfb1d12f49d38942b88845421ec">arm_compute::graph::backends::CLDeviceBackend::set_kernel_tuning_mode</a></div><div class="ttdeci">void set_kernel_tuning_mode(CLTunerMode tuning_mode)</div><div class="ttdoc">Set kernel tuning mode.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_backend_8cpp_source.xhtml#l00085">CLDeviceBackend.cpp:85</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1backends_1_1_c_l_function_factory_xhtml_aa7ac6bf065e64181f3c92fee4b3b5c79"><div class="ttname"><a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_function_factory.xhtml#aa7ac6bf065e64181f3c92fee4b3b5c79">arm_compute::graph::backends::CLFunctionFactory::create</a></div><div class="ttdeci">static std::unique_ptr&lt; arm_compute::IFunction &gt; create(INode *node, GraphContext &amp;ctx)</div><div class="ttdoc">Create a backend execution function depending on the node type.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_functions_factory_8cpp_source.xhtml#l00224">CLFunctionsFactory.cpp:224</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a5ddfa449f78e4c4d8345e37f1719cc57"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a5ddfa449f78e4c4d8345e37f1719cc57">arm_compute::CLTuner::load_from_file</a></div><div class="ttdeci">void load_from_file(const std::string &amp;filename)</div><div class="ttdoc">Load the tuning parameters table from file.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00298">CLTuner.cpp:298</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_aae485b24df65d39cb646e48317f49639"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#aae485b24df65d39cb646e48317f49639">arm_compute::CLTuner::set_tuner_mode</a></div><div class="ttdeci">void set_tuner_mode(CLTunerMode mode)</div><div class="ttdoc">Set OpenCL tuner mode.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00089">CLTuner.cpp:89</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_aba10acdb2d58e3e0a96364c487a71d40"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#aba10acdb2d58e3e0a96364c487a71d40">arm_compute::CLTuner::set_tune_new_kernels</a></div><div class="ttdeci">void set_tune_new_kernels(bool tune_new_kernels)</div><div class="ttdoc">Setter for tune_new_kernels option.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00080">CLTuner.cpp:80</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend_xhtml_ad02dea2a998dcd64725620b72022ba56"><div class="ttname"><a href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml#ad02dea2a998dcd64725620b72022ba56">arm_compute::graph::backends::CLDeviceBackend::create_memory_manager</a></div><div class="ttdeci">std::shared_ptr&lt; arm_compute::IMemoryManager &gt; create_memory_manager(MemoryManagerAffinity affinity) override</div><div class="ttdoc">Create a backend memory manager given its affinity.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_backend_8cpp_source.xhtml#l00209">CLDeviceBackend.cpp:209</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">backends</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_device_backend.xhtml">CLDeviceBackend</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:15:05 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
