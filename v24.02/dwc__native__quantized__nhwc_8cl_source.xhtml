<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/nhwc/dwc_native_quantized_nhwc.cl Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dwc__native__quantized__nhwc_8cl_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">dwc_native_quantized_nhwc.cl</div>  </div>
</div><!--header-->
<div class="contents">
<a href="dwc__native__quantized__nhwc_8cl.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tile__helpers_8h.xhtml">tile_helpers.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">// *INDENT-OFF*</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">// clang-format off</span></div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="dwc__native__quantized__nhwc_8cl.xhtml#a07d9c5bd9d72c5b16c58dbca57a35f2d">   30</a></span>&#160;<span class="preprocessor">#define CALCULATE_WEIGHTS_OFFSET_CORRECTION(A_DATA_TYPE, B_DATA_TYPE) CALCULATE_WEIGHTS_OFFSET_CORRECTION_STR(A_DATA_TYPE, B_DATA_TYPE)</span></div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="dwc__native__quantized__nhwc_8cl.xhtml#a38e5c3397aa6ac780b65558496a88abc">   31</a></span>&#160;<span class="preprocessor">#define CALCULATE_WEIGHTS_OFFSET_CORRECTION_STR(A_DATA_TYPE, B_DATA_TYPE) CALCULATE_WEIGHTS_OFFSET_CORRECTION_##A_DATA_TYPE##_##B_DATA_TYPE</span></div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="dwc__native__quantized__nhwc_8cl.xhtml#a69f35f2898467fd41e2239025c49f527">   32</a></span>&#160;<span class="preprocessor">#define CALCULATE_WEIGHTS_OFFSET_CORRECTION_char_char (0)</span></div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="dwc__native__quantized__nhwc_8cl.xhtml#af1a3a4ac024a9283d2d641ee00d5ca0e">   33</a></span>&#160;<span class="preprocessor">#define CALCULATE_WEIGHTS_OFFSET_CORRECTION_uchar_uchar (0)</span></div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="dwc__native__quantized__nhwc_8cl.xhtml#a861d11cbfd8a2dc2f40602bcf870a27c">   34</a></span>&#160;<span class="preprocessor">#define CALCULATE_WEIGHTS_OFFSET_CORRECTION_uchar_char (128)</span></div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="dwc__native__quantized__nhwc_8cl.xhtml#a5fc3f983b84e64bae0bb6e952ea5d4cf">   35</a></span>&#160;<span class="preprocessor">#define CALCULATE_WEIGHTS_OFFSET_CORRECTION_char_uchar (-128)</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="dwc__native__quantized__nhwc_8cl.xhtml#ab828c02b93b5ffe1c28a9c1aa029d134">   37</a></span>&#160;<span class="preprocessor">#define T_LOAD_MULTIPLIERS_SHIFT_PER_TENSOR() \</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">    ({})</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="dwc__native__quantized__nhwc_8cl.xhtml#a7dbbb8ec8ae6e7605bbd100fb1b11f73">   40</a></span>&#160;<span class="preprocessor">#define T_LOAD_MULTIPLIERS_SHIFT_PER_CHANNEL()                                                     \</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">    TILE(DST_MULTIPLIERS_DATA_TYPE, 1, N0, multipliers);                                           \</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">    TILE(DST_SHIFTS_DATA_TYPE, 1, N0, shifts);                                                     \</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">    T_LOAD(DST_MULTIPLIERS_DATA_TYPE, 1, N0, BUFFER, dst_multipliers, cout, 0, 0, 0, multipliers); \</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">    T_LOAD(DST_SHIFTS_DATA_TYPE, 1, N0, BUFFER, dst_shifts, cout, 0, 0, 0, shifts);</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="dwc__native__quantized__nhwc_8cl.xhtml#a73afffa588543a7fbcb272cdb6480072">   46</a></span>&#160;<span class="preprocessor">#define T_LOAD_MULTIPLIERS_SHIFT(QUANTIZATION_TYPE) T_LOAD_MULTIPLIERS_SHIFT_STR(QUANTIZATION_TYPE)</span></div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="dwc__native__quantized__nhwc_8cl.xhtml#a484eede56f4a958163015d2beddb372e">   47</a></span>&#160;<span class="preprocessor">#define T_LOAD_MULTIPLIERS_SHIFT_STR(QUANTIZATION_TYPE) T_LOAD_MULTIPLIERS_SHIFT_##QUANTIZATION_TYPE()</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#if defined(WEI_WIDTH) &amp;&amp; defined(WEI_HEIGHT) &amp;&amp; defined(N0) &amp;&amp; defined(M0) &amp;&amp; defined(DILATION_X) &amp;&amp; defined(DILATION_Y) &amp;&amp; defined(STRIDE_X) &amp;&amp; defined(STRIDE_Y) &amp;&amp; defined(PAD_LEFT) &amp;&amp; defined(PAD_TOP)</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">//! @cond Doxygen_Suppress</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"></span><span class="comment">/** OpenCL kernel to compute the depthwise convolution for quantized data types</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> * @note Data layout supported: NHWC</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> * @note Data type supported: QSYMM8/QASYMM8/QASYMM8_SIGNED/QSYMM8_PER_CHANNEL</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> * @note The convolution padding (left and top) must be passed at compile time using -DPAD_LEFT and -DPAD_TOP (e.g. -DPAD_LEFT=2, -DPAD_TOP=2)</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> * @note The convolution strides must be passed at compile time using -DSTRIDE_X and -DSTRIDE_Y (e.g. -DSTRIDE_X=2, -DSTRIDE_Y=2)</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> * @note The convolution dilations must be passed at compile time using -DDILATION_X and -DDILATION_Y (e.g. -DDILATION_X=2, -DDILATION_Y=2)</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> * @note The spatial dimensions of the weights must be passed at compile time using -DWEI_WIDTH and -DWEI_HEIGHT (e.g. -DWEI_WIDTH=9, -DWEI_HEIGHT=9)</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> * @note The tensor type (&quot;BUFFER&quot; or &quot;IMAGE&quot;) of the source tensor must be passed at compile time using -DSRC_TENSOR_TYPE (e.g. -DSRC_TENSOR_TYPE=BUFFER)</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> * @note The tensor type (&quot;BUFFER&quot; or &quot;IMAGE&quot;) of the weights tensor must be passed at compile time using -DWEI_TENSOR_TYPE (e.g. -DWEI_TENSOR_TYPE=BUFFER)</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"> * @note The tensor type (&quot;BUFFER&quot; or &quot;IMAGE&quot;) of the destination tensor must be passed at compile time using -DDST_TENSOR_TYPE (e.g. -DDST_TENSOR_TYPE=BUFFER)</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"> * @note The data type of the source tensor must be passed at compile time using -DSRC_DATA_TYPE (e.g. -DSRC_DATA_TYPE=int8)</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"> * @note The data type of the weights tensor must be passed at compile time using -DWEI_DATA_TYPE (e.g. -DWEI_DATA_TYPE=int8)</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"> * @note The data type of the destination tensor must be passed at compile time using -DDST_DATA_TYPE (e.g. -DDST_DATA_TYPE=int8)</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> * @note The data type of the accumulators must be passed at compile time using -DACC_DATA_TYPE (e.g. -DACC_DATA_TYPE=int)</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> * @note The number of M0 rows (width) to process must be passed at compile time using -DM0 (e.g. -DM0=2)</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> * @note The number of N0 output channels to process must be passed at compile time using -DN0 (e.g. -DN0=2)</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> * @note The size of the partial store block in the first dimension must be passed at compile time using -DPARTIAL_N0 (e.g. -DPARTIAL_N0=1)</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> * @note The activation type must be passed at compile using -DACTIVATION_TYPE e.g. -DACTIVATION_TYPE=relu</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> * @note The A and B variables required by some activation functions must be passed at compile time using -DA_VAL= and -DB_VAL= respectively</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"> * @note The quantization offset used for both the per-tensor and per-channel quantization must be passed at compile using -DDST_OFFSET (e.g., -DDST_OFFSET=3)</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"> * @note The quantization shift for the per-tensor quantization must be passed at compile time using -DDST_SHIFT (e.g., -DDST_SHIFT=1)</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> * @note The quantization multiplier for the per-tensor quantization must be passed at compile using -DDST_MULTIPLIER (e.g., -DDST_MULTIPLER=121432)</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> * @note Only the following configurations of M0 and N0 are currently supported:</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"> *  - M0 = 1, 2, 3, 4, 5, .... n (M0 != 1 with STRIDE_X == 1 &amp;&amp; DILATION_X == 1 only)</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> *  - N0 = 2, 3, 4, 8, 16</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"> * @note The number of rows to read from the src tensor must be passed at compile time using -DM0_A (e.g., -DM0_A=3). M0_A must be equal to WEI_WIDTH + (M0 - 1)</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"> * @note The number of columns to read from the src tensor must be passed at compile time using -DN0_A. It can either be 1 (for DEPTH_MULTIPLIER &gt; 1) or N0 (for DEPTH_MULTIPLIER == 1)</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"> * @param[in]  src_img                                       (Not supported) Read only cl_image object for the source tensor. Included when SRC_TENSOR_TYPE=IMAGE</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"> * @param[in]  src_ptr                                       Pointer to the source tensor. Supported data type: QSYMM8/QASYMM8/QASYMM8_SIGNED/QSYMM8_PER_CHANNEL</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"> * @param[in]  src_stride_y                                  Stride of the source tensor in Y dimension (in bytes)</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"> * @param[in]  src_stride_z                                  Stride of the source tensor in Z dimension (in bytes)</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"> * @param[in]  src_stride_w                                  Stride of the source tensor in W dimension (in bytes)</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"> * @param[in]  src_c                                         The size of the channels dimension of the source tensor</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"> * @param[in]  src_w                                         The size of the width dimension of the source tensor</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"> * @param[in]  src_h                                         The size of the height dimension of the source tensor</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"> * @param[in]  src_n                                         The size of the batches dimension of the source tensor</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"> * @param[in]  src_offset_first_element_in_bytes             The offset of the first element in the source tensor</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"> * @param[out] dst_img                                       (Not supported) Write only cl_image object for the destination tensor. Included when DST_TENSOR_TYPE=IMAGE</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"> * @param[out] dst_ptr                                       Pointer to the destination tensor. Supported data type: same as @p src_ptr</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"> * @param[in]  dst_stride_y                                  Stride of the destination tensor in Y dimension (in bytes)</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"> * @param[in]  dst_stride_z                                  Stride of the destination tensor in Z dimension (in bytes)</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"> * @param[in]  dst_stride_w                                  Stride of the destination tensor in W dimension (in bytes)</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"> * @param[in]  dst_c                                         The size of the channels dimension of the destination tensor</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"> * @param[in]  dst_w                                         The size of the width dimension of the destination tensor</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"> * @param[in]  dst_h                                         The size of the height dimension of the destination tensor</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"> * @param[in]  dst_n                                         The size of the batches dimension of the destination tensor</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"> * @param[in]  dst_offset_first_element_in_bytes             The offset of the first element in the destination tensor</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"> * @param[in]  wei_img                                       (Not supported) Read only cl_image object for the weights tensor. Included when WEI_TENSOR_TYPE=IMAGE</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"> * @param[in]  wei_ptr                                       Pointer to the weights tensor. Supported data type: same as @p src_ptr</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"> * @param[in]  wei_stride_y                                  Stride of the weights tensor in Y dimension (in bytes)</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"> * @param[in]  wei_stride_z                                  Stride of the weights tensor in Z dimension (in bytes)</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"> * @param[in]  wei_stride_w                                  Stride of the weights tensor in W dimension (in bytes)</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"> * @param[in]  wei_c                                         The size of the channels dimension of the weights tensor</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"> * @param[in]  wei_w                                         The size of the width dimension of the weights tensor</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"> * @param[in]  wei_h                                         The size of the height dimension of the weights tensor</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"> * @param[in]  wei_n                                         The size of the batches dimension of the weights tensor</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"> * @param[in]  wei_step_w                                    wei_stride_w * number of elements along W processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"> * @param[in]  wei_offset_first_element_in_bytes             The offset of the first element in the weights tensor</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"> * @param[in]  dst_multipliers_ptr                           Pointer to the destination multipliers tensor for the per-channel quantization. Supported data type: S32</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"> * @param[in]  dst_multipliers_stride_x                      Stride of the destination multipliers tensor in X dimension (in bytes)</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"> * @param[in]  dst_multipliers_step_x                        dst_multipliers_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"> * @param[in]  dst_multipliers_offset_first_element_in_bytes The offset of the first element in the destination multipliers tensor</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"> * @param[in]  dst_shifts_ptr                                Pointer to the destination shifts tensor for the per-channel quantization. Supported data type: S32</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"> * @param[in]  dst_shifts_stride_x                           Stride of the destination shifts tensor in X dimension (in bytes)</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"> * @param[in]  dst_shifts_step_x                             dst_shifts_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"> * @param[in]  dst_shifts_offset_first_element_in_bytes      The offset of the first element in the destination shifts tensor</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"> * @param[in]  bia_ptr                                       (Optional) Pointer to the bias tensor Supported data type: S32</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"> * @param[in]  bia_stride_x                                  (Optional) Stride of the bias tensor in X dimension (in bytes)</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"> * @param[in]  bia_step_x                                    (Optional) bia_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"> * @param[in]  bia_offset_first_element_in_bytes             (Optional) The offset of the first element in the bias tensor</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"> */</span><span class="comment"></span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">//! @endcond</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"></span>__kernel <span class="keywordtype">void</span> dwc_native_quantized_nhwc(</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#ab575ed042147daf18e7284af479592cb">TENSOR4D_RO_T</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, SRC_TENSOR_TYPE),</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a7c52ccabcbf0e7f93f430d72976ec174">TENSOR4D_WO_T</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, DST_TENSOR_TYPE),</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#ab575ed042147daf18e7284af479592cb">TENSOR4D_RO_T</a>(wei, WEI_TENSOR_TYPE),</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(dst_multipliers),</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(dst_shifts)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    ,</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(bia)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">// Only the weight tensor dimensions are passed at compile time.</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment">// In case of dynamic tensor support, the following dimensions should be passed as function argument.</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">#define _IWEI_WIDTH WEI_WIDTH</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">#define _IWEI_HEIGHT WEI_HEIGHT</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">#define _IM0_A M0_A        // _IWEI_WIDTH + (M0 - 1) Rows tile A (If M0 != 1, the tiles overlap of 1 element on the X dimension)</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor">#define _IN0_A N0_A        // Cols tile A. It can be either 1 (for DEPTH_MULTIPLIER &gt; 1) or N0 (for DEPTH_MULTIPLIER == 1)</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="preprocessor">#define _IM0_B _IWEI_WIDTH // Rows tile B</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor">#define _IN0_B N0          // Cols tile B</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="preprocessor">#define _IBOUNDARY_CHECK (!((WEI_WIDTH == 1 &amp;&amp; WEI_HEIGHT == 1 &amp;&amp; PAD_LEFT == 0 &amp;&amp; PAD_TOP == 0 &amp;&amp; M0 == 1)))</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> cout = <a class="code" href="tile__helpers_8h.xhtml#ad7108f3c35d805762fb3a8989d0b641f">GET_SPATIAL_IDX</a>(0, N0, PARTIAL_N0); <span class="comment">// OFM</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> xo   = <a class="code" href="tile__helpers_8h.xhtml#ad7108f3c35d805762fb3a8989d0b641f">GET_SPATIAL_IDX</a>(1, M0, 0);          <span class="comment">// WIDTH</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#if defined(BATCHED_EXECUTION)</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> yo   = <a class="code" href="tile__helpers_8h.xhtml#ad7108f3c35d805762fb3a8989d0b641f">GET_SPATIAL_IDX</a>(2, 1, 0) % dst_h; <span class="comment">// HEIGHT</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> bout = <a class="code" href="tile__helpers_8h.xhtml#ad7108f3c35d805762fb3a8989d0b641f">GET_SPATIAL_IDX</a>(2, 1, 0) / dst_h; <span class="comment">// BATCH SIZE IDX</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#else                                                  // defined(BATCHED_EXECUTION)</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> yo   = <a class="code" href="tile__helpers_8h.xhtml#ad7108f3c35d805762fb3a8989d0b641f">GET_SPATIAL_IDX</a>(2, 1, 0); <span class="comment">// HEIGHT</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> bout = 0;                        <span class="comment">// BATCH SIZE IDX</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">#endif                                                 // defined(BATCHED_EXECUTION)</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">int</span> xi = xo * STRIDE_X;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">int</span> yi = yo * STRIDE_Y;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    xi -= PAD_LEFT;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    yi -= PAD_TOP;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(ACC_DATA_TYPE, M0, N0, c);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// Reset accumulators</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, i, 0, 1, M0,</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        c[i].v = 0;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    })</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;#<span class="keywordflow">if</span> <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a> &lt;= 5</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, yk, 0, 1, <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a>,</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;#<span class="keywordflow">else</span>  <span class="comment">// _IWEI_HEIGHT &lt;= 5</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> yk = 0; yk &lt; <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a>; yk++)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;#endif <span class="comment">// _IWEI_HEIGHT &lt;= 5</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                   {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                       <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(SRC_DATA_TYPE, _IM0_A, _IN0_A, a);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                       <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, i, 0, 1, _IM0_A,</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        a[i].v = ZERO_VALUE;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    })</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="comment">// Load tile from the src tensor (TILE A)</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#ae7ee036b8056025786dd409e34712fca">T_LOAD_NHWC_WITH_DILATION</a>(SRC_DATA_TYPE, 1, _IM0_A, _IN0_A, SRC_TENSOR_TYPE, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, bout, yi + yk * DILATION_Y, xi, (cout / DEPTH_MULTIPLIER), src_w, src_h, DILATION_X, 1, _IBOUNDARY_CHECK, a);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(WEI_DATA_TYPE, _IM0_B, _IN0_B, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="comment">// Load tile from the weights tensor (TILE B)</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a9e74d0f555507a56c1bf98a497f1ed6c">T_LOAD</a>(WEI_DATA_TYPE, _IM0_B, _IN0_B, WEI_TENSOR_TYPE, wei, cout, yk * _IM0_B, 1, wei_stride_y, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="comment">// Optimized path for STRIDE_X == 1</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="comment">// If M0 != 1, we can skip the common loads between the two applied kernels on the X (WIDTH) dimension</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, m0, 0, 1, M0,</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, n0, 0, 1, N0,</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor">#if _IWEI_WIDTH &lt;= 16</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#define DOT_DATA_TYPE SRC_DATA_TYPE</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">#define WEI_OFFSET_CORRECTION (CALCULATE_WEIGHTS_OFFSET_CORRECTION(SRC_DATA_TYPE, WEI_DATA_TYPE))</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="comment">// Optimized path for the dot instruction</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(DOT_DATA_TYPE, 1, <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>, x0);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(DOT_DATA_TYPE, 1, <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>, y0);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            ACC_DATA_TYPE offset_a = 0;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            ACC_DATA_TYPE offset_b = 0;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, xk, 0, 1, <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>,</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            {</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                x0[0].s[xk] = a[xk + m0].s[n0];</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                y0[0].s[xk] = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>[xk].s[n0] + (int)WEI_OFFSET_CORRECTION;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            })</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a517e852b82d5acb73cb5735194a606d7">DOT_PRODUCT_INTEGER8</a>(DOT_DATA_TYPE, DOT_DATA_TYPE, ACC_DATA_TYPE, <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>, x0[0].v, y0[0].v, c[m0].s[n0]);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a4da1cc065206c66d66afec5c05d24aa4">REDUCE_INTEGER8</a>(DOT_DATA_TYPE, DOT_DATA_TYPE, ACC_DATA_TYPE, <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>, x0[0].v, offset_a);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a4da1cc065206c66d66afec5c05d24aa4">REDUCE_INTEGER8</a>(DOT_DATA_TYPE, DOT_DATA_TYPE, ACC_DATA_TYPE, <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>, y0[0].v, offset_b);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            c[m0].s[n0] += offset_a * (ACC_DATA_TYPE)(WEI_OFFSET - (ACC_DATA_TYPE)WEI_OFFSET_CORRECTION) + offset_b * (ACC_DATA_TYPE)SRC_OFFSET;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor">#else  // _IWEI_WIDTH &lt;= 16</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, xk, 0, 1, <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>,</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                c[m0].s[n0] += ((ACC_DATA_TYPE)a[xk + m0].s[n0] + (ACC_DATA_TYPE)(SRC_OFFSET)) * ((ACC_DATA_TYPE)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>[xk].s[n0] + (ACC_DATA_TYPE)(WEI_OFFSET));</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            })</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;#endif <span class="comment">// _IWEI_WIDTH &lt;= 16</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        })</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    })</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                   }</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">#if _IWEI_HEIGHT &lt;= 5</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                  )</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;#endif <span class="comment">// _IWEI_HEIGHT &lt;= 5</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;#<span class="keywordflow">if</span> <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a> &lt;= 16</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a002bba6bacd4d85928c207b5c98b0881">T_ADD_CONSTANT</a>(ACC_DATA_TYPE, M0, N0, c, (<a class="code" href="nhwc_2direct__convolution_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a> * <a class="code" href="nhwc_2direct__convolution_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a> * SRC_OFFSET * (ACC_DATA_TYPE)(WEI_OFFSET - (ACC_DATA_TYPE)WEI_OFFSET_CORRECTION)), c);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor">#endif // _IWEI_WIDTH &lt;= 16</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(BIA_DATA_TYPE, 1, N0, bias0);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="comment">// Load bias</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a9e74d0f555507a56c1bf98a497f1ed6c">T_LOAD</a>(BIA_DATA_TYPE, 1, N0, BUFFER, bia, cout, 0, 0, 0, bias0);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="comment">// c = c + bias[broadcasted]</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#abf7882e0ece57c1f08b93465e5b62d40">T_ELTWISE_BROADCAST_ADD_X</a>(ACC_DATA_TYPE, M0, N0, c, bias0, c);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">#endif // HAS_BIAS</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="dwc__native__quantized__nhwc_8cl.xhtml#a73afffa588543a7fbcb272cdb6480072">T_LOAD_MULTIPLIERS_SHIFT</a>(QUANTIZATION_TYPE);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="comment">// Quantize the tile</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(DST_DATA_TYPE, M0, N0, cq);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a6f18c9f4dce3e2975d093c7cff9e6106">T_QUANTIZE8</a>(ACC_DATA_TYPE, DST_DATA_TYPE, QUANTIZATION_TYPE, M0, N0, DST_OFFSET, DST_SHIFT, DST_MULTIPLIER, c, multipliers, shifts, cq);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="comment">// Perform activation</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a376707e06e864431a6286c6e10d26d4b">T_ACTIVATION_QUANTIZED</a>(DST_DATA_TYPE, M0, N0, ACTIVATION_TYPE, DST_OFFSET, A_VAL, B_VAL, cq, cq);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordtype">bool</span> x_cond = PARTIAL_N0 != 0 &amp;&amp; get_global_id(0) == 0;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordflow">if</span>(x_cond)</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, m0, 0, 1, M0,</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        {</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keywordtype">int</span> xi_out = min(xo + M0 - 1 - m0, (<span class="keywordtype">int</span>)(dst_w) - 1);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2afdc4c751404e64315ecd22021abe9c">VSTORE_PARTIAL</a>(N0, PARTIAL_N0)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            (cq[M0 - 1 - m0].v, 0, (__global DST_DATA_TYPE *)(dst_ptr + dst_offset_first_element_in_bytes + (uint)cout * <span class="keyword">sizeof</span>(DST_DATA_TYPE) + (uint)xi_out * dst_stride_y + (uint)yo * dst_stride_z + (uint)bout * dst_stride_w));</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        })</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    {</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, m0, 0, 1, M0,</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordtype">int</span> xi_out = min(xo + M0 - 1 - m0, (<span class="keywordtype">int</span>)(dst_w) - 1);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#acb282042d1edeeaa3cc979a206f78b54">VSTORE</a>(N0)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            (cq[M0 - 1 - m0].v, 0, (__global DST_DATA_TYPE *)(dst_ptr + dst_offset_first_element_in_bytes + (uint)cout * <span class="keyword">sizeof</span>(DST_DATA_TYPE) + (uint)xi_out * dst_stride_y + (uint)yo * dst_stride_z + (uint)bout * dst_stride_w));</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        })</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor">#endif // defined(WEI_WIDTH) &amp;&amp; defined(WEI_HEIGHT) &amp;&amp; defined(N0) &amp;&amp; defined(M0) &amp;&amp; defined(DILATION_X) &amp;&amp; defined(DILATION_Y) &amp;&amp; defined(STRIDE_X) &amp;&amp; defined(STRIDE_Y) &amp;&amp; defined(PAD_LEFT) &amp;&amp; defined(PAD_TOP)</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">// *INDENT-ON*</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">// clang-format on</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="atile__helpers_8h_xhtml_a9e74d0f555507a56c1bf98a497f1ed6c"><div class="ttname"><a href="tile__helpers_8h.xhtml#a9e74d0f555507a56c1bf98a497f1ed6c">T_LOAD</a></div><div class="ttdeci">#define T_LOAD(DATA_TYPE, HEIGHT, WIDTH, TENSOR_TYPE, TENSOR, X, Y, YI_MULTIPLIER, STRIDE_Y, dst)</div><div class="ttdoc">Load a tile from global memory (tensor)</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00534">tile_helpers.h:534</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_ad7108f3c35d805762fb3a8989d0b641f"><div class="ttname"><a href="tile__helpers_8h.xhtml#ad7108f3c35d805762fb3a8989d0b641f">GET_SPATIAL_IDX</a></div><div class="ttdeci">#define GET_SPATIAL_IDX(IDX, N0, PARTIAL_N0)</div><div class="ttdoc">Get the get_global_id with partial N0.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00352">tile_helpers.h:352</a></div></div>
<div class="ttc" id="anhwc_2direct__convolution_8cl_xhtml_ac4c043989c5e1583cb4b7dd56c87d197"><div class="ttname"><a href="nhwc_2direct__convolution_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a></div><div class="ttdeci">#define _IWEI_WIDTH</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_abf7882e0ece57c1f08b93465e5b62d40"><div class="ttname"><a href="tile__helpers_8h.xhtml#abf7882e0ece57c1f08b93465e5b62d40">T_ELTWISE_BROADCAST_ADD_X</a></div><div class="ttdeci">#define T_ELTWISE_BROADCAST_ADD_X(DST_DATA_TYPE, M0, N0, lhs, rhs, dst)</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l01228">tile_helpers.h:1228</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_ae7ee036b8056025786dd409e34712fca"><div class="ttname"><a href="tile__helpers_8h.xhtml#ae7ee036b8056025786dd409e34712fca">T_LOAD_NHWC_WITH_DILATION</a></div><div class="ttdeci">#define T_LOAD_NHWC_WITH_DILATION(DATA_TYPE, TILE_HEIGHT, TILE_WIDTH, TILE_CHANNELS, TENSOR_TYPE, TENSOR, B, Y, X, C, TENSOR_WIDTH, TENSOR_HEIGHT, DILATION_X, DILATION_Y, BOUNDARY_CHECK, dst)</div><div class="ttdoc">Load a tile from global memory (tensor) when the tensor is stored using a NHWC layout with dilation f...</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00748">tile_helpers.h:748</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_ab575ed042147daf18e7284af479592cb"><div class="ttname"><a href="tile__helpers_8h.xhtml#ab575ed042147daf18e7284af479592cb">TENSOR4D_RO_T</a></div><div class="ttdeci">#define TENSOR4D_RO_T(name, type)</div><div class="ttdoc">Read-Only (RO) tensor 4D.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00154">tile_helpers.h:154</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a376707e06e864431a6286c6e10d26d4b"><div class="ttname"><a href="tile__helpers_8h.xhtml#a376707e06e864431a6286c6e10d26d4b">T_ACTIVATION_QUANTIZED</a></div><div class="ttdeci">#define T_ACTIVATION_QUANTIZED(DATA_TYPE, M0, N0, ACTIVATION_TYPE, ZERO_POINT, A_VAL, B_VAL, src, dst)</div><div class="ttdoc">Element-wise activation for quantized types.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l01182">tile_helpers.h:1182</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_acb282042d1edeeaa3cc979a206f78b54"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#acb282042d1edeeaa3cc979a206f78b54">VSTORE</a></div><div class="ttdeci">#define VSTORE(size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00500">helpers.h:500</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a40a6eb9f2a7712f08d6bb8ff6c9e6ca7"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a></div><div class="ttdeci">#define VECTOR_DECLARATION(name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00845">helpers.h:845</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a517e852b82d5acb73cb5735194a606d7"><div class="ttname"><a href="tile__helpers_8h.xhtml#a517e852b82d5acb73cb5735194a606d7">DOT_PRODUCT_INTEGER8</a></div><div class="ttdeci">#define DOT_PRODUCT_INTEGER8(A_DATA_TYPE, B_DATA_TYPE, C_DATA_TYPE, K0, a, b, c)</div><div class="ttdoc">Dot product integet 8bit function.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00366">tile_helpers.h:366</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_af5e0dc11a939b317bb77a58beb291fe7"><div class="ttname"><a href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a></div><div class="ttdeci">#define LOOP_UNROLLING(type, idx, start, step, num, macro)</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00340">tile_helpers.h:340</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a002bba6bacd4d85928c207b5c98b0881"><div class="ttname"><a href="tile__helpers_8h.xhtml#a002bba6bacd4d85928c207b5c98b0881">T_ADD_CONSTANT</a></div><div class="ttdeci">#define T_ADD_CONSTANT(DATA_TYPE, M0, N0, lhs, rhs_constant, dst)</div><div class="ttdoc">Element-wise addition with a constant value.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l01220">tile_helpers.h:1220</a></div></div>
<div class="ttc" id="anhwc_2direct__convolution_8cl_xhtml_a654a9a18953d08fc64b2526a039bee7b"><div class="ttname"><a href="nhwc_2direct__convolution_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a></div><div class="ttdeci">#define _IWEI_HEIGHT</div></div>
<div class="ttc" id="atile__helpers_8h_xhtml"><div class="ttname"><a href="tile__helpers_8h.xhtml">tile_helpers.h</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a7c52ccabcbf0e7f93f430d72976ec174"><div class="ttname"><a href="tile__helpers_8h.xhtml#a7c52ccabcbf0e7f93f430d72976ec174">TENSOR4D_WO_T</a></div><div class="ttdeci">#define TENSOR4D_WO_T(name, type)</div><div class="ttdoc">Write-Only (WO) tensor 4D.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00169">tile_helpers.h:169</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a6f18c9f4dce3e2975d093c7cff9e6106"><div class="ttname"><a href="tile__helpers_8h.xhtml#a6f18c9f4dce3e2975d093c7cff9e6106">T_QUANTIZE8</a></div><div class="ttdeci">#define T_QUANTIZE8(SRC_DATA_TYPE, DST_DATA_TYPE, QUANTIZATION_TYPE, M0, N0, DST_OFFSET, DST_SHIFT, DST_MULTIPLIER, src, dst_multipliers, dst_shifts, dst)</div><div class="ttdoc">8-bit quantization with fixed-point scale</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00966">tile_helpers.h:966</a></div></div>
<div class="ttc" id="adwc__native__quantized__nhwc_8cl_xhtml_a73afffa588543a7fbcb272cdb6480072"><div class="ttname"><a href="dwc__native__quantized__nhwc_8cl.xhtml#a73afffa588543a7fbcb272cdb6480072">T_LOAD_MULTIPLIERS_SHIFT</a></div><div class="ttdeci">#define T_LOAD_MULTIPLIERS_SHIFT(QUANTIZATION_TYPE)</div><div class="ttdef"><b>Definition:</b> <a href="dwc__native__quantized__nhwc_8cl_source.xhtml#l00046">dwc_native_quantized_nhwc.cl:46</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a2afdc4c751404e64315ecd22021abe9c"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2afdc4c751404e64315ecd22021abe9c">VSTORE_PARTIAL</a></div><div class="ttdeci">#define VSTORE_PARTIAL(size, store_size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00533">helpers.h:533</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a1b7124ed4713f1c104761e8deba36004"><div class="ttname"><a href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a></div><div class="ttdeci">#define TILE(DATA_TYPE, H, W, BASENAME)</div><div class="ttdoc">Tile object A tile object is a 2D memory block and can be accessed using the following syntax:</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00074">tile_helpers.h:74</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a4da1cc065206c66d66afec5c05d24aa4"><div class="ttname"><a href="tile__helpers_8h.xhtml#a4da1cc065206c66d66afec5c05d24aa4">REDUCE_INTEGER8</a></div><div class="ttdeci">#define REDUCE_INTEGER8(A_DATA_TYPE, B_DATA_TYPE, C_DATA_TYPE, K0, a, c)</div><div class="ttdoc">Dot product integet 8bit function.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00478">tile_helpers.h:478</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="dir_ea393a19e66e9555cdc004c345ac8654.xhtml">nhwc</a></li><li class="navelem"><a class="el" href="dwc__native__quantized__nhwc_8cl.xhtml">dwc_native_quantized_nhwc.cl</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:46 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
