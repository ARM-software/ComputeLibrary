<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/PixelValue.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_pixel_value_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">PixelValue.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_pixel_value_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_PIXELVALUE_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_PIXELVALUE_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_quantization_info_8h.xhtml">arm_compute/core/QuantizationInfo.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">/** Class describing the value of a pixel for any image format. */</span></div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml">   35</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">    /** Default constructor: value initialized to 0 */</span></div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#adf558c994f437a0a1cf2ed4400d3a475">   39</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#adf558c994f437a0a1cf2ed4400d3a475">PixelValue</a>() noexcept : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>{int64_t(0)}</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">    /** Initialize the union with a pixel value of chosen datatype</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">     * @param[in] v        value.</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">     * @param[in] datatype DataType that @p v have to be stored</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">     * @param[in] qinfo    (Optional) QuantizationInfo to apply in case of quantized data types to @p v</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a0d5437d02dbe5a6e299210b286c49e1c">   48</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a0d5437d02dbe5a6e299210b286c49e1c">PixelValue</a>(<span class="keywordtype">double</span> v, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> datatype, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad85d7becf0c6e3cffbc255489808e219">qinfo</a> = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>()) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">switch</span> (datatype)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>:</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u8 = <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">DataType::S8</a>:</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s8 = <span class="keyword">static_cast&lt;</span>int8_t<span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u8 = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(v), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad85d7becf0c6e3cffbc255489808e219">qinfo</a>);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>:</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s8 = <a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(v), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad85d7becf0c6e3cffbc255489808e219">qinfo</a>);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c">DataType::QSYMM8</a>:</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s8 = <a class="code" href="namespacearm__compute.xhtml#aea6dad9b7cd5d5028a50e2aceafa7d1d">quantize_qsymm8</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(v), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad85d7becf0c6e3cffbc255489808e219">qinfo</a>);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aef9ef3ebca4d2b64b6ec83808bafa5f2">DataType::U16</a>:</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u16 = <span class="keyword">static_cast&lt;</span>uint16_t<span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>:</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s16 = <span class="keyword">static_cast&lt;</span>int16_t<span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3b989c6b5398b3b9538ad103a324205e">DataType::QASYMM16</a>:</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u16 = <a class="code" href="namespacearm__compute.xhtml#a3fcdebf0b2654721ecdfa39b6bbd542d">quantize_qasymm16</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(v), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad85d7becf0c6e3cffbc255489808e219">qinfo</a>);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>:</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s16 = <a class="code" href="namespacearm__compute.xhtml#abd9a9e4bfba3b2e6a35099618122d38e">quantize_qsymm16</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(v), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad85d7becf0c6e3cffbc255489808e219">qinfo</a>);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>:</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u32 = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>:</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s32 = <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a31d65cccd6593e4101db93fb878abcaa">DataType::U64</a>:</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u64 = <span class="keyword">static_cast&lt;</span>uint64_t<span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a115dca124dc6423c7a400b8a8a0270cc">DataType::S64</a>:</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s64 = <span class="keyword">static_cast&lt;</span>int64_t<span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab">DataType::BFLOAT16</a>:</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.bf16 = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1bfloat16.xhtml">bfloat16</a><span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.f16 = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a><span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.f32 = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(v);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a1ad5f6f3069070ec4cbbdc94d5e61e0e">DataType::F64</a>:</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.f64 = v;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    /** Initialize the union with a S8 pixel value</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @param[in] v S8 value.</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a67ce5259327ce05cbdb90e2f4073bc71">  110</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a67ce5259327ce05cbdb90e2f4073bc71">PixelValue</a>(int8_t v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s8 = v;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">    /** Initialize the union with a U8 pixel value</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     * @param[in] v U8 value.</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#aeee8c50430251df2909cb16bd435a0b9">  118</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#aeee8c50430251df2909cb16bd435a0b9">PixelValue</a>(uint8_t v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u8 = v;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">    /** Initialize the union with a U16 pixel value</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     * @param[in] v U16 value.</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a013dcabbedc5e470addaefe209c1d970">  126</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a013dcabbedc5e470addaefe209c1d970">PixelValue</a>(uint16_t v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u16 = v;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">    /** Initialize the union with a S16 pixel value</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     * @param[in] v S16 value.</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a759f09965687c6aea87dc4df7dd6f6b8">  134</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a759f09965687c6aea87dc4df7dd6f6b8">PixelValue</a>(int16_t v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s16 = v;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">    /** Initialize the union with a U32 pixel value</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     * @param[in] v U32 value.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#ac04b0e04c1556f01d22c34af2afa564f">  142</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ac04b0e04c1556f01d22c34af2afa564f">PixelValue</a>(uint32_t v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u32 = v;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">    /** Initialize the union with a S32 pixel value</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     * @param[in] v S32 value.</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a9deb64fff1a3515aa4bcd6f21dd3c4c0">  150</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a9deb64fff1a3515aa4bcd6f21dd3c4c0">PixelValue</a>(int32_t v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s32 = v;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">    /** Initialize the union with a U64 pixel value</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">     * @param[in] v U64 value.</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#ac172f9f54700f67f512eb0ab043d3c25">  159</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ac172f9f54700f67f512eb0ab043d3c25">PixelValue</a>(uint64_t v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u64 = v;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">    /** Initialize the union with a S64 pixel value</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">     * @param[in] v S64 value.</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a06640bfee0fe6a6d4d8026b93e5a51b4">  167</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a06640bfee0fe6a6d4d8026b93e5a51b4">PixelValue</a>(int64_t v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s64 = v;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">    /** Initialize the union with a BFLOAT16 pixel value</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">     * @param[in] v F16 value.</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a714b0372e57bb02658e0b05186336bbd">  175</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a714b0372e57bb02658e0b05186336bbd">PixelValue</a>(<a class="code" href="classarm__compute_1_1bfloat16.xhtml">bfloat16</a> v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.bf16 = v;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">    /** Initialize the union with a F16 pixel value</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">     * @param[in] v F16 value.</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a3bc8ecbe2fec0390ab16c094a5b0f476">  183</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3bc8ecbe2fec0390ab16c094a5b0f476">PixelValue</a>(<a class="code" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a> v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.f16 = v;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">    /** Initialize the union with a F32 pixel value</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">     * @param[in] v F32 value.</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a90103a4ef4ab615848bb3afce5b97be1">  191</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a90103a4ef4ab615848bb3afce5b97be1">PixelValue</a>(<span class="keywordtype">float</span> v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.f32 = v;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">    /** Initialize the union with a F64 pixel value</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">     * @param[in] v F64 value.</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a4adb7aa7ddf961dc4344cf857fecc62c">  199</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a4adb7aa7ddf961dc4344cf857fecc62c">PixelValue</a>(<span class="keywordtype">double</span> v) : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>()</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.f64 = v;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">    /** Union which describes the value of a pixel for any image format.</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">     * Use the field corresponding to the image format</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">union</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div>
<div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a91ee3b6e2425e78feef03fb5c69d63e5">  208</a></span>&#160;        uint64_t <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a91ee3b6e2425e78feef03fb5c69d63e5">u64</a>;     <span class="comment">/**&lt; Single channel U64 */</span></div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#ae66ed2ec20c2115ff9970c73168fc0df">  209</a></span>&#160;        int64_t  <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ae66ed2ec20c2115ff9970c73168fc0df">s64</a>;     <span class="comment">/**&lt; Single channel S64 */</span></div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#afe42472c55e7e5df52b8aaca94d0fa7e">  210</a></span>&#160;        uint8_t  <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#afe42472c55e7e5df52b8aaca94d0fa7e">rgb</a>[3];  <span class="comment">/**&lt; 3 channels: RGB888 */</span></div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a9d55760e9791473bc0c71da0fc648ee0">  211</a></span>&#160;        uint8_t  <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a9d55760e9791473bc0c71da0fc648ee0">yuv</a>[3];  <span class="comment">/**&lt; 3 channels: Any YUV format */</span></div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#ac24a28b797176d8a1e73d27f64c058d2">  212</a></span>&#160;        uint8_t  <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ac24a28b797176d8a1e73d27f64c058d2">rgbx</a>[4]; <span class="comment">/**&lt; 4 channels: RGBX8888 */</span></div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a4a511caf994d6ffbbd9180293c53fd38">  213</a></span>&#160;        <span class="keywordtype">double</span>   <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a4a511caf994d6ffbbd9180293c53fd38">f64</a>;     <span class="comment">/**&lt; Single channel double */</span></div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a7d886905c667c4e8e91251b6a3a98f39">  214</a></span>&#160;        <span class="keywordtype">float</span>    <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a7d886905c667c4e8e91251b6a3a98f39">f32</a>;     <span class="comment">/**&lt; Single channel float 32 */</span></div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a4222b84bae684380152759cada8601c5">  215</a></span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a>     <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a4222b84bae684380152759cada8601c5">f16</a>;     <span class="comment">/**&lt; Single channel F16 */</span></div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a1f7f3c4437c80758d7528690ee4a8e6c">  216</a></span>&#160;        <a class="code" href="classarm__compute_1_1bfloat16.xhtml">bfloat16</a> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a1f7f3c4437c80758d7528690ee4a8e6c">bf16</a>;    <span class="comment">/**&lt; Single channel brain floating-point number */</span></div>
<div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a0084c9e8c5778849f41d9de5df9c0f85">  217</a></span>&#160;        uint8_t  <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a0084c9e8c5778849f41d9de5df9c0f85">u8</a>;      <span class="comment">/**&lt; Single channel U8 */</span></div>
<div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#acf0eb502f72832af26e62c69457bd1b6">  218</a></span>&#160;        int8_t   <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#acf0eb502f72832af26e62c69457bd1b6">s8</a>;      <span class="comment">/**&lt; Single channel S8 */</span></div>
<div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a1234f83efa812e259523c91799614a3c">  219</a></span>&#160;        uint16_t <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a1234f83efa812e259523c91799614a3c">u16</a>;     <span class="comment">/**&lt; Single channel U16 */</span></div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#adbbcd82ccbf61d179ba87ee5fe1bb7d8">  220</a></span>&#160;        int16_t  <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#adbbcd82ccbf61d179ba87ee5fe1bb7d8">s16</a>;     <span class="comment">/**&lt; Single channel S16 */</span></div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#ae65af0c4a8ee050043fe4b575f0a26a0">  221</a></span>&#160;        uint32_t <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ae65af0c4a8ee050043fe4b575f0a26a0">u32</a>;     <span class="comment">/**&lt; Single channel U32 */</span></div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#acd1420e45b5486795a46cf1a5943a0ff">  222</a></span>&#160;        int32_t  <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#acd1420e45b5486795a46cf1a5943a0ff">s32</a>;     <span class="comment">/**&lt; Single channel S32 */</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    } <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>;<span class="comment"></span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">    /** Interpret the pixel value as a U8</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a66c4c1f8b1962d71162d7ac0b3ef65bc">  228</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a66c4c1f8b1962d71162d7ac0b3ef65bc">get</a>(uint8_t &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u8;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">    /** Interpret the pixel value as a S8</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a5a167d63f02bc4988e688f34a32b599b">  236</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a5a167d63f02bc4988e688f34a32b599b">get</a>(int8_t &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s8;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">    /** Interpret the pixel value as a U16</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a2fc59f298e3c9452086f525479458400">  244</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a2fc59f298e3c9452086f525479458400">get</a>(uint16_t &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u16;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">    /** Interpret the pixel value as a S16</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#adc9730a5794778778c9290d824169856">  252</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#adc9730a5794778778c9290d824169856">get</a>(int16_t &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s16;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">    /** Interpret the pixel value as a U32</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a951fd574457b3c1d973bab27852497bf">  260</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a951fd574457b3c1d973bab27852497bf">get</a>(uint32_t &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u32;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">    /** Interpret the pixel value as a S32</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00268"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#ab70f4f8cb3cdca635ea5b663efdf58e4">  268</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab70f4f8cb3cdca635ea5b663efdf58e4">get</a>(int32_t &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s32;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">    /** Interpret the pixel value as a U64</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#aa6891658c7f836b24e81a909e262a0b5">  276</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#aa6891658c7f836b24e81a909e262a0b5">get</a>(uint64_t &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.u64;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">    /** Interpret the pixel value as a S64</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00284"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#ac9e6a107a838475befb127d19810819b">  284</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ac9e6a107a838475befb127d19810819b">get</a>(int64_t &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.s64;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">    /** Interpret the pixel value as a BFLOAT16</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00292"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#acf8efc8341cbf03f2b0956778131e386">  292</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#acf8efc8341cbf03f2b0956778131e386">get</a>(<a class="code" href="classarm__compute_1_1bfloat16.xhtml">bfloat16</a> &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.bf16;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">    /** Interpret the pixel value as a F16</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a094ed5eee19e2d210859e3e0a2c2ec77">  300</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a094ed5eee19e2d210859e3e0a2c2ec77">get</a>(<a class="code" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a> &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.f16;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">    /** Interpret the pixel value as a F32</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a43fd30dcf0471d3194662a798cab5b07">  308</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a43fd30dcf0471d3194662a798cab5b07">get</a>(<span class="keywordtype">float</span> &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.f32;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">    /** Interpret the pixel value as a double</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">     * @param[out] v Returned value</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#a62291388fe2e02f95e0934f08d5a7064">  316</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a62291388fe2e02f95e0934f08d5a7064">get</a>(<span class="keywordtype">double</span> &amp;v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">value</a>.f64;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">    /** Get the pixel value</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">     * @return Pixel value</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00325"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pixel_value.xhtml#afe5b3274209fa0f482c22a244de2773d">  325</a></span>&#160;    T <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#afe5b3274209fa0f482c22a244de2773d">get</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        T val;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#afe5b3274209fa0f482c22a244de2773d">get</a>(val);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keywordflow">return</span> val;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;};</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_PIXELVALUE_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a3b989c6b5398b3b9538ad103a324205e"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3b989c6b5398b3b9538ad103a324205e">arm_compute::DataType::QASYMM16</a></div><div class="ttdeci">@ QASYMM16</div><div class="ttdoc">quantized, asymmetric fixed-point 16-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a67ce5259327ce05cbdb90e2f4073bc71"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a67ce5259327ce05cbdb90e2f4073bc71">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(int8_t v)</div><div class="ttdoc">Initialize the union with a S8 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00110">PixelValue.h:110</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a31d65cccd6593e4101db93fb878abcaa"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a31d65cccd6593e4101db93fb878abcaa">arm_compute::DataType::U64</a></div><div class="ttdeci">@ U64</div><div class="ttdoc">unsigned 64-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a06640bfee0fe6a6d4d8026b93e5a51b4"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a06640bfee0fe6a6d4d8026b93e5a51b4">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(int64_t v)</div><div class="ttdoc">Initialize the union with a S64 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00167">PixelValue.h:167</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_aeee8c50430251df2909cb16bd435a0b9"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#aeee8c50430251df2909cb16bd435a0b9">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(uint8_t v)</div><div class="ttdoc">Initialize the union with a U8 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00118">PixelValue.h:118</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_ac24a28b797176d8a1e73d27f64c058d2"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#ac24a28b797176d8a1e73d27f64c058d2">arm_compute::PixelValue::rgbx</a></div><div class="ttdeci">uint8_t rgbx[4]</div><div class="ttdoc">4 channels: RGBX8888</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00212">PixelValue.h:212</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a094ed5eee19e2d210859e3e0a2c2ec77"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a094ed5eee19e2d210859e3e0a2c2ec77">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(half &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a F16.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00300">PixelValue.h:300</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab">arm_compute::DataType::BFLOAT16</a></div><div class="ttdeci">@ BFLOAT16</div><div class="ttdoc">16-bit brain floating-point number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a951fd574457b3c1d973bab27852497bf"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a951fd574457b3c1d973bab27852497bf">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(uint32_t &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a U32.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00260">PixelValue.h:260</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00067">QuantizationInfo.h:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml">arm_compute::PixelValue</a></div><div class="ttdoc">Class describing the value of a pixel for any image format.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00035">PixelValue.h:35</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a1ad5f6f3069070ec4cbbdc94d5e61e0e"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a1ad5f6f3069070ec4cbbdc94d5e61e0e">arm_compute::DataType::F64</a></div><div class="ttdeci">@ F64</div><div class="ttdoc">64-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_abd9a9e4bfba3b2e6a35099618122d38e"><div class="ttname"><a href="namespacearm__compute.xhtml#abd9a9e4bfba3b2e6a35099618122d38e">arm_compute::quantize_qsymm16</a></div><div class="ttdeci">int16_t quantize_qsymm16(float value, const UniformQuantizationInfo &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given a 16-bit symmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00441">QuantizationInfo.h:441</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_ae66ed2ec20c2115ff9970c73168fc0df"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#ae66ed2ec20c2115ff9970c73168fc0df">arm_compute::PixelValue::s64</a></div><div class="ttdeci">int64_t s64</div><div class="ttdoc">Single channel S64.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00209">PixelValue.h:209</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a66c4c1f8b1962d71162d7ac0b3ef65bc"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a66c4c1f8b1962d71162d7ac0b3ef65bc">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(uint8_t &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a U8.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00228">PixelValue.h:228</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aef9ef3ebca4d2b64b6ec83808bafa5f2"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aef9ef3ebca4d2b64b6ec83808bafa5f2">arm_compute::DataType::U16</a></div><div class="ttdeci">@ U16</div><div class="ttdoc">unsigned 16-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a62291388fe2e02f95e0934f08d5a7064"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a62291388fe2e02f95e0934f08d5a7064">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(double &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a double.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00316">PixelValue.h:316</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aea6dad9b7cd5d5028a50e2aceafa7d1d"><div class="ttname"><a href="namespacearm__compute.xhtml#aea6dad9b7cd5d5028a50e2aceafa7d1d">arm_compute::quantize_qsymm8</a></div><div class="ttdeci">int8_t quantize_qsymm8(float value, const QuantizationInfo &amp;qinfo)</div><div class="ttdoc">Quantize a value given a 8-bit symmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00323">QuantizationInfo.h:323</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_afe42472c55e7e5df52b8aaca94d0fa7e"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#afe42472c55e7e5df52b8aaca94d0fa7e">arm_compute::PixelValue::rgb</a></div><div class="ttdeci">uint8_t rgb[3]</div><div class="ttdoc">3 channels: RGB888</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00210">PixelValue.h:210</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c">arm_compute::DataType::QSYMM8</a></div><div class="ttdeci">@ QSYMM8</div><div class="ttdoc">quantized, symmetric fixed-point 8-bit number</div></div>
<div class="ttc" id="aarm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab8cef8b31b552b532a14ab8815e06285"><div class="ttname"><a href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">arm_compute::quantize_qasymm8</a></div><div class="ttdeci">uint8_t quantize_qasymm8(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given an unsigned 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00295">QuantizationInfo.h:295</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a0084c9e8c5778849f41d9de5df9c0f85"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a0084c9e8c5778849f41d9de5df9c0f85">arm_compute::PixelValue::u8</a></div><div class="ttdeci">uint8_t u8</div><div class="ttdoc">Single channel U8.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00217">PixelValue.h:217</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a1234f83efa812e259523c91799614a3c"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a1234f83efa812e259523c91799614a3c">arm_compute::PixelValue::u16</a></div><div class="ttdeci">uint16_t u16</div><div class="ttdoc">Single channel U16.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00219">PixelValue.h:219</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a4adb7aa7ddf961dc4344cf857fecc62c"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a4adb7aa7ddf961dc4344cf857fecc62c">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(double v)</div><div class="ttdoc">Initialize the union with a F64 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00199">PixelValue.h:199</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_ab70f4f8cb3cdca635ea5b663efdf58e4"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#ab70f4f8cb3cdca635ea5b663efdf58e4">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(int32_t &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a S32.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00268">PixelValue.h:268</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a5a167d63f02bc4988e688f34a32b599b"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a5a167d63f02bc4988e688f34a32b599b">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(int8_t &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a S8.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00236">PixelValue.h:236</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1bfloat16_xhtml"><div class="ttname"><a href="classarm__compute_1_1bfloat16.xhtml">arm_compute::bfloat16</a></div><div class="ttdoc">Brain floating point representation class.</div><div class="ttdef"><b>Definition:</b> <a href="_bfloat16_8h_source.xhtml#l00080">Bfloat16.h:80</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">arm_compute::DataType::S8</a></div><div class="ttdeci">@ S8</div><div class="ttdoc">signed 8-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">arm_compute::DataType::QSYMM16</a></div><div class="ttdeci">@ QSYMM16</div><div class="ttdoc">quantized, symmetric fixed-point 16-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a3bc8ecbe2fec0390ab16c094a5b0f476"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3bc8ecbe2fec0390ab16c094a5b0f476">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(half v)</div><div class="ttdoc">Initialize the union with a F16 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00183">PixelValue.h:183</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a4a511caf994d6ffbbd9180293c53fd38"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a4a511caf994d6ffbbd9180293c53fd38">arm_compute::PixelValue::f64</a></div><div class="ttdeci">double f64</div><div class="ttdoc">Single channel double.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00213">PixelValue.h:213</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_adc9730a5794778778c9290d824169856"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#adc9730a5794778778c9290d824169856">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(int16_t &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a S16.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00252">PixelValue.h:252</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a4222b84bae684380152759cada8601c5"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a4222b84bae684380152759cada8601c5">arm_compute::PixelValue::f16</a></div><div class="ttdeci">half f16</div><div class="ttdoc">Single channel F16.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00215">PixelValue.h:215</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a73e2825fd61d349c5ca2f5313e3c8ea1"><div class="ttname"><a href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">arm_compute::half</a></div><div class="ttdeci">half_float::half half</div><div class="ttdoc">16-bit floating point type</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00036">CoreTypes.h:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_aa6891658c7f836b24e81a909e262a0b5"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#aa6891658c7f836b24e81a909e262a0b5">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(uint64_t &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a U64.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00276">PixelValue.h:276</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_adf558c994f437a0a1cf2ed4400d3a475"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#adf558c994f437a0a1cf2ed4400d3a475">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue() noexcept</div><div class="ttdoc">Default constructor: value initialized to 0.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00039">PixelValue.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">arm_compute::DataType::U32</a></div><div class="ttdeci">@ U32</div><div class="ttdoc">unsigned 32-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a464ea9027ae01e64014040d69302800f"><div class="ttname"><a href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">arm_compute::quantize_qasymm8_signed</a></div><div class="ttdeci">int8_t quantize_qasymm8_signed(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given a signed 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00309">QuantizationInfo.h:309</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a43fd30dcf0471d3194662a798cab5b07"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a43fd30dcf0471d3194662a798cab5b07">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(float &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a F32.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00308">PixelValue.h:308</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::DataType::U8</a></div><div class="ttdeci">@ U8</div><div class="ttdoc">unsigned 8-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_ac9e6a107a838475befb127d19810819b"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#ac9e6a107a838475befb127d19810819b">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(int64_t &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a S64.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00284">PixelValue.h:284</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">arm_compute::DataType::S16</a></div><div class="ttdeci">@ S16</div><div class="ttdoc">signed 16-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdeci">@ QASYMM8_SIGNED</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_acf8efc8341cbf03f2b0956778131e386"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#acf8efc8341cbf03f2b0956778131e386">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(bfloat16 &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a BFLOAT16.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00292">PixelValue.h:292</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a1f7f3c4437c80758d7528690ee4a8e6c"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a1f7f3c4437c80758d7528690ee4a8e6c">arm_compute::PixelValue::bf16</a></div><div class="ttdeci">bfloat16 bf16</div><div class="ttdoc">Single channel brain floating-point number.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00216">PixelValue.h:216</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_acf0eb502f72832af26e62c69457bd1b6"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#acf0eb502f72832af26e62c69457bd1b6">arm_compute::PixelValue::s8</a></div><div class="ttdeci">int8_t s8</div><div class="ttdoc">Single channel S8.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00218">PixelValue.h:218</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a714b0372e57bb02658e0b05186336bbd"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a714b0372e57bb02658e0b05186336bbd">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(bfloat16 v)</div><div class="ttdoc">Initialize the union with a BFLOAT16 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00175">PixelValue.h:175</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_afe5b3274209fa0f482c22a244de2773d"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#afe5b3274209fa0f482c22a244de2773d">arm_compute::PixelValue::get</a></div><div class="ttdeci">T get() const</div><div class="ttdoc">Get the pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00325">PixelValue.h:325</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_ac172f9f54700f67f512eb0ab043d3c25"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#ac172f9f54700f67f512eb0ab043d3c25">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(uint64_t v)</div><div class="ttdoc">Initialize the union with a U64 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00159">PixelValue.h:159</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a013dcabbedc5e470addaefe209c1d970"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a013dcabbedc5e470addaefe209c1d970">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(uint16_t v)</div><div class="ttdoc">Initialize the union with a U16 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00126">PixelValue.h:126</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a91ee3b6e2425e78feef03fb5c69d63e5"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a91ee3b6e2425e78feef03fb5c69d63e5">arm_compute::PixelValue::u64</a></div><div class="ttdeci">uint64_t u64</div><div class="ttdoc">Single channel U64.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00208">PixelValue.h:208</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a115dca124dc6423c7a400b8a8a0270cc"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a115dca124dc6423c7a400b8a8a0270cc">arm_compute::DataType::S64</a></div><div class="ttdeci">@ S64</div><div class="ttdoc">signed 64-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_adbbcd82ccbf61d179ba87ee5fe1bb7d8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#adbbcd82ccbf61d179ba87ee5fe1bb7d8">arm_compute::PixelValue::s16</a></div><div class="ttdeci">int16_t s16</div><div class="ttdoc">Single channel S16.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00220">PixelValue.h:220</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a7d886905c667c4e8e91251b6a3a98f39"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a7d886905c667c4e8e91251b6a3a98f39">arm_compute::PixelValue::f32</a></div><div class="ttdeci">float f32</div><div class="ttdoc">Single channel float 32.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00214">PixelValue.h:214</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a2fc59f298e3c9452086f525479458400"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a2fc59f298e3c9452086f525479458400">arm_compute::PixelValue::get</a></div><div class="ttdeci">void get(uint16_t &amp;v) const</div><div class="ttdoc">Interpret the pixel value as a U16.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00244">PixelValue.h:244</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_ac04b0e04c1556f01d22c34af2afa564f"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#ac04b0e04c1556f01d22c34af2afa564f">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(uint32_t v)</div><div class="ttdoc">Initialize the union with a U32 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00142">PixelValue.h:142</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::DataType::S32</a></div><div class="ttdeci">@ S32</div><div class="ttdoc">signed 32-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_ab3a43a7e000dbf31af647ccded8e55cf"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#ab3a43a7e000dbf31af647ccded8e55cf">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a3fcdebf0b2654721ecdfa39b6bbd542d"><div class="ttname"><a href="namespacearm__compute.xhtml#a3fcdebf0b2654721ecdfa39b6bbd542d">arm_compute::quantize_qasymm16</a></div><div class="ttdeci">uint16_t quantize_qasymm16(float value, const UniformQuantizationInfo &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given a 16-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00494">QuantizationInfo.h:494</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_ae65af0c4a8ee050043fe4b575f0a26a0"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#ae65af0c4a8ee050043fe4b575f0a26a0">arm_compute::PixelValue::u32</a></div><div class="ttdeci">uint32_t u32</div><div class="ttdoc">Single channel U32.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00221">PixelValue.h:221</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a9d55760e9791473bc0c71da0fc648ee0"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a9d55760e9791473bc0c71da0fc648ee0">arm_compute::PixelValue::yuv</a></div><div class="ttdeci">uint8_t yuv[3]</div><div class="ttdoc">3 channels: Any YUV format</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00211">PixelValue.h:211</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a9deb64fff1a3515aa4bcd6f21dd3c4c0"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a9deb64fff1a3515aa4bcd6f21dd3c4c0">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(int32_t v)</div><div class="ttdoc">Initialize the union with a S32 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00150">PixelValue.h:150</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_acd1420e45b5486795a46cf1a5943a0ff"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#acd1420e45b5486795a46cf1a5943a0ff">arm_compute::PixelValue::s32</a></div><div class="ttdeci">int32_t s32</div><div class="ttdoc">Single channel S32.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00222">PixelValue.h:222</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a759f09965687c6aea87dc4df7dd6f6b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a759f09965687c6aea87dc4df7dd6f6b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(int16_t v)</div><div class="ttdoc">Initialize the union with a S16 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00134">PixelValue.h:134</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00083">CoreTypes.h:83</a></div></div>
<div class="ttc" id="a_quantization_info_8h_xhtml"><div class="ttname"><a href="_quantization_info_8h.xhtml">QuantizationInfo.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ad85d7becf0c6e3cffbc255489808e219"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad85d7becf0c6e3cffbc255489808e219">arm_compute::test::validation::qinfo</a></div><div class="ttdeci">const QuantizationInfo qinfo</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00155">Im2Col.cpp:155</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a0d5437d02dbe5a6e299210b286c49e1c"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a0d5437d02dbe5a6e299210b286c49e1c">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(double v, DataType datatype, QuantizationInfo qinfo=QuantizationInfo())</div><div class="ttdoc">Initialize the union with a pixel value of chosen datatype.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00048">PixelValue.h:48</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pixel_value_xhtml_a90103a4ef4ab615848bb3afce5b97be1"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a90103a4ef4ab615848bb3afce5b97be1">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue(float v)</div><div class="ttdoc">Initialize the union with a F32 pixel value.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00191">PixelValue.h:191</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="_pixel_value_8h.xhtml">PixelValue.h</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:44 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
