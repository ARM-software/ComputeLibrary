<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/CL/CLDevice.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_device_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLDevice.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_device_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2020-2022 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_CLDEVICE_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_CLDEVICE_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2_c_l_2_c_l_helpers_8h.xhtml">arm_compute/core/CL/CLHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2_c_l_2_c_l_types_8h.xhtml">arm_compute/core/CL/CLTypes.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_p_u_target_8h.xhtml">arm_compute/core/GPUTarget.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_device_8h.xhtml">arm_compute/core/IDevice.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/**  OpenCL device type class</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> *   Initializes and stores all the information about a cl device,</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> *   working mainly as a cache mechanism.</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> * */</span></div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml">   43</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_c_l_device.xhtml">CLDevice</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_device.xhtml">IDevice</a></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">    /** Default Constructor */</span></div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml#a774af460d874d0e3da143ec4ef343e7f">   47</a></span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a774af460d874d0e3da143ec4ef343e7f">CLDevice</a>() : _device(<a class="code" href="namespacecl.xhtml">cl</a>::Device()), _options()</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     * @param[in] cl_device OpenCL device</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml#a9ce6d190c4859d6cab3b8956c54b9091">   55</a></span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a9ce6d190c4859d6cab3b8956c54b9091">CLDevice</a>(<span class="keyword">const</span> cl::Device &amp;<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#aa7d721813bb154a0ca56f8136712a19b">cl_device</a>) : _device(), _options()</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        _device = <a class="code" href="classarm__compute_1_1_c_l_device.xhtml#aa7d721813bb154a0ca56f8136712a19b">cl_device</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="comment">// Get device target</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        std::string device_name = _device.getInfo&lt;CL_DEVICE_NAME&gt;();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#aadf3b16e351860b4ba10a540a621b392">gpu_target</a>     = <a class="code" href="namespacearm__compute.xhtml#a0dc6fb54ac0bbc7bf512fe0ca7414076">get_target_from_name</a>(device_name);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="comment">// Fill extensions</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        std::string <a class="code" href="namespacecheck__header__guards.xhtml#a4397ebd547b206a8f60555ec1d1e0397">extensions</a> = _device.getInfo&lt;CL_DEVICE_EXTENSIONS&gt;();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        std::istringstream iss(<a class="code" href="namespacecheck__header__guards.xhtml#a4397ebd547b206a8f60555ec1d1e0397">extensions</a>);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">for</span> (std::string s; iss &gt;&gt; s;)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#a9eb2fa15d7ce88549e4e0b1068f95159">extensions</a>.insert(s);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment">// SW workaround for G76</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">if</span> (_options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#aadf3b16e351860b4ba10a540a621b392">gpu_target</a> == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa46ce37da51477a1af33a8810e0ed04d">GPUTarget::G76</a>)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#a9eb2fa15d7ce88549e4e0b1068f95159">extensions</a>.insert(<span class="stringliteral">&quot;cl_arm_integer_dot_product_int8&quot;</span>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="comment">// Get device version</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#a4df34d6126ffb0acab9506e30dae58a4">version</a> = <a class="code" href="namespacearm__compute.xhtml#a0e62ce01a7a7af6c3d059bb8534cad45">get_cl_version</a>(_device);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="comment">// Get compute units</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#ad7dd07764bb88eb7b1e7de251752a5a9">compute_units</a> = _device.getInfo&lt;CL_DEVICE_MAX_COMPUTE_UNITS&gt;();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="comment">// Get device version</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#a00a31527219b80fd3cf88e02a46efa40">device_version</a> = _device.getInfo&lt;CL_DEVICE_VERSION&gt;();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">    /** Returns the GPU target of the cl device</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     * @return The GPU target</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml#ac6326ac3fd13446394faa873fa727414">   92</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> &amp;<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#ac6326ac3fd13446394faa873fa727414">target</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">return</span> _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#aadf3b16e351860b4ba10a540a621b392">gpu_target</a>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">    /** Returns the number of compute units available</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     * @return Number of compute units</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml#a2e11e435e467931ffe6d9a15d0401c19">  101</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a2e11e435e467931ffe6d9a15d0401c19">compute_units</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">return</span> _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#ad7dd07764bb88eb7b1e7de251752a5a9">compute_units</a>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    /** Returns the underlying cl device object</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @return A cl device</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml#aa7d721813bb154a0ca56f8136712a19b">  110</a></span>&#160;    <span class="keyword">const</span> cl::Device &amp;<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#aa7d721813bb154a0ca56f8136712a19b">cl_device</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">return</span> _device;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">    /** Returns the device&#39;s CL version</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     * @return CLVersion of the device</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml#a1f0e1a33eea82f745658928bb4550eef">  119</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52e">CLVersion</a> <a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a1f0e1a33eea82f745658928bb4550eef">version</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">return</span> _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#a4df34d6126ffb0acab9506e30dae58a4">version</a>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">    /** Returns the device version as a string</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">     * @return CLVersion of the device</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml#a492b0f72e29930e8b74a866d5e21b31b">  128</a></span>&#160;    std::string <a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a492b0f72e29930e8b74a866d5e21b31b">device_version</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">return</span> _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#a00a31527219b80fd3cf88e02a46efa40">device_version</a>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="comment">// Inherrited methods</span></div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml#a1a33f1f37494e32987c96642e456fa09">  134</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9">DeviceType</a> <a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a1a33f1f37494e32987c96642e456fa09">type</a>()<span class="keyword"> const override</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9a5bc574a47246f122016869b32a6aa6f0">DeviceType::CL</a>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml#aa75344c818b18165c299b00777cc8c52">  139</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_device.xhtml#aa75344c818b18165c299b00777cc8c52">supported</a>(<span class="keyword">const</span> std::string &amp;extension)<span class="keyword"> const override</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">return</span> _options.<a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml#a9eb2fa15d7ce88549e4e0b1068f95159">extensions</a>.count(extension) != 0;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">    /** Returns whether non-uniform workgroup is supported and the build options.</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     * If the feature is supported, the appropriate build options will be</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     * appended to the specified string.</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     * @return A tuple (supported, build_options) indicating whether the feature</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     *         is supported and the corresponding build options to enable it.</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_device.xhtml#acc567924678eb3b406f132c7ca366c87">  152</a></span>&#160;    std::tuple&lt;bool, std::string&gt; <a class="code" href="classarm__compute_1_1_c_l_device.xhtml#acc567924678eb3b406f132c7ca366c87">is_non_uniform_workgroup_supported</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a1f0e1a33eea82f745658928bb4550eef">version</a>() == <a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea669ca03f71cf65568691007fde729fa3">CLVersion::CL30</a> &amp;&amp; <a class="code" href="namespacearm__compute.xhtml#a8a5bd4c63b9012c70e5defdc3b344606">get_cl_non_uniform_work_group_supported</a>(_device))</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">return</span> {<span class="keyword">true</span>, <span class="stringliteral">&quot; -cl-std=CL3.0 &quot;</span>};</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a1f0e1a33eea82f745658928bb4550eef">version</a>() == <a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52eaba90edbc644c32afa8a7e36e87735aab">CLVersion::CL20</a>)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">return</span> {<span class="keyword">true</span>, <span class="stringliteral">&quot; -cl-std=CL2.0 &quot;</span>};</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#aa75344c818b18165c299b00777cc8c52">supported</a>(<span class="stringliteral">&quot;cl_arm_non_uniform_work_group_size&quot;</span>))</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="keywordflow">return</span> {<span class="keyword">true</span>, <span class="stringliteral">&quot; -cl-arm-non-uniform-work-group-size &quot;</span>};</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">return</span> {<span class="keyword">false</span>, <span class="stringliteral">&quot;&quot;</span>};</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    cl::Device             _device;  <span class="comment">/**&lt; OpenCL device. */</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_c_l_device_options.xhtml">CLDeviceOptions</a> _options; <span class="comment">/**&lt; OpenCL device options */</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;};</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CLDEVICE_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1_c_l_device_options_xhtml_aadf3b16e351860b4ba10a540a621b392"><div class="ttname"><a href="structarm__compute_1_1_c_l_device_options.xhtml#aadf3b16e351860b4ba10a540a621b392">arm_compute::CLDeviceOptions::gpu_target</a></div><div class="ttdeci">GPUTarget gpu_target</div><div class="ttdoc">GPU target architecture/instance.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_types_8h_source.xhtml#l00056">CLTypes.h:56</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad258d4c51629346fceac4679b3209ad9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9">arm_compute::DeviceType</a></div><div class="ttdeci">DeviceType</div><div class="ttdoc">Device types.</div><div class="ttdef"><b>Definition:</b> <a href="_i_device_8h_source.xhtml#l00033">IDevice.h:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_a2e11e435e467931ffe6d9a15d0401c19"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#a2e11e435e467931ffe6d9a15d0401c19">arm_compute::CLDevice::compute_units</a></div><div class="ttdeci">size_t compute_units() const</div><div class="ttdoc">Returns the number of compute units available.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00101">CLDevice.h:101</a></div></div>
<div class="ttc" id="acore_2_c_l_2_c_l_types_8h_xhtml"><div class="ttname"><a href="core_2_c_l_2_c_l_types_8h.xhtml">CLTypes.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_a774af460d874d0e3da143ec4ef343e7f"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#a774af460d874d0e3da143ec4ef343e7f">arm_compute::CLDevice::CLDevice</a></div><div class="ttdeci">CLDevice()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00047">CLDevice.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_aa75344c818b18165c299b00777cc8c52"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#aa75344c818b18165c299b00777cc8c52">arm_compute::CLDevice::supported</a></div><div class="ttdeci">bool supported(const std::string &amp;extension) const override</div><div class="ttdoc">Check if extensions on a device are supported.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00139">CLDevice.h:139</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a3a440b3893fa10608d4428958be1c52ea669ca03f71cf65568691007fde729fa3"><div class="ttname"><a href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea669ca03f71cf65568691007fde729fa3">arm_compute::CLVersion::CL30</a></div><div class="ttdeci">@ CL30</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_aa7d721813bb154a0ca56f8136712a19b"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#aa7d721813bb154a0ca56f8136712a19b">arm_compute::CLDevice::cl_device</a></div><div class="ttdeci">const cl::Device &amp; cl_device() const</div><div class="ttdoc">Returns the underlying cl device object.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00110">CLDevice.h:110</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_c_l_device_options_xhtml"><div class="ttname"><a href="structarm__compute_1_1_c_l_device_options.xhtml">arm_compute::CLDeviceOptions</a></div><div class="ttdoc">OpenCL device options.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_types_8h_source.xhtml#l00050">CLTypes.h:50</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a3a440b3893fa10608d4428958be1c52e"><div class="ttname"><a href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52e">arm_compute::CLVersion</a></div><div class="ttdeci">CLVersion</div><div class="ttdoc">Available OpenCL Version.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_types_8h_source.xhtml#l00039">CLTypes.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_acc567924678eb3b406f132c7ca366c87"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#acc567924678eb3b406f132c7ca366c87">arm_compute::CLDevice::is_non_uniform_workgroup_supported</a></div><div class="ttdeci">std::tuple&lt; bool, std::string &gt; is_non_uniform_workgroup_supported() const</div><div class="ttdoc">Returns whether non-uniform workgroup is supported and the build options.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00152">CLDevice.h:152</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_c_l_device_options_xhtml_a9eb2fa15d7ce88549e4e0b1068f95159"><div class="ttname"><a href="structarm__compute_1_1_c_l_device_options.xhtml#a9eb2fa15d7ce88549e4e0b1068f95159">arm_compute::CLDeviceOptions::extensions</a></div><div class="ttdeci">std::set&lt; std::string &gt; extensions</div><div class="ttdoc">List of supported extensions.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_types_8h_source.xhtml#l00054">CLTypes.h:54</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0dc6fb54ac0bbc7bf512fe0ca7414076"><div class="ttname"><a href="namespacearm__compute.xhtml#a0dc6fb54ac0bbc7bf512fe0ca7414076">arm_compute::get_target_from_name</a></div><div class="ttdeci">GPUTarget get_target_from_name(const std::string &amp;device_name)</div><div class="ttdoc">Helper function to get the GPU target from a device name.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_g_p_u_target_8cpp_source.xhtml#l00188">GPUTarget.cpp:188</a></div></div>
<div class="ttc" id="a_i_device_8h_xhtml"><div class="ttname"><a href="_i_device_8h.xhtml">IDevice.h</a></div></div>
<div class="ttc" id="a_g_p_u_target_8h_xhtml"><div class="ttname"><a href="_g_p_u_target_8h.xhtml">GPUTarget.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_a9ce6d190c4859d6cab3b8956c54b9091"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#a9ce6d190c4859d6cab3b8956c54b9091">arm_compute::CLDevice::CLDevice</a></div><div class="ttdeci">CLDevice(const cl::Device &amp;cl_device)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00055">CLDevice.h:55</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a8a5bd4c63b9012c70e5defdc3b344606"><div class="ttname"><a href="namespacearm__compute.xhtml#a8a5bd4c63b9012c70e5defdc3b344606">arm_compute::get_cl_non_uniform_work_group_supported</a></div><div class="ttdeci">bool get_cl_non_uniform_work_group_supported(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to check whether non-uniform work group is supported.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00398">CLHelpers.cpp:398</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_c_l_device_options_xhtml_a4df34d6126ffb0acab9506e30dae58a4"><div class="ttname"><a href="structarm__compute_1_1_c_l_device_options.xhtml#a4df34d6126ffb0acab9506e30dae58a4">arm_compute::CLDeviceOptions::version</a></div><div class="ttdeci">CLVersion version</div><div class="ttdoc">Device OpenCL version.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_types_8h_source.xhtml#l00057">CLTypes.h:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_a1a33f1f37494e32987c96642e456fa09"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#a1a33f1f37494e32987c96642e456fa09">arm_compute::CLDevice::type</a></div><div class="ttdeci">DeviceType type() const override</div><div class="ttdoc">Device type accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00134">CLDevice.h:134</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_a492b0f72e29930e8b74a866d5e21b31b"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#a492b0f72e29930e8b74a866d5e21b31b">arm_compute::CLDevice::device_version</a></div><div class="ttdeci">std::string device_version() const</div><div class="ttdoc">Returns the device version as a string.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00128">CLDevice.h:128</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets.</div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3aa46ce37da51477a1af33a8810e0ed04d"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa46ce37da51477a1af33a8810e0ed04d">arm_compute::GPUTarget::G76</a></div><div class="ttdeci">@ G76</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml">arm_compute::CLDevice</a></div><div class="ttdoc">OpenCL device type class.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00043">CLDevice.h:43</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_c_l_device_options_xhtml_ad7dd07764bb88eb7b1e7de251752a5a9"><div class="ttname"><a href="structarm__compute_1_1_c_l_device_options.xhtml#ad7dd07764bb88eb7b1e7de251752a5a9">arm_compute::CLDeviceOptions::compute_units</a></div><div class="ttdeci">size_t compute_units</div><div class="ttdoc">Number of compute units.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_types_8h_source.xhtml#l00058">CLTypes.h:58</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad258d4c51629346fceac4679b3209ad9a5bc574a47246f122016869b32a6aa6f0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9a5bc574a47246f122016869b32a6aa6f0">arm_compute::DeviceType::CL</a></div><div class="ttdeci">@ CL</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a3a440b3893fa10608d4428958be1c52eaba90edbc644c32afa8a7e36e87735aab"><div class="ttname"><a href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52eaba90edbc644c32afa8a7e36e87735aab">arm_compute::CLVersion::CL20</a></div><div class="ttdeci">@ CL20</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0e62ce01a7a7af6c3d059bb8534cad45"><div class="ttname"><a href="namespacearm__compute.xhtml#a0e62ce01a7a7af6c3d059bb8534cad45">arm_compute::get_cl_version</a></div><div class="ttdeci">CLVersion get_cl_version(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to get the highest OpenCL version supported.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00258">CLHelpers.cpp:258</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_a1f0e1a33eea82f745658928bb4550eef"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#a1f0e1a33eea82f745658928bb4550eef">arm_compute::CLDevice::version</a></div><div class="ttdeci">CLVersion version() const</div><div class="ttdoc">Returns the device's CL version.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00119">CLDevice.h:119</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_device_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_device.xhtml">arm_compute::IDevice</a></div><div class="ttdoc">Interface for device object.</div><div class="ttdef"><b>Definition:</b> <a href="_i_device_8h_source.xhtml#l00040">IDevice.h:40</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_c_l_device_options_xhtml_a00a31527219b80fd3cf88e02a46efa40"><div class="ttname"><a href="structarm__compute_1_1_c_l_device_options.xhtml#a00a31527219b80fd3cf88e02a46efa40">arm_compute::CLDeviceOptions::device_version</a></div><div class="ttdeci">std::string device_version</div><div class="ttdoc">Device version string.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_types_8h_source.xhtml#l00053">CLTypes.h:53</a></div></div>
<div class="ttc" id="anamespacecl_xhtml"><div class="ttname"><a href="namespacecl.xhtml">cl</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8h_source.xhtml#l00032">ICLTensor.h:32</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_ac6326ac3fd13446394faa873fa727414"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#ac6326ac3fd13446394faa873fa727414">arm_compute::CLDevice::target</a></div><div class="ttdeci">const GPUTarget &amp; target() const</div><div class="ttdoc">Returns the GPU target of the cl device.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00092">CLDevice.h:92</a></div></div>
<div class="ttc" id="acore_2_c_l_2_c_l_helpers_8h_xhtml"><div class="ttname"><a href="core_2_c_l_2_c_l_helpers_8h.xhtml">CLHelpers.h</a></div></div>
<div class="ttc" id="anamespacecheck__header__guards_xhtml_a4397ebd547b206a8f60555ec1d1e0397"><div class="ttname"><a href="namespacecheck__header__guards.xhtml#a4397ebd547b206a8f60555ec1d1e0397">check_header_guards.extensions</a></div><div class="ttdeci">extensions</div><div class="ttdef"><b>Definition:</b> <a href="check__header__guards_8py_source.xhtml#l00177">check_header_guards.py:177</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_1633709b037eda5b8477677909f78129.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_device_8h.xhtml">CLDevice.h</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:44 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
