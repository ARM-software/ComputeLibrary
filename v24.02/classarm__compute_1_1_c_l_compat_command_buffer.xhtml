<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLCompatCommandBuffer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_compat_command_buffer.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLCompatCommandBuffer Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Command buffer implementation for platform without mutable dispatch command buffer extension.  
 <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_compat_command_buffer_8h_source.xhtml">CLCompatCommandBuffer.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLCompatCommandBuffer:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_compat_command_buffer__coll__graph.svg" width="206" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aceda0a9bccac0fbae75bb5958e2386c9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#aceda0a9bccac0fbae75bb5958e2386c9">CLCompatCommandBuffer</a> (cl_command_queue queue)</td></tr>
<tr class="memdesc:aceda0a9bccac0fbae75bb5958e2386c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new command buffer targeting the specified command queue.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#aceda0a9bccac0fbae75bb5958e2386c9">More...</a><br /></td></tr>
<tr class="separator:aceda0a9bccac0fbae75bb5958e2386c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae99bc85e44092b78bef1cd9beb196049"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#ae99bc85e44092b78bef1cd9beb196049">~CLCompatCommandBuffer</a> ()</td></tr>
<tr class="memdesc:ae99bc85e44092b78bef1cd9beb196049"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#ae99bc85e44092b78bef1cd9beb196049">More...</a><br /></td></tr>
<tr class="separator:ae99bc85e44092b78bef1cd9beb196049"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2194a9a19a77eb2fed2b338c34e71894"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a2194a9a19a77eb2fed2b338c34e71894">CLCompatCommandBuffer</a> (const <a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> &amp;)=delete</td></tr>
<tr class="memdesc:a2194a9a19a77eb2fed2b338c34e71894"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow copy constructor.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a2194a9a19a77eb2fed2b338c34e71894">More...</a><br /></td></tr>
<tr class="separator:a2194a9a19a77eb2fed2b338c34e71894"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63b2473a6a17f5584abe4bd58d9f66ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a63b2473a6a17f5584abe4bd58d9f66ca">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> &amp;)=delete</td></tr>
<tr class="memdesc:a63b2473a6a17f5584abe4bd58d9f66ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow copy assignment.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a63b2473a6a17f5584abe4bd58d9f66ca">More...</a><br /></td></tr>
<tr class="separator:a63b2473a6a17f5584abe4bd58d9f66ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cb160f945360d91249cd3bb85d95889"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a7cb160f945360d91249cd3bb85d95889">CLCompatCommandBuffer</a> (<a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> &amp;&amp;)=delete</td></tr>
<tr class="memdesc:a7cb160f945360d91249cd3bb85d95889"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow move constructor.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a7cb160f945360d91249cd3bb85d95889">More...</a><br /></td></tr>
<tr class="separator:a7cb160f945360d91249cd3bb85d95889"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaf9d56ca2ef671341e12e9bd2e45ef8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#aeaf9d56ca2ef671341e12e9bd2e45ef8">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> &amp;&amp;)=delete</td></tr>
<tr class="memdesc:aeaf9d56ca2ef671341e12e9bd2e45ef8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow move assignment.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#aeaf9d56ca2ef671341e12e9bd2e45ef8">More...</a><br /></td></tr>
<tr class="separator:aeaf9d56ca2ef671341e12e9bd2e45ef8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06ba711f428dcc60e33df9b34aa18fbc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a06ba711f428dcc60e33df9b34aa18fbc">add_kernel</a> (cl_kernel kernel, const cl::NDRange &amp;<a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, const cl::NDRange &amp;global, const cl::NDRange &amp;local) override</td></tr>
<tr class="memdesc:a06ba711f428dcc60e33df9b34aa18fbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a kernel enqueue command to the command queue.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a06ba711f428dcc60e33df9b34aa18fbc">More...</a><br /></td></tr>
<tr class="separator:a06ba711f428dcc60e33df9b34aa18fbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a32bafa8064e666aed52486c4af4144"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a6a32bafa8064e666aed52486c4af4144">finalize</a> () override</td></tr>
<tr class="memdesc:a6a32bafa8064e666aed52486c4af4144"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finalize the command buffer.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a6a32bafa8064e666aed52486c4af4144">More...</a><br /></td></tr>
<tr class="separator:a6a32bafa8064e666aed52486c4af4144"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44137bb65de2396875934e48a6ee5099"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a44137bb65de2396875934e48a6ee5099">update</a> () override</td></tr>
<tr class="memdesc:a44137bb65de2396875934e48a6ee5099"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the command buffer with new kernel argument values.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a44137bb65de2396875934e48a6ee5099">More...</a><br /></td></tr>
<tr class="separator:a44137bb65de2396875934e48a6ee5099"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36ec98486a2f4b7ee530e1953370572c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a36ec98486a2f4b7ee530e1953370572c">enqueue</a> () override</td></tr>
<tr class="memdesc:a36ec98486a2f4b7ee530e1953370572c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue the command buffer.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#a36ec98486a2f4b7ee530e1953370572c">More...</a><br /></td></tr>
<tr class="separator:a36ec98486a2f4b7ee530e1953370572c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abef52b4cd29e5d9e45d53b1ed3f569ad"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#abef52b4cd29e5d9e45d53b1ed3f569ad">is_finalized</a> () const override</td></tr>
<tr class="memdesc:abef52b4cd29e5d9e45d53b1ed3f569ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the command buffer has been finalized.  <a href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml#abef52b4cd29e5d9e45d53b1ed3f569ad">More...</a><br /></td></tr>
<tr class="separator:abef52b4cd29e5d9e45d53b1ed3f569ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_c_l_command_buffer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_c_l_command_buffer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a></td></tr>
<tr class="memitem:a080ae7dc3dd0eb883881e05b7cabd06d inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a080ae7dc3dd0eb883881e05b7cabd06d">CLCommandBuffer</a> ()</td></tr>
<tr class="memdesc:a080ae7dc3dd0eb883881e05b7cabd06d inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a080ae7dc3dd0eb883881e05b7cabd06d">More...</a><br /></td></tr>
<tr class="separator:a080ae7dc3dd0eb883881e05b7cabd06d inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7d3c548ee554bdbb0209deb4be0108f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#af7d3c548ee554bdbb0209deb4be0108f">~CLCommandBuffer</a> ()</td></tr>
<tr class="memdesc:af7d3c548ee554bdbb0209deb4be0108f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#af7d3c548ee554bdbb0209deb4be0108f">More...</a><br /></td></tr>
<tr class="separator:af7d3c548ee554bdbb0209deb4be0108f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a229cf3f7f693bce779094f2d16cef9f5 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a229cf3f7f693bce779094f2d16cef9f5">CLCommandBuffer</a> (const <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;)=delete</td></tr>
<tr class="memdesc:a229cf3f7f693bce779094f2d16cef9f5 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow copy constructor.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a229cf3f7f693bce779094f2d16cef9f5">More...</a><br /></td></tr>
<tr class="separator:a229cf3f7f693bce779094f2d16cef9f5 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a392dd7bada4ee174094e2565cda0467b inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a392dd7bada4ee174094e2565cda0467b">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;)=delete</td></tr>
<tr class="memdesc:a392dd7bada4ee174094e2565cda0467b inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow copy assignment.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a392dd7bada4ee174094e2565cda0467b">More...</a><br /></td></tr>
<tr class="separator:a392dd7bada4ee174094e2565cda0467b inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a601b2342a3d85496294d1d202b1a216a inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a601b2342a3d85496294d1d202b1a216a">CLCommandBuffer</a> (<a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;&amp;other)=delete</td></tr>
<tr class="memdesc:a601b2342a3d85496294d1d202b1a216a inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow move constructor.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a601b2342a3d85496294d1d202b1a216a">More...</a><br /></td></tr>
<tr class="separator:a601b2342a3d85496294d1d202b1a216a inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f8e814a23635d542414d4f995345c33 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a5f8e814a23635d542414d4f995345c33">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &amp;&amp;other)=delete</td></tr>
<tr class="memdesc:a5f8e814a23635d542414d4f995345c33 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disallow move assignment.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a5f8e814a23635d542414d4f995345c33">More...</a><br /></td></tr>
<tr class="separator:a5f8e814a23635d542414d4f995345c33 inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab086507a14b18e4a82ebeb0c540eca5f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memTemplParams" colspan="2">template&lt;typename T , typename  = std::enable_if_t&lt;std::is_arithmetic&lt;T&gt;::value || std::is_pointer&lt;T&gt;::value&gt;&gt; </td></tr>
<tr class="memitem:ab086507a14b18e4a82ebeb0c540eca5f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#ab086507a14b18e4a82ebeb0c540eca5f">add_mutable_argument</a> (cl_uint arg_idx, const T *value)</td></tr>
<tr class="memdesc:ab086507a14b18e4a82ebeb0c540eca5f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the mutable argument to the current kernel enqueue command.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#ab086507a14b18e4a82ebeb0c540eca5f">More...</a><br /></td></tr>
<tr class="separator:ab086507a14b18e4a82ebeb0c540eca5f inherit pub_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classarm__compute_1_1_c_l_command_buffer"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classarm__compute_1_1_c_l_command_buffer')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a></td></tr>
<tr class="memitem:a8dac6dbe99699bbdab5ebe80f32e37c0 inherit pub_static_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memItemLeft" align="right" valign="top">static std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a8dac6dbe99699bbdab5ebe80f32e37c0">create</a> (cl_command_queue queue)</td></tr>
<tr class="memdesc:a8dac6dbe99699bbdab5ebe80f32e37c0 inherit pub_static_methods_classarm__compute_1_1_c_l_command_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new command buffer targeting the specified command queue.  <a href="classarm__compute_1_1_c_l_command_buffer.xhtml#a8dac6dbe99699bbdab5ebe80f32e37c0">More...</a><br /></td></tr>
<tr class="separator:a8dac6dbe99699bbdab5ebe80f32e37c0 inherit pub_static_methods_classarm__compute_1_1_c_l_command_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Command buffer implementation for platform without mutable dispatch command buffer extension. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_compat_command_buffer_8h_source.xhtml#l00036">36</a> of file <a class="el" href="_c_l_compat_command_buffer_8h_source.xhtml">CLCompatCommandBuffer.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aceda0a9bccac0fbae75bb5958e2386c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aceda0a9bccac0fbae75bb5958e2386c9">&#9670;&nbsp;</a></span>CLCompatCommandBuffer() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> </td>
          <td>(</td>
          <td class="paramtype">cl_command_queue&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a new command buffer targeting the specified command queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">queue</td><td>The command queue to execute the command buffer. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml#l00034">34</a> of file <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml">CLCompatCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                                                   : _queue(queue)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae99bc85e44092b78bef1cd9beb196049"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae99bc85e44092b78bef1cd9beb196049">&#9670;&nbsp;</a></span>~CLCompatCommandBuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml">CLCompatCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a2194a9a19a77eb2fed2b338c34e71894"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2194a9a19a77eb2fed2b338c34e71894">&#9670;&nbsp;</a></span>CLCompatCommandBuffer() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disallow copy constructor. </p>

</div>
</div>
<a id="a7cb160f945360d91249cd3bb85d95889"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cb160f945360d91249cd3bb85d95889">&#9670;&nbsp;</a></span>CLCompatCommandBuffer() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disallow move constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a06ba711f428dcc60e33df9b34aa18fbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06ba711f428dcc60e33df9b34aa18fbc">&#9670;&nbsp;</a></span>add_kernel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void add_kernel </td>
          <td>(</td>
          <td class="paramtype">cl_kernel&#160;</td>
          <td class="paramname"><em>kernel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cl::NDRange &amp;&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cl::NDRange &amp;&#160;</td>
          <td class="paramname"><em>global</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cl::NDRange &amp;&#160;</td>
          <td class="paramname"><em>local</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add a kernel enqueue command to the command queue. </p>
<p>This function must be called before the command buffer has been finalized.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel</td><td>The CL kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>The global work offset. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">global</td><td>The global work size. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">local</td><td>The local work size. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#aacd903a79a2ddefa4da8093b75d4c1e0">CLCommandBuffer</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml">CLCompatCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Created);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    _kernel_cmds.push_back(KernelCommand{kernel, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, global, local, {}});</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">offset()</a>.</p>

</div>
</div>
<a id="a36ec98486a2f4b7ee530e1953370572c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36ec98486a2f4b7ee530e1953370572c">&#9670;&nbsp;</a></span>enqueue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void enqueue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue the command buffer. </p>
<p>This function must be called after the command buffer has been finalized. </p>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a5fab675dd8532ba2d569c64fe0640d61">CLCommandBuffer</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml#l00081">81</a> of file <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml">CLCompatCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Finalized);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;cmd : _kernel_cmds)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;arg : cmd.mutable_args)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> error = <a class="code" href="_open_c_l_8cpp.xhtml#a3945f28bb1b23afb00a87801136271e9">clSetKernelArg</a>(cmd.kernel, arg.arg_index, arg.arg_size, arg.arg_value);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clSetKernelArg&quot;</span>, error);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> error =</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <a class="code" href="_open_c_l_8cpp.xhtml#a0152f4b089c26f22f032162d0b7a0d21">clEnqueueNDRangeKernel</a>(_queue, cmd.kernel, <span class="keyword">static_cast&lt;</span>cl_uint<span class="keyword">&gt;</span>(cmd.global.dimensions()),</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                   cmd.offset.dimensions() != 0 ? cmd.offset.get() : <span class="keyword">nullptr</span>, cmd.global.get(),</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                   cmd.local.dimensions() != 0 ? cmd.local.get() : <span class="keyword">nullptr</span>, 0, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clEnqueueNDRangeKernel&quot;</span>, error);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00459">clEnqueueNDRangeKernel()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00482">clSetKernelArg()</a>, and <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00120">arm_compute::handle_cl_error()</a>.</p>

</div>
</div>
<a id="a6a32bafa8064e666aed52486c4af4144"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a32bafa8064e666aed52486c4af4144">&#9670;&nbsp;</a></span>finalize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void finalize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Finalize the command buffer. </p>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a5882b5eaf11f8b1561d5bb4ecdc217c3">CLCommandBuffer</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml">CLCompatCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Created);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    _kernel_cmds.shrink_to_fit();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;cmd : _kernel_cmds)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        cmd.mutable_args.shrink_to_fit();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    state(State::Finalized);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<a id="abef52b4cd29e5d9e45d53b1ed3f569ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abef52b4cd29e5d9e45d53b1ed3f569ad">&#9670;&nbsp;</a></span>is_finalized()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_finalized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the command buffer has been finalized. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the command buffer has been finalized. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#acbe3e7950f870aa8becbcc956b92cd3e">CLCommandBuffer</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml#l00103">103</a> of file <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml">CLCompatCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> state() == State::Finalized;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aeaf9d56ca2ef671341e12e9bd2e45ef8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeaf9d56ca2ef671341e12e9bd2e45ef8">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disallow move assignment. </p>

</div>
</div>
<a id="a63b2473a6a17f5584abe4bd58d9f66ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63b2473a6a17f5584abe4bd58d9f66ca">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disallow copy assignment. </p>

</div>
</div>
<a id="a44137bb65de2396875934e48a6ee5099"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44137bb65de2396875934e48a6ee5099">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Update the command buffer with new kernel argument values. </p>
<p>This function must be called after the command buffer has been finalized.</p>
<p>All the value pointed by the mutable argument will be applied to the command buffer. </p>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_command_buffer.xhtml#a99b02345a8a15d3c5ea2844a2253f510">CLCommandBuffer</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml#l00074">74</a> of file <a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml">CLCompatCommandBuffer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Finalized);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// Nothing to do here - The kernel arguments will be updated when each command is enqueued.</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/core/CL/<a class="el" href="_c_l_compat_command_buffer_8h_source.xhtml">CLCompatCommandBuffer.h</a></li>
<li>src/core/CL/<a class="el" href="_c_l_compat_command_buffer_8cpp_source.xhtml">CLCompatCommandBuffer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a0152f4b089c26f22f032162d0b7a0d21"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a0152f4b089c26f22f032162d0b7a0d21">clEnqueueNDRangeKernel</a></div><div class="ttdeci">cl_int clEnqueueNDRangeKernel(cl_command_queue command_queue, cl_kernel kernel, cl_uint work_dim, const size_t *global_work_offset, const size_t *global_work_size, const size_t *local_work_size, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00459">OpenCL.cpp:459</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5bbad0e81db8c98c3e6bf6f9aa09c785"><div class="ttname"><a href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">arm_compute::handle_cl_error</a></div><div class="ttdeci">void handle_cl_error(const std::string &amp;function_name, cl_int error_code)</div><div class="ttdoc">Check for CL error code and throw exception accordingly.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_utils_8cpp_source.xhtml#l00120">CLUtils.cpp:120</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">helpers.h:1142</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a3945f28bb1b23afb00a87801136271e9"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a3945f28bb1b23afb00a87801136271e9">clSetKernelArg</a></div><div class="ttdeci">cl_int clSetKernelArg(cl_kernel kernel, cl_uint arg_index, size_t arg_size, const void *arg_value)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00482">OpenCL.cpp:482</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_compat_command_buffer.xhtml">CLCompatCommandBuffer</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:59 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
