<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/CpuContext.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cpu_context_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CpuContext.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cpu_context_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_context_8h.xhtml">src/cpu/CpuContext.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_p_p_types_8h.xhtml">arm_compute/core/CPP/CPPTypes.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_queue_8h.xhtml">src/cpu/CpuQueue.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_tensor_8h.xhtml">src/cpu/CpuTensor.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;cstdlib&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#if !defined(__APPLE__) &amp;&amp; !defined(__OpenBSD__)</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;malloc.h&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#if defined(_WIN64)</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#define posix_memalign      _aligned_realloc</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#define posix_memalign_free _aligned_free</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#endif // defined(_WIN64)</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#endif // !defined(__APPLE__) &amp;&amp; !defined(__OpenBSD__)</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#ifndef BARE_METAL</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &lt;thread&gt;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* BARE_METAL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">namespace </span>cpu</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">void</span> *default_allocate(<span class="keywordtype">void</span> *user_data, <span class="keywordtype">size_t</span> size)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(user_data);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    return ::operator <span class="keyword">new</span>(size);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">void</span> default_free(<span class="keywordtype">void</span> *user_data, <span class="keywordtype">void</span> *ptr)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(user_data);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    ::operator <span class="keyword">delete</span>(ptr);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">void</span> *default_aligned_allocate(<span class="keywordtype">void</span> *user_data, <span class="keywordtype">size_t</span> size, <span class="keywordtype">size_t</span> alignment)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(user_data);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">void</span> *ptr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#if defined(BARE_METAL)</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">size_t</span> rem       = size % alignment;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">size_t</span> real_size = (rem) ? (size + alignment - rem) : size;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    ptr              = memalign(alignment, real_size);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(BARE_METAL) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">if</span> (posix_memalign(&amp;ptr, alignment, size) != 0)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment">// posix_memalign returns non-zero on failures, the return values will be</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="comment">// - EINVAL: wrong alignment</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="comment">// - ENOMEM: insufficient memory</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(<span class="stringliteral">&quot;posix_memalign failed, the returned pointer will be invalid&quot;</span>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(BARE_METAL) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> ptr;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">void</span> default_aligned_free(<span class="keywordtype">void</span> *user_data, <span class="keywordtype">void</span> *ptr)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(user_data);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    free(ptr);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">static</span> <a class="code" href="struct_acl_allocator.xhtml">AclAllocator</a> default_allocator = {&amp;default_allocate, &amp;default_free, &amp;default_aligned_allocate,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                                         &amp;default_aligned_free, <span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;AllocatorWrapper populate_allocator(<a class="code" href="struct_acl_allocator.xhtml">AclAllocator</a> *external_allocator)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a> = (external_allocator != <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a>)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a> &amp;&amp; (external_allocator-&gt;<a class="code" href="struct_acl_allocator.xhtml#a66e74c5f7dee07b2c12a032a74798704">alloc</a> != <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a> &amp;&amp; (external_allocator-&gt;<a class="code" href="struct_acl_allocator.xhtml#aabaea8b6911c70fe781173575d0fb70b">free</a> != <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a> &amp;&amp; (external_allocator-&gt;<a class="code" href="struct_acl_allocator.xhtml#a9c565c5aa3682e262737dfbc868a30f0">aligned_alloc</a> != <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a> &amp;&amp; (external_allocator-&gt;<a class="code" href="struct_acl_allocator.xhtml#a7bfd619c8403697c65a2a0178930eb65">aligned_free</a> != <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a> ? AllocatorWrapper(*external_allocator) : AllocatorWrapper(default_allocator);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;cpuinfo::CpuIsaInfo populate_capabilities_flags(<a class="code" href="_acl_types_8h.xhtml#acc22b5786e09c538c1ed7f159388067d">AclTargetCapabilities</a> external_caps)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    cpuinfo::CpuIsaInfo isa_caps;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">// Extract SIMD extension</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    isa_caps.neon = external_caps &amp; <a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca1b3eac60a29d260f0812c83504053a83">AclCpuCapabilitiesNeon</a>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    isa_caps.sve  = external_caps &amp; <a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576caa683d20c4c49278849e62e9389e3cb02">AclCpuCapabilitiesSve</a>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    isa_caps.sve2 = external_caps &amp; <a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca12b31dcd164a65855fe353e5af93dfbe">AclCpuCapabilitiesSve2</a>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// Extract data-type support</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    isa_caps.fp16    = external_caps &amp; <a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca6366782d85e49edfa45cebaa0d525cbe">AclCpuCapabilitiesFp16</a>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    isa_caps.bf16    = external_caps &amp; <a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576cac8e61bbc5ce7797489748601966b82c7">AclCpuCapabilitiesBf16</a>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    isa_caps.svebf16 = isa_caps.bf16;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="comment">// Extract ISA extensions</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    isa_caps.dot      = external_caps &amp; <a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576cacb67f1aa068c3a4c74acced418b71554">AclCpuCapabilitiesDot</a>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    isa_caps.i8mm     = external_caps &amp; <a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576cac48191396e1f7f6014290d0907041059">AclCpuCapabilitiesMmlaInt8</a>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    isa_caps.svef32mm = external_caps &amp; <a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576cafdf0d1756cb03845c3edc4278efb5fad">AclCpuCapabilitiesMmlaFp</a>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> isa_caps;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;CpuCapabilities populate_capabilities(<a class="code" href="_acl_types_8h.xhtml#acc22b5786e09c538c1ed7f159388067d">AclTargetCapabilities</a> external_caps, int32_t max_threads)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    CpuCapabilities caps;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="comment">// Populate capabilities with system information</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    caps.cpu_info = <a class="code" href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a686af658dafc836c66bc29bc8fe6932b">cpuinfo::CpuInfo::build</a>();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">if</span> (external_caps != <a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca04f22edb7b95cd18e1af58634b824749">AclCpuCapabilitiesAuto</a>)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        cpuinfo::CpuIsaInfo <a class="code" href="_n_e_fuse_batch_normalization_kernel_8cpp.xhtml#a1659171e98a705cddffe279eda7c17b8">isa</a>  = populate_capabilities_flags(external_caps);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keyword">auto</span>                cpus = caps.cpu_info.cpus();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        caps.cpu_info = cpuinfo::CpuInfo(<a class="code" href="_n_e_fuse_batch_normalization_kernel_8cpp.xhtml#a1659171e98a705cddffe279eda7c17b8">isa</a>, cpus);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">// Set max number of threads</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">#if defined(BARE_METAL)</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(max_threads);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    caps.max_threads = 1;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(BARE_METAL) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    caps.max_threads = (max_threads &gt; 0) ? max_threads : std::thread::hardware_concurrency();</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(BARE_METAL) */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">return</span> caps;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#ae2c01b127c5c7c81641c2b9f7a872669">  149</a></span>&#160;<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#ae2c01b127c5c7c81641c2b9f7a872669">CpuContext::CpuContext</a>(<span class="keyword">const</span> <a class="code" href="struct_acl_context_options.xhtml">AclContextOptions</a> *options)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    : <a class="code" href="classarm__compute_1_1_i_context.xhtml">IContext</a>(<a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>::Cpu), _allocator(default_allocator), _caps(populate_capabilities(<a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca04f22edb7b95cd18e1af58634b824749">AclCpuCapabilitiesAuto</a>, -1))</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">if</span> (options != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        _allocator = populate_allocator(options-&gt;<a class="code" href="struct_acl_context_options.xhtml#a59ea3ce4c90f7fadd3efd941ea300224">allocator</a>);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        _caps      = populate_capabilities(options-&gt;<a class="code" href="struct_acl_context_options.xhtml#abb94a1222fc5cb627f8d9e517a0a3a83">capabilities</a>, options-&gt;<a class="code" href="struct_acl_context_options.xhtml#a3043ba49e39a241ec88b961eadc300d5">max_compute_units</a>);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;}</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#aab85759ac8bab0b298ad90f022d7283a">  159</a></span>&#160;<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1cpu_1_1_cpu_capabilities.xhtml">CpuCapabilities</a> &amp;<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#aab85759ac8bab0b298ad90f022d7283a">CpuContext::capabilities</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">return</span> _caps;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#ac9cc0f7f08e9e97ccc719770f02221ab">  164</a></span>&#160;<a class="code" href="classarm__compute_1_1_allocator_wrapper.xhtml">AllocatorWrapper</a> &amp;<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#ac9cc0f7f08e9e97ccc719770f02221ab">CpuContext::allocator</a>()</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">return</span> _allocator;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#a2b8dd0571c21159463a0bbed8e6f5204">  169</a></span>&#160;<a class="code" href="classarm__compute_1_1_i_tensor_v2.xhtml">ITensorV2</a> *<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#a2b8dd0571c21159463a0bbed8e6f5204">CpuContext::create_tensor</a>(<span class="keyword">const</span> <a class="code" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> &amp;desc, <span class="keywordtype">bool</span> allocate)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_tensor.xhtml">CpuTensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <span class="keyword">new</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_tensor.xhtml">CpuTensor</a>(<span class="keyword">this</span>, desc);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> != <span class="keyword">nullptr</span> &amp;&amp; allocate)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocate();</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#a483fa42178caa16325fd419956e8b94c">  179</a></span>&#160;<a class="code" href="classarm__compute_1_1_i_queue.xhtml">IQueue</a> *<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#a483fa42178caa16325fd419956e8b94c">CpuContext::create_queue</a>(<span class="keyword">const</span> <a class="code" href="struct_acl_queue_options.xhtml">AclQueueOptions</a> *options)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;{</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_queue.xhtml">CpuQueue</a>(<span class="keyword">this</span>, options);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;} <span class="comment">// namespace cpu</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_v2_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_v2.xhtml">arm_compute::ITensorV2</a></div><div class="ttdoc">Base class specifying the tensor interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_v2_8h_source.xhtml#l00045">ITensorV2.h:45</a></div></div>
<div class="ttc" id="astruct_acl_allocator_xhtml"><div class="ttname"><a href="struct_acl_allocator.xhtml">AclAllocator</a></div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00099">AclTypes.h:99</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_tensor.xhtml">arm_compute::cpu::CpuTensor</a></div><div class="ttdoc">CPU tensor implementation class.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_tensor_8h_source.xhtml#l00036">CpuTensor.h:36</a></div></div>
<div class="ttc" id="astruct_acl_context_options_xhtml_abb94a1222fc5cb627f8d9e517a0a3a83"><div class="ttname"><a href="struct_acl_context_options.xhtml#abb94a1222fc5cb627f8d9e517a0a3a83">AclContextOptions::capabilities</a></div><div class="ttdeci">AclTargetCapabilities capabilities</div><div class="ttdoc">Target capabilities.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00138">AclTypes.h:138</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9a889dbe454aa7d9ed9785d729c6576cafdf0d1756cb03845c3edc4278efb5fad"><div class="ttname"><a href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576cafdf0d1756cb03845c3edc4278efb5fad">AclCpuCapabilitiesMmlaFp</a></div><div class="ttdeci">@ AclCpuCapabilitiesMmlaFp</div><div class="ttdoc">Enable paths that use the mmla float instructions.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00093">AclTypes.h:93</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9a889dbe454aa7d9ed9785d729c6576cacb67f1aa068c3a4c74acced418b71554"><div class="ttname"><a href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576cacb67f1aa068c3a4c74acced418b71554">AclCpuCapabilitiesDot</a></div><div class="ttdeci">@ AclCpuCapabilitiesDot</div><div class="ttdoc">Enable paths that use the udot/sdot instructions.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00091">AclTypes.h:91</a></div></div>
<div class="ttc" id="astruct_acl_allocator_xhtml_a66e74c5f7dee07b2c12a032a74798704"><div class="ttname"><a href="struct_acl_allocator.xhtml#a66e74c5f7dee07b2c12a032a74798704">AclAllocator::alloc</a></div><div class="ttdeci">void *(* alloc)(void *user_data, size_t size)</div><div class="ttdoc">Allocate a block of size bytes of memory.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00108">AclTypes.h:108</a></div></div>
<div class="ttc" id="astruct_acl_allocator_xhtml_a7bfd619c8403697c65a2a0178930eb65"><div class="ttname"><a href="struct_acl_allocator.xhtml#a7bfd619c8403697c65a2a0178930eb65">AclAllocator::aligned_free</a></div><div class="ttdeci">void(* aligned_free)(void *user_data, void *ptr)</div><div class="ttdoc">Allocate a block of size bytes of memory.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00128">AclTypes.h:128</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_ada668c5c47184c0667c0b029d92d3b4f"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_ERROR_ACL(msg)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00032">Log.h:32</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_context_xhtml_a483fa42178caa16325fd419956e8b94c"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#a483fa42178caa16325fd419956e8b94c">arm_compute::cpu::CpuContext::create_queue</a></div><div class="ttdeci">IQueue * create_queue(const AclQueueOptions *options) override</div><div class="ttdoc">Create a queue object.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_context_8cpp_source.xhtml#l00179">CpuContext.cpp:179</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9a889dbe454aa7d9ed9785d729c6576ca12b31dcd164a65855fe353e5af93dfbe"><div class="ttname"><a href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca12b31dcd164a65855fe353e5af93dfbe">AclCpuCapabilitiesSve2</a></div><div class="ttdeci">@ AclCpuCapabilitiesSve2</div><div class="ttdoc">Enable SVE2 optimized paths.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00084">AclTypes.h:84</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9a889dbe454aa7d9ed9785d729c6576cac48191396e1f7f6014290d0907041059"><div class="ttname"><a href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576cac48191396e1f7f6014290d0907041059">AclCpuCapabilitiesMmlaInt8</a></div><div class="ttdeci">@ AclCpuCapabilitiesMmlaInt8</div><div class="ttdoc">Enable paths that use the mmla integer instructions.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00092">AclTypes.h:92</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_queue_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_queue.xhtml">arm_compute::IQueue</a></div><div class="ttdoc">Base class specifying the queue interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_queue_8h_source.xhtml#l00041">IQueue.h:41</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_cpu_capabilities_xhtml"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_cpu_capabilities.xhtml">arm_compute::cpu::CpuCapabilities</a></div><div class="ttdoc">Structure that encodes the CPU capabilities to be used.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_context_8h_source.xhtml#l00036">CpuContext.h:36</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a7b1d0df736739f38994ed29f54cffdf3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">arm_compute::test::validation::is_valid</a></div><div class="ttdeci">bool is_valid</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00173">DirectConv2d.cpp:173</a></div></div>
<div class="ttc" id="astruct_acl_context_options_xhtml"><div class="ttname"><a href="struct_acl_context_options.xhtml">AclContextOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00135">AclTypes.h:135</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml">arm_compute::IContext</a></div><div class="ttdoc">Context interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00051">IContext.h:51</a></div></div>
<div class="ttc" id="a_cpu_tensor_8h_xhtml"><div class="ttname"><a href="_cpu_tensor_8h.xhtml">CpuTensor.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_context_xhtml_a2b8dd0571c21159463a0bbed8e6f5204"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#a2b8dd0571c21159463a0bbed8e6f5204">arm_compute::cpu::CpuContext::create_tensor</a></div><div class="ttdeci">ITensorV2 * create_tensor(const AclTensorDescriptor &amp;desc, bool allocate) override</div><div class="ttdoc">Create a tensor object.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_context_8cpp_source.xhtml#l00169">CpuContext.cpp:169</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpuinfo_1_1_cpu_info_xhtml_a686af658dafc836c66bc29bc8fe6932b"><div class="ttname"><a href="classarm__compute_1_1cpuinfo_1_1_cpu_info.xhtml#a686af658dafc836c66bc29bc8fe6932b">arm_compute::cpuinfo::CpuInfo::build</a></div><div class="ttdeci">static CpuInfo build()</div><div class="ttdoc">CpuInfo builder function from system related information.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_info_8cpp_source.xhtml#l00305">CpuInfo.cpp:305</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9a889dbe454aa7d9ed9785d729c6576ca6366782d85e49edfa45cebaa0d525cbe"><div class="ttname"><a href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca6366782d85e49edfa45cebaa0d525cbe">AclCpuCapabilitiesFp16</a></div><div class="ttdeci">@ AclCpuCapabilitiesFp16</div><div class="ttdoc">Enable float16 data-type support.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00087">AclTypes.h:87</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9a889dbe454aa7d9ed9785d729c6576cac8e61bbc5ce7797489748601966b82c7"><div class="ttname"><a href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576cac8e61bbc5ce7797489748601966b82c7">AclCpuCapabilitiesBf16</a></div><div class="ttdeci">@ AclCpuCapabilitiesBf16</div><div class="ttdoc">Enable bfloat16 data-type support.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00088">AclTypes.h:88</a></div></div>
<div class="ttc" id="astruct_acl_allocator_xhtml_a9c565c5aa3682e262737dfbc868a30f0"><div class="ttname"><a href="struct_acl_allocator.xhtml#a9c565c5aa3682e262737dfbc868a30f0">AclAllocator::aligned_alloc</a></div><div class="ttdeci">void *(* aligned_alloc)(void *user_data, size_t size, size_t alignment)</div><div class="ttdoc">Allocate a block of size bytes of memory.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00122">AclTypes.h:122</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9a889dbe454aa7d9ed9785d729c6576ca04f22edb7b95cd18e1af58634b824749"><div class="ttname"><a href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca04f22edb7b95cd18e1af58634b824749">AclCpuCapabilitiesAuto</a></div><div class="ttdeci">@ AclCpuCapabilitiesAuto</div><div class="ttdoc">Automatic discovery of capabilities.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00080">AclTypes.h:80</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_acc22b5786e09c538c1ed7f159388067d"><div class="ttname"><a href="_acl_types_8h.xhtml#acc22b5786e09c538c1ed7f159388067d">AclTargetCapabilities</a></div><div class="ttdeci">uint64_t AclTargetCapabilities</div><div class="ttdoc">Error codes returned by the public entry-points.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00047">AclTypes.h:47</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_allocator_wrapper_xhtml"><div class="ttname"><a href="classarm__compute_1_1_allocator_wrapper.xhtml">arm_compute::AllocatorWrapper</a></div><div class="ttdoc">Default malloc allocator implementation.</div><div class="ttdef"><b>Definition:</b> <a href="_allocator_wrapper_8h_source.xhtml#l00032">AllocatorWrapper.h:32</a></div></div>
<div class="ttc" id="astruct_acl_allocator_xhtml_aabaea8b6911c70fe781173575d0fb70b"><div class="ttname"><a href="struct_acl_allocator.xhtml#aabaea8b6911c70fe781173575d0fb70b">AclAllocator::free</a></div><div class="ttdeci">void(* free)(void *user_data, void *ptr)</div><div class="ttdoc">Release a block of size bytes of memory.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00114">AclTypes.h:114</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_context_xhtml_aab85759ac8bab0b298ad90f022d7283a"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#aab85759ac8bab0b298ad90f022d7283a">arm_compute::cpu::CpuContext::capabilities</a></div><div class="ttdeci">const CpuCapabilities &amp; capabilities() const</div><div class="ttdoc">Cpu Capabilities accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_context_8cpp_source.xhtml#l00159">CpuContext.cpp:159</a></div></div>
<div class="ttc" id="astruct_acl_tensor_descriptor_xhtml"><div class="ttname"><a href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00192">AclTypes.h:192</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_queue_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_queue.xhtml">arm_compute::cpu::CpuQueue</a></div><div class="ttdoc">CPU queue implementation class.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_queue_8h_source.xhtml#l00036">CpuQueue.h:36</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9a889dbe454aa7d9ed9785d729c6576caa683d20c4c49278849e62e9389e3cb02"><div class="ttname"><a href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576caa683d20c4c49278849e62e9389e3cb02">AclCpuCapabilitiesSve</a></div><div class="ttdeci">@ AclCpuCapabilitiesSve</div><div class="ttdoc">Enable SVE optimized paths.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00083">AclTypes.h:83</a></div></div>
<div class="ttc" id="a_cpu_queue_8h_xhtml"><div class="ttname"><a href="_cpu_queue_8h.xhtml">CpuQueue.h</a></div></div>
<div class="ttc" id="astruct_acl_context_options_xhtml_a59ea3ce4c90f7fadd3efd941ea300224"><div class="ttname"><a href="struct_acl_context_options.xhtml#a59ea3ce4c90f7fadd3efd941ea300224">AclContextOptions::allocator</a></div><div class="ttdeci">AclAllocator * allocator</div><div class="ttdoc">Allocator to be used by all the memory internally.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00143">AclTypes.h:143</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a31488d29805a596498c0234ae392d35d"><div class="ttname"><a href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">arm_compute::Target</a></div><div class="ttdeci">Target</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_context_xhtml_ae2c01b127c5c7c81641c2b9f7a872669"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#ae2c01b127c5c7c81641c2b9f7a872669">arm_compute::cpu::CpuContext::CpuContext</a></div><div class="ttdeci">CpuContext(const AclContextOptions *options)</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_context_8cpp_source.xhtml#l00149">CpuContext.cpp:149</a></div></div>
<div class="ttc" id="astruct_acl_queue_options_xhtml"><div class="ttname"><a href="struct_acl_queue_options.xhtml">AclQueueOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00156">AclTypes.h:156</a></div></div>
<div class="ttc" id="a_c_p_p_types_8h_xhtml"><div class="ttname"><a href="_c_p_p_types_8h.xhtml">CPPTypes.h</a></div></div>
<div class="ttc" id="a_n_e_fuse_batch_normalization_kernel_8cpp_xhtml_a1659171e98a705cddffe279eda7c17b8"><div class="ttname"><a href="_n_e_fuse_batch_normalization_kernel_8cpp.xhtml#a1659171e98a705cddffe279eda7c17b8">isa</a></div><div class="ttdeci">cpuinfo::CpuIsaInfo isa</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00052">NEFuseBatchNormalizationKernel.cpp:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_context_xhtml_ac9cc0f7f08e9e97ccc719770f02221ab"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#ac9cc0f7f08e9e97ccc719770f02221ab">arm_compute::cpu::CpuContext::allocator</a></div><div class="ttdeci">AllocatorWrapper &amp; allocator()</div><div class="ttdoc">Backing memory allocator accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_context_8cpp_source.xhtml#l00164">CpuContext.cpp:164</a></div></div>
<div class="ttc" id="a_cpu_context_8h_xhtml"><div class="ttname"><a href="_cpu_context_8h.xhtml">CpuContext.h</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9a889dbe454aa7d9ed9785d729c6576ca1b3eac60a29d260f0812c83504053a83"><div class="ttname"><a href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca1b3eac60a29d260f0812c83504053a83">AclCpuCapabilitiesNeon</a></div><div class="ttdeci">@ AclCpuCapabilitiesNeon</div><div class="ttdoc">Enable NEON optimized paths.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00082">AclTypes.h:82</a></div></div>
<div class="ttc" id="astruct_acl_context_options_xhtml_a3043ba49e39a241ec88b961eadc300d5"><div class="ttname"><a href="struct_acl_context_options.xhtml#a3043ba49e39a241ec88b961eadc300d5">AclContextOptions::max_compute_units</a></div><div class="ttdeci">int32_t max_compute_units</div><div class="ttdoc">Max compute units that can be used by a queue created from the context.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00141">AclTypes.h:141</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="_cpu_context_8cpp.xhtml">CpuContext.cpp</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:50 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
