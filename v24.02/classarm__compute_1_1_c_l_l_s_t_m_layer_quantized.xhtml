<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLLSTMLayerQuantized Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLLSTMLayerQuantized Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to run <a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a>.  
 <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_l_s_t_m_layer_quantized_8h_source.xhtml">CLLSTMLayerQuantized.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLLSTMLayerQuantized:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized__coll__graph.svg" width="186" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9e382561b8278103570de8550f83e718"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#a9e382561b8278103570de8550f83e718">CLLSTMLayerQuantized</a> (std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt; memory_manager=nullptr)</td></tr>
<tr class="memdesc:a9e382561b8278103570de8550f83e718"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#a9e382561b8278103570de8550f83e718">More...</a><br /></td></tr>
<tr class="separator:a9e382561b8278103570de8550f83e718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab0c733ab7346ae4c2af856e167cad66"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aab0c733ab7346ae4c2af856e167cad66">CLLSTMLayerQuantized</a> (const <a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> &amp;)=delete</td></tr>
<tr class="memdesc:aab0c733ab7346ae4c2af856e167cad66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aab0c733ab7346ae4c2af856e167cad66">More...</a><br /></td></tr>
<tr class="separator:aab0c733ab7346ae4c2af856e167cad66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9afd562eb46197912b68962e90c84185"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#a9afd562eb46197912b68962e90c84185">CLLSTMLayerQuantized</a> (<a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a9afd562eb46197912b68962e90c84185"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#a9afd562eb46197912b68962e90c84185">More...</a><br /></td></tr>
<tr class="separator:a9afd562eb46197912b68962e90c84185"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a763bbaa72074a155be5385a583d0b9f3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#a763bbaa72074a155be5385a583d0b9f3">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> &amp;)=delete</td></tr>
<tr class="memdesc:a763bbaa72074a155be5385a583d0b9f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#a763bbaa72074a155be5385a583d0b9f3">More...</a><br /></td></tr>
<tr class="separator:a763bbaa72074a155be5385a583d0b9f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81d7e9fd8c62419c4c0b75617fe014d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#a81d7e9fd8c62419c4c0b75617fe014d2">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a81d7e9fd8c62419c4c0b75617fe014d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#a81d7e9fd8c62419c4c0b75617fe014d2">More...</a><br /></td></tr>
<tr class="separator:a81d7e9fd8c62419c4c0b75617fe014d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab90e9ae19db4dbc4f316851b03402bfa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#ab90e9ae19db4dbc4f316851b03402bfa">configure</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_input_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_forget_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_cell_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_output_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_input_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_forget_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_cell_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_output_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_gate_bias, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *forget_gate_bias, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *cell_bias, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_gate_bias, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *cell_state_in, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_state_in, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *cell_state_out, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_state_out)</td></tr>
<tr class="memdesc:ab90e9ae19db4dbc4f316851b03402bfa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize function's tensors.  <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#ab90e9ae19db4dbc4f316851b03402bfa">More...</a><br /></td></tr>
<tr class="separator:ab90e9ae19db4dbc4f316851b03402bfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d0c948bab198956e8b0c4f0012a06d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#a6d0c948bab198956e8b0c4f0012a06d4">configure</a> (const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;compile_context, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_input_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_forget_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_cell_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_output_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_input_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_forget_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_cell_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_output_weights, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_gate_bias, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *forget_gate_bias, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *cell_bias, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_gate_bias, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *cell_state_in, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_state_in, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *cell_state_out, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_state_out)</td></tr>
<tr class="memdesc:a6d0c948bab198956e8b0c4f0012a06d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize function's tensors.  <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#a6d0c948bab198956e8b0c4f0012a06d4">More...</a><br /></td></tr>
<tr class="separator:a6d0c948bab198956e8b0c4f0012a06d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717410afd0be936c6213a63c8005fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a> () override</td></tr>
<tr class="memdesc:ad1717410afd0be936c6213a63c8005fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#ad1717410afd0be936c6213a63c8005fb">More...</a><br /></td></tr>
<tr class="separator:ad1717410afd0be936c6213a63c8005fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9b93ef660fc3c5b4b19d3fc7b891b77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">prepare</a> () override</td></tr>
<tr class="memdesc:aa9b93ef660fc3c5b4b19d3fc7b891b77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">More...</a><br /></td></tr>
<tr class="separator:aa9b93ef660fc3c5b4b19d3fc7b891b77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aea08b58ba60ca803b947023ce07c5f79"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aea08b58ba60ca803b947023ce07c5f79">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_input_weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_forget_weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_cell_weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_output_weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_input_weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_forget_weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_cell_weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_output_weights, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_gate_bias, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *forget_gate_bias, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_bias, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output_gate_bias, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_state_in, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output_state_in, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_state_out, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output_state_out)</td></tr>
<tr class="memdesc:aea08b58ba60ca803b947023ce07c5f79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a>.  <a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aea08b58ba60ca803b947023ce07c5f79">More...</a><br /></td></tr>
<tr class="separator:aea08b58ba60ca803b947023ce07c5f79"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to run <a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a>. </p>
<p>This function calls the following CL functions/kernels:</p>
<ol type="1">
<li><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml">CLGEMMLowpMatrixMultiplyCore</a> Quantized matrix multiplication core. Accumulators are 32-bit integers</li>
<li><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage.xhtml">CLGEMMLowpOutputStage</a> Convert 32-bit integers into QSYMM16</li>
<li><a class="el" href="classarm__compute_1_1_c_l_transpose.xhtml">CLTranspose</a> Matrix transpose</li>
<li><a class="el" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml">CLConcatenateLayer</a> <a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> concatenation</li>
<li><a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml">CLActivationLayer</a> Activation functions (tanh and logistic)</li>
<li><a class="el" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml">CLArithmeticAddition</a> Elementwise addition</li>
<li><a class="el" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml">CLPixelWiseMultiplication</a> Elementwise multiplication</li>
<li><a class="el" href="classarm__compute_1_1_c_l_slice.xhtml">CLSlice</a> <a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> slicing</li>
<li><a class="el" href="classarm__compute_1_1_c_l_dequantization_layer.xhtml">CLDequantizationLayer</a> Dequantize into float</li>
<li><a class="el" href="classarm__compute_1_1_c_l_quantization_layer.xhtml">CLQuantizationLayer</a> Quantize from float </li>
</ol>

<p class="definition">Definition at line <a class="el" href="_c_l_l_s_t_m_layer_quantized_8h_source.xhtml#l00060">60</a> of file <a class="el" href="_c_l_l_s_t_m_layer_quantized_8h_source.xhtml">CLLSTMLayerQuantized.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9e382561b8278103570de8550f83e718"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e382561b8278103570de8550f83e718">&#9670;&nbsp;</a></span>CLLSTMLayerQuantized() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt;&#160;</td>
          <td class="paramname"><em>memory_manager</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml">CLLSTMLayerQuantized.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    : _memory_group(std::move(memory_manager)),</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      _gemmlowp(),</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      _output_stage(),</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      _transpose_weights(),</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      _concat_input_weights(),</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      _concat_recurrent_weights(),</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      _concat_weights(),</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      _concat_inputs(),</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      _concat_bias(),</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      _sigmoid_forget_gate(),</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      _sigmoid_input_gate(),</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      _sigmoid_output_gate(),</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      _tanh_modulation_gate(),</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      _tanh_output_state(),</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      _add_cell_state_tmps(),</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      _add2(),</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      _mul_forget_gate_cell_state(),</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      _mul_input_gate_input_mod_gate(),</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      _mul_output_state_tmp_output_gate(),</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      _slice_input_tensor(),</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      _slice_forget_tensor(),</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      _slice_cell_tensor(),</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      _slice_output_tensor(),</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      _dequantize(),</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      _quantize(),</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      _input_to_input_weights(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      _input_to_forget_weights(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      _input_to_cell_weights(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      _input_to_output_weights(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      _recurrent_to_input_weights(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      _recurrent_to_forget_weights(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      _recurrent_to_cell_weights(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      _recurrent_to_output_weights(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      _input_gate_bias(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      _forget_gate_bias(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      _cell_bias(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      _output_gate_bias(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      _recurrent_weights(),</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      _input_weights(),</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      _weights(),</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      _input(),</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      _weights_transposed(),</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      _output_highp(),</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      _output_lowp(),</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      _bias(),</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      _forget_gate_input(),</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      _input_gate_input(),</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      _output_gate_input(),</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      _input_modulation_gate_input(),</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      _forget_gate_output(),</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      _input_gate_output(),</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      _output_gate_output(),</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      _input_modulation_gate_output(),</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      _cell_state_tmp1(),</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      _cell_state_tmp2(),</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      _output_state_tmp(),</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      _output_state_out_symm(),</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      _output_state_out_f32(),</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      _is_prepared(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aab0c733ab7346ae4c2af856e167cad66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab0c733ab7346ae4c2af856e167cad66">&#9670;&nbsp;</a></span>CLLSTMLayerQuantized() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a9afd562eb46197912b68962e90c84185"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9afd562eb46197912b68962e90c84185">&#9670;&nbsp;</a></span>CLLSTMLayerQuantized() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6d0c948bab198956e8b0c4f0012a06d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d0c948bab198956e8b0c4f0012a06d4">&#9670;&nbsp;</a></span>configure() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;&#160;</td>
          <td class="paramname"><em>compile_context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input_to_input_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input_to_forget_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input_to_cell_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input_to_output_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_input_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_forget_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_cell_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_output_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input_gate_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>forget_gate_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>cell_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output_gate_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>cell_state_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output_state_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>cell_state_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output_state_out</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize function's tensors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">compile_context</td><td>The compile context to be used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor. Input is a 2D tensor with dimensions [input_size, batch_size]. Data types supported: QASYMM8. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_input_weights</td><td>2D weights tensor with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_forget_weights</td><td>2D weights tensor with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_cell_weights</td><td>2D weights tensor with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_output_weights</td><td>2D weights tensor with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_input_weights</td><td>2D weights tensor with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_forget_weights</td><td>2D weights tensor with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_cell_weights</td><td>2D weights tensor with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_output_weights</td><td>2D weights tensor with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_gate_bias</td><td>1D weights tensor with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">forget_gate_bias</td><td>1D weights tensor with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cell_bias</td><td>1D weights tensor with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output_gate_bias</td><td>1D weights tensor with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cell_state_in</td><td>2D tensor with dimensions [output_size, batch_size]. Data type supported: QSYMM16. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output_state_in</td><td>2D tensor with dimensions [output_size, batch_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cell_state_out</td><td>Destination tensor. Output is a 2D tensor with dimensions [output_size, batch_size]. Data type supported: QSYMM16. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output_state_out</td><td>Destination tensor. Output is a 2D tensor with dimensions [output_size, batch_size].Data types supported: Same as <code>input</code>. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00135">135</a> of file <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml">CLLSTMLayerQuantized.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>,</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>,</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>, cell_bias, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>, cell_state_in, output_state_in,</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                 cell_state_out, output_state_out);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>,</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                           <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>,</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                           <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>,</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                           cell_bias, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>, cell_state_in, output_state_in, cell_state_out,</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                           output_state_out);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aea08b58ba60ca803b947023ce07c5f79">CLLSTMLayerQuantized::validate</a>(</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>-&gt;info(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>-&gt;info(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>-&gt;info(),</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>-&gt;info(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>-&gt;info(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>-&gt;info(),</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>-&gt;info(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>-&gt;info(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>-&gt;info(),</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>-&gt;info(), cell_bias-&gt;info(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>-&gt;info(), cell_state_in-&gt;info(),</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        output_state_in-&gt;info(), cell_state_out-&gt;info(), output_state_out-&gt;info()));</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a>  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;dimension(0);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> batch_size  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;dimension(1);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>-&gt;info()-&gt;dimension(1);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keyword">const</span> QuantizationInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>-&gt;info()-&gt;quantization_info(); <span class="comment">// Weights quantization</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(*cell_state_out-&gt;info(),</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                       TensorInfo(TensorShape(batch_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a66b9829d1b2750c8f7bd6dad961cdc62">qsymm_4</a>));</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(*output_state_out-&gt;info(),</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                       TensorInfo(TensorShape(batch_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>));</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    _input_to_input_weights      = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    _input_to_forget_weights     = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    _input_to_cell_weights       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    _input_to_output_weights     = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    _recurrent_to_input_weights  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    _recurrent_to_forget_weights = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    _recurrent_to_cell_weights   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    _recurrent_to_output_weights = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    _input_gate_bias             = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    _forget_gate_bias            = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    _cell_bias                   = cell_bias;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    _output_gate_bias            = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">// Weights concatenation</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    std::vector&lt;const ICLTensor *&gt; inputs_weights_vector;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    inputs_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    inputs_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    inputs_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    inputs_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    std::vector&lt;const ICLTensor *&gt; recurrent_weights_vector;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    recurrent_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    recurrent_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    recurrent_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    recurrent_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    _input_weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a>, 4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>));</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    _concat_input_weights.<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#afbce8280ab870092192a51c90d5abcbd">configure</a>(compile_context, inputs_weights_vector, &amp;_input_weights, <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    _recurrent_weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, 4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>));</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    _concat_recurrent_weights.<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#afbce8280ab870092192a51c90d5abcbd">configure</a>(compile_context, recurrent_weights_vector, &amp;_recurrent_weights, <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    std::vector&lt;const ICLTensor *&gt; weights_vector;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    weights_vector.emplace_back(&amp;_recurrent_weights);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    weights_vector.emplace_back(&amp;_input_weights);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    _weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a> + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a>, 4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>));</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    _concat_weights.<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#afbce8280ab870092192a51c90d5abcbd">configure</a>(compile_context, weights_vector, &amp;_weights, <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    _transpose_weights.<a class="code" href="classarm__compute_1_1_c_l_transpose.xhtml#a074e10cfb217e657b9e81adeca2abc68">configure</a>(compile_context, &amp;_weights, &amp;_weights_transposed);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="comment">// Input concatenation</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    std::vector&lt;const ICLTensor *&gt; input_vector;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    input_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    input_vector.emplace_back(output_state_in);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_input);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    _input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a> + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a>, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>));</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    _concat_inputs.<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#afbce8280ab870092192a51c90d5abcbd">configure</a>(compile_context, input_vector, &amp;_input, <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="comment">// Bias concatenation</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    std::vector&lt;const ICLTensor *&gt; bias_vector;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    bias_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    bias_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    bias_vector.emplace_back(cell_bias);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    bias_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    _bias.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(TensorInfo(TensorShape(4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    _concat_bias.<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#afbce8280ab870092192a51c90d5abcbd">configure</a>(compile_context, bias_vector, &amp;_bias, <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="comment">// Invert the offset for gemmlowp</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    _input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a78839e7861ba8ffed52ca55da2745761">set_quantization_info</a>(QuantizationInfo(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>, -<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>));</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    _weights_transposed.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a78839e7861ba8ffed52ca55da2745761">set_quantization_info</a>(</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        QuantizationInfo(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>, -<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>));</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="comment">// Run gemmlowp</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_output_highp);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    _output_highp.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(TensorInfo(TensorShape(4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    _gemmlowp.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a0ae54876c8c3394f2e207f6b884f2b58">configure</a>(compile_context, &amp;_input, &amp;_weights_transposed, <span class="keyword">nullptr</span>, &amp;_output_highp);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    _input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="comment">// Set the offset back</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    _input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a78839e7861ba8ffed52ca55da2745761">set_quantization_info</a>(QuantizationInfo(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>));</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    _weights_transposed.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a78839e7861ba8ffed52ca55da2745761">set_quantization_info</a>(</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        QuantizationInfo(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>));</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="comment">// multiplier = (input_scale * weights_scale) / output_scale (2 ^ (-12))</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    _output_lowp.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(TensorInfo(_output_highp.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a>));</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> multiplier        = 4096.f * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordtype">int</span>         output_multiplier = 0;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordtype">int</span>         output_shift      = 0;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(multiplier, &amp;output_multiplier, &amp;output_shift);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_output_lowp);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    GEMMLowpOutputStageInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>{};</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.type                = <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.gemmlowp_multiplier = output_multiplier;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.gemmlowp_shift      = output_shift;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.output_data_type    = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    _output_stage.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage.xhtml#a8be556a216eb9d6b0e9551493043e3d3">configure</a>(compile_context, &amp;_output_highp, &amp;_bias, &amp;_output_lowp, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    _output_highp.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    _bias.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="comment">// Get the gate tensors</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keywordflow">if</span> (batch_size &gt; 1)</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_input_gate_input);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        _slice_input_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ae883a7cb96f6111b0e8bf3a64842c438">configure</a>(compile_context, &amp;_output_lowp, &amp;_input_gate_input, {0, 0},</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                                      {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size});</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_forget_gate_input);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        _slice_forget_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ae883a7cb96f6111b0e8bf3a64842c438">configure</a>(compile_context, &amp;_output_lowp, &amp;_forget_gate_input, {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, 0},</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                       {2 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size});</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_input_modulation_gate_input);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        _slice_cell_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ae883a7cb96f6111b0e8bf3a64842c438">configure</a>(compile_context, &amp;_output_lowp, &amp;_input_modulation_gate_input,</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                                     {2 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, 0}, {3 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size});</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_output_gate_input);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        _slice_output_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ae883a7cb96f6111b0e8bf3a64842c438">configure</a>(compile_context, &amp;_output_lowp, &amp;_output_gate_input, {3 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, 0},</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                       {4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size});</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        _output_lowp.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    }</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    {</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_input_gate_input);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        _slice_input_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ae883a7cb96f6111b0e8bf3a64842c438">configure</a>(compile_context, &amp;_output_lowp, &amp;_input_gate_input, {0}, {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>});</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_forget_gate_input);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        _slice_forget_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ae883a7cb96f6111b0e8bf3a64842c438">configure</a>(compile_context, &amp;_output_lowp, &amp;_forget_gate_input, {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>},</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                       {2 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>});</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_input_modulation_gate_input);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        _slice_cell_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ae883a7cb96f6111b0e8bf3a64842c438">configure</a>(compile_context, &amp;_output_lowp, &amp;_input_modulation_gate_input, {2 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>},</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                                     {3 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>});</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_output_gate_input);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        _slice_output_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ae883a7cb96f6111b0e8bf3a64842c438">configure</a>(compile_context, &amp;_output_lowp, &amp;_output_gate_input, {3 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>},</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                                       {4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>});</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        _output_lowp.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="comment">// Forget gate</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_forget_gate_output);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    _forget_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        TensorInfo(_forget_gate_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0));</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    _sigmoid_forget_gate.<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#a239fea32ba46d038ba350dba58026c45">configure</a>(compile_context, &amp;_forget_gate_input, &amp;_forget_gate_output,</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                                   ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC));</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    _forget_gate_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="comment">// Input gate</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_input_gate_output);</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    _input_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        TensorInfo(_input_gate_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0));</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    _sigmoid_input_gate.<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#a239fea32ba46d038ba350dba58026c45">configure</a>(compile_context, &amp;_input_gate_input, &amp;_input_gate_output,</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                  ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC));</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    _input_gate_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160; </div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="comment">// Input modulation gate equation</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_input_modulation_gate_output);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    _input_modulation_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        TensorInfo(_input_modulation_gate_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0));</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    _tanh_modulation_gate.<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#a239fea32ba46d038ba350dba58026c45">configure</a>(compile_context, &amp;_input_modulation_gate_input, &amp;_input_modulation_gate_output,</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                                    ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH, 1.0f, 1.0f));</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    _input_modulation_gate_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160; </div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="comment">// Output gate</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_output_gate_output);</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    _output_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        TensorInfo(_output_gate_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0));</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    _sigmoid_output_gate.<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#a239fea32ba46d038ba350dba58026c45">configure</a>(compile_context, &amp;_output_gate_input, &amp;_output_gate_output,</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                                   ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC));</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    _output_gate_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="comment">// Long term memory</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_cell_state_tmp1);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    _cell_state_tmp1.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        TensorInfo(_forget_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a66b9829d1b2750c8f7bd6dad961cdc62">qsymm_4</a>));</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    _mul_forget_gate_cell_state.<a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#acfd5a4c9ff5fca09c047124ccc910c3b">configure</a>(compile_context, &amp;_forget_gate_output, cell_state_in, &amp;_cell_state_tmp1, 1,</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                                          <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    _forget_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_cell_state_tmp2);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    _cell_state_tmp2.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        TensorInfo(_input_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a66b9829d1b2750c8f7bd6dad961cdc62">qsymm_4</a>));</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    _mul_input_gate_input_mod_gate.<a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#acfd5a4c9ff5fca09c047124ccc910c3b">configure</a>(compile_context, &amp;_input_gate_output, &amp;_input_modulation_gate_output,</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                                             &amp;_cell_state_tmp2, 1, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    _input_modulation_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    _input_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160; </div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    _add_cell_state_tmps.<a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml#ab511d21db900edbc211d24bc77901b73">configure</a>(compile_context, &amp;_cell_state_tmp1, &amp;_cell_state_tmp2, cell_state_out,</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                                   <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    _cell_state_tmp1.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    _cell_state_tmp2.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160; </div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="comment">// Short term memory</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_output_state_tmp);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    _output_state_tmp.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        TensorInfo(cell_state_out-&gt;info()-&gt;tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0));</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    _tanh_output_state.<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#a239fea32ba46d038ba350dba58026c45">configure</a>(compile_context, cell_state_out, &amp;_output_state_tmp,</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                                 ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH, 1.0f, 1.0f));</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_output_state_out_symm);</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    _output_state_out_symm.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        TensorInfo(_output_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0));</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    _mul_output_state_tmp_output_gate.<a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#acfd5a4c9ff5fca09c047124ccc910c3b">configure</a>(compile_context, &amp;_output_state_tmp, &amp;_output_gate_output,</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                                                &amp;_output_state_out_symm, 1, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>,</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                                                <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>);</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    _output_gate_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    _output_state_tmp.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="comment">// Requantize the output state from QSYMM16 to QASYMM8</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_output_state_out_f32);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    _output_state_out_f32.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        TensorInfo(_output_state_out_symm.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>));</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    _dequantize.<a class="code" href="classarm__compute_1_1_c_l_dequantization_layer.xhtml#a074e10cfb217e657b9e81adeca2abc68">configure</a>(compile_context, &amp;_output_state_out_symm, &amp;_output_state_out_f32);</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    _output_state_out_symm.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160; </div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    _quantize.<a class="code" href="classarm__compute_1_1_c_l_quantization_layer.xhtml#a074e10cfb217e657b9e81adeca2abc68">configure</a>(compile_context, &amp;_output_state_out_f32, output_state_out);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    _output_state_out_f32.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00131">CLTensorAllocator::allocate()</a>, <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor::allocator()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00035">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="_auto_configuration_8h_source.xhtml#l00043">arm_compute::auto_init_if_empty()</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00043">arm_compute::quantization::calculate_quantized_multiplier()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_transpose_8cpp_source.xhtml#l00047">CLTranspose::configure()</a>, <a class="el" href="_c_l_slice_8cpp_source.xhtml#l00094">CLSlice::configure()</a>, <a class="el" href="_c_l_dequantization_layer_8cpp_source.xhtml#l00048">CLDequantizationLayer::configure()</a>, <a class="el" href="_c_l_quantization_layer_8cpp_source.xhtml#l00046">CLQuantizationLayer::configure()</a>, <a class="el" href="_c_l_activation_layer_8cpp_source.xhtml#l00053">CLActivationLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00052">CLArithmeticAddition::configure()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00053">CLConcatenateLayer::configure()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00051">CLPixelWiseMultiplication::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00057">CLGEMMLowpOutputStage::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00066">CLGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00481">arm_compute::test::validation::forget_gate_bias</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00041">CLTensor::info()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator::init()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00480">arm_compute::test::validation::input_gate_bias</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00458">arm_compute::test::validation::input_size</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00474">arm_compute::test::validation::input_to_cell_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00473">arm_compute::test::validation::input_to_forget_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00472">arm_compute::test::validation::input_to_input_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00475">arm_compute::test::validation::input_to_output_weights</a>, <a class="el" href="_memory_group_8h_source.xhtml#l00076">MemoryGroup::manage()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00063">UniformQuantizationInfo::offset</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00483">arm_compute::test::validation::output_gate_bias</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00459">arm_compute::test::validation::output_size</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">arm_compute::test::validation::qasymm()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::QASYMM8</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">arm_compute::QSYMM16</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">arm_compute::test::validation::qsymm_3()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a66b9829d1b2750c8f7bd6dad961cdc62">arm_compute::test::validation::qsymm_4()</a>, <a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::QUANTIZE_DOWN_FIXEDPOINT</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">arm_compute::test::validation::qweights()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00478">arm_compute::test::validation::recurrent_to_cell_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00477">arm_compute::test::validation::recurrent_to_forget_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00476">arm_compute::test::validation::recurrent_to_input_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00479">arm_compute::test::validation::recurrent_to_output_weights</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::SATURATE</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00062">UniformQuantizationInfo::scale</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00398">TensorInfo::set_quantization_info()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00245">TensorInfo::tensor_shape()</a>, <a class="el" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">arm_compute::TO_ZERO</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00140">QuantizationInfo::uniform()</a>, and <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00395">CLLSTMLayerQuantized::validate()</a>.</p>

</div>
</div>
<a id="ab90e9ae19db4dbc4f316851b03402bfa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab90e9ae19db4dbc4f316851b03402bfa">&#9670;&nbsp;</a></span>configure() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input_to_input_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input_to_forget_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input_to_cell_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input_to_output_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_input_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_forget_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_cell_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_output_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input_gate_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>forget_gate_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>cell_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output_gate_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>cell_state_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output_state_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>cell_state_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output_state_out</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize function's tensors. </p>
<p>Valid data layouts:</p><ul>
<li>All</li>
</ul>
<p>Valid data type configurations: </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadLeft">src0 - src8 </th><th class="markdownTableHeadLeft">src9 - src12 </th><th class="markdownTableHeadLeft">src13 </th><th class="markdownTableHeadLeft">src14 </th><th class="markdownTableHeadLeft">dst0 </th><th class="markdownTableHeadLeft">dst1  </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QSYMM16 </td><td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">QSYMM16 </td><td class="markdownTableBodyLeft">QASYMM8  </td></tr>
</table>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor. Input is a 2D tensor with dimensions [input_size, batch_size]. Data types supported: QASYMM8. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_input_weights</td><td>2D weights tensor with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_forget_weights</td><td>2D weights tensor with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_cell_weights</td><td>2D weights tensor with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_output_weights</td><td>2D weights tensor with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_input_weights</td><td>2D weights tensor with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_forget_weights</td><td>2D weights tensor with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_cell_weights</td><td>2D weights tensor with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_output_weights</td><td>2D weights tensor with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_gate_bias</td><td>1D weights tensor with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">forget_gate_bias</td><td>1D weights tensor with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cell_bias</td><td>1D weights tensor with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output_gate_bias</td><td>1D weights tensor with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cell_state_in</td><td>2D tensor with dimensions [output_size, batch_size]. Data type supported: QSYMM16. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output_state_in</td><td>2D tensor with dimensions [output_size, batch_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cell_state_out</td><td>Destination tensor. Output is a 2D tensor with dimensions [output_size, batch_size]. Data type supported: QSYMM16. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output_state_out</td><td>Destination tensor. Output is a 2D tensor with dimensions [output_size, batch_size].Data types supported: Same as <code>input</code>. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml">CLLSTMLayerQuantized.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;{</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#ab90e9ae19db4dbc4f316851b03402bfa">configure</a>(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().get_compile_context(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>,</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>,</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>, cell_bias,</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>, cell_state_in, output_state_in, cell_state_out, output_state_out);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00481">arm_compute::test::validation::forget_gate_bias</a>, <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00041">CLKernelLibrary::get()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00480">arm_compute::test::validation::input_gate_bias</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00474">arm_compute::test::validation::input_to_cell_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00473">arm_compute::test::validation::input_to_forget_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00472">arm_compute::test::validation::input_to_input_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00475">arm_compute::test::validation::input_to_output_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00483">arm_compute::test::validation::output_gate_bias</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00478">arm_compute::test::validation::recurrent_to_cell_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00477">arm_compute::test::validation::recurrent_to_forget_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00476">arm_compute::test::validation::recurrent_to_input_weights</a>, and <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00479">arm_compute::test::validation::recurrent_to_output_weights</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00076">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a81d7e9fd8c62419c4c0b75617fe014d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81d7e9fd8c62419c4c0b75617fe014d2">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move assignment operator. </p>

</div>
</div>
<a id="a763bbaa72074a155be5385a583d0b9f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a763bbaa72074a155be5385a583d0b9f3">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="aa9b93ef660fc3c5b4b19d3fc7b891b77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9b93ef660fc3c5b4b19d3fc7b891b77">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepare the function for executing. </p>
<p>Any one off pre-processing step required by the function is handled here</p>
<dl class="section note"><dt>Note</dt><dd>Prepare stage might not need all the function's buffers' backing memory to be available in order to execute </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00718">718</a> of file <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml">CLLSTMLayerQuantized.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;{</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    <span class="keywordflow">if</span> (!_is_prepared)</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    {</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        _input_weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        _concat_input_weights.<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160; </div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        _input_to_input_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        _input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        _input_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        _input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160; </div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        _recurrent_weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        _concat_recurrent_weights.<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        _recurrent_to_input_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        _recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        _recurrent_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        _recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160; </div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        _weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;        _concat_weights.<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160; </div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        _input_weights.<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        _input_weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">free</a>();</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        _recurrent_weights.<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        _recurrent_weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">free</a>();</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160; </div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;        _weights_transposed.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        _transpose_weights.<a class="code" href="classarm__compute_1_1_c_l_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160; </div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        _weights.<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;        _weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">free</a>();</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160; </div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        _bias.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        _concat_bias.<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        _input_gate_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;        _forget_gate_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        _cell_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;        _output_gate_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160; </div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;        _is_prepared = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    }</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00131">CLTensorAllocator::allocate()</a>, <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor::allocator()</a>, <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00163">CLTensorAllocator::free()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00167">ITensor::mark_as_unused()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_transpose_8cpp_source.xhtml#l00066">CLTranspose::run()</a>, and <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00088">CLConcatenateLayer::run()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00671">CLLSTMLayerQuantized::run()</a>.</p>

</div>
</div>
<a id="ad1717410afd0be936c6213a63c8005fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1717410afd0be936c6213a63c8005fb">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<p>For CPU kernels:</p><ul>
<li>Multi-threading is used for the kernels which are parallelisable.</li>
<li>By default std::thread::hardware_concurrency() threads are used.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler::set_num_threads()</a> can be used to manually set the number of threads</dd></dl>
<p>For OpenCL kernels:</p><ul>
<li>All the kernels are enqueued on the queue associated with <a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" title="Provides global access to a CL context and command queue.">CLScheduler</a>.</li>
<li>The queue is then flushed.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>The function will not block until the kernels are executed. It is the user's responsibility to wait. </dd>
<dd>
Will call <a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77" title="Prepare the function for executing.">prepare()</a> on first run if hasn't been done </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_function.xhtml#a18954417d3124a8095783ea13dc6d00b">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00671">671</a> of file <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml">CLLSTMLayerQuantized.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;{</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">prepare</a>();</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160; </div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="comment">// Acquire all the temporaries</span></div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    MemoryGroupResourceScope scope_mg(_memory_group);</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160; </div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    <span class="comment">// Concat and transpose the input</span></div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    _concat_inputs.<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160; </div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <span class="comment">// Run gemmlowp</span></div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    _gemmlowp.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    _output_stage.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160; </div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    <span class="comment">// Slice the results</span></div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    _slice_input_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    _slice_forget_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    _slice_cell_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    _slice_output_tensor.<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160; </div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <span class="comment">// Gates</span></div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <span class="comment">// Forget gate</span></div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    _sigmoid_forget_gate.<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160; </div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    <span class="comment">// Input gate</span></div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    _sigmoid_input_gate.<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160; </div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="comment">// Input modulation gate</span></div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    _tanh_modulation_gate.<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160; </div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    <span class="comment">// Output gate</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    _sigmoid_output_gate.<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160; </div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <span class="comment">// Cell state (long term memory)</span></div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    _mul_forget_gate_cell_state.<a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    _mul_input_gate_input_mod_gate.<a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    _add_cell_state_tmps.<a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160; </div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    <span class="comment">// Output state (short term memory)</span></div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    _tanh_output_state.<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    _mul_output_state_tmp_output_gate.<a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160; </div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    <span class="comment">// Requantize output state from QSYMM16 to QASYMM8</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    _dequantize.<a class="code" href="classarm__compute_1_1_c_l_dequantization_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    _quantize.<a class="code" href="classarm__compute_1_1_c_l_quantization_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00718">CLLSTMLayerQuantized::prepare()</a>, <a class="el" href="_c_l_dequantization_layer_8cpp_source.xhtml#l00070">CLDequantizationLayer::run()</a>, <a class="el" href="_c_l_quantization_layer_8cpp_source.xhtml#l00065">CLQuantizationLayer::run()</a>, <a class="el" href="_c_l_activation_layer_8cpp_source.xhtml#l00078">CLActivationLayer::run()</a>, <a class="el" href="_c_l_slice_8cpp_source.xhtml#l00111">CLSlice::run()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00088">CLConcatenateLayer::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00091">CLGEMMLowpOutputStage::run()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00091">CLPixelWiseMultiplication::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00112">CLGEMMLowpMatrixMultiplyCore::run()</a>, and <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00081">CLArithmeticAddition::run()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00076">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="aea08b58ba60ca803b947023ce07c5f79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea08b58ba60ca803b947023ce07c5f79">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input_to_input_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input_to_forget_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input_to_cell_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input_to_output_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_input_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_forget_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_cell_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>recurrent_to_output_weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input_gate_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>forget_gate_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>cell_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output_gate_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>cell_state_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output_state_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>cell_state_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output_state_out</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor info. Input is a 2D tensor info with dimensions [input_size, batch_size]. Data types supported: QASYMM8. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_input_weights</td><td>2D weights tensor info with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_forget_weights</td><td>2D weights tensor info with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_cell_weights</td><td>2D weights tensor info with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_to_output_weights</td><td>2D weights tensor info with dimensions [input_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_input_weights</td><td>2D weights tensor info with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_forget_weights</td><td>2D weights tensor info with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_cell_weights</td><td>2D weights tensor info with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">recurrent_to_output_weights</td><td>2D weights tensor info with dimensions [output_size, output_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_gate_bias</td><td>1D weights tensor info with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">forget_gate_bias</td><td>1D weights tensor info with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cell_bias</td><td>1D weights tensor info with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output_gate_bias</td><td>1D weights tensor info with dimensions [output_size]. Data type supported: S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cell_state_in</td><td>2D tensor info with dimensions [output_size, batch_size]. Data type supported: QSYMM16. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output_state_in</td><td>2D tensor info with dimensions [output_size, batch_size]. Data type supported: Same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cell_state_out</td><td>Destination tensor info. Output is a 2D tensor info with dimensions [output_size, batch_size]. Data type supported: QSYMM16. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output_state_out</td><td>Destination tensor info. Output is a 2D tensor info with dimensions [output_size, batch_size].Data types supported: Same as <code>input</code>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00395">395</a> of file <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml">CLLSTMLayerQuantized.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;{</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>,</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>,</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>, cell_bias, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>, cell_state_in, output_state_in, cell_state_out,</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        output_state_out);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aef783de4ec01874dbec6054a5868aea2">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160; </div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a>  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;dimension(0);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> batch_size  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;dimension(1);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>-&gt;dimension(1);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160; </div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <span class="comment">// Dimensionality checks</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;num_dimensions() &gt; 2);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>-&gt;num_dimensions() &gt; 2);</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>-&gt;num_dimensions() &gt; 1);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(output_state_in-&gt;num_dimensions() &gt; 2);</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160; </div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    TensorInfo input_weights_info(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>-&gt;clone()</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                                      -&gt;set_tensor_shape(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>))</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                                      .set_data_type(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>));</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    TensorInfo recurrent_weights_info(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>-&gt;clone()</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                                          -&gt;set_tensor_shape(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>))</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                                          .set_data_type(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>));</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    TensorInfo bias_info(</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>-&gt;clone()-&gt;set_tensor_shape(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>)).set_data_type(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    TensorInfo output_state_info(cell_state_in-&gt;clone()</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                                     -&gt;set_tensor_shape(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size))</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                     .set_data_type(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>)</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                                     .set_quantization_info(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>));</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    TensorInfo cell_state_info(cell_state_in-&gt;clone()</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                                   -&gt;set_tensor_shape(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size))</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                                   .set_data_type(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>)</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                                   .set_quantization_info(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a66b9829d1b2750c8f7bd6dad961cdc62">qsymm_4</a>));</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160; </div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="comment">// Shape checks</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(&amp;input_weights_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>,</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                                                   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>);</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(&amp;recurrent_weights_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>,</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                                                   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>,</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                                                   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>);</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(&amp;bias_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>, cell_bias,</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                                                   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>);</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(&amp;cell_state_info, cell_state_in);</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(&amp;output_state_info, output_state_in);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160; </div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <span class="comment">// Data type checks</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;input_weights_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>,</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                                                       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>,</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                                                       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>);</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;recurrent_weights_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>,</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                                                       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>,</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                                                       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>);</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;bias_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>, cell_bias,</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                                                       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;cell_state_info, cell_state_in);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;output_state_info, output_state_in);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160; </div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="comment">// Quantization checks</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>,</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                                                              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>);</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>,</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                                                              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>);</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(&amp;cell_state_info, cell_state_in);</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(&amp;output_state_info, output_state_in);</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160; </div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <span class="comment">// Validate internal functions</span></div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="comment">// _concat_input_weights</span></div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    std::vector&lt;const ITensorInfo *&gt; inputs_weights_vector;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    inputs_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>);</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    inputs_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>);</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    inputs_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>);</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    inputs_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="keyword">const</span> QuantizationInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">input_to_input_weights</a>-&gt;quantization_info(); <span class="comment">// Weights quantization</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="keyword">const</span> TensorInfo       input_weights(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a>, 4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>);</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#aed4107f4b989a0724c349d8e24cfe2b2">CLConcatenateLayer::validate</a>(inputs_weights_vector, &amp;input_weights, <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>));</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160; </div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="comment">// _concat_recurrent_weights</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    std::vector&lt;const ITensorInfo *&gt; recurrent_weights_vector;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    recurrent_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">recurrent_to_input_weights</a>);</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    recurrent_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>);</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    recurrent_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>);</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    recurrent_weights_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>);</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="keyword">const</span> TensorInfo recurrent_weights(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, 4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>);</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#aed4107f4b989a0724c349d8e24cfe2b2">CLConcatenateLayer::validate</a>(recurrent_weights_vector, &amp;recurrent_weights, <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>));</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160; </div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="comment">// _concat_weights</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    std::vector&lt;const ITensorInfo *&gt; weights_vector;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    weights_vector.emplace_back(&amp;recurrent_weights);</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    weights_vector.emplace_back(&amp;input_weights);</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="keyword">const</span> TensorInfo weights(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a> + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, 4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>);</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#aed4107f4b989a0724c349d8e24cfe2b2">CLConcatenateLayer::validate</a>(weights_vector, &amp;weights, <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>));</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="comment">// _transpose_weights</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="keyword">const</span> TensorShape weights_transposed_shape(weights.tensor_shape()[1], weights.tensor_shape()[0]);</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    TensorInfo weights_transposed = weights.clone()-&gt;set_is_resizable(<span class="keyword">true</span>).set_tensor_shape(weights_transposed_shape);</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">CLTranspose::validate</a>(&amp;weights, &amp;weights_transposed));</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160; </div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="comment">// _concat_inputs</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    std::vector&lt;const ITensorInfo *&gt; input_vector;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    input_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    input_vector.emplace_back(output_state_in);</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    TensorInfo input_concatenated(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a> + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a>, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>);</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#aed4107f4b989a0724c349d8e24cfe2b2">CLConcatenateLayer::validate</a>(input_vector, &amp;input_concatenated, <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>));</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160; </div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="comment">// _concat_bias</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    std::vector&lt;const ITensorInfo *&gt; bias_vector;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    bias_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">input_gate_bias</a>);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    bias_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>);</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    bias_vector.emplace_back(cell_bias);</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    bias_vector.emplace_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>);</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160; </div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keyword">const</span> TensorInfo bias_concatenated(TensorShape(4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#aed4107f4b989a0724c349d8e24cfe2b2">CLConcatenateLayer::validate</a>(bias_vector, &amp;bias_concatenated, <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>));</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160; </div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="comment">// Invert the offset for gemmlowp</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    input_concatenated.set_quantization_info(QuantizationInfo(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>, -<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>));</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    weights_transposed.set_quantization_info(QuantizationInfo(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>, -<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>));</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160; </div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <span class="comment">// _gemmlowp</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keyword">const</span> TensorInfo output_highp(TensorShape(4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">CLGEMMLowpMatrixMultiplyCore::validate</a>(&amp;input_concatenated, &amp;weights_transposed, <span class="keyword">nullptr</span>, &amp;output_highp));</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160; </div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="comment">// Set the offset back</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    input_concatenated.set_quantization_info(QuantizationInfo(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>));</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    weights_transposed.set_quantization_info(QuantizationInfo(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>));</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160; </div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <span class="keyword">const</span> TensorInfo output_lowp(output_highp.tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a>);</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160; </div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> multiplier        = 4096.f * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a>.<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>;</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <span class="keywordtype">int</span>         output_multiplier = 0;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keywordtype">int</span>         output_shift      = 0;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        <a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(multiplier, &amp;output_multiplier, &amp;output_shift));</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160; </div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="comment">// _output_stage</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    GEMMLowpOutputStageInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>{};</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.type                = <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.gemmlowp_multiplier = output_multiplier;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.gemmlowp_shift      = output_shift;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.output_data_type    = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage.xhtml#a8014f142f8a43df8229c8d418f747f8a">CLGEMMLowpOutputStage::validate</a>(&amp;output_highp, &amp;bias_concatenated, &amp;output_lowp, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>));</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160; </div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    TensorInfo input_gate_input;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    TensorInfo forget_gate_input;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    TensorInfo input_modulation_gate_input;</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    TensorInfo output_gate_input;</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160; </div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keywordflow">if</span> (batch_size &gt; 1)</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    {</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <span class="comment">// _slice_input_tensor</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        input_gate_input = TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a>);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#afb48914092f4bb2fdf249fa1e3fcd17c">CLSlice::validate</a>(&amp;output_lowp, &amp;input_gate_input, {0, 0}, {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size}));</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        <span class="comment">// _slice_forget_tensor</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        forget_gate_input = TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a>);</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#afb48914092f4bb2fdf249fa1e3fcd17c">CLSlice::validate</a>(&amp;output_lowp, &amp;forget_gate_input, {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, 0}, {2 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size}));</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        <span class="comment">// _slice_cell_tensor</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        input_modulation_gate_input = TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a>);</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#afb48914092f4bb2fdf249fa1e3fcd17c">CLSlice::validate</a>(&amp;output_lowp, &amp;input_modulation_gate_input, {2 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, 0},</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                                                      {3 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size}));</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        <span class="comment">// _slice_output_tensor</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        output_gate_input = TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a>);</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#afb48914092f4bb2fdf249fa1e3fcd17c">CLSlice::validate</a>(&amp;output_lowp, &amp;output_gate_input, {3 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, 0}, {4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>, batch_size}));</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    }</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    {</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        <span class="comment">// _slice_input_tensor</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        input_gate_input = TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a>);</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#afb48914092f4bb2fdf249fa1e3fcd17c">CLSlice::validate</a>(&amp;output_lowp, &amp;input_gate_input, {0}, {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>}));</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        <span class="comment">// _slice_forget_tensor</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        forget_gate_input = TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a>);</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#afb48914092f4bb2fdf249fa1e3fcd17c">CLSlice::validate</a>(&amp;output_lowp, &amp;forget_gate_input, {<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>}, {2 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>}));</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        <span class="comment">// _slice_cell_tensor</span></div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        input_modulation_gate_input = TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a>);</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#afb48914092f4bb2fdf249fa1e3fcd17c">CLSlice::validate</a>(&amp;output_lowp, &amp;input_modulation_gate_input, {2 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>}, {3 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>}));</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        <span class="comment">// _slice_output_tensor</span></div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        output_gate_input = TensorInfo(TensorShape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a>);</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_slice.xhtml#afb48914092f4bb2fdf249fa1e3fcd17c">CLSlice::validate</a>(&amp;output_lowp, &amp;output_gate_input, {3 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>}, {4 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>}));</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    }</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160; </div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <span class="comment">// _sigmoid_forget_gate</span></div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    <span class="keyword">const</span> TensorInfo forget_gate_output(forget_gate_input.tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0);</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">CLActivationLayer::validate</a>(&amp;forget_gate_input, &amp;forget_gate_output,</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                                    ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC)));</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <span class="comment">// _sigmoid_input_gate</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="keyword">const</span> TensorInfo input_gate_output(input_gate_input.tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0);</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">CLActivationLayer::validate</a>(</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        &amp;input_gate_input, &amp;input_gate_output, ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC)));</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <span class="comment">// _tanh_modulation_gate</span></div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    <span class="keyword">const</span> TensorInfo input_modulation_gate_output(input_modulation_gate_input.tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>,</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                                                  qsymm_0);</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">CLActivationLayer::validate</a>(&amp;input_modulation_gate_input, &amp;input_modulation_gate_output,</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                                    ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH, 1.0f, 1.0f)));</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="comment">// _sigmoid_output_gate</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    <span class="keyword">const</span> TensorInfo output_gate_output(output_gate_input.tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0);</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">CLActivationLayer::validate</a>(&amp;output_gate_input, &amp;output_gate_output,</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                                    ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC)));</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160; </div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    <span class="comment">// _mul_forget_gate_cell_state</span></div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <span class="keyword">const</span> TensorInfo cell_state_tmp1(forget_gate_output.tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a66b9829d1b2750c8f7bd6dad961cdc62">qsymm_4</a>);</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">CLPixelWiseMultiplication::validate</a>(</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        &amp;forget_gate_output, cell_state_in, &amp;cell_state_tmp1, 1, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>));</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160; </div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="comment">// _mul_input_gate_input_mod_gate</span></div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <span class="keyword">const</span> TensorInfo cell_state_tmp2(input_gate_output.tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a66b9829d1b2750c8f7bd6dad961cdc62">qsymm_4</a>);</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">CLPixelWiseMultiplication::validate</a>(&amp;input_gate_output, &amp;input_modulation_gate_output,</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                                                                    &amp;cell_state_tmp2, 1, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>,</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                                                                    <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>));</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160; </div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    <span class="comment">// _add_cell_state_tmps</span></div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">CLArithmeticAddition::validate</a>(&amp;cell_state_tmp1, &amp;cell_state_tmp2, cell_state_out, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160; </div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <span class="comment">// _tanh_modulation_gate</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    <span class="keyword">const</span> TensorInfo output_state_tmp(cell_state_out-&gt;tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0);</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">CLActivationLayer::validate</a>(cell_state_out, &amp;output_state_tmp,</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                                    ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH, 1.0f, 1.0f)));</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160; </div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    <span class="comment">// _mul_output_state_tmp_output_gate</span></div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    <span class="keyword">const</span> TensorInfo output_state_out_symm(output_gate_output.tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, qsymm_0);</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">CLPixelWiseMultiplication::validate</a>(&amp;output_state_tmp, &amp;output_gate_output,</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                                                                    &amp;output_state_out_symm, 1, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>,</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                                                                    <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>));</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160; </div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="comment">// _dequantize</span></div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="keyword">const</span> TensorInfo output_state_out_f32(output_state_out_symm.tensor_shape(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_dequantization_layer.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">CLDequantizationLayer::validate</a>(&amp;output_state_out_symm, &amp;output_state_out_f32));</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160; </div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <span class="comment">// _quantize</span></div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_quantization_layer.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">CLQuantizationLayer::validate</a>(&amp;output_state_out_f32, output_state_out));</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160; </div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    <span class="keywordflow">if</span> (cell_state_out-&gt;total_size() != 0)</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    {</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;cell_state_info, cell_state_out);</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(&amp;cell_state_info, cell_state_out);</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(&amp;cell_state_info, cell_state_out);</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    }</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160; </div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    <span class="keywordflow">if</span> (output_state_out-&gt;total_size() != 0)</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    {</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;output_state_info, output_state_out);</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(&amp;output_state_info, output_state_out);</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(&amp;output_state_info, output_state_out);</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    }</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160; </div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00298">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00838">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00753">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00574">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00205">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00043">arm_compute::quantization::calculate_quantized_multiplier()</a>, <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00334">TensorInfo::clone()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00481">arm_compute::test::validation::forget_gate_bias</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00480">arm_compute::test::validation::input_gate_bias</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00458">arm_compute::test::validation::input_size</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00474">arm_compute::test::validation::input_to_cell_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00473">arm_compute::test::validation::input_to_forget_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00472">arm_compute::test::validation::input_to_input_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00475">arm_compute::test::validation::input_to_output_weights</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">ITensorInfo::num_dimensions()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00063">UniformQuantizationInfo::offset</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00483">arm_compute::test::validation::output_gate_bias</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00459">arm_compute::test::validation::output_size</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">arm_compute::test::validation::qasymm()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::QASYMM8</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">arm_compute::QSYMM16</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">arm_compute::test::validation::qsymm_3()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a66b9829d1b2750c8f7bd6dad961cdc62">arm_compute::test::validation::qsymm_4()</a>, <a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::QUANTIZE_DOWN_FIXEDPOINT</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">arm_compute::test::validation::qweights()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00478">arm_compute::test::validation::recurrent_to_cell_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00477">arm_compute::test::validation::recurrent_to_forget_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00476">arm_compute::test::validation::recurrent_to_input_weights</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00479">arm_compute::test::validation::recurrent_to_output_weights</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::SATURATE</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00062">UniformQuantizationInfo::scale</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00398">TensorInfo::set_quantization_info()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00245">TensorInfo::tensor_shape()</a>, <a class="el" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">arm_compute::TO_ZERO</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo::total_size()</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00140">QuantizationInfo::uniform()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_transpose_8cpp_source.xhtml#l00061">CLTranspose::validate()</a>, <a class="el" href="_c_l_dequantization_layer_8cpp_source.xhtml#l00065">CLDequantizationLayer::validate()</a>, <a class="el" href="_c_l_quantization_layer_8cpp_source.xhtml#l00060">CLQuantizationLayer::validate()</a>, <a class="el" href="_c_l_activation_layer_8cpp_source.xhtml#l00073">CLActivationLayer::validate()</a>, <a class="el" href="_c_l_slice_8cpp_source.xhtml#l00086">CLSlice::validate()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00081">CLConcatenateLayer::validate()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00083">CLGEMMLowpOutputStage::validate()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00080">CLPixelWiseMultiplication::validate()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00103">CLGEMMLowpMatrixMultiplyCore::validate()</a>, and <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00072">CLArithmeticAddition::validate()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00135">CLLSTMLayerQuantized::configure()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/functions/<a class="el" href="_c_l_l_s_t_m_layer_quantized_8h_source.xhtml">CLLSTMLayerQuantized.h</a></li>
<li>src/runtime/CL/functions/<a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml">CLLSTMLayerQuantized.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_c_l_pixel_wise_multiplication_xhtml_ab8a2affed84fcb02163a828fd8a37bfd"><div class="ttname"><a href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">arm_compute::CLPixelWiseMultiplication::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, float scale, ConvertPolicy overflow_policy, RoundingPolicy rounding_policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLPixelWiseMultiplicatio...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00080">CLPixelWiseMultiplication.cpp:80</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_transpose_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLTranspose::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_transpose_8cpp_source.xhtml#l00066">CLTranspose.cpp:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage_xhtml_a8be556a216eb9d6b0e9551493043e3d3"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage.xhtml#a8be556a216eb9d6b0e9551493043e3d3">arm_compute::CLGEMMLowpOutputStage::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, const ICLTensor *bias, ICLTensor *output, const GEMMLowpOutputStageInfo &amp;info)</div><div class="ttdoc">Initialise the kernel's inputs, output.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00057">CLGEMMLowpOutputStage.cpp:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_transpose_xhtml_a968b23a6ef327fcfb5b99d58e3fbe883"><div class="ttname"><a href="classarm__compute_1_1_c_l_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">arm_compute::CLTranspose::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLTranspose.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_transpose_8cpp_source.xhtml#l00061">CLTranspose.cpp:61</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_uniform_quantization_info_xhtml_a97bd6c077f3c7769f575b82988b9b668"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">arm_compute::UniformQuantizationInfo::offset</a></div><div class="ttdeci">int32_t offset</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00063">QuantizationInfo.h:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_arithmetic_addition_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLArithmeticAddition::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00081">CLElementwiseOperations.cpp:81</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core_xhtml_a8c3cf2d65afb288e39909171ada19566"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">arm_compute::CLGEMMLowpMatrixMultiplyCore::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *output, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLGEMMLowpMatrixMultiply...</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00103">CLGEMMLowpMatrixMultiplyCore.cpp:103</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_memory_group_xhtml_a6fc0a49304c152c20a0f6df0634fb3cd"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">arm_compute::MemoryGroup::manage</a></div><div class="ttdeci">void manage(IMemoryManageable *obj) override</div><div class="ttdoc">Sets a object to be managed by the given memory group.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00076">MemoryGroup.h:76</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_allocator_xhtml_af36143939a43fa124312e395975091ed"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">arm_compute::ITensorAllocator::init</a></div><div class="ttdeci">void init(const TensorInfo &amp;input, size_t alignment=0)</div><div class="ttdoc">Initialize a tensor based on the passed TensorInfo.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator.cpp:33</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a27e4638546c88b8916f967e6e54480a9"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00574">Validate.h:574</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5061c02d0093b981703ab63fa7ddb13e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5061c02d0093b981703ab63fa7ddb13e">arm_compute::test::validation::input_gate_bias</a></div><div class="ttdeci">auto input_gate_bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00480">LSTMLayerQuantized.cpp:480</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_pixel_wise_multiplication_xhtml_acfd5a4c9ff5fca09c047124ccc910c3b"><div class="ttname"><a href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#acfd5a4c9ff5fca09c047124ccc910c3b">arm_compute::CLPixelWiseMultiplication::configure</a></div><div class="ttdeci">void configure(ICLTensor *input1, ICLTensor *input2, ICLTensor *output, float scale, ConvertPolicy overflow_policy, RoundingPolicy rounding_policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output and convertion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00051">CLPixelWiseMultiplication.cpp:51</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_l_s_t_m_layer_quantized_xhtml_aa9b93ef660fc3c5b4b19d3fc7b891b77"><div class="ttname"><a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">arm_compute::CLLSTMLayerQuantized::prepare</a></div><div class="ttdeci">void prepare() override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00718">CLLSTMLayerQuantized.cpp:718</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_activation_layer_xhtml_a239fea32ba46d038ba350dba58026c45"><div class="ttname"><a href="classarm__compute_1_1_c_l_activation_layer.xhtml#a239fea32ba46d038ba350dba58026c45">arm_compute::CLActivationLayer::configure</a></div><div class="ttdeci">void configure(ICLTensor *input, ICLTensor *output, ActivationLayerInfo act_info)</div><div class="ttdoc">Set the input and output tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_activation_layer_8cpp_source.xhtml#l00053">CLActivationLayer.cpp:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_concatenate_layer_xhtml_aed4107f4b989a0724c349d8e24cfe2b2"><div class="ttname"><a href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#aed4107f4b989a0724c349d8e24cfe2b2">arm_compute::CLConcatenateLayer::validate</a></div><div class="ttdeci">static Status validate(const std::vector&lt; const ITensorInfo * &gt; &amp;inputs_vector, const ITensorInfo *output, size_t axis)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLConcatenateLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_concatenate_layer_8cpp_source.xhtml#l00081">CLConcatenateLayer.cpp:81</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core_xhtml_a0ae54876c8c3394f2e207f6b884f2b58"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a0ae54876c8c3394f2e207f6b884f2b58">arm_compute::CLGEMMLowpMatrixMultiplyCore::configure</a></div><div class="ttdeci">void configure(const ICLTensor *a, const ICLTensor *b, const ICLTensor *c, ICLTensor *output, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00066">CLGEMMLowpMatrixMultiplyCore.cpp:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_pixel_wise_multiplication_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLPixelWiseMultiplication::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00091">CLPixelWiseMultiplication.cpp:91</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00041">CLKernelLibrary.cpp:41</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">Validate.h:677</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a55daaf57fb833fc416d779c28f7a3c85"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">arm_compute::test::validation::forget_gate_bias</a></div><div class="ttdeci">auto forget_gate_bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00481">LSTMLayerQuantized.cpp:481</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">arm_compute::DataType::QSYMM16</a></div><div class="ttdeci">@ QSYMM16</div><div class="ttdoc">quantized, symmetric fixed-point 16-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a507bd7e4d98cb3e45d3e820d8bac422a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">arm_compute::test::validation::output_gate_bias</a></div><div class="ttdeci">auto output_gate_bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00483">LSTMLayerQuantized.cpp:483</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00205">Error.h:205</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_slice_xhtml_ae883a7cb96f6111b0e8bf3a64842c438"><div class="ttname"><a href="classarm__compute_1_1_c_l_slice.xhtml#ae883a7cb96f6111b0e8bf3a64842c438">arm_compute::CLSlice::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, ICLTensor *output, const Coordinates &amp;starts, const Coordinates &amp;ends)</div><div class="ttdoc">Configure kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_slice_8cpp_source.xhtml#l00094">CLSlice.cpp:94</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_add0cebf7f56d2fb24512082e80eb00dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">arm_compute::test::validation::qweights</a></div><div class="ttdeci">QuantizationInfo qweights(1.f/16.f, 16)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a78839e7861ba8ffed52ca55da2745761"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a78839e7861ba8ffed52ca55da2745761">arm_compute::TensorInfo::set_quantization_info</a></div><div class="ttdeci">ITensorInfo &amp; set_quantization_info(const QuantizationInfo &amp;quantization_info) override</div><div class="ttdoc">Set the quantization settings (scale and offset) of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_tensor_info_8cpp_source.xhtml#l00398">TensorInfo.cpp:398</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac62dfdcc14798598d953342789c9927e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">arm_compute::test::validation::recurrent_to_forget_weights</a></div><div class="ttdeci">auto recurrent_to_forget_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00477">LSTMLayerQuantized.cpp:477</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_slice_xhtml_afb48914092f4bb2fdf249fa1e3fcd17c"><div class="ttname"><a href="classarm__compute_1_1_c_l_slice.xhtml#afb48914092f4bb2fdf249fa1e3fcd17c">arm_compute::CLSlice::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const Coordinates &amp;starts, const Coordinates &amp;ends)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLSlice.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_slice_8cpp_source.xhtml#l00086">CLSlice.cpp:86</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aef783de4ec01874dbec6054a5868aea2"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aef783de4ec01874dbec6054a5868aea2">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN(t,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00838">Validate.h:838</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLGEMMLowpMatrixMultiplyCore::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00112">CLGEMMLowpMatrixMultiplyCore.cpp:112</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00298">Error.h:298</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_slice_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_slice.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLSlice::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_slice_8cpp_source.xhtml#l00111">CLSlice.cpp:111</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a37c28ce239ce7092298245ce59694917"><div class="ttname"><a href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00043">AutoConfiguration.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml_a9bc00234de9adf8c99a21eb1d7d494c2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">arm_compute::ITensor::mark_as_unused</a></div><div class="ttdeci">void mark_as_unused() const</div><div class="ttdoc">Marks a tensor as unused.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8cpp_source.xhtml#l00167">ITensor.cpp:167</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_l_s_t_m_layer_quantized_xhtml_aea08b58ba60ca803b947023ce07c5f79"><div class="ttname"><a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#aea08b58ba60ca803b947023ce07c5f79">arm_compute::CLLSTMLayerQuantized::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *input_to_input_weights, const ITensorInfo *input_to_forget_weights, const ITensorInfo *input_to_cell_weights, const ITensorInfo *input_to_output_weights, const ITensorInfo *recurrent_to_input_weights, const ITensorInfo *recurrent_to_forget_weights, const ITensorInfo *recurrent_to_cell_weights, const ITensorInfo *recurrent_to_output_weights, const ITensorInfo *input_gate_bias, const ITensorInfo *forget_gate_bias, const ITensorInfo *cell_bias, const ITensorInfo *output_gate_bias, const ITensorInfo *cell_state_in, const ITensorInfo *output_state_in, const ITensorInfo *cell_state_out, const ITensorInfo *output_state_out)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLLSTMLayerQuantized.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00395">CLLSTMLayerQuantized.cpp:395</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage_xhtml_a8014f142f8a43df8229c8d418f747f8a"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage.xhtml#a8014f142f8a43df8229c8d418f747f8a">arm_compute::CLGEMMLowpOutputStage::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *bias, const ITensorInfo *output, const GEMMLowpOutputStageInfo &amp;info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of opencl::kernels::ClGemmL...</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00083">CLGEMMLowpOutputStage.cpp:83</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_concatenate_layer_xhtml_afbce8280ab870092192a51c90d5abcbd"><div class="ttname"><a href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#afbce8280ab870092192a51c90d5abcbd">arm_compute::CLConcatenateLayer::configure</a></div><div class="ttdeci">void configure(std::vector&lt; const ICLTensor * &gt; &amp;inputs_vector, ICLTensor *output, size_t axis)</div><div class="ttdoc">Initialise the kernel's inputs vector and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_concatenate_layer_8cpp_source.xhtml#l00053">CLConcatenateLayer.cpp:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_arithmetic_addition_xhtml_ab511d21db900edbc211d24bc77901b73"><div class="ttname"><a href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml#ab511d21db900edbc211d24bc77901b73">arm_compute::CLArithmeticAddition::configure</a></div><div class="ttdeci">void configure(ICLTensor *input1, ICLTensor *input2, ICLTensor *output, ConvertPolicy policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00052">CLElementwiseOperations.cpp:52</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::ConvertPolicy::SATURATE</a></div><div class="ttdeci">@ SATURATE</div><div class="ttdoc">Saturate.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_transpose_xhtml_a074e10cfb217e657b9e81adeca2abc68"><div class="ttname"><a href="classarm__compute_1_1_c_l_transpose.xhtml#a074e10cfb217e657b9e81adeca2abc68">arm_compute::CLTranspose::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, ICLTensor *output)</div><div class="ttdoc">Initialise the kernel's inputs and output.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_transpose_8cpp_source.xhtml#l00047">CLTranspose.cpp:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_quantization_info_xhtml_a706fc156bcd4c45441bcaad05884b57d"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">arm_compute::QuantizationInfo::uniform</a></div><div class="ttdeci">UniformQuantizationInfo uniform() const</div><div class="ttdoc">Return per layer quantization info.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00140">QuantizationInfo.h:140</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_dequantization_layer_xhtml_a074e10cfb217e657b9e81adeca2abc68"><div class="ttname"><a href="classarm__compute_1_1_c_l_dequantization_layer.xhtml#a074e10cfb217e657b9e81adeca2abc68">arm_compute::CLDequantizationLayer::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, ICLTensor *output)</div><div class="ttdoc">Set the input and output tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_dequantization_layer_8cpp_source.xhtml#l00048">CLDequantizationLayer.cpp:48</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aab02df8a9ee45153f2fd76e934407fbd"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">arm_compute::test::validation::recurrent_to_output_weights</a></div><div class="ttdeci">auto recurrent_to_output_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00479">LSTMLayerQuantized.cpp:479</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_activation_layer_xhtml_aa37e2d0b4cd4f835bfa2a2df4a0bdd2c"><div class="ttname"><a href="classarm__compute_1_1_c_l_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">arm_compute::CLActivationLayer::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLActivationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_activation_layer_8cpp_source.xhtml#l00073">CLActivationLayer.cpp:73</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_quantization_layer_xhtml_a074e10cfb217e657b9e81adeca2abc68"><div class="ttname"><a href="classarm__compute_1_1_c_l_quantization_layer.xhtml#a074e10cfb217e657b9e81adeca2abc68">arm_compute::CLQuantizationLayer::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, ICLTensor *output)</div><div class="ttdoc">Set the input and output tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_quantization_layer_8cpp_source.xhtml#l00046">CLQuantizationLayer.cpp:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::CLTensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of OpenCL memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00131">CLTensorAllocator.cpp:131</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_arithmetic_addition_xhtml_a5d4d1bdc6b902a7075b6850977a9ba7c"><div class="ttname"><a href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">arm_compute::CLArithmeticAddition::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, ConvertPolicy policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of opencl::kernels::ClSatur...</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00072">CLElementwiseOperations.cpp:72</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor's allocator.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLGEMMLowpOutputStage::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2functions_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00091">CLGEMMLowpOutputStage.cpp:91</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_concatenate_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_concatenate_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLConcatenateLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_concatenate_layer_8cpp_source.xhtml#l00088">CLConcatenateLayer.cpp:88</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aba910b683652be1f65437ef37a9da2a9"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00753">Validate.h:753</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_quantization_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_quantization_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLQuantizationLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_quantization_layer_8cpp_source.xhtml#l00065">CLQuantizationLayer.cpp:65</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_uniform_quantization_info_xhtml_a1d28dec57cce925ad92342891bd71e7c"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">arm_compute::UniformQuantizationInfo::scale</a></div><div class="ttdeci">float scale</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00062">QuantizationInfo.h:62</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_dequantization_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_dequantization_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLDequantizationLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_dequantization_layer_8cpp_source.xhtml#l00070">CLDequantizationLayer.cpp:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_allocator_xhtml_a1468b0adb6ec3f9d38aa7d60b8a91974"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">arm_compute::CLTensorAllocator::free</a></div><div class="ttdeci">void free() override</div><div class="ttdoc">Free allocated OpenCL memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00163">CLTensorAllocator.cpp:163</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06"><div class="ttname"><a href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">arm_compute::RoundingPolicy::TO_ZERO</a></div><div class="ttdeci">@ TO_ZERO</div><div class="ttdoc">Truncates the least significant values that are lost in operations.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_activation_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLActivationLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_activation_layer_8cpp_source.xhtml#l00078">CLActivationLayer.cpp:78</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::DataType::S32</a></div><div class="ttdeci">@ S32</div><div class="ttdoc">signed 32-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_l_s_t_m_layer_quantized_xhtml_ab90e9ae19db4dbc4f316851b03402bfa"><div class="ttname"><a href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml#ab90e9ae19db4dbc4f316851b03402bfa">arm_compute::CLLSTMLayerQuantized::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, const ICLTensor *input_to_input_weights, const ICLTensor *input_to_forget_weights, const ICLTensor *input_to_cell_weights, const ICLTensor *input_to_output_weights, const ICLTensor *recurrent_to_input_weights, const ICLTensor *recurrent_to_forget_weights, const ICLTensor *recurrent_to_cell_weights, const ICLTensor *recurrent_to_output_weights, const ICLTensor *input_gate_bias, const ICLTensor *forget_gate_bias, const ICLTensor *cell_bias, const ICLTensor *output_gate_bias, ICLTensor *cell_state_in, const ICLTensor *output_state_in, ICLTensor *cell_state_out, ICLTensor *output_state_out)</div><div class="ttdoc">Initialize function's tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00111">CLLSTMLayerQuantized.cpp:111</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_quantization_layer_xhtml_a968b23a6ef327fcfb5b99d58e3fbe883"><div class="ttname"><a href="classarm__compute_1_1_c_l_quantization_layer.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">arm_compute::CLQuantizationLayer::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLQuantizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_quantization_layer_8cpp_source.xhtml#l00060">CLQuantizationLayer.cpp:60</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a3586fa7cce76c57e1cce83b2add420de"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3586fa7cce76c57e1cce83b2add420de">arm_compute::test::validation::recurrent_to_input_weights</a></div><div class="ttdeci">auto recurrent_to_input_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00476">LSTMLayerQuantized.cpp:476</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1quantization_xhtml_aada9ec2ea42d767854b2b7545ffd310b"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">arm_compute::quantization::calculate_quantized_multiplier</a></div><div class="ttdeci">Status calculate_quantized_multiplier(float multiplier, int32_t *quant_multiplier, int32_t *shift, bool ignore_epsilon=false)</div><div class="ttdoc">Calculate quantized representation of multiplier.</div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00043">AsymmHelpers.cpp:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_ad45f0c01a0713dfb6bd7232c7f396fc4"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">arm_compute::CLTensor::info</a></div><div class="ttdeci">TensorInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00041">CLTensor.cpp:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_dequantization_layer_xhtml_a968b23a6ef327fcfb5b99d58e3fbe883"><div class="ttname"><a href="classarm__compute_1_1_c_l_dequantization_layer.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">arm_compute::CLDequantizationLayer::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLDequantizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_dequantization_layer_8cpp_source.xhtml#l00065">CLDequantizationLayer.cpp:65</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aee13fc8e41cf0443bbeab64e23eee1ec"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">arm_compute::test::validation::qasymm</a></div><div class="ttdeci">QuantizationInfo qasymm(1.f/128.f, 128)</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ad44f86834ae016bf696e8e664f39c136"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">arm_compute::test::validation::output_size</a></div><div class="ttdeci">const int output_size</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00459">LSTMLayerQuantized.cpp:459</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a3b793c410cba57a1395184692a018356"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">arm_compute::test::validation::input_to_forget_weights</a></div><div class="ttdeci">auto input_to_forget_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00473">LSTMLayerQuantized.cpp:473</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00035">Log.h:35</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a66b9829d1b2750c8f7bd6dad961cdc62"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a66b9829d1b2750c8f7bd6dad961cdc62">arm_compute::test::validation::qsymm_4</a></div><div class="ttdeci">QuantizationInfo qsymm_4(16.f/32768.f, 0)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ace4dd633420fa8d8aa71f60ff730f01f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">arm_compute::test::validation::input_to_output_weights</a></div><div class="ttdeci">auto input_to_output_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00475">LSTMLayerQuantized.cpp:475</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a></div><div class="ttdeci">@ QUANTIZE_DOWN_FIXEDPOINT</div><div class="ttdoc">Quantize using a fixed point multiplication.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a20c95b3935143dddbf37176fa0562685"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">arm_compute::test::validation::qsymm_3</a></div><div class="ttdeci">QuantizationInfo qsymm_3(8.f/32768.f, 0)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a93550027861552f1292b652d85b27b7c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a93550027861552f1292b652d85b27b7c">arm_compute::test::validation::input_to_input_weights</a></div><div class="ttdeci">auto input_to_input_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00472">LSTMLayerQuantized.cpp:472</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a269b19ce3f357ac65f41f9951906e38e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">arm_compute::TensorInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const override</div><div class="ttdoc">Size for each dimension of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00245">TensorInfo.h:245</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac547a66fe26967afb94760061ee0d0d1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">arm_compute::test::validation::input_to_cell_weights</a></div><div class="ttdeci">auto input_to_cell_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00474">LSTMLayerQuantized.cpp:474</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac2236dfe2a3fc5fa4e125348829cbeb2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">arm_compute::test::validation::recurrent_to_cell_weights</a></div><div class="ttdeci">auto recurrent_to_cell_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00478">LSTMLayerQuantized.cpp:478</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a6bb1fa96fb01419887f07ecd236c8cd4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">arm_compute::test::validation::input_size</a></div><div class="ttdeci">const int input_size</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00458">LSTMLayerQuantized.cpp:458</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_l_s_t_m_layer_quantized.xhtml">CLLSTMLayerQuantized</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:15:00 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
