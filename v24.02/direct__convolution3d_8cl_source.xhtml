<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/nhwc/direct_convolution3d.cl Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('direct__convolution3d_8cl_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">direct_convolution3d.cl</div>  </div>
</div><!--header-->
<div class="contents">
<a href="direct__convolution3d_8cl.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021-2022 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tile__helpers_8h.xhtml">tile_helpers.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">//! @cond Doxygen_Suppress</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment"></span><span class="comment">/** OpenCL kernel to compute the direct convolution 3d.</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"> * @note Data layout supported: NDHWC</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"> * @note Data type supported: F32/F16/QASYMM8/QASYMM8_SIGNED</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"> * @note The accumulation data type must be passed at compile time using -DDATA_TYPE (e.g. -DDATA_TYPE_PROMOTED=half)</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"> * @note The convolution padding (left, top and front) must be passed at compile time using -DPAD_LEFT, -DPAD_TOP and -DPAD_FRONT (e.g. -DPAD_LEFT=2, -DPAD_TOP=2, -DPAD_FRONT=2)</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"> * @note The convolution strides must be passed at compile time using -DSTRIDE_X, -DSTRIDE_Y and -DSTRIDE_Z (e.g. -DSTRIDE_X=2, -DSTRIDE_Y=2, -DSTRIDE_Z=2)</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> * @note The spatial dimensions of the weights must be passed at compile time using -DWEI_WIDTH, -DWEI_HEIGHT and -DWEI_DEPTH (e.g. -DWEI_WIDTH=9, -DWEI_HEIGHT=9, -DWEI_DEPTH=9)</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> * @note The spatial dimensions of the source tensor must be passed at compile time using -DSRC_WIDTH, -DSRC_HEIGHT and -DSRC_DEPTH (e.g. -DSRC_WIDTH=96, -DSRC_HEIGHT=64, -DSRC_DEPTH=32)</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"> * @note The spatial dimensions of the destination tensor must be passed at compile time using -DDST_WIDTH, -DDST_HEIGHT and -DDST_DEPTH (e.g. -DDST_WIDTH=96, -DDST_HEIGHT=64, -DDST_DEPTH=32)</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> * @note The channels of the source tensor must be passed at compile time using -DSRC_CHANNELS (e.g. -DSRC_CHANNELS=64)</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> * @note The channels of the destination tensor must be passed at compile time using -DDST_CHANNELS (e.g. -DDST_CHANNELS=64)</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> * @note The data type must be passed at compile time using -DDATA_TYPE (e.g. -DDATA_TYPE=half)</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> * @note The data type of the accumulators must be passed at compile time using -DACC_DATA_TYPE (e.g. -DACC_DATA_TYPE=float)</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> * @note The number of M0 rows (width*height) to process must be passed at compile time using -DM0 (e.g. -DM0=2)</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * @note The number of N0 output channels to process must be passed at compile time using -DN0 (e.g. -DN0=2)</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> * @note The number of K0 inner accumulations must be passed at compile time using -DK0 (e.g. -DK0=2)</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> * @note The size of the partial store block in x must be passed at compile time using -DPARTIAL_N0 (e.g. -DPARTIAL_N0=1)</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> * @note The zero value must be passed at compile time using -DZERO_VALUE (e.g. -DZERO_VALUE=0)</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> * @note Only the following configurations of M0, N0 and K0 are currently supported:</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> *  - M0 = 1, 2, 3, 4, 5, .... n</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> *  - N0 = 2, 3, 4, 8, 16</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> *  - K0 = 2, 3, 4, 8, 16</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> * @note In case of QASYMM8/QASYMM8_SIGNED, the following extra information must be passed at compile time:</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> *  - -DIS_QUANTIZED</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> *  - The destination quantization multiplier e.g. -DDST_MULTIPLIER=1234</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> *  - The destination quantization shift e.g. -DDST_SHIFT=4</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> *  - The destination offset e.g. -DDST_OFFSET=4</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> *  - The source offset e.g. -DSRC_OFFSET=4</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> *  - The weights offset e.g. -DWEI_OFFSET=4</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> *  - The quantized zero value e.g. -DZERO_VALUE=4</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"> * @note If biases are used then -DHAS_BIAS has to be passed at compile time along with its tensor type by using -DBIA_DATA_TYPE (e.g. -DBIA_DATA_TYPE=int).</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"> * @param[in]  src_ptr                           Pointer to the source tensor. Supported data type: F16/F32</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> * @param[in]  src_stride_x                      Stride of the source tensor in X dimension (in bytes)</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> * @param[in]  src_step_x                        src_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> * @param[in]  src_stride_y                      Stride of the source tensor in Y dimension (in bytes)</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> * @param[in]  src_step_y                        src_stride_y * number of elements along Y processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> * @param[in]  src_stride_z                      Stride of the source tensor in Z dimension (in bytes)</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> * @param[in]  src_step_z                        src_stride_z * number of elements along Z processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"> * @param[in]  src_stride_w                      Stride of the source tensor in W dimension (in bytes)</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"> * @param[in]  src_step_w                        src_stride_w * number of elements along W processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> * @param[in]  src_offset_first_element_in_bytes The offset of the first element in the source tensor</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> * @param[out] dst_ptr                           Pointer to the destination tensor. Supported data type: same as @p src_ptr</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"> * @param[in]  dst_stride_x                      Stride of the destination tensor in X dimension (in bytes)</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> * @param[in]  dst_step_x                        dst_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"> * @param[in]  dst_stride_y                      Stride of the destination tensor in Y dimension (in bytes)</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"> * @param[in]  dst_step_y                        dst_stride_y * number of elements along Y processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"> * @param[in]  dst_stride_z                      Stride of the destination tensor in Z dimension (in bytes)</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"> * @param[in]  dst_step_z                        dst_stride_z * number of elements along Z processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"> * @param[in]  dst_stride_w                      Stride of the destination tensor in W dimension (in bytes)</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"> * @param[in]  dst_step_w                        dst_stride_w * number of elements along W processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"> * @param[in]  dst_offset_first_element_in_bytes The offset of the first element in the destination tensor</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"> * @param[in]  wei_ptr                           Pointer to the weights tensor. Supported data type: same as @p src_ptr</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"> * @param[in]  wei_stride_x                      Stride of the weights tensor in X dimension (in bytes)</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"> * @param[in]  wei_step_x                        wei_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"> * @param[in]  wei_stride_y                      Stride of the weights tensor in Y dimension (in bytes)</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"> * @param[in]  wei_step_y                        wei_stride_y * number of elements along Y processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"> * @param[in]  wei_stride_z                      Stride of the weights tensor in Z dimension (in bytes)</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"> * @param[in]  wei_step_z                        wei_stride_z * number of elements along Z processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"> * @param[in]  wei_stride_w                      Stride of the weights tensor in W dimension (in bytes)</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"> * @param[in]  wei_step_w                        wei_stride_w * number of elements along W processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"> * @param[in]  wei_offset_first_element_in_bytes The offset of the first element in the weights matrix</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"> * @param[in]  bia_ptr                           (Optional) Pointer to the bias tensor Supported data type: same as @p src_ptr</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"> * @param[in]  bia_stride_x                      (Optional) Stride of the bias tensor in X dimension (in bytes)</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"> * @param[in]  bia_step_x                        (Optional) bia_stride_x * number of elements along X processed per workitem(in bytes)</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"> * @param[in]  bia_offset_first_element_in_bytes (Optional) The offset of the first element in the bias matrix</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"> */</span><span class="comment"></span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">//! @endcond</span></div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="direct__convolution3d_8cl.xhtml#ad0c87478355e0870d5b29497a0854d8f">  100</a></span>&#160;<span class="comment"></span>__kernel <span class="keywordtype">void</span> <a class="code" href="direct__convolution3d_8cl.xhtml#ad0c87478355e0870d5b29497a0854d8f">direct_convolution3d_ndhwc</a>(</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a168f86841ca2abbe137f82251bf27c08">TENSOR4D</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, BUFFER),</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a168f86841ca2abbe137f82251bf27c08">TENSOR4D</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, BUFFER),</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a168f86841ca2abbe137f82251bf27c08">TENSOR4D</a>(wei, BUFFER)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    ,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(bia)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;{</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#define _IWEI_WIDTH WEI_WIDTH</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#define _IWEI_HEIGHT WEI_HEIGHT</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#define _IWEI_DEPTH WEI_DEPTH</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">#define _ISRC_WIDTH SRC_WIDTH</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#define _ISRC_HEIGHT SRC_HEIGHT</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#define _ISRC_DEPTH SRC_DEPTH</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#define _ISRC_CHANNELS SRC_CHANNELS</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">#define _IDST_WIDTH DST_WIDTH</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">#define _IDST_HEIGHT DST_HEIGHT</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">#define _IDST_DEPTH DST_DEPTH</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor">#define _IDST_CHANNELS DST_CHANNELS</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#define _IY_MULTIPLIER (_IWEI_WIDTH * _IWEI_HEIGHT * _IWEI_DEPTH)</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// If quantized, the output tile has to be quantized first before being stored to global memory</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor">#if defined(IS_QUANTIZED)</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#define _IOUTPUT_TILE cq</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor">#else // defined(IS_QUANTIZED)</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#define _IOUTPUT_TILE c</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">#endif // defined(IS_QUANTIZED)</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> cout = <a class="code" href="tile__helpers_8h.xhtml#ad7108f3c35d805762fb3a8989d0b641f">GET_SPATIAL_IDX</a>(0, N0, PARTIAL_N0); <span class="comment">// OFM</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> mout = <a class="code" href="tile__helpers_8h.xhtml#ad7108f3c35d805762fb3a8989d0b641f">GET_SPATIAL_IDX</a>(1, M0, 0);          <span class="comment">// WIDTH x HEIGHT x DEPTH</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> bout = <a class="code" href="tile__helpers_8h.xhtml#ad7108f3c35d805762fb3a8989d0b641f">GET_SPATIAL_IDX</a>(2, 1, 0);           <span class="comment">// BATCH SIZE IDX</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(<span class="keywordtype">int</span>, M0, 1, xi);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(<span class="keywordtype">int</span>, M0, 1, yi);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(<span class="keywordtype">int</span>, M0, 1, zi);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment">// Convert the linear index to coordinate</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, i, 0, 1, M0,</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        xi[i].v = ((mout + i) % <a class="code" href="direct__convolution3d_8cl.xhtml#ab34000ebe4bf6481919f9df05c43ad46">_IDST_WIDTH</a>) * STRIDE_X;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        yi[i].v = (((mout + i) / <a class="code" href="direct__convolution3d_8cl.xhtml#ab34000ebe4bf6481919f9df05c43ad46">_IDST_WIDTH</a>) % <a class="code" href="direct__convolution3d_8cl.xhtml#ac6f0bd8b376e34b4a9f6aad807ac349c">_IDST_HEIGHT</a>) * STRIDE_Y;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        zi[i].v = (((mout + i) / (<a class="code" href="direct__convolution3d_8cl.xhtml#ab34000ebe4bf6481919f9df05c43ad46">_IDST_WIDTH</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#ac6f0bd8b376e34b4a9f6aad807ac349c">_IDST_HEIGHT</a>)) % <a class="code" href="direct__convolution3d_8cl.xhtml#adb153f29f7b47d68ff9b05f07aa642a3">_IDST_DEPTH</a>) * STRIDE_Z;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        xi[i].v -= PAD_LEFT;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        yi[i].v -= PAD_TOP;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        zi[i].v -= PAD_FRONT;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    })</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="comment">// Initialize the accumulators</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(ACC_DATA_TYPE, M0, N0, c);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, i, 0, 1, M0,</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        c[i].v = (ACC_DATA_TYPE)0;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    })</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="direct__convolution3d_8cl.xhtml#a241cb19e2f65084973e345f5c32fb3aa">_IY_MULTIPLIER</a>; ++i)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordtype">int</span> ck = 0;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordtype">int</span> xk = i % <a class="code" href="direct__convolution3d_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordtype">int</span> yk = (i / <a class="code" href="direct__convolution3d_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>) % <a class="code" href="direct__convolution3d_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a>;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordtype">int</span> zk = i / (<a class="code" href="direct__convolution3d_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a>);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordtype">int</span> k = 0;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">for</span>(; k &lt;= (<a class="code" href="direct__convolution3d_8cl.xhtml#a1f3650e4d771c5f383579b6bdc56db28">_ISRC_CHANNELS</a> - K0); k += K0)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(DATA_TYPE, M0, K0, a);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(DATA_TYPE, N0, K0, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, i, 0, 1, M0,</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                a[i].v = ZERO_VALUE;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            })</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="comment">// Load tile from the src tensor</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a863adacda2e2ff835832de31550cf866">T_LOAD_NDHWC_INDIRECT</a>(DATA_TYPE, M0, K0, BUFFER, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, bout, zk, yk, xk, ck, <a class="code" href="direct__convolution3d_8cl.xhtml#a8671e80224cc7363f203c9ae66959e13">_ISRC_WIDTH</a>, <a class="code" href="direct__convolution3d_8cl.xhtml#ae94acefe323be139280f6893b55d3346">_ISRC_HEIGHT</a>, <a class="code" href="direct__convolution3d_8cl.xhtml#ae3aa3cb47273fcda4610fe14e2e7a625">_ISRC_DEPTH</a>, src_stride_y, xi, yi, zi, a);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="comment">// Load tile from the weights tensor</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">int</span> b_offs = k + (xk * <a class="code" href="direct__convolution3d_8cl.xhtml#a1f3650e4d771c5f383579b6bdc56db28">_ISRC_CHANNELS</a>) + (yk * <a class="code" href="direct__convolution3d_8cl.xhtml#a1f3650e4d771c5f383579b6bdc56db28">_ISRC_CHANNELS</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>) + (zk * <a class="code" href="direct__convolution3d_8cl.xhtml#a1f3650e4d771c5f383579b6bdc56db28">_ISRC_CHANNELS</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a>);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, i, 0, 1, N0,</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">if</span>((cout + i) &lt; <a class="code" href="direct__convolution3d_8cl.xhtml#adf4d58143bcf53e86afb9c16c66be1d3">_IDST_CHANNELS</a>)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                    <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, j, 0, 1, K0,</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                    {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>[i].s[j] = *(__global DATA_TYPE *)(wei_ptr + wei_offset_first_element_in_bytes + (cout + i) * <span class="keyword">sizeof</span>(DATA_TYPE) + j * wei_stride_y + b_offs * wei_stride_y);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                    })</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            })</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="comment">// Compute the matrix multiplication between two tiles</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a00d8171420bb5b00639be9e0776262f5">T_MMUL</a>(DATA_TYPE, DATA_TYPE, ACC_DATA_TYPE, M0, N0, K0, NT, T, a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="comment">// Apply the offset correction (correction usually needed for asymmetric quantized computation)</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="comment">// The computation is not performed if both SRC_OFFSET and WEI_OFFSET are zero</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a6a68b53701400447db7c777eb3b3a3a5">T_OFFSET_CORRECTION</a>(ACC_DATA_TYPE, M0, N0, K0, SRC_OFFSET, WEI_OFFSET, a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            ck += K0;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">#if((_ISRC_CHANNELS % K0) != 0)</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="comment">// Left-over accumulations</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">for</span>(; k &lt; <a class="code" href="direct__convolution3d_8cl.xhtml#a1f3650e4d771c5f383579b6bdc56db28">_ISRC_CHANNELS</a>; ++k)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(DATA_TYPE, M0, 1, a);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(DATA_TYPE, N0, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, i, 0, 1, M0,</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                a[i].v = ZERO_VALUE;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            })</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="comment">// Load tile from the src tensor</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a863adacda2e2ff835832de31550cf866">T_LOAD_NDHWC_INDIRECT</a>(DATA_TYPE, M0, 1, BUFFER, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, bout, zk, yk, xk, ck, <a class="code" href="direct__convolution3d_8cl.xhtml#a8671e80224cc7363f203c9ae66959e13">_ISRC_WIDTH</a>, <a class="code" href="direct__convolution3d_8cl.xhtml#ae94acefe323be139280f6893b55d3346">_ISRC_HEIGHT</a>, <a class="code" href="direct__convolution3d_8cl.xhtml#ae3aa3cb47273fcda4610fe14e2e7a625">_ISRC_DEPTH</a>, src_stride_y, xi, yi, zi, a);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="comment">// Load tile from the weights tensor</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">int</span> b_offs = k + (xk * <a class="code" href="direct__convolution3d_8cl.xhtml#a1f3650e4d771c5f383579b6bdc56db28">_ISRC_CHANNELS</a>) + (yk * <a class="code" href="direct__convolution3d_8cl.xhtml#a1f3650e4d771c5f383579b6bdc56db28">_ISRC_CHANNELS</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a>) + (zk * <a class="code" href="direct__convolution3d_8cl.xhtml#a1f3650e4d771c5f383579b6bdc56db28">_ISRC_CHANNELS</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a>);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, i, 0, 1, N0,</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                <span class="keywordflow">if</span>((cout + i) &lt; <a class="code" href="direct__convolution3d_8cl.xhtml#adf4d58143bcf53e86afb9c16c66be1d3">_IDST_CHANNELS</a>)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>[i].v = *(__global DATA_TYPE *)(wei_ptr + wei_offset_first_element_in_bytes + (cout + i) * <span class="keyword">sizeof</span>(DATA_TYPE) + b_offs * wei_stride_y);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                }</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            })</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="comment">// // Compute the matrix multiplication between two tiles</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a00d8171420bb5b00639be9e0776262f5">T_MMUL</a>(DATA_TYPE, DATA_TYPE, ACC_DATA_TYPE, M0, N0, 1, NT, T, a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="comment">// Apply the offset correction (operation usually needed for asymmetric quantized computation)</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="comment">// The computation is not performed if both SRC_OFFSET and WEI_OFFSET are zero</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <a class="code" href="tile__helpers_8h.xhtml#a6a68b53701400447db7c777eb3b3a3a5">T_OFFSET_CORRECTION</a>(ACC_DATA_TYPE, M0, N0, 1, SRC_OFFSET, WEI_OFFSET, a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            ++ck;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">#endif // ((_ISRC_CHANNELS % K0) != 0)</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="comment">// Offset correction required for the quantized asymmetric computation</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="comment">// The computation is not performed if both SRC_OFFSET and WEI_OFFSET are zero</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a002bba6bacd4d85928c207b5c98b0881">T_ADD_CONSTANT</a>(ACC_DATA_TYPE, M0, N0, c, (<a class="code" href="direct__convolution3d_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#af2f7416051d2ea193392e04413d23c32">_IWEI_DEPTH</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#a1f3650e4d771c5f383579b6bdc56db28">_ISRC_CHANNELS</a> * SRC_OFFSET * WEI_OFFSET), c);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(BIA_DATA_TYPE, 1, N0, bias0);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">if</span>((cout + N0) &lt;= <a class="code" href="direct__convolution3d_8cl.xhtml#adf4d58143bcf53e86afb9c16c66be1d3">_IDST_CHANNELS</a>)</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        bias0[0].v = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a287e2fc366c312b468382c95bb90f91f">VLOAD</a>(N0)(0, (__global BIA_DATA_TYPE *)(bia_ptr + bia_offset_first_element_in_bytes + cout * <span class="keyword">sizeof</span>(BIA_DATA_TYPE)));</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    }</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    {</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a58a817b637cae845ed931aa0e2723145">VLOAD_PARTIAL</a>(N0, PARTIAL_N0)</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        (bias0[0].v, 0, (__global BIA_DATA_TYPE *)(bia_ptr + bia_offset_first_element_in_bytes + cout * <span class="keyword">sizeof</span>(BIA_DATA_TYPE)));</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="comment">// c = c + bias[broadcasted]</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#abf7882e0ece57c1f08b93465e5b62d40">T_ELTWISE_BROADCAST_ADD_X</a>(ACC_DATA_TYPE, M0, N0, c, bias0, c);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor">#endif // HAS_BIAS</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(uint, M0, 1, dst_indirect_y);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="comment">// Calculate the destination indirect Y</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, i, 0, 1, M0,</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        dst_indirect_y[i].v = (uint)min(mout + i, (<span class="keywordtype">int</span>)(<a class="code" href="direct__convolution3d_8cl.xhtml#ab34000ebe4bf6481919f9df05c43ad46">_IDST_WIDTH</a> *<a class="code" href="direct__convolution3d_8cl.xhtml#ac6f0bd8b376e34b4a9f6aad807ac349c">_IDST_HEIGHT</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#adb153f29f7b47d68ff9b05f07aa642a3">_IDST_DEPTH</a>) - 1);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        dst_indirect_y[i].v += bout * (int)(<a class="code" href="direct__convolution3d_8cl.xhtml#ab34000ebe4bf6481919f9df05c43ad46">_IDST_WIDTH</a> *<a class="code" href="direct__convolution3d_8cl.xhtml#ac6f0bd8b376e34b4a9f6aad807ac349c">_IDST_HEIGHT</a> * <a class="code" href="direct__convolution3d_8cl.xhtml#adb153f29f7b47d68ff9b05f07aa642a3">_IDST_DEPTH</a>);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    })</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;#<span class="keywordflow">if</span> defined(IS_QUANTIZED)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a>(DATA_TYPE, M0, N0, cq);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="comment">// Quantize the tile</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#aec4e2fc77571ec86d0186790f9246203">T_QUANTIZE8_ASYMMETRIC</a>(ACC_DATA_TYPE, DATA_TYPE, M0, N0, DST_OFFSET, DST_SHIFT, DST_MULTIPLIER, c, cq);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="preprocessor">#endif // defined(IS_QUANTIZED)</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordtype">bool</span> x_cond = PARTIAL_N0 != 0 &amp;&amp; get_global_id(0) == 0;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="comment">// Store the tile in reverse order so the invalid values are overwritten with the valid ones</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <a class="code" href="tile__helpers_8h.xhtml#af5933c5bb4531ec2371957cb67518c9e">T_STORE_INDIRECT_WIDTH_SELECT</a>(DATA_TYPE, M0, N0, PARTIAL_N0, BUFFER, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, cout, dst_stride_y, x_cond, <a class="code" href="direct__convolution3d_8cl.xhtml#ac06b8cd53a4a658f0cc88becd6e64208">_IOUTPUT_TILE</a>, dst_indirect_y);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_ad7108f3c35d805762fb3a8989d0b641f"><div class="ttname"><a href="tile__helpers_8h.xhtml#ad7108f3c35d805762fb3a8989d0b641f">GET_SPATIAL_IDX</a></div><div class="ttdeci">#define GET_SPATIAL_IDX(IDX, N0, PARTIAL_N0)</div><div class="ttdoc">Get the get_global_id with partial N0.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00352">tile_helpers.h:352</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_ab34000ebe4bf6481919f9df05c43ad46"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#ab34000ebe4bf6481919f9df05c43ad46">_IDST_WIDTH</a></div><div class="ttdeci">#define _IDST_WIDTH</div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a00d8171420bb5b00639be9e0776262f5"><div class="ttname"><a href="tile__helpers_8h.xhtml#a00d8171420bb5b00639be9e0776262f5">T_MMUL</a></div><div class="ttdeci">#define T_MMUL(LHS_DATA_TYPE, RHS_DATA_TYPE, DST_DATA_TYPE, M0, N0, K0, LHS_LAYOUT, RHS_LAYOUT, lhs, rhs, dst)</div><div class="ttdoc">Matrix multiplication.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l01367">tile_helpers.h:1367</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_abf7882e0ece57c1f08b93465e5b62d40"><div class="ttname"><a href="tile__helpers_8h.xhtml#abf7882e0ece57c1f08b93465e5b62d40">T_ELTWISE_BROADCAST_ADD_X</a></div><div class="ttdeci">#define T_ELTWISE_BROADCAST_ADD_X(DST_DATA_TYPE, M0, N0, lhs, rhs, dst)</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l01228">tile_helpers.h:1228</a></div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_a241cb19e2f65084973e345f5c32fb3aa"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#a241cb19e2f65084973e345f5c32fb3aa">_IY_MULTIPLIER</a></div><div class="ttdeci">#define _IY_MULTIPLIER</div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_aec4e2fc77571ec86d0186790f9246203"><div class="ttname"><a href="tile__helpers_8h.xhtml#aec4e2fc77571ec86d0186790f9246203">T_QUANTIZE8_ASYMMETRIC</a></div><div class="ttdeci">#define T_QUANTIZE8_ASYMMETRIC(SRC_DATA_TYPE, DST_DATA_TYPE, M0, N0, DST_OFFSET, DST_SHIFT, DST_MULTIPLIER, src, dst)</div><div class="ttdoc">Quantized the 8-bit tile with fixed-point scale for asymmetric.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l01073">tile_helpers.h:1073</a></div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_ae94acefe323be139280f6893b55d3346"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#ae94acefe323be139280f6893b55d3346">_ISRC_HEIGHT</a></div><div class="ttdeci">#define _ISRC_HEIGHT</div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a168f86841ca2abbe137f82251bf27c08"><div class="ttname"><a href="tile__helpers_8h.xhtml#a168f86841ca2abbe137f82251bf27c08">TENSOR4D</a></div><div class="ttdeci">#define TENSOR4D(name, type)</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00107">tile_helpers.h:107</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a287e2fc366c312b468382c95bb90f91f"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a287e2fc366c312b468382c95bb90f91f">VLOAD</a></div><div class="ttdeci">#define VLOAD(size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00204">helpers.h:204</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a40a6eb9f2a7712f08d6bb8ff6c9e6ca7"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a></div><div class="ttdeci">#define VECTOR_DECLARATION(name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00845">helpers.h:845</a></div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_a654a9a18953d08fc64b2526a039bee7b"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#a654a9a18953d08fc64b2526a039bee7b">_IWEI_HEIGHT</a></div><div class="ttdeci">#define _IWEI_HEIGHT</div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a863adacda2e2ff835832de31550cf866"><div class="ttname"><a href="tile__helpers_8h.xhtml#a863adacda2e2ff835832de31550cf866">T_LOAD_NDHWC_INDIRECT</a></div><div class="ttdeci">#define T_LOAD_NDHWC_INDIRECT(DATA_TYPE, TILE_AREA, TILE_CHANNELS, TENSOR_TYPE, TENSOR, B, Z, Y, X, C, TENSOR_WIDTH, TENSOR_HEIGHT, TENSOR_DEPTH, STRIDE_Y, xi, yi, zi, dst)</div><div class="ttdoc">Load a tile from global memory (tensor) when the tensor is stored using a NDHWC layout using indirect...</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00866">tile_helpers.h:866</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a6a68b53701400447db7c777eb3b3a3a5"><div class="ttname"><a href="tile__helpers_8h.xhtml#a6a68b53701400447db7c777eb3b3a3a5">T_OFFSET_CORRECTION</a></div><div class="ttdeci">#define T_OFFSET_CORRECTION(ACC_DATA_TYPE, M0, N0, K0, SRC_OFFSET, WEI_OFFSET, lhs, rhs, dst)</div><div class="ttdoc">Offset correction for the QASYMM8 computation.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00931">tile_helpers.h:931</a></div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_ad0c87478355e0870d5b29497a0854d8f"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#ad0c87478355e0870d5b29497a0854d8f">direct_convolution3d_ndhwc</a></div><div class="ttdeci">__kernel void direct_convolution3d_ndhwc(__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_stride_z, uint src_step_z, uint src_stride_w, uint src_step_w, uint src_offset_first_element_in_bytes, __global uchar *dst_ptr, uint dst_stride_x, uint dst_step_x, uint dst_stride_y, uint dst_step_y, uint dst_stride_z, uint dst_step_z, uint dst_stride_w, uint dst_step_w, uint dst_offset_first_element_in_bytes, __global uchar *wei_ptr, uint wei_stride_x, uint wei_step_x, uint wei_stride_y, uint wei_step_y, uint wei_stride_z, uint wei_step_z, uint wei_stride_w, uint wei_step_w, uint wei_offset_first_element_in_bytes, __global uchar *bia_ptr, uint bia_stride_x, uint bia_step_x, uint bia_offset_first_element_in_bytes)</div><div class="ttdef"><b>Definition:</b> <a href="direct__convolution3d_8cl_source.xhtml#l00100">direct_convolution3d.cl:100</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_af5933c5bb4531ec2371957cb67518c9e"><div class="ttname"><a href="tile__helpers_8h.xhtml#af5933c5bb4531ec2371957cb67518c9e">T_STORE_INDIRECT_WIDTH_SELECT</a></div><div class="ttdeci">#define T_STORE_INDIRECT_WIDTH_SELECT(DATA_TYPE, HEIGHT, WIDTH0, WIDTH1, TENSOR_TYPE, TENSOR, X, STRIDE_Y, WIDTH1_CONDITION, src, indirect_y)</div><div class="ttdoc">Store a tile to global memory (tensor) using an indirect Y index tile and conditionally use a differe...</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00899">tile_helpers.h:899</a></div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_ae3aa3cb47273fcda4610fe14e2e7a625"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#ae3aa3cb47273fcda4610fe14e2e7a625">_ISRC_DEPTH</a></div><div class="ttdeci">#define _ISRC_DEPTH</div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_af5e0dc11a939b317bb77a58beb291fe7"><div class="ttname"><a href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a></div><div class="ttdeci">#define LOOP_UNROLLING(type, idx, start, step, num, macro)</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00340">tile_helpers.h:340</a></div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_af2f7416051d2ea193392e04413d23c32"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#af2f7416051d2ea193392e04413d23c32">_IWEI_DEPTH</a></div><div class="ttdeci">#define _IWEI_DEPTH</div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a002bba6bacd4d85928c207b5c98b0881"><div class="ttname"><a href="tile__helpers_8h.xhtml#a002bba6bacd4d85928c207b5c98b0881">T_ADD_CONSTANT</a></div><div class="ttdeci">#define T_ADD_CONSTANT(DATA_TYPE, M0, N0, lhs, rhs_constant, dst)</div><div class="ttdoc">Element-wise addition with a constant value.</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l01220">tile_helpers.h:1220</a></div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_ac06b8cd53a4a658f0cc88becd6e64208"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#ac06b8cd53a4a658f0cc88becd6e64208">_IOUTPUT_TILE</a></div><div class="ttdeci">#define _IOUTPUT_TILE</div></div>
<div class="ttc" id="atile__helpers_8h_xhtml"><div class="ttname"><a href="tile__helpers_8h.xhtml">tile_helpers.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a58a817b637cae845ed931aa0e2723145"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a58a817b637cae845ed931aa0e2723145">VLOAD_PARTIAL</a></div><div class="ttdeci">#define VLOAD_PARTIAL(size, load_size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00222">helpers.h:222</a></div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_adf4d58143bcf53e86afb9c16c66be1d3"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#adf4d58143bcf53e86afb9c16c66be1d3">_IDST_CHANNELS</a></div><div class="ttdeci">#define _IDST_CHANNELS</div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_ac4c043989c5e1583cb4b7dd56c87d197"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#ac4c043989c5e1583cb4b7dd56c87d197">_IWEI_WIDTH</a></div><div class="ttdeci">#define _IWEI_WIDTH</div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_a1f3650e4d771c5f383579b6bdc56db28"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#a1f3650e4d771c5f383579b6bdc56db28">_ISRC_CHANNELS</a></div><div class="ttdeci">#define _ISRC_CHANNELS</div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_ac6f0bd8b376e34b4a9f6aad807ac349c"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#ac6f0bd8b376e34b4a9f6aad807ac349c">_IDST_HEIGHT</a></div><div class="ttdeci">#define _IDST_HEIGHT</div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_adb153f29f7b47d68ff9b05f07aa642a3"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#adb153f29f7b47d68ff9b05f07aa642a3">_IDST_DEPTH</a></div><div class="ttdeci">#define _IDST_DEPTH</div></div>
<div class="ttc" id="adirect__convolution3d_8cl_xhtml_a8671e80224cc7363f203c9ae66959e13"><div class="ttname"><a href="direct__convolution3d_8cl.xhtml#a8671e80224cc7363f203c9ae66959e13">_ISRC_WIDTH</a></div><div class="ttdeci">#define _ISRC_WIDTH</div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_a1b7124ed4713f1c104761e8deba36004"><div class="ttname"><a href="tile__helpers_8h.xhtml#a1b7124ed4713f1c104761e8deba36004">TILE</a></div><div class="ttdeci">#define TILE(DATA_TYPE, H, W, BASENAME)</div><div class="ttdoc">Tile object A tile object is a 2D memory block and can be accessed using the following syntax:</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00074">tile_helpers.h:74</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="dir_ea393a19e66e9555cdc004c345ac8654.xhtml">nhwc</a></li><li class="navelem"><a class="el" href="direct__convolution3d_8cl.xhtml">direct_convolution3d.cl</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:46 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
