<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/kernels/CpuAddKernel.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cpu_add_kernel_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CpuAddKernel.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cpu_add_kernel_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2022 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_CPU_ADD_KERNEL_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_CPU_ADD_KERNEL_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2common_2_macros_8h.xhtml">src/core/common/Macros.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_cpu_kernel_8h.xhtml">src/cpu/ICpuKernel.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span>cpu</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>kernels</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">/** Interface for the kernel to perform addition between two tensors */</span></div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml">   37</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml">CpuAddKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml">ICpuKernel</a>&lt;CpuAddKernel&gt;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keyword">using</span> AddKernelPtr = std::add_pointer&lt;void(</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> &amp;, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;)&gt;<a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">::type</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml">   44</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml">AddKernel</a></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    {</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml#a8f8f80d37794cde9472343e4487ba3eb">   46</a></span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>                                  *<a class="code" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml#a07de150fc45387cd4717db076cdb743e">   47</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#af82e846a842044ccf9089cb6b5ff39f4">CpuAddKernelDataTypeISASelectorDataPtr</a> <a class="code" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml#a07de150fc45387cd4717db076cdb743e">is_selected</a>;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml#add1fa80f4852756097ed1c3fbb234906">   48</a></span>&#160;        AddKernelPtr                                 <a class="code" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml#add1fa80f4852756097ed1c3fbb234906">ukernel</a>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    };</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#acc722d862b258d46e336ce6cee49d1c8">CpuAddKernel</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#aad9d94ae006271287e617d7bfe4f22e3">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml">CpuAddKernel</a>);<span class="comment"></span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /** Initialise the kernel&#39;s input, dst and border mode.</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     * Valid configurations (src0,src1) -&gt; dst :</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     *   - (U8,U8)           -&gt; U8</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     *   - (S16,S16)         -&gt; S16</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     *   - (S32,S32)         -&gt; S32</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     *   - (F16,F16)         -&gt; F16</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     *   - (F32,F32)         -&gt; F32</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     *   - (QASYMM8,QASYMM8) -&gt; QASYMM8</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     *   - (QASYMM8_SIGNED,QASYMM8_SIGNED) -&gt; QASYMM8_SIGNED</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     *   - (QSYMM16,QSYMM16) -&gt; QSYMM16</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     * @param[in]  src0   First input tensor info. Data types supported: U8/QASYMM8/QASYMM8_SIGNED/S16/QSYMM16/F16/S32/F32</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     * @param[in]  src1   Second input tensor info. Data types supported: U8/QASYMM8/QASYMM8_SIGNED/S16/QSYMM16/F16/S32/F32</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * @param[out] dst    The dst tensor info. Data types supported: U8/QASYMM8/QASYMM8_SIGNED/S16/QSYMM16/F16/S32/F32.</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     * @param[in]  policy Overflow policy.</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a998d2d481f8a4085f25c937421618574">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src0, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src1, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> policy);<span class="comment"></span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * Similar to CpuAddKernel::configure()</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     * @return a status</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#ab842408c28026222d48ccbb31f4ae79a">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src0, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> policy);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">void</span>        <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">run_op</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#aef1a10d4d6422ca58d53d8414d5954bd">name</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">    /** Return minimum workload size of the relevant kernel</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     * @param[in] platform     The CPU platform used to create the context.</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     * @param[in] thread_count Number of threads in the execution.</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     * @return[out] mws Minimum workload size for requested configuration.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#ae84c81edc1474e79618df29c6a621797">get_mws</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;platform, <span class="keywordtype">size_t</span> thread_count) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::vector&lt;AddKernel&gt; &amp;<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a0580149bfb97e10880920b8a8fafa7cd">get_available_kernels</a>();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a67f6d2151fce4b67b0fb3f495c0ca0fc">   96</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a67f6d2151fce4b67b0fb3f495c0ca0fc">get_split_dimension</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">return</span> _split_dimension;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> _policy{};</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    AddKernelPtr  _run_method{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    std::string   _name{};</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordtype">size_t</span>        _split_dimension{<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>};</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;};</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;} <span class="comment">// namespace kernels</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;} <span class="comment">// namespace cpu</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CPU_ADD_KERNEL_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="agemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00261">gemm_interleaved.hpp:261</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_aad9d94ae006271287e617d7bfe4f22e3"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#aad9d94ae006271287e617d7bfe4f22e3">arm_compute::cpu::kernels::CpuAddKernel::ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a></div><div class="ttdeci">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE(CpuAddKernel)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel_xhtml_add1fa80f4852756097ed1c3fbb234906"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml#add1fa80f4852756097ed1c3fbb234906">arm_compute::cpu::kernels::CpuAddKernel::AddKernel::ukernel</a></div><div class="ttdeci">AddKernelPtr ukernel</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8h_source.xhtml#l00048">CpuAddKernel.h:48</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_a0580149bfb97e10880920b8a8fafa7cd"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a0580149bfb97e10880920b8a8fafa7cd">arm_compute::cpu::kernels::CpuAddKernel::get_available_kernels</a></div><div class="ttdeci">static const std::vector&lt; AddKernel &gt; &amp; get_available_kernels()</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00203">CpuAddKernel.cpp:203</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml">arm_compute::CPUInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00066">CPPTypes.h:66</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml#a8f8f80d37794cde9472343e4487ba3eb">arm_compute::cpu::kernels::CpuAddKernel::AddKernel::name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8h_source.xhtml#l00046">CpuAddKernel.h:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel_xhtml_a07de150fc45387cd4717db076cdb743e"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml#a07de150fc45387cd4717db076cdb743e">arm_compute::cpu::kernels::CpuAddKernel::AddKernel::is_selected</a></div><div class="ttdeci">const CpuAddKernelDataTypeISASelectorDataPtr is_selected</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8h_source.xhtml#l00047">CpuAddKernel.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_a883429dd6cf828bfdd64b255afc458da"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">arm_compute::cpu::kernels::CpuAddKernel::run_op</a></div><div class="ttdeci">void run_op(ITensorPack &amp;tensors, const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00182">CpuAddKernel.cpp:182</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_ae84c81edc1474e79618df29c6a621797"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#ae84c81edc1474e79618df29c6a621797">arm_compute::cpu::kernels::CpuAddKernel::get_mws</a></div><div class="ttdeci">size_t get_mws(const CPUInfo &amp;platform, size_t thread_count) const override</div><div class="ttdoc">Return minimum workload size of the relevant kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00208">CpuAddKernel.cpp:208</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_aef1a10d4d6422ca58d53d8414d5954bd"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#aef1a10d4d6422ca58d53d8414d5954bd">arm_compute::cpu::kernels::CpuAddKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00198">CpuAddKernel.cpp:198</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_i_cpu_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml">arm_compute::cpu::ICpuKernel</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_cpu_kernel_8h_source.xhtml#l00042">ICpuKernel.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00180">CPPTypes.h:180</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_a998d2d481f8a4085f25c937421618574"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a998d2d481f8a4085f25c937421618574">arm_compute::cpu::kernels::CpuAddKernel::configure</a></div><div class="ttdeci">void configure(const ITensorInfo *src0, const ITensorInfo *src1, ITensorInfo *dst, ConvertPolicy policy)</div><div class="ttdoc">Initialise the kernel's input, dst and border mode.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00145">CpuAddKernel.cpp:145</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6f"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">arm_compute::ConvertPolicy</a></div><div class="ttdeci">ConvertPolicy</div><div class="ttdoc">Policy to handle integer overflow.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00353">Types.h:353</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_ab842408c28026222d48ccbb31f4ae79a"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#ab842408c28026222d48ccbb31f4ae79a">arm_compute::cpu::kernels::CpuAddKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *dst, ConvertPolicy policy)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00173">CpuAddKernel.cpp:173</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_a67f6d2151fce4b67b0fb3f495c0ca0fc"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a67f6d2151fce4b67b0fb3f495c0ca0fc">arm_compute::cpu::kernels::CpuAddKernel::get_split_dimension</a></div><div class="ttdeci">size_t get_split_dimension() const</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8h_source.xhtml#l00096">CpuAddKernel.h:96</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_1_1kernels_xhtml_af82e846a842044ccf9089cb6b5ff39f4"><div class="ttname"><a href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#af82e846a842044ccf9089cb6b5ff39f4">arm_compute::cpu::kernels::CpuAddKernelDataTypeISASelectorDataPtr</a></div><div class="ttdeci">std::add_pointer&lt; bool(const CpuAddKernelDataTypeISASelectorData &amp;data)&gt;::type CpuAddKernelDataTypeISASelectorDataPtr</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_kernel_selection_types_8h_source.xhtml#l00120">CpuKernelSelectionTypes.h:120</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="a_i_cpu_kernel_8h_xhtml"><div class="ttname"><a href="_i_cpu_kernel_8h.xhtml">ICpuKernel.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml">arm_compute::cpu::kernels::CpuAddKernel</a></div><div class="ttdoc">Interface for the kernel to perform addition between two tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8h_source.xhtml#l00037">CpuAddKernel.h:37</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel_xhtml"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_1_1_add_kernel.xhtml">arm_compute::cpu::kernels::CpuAddKernel::AddKernel</a></div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8h_source.xhtml#l00044">CpuAddKernel.h:44</a></div></div>
<div class="ttc" id="asrc_2core_2common_2_macros_8h_xhtml"><div class="ttname"><a href="src_2core_2common_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_acc722d862b258d46e336ce6cee49d1c8"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#acc722d862b258d46e336ce6cee49d1c8">arm_compute::cpu::kernels::CpuAddKernel::CpuAddKernel</a></div><div class="ttdeci">CpuAddKernel()=default</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_1de7bcbbdec2bf3559cb3c688662d4f5.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_cpu_add_kernel_8h.xhtml">CpuAddKernel.h</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:50 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
