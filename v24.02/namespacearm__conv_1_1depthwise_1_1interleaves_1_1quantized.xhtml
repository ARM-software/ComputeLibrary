<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_conv::depthwise::interleaves::quantized Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">arm_conv::depthwise::interleaves::quantized Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a3c07bfae0d3b8aba15074993bb857ac8"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml#a3c07bfae0d3b8aba15074993bb857ac8">get_storage_size</a> (const DepthwiseArgs &amp;args, const <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a> vl_type, const unsigned int accumulator_depth_vl)</td></tr>
<tr class="separator:a3c07bfae0d3b8aba15074993bb857ac8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf545a8af159f092c65d88af297ba84b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aaf545a8af159f092c65d88af297ba84b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml#aaf545a8af159f092c65d88af297ba84b">pack_parameters</a> (void *_buffer, const int32_t *biases, const T *weights, size_t ld_weight_col, size_t ld_weight_row, const DepthwiseArgs &amp;args, const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;qp, const <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a> vl_type, const unsigned int accumulator_depth_vl)</td></tr>
<tr class="separator:aaf545a8af159f092c65d88af297ba84b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4851f0666c7c94997ce56594e4411381"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml#a4851f0666c7c94997ce56594e4411381">pack_parameters</a> (void *, const int32_t *, const int8_t *, size_t, size_t, const DepthwiseArgs &amp;, const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;, <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a>, unsigned int)</td></tr>
<tr class="separator:a4851f0666c7c94997ce56594e4411381"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afec976eeeea91723f987adf1c17ca719"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml#afec976eeeea91723f987adf1c17ca719">pack_parameters</a> (void *, const int32_t *, const uint8_t *, size_t, size_t, const DepthwiseArgs &amp;, const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;, <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a>, unsigned int)</td></tr>
<tr class="separator:afec976eeeea91723f987adf1c17ca719"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a3c07bfae0d3b8aba15074993bb857ac8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c07bfae0d3b8aba15074993bb857ac8">&#9670;&nbsp;</a></span>get_storage_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t get_storage_size </td>
          <td>(</td>
          <td class="paramtype">const DepthwiseArgs &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a>&#160;</td>
          <td class="paramname"><em>vl_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>accumulator_depth_vl</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="generic__quantized__dot__product_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="generic__quantized__dot__product_8cpp_source.xhtml">generic_quantized_dot_product.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="comment">// We produce VL&lt;int32_t&gt; channels at a time, for each of these blocks of</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="comment">// channels we store a vector of biases, weights (complicated) and</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="comment">// requantize parameters.</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> iter_length = accumulator_depth_vl * arm_gemm::utils::get_vector_length&lt;int32_t&gt;(vl_type);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_iters = <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels * <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a>(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier, iter_length);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="comment">// Compute the cost of storing the weights</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_dots_per_kernel_row = <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a>(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.kernel_cols, 4u);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">return</span> n_iters * iter_length * (</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">sizeof</span>(int32_t) +  <span class="comment">// Bias</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    4 * n_dots_per_kernel_row * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.kernel_rows * <span class="keyword">sizeof</span>(int8_t) +  <span class="comment">// Weights</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    2 * <span class="keyword">sizeof</span>(int32_t)  <span class="comment">// Requantisation parameters</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  );</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>, and <a class="el" href="utils_8hpp_source.xhtml#l00065">arm_gemm::iceildiv()</a>.</p>

<p class="reference">Referenced by <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00533">DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt;::compute_tile_padded()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00100">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;::get_storage_size()</a>, and <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00507">DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt;::get_storage_size()</a>.</p>

</div>
</div>
<a id="a4851f0666c7c94997ce56594e4411381"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4851f0666c7c94997ce56594e4411381">&#9670;&nbsp;</a></span>pack_parameters() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void arm_conv::depthwise::interleaves::quantized::pack_parameters </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8_t *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const DepthwiseArgs &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afec976eeeea91723f987adf1c17ca719"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afec976eeeea91723f987adf1c17ca719">&#9670;&nbsp;</a></span>pack_parameters() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void arm_conv::depthwise::interleaves::quantized::pack_parameters </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const DepthwiseArgs &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf545a8af159f092c65d88af297ba84b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf545a8af159f092c65d88af297ba84b">&#9670;&nbsp;</a></span>pack_parameters() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pack_parameters </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>_buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>ld_weight_col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>ld_weight_row</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const DepthwiseArgs &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;&#160;</td>
          <td class="paramname"><em>qp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a>&#160;</td>
          <td class="paramname"><em>vl_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>accumulator_depth_vl</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="generic__quantized__dot__product_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="generic__quantized__dot__product_8cpp_source.xhtml">generic_quantized_dot_product.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keyword">auto</span> buffer = <span class="keyword">static_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(_buffer);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keyword">auto</span> <a class="code" href="working__space_8hpp.xhtml#a6be4d70309ff6730b21b5ddc12a7c33e">requant_muls</a> = qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#aa081b66a13642ceee7dfe18b03643557">per_channel_muls</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keyword">auto</span> <a class="code" href="working__space_8hpp.xhtml#a087601367eccd8835f6748c744872ed2">requant_shifts</a> = qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#aef9f2c9dc4dbdef956505940d6b2895e">per_channel_right_shifts</a>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> iter_length = accumulator_depth_vl * arm_gemm::utils::get_vector_length&lt;int32_t&gt;(vl_type);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_iters_per_input_channel = <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a>(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier, iter_length);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_dots_per_kernel_row = <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a>(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.kernel_cols, 4u);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">size_t</span> iter_stride = iter_length * (</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      <span class="keyword">sizeof</span>(int32_t) +  <span class="comment">// Bias</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      4 * n_dots_per_kernel_row * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.kernel_rows * <span class="keyword">sizeof</span>(T) +  <span class="comment">// Weights</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      2 * <span class="keyword">sizeof</span>(int32_t)  <span class="comment">// Requantisation parameters</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  );</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  ld_weight_col = (ld_weight_col == 0) ? <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier : ld_weight_col;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  ld_weight_row = (ld_weight_row == 0) ? <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.kernel_cols * ld_weight_col : ld_weight_row;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> input_channel = 0; input_channel &lt; <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels; input_channel++)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">auto</span> buffer_input_channel = buffer + input_channel * n_iters_per_input_channel * iter_stride;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">auto</span> weights_input_channel = weights + input_channel * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> iter = 0; iter &lt; n_iters_per_input_channel; iter++)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="comment">// Get a pointer to the start of this portion of the buffer; consequently</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="comment">// derive pointers to the bias, weight and requantisation portions of</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="comment">// this frame.</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keyword">auto</span> buffer_base = buffer_input_channel + iter_stride * iter;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keyword">auto</span> buffer_biases = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(buffer_base);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keyword">auto</span> buffer_weights = buffer_base + <span class="keyword">sizeof</span>(int32_t) * iter_length;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keyword">auto</span> buffer_requant_mul = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        buffer_weights + <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.kernel_rows * n_dots_per_kernel_row * 4 * iter_length);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keyword">auto</span> buffer_requant_shift = buffer_requant_mul + iter_length;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="keyword">auto</span> weights_base = weights_input_channel + iter * iter_length;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="comment">// Hence work through the data for this iteration, on a</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="comment">// channel-by-channel basis.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keyword">const</span> <span class="keyword">auto</span> this_iter_length = std::min&lt;unsigned int&gt;(</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        iter_length, <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier - iter * iter_length</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      );</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; this_iter_length; i++)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keyword">auto</span> weights_channel = weights_base + i;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="comment">// Read the bias value, we modify this as we read the weights.</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keyword">auto</span> bias_value = biases == <span class="keyword">nullptr</span> ? 0 : *(biases++);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        int32_t elements_sum = 0;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="comment">// Read through the kernel; for each row, marshal together as many dot</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="comment">// product terms as are required.</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ki = 0; ki &lt; <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.kernel_rows; ki++)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          <span class="keyword">auto</span> buffer_row = buffer_weights + i*4 + ki * 4 * n_dots_per_kernel_row * iter_length;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;          <span class="keyword">auto</span> weights_row = weights_channel + ki * ld_weight_row;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;          <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kj = 0;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;          <span class="keywordflow">for</span> (; kj &lt; <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.kernel_cols; kj++)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;          {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="comment">// Determine which element to which we&#39;re writing</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> dot = kj / 4;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> elem = kj % 4;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="comment">// Copy the value; include in the sum</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> val = weights_row[kj * ld_weight_col];</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            buffer_row[dot * 4 * iter_length + elem] = val;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            elements_sum += val;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;          }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;          <span class="keywordflow">for</span> (; kj &lt; 4 * n_dots_per_kernel_row; kj++)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;          {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> dot = kj / 4;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> elem = kj % 4;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            buffer_row[dot * 4 * iter_length + elem] = 0;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;          }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;          buffer_row += 4 * n_dots_per_kernel_row * iter_length;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="comment">// Write back the bias and offset values</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        *(buffer_biases++) =</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;          bias_value - qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#a3d53b60fe918402342090da9651ee092">a_offset</a> * elements_sum +</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;          <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.kernel_rows * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.kernel_cols * qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#a3d53b60fe918402342090da9651ee092">a_offset</a> * qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#a126a5e90d1af15ccd17a6efe3a47f54b">b_offset</a>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="comment">// Write out the requantisation parameters</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        *(buffer_requant_mul++) = qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#adbfc422506b35557afb05aee3474046e">per_channel_requant</a> ? *(<a class="code" href="working__space_8hpp.xhtml#a6be4d70309ff6730b21b5ddc12a7c33e">requant_muls</a>++) : qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#a4d77f59af723ad21032eae446349df65">per_layer_mul</a>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        *(buffer_requant_shift++) = qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#adbfc422506b35557afb05aee3474046e">per_channel_requant</a> ? *(<a class="code" href="working__space_8hpp.xhtml#a087601367eccd8835f6748c744872ed2">requant_shifts</a>++) : qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#a71af27ee970d33372997d332478fa8fe">per_layer_right_shift</a>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__gemm_8hpp_source.xhtml#l00191">Requantize32::a_offset</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>, <a class="el" href="arm__gemm_8hpp_source.xhtml#l00192">Requantize32::b_offset</a>, <a class="el" href="utils_8hpp_source.xhtml#l00065">arm_gemm::iceildiv()</a>, <a class="el" href="arm__gemm_8hpp_source.xhtml#l00200">Requantize32::per_channel_muls</a>, <a class="el" href="arm__gemm_8hpp_source.xhtml#l00194">Requantize32::per_channel_requant</a>, <a class="el" href="arm__gemm_8hpp_source.xhtml#l00199">Requantize32::per_channel_right_shifts</a>, <a class="el" href="arm__gemm_8hpp_source.xhtml#l00197">Requantize32::per_layer_mul</a>, <a class="el" href="arm__gemm_8hpp_source.xhtml#l00196">Requantize32::per_layer_right_shift</a>, <a class="el" href="working__space_8hpp_source.xhtml#l00322">requant_muls</a>, and <a class="el" href="working__space_8hpp_source.xhtml#l00322">requant_shifts</a>.</p>

<p class="reference">Referenced by <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00513">DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt;::pack_parameters()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="aworking__space_8hpp_xhtml_a087601367eccd8835f6748c744872ed2"><div class="ttname"><a href="working__space_8hpp.xhtml#a087601367eccd8835f6748c744872ed2">requant_shifts</a></div><div class="ttdeci">const int32_t * requant_shifts</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00322">working_space.hpp:322</a></div></div>
<div class="ttc" id="astructarm__gemm_1_1_requantize32_xhtml_a3d53b60fe918402342090da9651ee092"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#a3d53b60fe918402342090da9651ee092">arm_gemm::Requantize32::a_offset</a></div><div class="ttdeci">int32_t a_offset</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00191">arm_gemm.hpp:191</a></div></div>
<div class="ttc" id="astructarm__gemm_1_1_requantize32_xhtml_adbfc422506b35557afb05aee3474046e"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#adbfc422506b35557afb05aee3474046e">arm_gemm::Requantize32::per_channel_requant</a></div><div class="ttdeci">bool per_channel_requant</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00194">arm_gemm.hpp:194</a></div></div>
<div class="ttc" id="astructarm__gemm_1_1_requantize32_xhtml_a126a5e90d1af15ccd17a6efe3a47f54b"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#a126a5e90d1af15ccd17a6efe3a47f54b">arm_gemm::Requantize32::b_offset</a></div><div class="ttdeci">int32_t b_offset</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00192">arm_gemm.hpp:192</a></div></div>
<div class="ttc" id="astructarm__gemm_1_1_requantize32_xhtml_aef9f2c9dc4dbdef956505940d6b2895e"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#aef9f2c9dc4dbdef956505940d6b2895e">arm_gemm::Requantize32::per_channel_right_shifts</a></div><div class="ttdeci">const int32_t * per_channel_right_shifts</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00199">arm_gemm.hpp:199</a></div></div>
<div class="ttc" id="astructarm__gemm_1_1_requantize32_xhtml_a71af27ee970d33372997d332478fa8fe"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#a71af27ee970d33372997d332478fa8fe">arm_gemm::Requantize32::per_layer_right_shift</a></div><div class="ttdeci">int32_t per_layer_right_shift</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00196">arm_gemm.hpp:196</a></div></div>
<div class="ttc" id="astructarm__gemm_1_1_requantize32_xhtml_a4d77f59af723ad21032eae446349df65"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#a4d77f59af723ad21032eae446349df65">arm_gemm::Requantize32::per_layer_mul</a></div><div class="ttdeci">int32_t per_layer_mul</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00197">arm_gemm.hpp:197</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_aed0e2852860309af99fad49a8c3ef315"><div class="ttname"><a href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a></div><div class="ttdeci">T iceildiv(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00065">utils.hpp:65</a></div></div>
<div class="ttc" id="astructarm__gemm_1_1_requantize32_xhtml_aa081b66a13642ceee7dfe18b03643557"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#aa081b66a13642ceee7dfe18b03643557">arm_gemm::Requantize32::per_channel_muls</a></div><div class="ttdeci">const int32_t * per_channel_muls</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00200">arm_gemm.hpp:200</a></div></div>
<div class="ttc" id="aworking__space_8hpp_xhtml_a6be4d70309ff6730b21b5ddc12a7c33e"><div class="ttname"><a href="working__space_8hpp.xhtml#a6be4d70309ff6730b21b5ddc12a7c33e">requant_muls</a></div><div class="ttdeci">const int32_t * requant_muls</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00322">working_space.hpp:322</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__conv.xhtml">arm_conv</a></li><li class="navelem"><a class="el" href="namespacearm__conv_1_1depthwise.xhtml">depthwise</a></li><li class="navelem"><a class="el" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml">interleaves</a></li><li class="navelem"><a class="el" href="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml">quantized</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:15:09 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
