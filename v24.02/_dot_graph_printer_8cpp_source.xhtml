<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/graph/printers/DotGraphPrinter.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_dot_graph_printer_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DotGraphPrinter.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_dot_graph_printer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dot_graph_printer_8h.xhtml">arm_compute/graph/printers/DotGraphPrinter.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_graph_8h.xhtml">arm_compute/graph/Graph.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_nodes_8h.xhtml">arm_compute/graph/nodes/Nodes.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_tensor_8h.xhtml">arm_compute/graph/Tensor.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_type_printer_8h.xhtml">arm_compute/graph/TypePrinter.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>graph</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">   36</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">DotGraphVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a> &amp;n)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; n.<a class="code" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml#a39a8dd296461705ee5cb54eacb4b2818">activation_info</a>().<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    _info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#ae6a61733b0daa30060b2d643a59882f9">   43</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">DotGraphVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml">BatchNormalizationLayerNode</a> &amp;n)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; (n.<a class="code" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml#a32186582e0a6e02ed7ac3944f60b9c62">fused_activation</a>().<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">enabled</a>() ? <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(n.<a class="code" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml#a32186582e0a6e02ed7ac3944f60b9c62">fused_activation</a>().<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>()) : <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    _info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a5c10d2f76900c79976b527d3fd94492a">   50</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">DotGraphVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">ConcatenateLayerNode</a> &amp;n)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; <span class="stringliteral">&quot;Enabled: &quot;</span> &lt;&lt; n.<a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6507f40ddf408e1f124cb84fa5cbfd1e">is_enabled</a>();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; R<span class="stringliteral">&quot;( \n )&quot;;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; </span><span class="stringliteral">&quot;Axis: &quot;</span> &lt;&lt; n.<a class="code" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a051cd2a8d15cf783e9ab9a00451c77f6">concatenation_axis</a>();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    _info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a9f9ccf9586c79250a79c85fb562cc2f5">   59</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">DotGraphVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">ConvolutionLayerNode</a> &amp;n)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; n.<a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a16b2c6652c4cee5b566daf018f768a42">convolution_method</a>();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    _info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#aed4fc061f50c81e08328eeead9f6ca3c">   66</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">DotGraphVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">DepthwiseConvolutionLayerNode</a> &amp;n)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; n.<a class="code" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a8cefd89d2de49691e778c8d5a08ac92f">depthwise_convolution_method</a>();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    _info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a1e48e66ec69d2ae228f73f6a7fc8aab6">   73</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">DotGraphVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a> &amp;n)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; n.<a class="code" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml#acda6687f669fe87581d7bff8fcd82ebc">eltwise_operation</a>();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    _info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a8e3f67935e124ab096533434b188d66b">   80</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">DotGraphVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml">FusedConvolutionBatchNormalizationNode</a> &amp;n)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(n);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; <span class="stringliteral">&quot;FusedConvolutionBatchNormalizationNode&quot;</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    _info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a955a9cfeee8b1105851ada5c27f1189c">   88</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">DotGraphVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml">FusedDepthwiseConvolutionBatchNormalizationNode</a> &amp;n)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(n);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; <span class="stringliteral">&quot;FusedDepthwiseConvolutionBatchNormalizationNode&quot;</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    _info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#aac5b1d0d521f3e24c6eb1b0ca3bc8016">   96</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">DotGraphVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml">NormalizationLayerNode</a> &amp;n)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; n.<a class="code" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#a3bfea94983e45ff8d1a3061206593349">normalization_info</a>().<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#abf43f970446f0b82889df52463b9c2b8">type</a>();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    _info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a9aa6abdf5e8362bc489cd55509f4f317">  103</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">DotGraphVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml">PoolingLayerNode</a> &amp;n)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; n.<a class="code" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml#a27ad0a381c4ccbc80999d452c4dfe18b">pooling_info</a>().<a class="code" href="structarm__compute_1_1_pooling_layer_info.xhtml#a9454e2a604136e9b2bddf630b4c9b09a">pool_type</a>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; R<span class="stringliteral">&quot;( \n )&quot;;</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; n.<a class="code" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml#a27ad0a381c4ccbc80999d452c4dfe18b">pooling_info</a>().<a class="code" href="structarm__compute_1_1_pooling_layer_info.xhtml#a71f0df0f3b7d1380f1ee669aec324eb9">pool_size</a>;</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; R</span><span class="stringliteral">&quot;( \n )&quot;;</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; n.<a class="code" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml#a27ad0a381c4ccbc80999d452c4dfe18b">pooling_info</a>().<a class="code" href="structarm__compute_1_1_pooling_layer_info.xhtml#a38fe393e11c69a5d459a75e2858e9f17">pad_stride_info</a>;</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">    _info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral">}</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a7ae346d50c25d5008291185396e5c54e">  114</a></span>&#160;<span class="stringliteral"></span><span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a7ae346d50c25d5008291185396e5c54e">DotGraphVisitor::default_visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;n)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(n);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    _info.clear();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#ae455892b8843f8bd868bbb7ba3359d1d">  120</a></span>&#160;<span class="keyword">const</span> std::string &amp;<a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#ae455892b8843f8bd868bbb7ba3359d1d">DotGraphVisitor::info</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">return</span> _info;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_dot_graph_printer.xhtml#a6360aacec485371990a2691002a45fe4">  125</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_printer.xhtml#a6360aacec485371990a2691002a45fe4">DotGraphPrinter::print</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, std::ostream &amp;os)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="comment">// Print header</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    print_header(g, os);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="comment">// Print nodes</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    print_nodes(g, os);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="comment">// Print edges</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    print_edges(g, os);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="comment">// Print footer</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    print_footer(g, os);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordtype">void</span> DotGraphPrinter::print_header(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, std::ostream &amp;os)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;{</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// Print graph name</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    std::string graph_name = (g.<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>().empty()) ? <span class="stringliteral">&quot;Graph&quot;</span> : g.<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    os &lt;&lt; <span class="stringliteral">&quot;digraph &quot;</span> &lt;&lt; graph_name &lt;&lt; <span class="stringliteral">&quot;{\n&quot;</span>;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;}</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordtype">void</span> DotGraphPrinter::print_footer(<span class="keyword">const</span> Graph &amp;g, std::ostream &amp;os)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(g);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    os &lt;&lt; <span class="stringliteral">&quot;}\n&quot;</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keywordtype">void</span> DotGraphPrinter::print_nodes(<span class="keyword">const</span> Graph &amp;g, std::ostream &amp;os)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;{</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;n : g.nodes())</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">if</span> (n)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="comment">// Output node id</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            std::string node_id = std::string(<span class="stringliteral">&quot;n&quot;</span>) + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(n-&gt;id());</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            os &lt;&lt; node_id &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="comment">// Output label</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            n-&gt;accept(_dot_node_visitor);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            std::string <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>             = n-&gt;name().empty() ? node_id : n-&gt;name();</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keyword">auto</span>        node_description = _dot_node_visitor.<a class="code" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#ae455892b8843f8bd868bbb7ba3359d1d">info</a>();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            os &lt;&lt; R<span class="stringliteral">&quot;([label = &quot;)&quot; &lt;&lt; <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a> &lt;&lt; R</span><span class="stringliteral">&quot;( \n )&quot; &lt;&lt; n-&gt;assigned_target() &lt;&lt; R</span><span class="stringliteral">&quot;( \n )&quot; &lt;&lt; node_description</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="stringliteral">               &lt;&lt; R</span><span class="stringliteral">&quot;(&quot;])&quot;;</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="stringliteral">            os &lt;&lt; </span><span class="stringliteral">&quot;;\n&quot;</span>;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keywordtype">void</span> DotGraphPrinter::print_edges(<span class="keyword">const</span> Graph &amp;g, std::ostream &amp;os)</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;{</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;e : g.edges())</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">if</span> (e)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            std::string source_node_id = std::string(<span class="stringliteral">&quot;n&quot;</span>) + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(e-&gt;producer_id());</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            std::string sink_node_id   = std::string(<span class="stringliteral">&quot;n&quot;</span>) + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(e-&gt;consumer_id());</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            os &lt;&lt; source_node_id &lt;&lt; <span class="stringliteral">&quot; -&gt; &quot;</span> &lt;&lt; sink_node_id &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a> *<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> = e-&gt;tensor();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            os &lt;&lt; R<span class="stringliteral">&quot;([label = &quot;)&quot; &lt;&lt; <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;desc().shape &lt;&lt; R</span><span class="stringliteral">&quot;( \n )&quot; &lt;&lt; <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;desc().data_type &lt;&lt; R</span><span class="stringliteral">&quot;( \n )&quot;</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="stringliteral">               &lt;&lt; <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;desc().layout &lt;&lt; R</span><span class="stringliteral">&quot;(&quot;])&quot;;</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="stringliteral">            os &lt;&lt; </span><span class="stringliteral">&quot;;\n&quot;</span>;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;} <span class="comment">// namespace graph</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_dot_graph_printer_xhtml_a6360aacec485371990a2691002a45fe4"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_dot_graph_printer.xhtml#a6360aacec485371990a2691002a45fe4">arm_compute::graph::DotGraphPrinter::print</a></div><div class="ttdeci">void print(const Graph &amp;g, std::ostream &amp;os) override</div><div class="ttdoc">Print graph.</div><div class="ttdef"><b>Definition:</b> <a href="_dot_graph_printer_8cpp_source.xhtml#l00125">DotGraphPrinter.cpp:125</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_convolution_layer_node_xhtml_a16b2c6652c4cee5b566daf018f768a42"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a16b2c6652c4cee5b566daf018f768a42">arm_compute::graph::ConvolutionLayerNode::convolution_method</a></div><div class="ttdeci">ConvolutionMethod convolution_method() const</div><div class="ttdoc">Convolution layer method accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_convolution_layer_node_8cpp_source.xhtml#l00056">ConvolutionLayerNode.cpp:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_eltwise_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">arm_compute::graph::EltwiseLayerNode</a></div><div class="ttdoc">Eltwise Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_eltwise_layer_node_8h_source.xhtml#l00034">EltwiseLayerNode.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_batch_normalization_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml">arm_compute::graph::BatchNormalizationLayerNode</a></div><div class="ttdoc">Batch Normalization Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_node_8h_source.xhtml#l00034">BatchNormalizationLayerNode.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_dot_graph_visitor_xhtml_a758cad84d59383224e908a0448c0e400"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a758cad84d59383224e908a0448c0e400">arm_compute::graph::DotGraphVisitor::visit</a></div><div class="ttdeci">void visit(ActivationLayerNode &amp;n) override</div><div class="ttdoc">Visit ActivationLayerNode.</div><div class="ttdef"><b>Definition:</b> <a href="_dot_graph_printer_8cpp_source.xhtml#l00036">DotGraphPrinter.cpp:36</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_pooling_layer_info_xhtml_a71f0df0f3b7d1380f1ee669aec324eb9"><div class="ttname"><a href="structarm__compute_1_1_pooling_layer_info.xhtml#a71f0df0f3b7d1380f1ee669aec324eb9">arm_compute::PoolingLayerInfo::pool_size</a></div><div class="ttdeci">Size2D pool_size</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01145">Types.h:1145</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_pooling_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml">arm_compute::graph::PoolingLayerNode</a></div><div class="ttdoc">Pooling Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_pooling_layer_node_8h_source.xhtml#l00034">PoolingLayerNode.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_a9e0fb1d1462557f28966ae19988532c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">arm_compute::ActivationLayerInfo::activation</a></div><div class="ttdeci">ActivationFunction activation() const</div><div class="ttdoc">Get the type of activation function.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00084">ActivationLayerInfo.h:84</a></div></div>
<div class="ttc" id="a_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="a_dot_graph_printer_8h_xhtml"><div class="ttname"><a href="_dot_graph_printer_8h.xhtml">DotGraphPrinter.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_depthwise_convolution_layer_node_xhtml_a8cefd89d2de49691e778c8d5a08ac92f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a8cefd89d2de49691e778c8d5a08ac92f">arm_compute::graph::DepthwiseConvolutionLayerNode::depthwise_convolution_method</a></div><div class="ttdeci">DepthwiseConvolutionMethod depthwise_convolution_method() const</div><div class="ttdoc">Depthwise convolution layer method accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00059">DepthwiseConvolutionLayerNode.cpp:59</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_activation_layer_node_xhtml_a39a8dd296461705ee5cb54eacb4b2818"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml#a39a8dd296461705ee5cb54eacb4b2818">arm_compute::graph::ActivationLayerNode::activation_info</a></div><div class="ttdeci">ActivationLayerInfo activation_info() const</div><div class="ttdoc">Activation metadata accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_node_8cpp_source.xhtml#l00040">ActivationLayerNode.cpp:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">arm_compute::graph::ConcatenateLayerNode</a></div><div class="ttdoc">Concatenation Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8h_source.xhtml#l00034">ConcatenateLayerNode.h:34</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_convolution_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">arm_compute::graph::ConvolutionLayerNode</a></div><div class="ttdoc">Convolution Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_convolution_layer_node_8h_source.xhtml#l00034">ConvolutionLayerNode.h:34</a></div></div>
<div class="ttc" id="aarm__compute_2graph_2_type_printer_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_type_printer_8h.xhtml">TypePrinter.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_pooling_layer_node_xhtml_a27ad0a381c4ccbc80999d452c4dfe18b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml#a27ad0a381c4ccbc80999d452c4dfe18b">arm_compute::graph::PoolingLayerNode::pooling_info</a></div><div class="ttdeci">PoolingLayerInfo pooling_info() const</div><div class="ttdoc">Pooling metadata accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_pooling_layer_node_8cpp_source.xhtml#l00041">PoolingLayerNode.cpp:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml_af5a8385102f8f8dd6c5957eac08b04c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">arm_compute::ActivationLayerInfo::enabled</a></div><div class="ttdeci">bool enabled() const</div><div class="ttdoc">Check if initialised.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00099">ActivationLayerInfo.h:99</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_activation_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">arm_compute::graph::ActivationLayerNode</a></div><div class="ttdoc">Activation Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_node_8h_source.xhtml#l00034">ActivationLayerNode.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_i_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml">arm_compute::graph::INode</a></div><div class="ttdoc">Node interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8h_source.xhtml#l00046">INode.h:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml">arm_compute::graph::FusedConvolutionBatchNormalizationNode</a></div><div class="ttdoc">Batch Normalization node.</div><div class="ttdef"><b>Definition:</b> <a href="_fused_convolution_batch_normalization_node_8h_source.xhtml#l00034">FusedConvolutionBatchNormalizationNode.h:34</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">arm_compute::detail::ObjectType::Tensor</a></div><div class="ttdeci">@ Tensor</div></div>
<div class="ttc" id="a_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00066">NEBatchNormalizationLayerKernel.cpp:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_batch_normalization_layer_node_xhtml_a32186582e0a6e02ed7ac3944f60b9c62"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml#a32186582e0a6e02ed7ac3944f60b9c62">arm_compute::graph::BatchNormalizationLayerNode::fused_activation</a></div><div class="ttdeci">ActivationLayerInfo fused_activation() const</div><div class="ttdoc">Returns fused activation.</div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_node_8cpp_source.xhtml#l00046">BatchNormalizationLayerNode.cpp:46</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_dot_graph_visitor_xhtml_a7ae346d50c25d5008291185396e5c54e"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#a7ae346d50c25d5008291185396e5c54e">arm_compute::graph::DotGraphVisitor::default_visit</a></div><div class="ttdeci">void default_visit(INode &amp;n) override</div><div class="ttdoc">Function to be overloaded by the client and implement default behavior for the non-overloaded visitor...</div><div class="ttdef"><b>Definition:</b> <a href="_dot_graph_printer_8cpp_source.xhtml#l00114">DotGraphPrinter.cpp:114</a></div></div>
<div class="ttc" id="a_nodes_8h_xhtml"><div class="ttname"><a href="_nodes_8h.xhtml">Nodes.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a051cd2a8d15cf783e9ab9a00451c77f6"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a051cd2a8d15cf783e9ab9a00451c77f6">arm_compute::graph::ConcatenateLayerNode::concatenation_axis</a></div><div class="ttdeci">DataLayoutDimension concatenation_axis() const</div><div class="ttdoc">Concatenation axis parameter accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00054">ConcatenateLayerNode.cpp:54</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a062b90d0a8defe70b0cd19300fee2825"><div class="ttname"><a href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">arm_compute::to_string</a></div><div class="ttdeci">std::string to_string(const ClComponentElementwiseBinary::Attributes::ElementwiseOp &amp;op)</div><div class="ttdoc">Formatted output of the arm_compute::experimental::dynamic_fusion::ClComponentElementwiseBinary::Attr...</div><div class="ttdef"><b>Definition:</b> <a href="components_2utils_2type__printer_2_elementwise_binary_8h_source.xhtml#l00068">ElementwiseBinary.h:68</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_xhtml_a1d89c28bd42ba9a52da008bb69367171"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml#a1d89c28bd42ba9a52da008bb69367171">arm_compute::graph::Graph::name</a></div><div class="ttdeci">std::string name() const</div><div class="ttdoc">Returns graph name.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8cpp_source.xhtml#l00168">Graph.cpp:168</a></div></div>
<div class="ttc" id="agraph_2_tensor_8h_xhtml"><div class="ttname"><a href="graph_2_tensor_8h.xhtml">Tensor.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_dot_graph_visitor_xhtml_ae455892b8843f8bd868bbb7ba3359d1d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#ae455892b8843f8bd868bbb7ba3359d1d">arm_compute::graph::DotGraphVisitor::info</a></div><div class="ttdeci">const std::string &amp; info() const</div><div class="ttdoc">Returns the output information of the last visited node.</div><div class="ttdef"><b>Definition:</b> <a href="_dot_graph_printer_8cpp_source.xhtml#l00120">DotGraphPrinter.cpp:120</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml">arm_compute::graph::Graph</a></div><div class="ttdoc">Graph class.</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_graph_8h_source.xhtml#l00052">Graph.h:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_concatenate_layer_node_xhtml_a6507f40ddf408e1f124cb84fa5cbfd1e"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#a6507f40ddf408e1f124cb84fa5cbfd1e">arm_compute::graph::ConcatenateLayerNode::is_enabled</a></div><div class="ttdeci">bool is_enabled() const</div><div class="ttdoc">Enabled parameter accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_concatenate_layer_node_8cpp_source.xhtml#l00049">ConcatenateLayerNode.cpp:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_eltwise_layer_node_xhtml_acda6687f669fe87581d7bff8fcd82ebc"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml#acda6687f669fe87581d7bff8fcd82ebc">arm_compute::graph::EltwiseLayerNode::eltwise_operation</a></div><div class="ttdeci">EltwiseOperation eltwise_operation() const</div><div class="ttdoc">Eltwise operation accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_eltwise_layer_node_8cpp_source.xhtml#l00040">EltwiseLayerNode.cpp:40</a></div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_pooling_layer_info_xhtml_a38fe393e11c69a5d459a75e2858e9f17"><div class="ttname"><a href="structarm__compute_1_1_pooling_layer_info.xhtml#a38fe393e11c69a5d459a75e2858e9f17">arm_compute::PoolingLayerInfo::pad_stride_info</a></div><div class="ttdeci">PadStrideInfo pad_stride_info</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01147">Types.h:1147</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_pooling_layer_info_xhtml_a9454e2a604136e9b2bddf630b4c9b09a"><div class="ttname"><a href="structarm__compute_1_1_pooling_layer_info.xhtml#a9454e2a604136e9b2bddf630b4c9b09a">arm_compute::PoolingLayerInfo::pool_type</a></div><div class="ttdeci">PoolingType pool_type</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01144">Types.h:1144</a></div></div>
<div class="ttc" id="agraph_2_graph_8h_xhtml"><div class="ttname"><a href="graph_2_graph_8h.xhtml">Graph.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_depthwise_convolution_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">arm_compute::graph::DepthwiseConvolutionLayerNode</a></div><div class="ttdoc">Depthwise Convolution Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_convolution_layer_node_8h_source.xhtml#l00034">DepthwiseConvolutionLayerNode.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml_abf43f970446f0b82889df52463b9c2b8"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#abf43f970446f0b82889df52463b9c2b8">arm_compute::NormalizationLayerInfo::type</a></div><div class="ttdeci">NormType type() const</div><div class="ttdoc">Get the normalization type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01552">Types.h:1552</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_normalization_layer_node_xhtml_a3bfea94983e45ff8d1a3061206593349"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#a3bfea94983e45ff8d1a3061206593349">arm_compute::graph::NormalizationLayerNode::normalization_info</a></div><div class="ttdeci">NormalizationLayerInfo normalization_info() const</div><div class="ttdoc">Normalization info accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_normalization_layer_node_8cpp_source.xhtml#l00040">NormalizationLayerNode.cpp:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_normalization_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml">arm_compute::graph::NormalizationLayerNode</a></div><div class="ttdoc">Normalization Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_normalization_layer_node_8h_source.xhtml#l00034">NormalizationLayerNode.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml">arm_compute::graph::FusedDepthwiseConvolutionBatchNormalizationNode</a></div><div class="ttdoc">Fused Depthwise Convolution Batch Normalization node.</div><div class="ttdef"><b>Definition:</b> <a href="_fused_depthwise_convolution_batch_normalization_node_8h_source.xhtml#l00034">FusedDepthwiseConvolutionBatchNormalizationNode.h:34</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_d182250f0c231765fc862e69db210731.xhtml">graph</a></li><li class="navelem"><a class="el" href="dir_a3a3362c7065796fe64974622266bfb7.xhtml">printers</a></li><li class="navelem"><a class="el" href="_dot_graph_printer_8cpp.xhtml">DotGraphPrinter.cpp</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:53 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
