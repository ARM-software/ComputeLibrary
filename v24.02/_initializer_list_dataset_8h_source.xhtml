<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/datasets/InitializerListDataset.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_initializer_list_dataset_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">InitializerListDataset.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_initializer_list_dataset_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2018 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_TEST_DATASET_LIST</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_TEST_DATASET_LIST</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dataset_8h.xhtml">Dataset.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utils_2_type_printer_8h.xhtml">utils/TypePrinter.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;initializer_list&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;tuple&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>framework</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>dataset</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/** Implementation of a dataset created from an initializer list. */</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml">   46</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml">InitializerListDataset</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml">NamedDataset</a></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">using</span> data_const_iterator = <span class="keyword">typename</span> std::vector&lt;T&gt;::const_iterator;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">    /** Construct dataset with given name and values from the container.</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     * @param[in] name Description of the values.</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     * @param[in] list Values for the dataset.</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#aaa2caf1ace98c488c6e3b78315fe5d47">   57</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#aaa2caf1ace98c488c6e3b78315fe5d47">InitializerListDataset</a>(std::string <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>, std::initializer_list&lt;T&gt; &amp;&amp;list)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        : <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml">NamedDataset</a>{ std::move(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>) }, _data(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9104bb24d99827e99097e526e2afddc7">std::forward</a>&lt;std::initializer_list&lt;T&gt;&gt;(list))</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">    /** Allow instances of this class to be move constructed */</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#aaa2caf1ace98c488c6e3b78315fe5d47">InitializerListDataset</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#aaa2caf1ace98c488c6e3b78315fe5d47">InitializerListDataset</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">    /** Type of the dataset. */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#a18b86dafc894ede9c2b71030a731a106">   66</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#a18b86dafc894ede9c2b71030a731a106">type</a> = std::tuple&lt;T&gt;;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">    /** Iterator for the dataset. */</span></div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml">   69</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml">iterator</a></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">        /** Construct an iterator for the dataset</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">         * @param[in] name     Name of the dataset.</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">         * @param[in] iterator Iterator of the dataset values.</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#aca6a8613ae6d8960ace1c8894676ed3c">   76</a></span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#aca6a8613ae6d8960ace1c8894676ed3c">iterator</a>(std::string <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>, data_const_iterator <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml">iterator</a>)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            : _name{ <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a> }, _iterator{ <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml">iterator</a> }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">        /** Get a description of the current value.</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">         * @return a description.</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5">   85</a></span>&#160;        std::string <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5">description</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="keywordflow">return</span> _name + <span class="stringliteral">&quot;=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">arm_compute::to_string</a>(*_iterator);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">        /** Get the current value.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">         * @return the current value.</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#adef7d064407a702e9c3434eb6bf50224">   94</a></span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#a18b86dafc894ede9c2b71030a731a106">InitializerListDataset::type</a> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#adef7d064407a702e9c3434eb6bf50224">operator*</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">return</span> std::make_tuple(*_iterator);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">        /** Increment the iterator.</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">         * @return *this.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#af1b1c7856a59f34c7d3570f946a2ff00">  103</a></span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml">iterator</a> &amp;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#af1b1c7856a59f34c7d3570f946a2ff00">operator++</a>()</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            ++_iterator;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        std::string         _name;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        data_const_iterator _iterator;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    };</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">    /** Iterator pointing at the begin of the dataset.</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     * @return Iterator for the dataset.</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#a0c62c15c8ed609e7e5e9518cf5f5c712">  118</a></span>&#160;    <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml">iterator</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#a0c62c15c8ed609e7e5e9518cf5f5c712">begin</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml">iterator</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>(), _data.cbegin());</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">    /** Size of the dataset.</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     * @return Number of values in the dataset.</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#af9593d4a5ff4274efaf429cb4f9e57cc">  127</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#af9593d4a5ff4274efaf429cb4f9e57cc">size</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">return</span> _data.size();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    std::vector&lt;T&gt; _data;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;};</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">/** Helper function to create an @ref InitializerListDataset.</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"> * @param[in] name Name of the dataset.</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"> * @param[in] list Initializer list.</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment"> * @return An initializer list dataset.</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a3989b2ae4676e8d55692df89c0b1840b">  144</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml">InitializerListDataset&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">make</a>(std::string <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>, std::initializer_list&lt;T&gt; &amp;&amp;list)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml">InitializerListDataset&lt;T&gt;</a>(std::move(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9104bb24d99827e99097e526e2afddc7">std::forward</a>&lt;std::initializer_list&lt;T&gt;&gt;(list));</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;} <span class="comment">// namespace dataset</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;} <span class="comment">// namespace framework</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_TEST_DATASET_LIST */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml">arm_compute::test::framework::dataset::NamedDataset</a></div><div class="ttdoc">Abstract implementation of a named dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_dataset_8h_source.xhtml#l00056">Dataset.h:56</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator_xhtml_aca6a8613ae6d8960ace1c8894676ed3c"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#aca6a8613ae6d8960ace1c8894676ed3c">arm_compute::test::framework::dataset::InitializerListDataset::iterator::iterator</a></div><div class="ttdeci">iterator(std::string name, data_const_iterator iterator)</div><div class="ttdoc">Construct an iterator for the dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_initializer_list_dataset_8h_source.xhtml#l00076">InitializerListDataset.h:76</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset_xhtml_a1d89c28bd42ba9a52da008bb69367171"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml#a1d89c28bd42ba9a52da008bb69367171">arm_compute::test::framework::dataset::NamedDataset::name</a></div><div class="ttdeci">std::string name() const</div><div class="ttdoc">Return name of the dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_dataset_8h_source.xhtml#l00079">Dataset.h:79</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_xhtml_aaa2caf1ace98c488c6e3b78315fe5d47"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#aaa2caf1ace98c488c6e3b78315fe5d47">arm_compute::test::framework::dataset::InitializerListDataset::InitializerListDataset</a></div><div class="ttdeci">InitializerListDataset(std::string name, std::initializer_list&lt; T &gt; &amp;&amp;list)</div><div class="ttdoc">Construct dataset with given name and values from the container.</div><div class="ttdef"><b>Definition:</b> <a href="_initializer_list_dataset_8h_source.xhtml#l00057">InitializerListDataset.h:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_xhtml_af9593d4a5ff4274efaf429cb4f9e57cc"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#af9593d4a5ff4274efaf429cb4f9e57cc">arm_compute::test::framework::dataset::InitializerListDataset::size</a></div><div class="ttdeci">int size() const</div><div class="ttdoc">Size of the dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_initializer_list_dataset_8h_source.xhtml#l00127">InitializerListDataset.h:127</a></div></div>
<div class="ttc" id="autils_2_type_printer_8h_xhtml"><div class="ttname"><a href="utils_2_type_printer_8h.xhtml">TypePrinter.h</a></div></div>
<div class="ttc" id="a_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00066">NEBatchNormalizationLayerKernel.cpp:66</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a9104bb24d99827e99097e526e2afddc7"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a9104bb24d99827e99097e526e2afddc7">arm_compute::test::validation::forward</a></div><div class="ttdeci">auto forward</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00123">DFT.cpp:123</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00160">ContainerDataset.h:160</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml">arm_compute::test::framework::dataset::InitializerListDataset</a></div><div class="ttdoc">Implementation of a dataset created from an initializer list.</div><div class="ttdef"><b>Definition:</b> <a href="_initializer_list_dataset_8h_source.xhtml#l00046">InitializerListDataset.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a062b90d0a8defe70b0cd19300fee2825"><div class="ttname"><a href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">arm_compute::to_string</a></div><div class="ttdeci">std::string to_string(const ClComponentElementwiseBinary::Attributes::ElementwiseOp &amp;op)</div><div class="ttdoc">Formatted output of the arm_compute::experimental::dynamic_fusion::ClComponentElementwiseBinary::Attr...</div><div class="ttdef"><b>Definition:</b> <a href="components_2utils_2type__printer_2_elementwise_binary_8h_source.xhtml#l00068">ElementwiseBinary.h:68</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_xhtml_a0c62c15c8ed609e7e5e9518cf5f5c712"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#a0c62c15c8ed609e7e5e9518cf5f5c712">arm_compute::test::framework::dataset::InitializerListDataset::begin</a></div><div class="ttdeci">iterator begin() const</div><div class="ttdoc">Iterator pointing at the begin of the dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_initializer_list_dataset_8h_source.xhtml#l00118">InitializerListDataset.h:118</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator_xhtml_adef7d064407a702e9c3434eb6bf50224"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#adef7d064407a702e9c3434eb6bf50224">arm_compute::test::framework::dataset::InitializerListDataset::iterator::operator*</a></div><div class="ttdeci">InitializerListDataset::type operator*() const</div><div class="ttdoc">Get the current value.</div><div class="ttdef"><b>Definition:</b> <a href="_initializer_list_dataset_8h_source.xhtml#l00094">InitializerListDataset.h:94</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_xhtml_a18b86dafc894ede9c2b71030a731a106"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml#a18b86dafc894ede9c2b71030a731a106">arm_compute::test::framework::dataset::InitializerListDataset::type</a></div><div class="ttdeci">std::tuple&lt; T &gt; type</div><div class="ttdoc">Type of the dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_initializer_list_dataset_8h_source.xhtml#l00066">InitializerListDataset.h:66</a></div></div>
<div class="ttc" id="a_dataset_8h_xhtml"><div class="ttname"><a href="_dataset_8h.xhtml">Dataset.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator_xhtml_a07ffe70037e0a16554c868bcdd8f83b5"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5">arm_compute::test::framework::dataset::InitializerListDataset::iterator::description</a></div><div class="ttdeci">std::string description() const</div><div class="ttdoc">Get a description of the current value.</div><div class="ttdef"><b>Definition:</b> <a href="_initializer_list_dataset_8h_source.xhtml#l00085">InitializerListDataset.h:85</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator_xhtml_af1b1c7856a59f34c7d3570f946a2ff00"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#af1b1c7856a59f34c7d3570f946a2ff00">arm_compute::test::framework::dataset::InitializerListDataset::iterator::operator++</a></div><div class="ttdeci">iterator &amp; operator++()</div><div class="ttdoc">Increment the iterator.</div><div class="ttdef"><b>Definition:</b> <a href="_initializer_list_dataset_8h_source.xhtml#l00103">InitializerListDataset.h:103</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml">arm_compute::test::framework::dataset::InitializerListDataset::iterator</a></div><div class="ttdoc">Iterator for the dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_initializer_list_dataset_8h_source.xhtml#l00069">InitializerListDataset.h:69</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="dir_0dd7887818bb8d90732685575a13f58a.xhtml">datasets</a></li><li class="navelem"><a class="el" href="_initializer_list_dataset_8h.xhtml">InitializerListDataset.h</a></li>
    <li class="footer">Generated on Wed Feb 14 2024 11:14:55 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
