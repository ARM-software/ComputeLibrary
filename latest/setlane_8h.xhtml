<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/wrapper/intrinsics/setlane.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('setlane_8h.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">setlane.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;arm_neon.h&gt;</code><br />
</div>
<p><a href="setlane_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1wrapper"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml">arm_compute::wrapper</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a71aaab43da94f3ba1c715a066411960e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="setlane_8h.xhtml#a71aaab43da94f3ba1c715a066411960e">VSETLANE_IMPL_8</a>(stype,  atype,  vtype,  postfix)</td></tr>
<tr class="separator:a71aaab43da94f3ba1c715a066411960e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae98b2c562db44248be62b270e207a9d5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="setlane_8h.xhtml#ae98b2c562db44248be62b270e207a9d5">VSETLANE_IMPL_4</a>(stype,  atype,  vtype,  postfix)</td></tr>
<tr class="separator:ae98b2c562db44248be62b270e207a9d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc6a2c802844ccf851c8c05d5f442a50"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="setlane_8h.xhtml#acc6a2c802844ccf851c8c05d5f442a50">VSETLANE_IMPL_2</a>(stype,  atype,  vtype,  postfix)</td></tr>
<tr class="separator:acc6a2c802844ccf851c8c05d5f442a50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cd222120fb89be095e2ab224d279e45"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="setlane_8h.xhtml#a4cd222120fb89be095e2ab224d279e45">VSETQLANE_IMPL_16</a>(stype,  atype,  vtype,  postfix)</td></tr>
<tr class="separator:a4cd222120fb89be095e2ab224d279e45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8ae0c37fd3616c92db03637452aaa53"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="setlane_8h.xhtml#ae8ae0c37fd3616c92db03637452aaa53">VSETQLANE_IMPL_8</a>(stype,  atype,  vtype,  postfix)</td></tr>
<tr class="separator:ae8ae0c37fd3616c92db03637452aaa53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3788c6fe956c28499c7a85320577272f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="setlane_8h.xhtml#a3788c6fe956c28499c7a85320577272f">VSETQLANE_IMPL_4</a>(stype,  atype,  vtype,  postfix)</td></tr>
<tr class="separator:a3788c6fe956c28499c7a85320577272f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a6ee3531f4293703c9b32e28421bfc061"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6ee3531f4293703c9b32e28421bfc061">vsetlane</a> (const uint8_t value, const uint8x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a6ee3531f4293703c9b32e28421bfc061"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affa58b394277f910e9ee3c74c1d92f4f"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#affa58b394277f910e9ee3c74c1d92f4f">vsetlane</a> (const int8_t value, const int8x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:affa58b394277f910e9ee3c74c1d92f4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0160f519b1fe681e083a2b43975e340e"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0160f519b1fe681e083a2b43975e340e">vsetlane</a> (const uint16_t value, const uint16x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a0160f519b1fe681e083a2b43975e340e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a289ff28c038d8d2f4f34bc77bf9d7337"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a289ff28c038d8d2f4f34bc77bf9d7337">vsetlane</a> (const int16_t value, const int16x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a289ff28c038d8d2f4f34bc77bf9d7337"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab312ab1d815f0ab12b174aad45e73163"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab312ab1d815f0ab12b174aad45e73163">vsetlane</a> (const uint32_t value, const uint32x2_t vector, const unsigned int lane)</td></tr>
<tr class="separator:ab312ab1d815f0ab12b174aad45e73163"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e06d386c6840a2e151e9bb512116672"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3e06d386c6840a2e151e9bb512116672">vsetlane</a> (const int32_t value, const int32x2_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a3e06d386c6840a2e151e9bb512116672"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9d3b040097aabee689838e632cda0d8"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad9d3b040097aabee689838e632cda0d8">vsetlane</a> (const float value, const float32x2_t vector, const unsigned int lane)</td></tr>
<tr class="separator:ad9d3b040097aabee689838e632cda0d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8d6919caaf76e0ccf623776d4f8ff11"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad8d6919caaf76e0ccf623776d4f8ff11">vsetlane</a> (const uint8_t value, const uint8x16_t vector, const unsigned int lane)</td></tr>
<tr class="separator:ad8d6919caaf76e0ccf623776d4f8ff11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f433afab16132e121382bb146e7e5c8"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9f433afab16132e121382bb146e7e5c8">vsetlane</a> (const int8_t value, const int8x16_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a9f433afab16132e121382bb146e7e5c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e430a73e202fe5fe0c8d7144154f31"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa6e430a73e202fe5fe0c8d7144154f31">vsetlane</a> (const uint16_t value, const uint16x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:aa6e430a73e202fe5fe0c8d7144154f31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa73970167535f639cd8ddc192af4645b"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa73970167535f639cd8ddc192af4645b">vsetlane</a> (const int16_t value, const int16x8_t vector, const unsigned int lane)</td></tr>
<tr class="separator:aa73970167535f639cd8ddc192af4645b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee2ebe404fede9d44de77843aacef5e6"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aee2ebe404fede9d44de77843aacef5e6">vsetlane</a> (const uint32_t value, const uint32x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:aee2ebe404fede9d44de77843aacef5e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fb7bcbe12d35286550150bcfa7bd0c6"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0fb7bcbe12d35286550150bcfa7bd0c6">vsetlane</a> (const int32_t value, const int32x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:a0fb7bcbe12d35286550150bcfa7bd0c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7afef15d1a2161dd098cc72cbea32fe"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">vsetlane</a> (const float value, const float32x4_t vector, const unsigned int lane)</td></tr>
<tr class="separator:ac7afef15d1a2161dd098cc72cbea32fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="acc6a2c802844ccf851c8c05d5f442a50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc6a2c802844ccf851c8c05d5f442a50">&#9670;&nbsp;</a></span>VSETLANE_IMPL_2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VSETLANE_IMPL_2</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">atype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">inline</span> stype <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">vsetlane</a>(<span class="keyword">const</span> atype value, <span class="keyword">const</span> vtype vector, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lane) \</div><div class="line">    {                                                                                     \</div><div class="line">        switch(lane)                                                                      \</div><div class="line">        {                                                                                 \</div><div class="line">            case 0:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 0);                             \</div><div class="line">            case 1:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 1);                             \</div><div class="line">            default:                                                                      \</div><div class="line">                ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Invalid lane&quot;</span>);                                        \</div><div class="line">        }                                                                                 \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ac7afef15d1a2161dd098cc72cbea32fe"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">arm_compute::wrapper::vsetlane</a></div><div class="ttdeci">float32x4_t vsetlane(const float value, const float32x4_t vector, const unsigned int lane)</div><div class="ttdef"><b>Definition:</b> <a href="setlane_8h_source.xhtml#l00194">setlane.h:194</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00077">77</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="ae98b2c562db44248be62b270e207a9d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae98b2c562db44248be62b270e207a9d5">&#9670;&nbsp;</a></span>VSETLANE_IMPL_4</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VSETLANE_IMPL_4</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">atype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">inline</span> stype <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">vsetlane</a>(<span class="keyword">const</span> atype value, <span class="keyword">const</span> vtype vector, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lane) \</div><div class="line">    {                                                                                     \</div><div class="line">        switch(lane)                                                                      \</div><div class="line">        {                                                                                 \</div><div class="line">            case 0:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 0);                             \</div><div class="line">            case 1:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 1);                             \</div><div class="line">            case 2:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 2);                             \</div><div class="line">            case 3:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 3);                             \</div><div class="line">            default:                                                                      \</div><div class="line">                ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Invalid lane&quot;</span>);                                        \</div><div class="line">        }                                                                                 \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ac7afef15d1a2161dd098cc72cbea32fe"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">arm_compute::wrapper::vsetlane</a></div><div class="ttdeci">float32x4_t vsetlane(const float value, const float32x4_t vector, const unsigned int lane)</div><div class="ttdef"><b>Definition:</b> <a href="setlane_8h_source.xhtml#l00194">setlane.h:194</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00059">59</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="a71aaab43da94f3ba1c715a066411960e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71aaab43da94f3ba1c715a066411960e">&#9670;&nbsp;</a></span>VSETLANE_IMPL_8</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VSETLANE_IMPL_8</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">atype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">inline</span> stype <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">vsetlane</a>(<span class="keyword">const</span> atype value, <span class="keyword">const</span> vtype vector, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lane) \</div><div class="line">    {                                                                                     \</div><div class="line">        switch(lane)                                                                      \</div><div class="line">        {                                                                                 \</div><div class="line">            case 0:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 0);                             \</div><div class="line">            case 1:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 1);                             \</div><div class="line">            case 2:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 2);                             \</div><div class="line">            case 3:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 3);                             \</div><div class="line">            case 4:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 4);                             \</div><div class="line">            case 5:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 5);                             \</div><div class="line">            case 6:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 6);                             \</div><div class="line">            case 7:                                                                       \</div><div class="line">                return vset_lane_##postfix(value, vector, 7);                             \</div><div class="line">            default:                                                                      \</div><div class="line">                ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Invalid lane&quot;</span>);                                        \</div><div class="line">        }                                                                                 \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ac7afef15d1a2161dd098cc72cbea32fe"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">arm_compute::wrapper::vsetlane</a></div><div class="ttdeci">float32x4_t vsetlane(const float value, const float32x4_t vector, const unsigned int lane)</div><div class="ttdef"><b>Definition:</b> <a href="setlane_8h_source.xhtml#l00194">setlane.h:194</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00033">33</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="a4cd222120fb89be095e2ab224d279e45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4cd222120fb89be095e2ab224d279e45">&#9670;&nbsp;</a></span>VSETQLANE_IMPL_16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VSETQLANE_IMPL_16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">atype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00102">102</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="a3788c6fe956c28499c7a85320577272f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3788c6fe956c28499c7a85320577272f">&#9670;&nbsp;</a></span>VSETQLANE_IMPL_4</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VSETQLANE_IMPL_4</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">atype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">inline</span> stype <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">vsetlane</a>(<span class="keyword">const</span> atype value, <span class="keyword">const</span> vtype vector, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lane) \</div><div class="line">    {                                                                                     \</div><div class="line">        switch(lane)                                                                      \</div><div class="line">        {                                                                                 \</div><div class="line">            case 0:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 0);                            \</div><div class="line">            case 1:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 1);                            \</div><div class="line">            case 2:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 2);                            \</div><div class="line">            case 3:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 3);                            \</div><div class="line">            default:                                                                      \</div><div class="line">                ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Invalid lane&quot;</span>);                                        \</div><div class="line">        }                                                                                 \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ac7afef15d1a2161dd098cc72cbea32fe"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">arm_compute::wrapper::vsetlane</a></div><div class="ttdeci">float32x4_t vsetlane(const float value, const float32x4_t vector, const unsigned int lane)</div><div class="ttdef"><b>Definition:</b> <a href="setlane_8h_source.xhtml#l00194">setlane.h:194</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00170">170</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
<a id="ae8ae0c37fd3616c92db03637452aaa53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8ae0c37fd3616c92db03637452aaa53">&#9670;&nbsp;</a></span>VSETQLANE_IMPL_8</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VSETQLANE_IMPL_8</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">atype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">inline</span> stype <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">vsetlane</a>(<span class="keyword">const</span> atype value, <span class="keyword">const</span> vtype vector, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lane) \</div><div class="line">    {                                                                                     \</div><div class="line">        switch(lane)                                                                      \</div><div class="line">        {                                                                                 \</div><div class="line">            case 0:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 0);                            \</div><div class="line">            case 1:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 1);                            \</div><div class="line">            case 2:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 2);                            \</div><div class="line">            case 3:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 3);                            \</div><div class="line">            case 4:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 4);                            \</div><div class="line">            case 5:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 5);                            \</div><div class="line">            case 6:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 6);                            \</div><div class="line">            case 7:                                                                       \</div><div class="line">                return vsetq_lane_##postfix(value, vector, 7);                            \</div><div class="line">            default:                                                                      \</div><div class="line">                ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Invalid lane&quot;</span>);                                        \</div><div class="line">        }                                                                                 \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ac7afef15d1a2161dd098cc72cbea32fe"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ac7afef15d1a2161dd098cc72cbea32fe">arm_compute::wrapper::vsetlane</a></div><div class="ttdeci">float32x4_t vsetlane(const float value, const float32x4_t vector, const unsigned int lane)</div><div class="ttdef"><b>Definition:</b> <a href="setlane_8h_source.xhtml#l00194">setlane.h:194</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="setlane_8h_source.xhtml#l00144">144</a> of file <a class="el" href="setlane_8h_source.xhtml">setlane.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_8224aa485683c095eaa3fd7faa788467.xhtml">wrapper</a></li><li class="navelem"><a class="el" href="dir_bc2a33106e4dbca04e80e17904e2949d.xhtml">intrinsics</a></li><li class="navelem"><a class="el" href="setlane_8h.xhtml">setlane.h</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:34 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
