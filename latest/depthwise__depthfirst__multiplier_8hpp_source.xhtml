<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/arm_conv/depthwise/depthwise_depthfirst_multiplier.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('depthwise__depthfirst__multiplier_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">depthwise_depthfirst_multiplier.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="depthwise__depthfirst__multiplier_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021-2023 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="depthwise__depthfirst_8hpp.xhtml">depthwise_depthfirst.hpp</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="generic__quantized__dot__product_8hpp.xhtml">interleaves/generic_quantized_dot_product.hpp</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;profiler.hpp&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;limits&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__conv.xhtml">arm_conv</a> {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__conv_1_1depthwise.xhtml#a301c401a1e9a5ac74367c4719a185aa4">depthwise</a> {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TInput, <span class="keyword">typename</span> TWeight, <span class="keyword">typename</span> TOutput, <span class="keyword">typename</span> TAccum&gt;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml">   40</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml">DepthfirstMultiplierStrategy</a> : <span class="keyword">public</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml">DepthwiseDepthfirstStrategyCommon</a>&lt;TInput, TWeight, TOutput, TAccum, Nothing&gt;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml">Parent</a> = <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml">DepthwiseDepthfirstStrategyCommon&lt;TInput, TWeight, TOutput, TAccum, Nothing&gt;</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml">interleaves::PackingArguments</a> get_packing_args(<span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml">interleaves::PackingArguments</a>(</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      args.kernel_rows, args.kernel_cols, <span class="keyword">sizeof</span>(TWeight),</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keyword">true</span>, <span class="keyword">sizeof</span>(TAccum),</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      this-&gt;get_vl_type(),</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <span class="keyword">sizeof</span>(TAccum), 1,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      [args] (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pos, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;x, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;y) -&gt; <span class="keywordtype">bool</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">if</span> (pos &lt; args.kernel_rows * args.kernel_cols)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;          y = pos % args.kernel_cols;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;          x = pos / args.kernel_cols;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;          <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    );</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keyword">using</span> Parent::Parent;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a1acb91503a7760505b240fc04bbab5ad">   68</a></span>&#160;  <span class="keywordtype">size_t</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a1acb91503a7760505b240fc04bbab5ad">get_storage_size</a>(<span class="keyword">const</span> DepthwiseArgs &amp;args)<span class="keyword"> const override</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#af85eedd0781815c14baa970aeecb8c88">interleaves::get_storage_size_generic</a>(this-&gt;get_packing_args(args), args);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a4609b82cd2843c9c0f63958e32a67f87">   73</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a4609b82cd2843c9c0f63958e32a67f87">pack_parameters</a>(<span class="keyword">const</span> DepthwiseArgs &amp;args, <span class="keywordtype">void</span> *buffer, <span class="keyword">const</span> <span class="keywordtype">void</span> *biases, <span class="keyword">const</span> Nothing &amp;, <span class="keyword">const</span> <span class="keywordtype">void</span> *weights, <span class="keywordtype">size_t</span> ld_weight_col, <span class="keywordtype">size_t</span> ld_weight_row)<span class="keyword"> const override</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#a3b433ad9e7b77bf0702700e2006e4210">interleaves::pack_parameters_generic</a>(</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      this-&gt;get_packing_args(args), args,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      buffer, biases, weights, ld_weight_col, ld_weight_row</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    );</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a86b843e6e497f3428f042a153be8e3de">KernelType</a> = std::function&lt;void(</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">const</span> TInput *<span class="keyword">const</span> *,  <span class="comment">// Input pointers</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    TOutput *<span class="keyword">const</span> *,  <span class="comment">// Output pointers</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span> *,  <span class="comment">// Ravelled bias, weights, and quantization parameters</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>,  <span class="comment">// # output channels</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    TAccum, TAccum  <span class="comment">// Min and max activation clamps</span></div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a86b843e6e497f3428f042a153be8e3de">   87</a></span>&#160;  )&gt;;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a86b843e6e497f3428f042a153be8e3de">KernelType</a> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a213a049a509b6b12d98016281ece3452">get_kernel</a>(<span class="keywordtype">void</span>) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;};</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TInput, <span class="keyword">typename</span> TWeight, <span class="keyword">typename</span> TOutput&gt;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml">   93</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml">DepthfirstMultiplierStrategy</a>&lt;TInput, TWeight, TOutput, int32_t&gt; : <span class="keyword">public</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml">DepthwiseDepthfirstStrategyCommon</a>&lt;TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32&gt;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml">Parent</a> = <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml">DepthwiseDepthfirstStrategyCommon&lt;TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32&gt;</a>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keyword">using</span> Parent::Parent;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#a1acb91503a7760505b240fc04bbab5ad">  100</a></span>&#160;  <span class="keywordtype">size_t</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#a1acb91503a7760505b240fc04bbab5ad">get_storage_size</a>(<span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)<span class="keyword"> const override</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml#a3c07bfae0d3b8aba15074993bb857ac8">interleaves::quantized::get_storage_size</a>(args, this-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped.xhtml#a6ea077ec0229769c0b470fe86fea145a">get_vl_type</a>(), this-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped.xhtml#af32c964a5f1151f1c9b32dbdc8b1689c">get_accumulator_depth_vl</a>());</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#a409288287d6409326f4dcf71d19ea12f">  105</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#a409288287d6409326f4dcf71d19ea12f">pack_parameters</a>(<span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, <span class="keywordtype">void</span> *buffer, <span class="keyword">const</span> <span class="keywordtype">void</span> *biases, <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;qp, <span class="keyword">const</span> <span class="keywordtype">void</span> *weights, <span class="keywordtype">size_t</span> ld_weight_col, <span class="keywordtype">size_t</span> ld_weight_row)<span class="keyword"> const override</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    interleaves::quantized::pack_parameters&lt;TWeight&gt;(</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      buffer, <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(biases),</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      reinterpret_cast&lt;const TWeight *&gt;(weights), ld_weight_col, ld_weight_row,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, qp, this-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped.xhtml#a6ea077ec0229769c0b470fe86fea145a">get_vl_type</a>(), this-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped.xhtml#af32c964a5f1151f1c9b32dbdc8b1689c">get_accumulator_depth_vl</a>()</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    );</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#adde274d1c3c0eb97189328ab739a2dd0">KernelType</a> = std::function&lt;void(</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">const</span> TInput *<span class="keyword">const</span> *,  <span class="comment">// Input pointers</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    TOutput *<span class="keyword">const</span> *,  <span class="comment">// Output pointers</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span> *,  <span class="comment">// Ravelled bias, weights, and quantization parameters</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>,  <span class="comment">// # output channels</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#adde274d1c3c0eb97189328ab739a2dd0">  120</a></span>&#160;  )&gt;;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#adde274d1c3c0eb97189328ab739a2dd0">KernelType</a> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a213a049a509b6b12d98016281ece3452">get_kernel</a>(<span class="keywordtype">void</span>) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;};</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TInput, <span class="keyword">typename</span> TWeight, <span class="keyword">typename</span> TOutput, <span class="keyword">typename</span> TAccum&gt;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml">  126</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml">GenericDepthfirstMultiplierKernelStrategy</a></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keyword">const</span> <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a> m_vl_type;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m_output_rows, m_output_cols;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a63e2855b5eed5edcbbe03bd8493f98f5">  132</a></span>&#160;  <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a63e2855b5eed5edcbbe03bd8493f98f5">GenericDepthfirstMultiplierKernelStrategy</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> output_rows, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> output_cols, <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a> vl_type)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  : m_vl_type(vl_type), m_output_rows(output_rows), m_output_cols(output_cols)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  {</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml">GenericDepthfirstMultiplierKernelStrategy</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a672db57afb5b519e1406c3fd1d74c117">  139</a></span>&#160;  <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a672db57afb5b519e1406c3fd1d74c117">get_vl_type</a>(<span class="keywordtype">void</span>)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_vl_type; }</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a3fcdbc0eeb82102e92f066c1b65473ab">  140</a></span>&#160;  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a3fcdbc0eeb82102e92f066c1b65473ab">get_output_rows</a>(<span class="keywordtype">void</span>)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_output_rows; }</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a58d696bd3a01bb6adb455585c1835a78">  141</a></span>&#160;  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a58d696bd3a01bb6adb455585c1835a78">get_output_cols</a>(<span class="keywordtype">void</span>)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_output_cols; }</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a88ca7ecdfec85e09635626174457b48f">KernelType</a> = std::function&lt;void(</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">const</span> TInput *<span class="keyword">const</span> *,  <span class="comment">// Input pointers</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    TOutput *<span class="keyword">const</span> *,  <span class="comment">// Output pointers</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keyword">const</span> TWeight *,  <span class="comment">// Ravelled weight parameters</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keyword">const</span> TAccum *,  <span class="comment">// Bias,</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>,  <span class="comment">// Number of kernel points, number of output channels</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    TAccum, TAccum  <span class="comment">// Activation minimum and maximum</span></div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a88ca7ecdfec85e09635626174457b48f">  150</a></span>&#160;  )&gt;;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a88ca7ecdfec85e09635626174457b48f">KernelType</a> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a213a049a509b6b12d98016281ece3452">get_kernel</a>(<span class="keywordtype">void</span>) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;};</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TInput, <span class="keyword">typename</span> TWeight, <span class="keyword">typename</span> TOutput&gt;</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml">  155</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml">GenericDepthfirstMultiplierKernelStrategy</a>&lt;TInput, TWeight, TOutput, int32_t&gt;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keyword">const</span> <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a> m_vl_type;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m_output_rows, m_output_cols;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a63e2855b5eed5edcbbe03bd8493f98f5">  161</a></span>&#160;  <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a63e2855b5eed5edcbbe03bd8493f98f5">GenericDepthfirstMultiplierKernelStrategy</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> output_rows, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> output_cols, <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a> vl_type)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  : m_vl_type(vl_type), m_output_rows(output_rows), m_output_cols(output_cols)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  }</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml">GenericDepthfirstMultiplierKernelStrategy</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a672db57afb5b519e1406c3fd1d74c117">  168</a></span>&#160;  <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a672db57afb5b519e1406c3fd1d74c117">get_vl_type</a>(<span class="keywordtype">void</span>)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_vl_type; }</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a3fcdbc0eeb82102e92f066c1b65473ab">  169</a></span>&#160;  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a3fcdbc0eeb82102e92f066c1b65473ab">get_output_rows</a>(<span class="keywordtype">void</span>)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_output_rows; }</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a58d696bd3a01bb6adb455585c1835a78">  170</a></span>&#160;  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a58d696bd3a01bb6adb455585c1835a78">get_output_cols</a>(<span class="keywordtype">void</span>)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_output_cols; }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a619d60ec4200c67aea43e047966832b2">KernelType</a> = std::function&lt;void(</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">const</span> TInput *<span class="keyword">const</span> *,  <span class="comment">// Input pointers</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    TOutput *<span class="keyword">const</span> *,  <span class="comment">// Output pointers</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">const</span> TWeight *,  <span class="comment">// Ravelled weight parameters</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">const</span> int32_t *,  <span class="comment">// Bias,</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>,  <span class="comment">// Number of kernel points, number of output channels</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keyword">const</span> int32_t *, <span class="keyword">const</span> int32_t *, <span class="keyword">const</span> int32_t *,  <span class="comment">// Per-channel left-shifts, multipliers, right-shifts (need to account for start channel)</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;</div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a619d60ec4200c67aea43e047966832b2">  180</a></span>&#160;  )&gt;;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a619d60ec4200c67aea43e047966832b2">KernelType</a> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a213a049a509b6b12d98016281ece3452">get_kernel</a>(<span class="keywordtype">void</span>) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;};</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TInput,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;          <span class="keyword">typename</span> TWeight=TInput,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;          <span class="keyword">typename</span> TOutput=TInput,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;          <span class="keyword">typename</span> TAccum=<span class="keyword">typename</span> <a class="code" href="structarm__conv_1_1depthwise_1_1_default_t_accum.xhtml#a19462713b2aab2dae2c87c15f262c1df">DefaultTAccum&lt;TInput&gt;::Type</a>,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;          <span class="keyword">typename</span> OutputStage=<span class="keyword">typename</span> <a class="code" href="structarm__conv_1_1depthwise_1_1_default_output_stage.xhtml#ad1c388be4cf6c188965e6b72059cfcfc">DefaultOutputStage&lt;TOutput&gt;::Type</a>&gt;</div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml">  189</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml">GenericDepthfirstMultiplierStrategy</a> : <span class="keyword">public</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml">DepthwiseDepthfirstStrategyCommon</a>&lt;TInput, TWeight, TOutput, TAccum, OutputStage&gt;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;{</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml">KernelStrategyType</a> = <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml">GenericDepthfirstMultiplierKernelStrategy&lt;TInput, TWeight, TOutput, TAccum&gt;</a>;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  std::unique_ptr&lt;KernelStrategyType&gt; m_kern;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml">interleaves::PackingArguments</a> get_packing_args(<span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml">interleaves::PackingArguments</a>(</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      args.kernel_rows, args.kernel_cols, <span class="keyword">sizeof</span>(TWeight),</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      <span class="keyword">false</span>, <span class="keyword">sizeof</span>(TAccum),</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      this-&gt;get_vl_type(),</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keyword">sizeof</span>(TAccum), 1,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      [args] (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pos, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;x, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;y) -&gt; <span class="keywordtype">bool</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">if</span> (pos &lt; args.kernel_rows * args.kernel_cols)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;          y = pos % args.kernel_cols;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;          x = pos / args.kernel_cols;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;          <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        }</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      }</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    );</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  }</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#aa9a277424e7b2ccc8d7b3aa3c6b6cca3">  216</a></span>&#160;  <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#aa9a277424e7b2ccc8d7b3aa3c6b6cca3">GenericDepthfirstMultiplierStrategy</a>(<a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml">KernelStrategyType</a> *kern, <span class="keyword">const</span> DepthwiseArgs &amp;args)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  : <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml">DepthwiseDepthfirstStrategyCommon</a>&lt;TInput, TWeight, TOutput, TAccum, OutputStage&gt;(</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      kern-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#ae182865cdff73ca56af4666d7838db03">get_output_rows</a>(), kern-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#a1fe0caf3ebe69821625efdba45bc2ccb">get_output_cols</a>(),</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      args.kernel_rows, args.kernel_cols,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      args.stride_rows, args.stride_cols</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    ),</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    m_kern(kern)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  };</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a3f549ec2869cd48051635efa4c2a257b">  226</a></span>&#160;  <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a3f549ec2869cd48051635efa4c2a257b">get_vl_type</a>(<span class="keywordtype">void</span>)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_kern-&gt;get_vl_type(); }</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a683b87f31fca586a59cc832bd68ebbe6">  227</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">typename</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a88ca7ecdfec85e09635626174457b48f">KernelStrategyType::KernelType</a> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a683b87f31fca586a59cc832bd68ebbe6">get_kernel</a>(<span class="keywordtype">void</span>)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_kern-&gt;get_kernel(); }</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a1acb91503a7760505b240fc04bbab5ad">  229</a></span>&#160;  <span class="keywordtype">size_t</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a1acb91503a7760505b240fc04bbab5ad">get_storage_size</a>(<span class="keyword">const</span> DepthwiseArgs &amp;args)<span class="keyword"> const override</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#af85eedd0781815c14baa970aeecb8c88">interleaves::get_storage_size_generic</a>(this-&gt;get_packing_args(args), args);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#af41768f9bbd652f57eec14b53afd6059">  234</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#af41768f9bbd652f57eec14b53afd6059">pack_parameters</a>(<span class="keyword">const</span> DepthwiseArgs &amp;args, <span class="keywordtype">void</span> *buffer, <span class="keyword">const</span> <span class="keywordtype">void</span> *biases, <span class="keyword">const</span> OutputStage &amp;, <span class="keyword">const</span> <span class="keywordtype">void</span> *weights, <span class="keywordtype">size_t</span> ld_weight_col, <span class="keywordtype">size_t</span> ld_weight_row)<span class="keyword"> const override</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#a3b433ad9e7b77bf0702700e2006e4210">interleaves::pack_parameters_generic</a>(</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      this-&gt;get_packing_args(args), args,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      buffer, biases, weights, ld_weight_col, ld_weight_row</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    );</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  }</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;};</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">// Specialise elements of the wrapper based on the type of kernel.</span></div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="namespacearm__conv_1_1depthwise_1_1depthfirst__multiplier.xhtml">  244</a></span>&#160;<span class="keyword">namespace </span>depthfirst_multiplier {</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">/* Working space element which contains a pointer for each row of input, a row</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment"> * of padding, and a space which can be used to construct an NCHW-ordered patch</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"> * of input.</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">bool</span> IsGeneric=false, <span class="keyword">typename</span> OutputStage=Nothing&gt;</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml">  251</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml">InputPatchElement</a></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;{</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml">  254</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml">Workspace</a></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  {</div><div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml#aa95dd12a6606221bf412a73a4c4c1b82">  256</a></span>&#160;    constexpr <span class="keyword">static</span> <span class="keywordtype">bool</span> InputPatchIsGeneric = IsGeneric;</div><div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml#a531715bab2ce1c06d09b1bf760ba6e62">  257</a></span>&#160;    <span class="keyword">const</span> T **<a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml#a531715bab2ce1c06d09b1bf760ba6e62">input_rows</a>;</div><div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml#a73a632dcf91168b6b91d726cdaefa263">  258</a></span>&#160;    T *<a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml#a73a632dcf91168b6b91d726cdaefa263">input_padding</a>;</div><div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml#aae6526cb20bf969aeb25f5cce559c477">  259</a></span>&#160;    T *<a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml#aae6526cb20bf969aeb25f5cce559c477">input_patch</a>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  };</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml#aa122caf1edb725491f3966b18d8c8400">  262</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">size_t</span> <a class="code" href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml#aa122caf1edb725491f3966b18d8c8400">get_element_size</a>(<span class="keyword">const</span> WorkspaceArgs&lt;IDepthfirstStrategy, OutputStage&gt; &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  {</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">return</span> sizeof_input_rows(args) + sizeof_input_padding(args) + sizeof_input_patch(args);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  }</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> WorkspaceType&gt;</div><div class="line"><a name="l00268"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml#ac9b9082d4ed031f4d6a6a497c2b9f889">  268</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> *<a class="code" href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml#ac9b9082d4ed031f4d6a6a497c2b9f889">initialise</a>(WorkspaceType *ws, <span class="keywordtype">void</span> *buffer, <span class="keyword">const</span> WorkspaceArgs&lt;IDepthfirstStrategy, OutputStage&gt; &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keyword">auto</span> buffer_bytes = <span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(buffer);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    ws-&gt;input_rows = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T **<span class="keyword">&gt;</span>(buffer_bytes);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    buffer_bytes += sizeof_input_rows(args);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    ws-&gt;input_padding = <span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(buffer_bytes);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    buffer_bytes += sizeof_input_padding(args);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    ws-&gt;input_patch = <span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(buffer_bytes);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    buffer_bytes += sizeof_input_patch(args);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="comment">// Initialise the padding</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    memset(ws-&gt;input_padding,</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;           get_input_buffer_fill_value(args.output_stage),</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;           sizeof_input_padding(args));</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keywordflow">return</span> buffer_bytes;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  }</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">size_t</span> sizeof_input_rows(<span class="keyword">const</span> WorkspaceArgs&lt;IDepthfirstStrategy, OutputStage&gt; &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  {</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">if</span> (IsGeneric)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    {</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(T *) * args.strategy-&gt;get_output_rows() * args.depthwise_args.kernel_rows * args.depthwise_args.kernel_cols;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    }</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    {</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(T *) * args.strategy-&gt;get_input_rows();</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    }</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  }</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">size_t</span> sizeof_input_padding(<span class="keyword">const</span> WorkspaceArgs&lt;IDepthfirstStrategy, OutputStage&gt; &amp;args)</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  {</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="comment">// Round-up the number of columns to be a whole number of QUADS</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keyword">auto</span> input_cols = arm_gemm::roundup&lt;size_t&gt;(args.strategy-&gt;get_input_cols(), 16 / <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(T) * input_cols;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">size_t</span> sizeof_input_patch(<span class="keyword">const</span> WorkspaceArgs&lt;IDepthfirstStrategy, OutputStage&gt; &amp;args)</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  {</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordflow">if</span> (IsGeneric)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      <span class="comment">// Round-up the number of columns to be a whole number of QUADS</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;      <span class="keyword">auto</span> output_cols = arm_gemm::roundup&lt;size_t&gt;(args.strategy-&gt;get_output_cols(), 16 / <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      <span class="keyword">const</span> <span class="keyword">auto</span> kernel_points = args.depthwise_args.kernel_rows * args.depthwise_args.kernel_cols;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(T) * kernel_points * args.strategy-&gt;get_output_rows() * output_cols;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    }</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    {</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      <span class="comment">// Round-up the number of columns to be a whole number of QUADS</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      <span class="keyword">auto</span> input_cols = arm_gemm::roundup&lt;size_t&gt;(args.strategy-&gt;get_input_cols(), 16 / <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(T) * args.strategy-&gt;get_input_rows() * input_cols;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    }</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  }</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;};</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> IsGeneric, <span class="keyword">typename</span> TInput, <span class="keyword">typename</span> TWeight, <span class="keyword">typename</span> TOutput, <span class="keyword">typename</span> TAccum, <span class="keyword">typename</span> OutputStage&gt;</div><div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml">  328</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml">StrategyType</a></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;{</div><div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml#ab2b8a130df769bc9d79afb75aba2dd01">  330</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml">Type</a> = <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml">DepthfirstMultiplierStrategy&lt;TInput, TWeight, TOutput, TAccum&gt;</a>;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> WorkspaceType&gt;</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml#a38a8ef712ab8f0ea28e78e0d401dd2bb">  333</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml#a38a8ef712ab8f0ea28e78e0d401dd2bb">execute</a>(</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, <span class="keyword">const</span> WorkspaceType *ws, <span class="keyword">const</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml">Type</a> *strat,</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keyword">const</span> OutputStage &amp;, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>,</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>, <span class="keyword">const</span> <span class="keywordtype">void</span> *</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  )</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  {</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    strat-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a213a049a509b6b12d98016281ece3452">get_kernel</a>()(</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      ws-&gt;input_rows,</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      ws-&gt;outptr_array,</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      <a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>, args.channel_multiplier,</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      ws-&gt;activation_min, ws-&gt;activation_max</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    );</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;  }</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;};</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TInput, <span class="keyword">typename</span> TWeight, <span class="keyword">typename</span> TOutput, <span class="keyword">typename</span> TAccum, <span class="keyword">typename</span> OutputStage&gt;</div><div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_7baeeac6248d2dc629261e41fed0f86e.xhtml">  349</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml">StrategyType</a>&lt;true, TInput, TWeight, TOutput, TAccum, OutputStage&gt;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;{</div><div class="line"><a name="l00351"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_7baeeac6248d2dc629261e41fed0f86e.xhtml#a7e26d9e2efd27df8afff17ef7a695528">  351</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml">Type</a> = <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml">GenericDepthfirstMultiplierStrategy&lt;TInput, TWeight, TOutput, TAccum, OutputStage&gt;</a>;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> WorkspaceType&gt;</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_7baeeac6248d2dc629261e41fed0f86e.xhtml#a8b3ad2cafbe109e2b91d4944e55a1c52">  354</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_7baeeac6248d2dc629261e41fed0f86e.xhtml#a8b3ad2cafbe109e2b91d4944e55a1c52">execute</a>(</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, <span class="keyword">const</span> WorkspaceType *ws, <span class="keyword">const</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml">Type</a> *strat,</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">const</span> OutputStage &amp;, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> start_output_channel,</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>, <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  )</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  {</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    strat-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a683b87f31fca586a59cc832bd68ebbe6">get_kernel</a>()(</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;      ws-&gt;input_rows, ws-&gt;outptr_array,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>TWeight *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>),</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;      bias == <span class="keyword">nullptr</span> ? <span class="keyword">nullptr</span> : reinterpret_cast&lt;const TAccum *&gt;(bias) + start_output_channel,</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;      strat-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#a61022a026be7541324ca329c3808c4e3">get_kernel_rows</a>() * strat-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#a597d78c22aeb4ab8cf434d48b9dfbedd">get_kernel_cols</a>(),</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;      args.channel_multiplier,</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;      ws-&gt;activation_min, ws-&gt;activation_max</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    );</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  }</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;};</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TInput, <span class="keyword">typename</span> TWeight, <span class="keyword">typename</span> TOutput&gt;</div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01false_00_01_t_input8633ae7ee5836c9610d7020e509234f1.xhtml">  372</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml">StrategyType</a>&lt;false, TInput, TWeight, TOutput, int32_t, <a class="code" href="namespacearm__gemm.xhtml">arm_gemm</a>::Requantize32&gt;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;{</div><div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01false_00_01_t_input8633ae7ee5836c9610d7020e509234f1.xhtml#a17340cdd3e1be3c29b501a967476d8a2">  374</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml">Type</a> = <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml">DepthfirstMultiplierStrategy&lt;TInput, TWeight, TOutput, int32_t&gt;</a>;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> WorkspaceType&gt;</div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01false_00_01_t_input8633ae7ee5836c9610d7020e509234f1.xhtml#a16a2cb966ea83879ace2fb499c7a3345">  377</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01false_00_01_t_input8633ae7ee5836c9610d7020e509234f1.xhtml#a16a2cb966ea83879ace2fb499c7a3345">execute</a>(</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, <span class="keyword">const</span> WorkspaceType *ws, <span class="keyword">const</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml">Type</a> *strat,</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;qp, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>,</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>, <span class="keyword">const</span> <span class="keywordtype">void</span> *</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  )</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;  {</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    strat-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#a213a049a509b6b12d98016281ece3452">get_kernel</a>()(</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;      ws-&gt;input_rows,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;      ws-&gt;outptr_array,</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;      <a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>, args.channel_multiplier,</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;      qp</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    );</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;  }</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;};</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TInput, <span class="keyword">typename</span> TWeight, <span class="keyword">typename</span> TOutput&gt;</div><div class="line"><a name="l00393"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_a0f24e403e092ed08cc3d3280257460e.xhtml">  393</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml">StrategyType</a>&lt;true, TInput, TWeight, TOutput, int32_t, <a class="code" href="namespacearm__gemm.xhtml">arm_gemm</a>::Requantize32&gt;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;{</div><div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_a0f24e403e092ed08cc3d3280257460e.xhtml#af56baf7cf96d4d8e90eac0b3c9163d62">  395</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml">Type</a> = <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml">GenericDepthfirstMultiplierStrategy&lt;TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32&gt;</a>;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> WorkspaceType&gt;</div><div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_a0f24e403e092ed08cc3d3280257460e.xhtml#a55f66724f2f14b8ab82555a03792b9b4">  398</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_a0f24e403e092ed08cc3d3280257460e.xhtml#a55f66724f2f14b8ab82555a03792b9b4">execute</a>(</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, <span class="keyword">const</span> WorkspaceType *ws, <span class="keyword">const</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml">Type</a> *strat,</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;qp, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> start_output_channel,</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>, <span class="keyword">const</span> <span class="keywordtype">void</span> *</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;  )</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;  {</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keyword">auto</span> get_ptr = [start_output_channel] (<span class="keyword">const</span> int32_t *ptr) -&gt; <span class="keyword">const</span> int32_t *</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    {</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;      <span class="keywordflow">return</span> ptr == <span class="keyword">nullptr</span> ? nullptr : ptr + start_output_channel;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    };</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    strat-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a683b87f31fca586a59cc832bd68ebbe6">get_kernel</a>()(</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;      ws-&gt;input_rows, ws-&gt;outptr_array,</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;      <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>TWeight *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>),</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;      get_ptr(qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>),</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;      strat-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#a61022a026be7541324ca329c3808c4e3">get_kernel_rows</a>() * strat-&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#a597d78c22aeb4ab8cf434d48b9dfbedd">get_kernel_cols</a>(),</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;      args.channel_multiplier,</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;      get_ptr(qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#a3ad1d3cf7c5a8da7c3b967846f273b4e">per_channel_left_shifts</a>),</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;      get_ptr(qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#aa081b66a13642ceee7dfe18b03643557">per_channel_muls</a>),</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;      get_ptr(qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#aef9f2c9dc4dbdef956505940d6b2895e">per_channel_right_shifts</a>),</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;      qp</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    );</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  }</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;};</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample.xhtml">  423</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> IsGeneric&gt; <span class="keyword">struct </span><a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample.xhtml">PrepareInputSample</a>;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01false_01_4.xhtml">  425</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample.xhtml">PrepareInputSample</a>&lt;false&gt;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;{</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> WorkspaceType, <span class="keyword">typename</span> StrategyType, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01false_01_4.xhtml#ab1ee542036ed325ccb2bbe773c082f81">  428</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01false_01_4.xhtml#ab1ee542036ed325ccb2bbe773c082f81">execute</a>(</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keyword">const</span> DepthwiseArgs &amp;, WorkspaceType *ws, <span class="keyword">const</span> <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml">StrategyType</a> *strat,</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    T *base_ptr, <span class="keywordtype">size_t</span> ld_row, <span class="keywordtype">size_t</span> ld_col,</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> input_pad_top, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> valid_rows,</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> input_pad_left, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> valid_cols</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;  )</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;  {</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <a class="code" href="namespacearm__conv_1_1addressing.xhtml#a719b338d6f0e8dbca5c79e186e35d7dc">fill_nchw_patch_array</a>(</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;      ws-&gt;input_rows, ws-&gt;input_patch, strat-&gt;get_input_rows(), strat-&gt;get_input_cols(),</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      base_ptr, ld_row, ld_col,</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      ws-&gt;input_padding,</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      input_pad_top, valid_rows,</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      input_pad_left, valid_cols</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    );</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;  }</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;};</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01true_01_4.xhtml">  445</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample.xhtml">PrepareInputSample</a>&lt;true&gt;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;{</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> WorkspaceType, <span class="keyword">typename</span> StrategyType, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00448"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01true_01_4.xhtml#a0039b8384d2e35e51dc14335e54f7d52">  448</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01true_01_4.xhtml#a0039b8384d2e35e51dc14335e54f7d52">execute</a>(</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, WorkspaceType *ws, <span class="keyword">const</span> <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml">StrategyType</a> *strat,</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    T *base_ptr, <span class="keywordtype">size_t</span> ld_row, <span class="keywordtype">size_t</span> ld_col,</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> input_pad_top, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> valid_rows,</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> input_pad_left, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> valid_cols</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;  )</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;  {</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <a class="code" href="namespacearm__conv_1_1addressing.xhtml#a8907161c1f7f9e0fba0a270607659cc8">fill_patch_array_generic_kernel</a>(</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      ws-&gt;input_rows, ws-&gt;input_patch,</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      strat-&gt;get_output_rows(), strat-&gt;get_output_cols(),</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      args.kernel_rows, args.kernel_cols,</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;      args.stride_rows, args.stride_cols,</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;      base_ptr, ld_row, ld_col,</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;      ws-&gt;input_padding,</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;      input_pad_top, valid_rows,</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;      input_pad_left, valid_cols</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    );</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  }</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;};</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;}  <span class="comment">// namespace depthfirst_multiplier</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TInput,</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;          <span class="keyword">typename</span> TWeight=TInput,</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;          <span class="keyword">typename</span> TOutput=TInput,</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;          <span class="keyword">typename</span> TAccum=<span class="keyword">typename</span> <a class="code" href="structarm__conv_1_1depthwise_1_1_default_t_accum.xhtml#a19462713b2aab2dae2c87c15f262c1df">DefaultTAccum&lt;TInput&gt;::Type</a>,</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;          <span class="keywordtype">bool</span> is_generic=<span class="keyword">false</span>,</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;          <span class="keyword">typename</span> OutputStage=<span class="keyword">typename</span> <a class="code" href="structarm__conv_1_1depthwise_1_1_default_output_stage.xhtml#ad1c388be4cf6c188965e6b72059cfcfc">DefaultOutputStage&lt;TOutput&gt;::Type</a>&gt;</div><div class="line"><a name="l00476"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">  476</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a> : <span class="keyword">public</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml">DepthfirstDriver</a>&lt;TInput, TWeight, TOutput&gt;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;{</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;  <span class="keyword">using</span> StratType = <span class="keyword">typename</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml">depthfirst_multiplier::StrategyType&lt;is_generic, TInput, TWeight, TOutput, TAccum, OutputStage&gt;::Type</a>;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;  <span class="keyword">using</span> WorkspaceManager = Workspace&lt;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    OutputArrayElement&lt;TOutput&gt;,</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <a class="code" href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml">depthfirst_multiplier::InputPatchElement&lt;TInput, is_generic, OutputStage&gt;</a>,</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    ActivationsElement&lt;TOutput, OutputStage&gt;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;  &gt;;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;  <span class="keyword">using</span> WorkingSpace = <span class="keyword">typename</span> WorkspaceManager::WorkspaceType;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  OutputStage m_os;  <span class="comment">// Copy of the output parameters</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">void</span> *m_bias = <span class="keyword">nullptr</span>;  <span class="comment">// Copy of the bias (should we need it)</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00491"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a8214e0e5ed09ebfc669544d7631e1b2d">  491</a></span>&#160;  <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a8214e0e5ed09ebfc669544d7631e1b2d">DepthwiseDepthfirstMultiplier</a>(StratType *<span class="keyword">const</span> strat, <span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, <span class="keyword">const</span> OutputStage &amp;os = {})</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;  : <a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml">DepthfirstDriver&lt;TInput, TWeight, TOutput&gt;</a>(strat, args), m_os(os)</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;  {</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;  }</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;  <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a>(<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;  <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a> &amp;operator=(<a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">DepthwiseDepthfirstMultiplier</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a6de6182e7c12d5492f092057f5b32d30">  499</a></span>&#160;  <span class="keywordtype">size_t</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a6de6182e7c12d5492f092057f5b32d30">get_storage_size</a>(<span class="keywordtype">void</span>)<span class="keyword"> const override</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>StratType *<span class="keyword">&gt;</span>(this-&gt;m_strat.get())</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;      -&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a1acb91503a7760505b240fc04bbab5ad">get_storage_size</a>(this-&gt;m_args);</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  }</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a4e86e96b1933ec8bd8eae5f55654d111">  505</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a4e86e96b1933ec8bd8eae5f55654d111">pack_parameters</a>(<span class="keywordtype">void</span> *buffer, <span class="keyword">const</span> <span class="keywordtype">void</span> *biases, <span class="keyword">const</span> <span class="keywordtype">void</span> *weights, <span class="keywordtype">size_t</span> ld_weight_col, <span class="keywordtype">size_t</span> ld_weight_row)<span class="keyword"> override</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>StratType *<span class="keyword">&gt;</span>(this-&gt;m_strat.get())</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;      -&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a4609b82cd2843c9c0f63958e32a67f87">pack_parameters</a>(this-&gt;m_args, buffer, biases, m_os, weights, ld_weight_col, ld_weight_row);</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    m_bias = biases;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    depthwise_depthfirst::stash_bias(m_os, biases);</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;  }</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a687bf0465cc14a64b153fa47d61c66d1">  513</a></span>&#160;  <span class="keywordtype">size_t</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a687bf0465cc14a64b153fa47d61c66d1">get_working_size_per_thread</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_input_channels)<span class="keyword"> const override</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    DepthwiseArgs <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>(this-&gt;m_args);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    args.input_channels = n_input_channels;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keywordflow">return</span> WorkspaceManager::get_sizeof_workspace(WorkspaceArgs&lt;IDepthfirstStrategy, OutputStage&gt;(this-&gt;m_strat.get(), <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, m_os));</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;  }</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#ad921c8dea76a17f4cbccf64db16a41a4">  520</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#ad921c8dea76a17f4cbccf64db16a41a4">initialise_working_space</a>(<span class="keywordtype">void</span> *buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_input_channels)<span class="keyword"> const override</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    DepthwiseArgs <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>(this-&gt;m_args);</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    args.input_channels = n_input_channels;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keywordflow">return</span> WorkspaceManager::initialise(buffer, WorkspaceArgs&lt;IDepthfirstStrategy, OutputStage&gt;(this-&gt;m_strat.get(), <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, m_os));</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;  }</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno"><a class="line" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#aeefef6f2e3e51a89e0f2a0fe3868a1c5">  527</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#aeefef6f2e3e51a89e0f2a0fe3868a1c5">compute_tile_padded</a>(</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <span class="keyword">const</span> DepthwiseArgs &amp;args,</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> output_i, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> output_j,</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> output_channel_start, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> output_channel_end,</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml">TensorSpec&lt;const TInput *&gt;</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>,</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml">TensorSpec&lt;TOutput *&gt;</a> &amp;output,</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>,</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="keywordtype">void</span> *working_space_raw</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;  )<span class="keyword"> const override</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <span class="comment">// Get the working space</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keyword">auto</span> ws = <span class="keyword">reinterpret_cast&lt;</span>WorkingSpace *<span class="keyword">&gt;</span>(working_space_raw);</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> ii = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(output_i * args.stride_rows) - args.padding.top;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_pad_top = static_cast&lt;unsigned int&gt;(ii &lt; 0 ? -ii : 0);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_i = <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(ii &lt; 0 ? 0 : ii);</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> ij = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(output_j * args.stride_cols) - args.padding.left;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_pad_left = static_cast&lt;unsigned int&gt;(ij &lt; 0 ? -ij : 0);</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_j = <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(ij &lt; 0 ? 0 : ij);</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="comment">// Compute the output pointer array. We&#39;ll update this array after every</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="comment">// invocation of the kernel.</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <a class="code" href="namespacearm__conv_1_1addressing.xhtml#ac9211d5ee87bf4727d20cb4fbb73d413">fill_pointer_array</a>(</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;      ws-&gt;outptr_array, this-&gt;m_strat-&gt;get_output_rows(), this-&gt;m_strat-&gt;get_output_cols(),</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;      output.<a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#a11521c8ae37a77e6e129b4e1ea8d6fda">base</a> + output_i*output.<a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#aa6545bf4fbb65fb7740e5ca3ee13b48e">ld_row</a> + output_j*output.<a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#a8504df66802d76035da861fd5eba0115">ld_col</a> + output_channel_start,</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;      output.<a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#aa6545bf4fbb65fb7740e5ca3ee13b48e">ld_row</a>, output.<a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#a8504df66802d76035da861fd5eba0115">ld_col</a>,</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;      ws-&gt;output_buffer,</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;      0, args.output_rows - output_i, <span class="comment">// Top padding, # valid rows</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;      0, args.output_cols - output_j  <span class="comment">// Left padding, # valid columns</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    );</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="comment">// Compute the parameter stride</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    DepthwiseArgs single_iter(args);</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    single_iter.input_channels = 1;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> parameter_stride = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>StratType *<span class="keyword">&gt;</span>(this-&gt;m_strat.get())</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;      -&gt;<a class="code" href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a1acb91503a7760505b240fc04bbab5ad">get_storage_size</a>(single_iter);</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <span class="keywordflow">for</span> (; output_channel_start &lt; output_channel_end;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;         output_channel_start += args.channel_multiplier)</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    {</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;      <span class="comment">// Compute the input pointer array</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;      <span class="keyword">const</span> <span class="keyword">auto</span> input_channel = output_channel_start / args.channel_multiplier;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;      <span class="comment">// Construct the input patch</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;      <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample.xhtml">depthfirst_multiplier::PrepareInputSample&lt;is_generic&gt;::execute</a>(</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        args, ws, this-&gt;m_strat.get(),</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        input.<a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#a11521c8ae37a77e6e129b4e1ea8d6fda">base</a> + input_channel + input_i*input.<a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#aa6545bf4fbb65fb7740e5ca3ee13b48e">ld_row</a> + input_j*input.<a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#a8504df66802d76035da861fd5eba0115">ld_col</a>, input.<a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#aa6545bf4fbb65fb7740e5ca3ee13b48e">ld_row</a>, input.<a class="code" href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#a8504df66802d76035da861fd5eba0115">ld_col</a>,</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        input_pad_top, args.input_rows - input_i,</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        input_pad_left, args.input_cols - input_j</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;      );</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;      <span class="comment">// Execute the kernel</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;      <a class="code" href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml#a38a8ef712ab8f0ea28e78e0d401dd2bb">depthfirst_multiplier::StrategyType&lt;is_generic, TInput, TWeight, TOutput, TAccum, OutputStage&gt;::execute</a>(</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        args, ws, reinterpret_cast&lt;const StratType *&gt;(this-&gt;m_strat.get()), m_os, output_channel_start,</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        parameters, m_bias</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;      );</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;      <span class="comment">// Update the output pointers</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> = 0; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> &lt; this-&gt;m_strat-&gt;get_output_rows() * this-&gt;m_strat-&gt;get_output_cols(); <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>++)</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;      {</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        ws-&gt;outptr_array[<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>] += args.channel_multiplier;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;      }</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;      <span class="comment">// Progress the parameters</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;      parameters = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>) + parameter_stride;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    }</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;  }</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;};</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;}  <span class="comment">// namespace depthwise</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;}  <span class="comment">// namespace arm_conv</span></div><div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_a0f24e403e092ed08cc3d3280257460e_xhtml_a55f66724f2f14b8ab82555a03792b9b4"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_a0f24e403e092ed08cc3d3280257460e.xhtml#a55f66724f2f14b8ab82555a03792b9b4">arm_conv::depthwise::depthfirst_multiplier::StrategyType&lt; true, TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;::execute</a></div><div class="ttdeci">static void execute(const DepthwiseArgs &amp;args, const WorkspaceType *ws, const Type *strat, const arm_gemm::Requantize32 &amp;qp, const unsigned int start_output_channel, const void *parameters, const void *)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00398">depthwise_depthfirst_multiplier.hpp:398</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_requantize32_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">arm_gemm::Requantize32::bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00172">arm_gemm.hpp:172</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_xhtml_a672db57afb5b519e1406c3fd1d74c117"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a672db57afb5b519e1406c3fd1d74c117">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy::get_vl_type</a></div><div class="ttdeci">arm_gemm::VLType get_vl_type(void) const</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00139">depthwise_depthfirst_multiplier.hpp:139</a></div></div>
<div class="ttc" id="namespacearm__conv_xhtml"><div class="ttname"><a href="namespacearm__conv.xhtml">arm_conv</a></div><div class="ttdef"><b>Definition:</b> <a href="addressing_8cpp_source.xhtml#l00029">addressing.cpp:29</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1_default_t_accum_xhtml_a19462713b2aab2dae2c87c15f262c1df"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1_default_t_accum.xhtml#a19462713b2aab2dae2c87c15f262c1df">arm_conv::depthwise::DefaultTAccum::Type</a></div><div class="ttdeci">T Type</div><div class="ttdef"><b>Definition:</b> <a href="depthwise_2depthfirst__driver_8hpp_source.xhtml#l00033">depthfirst_driver.hpp:33</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4_xhtml_adde274d1c3c0eb97189328ab739a2dd0"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#adde274d1c3c0eb97189328ab739a2dd0">arm_conv::depthwise::DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;::KernelType</a></div><div class="ttdeci">std::function&lt; void(const TInput *const *, TOutput *const *, const void *, unsigned int, const arm_gemm::Requantize32 &amp;)&gt; KernelType</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00120">depthwise_depthfirst_multiplier.hpp:120</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common_xhtml"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml">arm_conv::depthwise::DepthwiseDepthfirstStrategyCommon</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst_8hpp_source.xhtml#l00042">depthwise_depthfirst.hpp:42</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_requantize32_xhtml_a3ad1d3cf7c5a8da7c3b967846f273b4e"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#a3ad1d3cf7c5a8da7c3b967846f273b4e">arm_gemm::Requantize32::per_channel_left_shifts</a></div><div class="ttdeci">const int32_t * per_channel_left_shifts</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00181">arm_gemm.hpp:181</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_xhtml"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00126">depthwise_depthfirst_multiplier.hpp:126</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped_xhtml_af32c964a5f1151f1c9b32dbdc8b1689c"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped.xhtml#af32c964a5f1151f1c9b32dbdc8b1689c">arm_conv::depthwise::DepthfirstStrategyUntyped::get_accumulator_depth_vl</a></div><div class="ttdeci">virtual unsigned int get_accumulator_depth_vl() const</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__strategies__common_8cpp_source.xhtml#l00044">depthwise_strategies_common.cpp:44</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1_tensor_spec_xhtml_a8504df66802d76035da861fd5eba0115"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#a8504df66802d76035da861fd5eba0115">arm_conv::depthwise::TensorSpec::ld_col</a></div><div class="ttdeci">size_t ld_col</div><div class="ttdef"><b>Definition:</b> <a href="depthwise_2depthfirst__driver_8hpp_source.xhtml#l00058">depthfirst_driver.hpp:58</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4_xhtml_a409288287d6409326f4dcf71d19ea12f"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#a409288287d6409326f4dcf71d19ea12f">arm_conv::depthwise::DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;::pack_parameters</a></div><div class="ttdeci">void pack_parameters(const DepthwiseArgs &amp;args, void *buffer, const void *biases, const arm_gemm::Requantize32 &amp;qp, const void *weights, size_t ld_weight_col, size_t ld_weight_row) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00105">depthwise_depthfirst_multiplier.hpp:105</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_xhtml"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml">arm_conv::depthwise::depthfirst_multiplier::InputPatchElement</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00251">depthwise_depthfirst_multiplier.hpp:251</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace_xhtml_a73a632dcf91168b6b91d726cdaefa263"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml#a73a632dcf91168b6b91d726cdaefa263">arm_conv::depthwise::depthfirst_multiplier::InputPatchElement::Workspace::input_padding</a></div><div class="ttdeci">T * input_padding</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00258">depthwise_depthfirst_multiplier.hpp:258</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_driver_xhtml"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_driver.xhtml">arm_conv::depthwise::DepthfirstDriver</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise_2depthfirst__driver_8hpp_source.xhtml#l00066">depthfirst_driver.hpp:66</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier_xhtml"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml">arm_conv::depthwise::DepthwiseDepthfirstMultiplier</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00476">depthwise_depthfirst_multiplier.hpp:476</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy_xhtml_af41768f9bbd652f57eec14b53afd6059"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#af41768f9bbd652f57eec14b53afd6059">arm_conv::depthwise::GenericDepthfirstMultiplierStrategy::pack_parameters</a></div><div class="ttdeci">void pack_parameters(const DepthwiseArgs &amp;args, void *buffer, const void *biases, const OutputStage &amp;, const void *weights, size_t ld_weight_col, size_t ld_weight_row) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00234">depthwise_depthfirst_multiplier.hpp:234</a></div></div>
<div class="ttc" id="namespacearm__conv_1_1addressing_xhtml_a719b338d6f0e8dbca5c79e186e35d7dc"><div class="ttname"><a href="namespacearm__conv_1_1addressing.xhtml#a719b338d6f0e8dbca5c79e186e35d7dc">arm_conv::addressing::fill_nchw_patch_array</a></div><div class="ttdeci">void fill_nchw_patch_array(size_t element_size, const void **dest_row_pointers_raw, void *dest_patch_raw, const unsigned int patch_rows, unsigned int patch_cols, const void *src_ptr_raw, size_t ld_row, size_t ld_col, const void *pad_row, const unsigned int pad_top, const unsigned int valid_rows, const unsigned int pad_left, const unsigned int valid_cols)</div><div class="ttdef"><b>Definition:</b> <a href="addressing_8cpp_source.xhtml#l00170">addressing.cpp:170</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6_xhtml_a58d696bd3a01bb6adb455585c1835a78"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a58d696bd3a01bb6adb455585c1835a78">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;::get_output_cols</a></div><div class="ttdeci">unsigned int get_output_cols(void) const</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00170">depthwise_depthfirst_multiplier.hpp:170</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier_xhtml_a6de6182e7c12d5492f092057f5b32d30"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a6de6182e7c12d5492f092057f5b32d30">arm_conv::depthwise::DepthwiseDepthfirstMultiplier::get_storage_size</a></div><div class="ttdeci">size_t get_storage_size(void) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00499">depthwise_depthfirst_multiplier.hpp:499</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common_xhtml_a597d78c22aeb4ab8cf434d48b9dfbedd"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#a597d78c22aeb4ab8cf434d48b9dfbedd">arm_conv::depthwise::DepthwiseDepthfirstStrategyCommon::get_kernel_cols</a></div><div class="ttdeci">unsigned int get_kernel_cols() const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst_8hpp_source.xhtml#l00072">depthwise_depthfirst.hpp:72</a></div></div>
<div class="ttc" id="namespacearm__conv_1_1depthwise_1_1interleaves_xhtml_af85eedd0781815c14baa970aeecb8c88"><div class="ttname"><a href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#af85eedd0781815c14baa970aeecb8c88">arm_conv::depthwise::interleaves::get_storage_size_generic</a></div><div class="ttdeci">size_t get_storage_size_generic(const PackingArguments &amp;packing_args, const DepthwiseArgs &amp;args)</div><div class="ttdef"><b>Definition:</b> <a href="arm__conv_2depthwise_2interleaves_2generic_8cpp_source.xhtml#l00045">generic.cpp:45</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml"><div class="ttname"><a href="namespacearm__gemm.xhtml">arm_gemm</a></div><div class="ttdef"><b>Definition:</b> <a href="barrier_8hpp_source.xhtml#l00030">barrier.hpp:30</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1_tensor_spec_xhtml_a11521c8ae37a77e6e129b4e1ea8d6fda"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#a11521c8ae37a77e6e129b4e1ea8d6fda">arm_conv::depthwise::TensorSpec::base</a></div><div class="ttdeci">T base</div><div class="ttdef"><b>Definition:</b> <a href="depthwise_2depthfirst__driver_8hpp_source.xhtml#l00057">depthfirst_driver.hpp:57</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy_xhtml_a3f549ec2869cd48051635efa4c2a257b"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a3f549ec2869cd48051635efa4c2a257b">arm_conv::depthwise::GenericDepthfirstMultiplierStrategy::get_vl_type</a></div><div class="ttdeci">arm_gemm::VLType get_vl_type(void) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00226">depthwise_depthfirst_multiplier.hpp:226</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml">arm_conv::depthwise::interleaves::PackingArguments</a></div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00036">generic.hpp:36</a></div></div>
<div class="ttc" id="generic__quantized__dot__product_8hpp_xhtml"><div class="ttname"><a href="generic__quantized__dot__product_8hpp.xhtml">generic_quantized_dot_product.hpp</a></div></div>
<div class="ttc" id="namespacearm__conv_1_1addressing_xhtml_a8907161c1f7f9e0fba0a270607659cc8"><div class="ttname"><a href="namespacearm__conv_1_1addressing.xhtml#a8907161c1f7f9e0fba0a270607659cc8">arm_conv::addressing::fill_patch_array_generic_kernel</a></div><div class="ttdeci">void fill_patch_array_generic_kernel(size_t element_size, const void **dest_pointers_raw, void *patch_raw, const unsigned int output_rows, const unsigned int output_cols, const unsigned int kernel_rows, const unsigned int kernel_cols, const unsigned int stride_rows, const unsigned int stride_cols, const void *src_ptr_raw, size_t ld_row, size_t ld_col, const void *pad_row, const unsigned int pad_top, const unsigned int valid_rows, const unsigned int pad_left, const unsigned int valid_cols)</div><div class="ttdef"><b>Definition:</b> <a href="addressing_8cpp_source.xhtml#l00258">addressing.cpp:258</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_xhtml_a38a8ef712ab8f0ea28e78e0d401dd2bb"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml#a38a8ef712ab8f0ea28e78e0d401dd2bb">arm_conv::depthwise::depthfirst_multiplier::StrategyType::execute</a></div><div class="ttdeci">static void execute(const DepthwiseArgs &amp;args, const WorkspaceType *ws, const Type *strat, const OutputStage &amp;, const unsigned int, const void *parameters, const void *)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00333">depthwise_depthfirst_multiplier.hpp:333</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01false_00_01_t_input8633ae7ee5836c9610d7020e509234f1_xhtml_a16a2cb966ea83879ace2fb499c7a3345"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01false_00_01_t_input8633ae7ee5836c9610d7020e509234f1.xhtml#a16a2cb966ea83879ace2fb499c7a3345">arm_conv::depthwise::depthfirst_multiplier::StrategyType&lt; false, TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;::execute</a></div><div class="ttdeci">static void execute(const DepthwiseArgs &amp;args, const WorkspaceType *ws, const Type *strat, const arm_gemm::Requantize32 &amp;qp, const unsigned int, const void *parameters, const void *)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00377">depthwise_depthfirst_multiplier.hpp:377</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6_xhtml_a63e2855b5eed5edcbbe03bd8493f98f5"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a63e2855b5eed5edcbbe03bd8493f98f5">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;::GenericDepthfirstMultiplierKernelStrategy</a></div><div class="ttdeci">GenericDepthfirstMultiplierKernelStrategy(unsigned int output_rows, unsigned int output_cols, arm_gemm::VLType vl_type)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00161">depthwise_depthfirst_multiplier.hpp:161</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1_tensor_spec_xhtml_aa6545bf4fbb65fb7740e5ca3ee13b48e"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml#aa6545bf4fbb65fb7740e5ca3ee13b48e">arm_conv::depthwise::TensorSpec::ld_row</a></div><div class="ttdeci">size_t ld_row</div><div class="ttdef"><b>Definition:</b> <a href="depthwise_2depthfirst__driver_8hpp_source.xhtml#l00058">depthfirst_driver.hpp:58</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1_default_output_stage_xhtml_ad1c388be4cf6c188965e6b72059cfcfc"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1_default_output_stage.xhtml#ad1c388be4cf6c188965e6b72059cfcfc">arm_conv::depthwise::DefaultOutputStage::Type</a></div><div class="ttdeci">Nothing Type</div><div class="ttdef"><b>Definition:</b> <a href="depthwise_2depthfirst__driver_8hpp_source.xhtml#l00037">depthfirst_driver.hpp:37</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier_xhtml_ad921c8dea76a17f4cbccf64db16a41a4"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#ad921c8dea76a17f4cbccf64db16a41a4">arm_conv::depthwise::DepthwiseDepthfirstMultiplier::initialise_working_space</a></div><div class="ttdeci">void initialise_working_space(void *buffer, unsigned int n_input_channels) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00520">depthwise_depthfirst_multiplier.hpp:520</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_xhtml_a88ca7ecdfec85e09635626174457b48f"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a88ca7ecdfec85e09635626174457b48f">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy::KernelType</a></div><div class="ttdeci">std::function&lt; void(const TInput *const *, TOutput *const *, const TWeight *, const TAccum *, unsigned int, unsigned int, TAccum, TAccum)&gt; KernelType</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00150">depthwise_depthfirst_multiplier.hpp:150</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01true_01_4_xhtml_a0039b8384d2e35e51dc14335e54f7d52"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01true_01_4.xhtml#a0039b8384d2e35e51dc14335e54f7d52">arm_conv::depthwise::depthfirst_multiplier::PrepareInputSample&lt; true &gt;::execute</a></div><div class="ttdeci">static void execute(const DepthwiseArgs &amp;args, WorkspaceType *ws, const StrategyType *strat, T *base_ptr, size_t ld_row, size_t ld_col, const unsigned int input_pad_top, const unsigned int valid_rows, const unsigned int input_pad_left, const unsigned int valid_cols)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00448">depthwise_depthfirst_multiplier.hpp:448</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_xhtml_a63e2855b5eed5edcbbe03bd8493f98f5"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a63e2855b5eed5edcbbe03bd8493f98f5">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy::GenericDepthfirstMultiplierKernelStrategy</a></div><div class="ttdeci">GenericDepthfirstMultiplierKernelStrategy(unsigned int output_rows, unsigned int output_cols, arm_gemm::VLType vl_type)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00132">depthwise_depthfirst_multiplier.hpp:132</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace_xhtml_a531715bab2ce1c06d09b1bf760ba6e62"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml#a531715bab2ce1c06d09b1bf760ba6e62">arm_conv::depthwise::depthfirst_multiplier::InputPatchElement::Workspace::input_rows</a></div><div class="ttdeci">const T ** input_rows</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00257">depthwise_depthfirst_multiplier.hpp:257</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_abb222b6342b2b9056ec65056984d5e21"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">arm_compute::test::parameters</a></div><div class="ttdeci">std::unique_ptr&lt; ParametersLibrary &gt; parameters</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00046">Framework.cpp:46</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4_xhtml"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml">arm_conv::depthwise::DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00093">depthwise_depthfirst_multiplier.hpp:93</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_xhtml_a58d696bd3a01bb6adb455585c1835a78"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a58d696bd3a01bb6adb455585c1835a78">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy::get_output_cols</a></div><div class="ttdeci">unsigned int get_output_cols(void) const</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00141">depthwise_depthfirst_multiplier.hpp:141</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped_xhtml_a6ea077ec0229769c0b470fe86fea145a"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_strategy_untyped.xhtml#a6ea077ec0229769c0b470fe86fea145a">arm_conv::depthwise::DepthfirstStrategyUntyped::get_vl_type</a></div><div class="ttdeci">virtual arm_gemm::VLType get_vl_type() const =0</div></div>
<div class="ttc" id="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized_xhtml_a3c07bfae0d3b8aba15074993bb857ac8"><div class="ttname"><a href="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml#a3c07bfae0d3b8aba15074993bb857ac8">arm_conv::depthwise::interleaves::quantized::get_storage_size</a></div><div class="ttdeci">size_t get_storage_size(const DepthwiseArgs &amp;args, const arm_gemm::VLType vl_type, const unsigned int accumulator_depth_vl)</div><div class="ttdef"><b>Definition:</b> <a href="generic__quantized__dot__product_8cpp_source.xhtml#l00033">generic_quantized_dot_product.cpp:33</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_xhtml_a3fcdbc0eeb82102e92f066c1b65473ab"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy.xhtml#a3fcdbc0eeb82102e92f066c1b65473ab">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy::get_output_rows</a></div><div class="ttdeci">unsigned int get_output_rows(void) const</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00140">depthwise_depthfirst_multiplier.hpp:140</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_xhtml"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml">arm_conv::depthwise::DepthfirstMultiplierStrategy</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00040">depthwise_depthfirst_multiplier.hpp:40</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier_xhtml_a687bf0465cc14a64b153fa47d61c66d1"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a687bf0465cc14a64b153fa47d61c66d1">arm_conv::depthwise::DepthwiseDepthfirstMultiplier::get_working_size_per_thread</a></div><div class="ttdeci">size_t get_working_size_per_thread(const unsigned int n_input_channels) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00513">depthwise_depthfirst_multiplier.hpp:513</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy_xhtml_a683b87f31fca586a59cc832bd68ebbe6"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a683b87f31fca586a59cc832bd68ebbe6">arm_conv::depthwise::GenericDepthfirstMultiplierStrategy::get_kernel</a></div><div class="ttdeci">const KernelStrategyType::KernelType get_kernel(void) const</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00227">depthwise_depthfirst_multiplier.hpp:227</a></div></div>
<div class="ttc" id="depthwise__depthfirst_8hpp_xhtml"><div class="ttname"><a href="depthwise__depthfirst_8hpp.xhtml">depthwise_depthfirst.hpp</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common_xhtml_ae182865cdff73ca56af4666d7838db03"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#ae182865cdff73ca56af4666d7838db03">arm_conv::depthwise::DepthwiseDepthfirstStrategyCommon&lt; TInput, TWeight, TOutput, TAccum, Nothing &gt;::get_output_rows</a></div><div class="ttdeci">unsigned int get_output_rows() const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst_8hpp_source.xhtml#l00068">depthwise_depthfirst.hpp:68</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_xhtml_ac9b9082d4ed031f4d6a6a497c2b9f889"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml#ac9b9082d4ed031f4d6a6a497c2b9f889">arm_conv::depthwise::depthfirst_multiplier::InputPatchElement::initialise</a></div><div class="ttdeci">static void * initialise(WorkspaceType *ws, void *buffer, const WorkspaceArgs&lt; IDepthfirstStrategy, OutputStage &gt; &amp;args)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00268">depthwise_depthfirst_multiplier.hpp:268</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_7baeeac6248d2dc629261e41fed0f86e_xhtml_a8b3ad2cafbe109e2b91d4944e55a1c52"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_3_01true_00_01_t_input_7baeeac6248d2dc629261e41fed0f86e.xhtml#a8b3ad2cafbe109e2b91d4944e55a1c52">arm_conv::depthwise::depthfirst_multiplier::StrategyType&lt; true, TInput, TWeight, TOutput, TAccum, OutputStage &gt;::execute</a></div><div class="ttdeci">static void execute(const DepthwiseArgs &amp;args, const WorkspaceType *ws, const Type *strat, const OutputStage &amp;, const unsigned int start_output_channel, const void *parameters, const void *bias)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00354">depthwise_depthfirst_multiplier.hpp:354</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_requantize32_xhtml_aef9f2c9dc4dbdef956505940d6b2895e"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#aef9f2c9dc4dbdef956505940d6b2895e">arm_gemm::Requantize32::per_channel_right_shifts</a></div><div class="ttdeci">const int32_t * per_channel_right_shifts</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00182">arm_gemm.hpp:182</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_xhtml"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample.xhtml">arm_conv::depthwise::depthfirst_multiplier::PrepareInputSample</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00423">depthwise_depthfirst_multiplier.hpp:423</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_xhtml_a4609b82cd2843c9c0f63958e32a67f87"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a4609b82cd2843c9c0f63958e32a67f87">arm_conv::depthwise::DepthfirstMultiplierStrategy::pack_parameters</a></div><div class="ttdeci">void pack_parameters(const DepthwiseArgs &amp;args, void *buffer, const void *biases, const Nothing &amp;, const void *weights, size_t ld_weight_col, size_t ld_weight_row) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00073">depthwise_depthfirst_multiplier.hpp:73</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_requantize32_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00169">arm_gemm.hpp:169</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace_xhtml_aae6526cb20bf969aeb25f5cce559c477"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml#aae6526cb20bf969aeb25f5cce559c477">arm_conv::depthwise::depthfirst_multiplier::InputPatchElement::Workspace::input_patch</a></div><div class="ttdeci">T * input_patch</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00259">depthwise_depthfirst_multiplier.hpp:259</a></div></div>
<div class="ttc" id="namespacearm__conv_1_1addressing_xhtml_ac9211d5ee87bf4727d20cb4fbb73d413"><div class="ttname"><a href="namespacearm__conv_1_1addressing.xhtml#ac9211d5ee87bf4727d20cb4fbb73d413">arm_conv::addressing::fill_pointer_array</a></div><div class="ttdeci">void fill_pointer_array(size_t element_size, void **dest_raw, const unsigned int array_rows, const unsigned int array_cols, void *base_ptr_raw, size_t ld_row, size_t ld_col, void *pad_buffer_raw, const unsigned int pad_top, const unsigned int valid_rows, const unsigned int pad_left, const unsigned int valid_cols)</div><div class="ttdef"><b>Definition:</b> <a href="addressing_8cpp_source.xhtml#l00032">addressing.cpp:32</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6_xhtml_a619d60ec4200c67aea43e047966832b2"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a619d60ec4200c67aea43e047966832b2">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;::KernelType</a></div><div class="ttdeci">std::function&lt; void(const TInput *const *, TOutput *const *, const TWeight *, const int32_t *, unsigned int, unsigned int, const int32_t *, const int32_t *, const int32_t *, const arm_gemm::Requantize32 &amp;)&gt; KernelType</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00180">depthwise_depthfirst_multiplier.hpp:180</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01false_01_4_xhtml_ab1ee542036ed325ccb2bbe773c082f81"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_prepare_input_sample_3_01false_01_4.xhtml#ab1ee542036ed325ccb2bbe773c082f81">arm_conv::depthwise::depthfirst_multiplier::PrepareInputSample&lt; false &gt;::execute</a></div><div class="ttdeci">static void execute(const DepthwiseArgs &amp;, WorkspaceType *ws, const StrategyType *strat, T *base_ptr, size_t ld_row, size_t ld_col, const unsigned int input_pad_top, const unsigned int valid_rows, const unsigned int input_pad_left, const unsigned int valid_cols)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00428">depthwise_depthfirst_multiplier.hpp:428</a></div></div>
<div class="ttc" id="namespacearm__conv_1_1depthwise_xhtml_a301c401a1e9a5ac74367c4719a185aa4"><div class="ttname"><a href="namespacearm__conv_1_1depthwise.xhtml#a301c401a1e9a5ac74367c4719a185aa4">arm_conv::depthwise::depthwise</a></div><div class="ttdeci">template UniqueDepthwiseCommon&lt; float &gt; depthwise(const DepthwiseArgs &amp;, const Nothing &amp;)</div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier_xhtml_aeefef6f2e3e51a89e0f2a0fe3868a1c5"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#aeefef6f2e3e51a89e0f2a0fe3868a1c5">arm_conv::depthwise::DepthwiseDepthfirstMultiplier::compute_tile_padded</a></div><div class="ttdeci">void compute_tile_padded(const DepthwiseArgs &amp;args, unsigned int output_i, unsigned int output_j, unsigned int output_channel_start, unsigned int output_channel_end, const TensorSpec&lt; const TInput *&gt; &amp;input, const TensorSpec&lt; TOutput *&gt; &amp;output, const void *parameters, void *working_space_raw) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00527">depthwise_depthfirst_multiplier.hpp:527</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_xhtml_a213a049a509b6b12d98016281ece3452"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a213a049a509b6b12d98016281ece3452">arm_conv::depthwise::DepthfirstMultiplierStrategy::get_kernel</a></div><div class="ttdeci">virtual KernelType get_kernel(void) const =0</div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy_xhtml_aa9a277424e7b2ccc8d7b3aa3c6b6cca3"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#aa9a277424e7b2ccc8d7b3aa3c6b6cca3">arm_conv::depthwise::GenericDepthfirstMultiplierStrategy::GenericDepthfirstMultiplierStrategy</a></div><div class="ttdeci">GenericDepthfirstMultiplierStrategy(KernelStrategyType *kern, const DepthwiseArgs &amp;args)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00216">depthwise_depthfirst_multiplier.hpp:216</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4_xhtml_a213a049a509b6b12d98016281ece3452"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#a213a049a509b6b12d98016281ece3452">arm_conv::depthwise::DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;::get_kernel</a></div><div class="ttdeci">virtual KernelType get_kernel(void) const =0</div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier_xhtml_a8214e0e5ed09ebfc669544d7631e1b2d"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a8214e0e5ed09ebfc669544d7631e1b2d">arm_conv::depthwise::DepthwiseDepthfirstMultiplier::DepthwiseDepthfirstMultiplier</a></div><div class="ttdeci">DepthwiseDepthfirstMultiplier(StratType *const strat, const DepthwiseArgs &amp;args, const OutputStage &amp;os={})</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00491">depthwise_depthfirst_multiplier.hpp:491</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6_xhtml_a672db57afb5b519e1406c3fd1d74c117"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a672db57afb5b519e1406c3fd1d74c117">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;::get_vl_type</a></div><div class="ttdeci">arm_gemm::VLType get_vl_type(void) const</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00168">depthwise_depthfirst_multiplier.hpp:168</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_xhtml_aa122caf1edb725491f3966b18d8c8400"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element.xhtml#aa122caf1edb725491f3966b18d8c8400">arm_conv::depthwise::depthfirst_multiplier::InputPatchElement::get_element_size</a></div><div class="ttdeci">static size_t get_element_size(const WorkspaceArgs&lt; IDepthfirstStrategy, OutputStage &gt; &amp;args)</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00262">depthwise_depthfirst_multiplier.hpp:262</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1_tensor_spec_xhtml"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1_tensor_spec.xhtml">arm_conv::depthwise::TensorSpec</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise_2depthfirst__driver_8hpp_source.xhtml#l00055">depthfirst_driver.hpp:55</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_xhtml_a86b843e6e497f3428f042a153be8e3de"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a86b843e6e497f3428f042a153be8e3de">arm_conv::depthwise::DepthfirstMultiplierStrategy::KernelType</a></div><div class="ttdeci">std::function&lt; void(const TInput *const *, TOutput *const *, const void *, unsigned int, TAccum, TAccum)&gt; KernelType</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00087">depthwise_depthfirst_multiplier.hpp:87</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common_xhtml_a1fe0caf3ebe69821625efdba45bc2ccb"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#a1fe0caf3ebe69821625efdba45bc2ccb">arm_conv::depthwise::DepthwiseDepthfirstStrategyCommon&lt; TInput, TWeight, TOutput, TAccum, Nothing &gt;::get_output_cols</a></div><div class="ttdeci">unsigned int get_output_cols() const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst_8hpp_source.xhtml#l00069">depthwise_depthfirst.hpp:69</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4_xhtml_a1acb91503a7760505b240fc04bbab5ad"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_3_01_t_input_00_01_t_weight_00_01_t_output_00_01int32__t_01_4.xhtml#a1acb91503a7760505b240fc04bbab5ad">arm_conv::depthwise::DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;::get_storage_size</a></div><div class="ttdeci">size_t get_storage_size(const DepthwiseArgs &amp;args) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00100">depthwise_depthfirst_multiplier.hpp:100</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type_xhtml"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_strategy_type.xhtml">arm_conv::depthwise::depthfirst_multiplier::StrategyType</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00328">depthwise_depthfirst_multiplier.hpp:328</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_requantize32_xhtml_aa081b66a13642ceee7dfe18b03643557"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#aa081b66a13642ceee7dfe18b03643557">arm_gemm::Requantize32::per_channel_muls</a></div><div class="ttdeci">const int32_t * per_channel_muls</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00183">arm_gemm.hpp:183</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common_xhtml_a61022a026be7541324ca329c3808c4e3"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_strategy_common.xhtml#a61022a026be7541324ca329c3808c4e3">arm_conv::depthwise::DepthwiseDepthfirstStrategyCommon::get_kernel_rows</a></div><div class="ttdeci">unsigned int get_kernel_rows() const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst_8hpp_source.xhtml#l00071">depthwise_depthfirst.hpp:71</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6_xhtml_a3fcdbc0eeb82102e92f066c1b65473ab"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_kernel_strategy_3_01_t_input_00_01b88b0a2261e05b5aca67d48bf37d5ac6.xhtml#a3fcdbc0eeb82102e92f066c1b65473ab">arm_conv::depthwise::GenericDepthfirstMultiplierKernelStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;::get_output_rows</a></div><div class="ttdeci">unsigned int get_output_rows(void) const</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00169">depthwise_depthfirst_multiplier.hpp:169</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy_xhtml_a1acb91503a7760505b240fc04bbab5ad"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthfirst_multiplier_strategy.xhtml#a1acb91503a7760505b240fc04bbab5ad">arm_conv::depthwise::DepthfirstMultiplierStrategy::get_storage_size</a></div><div class="ttdeci">size_t get_storage_size(const DepthwiseArgs &amp;args) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00068">depthwise_depthfirst_multiplier.hpp:68</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a764ff3bbe137fc7792aee26f022aa29d"><div class="ttname"><a href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a></div><div class="ttdeci">VLType</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00080">utils.hpp:80</a></div></div>
<div class="ttc" id="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace_xhtml"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1depthfirst__multiplier_1_1_input_patch_element_1_1_workspace.xhtml">arm_conv::depthwise::depthfirst_multiplier::InputPatchElement::Workspace</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00254">depthwise_depthfirst_multiplier.hpp:254</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier_xhtml_a4e86e96b1933ec8bd8eae5f55654d111"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_depthwise_depthfirst_multiplier.xhtml#a4e86e96b1933ec8bd8eae5f55654d111">arm_conv::depthwise::DepthwiseDepthfirstMultiplier::pack_parameters</a></div><div class="ttdeci">void pack_parameters(void *buffer, const void *biases, const void *weights, size_t ld_weight_col, size_t ld_weight_row) override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00505">depthwise_depthfirst_multiplier.hpp:505</a></div></div>
<div class="ttc" id="namespacearm__conv_1_1depthwise_1_1interleaves_xhtml_a3b433ad9e7b77bf0702700e2006e4210"><div class="ttname"><a href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#a3b433ad9e7b77bf0702700e2006e4210">arm_conv::depthwise::interleaves::pack_parameters_generic</a></div><div class="ttdeci">void pack_parameters_generic(const PackingArguments &amp;packing_args, const DepthwiseArgs &amp;args, void *buffer_raw, const void *biases_raw, const void *weights_raw, size_t ld_weight_col, size_t ld_weight_row)</div><div class="ttdef"><b>Definition:</b> <a href="arm__conv_2depthwise_2interleaves_2generic_8cpp_source.xhtml#l00067">generic.cpp:67</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy_xhtml_a1acb91503a7760505b240fc04bbab5ad"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml#a1acb91503a7760505b240fc04bbab5ad">arm_conv::depthwise::GenericDepthfirstMultiplierStrategy::get_storage_size</a></div><div class="ttdeci">size_t get_storage_size(const DepthwiseArgs &amp;args) const override</div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00229">depthwise_depthfirst_multiplier.hpp:229</a></div></div>
<div class="ttc" id="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy_xhtml"><div class="ttname"><a href="classarm__conv_1_1depthwise_1_1_generic_depthfirst_multiplier_strategy.xhtml">arm_conv::depthwise::GenericDepthfirstMultiplierStrategy</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00189">depthwise_depthfirst_multiplier.hpp:189</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00292">working_space.hpp:292</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_ea98ae4f30fbc97db6231c6535bdb2d9.xhtml">arm_conv</a></li><li class="navelem"><a class="el" href="dir_abb214ad2a926c78a0f27cabc6cb4a00.xhtml">depthwise</a></li><li class="navelem"><a class="el" href="depthwise__depthfirst__multiplier_8hpp.xhtml">depthwise_depthfirst_multiplier.hpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:25 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
